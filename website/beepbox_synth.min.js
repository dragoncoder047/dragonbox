var beepbox=(()=>{var en=Object.defineProperty;var An=Object.getOwnPropertyDescriptor;var zn=Object.getOwnPropertyNames;var Wn=Object.prototype.hasOwnProperty;var Bn=(l,e)=>{for(var a in e)en(l,a,{get:e[a],enumerable:!0})},Nn=(l,e,a,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of zn(e))!Wn.call(l,n)&&n!==a&&en(l,n,{get:()=>e[n],enumerable:!(i=An(e,n))||i.enumerable});return l};var On=l=>Nn(en({},"__esModule",{value:!0}),l);var Kn={};Bn(Kn,{Config:()=>t,EnvelopeType:()=>st,FilterType:()=>bt,InstrumentType:()=>xt,Synth:()=>ue});var tn=class{activeEvents;listeners;constructor(){this.activeEvents=[],this.listeners={}}raise(e,a,i){if(this.listeners[e]!=null){this.activeEvents.push(e);for(let n=0;n<this.listeners[e].length;n++)this.listeners[e][n](a,i);this.activeEvents.pop()}}listen(e,a){this.listeners[e]==null&&(this.listeners[e]=[]),this.listeners[e].push(a)}unlisten(e,a){if(this.listeners[e]==null)return;let i=this.listeners[e].indexOf(a);i!=-1&&this.listeners[e].splice(i,1)}unlistenAll(e){this.listeners[e]!=null&&(this.listeners[e]=[])}},En=new tn;var Ht=class{instruments=[];muted=!1;singleSeamlessInstrument=null};var _e=class{Z=1;Y=[void 0];_=0;K=0;J=0;pushFront(e){this.J>=this.Z&&this.pe(),this.K=this.K-1&this._,this.Y[this.K]=e,this.J++}pushBack(e){this.J>=this.Z&&this.pe(),this.Y[this.K+this.J&this._]=e,this.J++}popFront(){if(this.J<=0)throw new Error("No elements left to pop.");let e=this.Y[this.K];return this.Y[this.K]=void 0,this.K=this.K+1&this._,this.J--,e}popBack(){if(this.J<=0)throw new Error("No elements left to pop.");this.J--;let e=this.K+this.J&this._,a=this.Y[e];return this.Y[e]=void 0,a}peakFront(){if(this.J<=0)throw new Error("No elements left to pop.");return this.Y[this.K]}peakBack(){if(this.J<=0)throw new Error("No elements left to pop.");return this.Y[this.K+this.J-1&this._]}count(){return this.J}set(e,a){if(e<0||e>=this.J)throw new Error("Invalid index");this.Y[this.K+e&this._]=a}get(e){if(e<0||e>=this.J)throw new Error("Invalid index");return this.Y[this.K+e&this._]}remove(e){if(e<0||e>=this.J)throw new Error("Invalid index");if(e<=this.J>>1){for(;e>0;)this.set(e,this.get(e-1)),e--;this.popFront()}else{for(e++;e<this.J;)this.set(e-1,this.get(e)),e++;this.popBack()}}pe(){if(this.Z>=1073741824)throw new Error(`wtf?? requested more than ${this.Z} elements in deque`);this.Z=this.Z<<1;let e=this.Y,a=new Array(this.Z),i=this.J|0,n=this.K|0;for(let s=0;s<i;s++)a[s]=e[n+s&this._];for(let s=i;s<this.Z;s++)a[s]=void 0;this.K=0,this.Y=a,this._=this.Z-1}};var Hn;function it(l,e=0){let a=typeof l=="string"?(Hn??=new TextEncoder).encode(l):l,i=a,n=e+374761393&4294967295,s=0;if(i.length>=16){let u=[e+2654435761+2246822519&4294967295,e+2246822519&4294967295,e+0&4294967295,e-2654435761&4294967295],c=a,v=c.length-16,o=0;for(s=0;(s&4294967280)<=v;s+=4){let y=s,d=c[y+0]+(c[y+1]<<8),g=c[y+2]+(c[y+3]<<8),h=d*2246822519+(g*2246822519<<16),m=u[o]+h&4294967295;m=m<<13|m>>>19;let p=m&65535,I=m>>>16;u[o]=p*2654435761+(I*2654435761<<16)&4294967295,o=o+1&3}n=(u[0]<<1|u[0]>>>31)+(u[1]<<7|u[1]>>>25)+(u[2]<<12|u[2]>>>20)+(u[3]<<18|u[3]>>>14)&4294967295}n=n+a.length&4294967295;let r=a.length-4;for(;s<=r;s+=4){let u=s,c=i[u+0]+(i[u+1]<<8),v=i[u+2]+(i[u+3]<<8),o=c*3266489917+(v*3266489917<<16);n=n+o&4294967295,n=n<<17|n>>>15,n=(n&65535)*668265263+((n>>>16)*668265263<<16)&4294967295}for(;s<i.length;++s){let u=i[s];n=n+u*374761393,n=n<<11|n>>>21,n=(n&65535)*2654435761+((n>>>16)*2654435761<<16)&4294967295}return n=n^n>>>15,n=((n&65535)*2246822519&4294967295)+((n>>>16)*2246822519<<16),n=n^n>>>13,n=((n&65535)*3266489917&4294967295)+((n>>>16)*3266489917<<16),n=n^n>>>16,n<0?n+4294967296:n}var bt=(n=>(n[n.lowPass=0]="lowPass",n[n.highPass=1]="highPass",n[n.peak=2]="peak",n[n.length=3]="length",n))(bt||{});var st=(p=>(p[p.none=0]="none",p[p.noteSize=1]="noteSize",p[p.pitch=2]="pitch",p[p.pseudorandom=3]="pseudorandom",p[p.punch=4]="punch",p[p.flare=5]="flare",p[p.twang=6]="twang",p[p.swell=7]="swell",p[p.lfo=8]="lfo",p[p.tremolo2=9]="tremolo2",p[p.decay=10]="decay",p[p.wibble=11]="wibble",p[p.linear=12]="linear",p[p.rise=13]="rise",p[p.blip=14]="blip",p[p.fall=15]="fall",p))(st||{}),xt=(g=>(g[g.chip=0]="chip",g[g.fm=1]="fm",g[g.noise=2]="noise",g[g.spectrum=3]="spectrum",g[g.drumset=4]="drumset",g[g.harmonics=5]="harmonics",g[g.pwm=6]="pwm",g[g.pickedString=7]="pickedString",g[g.supersaw=8]="supersaw",g[g.customChipWave=9]="customChipWave",g[g.mod=10]="mod",g[g.fm6op=11]="fm6op",g[g.length=12]="length",g))(xt||{}),Ue=["chip","FM","noise","spectrum","drumset","harmonics","pulse width","picked string","supersaw","chip (custom)","mod","FM (6-op)"];var nn=class{statusTable;urlTable;totalSamples;samplesLoaded;constructor(){this.statusTable={},this.urlTable={},this.totalSamples=0,this.samplesLoaded=0}},ye=new nn,et=class extends Event{totalSamples;samplesLoaded;constructor(e,a){super("sampleloaded"),this.totalSamples=e,this.samplesLoaded=a}},an=class extends EventTarget{constructor(){super()}},yt=new an;async function Cn(l,e,a,i,n){let s=new AudioContext({sampleRate:n}),r=!1,u=t.chipWaves[e],c=t.rawChipWaves[e],v=t.rawRawChipWaves[e];fetch(l).then(o=>o.ok?o.arrayBuffer():(ye.statusTable[e]=2,Promise.reject(new Error("Couldn't load sample")))).then(o=>s.decodeAudioData(o)).then(o=>{let y=K(Array.from(o.getChannelData(0)));var d=y;o.numberOfChannels>1?d=K(Array.from(o.getChannelData(1))):d=y;let g=St(y),h=St(d);u.samples=g,u.samplesR=h,c.samples=y,c.samplesR=d,v.samples=y,v.samplesR=d,i.isUsingAdvancedLoopControls&&(a.chipWaveLoopStart=i.chipWaveLoopStart!=null?i.chipWaveLoopStart:0,a.chipWaveLoopEnd=i.chipWaveLoopEnd!=null?i.chipWaveLoopEnd:y.length-1,a.chipWaveLoopMode=i.chipWaveLoopMode!=null?i.chipWaveLoopMode:0,a.chipWavePlayBackwards=i.chipWavePlayBackwards,a.chipWaveStartOffset=i.chipWaveStartOffset!=null?i.chipWaveStartOffset:0),ye.samplesLoaded++,ye.statusTable[e]=1,yt.dispatchEvent(new et(ye.totalSamples,ye.samplesLoaded)),r||(r=!0,s.close())}).catch(o=>{ye.statusTable[e]=2,alert("Failed to load "+l+`:
`+o),r||(r=!0,s.close())})}function at(l){return new Promise((a,i)=>{if(!t.willReloadForCustomSamples){let n=document.createElement("script");n.src=l,document.head.appendChild(n),n.addEventListener("load",s=>{a()})}})}function Xe(l){let a=t.chipWaves[0].samples,i=t.rawRawChipWaves[0].samples;if(l==0){let n=[{name:"paandorasbox kick",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox snare",expression:3,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox piano1",expression:3,isSampled:!0,isPercussion:!1,extraSampleDetune:2},{name:"paandorasbox WOW",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"paandorasbox overdrive",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-2},{name:"paandorasbox trumpet",expression:3,isSampled:!0,isPercussion:!1,extraSampleDetune:1.2},{name:"paandorasbox saxophone",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-5},{name:"paandorasbox orchestrahit",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:4.2},{name:"paandorasbox detatched violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:4.2},{name:"paandorasbox synth",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-.8},{name:"paandorasbox sonic3snare",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox come on",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"paandorasbox choir",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-3},{name:"paandorasbox overdriveguitar",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-6.2},{name:"paandorasbox flute",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-6},{name:"paandorasbox legato violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-28},{name:"paandorasbox tremolo violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-33},{name:"paandorasbox amen break",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-55},{name:"paandorasbox pizzicato violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-11},{name:"paandorasbox tim allen grunt",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-20},{name:"paandorasbox tuba",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:44},{name:"paandorasbox loopingcymbal",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-17},{name:"paandorasbox standardkick",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-7},{name:"paandorasbox standardsnare",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox closedhihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:5},{name:"paandorasbox foothihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:4},{name:"paandorasbox openhihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-31},{name:"paandorasbox crashcymbal",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-43},{name:"paandorasbox pianoC4",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-42.5},{name:"paandorasbox liver pad",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-22.5},{name:"paandorasbox marimba",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-15.5},{name:"paandorasbox susdotwav",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-24.5},{name:"paandorasbox wackyboxtts",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-17.5},{name:"paandorasbox peppersteak_1",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-42.2},{name:"paandorasbox peppersteak_2",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-47},{name:"paandorasbox vinyl_noise",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-50},{name:"paandorasbeta slap bass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-56},{name:"paandorasbeta HD EB overdrive guitar",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-60},{name:"paandorasbeta sunsoft bass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-18.5},{name:"paandorasbeta masculine choir",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-50},{name:"paandorasbeta feminine choir",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-60.5},{name:"paandorasbeta tololoche",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-29.5},{name:"paandorasbeta harp",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-54},{name:"paandorasbeta pan flute",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-58},{name:"paandorasbeta krumhorn",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-46},{name:"paandorasbeta timpani",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-50},{name:"paandorasbeta crowd hey",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-29},{name:"paandorasbeta wario land 4 brass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-68},{name:"paandorasbeta wario land 4 rock organ",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-63},{name:"paandorasbeta wario land 4 DAOW",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-35},{name:"paandorasbeta wario land 4 hour chime",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-47.5},{name:"paandorasbeta wario land 4 tick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-12.5},{name:"paandorasbeta kirby kick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby snare",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby bongo",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby click",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta sonor kick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28.5},{name:"paandorasbeta sonor snare",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28.5},{name:"paandorasbeta sonor snare (left hand)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-22.5},{name:"paandorasbeta sonor snare (right hand)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-22.5},{name:"paandorasbeta sonor high tom",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-41.5},{name:"paandorasbeta sonor low tom",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-41.5},{name:"paandorasbeta sonor hihat (closed)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-17},{name:"paandorasbeta sonor hihat (half opened)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-21},{name:"paandorasbeta sonor hihat (open)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-54.5},{name:"paandorasbeta sonor hihat (open tip)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-43.5},{name:"paandorasbeta sonor hihat (pedal)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28},{name:"paandorasbeta sonor crash",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-51},{name:"paandorasbeta sonor crash (tip)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-50.5},{name:"paandorasbeta sonor ride",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46}];ye.totalSamples+=n.length;let s=t.rawRawChipWaves.length;for(let r of n){let u=t.rawRawChipWaves.length,c={index:u,name:r.name,expression:r.expression,isSampled:r.isSampled,isPercussion:r.isPercussion,extraSampleDetune:r.extraSampleDetune,samples:i},v={index:u,name:r.name,expression:r.expression,isSampled:r.isSampled,isPercussion:r.isPercussion,extraSampleDetune:r.extraSampleDetune,samples:i},o={index:u,name:r.name,expression:r.expression,isSampled:r.isSampled,isPercussion:r.isPercussion,extraSampleDetune:r.extraSampleDetune,samples:a};t.rawRawChipWaves[u]=v,t.rawRawChipWaves.dictionary[r.name]=v,t.rawChipWaves[u]=c,t.rawChipWaves.dictionary[r.name]=c,t.chipWaves[u]=o,t.chipWaves.dictionary[r.name]=c,ye.statusTable[u]=0,ye.urlTable[u]="legacySamples"}at("samples.js").then(()=>at("samples2.js")).then(()=>at("samples3.js")).then(()=>at("drumsamples.js")).then(()=>at("wario_samples.js")).then(()=>at("kirby_samples.js")).then(()=>{let r=[K(kicksample),K(snaresample),K(pianosample),K(WOWsample),K(overdrivesample),K(trumpetsample),K(saxophonesample),K(orchhitsample),K(detatchedviolinsample),K(synthsample),K(sonic3snaresample),K(comeonsample),K(choirsample),K(overdrivensample),K(flutesample),K(legatoviolinsample),K(tremoloviolinsample),K(amenbreaksample),K(pizzicatoviolinsample),K(timallengruntsample),K(tubasample),K(loopingcymbalsample),K(kickdrumsample),K(snaredrumsample),K(closedhihatsample),K(foothihatsample),K(openhihatsample),K(crashsample),K(pianoC4sample),K(liverpadsample),K(marimbasample),K(susdotwavsample),K(wackyboxttssample),K(peppersteak1),K(peppersteak2),K(vinyl),K(slapbass),K(hdeboverdrive),K(sunsoftbass),K(masculinechoir),K(femininechoir),K(southtololoche),K(harp),K(panflute),K(krumhorn),K(timpani),K(crowdhey),K(warioland4brass),K(warioland4organ),K(warioland4daow),K(warioland4hourchime),K(warioland4tick),K(kirbykick),K(kirbysnare),K(kirbybongo),K(kirbyclick),K(funkkick),K(funksnare),K(funksnareleft),K(funksnareright),K(funktomhigh),K(funktomlow),K(funkhihatclosed),K(funkhihathalfopen),K(funkhihatopen),K(funkhihatopentip),K(funkhihatfoot),K(funkcrash),K(funkcrashtip),K(funkride)],u=0;for(let c of r){let v=s+u;t.rawChipWaves[v].samples=c,t.rawRawChipWaves[v].samples=c,t.chipWaves[v].samples=St(c),ye.statusTable[v]=1,ye.samplesLoaded++,yt.dispatchEvent(new et(ye.totalSamples,ye.samplesLoaded)),u++}})}else if(l==1){let n=[{name:"chronoperc1final",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"synthkickfm",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"mcwoodclick1",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"acoustic snare",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0}];ye.totalSamples+=n.length;let s=t.rawRawChipWaves.length;for(let r of n){let u=t.rawRawChipWaves.length,c={index:u,name:r.name,expression:r.expression,isSampled:r.isSampled,isPercussion:r.isPercussion,extraSampleDetune:r.extraSampleDetune,samples:i},v={index:u,name:r.name,expression:r.expression,isSampled:r.isSampled,isPercussion:r.isPercussion,extraSampleDetune:r.extraSampleDetune,samples:i},o={index:u,name:r.name,expression:r.expression,isSampled:r.isSampled,isPercussion:r.isPercussion,extraSampleDetune:r.extraSampleDetune,samples:a};t.rawRawChipWaves[u]=v,t.rawRawChipWaves.dictionary[r.name]=v,t.rawChipWaves[u]=c,t.rawChipWaves.dictionary[r.name]=c,t.chipWaves[u]=o,t.chipWaves.dictionary[r.name]=c,ye.statusTable[u]=0,ye.urlTable[u]="nintariboxSamples"}at("nintaribox_samples.js").then(()=>{let r=[K(chronoperc1finalsample),K(synthkickfmsample),K(woodclicksample),K(acousticsnaresample)],u=0;for(let c of r){let v=s+u;t.rawChipWaves[v].samples=c,t.rawRawChipWaves[v].samples=c,t.chipWaves[v].samples=St(c),ye.statusTable[v]=1,ye.samplesLoaded++,yt.dispatchEvent(new et(ye.totalSamples,ye.samplesLoaded)),u++}})}else if(l==2){let n=[{name:"cat",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-3},{name:"gameboy",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:7},{name:"mario",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"drum",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:4},{name:"yoshi",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-16},{name:"star",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-16},{name:"fire flower",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-1},{name:"dog",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-1},{name:"oink",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:3},{name:"swan",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:1},{name:"face",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-12}];ye.totalSamples+=n.length;let s=t.rawRawChipWaves.length;for(let r of n){let u=t.rawRawChipWaves.length,c={index:u,name:r.name,expression:r.expression,isSampled:r.isSampled,isPercussion:r.isPercussion,extraSampleDetune:r.extraSampleDetune,samples:i},v={index:u,name:r.name,expression:r.expression,isSampled:r.isSampled,isPercussion:r.isPercussion,extraSampleDetune:r.extraSampleDetune,samples:i},o={index:u,name:r.name,expression:r.expression,isSampled:r.isSampled,isPercussion:r.isPercussion,extraSampleDetune:r.extraSampleDetune,samples:a};t.rawRawChipWaves[u]=v,t.rawRawChipWaves.dictionary[r.name]=v,t.rawChipWaves[u]=c,t.rawChipWaves.dictionary[r.name]=c,t.chipWaves[u]=o,t.chipWaves.dictionary[r.name]=c,ye.statusTable[u]=0,ye.urlTable[u]="marioPaintboxSamples"}at("mario_paintbox_samples.js").then(()=>{let r=[K(catpaintboxsample),K(gameboypaintboxsample),K(mariopaintboxsample),K(drumpaintboxsample),K(yoshipaintboxsample),K(starpaintboxsample),K(fireflowerpaintboxsample),K(dogpaintbox),K(oinkpaintbox),K(swanpaintboxsample),K(facepaintboxsample)],u=0;for(let c of r){let v=s+u;t.rawChipWaves[v].samples=c,t.rawRawChipWaves[v].samples=c,t.chipWaves[v].samples=St(c),ye.statusTable[v]=1,ye.samplesLoaded++,yt.dispatchEvent(new et(ye.totalSamples,ye.samplesLoaded)),u++}})}else console.log("invalid set of built-in samples")}var t=class l{static thresholdVal=-10;static kneeVal=40;static ratioVal=12;static attackVal=0;static releaseVal=.25;static willReloadForCustomSamples=!1;static jsonFormat="DragonBox";static scales=me([{name:"Free",realName:"chromatic",flags:[!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0]},{name:"Major",realName:"ionian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0]},{name:"Minor",realName:"aeolian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Mixolydian",realName:"mixolydian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!0,!1]},{name:"Lydian",realName:"lydian",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0]},{name:"Dorian",realName:"dorian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!0,!1]},{name:"Phrygian",realName:"phrygian",flags:[!0,!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Locrian",realName:"locrian",flags:[!0,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1]},{name:"Lydian Dominant",realName:"lydian dominant",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!0,!1]},{name:"Phrygian Dominant",realName:"phrygian dominant",flags:[!0,!0,!1,!1,!0,!0,!1,!0,!0,!1,!0,!1]},{name:"Harmonic Major",realName:"harmonic major",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!0,!1,!1,!0]},{name:"Harmonic Minor",realName:"harmonic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0]},{name:"Melodic Minor",realName:"melodic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1,!0]},{name:"Blues Major",realName:"blues major",flags:[!0,!1,!0,!0,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"Blues",realName:"blues",flags:[!0,!1,!1,!0,!1,!0,!0,!0,!1,!1,!0,!1]},{name:"Altered",realName:"altered",flags:[!0,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Major Pentatonic",realName:"major pentatonic",flags:[!0,!1,!0,!1,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"Minor Pentatonic",realName:"minor pentatonic",flags:[!0,!1,!1,!0,!1,!0,!1,!0,!1,!1,!0,!1]},{name:"Whole Tone",realName:"whole tone",flags:[!0,!1,!0,!1,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Octatonic",realName:"octatonic",flags:[!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!1,!0]},{name:"Hexatonic",realName:"hexatonic",flags:[!0,!1,!1,!0,!0,!1,!1,!0,!0,!1,!1,!0]},{name:"No Dabbing (MB)",realName:"no dabbing",flags:[!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!1]},{name:"Jacked Toad (TB)",realName:"jacked toad",flags:[!0,!1,!0,!0,!1,!0,!0,!0,!0,!1,!0,!0]},{name:"Test Scale (TB)",realName:"**t",flags:[!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!1]},{name:"Custom",realName:"custom",flags:[!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0]}]);static keys=me([{name:"C",isWhiteKey:!0,basePitch:12},{name:"C\u266F",isWhiteKey:!1,basePitch:13},{name:"D",isWhiteKey:!0,basePitch:14},{name:"D\u266F",isWhiteKey:!1,basePitch:15},{name:"E",isWhiteKey:!0,basePitch:16},{name:"F",isWhiteKey:!0,basePitch:17},{name:"F\u266F",isWhiteKey:!1,basePitch:18},{name:"G",isWhiteKey:!0,basePitch:19},{name:"G\u266F",isWhiteKey:!1,basePitch:20},{name:"A",isWhiteKey:!0,basePitch:21},{name:"A\u266F",isWhiteKey:!1,basePitch:22},{name:"B",isWhiteKey:!0,basePitch:23}]);static blackKeyNameParents=[-1,1,-1,1,-1,1,-1,-1,1,-1,1,-1];static tempoMin=1;static tempoMax=2e3;static octaveMin=-2;static octaveMax=2;static echoDelayRange=24;static echoDelayStepTicks=4;static echoSustainRange=24;static echoShelfHz=4e3;static echoShelfGain=Math.pow(2,-.5);static reverbShelfHz=8e3;static reverbShelfGain=Math.pow(2,-1.5);static reverbRange=32;static reverbDelayBufferSize=16384;static reverbDelayBufferMask=l.reverbDelayBufferSize-1;static beatsPerBarMin=1;static beatsPerBarMax=64;static barCountMin=1;static barCountMax=1024;static instrumentCountMin=1;static layeredInstrumentCountMax=10;static patternInstrumentCountMax=10;static partsPerBeat=24;static ticksPerPart=2;static ticksPerArpeggio=3;static arpeggioPatterns=[[0],[0,1],[0,1,2,1],[0,1,2,3],[0,1,2,3,4],[0,1,2,3,4,5],[0,1,2,3,4,5,6],[0,1,2,3,4,5,6,7]];static rhythms=me([{name:"\xF73 (triplets)",stepsPerBeat:3,roundUpThresholds:[5,12,18]},{name:"\xF74 (standard)",stepsPerBeat:4,roundUpThresholds:[3,9,17,21]},{name:"\xF76",stepsPerBeat:6,roundUpThresholds:null},{name:"\xF78",stepsPerBeat:8,roundUpThresholds:null},{name:"\xF712",stepsPerBeat:12,roundUpThresholds:null},{name:"freehand",stepsPerBeat:24,roundUpThresholds:null}]);static instrumentTypeNames=["chip","FM","noise","spectrum","drumset","harmonics","PWM","Picked String","supersaw","custom chip","mod","FM6op"];static instrumentTypeHasSpecialInterval=[!0,!0,!1,!1,!1,!0,!1,!1,!1,!1,!1];static chipBaseExpression=.03375;static fmBaseExpression=.03;static noiseBaseExpression=.19;static spectrumBaseExpression=.3;static drumsetBaseExpression=.45;static harmonicsBaseExpression=.025;static pwmBaseExpression=.04725;static supersawBaseExpression=.061425;static pickedStringBaseExpression=.025;static distortionBaseVolume=.011;static bitcrusherBaseVolume=.01;static granularOutputLoudnessCompensation=.5;static rawChipWaves=me([{name:"rounded",expression:.94,samples:K([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0,-.2,-.4,-.5,-.6,-.7,-.8,-.85,-.9,-.95,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-.95,-.9,-.85,-.8,-.7,-.6,-.5,-.4,-.2])},{name:"triangle",expression:1,samples:K([1/15,3/15,5/15,7/15,9/15,11/15,13/15,15/15,15/15,13/15,11/15,9/15,7/15,5/15,3/15,1/15,-1/15,-3/15,-5/15,-7/15,-9/15,-11/15,-13/15,-15/15,-15/15,-13/15,-11/15,-9/15,-7/15,-5/15,-3/15,-1/15])},{name:"square",expression:.5,samples:K([1,-1])},{name:"1/4 pulse",expression:.5,samples:K([1,-1,-1,-1])},{name:"1/8 pulse",expression:.5,samples:K([1,-1,-1,-1,-1,-1,-1,-1])},{name:"sawtooth",expression:.65,samples:K([1/31,3/31,5/31,7/31,9/31,11/31,13/31,15/31,17/31,19/31,21/31,23/31,25/31,27/31,29/31,31/31,-31/31,-29/31,-27/31,-25/31,-23/31,-21/31,-19/31,-17/31,-15/31,-13/31,-11/31,-9/31,-7/31,-5/31,-3/31,-1/31])},{name:"double saw",expression:.5,samples:K([0,-.2,-.4,-.6,-.8,-1,1,-.8,-.6,-.4,-.2,1,.8,.6,.4,.2])},{name:"double pulse",expression:.4,samples:K([1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,-1,-1])},{name:"spiky",expression:.4,samples:K([1,-1,1,-1,1,0])},{name:"sine",expression:.88,samples:ne([8,9,11,12,13,14,15,15,15,15,14,14,13,11,10,9,7,6,4,3,2,1,0,0,0,0,1,1,2,4,5,6])},{name:"flute",expression:.8,samples:ne([3,4,6,8,10,11,13,14,15,15,14,13,11,8,5,3])},{name:"harp",expression:.8,samples:ne([0,3,3,3,4,5,5,6,7,8,9,11,11,13,13,15,15,14,12,11,10,9,8,7,7,5,4,3,2,1,0,0])},{name:"sharp clarinet",expression:.38,samples:ne([0,0,0,1,1,8,8,9,9,9,8,8,8,8,8,9,9,7,9,9,10,4,0,0,0,0,0,0,0,0,0,0])},{name:"soft clarinet",expression:.45,samples:ne([0,1,5,8,9,9,9,9,9,9,9,11,11,12,13,12,10,9,7,6,4,3,3,3,1,1,1,1,1,1,1,1])},{name:"alto sax",expression:.3,samples:ne([5,5,6,4,3,6,8,7,2,1,5,6,5,4,5,7,9,11,13,14,14,14,14,13,10,8,7,7,4,3,4,2])},{name:"bassoon",expression:.35,samples:ne([9,9,7,6,5,4,4,4,4,5,7,8,9,10,11,13,13,11,10,9,7,6,4,2,1,1,1,2,2,5,11,14])},{name:"trumpet",expression:.22,samples:ne([10,11,8,6,5,5,5,6,7,7,7,7,6,6,7,7,7,7,7,6,6,6,6,6,6,6,6,7,8,9,11,14])},{name:"electric guitar",expression:.2,samples:ne([11,12,12,10,6,6,8,0,2,4,8,10,9,10,1,7,11,3,6,6,8,13,14,2,0,12,8,4,13,11,10,13])},{name:"organ",expression:.2,samples:ne([11,10,12,11,14,7,5,5,12,10,10,9,12,6,4,5,13,12,12,10,12,5,2,2,8,6,6,5,8,3,2,1])},{name:"pan flute",expression:.35,samples:ne([1,4,7,6,7,9,7,7,11,12,13,15,13,11,11,12,13,10,7,5,3,6,10,7,3,3,1,0,1,0,1,0])},{name:"glitch",expression:.5,samples:K([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1])},{name:"trapezoid",expression:1,samples:K([1/15,6/15,10/15,14/15,15/15,15/15,15/15,15/15,15/15,15/15,15/15,15/15,14/15,10/15,6/15,1/15,-1/15,-6/15,-10/15,-14/15,-15/15,-15/15,-15/15,-15/15,-15/15,-15/15,-15/15,-15/15,-14/15,-10/15,-6/15,-1/15])},{name:"modbox 10% pulse",expression:.5,samples:ne([1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"modbox sunsoft bass",expression:1,samples:ne([0,.1875,.3125,.5625,.5,.75,.875,1,1,.6875,.5,.625,.625,.5,.375,.5625,.4375,.5625,.4375,.4375,.3125,.1875,.1875,.375,.5625,.5625,.5625,.5625,.5625,.4375,.25,0])},{name:"modbox loud pulse",expression:.5,samples:ne([1,.7,.1,.1,0,0,0,0,0,.1,.2,.15,.25,.125,.215,.345,4])},{name:"modbox sax",expression:.5,samples:ne([1/15,3/15,5/15,9,.06])},{name:"modbox guitar",expression:.5,samples:ne([-.5,3.5,3,-.5,-.25,-1])},{name:"modbox sine",expression:.5,samples:ne([0,.05,.125,.2,.25,.3,.425,.475,.525,.625,.675,.725,.775,.8,.825,.875,.9,.925,.95,.975,.98,.99,.995,1,.995,.99,.98,.975,.95,.925,.9,.875,.825,.8,.775,.725,.675,.625,.525,.475,.425,.3,.25,.2,.125,.05,0,-.05,-.125,-.2,-.25,-.3,-.425,-.475,-.525,-.625,-.675,-.725,-.775,-.8,-.825,-.875,-.9,-.925,-.95,-.975,-.98,-.99,-.995,-1,-.995,-.99,-.98,-.975,-.95,-.925,-.9,-.875,-.825,-.8,-.775,-.725,-.675,-.625,-.525,-.475,-.425,-.3,-.25,-.2,-.125,-.05])},{name:"modbox atari bass",expression:.5,samples:ne([1,1,1,1,0,1,0,1,1,0,0,1,0,0,0])},{name:"modbox atari pulse",expression:.5,samples:ne([1,0,1,1,1,1,1,1,1,1,1,1,1,1,1])},{name:"modbox 1% pulse",expression:.5,samples:ne([1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"modbox curved sawtooth",expression:.5,samples:ne([1,1/2,1/3,1/4])},{name:"modbox viola",expression:.45,samples:ne([-.9,-1,-.85,-.775,-.7,-.6,-.5,-.4,-.325,-.225,-.2,-.125,-.1,-.11,-.125,-.15,-.175,-.18,-.2,-.21,-.22,-.21,-.2,-.175,-.15,-.1,-.5,.75,.11,.175,.2,.25,.26,.275,.26,.25,.225,.2,.19,.18,.19,.2,.21,.22,.23,.24,.25,.26,.275,.28,.29,.3,.29,.28,.27,.26,.25,.225,.2,.175,.15,.1,.075,0,-.01,-.025,.025,.075,.2,.3,.475,.6,.75,.85,.85,1,.99,.95,.8,.675,.475,.275,.01,-.15,-.3,-.475,-.5,-.6,-.71,-.81,-.9,-1,-.9])},{name:"modbox brass",expression:.45,samples:ne([-1,-.95,-.975,-.9,-.85,-.8,-.775,-.65,-.6,-.5,-.475,-.35,-.275,-.2,-.125,-.05,0,.075,.125,.15,.2,.21,.225,.25,.225,.21,.2,.19,.175,.125,.1,.075,.06,.05,.04,.025,.04,.05,.1,.15,.225,.325,.425,.575,.7,.85,.95,1,.9,.675,.375,.2,.275,.4,.5,.55,.6,.625,.65,.65,.65,.65,.64,.6,.55,.5,.4,.325,.25,.15,.05,-.05,-.15,-.275,-.35,-.45,-.55,-.65,-.7,-.78,-.825,-.9,-.925,-.95,-.975])},{name:"modbox acoustic bass",expression:.5,samples:ne([1,0,.1,-.1,-.2,-.4,-.3,-1])},{name:"modbox lyre",expression:.45,samples:ne([1,-1,4,2.15,4.13,5.15,0,-.05,1])},{name:"modbox ramp pulse",expression:.5,samples:ne([6.1,-2.9,1.4,-2.9])},{name:"modbox piccolo",expression:.5,samples:ne([1,4,2,1,-.1,-1,-.12])},{name:"modbox squaretooth",expression:.5,samples:ne([.2,1,2.6,1,0,-2.4])},{name:"modbox flatline",expression:1,samples:ne([1,.9,.8,.7,.6,.5,.4,.3,.2,.1,0,.1,.2,.3,.4,.5,.6,.7,.8,.9])},{name:"modbox pnryshk a (u5)",expression:.4,samples:ne([1,.9,.8,.7,.6,.5,.4,.3,.2,.1,0])},{name:"modbox pnryshk b (riff)",expression:.5,samples:ne([1,-.9,.8,-.7,.6,-.5,.4,-.3,.2,-.1,0,-.1,.2,-.3,.4,-.5,.6,-.7,.8,-.9,1])},{name:"sandbox shrill lute",expression:.94,samples:ne([1,1.5,1.25,1.2,1.3,1.5])},{name:"sandbox bassoon",expression:.5,samples:ne([1,-1,1,1,1,1,1,1,1,1,1,1,0])},{name:"sandbox shrill bass",expression:.5,samples:ne([0,1,0,0,1,0,1,0,0,0])},{name:"sandbox nes pulse",expression:.4,samples:ne([2.1,-2.2,1.2,3])},{name:"sandbox saw bass",expression:.25,samples:ne([1,1,1,1,0,2,1,2,3,1,-2,1,4,1,4,2,1,6,-3,4,2,1,5,1,4,1,5,6,7,1,6,1,4,1,9])},{name:"sandbox euphonium",expression:.3,samples:ne([0,1,2,1,2,1,4,2,5,0,-2,1,5,1,2,1,2,4,5,1,5,-2,5,10,1])},{name:"sandbox shrill pulse",expression:.3,samples:ne([2,0,4,1,4,6,7,3])},{name:"sandbox r-sawtooth",expression:.2,samples:ne([6.1,-2.9,1.4,-2.9])},{name:"sandbox recorder",expression:.2,samples:ne([5,-5.1,4,-4.1,3,-3.1,2,-2.1,1,-1.1,6])},{name:"sandbox narrow saw",expression:1.2,samples:ne([.1,.13/-.1,.13/-.3,.13/-.5,.13/-.7,.13/-.9,.13/-.11,.13/-.31,.13/-.51,.13/-.71,.13/-.91,.13/-.12,.13/-.32,.13/-.52,.13/-.72,.13/-.92,.13/-.13,.13/.13,.13/.92,.13/.72,.13/.52,.13/.32,.13/.12,.13/.91,.13/.71,.13/.51,.13/.31,.13/.11,.13/.9,.13/.7,.13/.5,.13/.3,.13])},{name:"sandbox deep square",expression:1,samples:ne([1,2.25,1,-1,-2.25,-1])},{name:"sandbox ring pulse",expression:1,samples:ne([1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1])},{name:"sandbox double sine",expression:1,samples:ne([1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,1.8,1.7,1.6,1.5,1.4,1.3,1.2,1.1,1,0,-1,-1.1,-1.2,-1.3,-1.4,-1.5,-1.6,-1.7,-1.8,-1.9,-1.8,-1.7,-1.6,-1.5,-1.4,-1.3,-1.2,-1.1,-1])},{name:"sandbox contrabass",expression:.5,samples:ne([4.2,6.9,1.337,6.66])},{name:"sandbox double bass",expression:.4,samples:ne([0,.1875,.3125,.5625,.5,.75,.875,1,-1,-.6875,-.5,-.625,-.625,-.5,-.375,-.5625,-.4375,-.5625,-.4375,-.4375,-.3125,-.1875,.1875,.375,.5625,-.5625,.5625,.5625,.5625,.4375,.25,0])},{name:"haileybox test1",expression:.5,samples:ne([1,.5,-1])},{name:"brucebox pokey 4bit lfsr",expression:.5,samples:ne([1,-1,-1,-1,1,1,1,1,-1,1,-1,1,1,-1,-1])},{name:"brucebox pokey 5step bass",expression:.5,samples:ne([1,-1,1,-1,1])},{name:"brucebox isolated spiky",expression:.5,samples:ne([1,-1,1,-1,1,-1])},{name:"nerdbox unnamed 1",expression:.5,samples:ne([.2,.8/.2,.7,-.4,-1,.5,-.5/.6])},{name:"nerdbox unnamed 2",expression:.5,samples:ne([2,5/55,-9,6.5/6.5,-55,18.5/-26])},{name:"zefbox semi-square",expression:1,samples:ne([1,1.5,2,2.5,2.5,2.5,2,1.5,1])},{name:"zefbox deep square",expression:1,samples:ne([1,2.25,1,-1,-2.25,-1])},{name:"zefbox squaretal",expression:.7,samples:ne([1.5,1,1.5,-1.5,-1,-1.5])},{name:"zefbox saw wide",expression:.65,samples:ne([0,-.4,-.8,-1.2,-1.6,-2,0,-.4,-.8,-1.2,-1.6])},{name:"zefbox saw narrow",expression:.65,samples:ne([1,.5,1,.5,1,.5,1,2,1,2,1])},{name:"zefbox deep sawtooth",expression:.5,samples:ne([0,2,3,4,4.5,5,5.5,6,6.25,6.5,6.75,7,6.75,6.5,6.25,6,5.5,5,4.5,4,3,2,1])},{name:"zefbox sawtal",expression:.3,samples:ne([1.5,1,1.25,-.5,1.5,-.5,0,-1.5,1.5,0,.5,-1.5,.5,1.25,-1,-1.5])},{name:"zefbox deep sawtal",expression:.7,samples:ne([.75,.25,.5,-.5,.5,-.5,-.25,-.75])},{name:"zefbox pulse",expression:.5,samples:ne([1,-2,-2,-1.5,-1.5,-1.25,-1.25,-1,-1])},{name:"zefbox triple pulse",expression:.4,samples:ne([1,1,1,1,1,-1,-1,1.5,1,1,1,1,-1,-1,-1,1.5])},{name:"zefbox high pulse",expression:.2,samples:ne([1,-2,2,-3,3,-4,5,-4,3,-3,2,-2,1])},{name:"zefbox deep pulse",expression:.2,samples:ne([1,2,2,-2,-2,-3,-4,-4,-5,-5,-5,-5,0,-1,-2])},{name:"wackybox guitar string",expression:.6,samples:ne([0,63,63,63,63,19,63,63,63,63,63,63,63,63,63,63,11,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,27,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,34,63,63,63,63])},{name:"wackybox intense",expression:.6,samples:ne([36,25,33,35,18,51,22,40,27,37,31,33,25,29,41,23,31,31,45,20,37,23,29,26,42,29,33,26,31,27,40,25,40,26,37,24,41,32,0,32,33,29,32,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31])},{name:"wackybox buzz wave",expression:.6,samples:ne([0,1,1,2,4,4,4,4,5,5,6,6,6,7,8,8,8,9,9,9,9,9,9,8,8,8,11,15,23,62,61,60,58,56,56,54,53,52,50,49,48,47,47,45,45,45,44,44,43,43,42,42,42,42,42,42,42,42,42,42,42,43,43,53])},{name:"todbox 1/3 pulse",expression:.5,samples:K([1,-1,-1])},{name:"todbox 1/5 pulse",expression:.5,samples:K([1,-1,-1,-1,-1])},{name:"todbox slap bass",expression:.5,samples:ne([1,.5,0,.5,1.25,.5,-.25,.1,-.1,.1,1.1,2.1,3,3.5,2.9,3.3,2.7,2.9,2.3,2,1.9,1.8,1,.7,.9,.8,.4,.1,0,.2,.4,.6,.5,.8])},{name:"todbox harsh wave",expression:.45,samples:ne([1,-1,-1,-1,.5,.5,.5,.7,.39,1.3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"todbox accordian",expression:.5,samples:ne([0,1,1,2,2,1.5,1.5,.8,0,-2,-3.25,-4,-4.5,-5.5,-6,-5.75,-5.5,-5,-5,-5,-6,-6,-6,-5,-4,-3,-2,-1,.75,1,2,3,4,5,6,6.5,7.5,8,7.75,6,5.25,5,5,5,5,5,4.25,3.75,3.25,2.75,1.25,-.75,-2,-.75,1.25,1.25,2,2,2,2,1.5,-1,-2,-1,1.5,2,2.75,2.75,2.75,3,2.75,-1,-2,-2.5,-2,-1,-2.25,-2.75,-2,-3,-1.75,1,2,3.5,4,5.25,6,8,9.75,10,9.5,9,8.5,7.5,6.5,5.25,5,4.5,4,4,4,3.25,2.5,2,1,-.5,-2,-3.5,-4,-4,-4,-3.75,-3,-2,-1])},{name:"todbox beta banana wave",expression:.8,samples:ne([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0])},{name:"todbox beta test wave",expression:.5,samples:ne([56,0,-52,16,3,3,2,-35,20,147,-53,0,0,5,-6])},{name:"todbox beta real snare",expression:1,samples:ne([0,-.01208,-.02997,-.04382,-.06042,-.07529,-.09116,-.10654,-.12189,-.13751,-.15289,-.16849,-.18387,-.19974,-.21484,-.23071,-.24557,-.26144,-.27731,-.29141,-.3035,-.32416,-.34406,-.32947,-.31158,-.33725,-.37579,-.39746,-.40201,-.40906,-.4418,-.47229,-.47379,-.47733,-.45239,-.33954,-.22894,-.22443,-.32138,-.46371,-.57178,-.61081,-.59998,-.61459,-.62189,-.43979,-.19217,-.12643,-.17252,-.20956,-.20981,-.19217,-.22845,-.34332,-.50629,-.64307,-.72922,-.81384,-.87857,-.90149,-.88687,-.86169,-.87781,-.80478,-.52493,-.31308,-.33249,-.39395,-.39017,-.30301,-.19949,-.13071,-.02493,.14307,.34961,.52542,.63223,.68613,.7471,.87305,.98184,.98889,.97052,.99066,.99747,.99344,.99469,.99393,.9957,.99393,.99521,.99469,.9942,.99521,.9942,.99521,.99469,.99469,.99521,.9942,.99545,.99445,.99469,.99493,.9942,.99521,.99393,.99493,.99469,.99445,.9957,.99445,.99521,.99469,.99469,.99521,.9942,.99545,.99445,.99445,.99493,.9942,.99545,.9942,.99493,.99493,.9942,.99545,.99445,.99521,.99469,.99445,.99545,.99368,.99393,.99445,.99268,.97983,.97229,.95944,.88486,.76773,.64481,.53098,.39847,.19318,-.03827,-.20325,-.39319,-.68765,-.88461,-.93448,-.96069,-.97681,-.98715,-.99042,-.99142,-.99091,-.99142,-.99219,-.99091,-.99219,-.99066,-.99142,-.99142,-.99118,-.99191,-.99066,-.99191,-.99142,-.99142,-.99191,-.99091,-.99219,-.99118,-.99142,-.99167,-.99091,-.99219,-.99091,-.99167,-.99142,-.99091,-.99191,-.99091,-.99191,-.99142,-.99118,-.99191,-.99066,-.99191,-.99118,-.99142,-.99191,-.99066,-.99191,-.99091,-.99167,-.99191,-.99118,-.99219,-.99091,-.99191,-.99142,-.99142,-.99243,-.98865,-.98764,-.99219,-.98083,-.92517,-.9277,-.91486,-.59042,-.15189,.02945,.05667,.06195,.00629,-.18008,-.56497,-.8801,-.9277,-.92871,-.97705,-.99167,-.98663,-.99118,-.99042,-.99219,-.99142,-.99118,-.98941,-.99219,-1,-.9758,-.95993,-.99948,-.98236,-.84659,-.7486,-.70679,-.59747,-.48035,-.41687,-.36826,-.29745,-.18185,-.06219,.02164,.07907,.13123,.18033,.1962,.15692,.14053,.20251,.2753,.30905,.29092,.27252,.30402,.32416,.32214,.35239,.3967,.43198,.4942,.58487,.64154,.65967,.6705,.67026,.66522,.6554,.66119,.70627,.75842,.78738,.7894,.78763,.80402,.85944,.94559,.9899,.9816,.98007,.99368,.99393,.98538,.9758,.97101,.93802,.81812,.64633,.46649,.28613,.14685,.08966,.12543,.20325,.24557,.18866,.02795,-.20175,-.44205,-.58713,-.57629,-.41385,-.14255,.18033,.47882,.68311,.72314,.62064,.48309,.43073,.53577,.72794,.9025,.97354,.97,.98083,.99191,.99319,.99493,.99393,.99521,.99393,.99545,.9942,.99493,.99493,.99445,.99545,.9942,.99545,.99243,.98917,.98386,.97781,.95844,.89066,.81561,.78134,.77277,.75995,.73022,.67126,.57178,.47,.38361,.29419,.20703,.14734,.15866,.25162,.35818,.45062,.5675,.69748,.81232,.89697,.95062,.97656,.98615,.99191,.99219,.99243,.99368,.99368,.97028,.95566,.94559,.82617,.59973,.38361,.23901,.15338,.12921,.11206,.04382,-.12946,-.43552,-.72644,-.89847,-.95465,-.95541,-.97229,-.99268,-.99319,-.9884,-.99142,-.99167,-.99091,-.9884,-.98965,-.99368,-.97455,-.9501,-.94684,-.96219,-.98514,-.99243,-.98889,-.98917,-.99142,-.99219,-.99091,-.99191,-.99142,-.99142,-.99191,-.99066,-.99167,-.99091,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99167,-.99091,-.99219,-.99091,-.99191,-.99142,-.99118,-.99191,-.99066,-.99191,-.99091,-.99118,-.99243,-.98941,-.98462,-.96976,-.9632,-.96194,-.87305,-.66196,-.44809,-.29495,-.18085,-.11813,-.11334,-.18564,-.34885,-.58237,-.8045,-.93726,-.97806,-.97354,-.97531,-.9899,-.99368,-.98941,-.99219,-.99091,-.99142,-.99167,-.99091,-.99191,-.99118,-.99219,-.98236,-.97781,-.97656,-.95135,-.87204,-.71335,-.52139,-.34232,-.17783,-.00906,.14886,.3045,.48889,.67404,.8403,.94128,.97681,.98462,.98337,.99142,.99521,.99493,.9942,.99445,.99521,.99393,.99545,.99445,.99521,.99521,.99445,.9957,.99445,.99521,.99469,.99445,.99521,.9942,.99521,.99445,.99445,.99521,.99445,.99545,.99445,.99469,.99493,.99393,.99493,.99445,.99393,.98285,.97781,.97479,.92844,.82114,.66095,.52417,.46826,.46722,.47934,.47379,.47076,.48209,.42014,.25439,.10074,-.00302,-.08966,-.16068,-.21436,-.2204,-.15137,-.00476,.18536,.37631,.52292,.62164,.70425,.74835,.72366,.63928,.52567,.40805,.35666,.42896,.60175,.802,.92743,.96548,.97632,.98337,.99066,.99521,.9942,.99368,.99292,.9884,.98083,.96774,.93323,.8544,.6947,.47202,.20425,-.0889,-.36423,-.60025,-.77481,-.90173,-.96017,-.97028,-.98108,-.9884,-.99219,-.9899,-.99219,-.99142,-.99142,-.99219,-.99091,-.99243,-.99066,-.99142,-.99142,-.99118,-.99191,-.99066,-.99167,-.99142,-.99142,-.99219,-.99091,-.99191,-.99118,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99191,-.99118,-.99219,-.99091,-.99167,-.99142,-.99142,-.99219,-.99091,-.99191,-.99142,-.99118,-.98917,-.99042,-.99445,-.9733,-.9559,-.96219,-.8967,-.72241,-.55112,-.44809,-.39319,-.37833,-.35641,-.2627,-.1423,-.11282,-.13525,-.11536,-.09671,-.11511,-.1806,-.26874,-.33374,-.42215,-.51358,-.44785,-.3045,-.28613,-.30527,-.25037,-.1539,-.08286,-.11157,-.12592,-.00327,.13803,.19141,.1282,.01788,-.03952,-.12592,-.26773,-.34634,-.31384,-.1806,-.0108,.13574,.2612,.36975,.46573,.55087,.63626,.73022,.83072,.92014,.97177,.98587,.98413,.99167,.99445,.99292,.99219,.9874,.98007,.96472,.92239,.82166,.69067,.57959,.54962,.59695,.64255,.64633,.60629,.55942,.5491,.58966,.61887,.56952,.54181,.59518,.63248,.63876,.65463,.73398,.88312,.96927,.97101,.97958,.99344,.9942,.99268,.99493,.99469,.99445,.99521,.99445,.99545,.9942,.99493,.99493,.9942,.99545,.9942,.99493,.9942,.99393,.9942,.9884,.98309,.98309,.96069,.88461,.7937,.72064,.65765,.59998,.53247,.49268,.48615,.44205,.38034,.36447,.38715,.39294,.32645,.19595,.07782,-.05893,-.27832,-.48309,-.62619,-.72995,-.79999,-.84583,-.82166,-.73575,-.67227,-.65491,-.6496,-.66397,-.70175,-.72894,-.74658,-.76724,-.7952,-.82846,-.86523,-.90527,-.94382,-.89948,-.69849,-.47479,-.31662,-.15414,-.00729,.07077,.08237,.04431,-.02292,-.11761,-.24307,-.36926,-.45087,-.4617,-.4025,-.30679,-.17529,0,.14331,.24179,.36774,.49545,.56522,.57907,.56775,.53851,.51132,.48688,.41913,.26044,.00955,-.26297,-.46396,-.62341,-.82214,-.94684,-.96774,-.97531,-.98413,-.99017,-.9899,-.99219,-.99066,-.99142,-.99167,-.99118,-.99219,-.9899,-.99118,-.99368,-.99142,-.97757,-.97403,-.98007,-.9617,-.86826,-.67783,-.52719,-.48788,-.4549,-.43146,-.47681,-.54105,-.57983,-.60904,-.62317,-.59949,-.55566,-.52063,-.52115,-.55112,-.56244,-.58337,-.6554,-.73373,-.77228,-.74759,-.6889,-.64609,-.61887,-.5806,-.50351,-.40729,-.33929,-.3511,-.42944,-.47028,-.42267,-.32718,-.20224,-.0564,.04556,.10529,.1763,.26169,.33197,.32138,.23776,.20956,.23148,.20352,.23325,.39267,.52719,.58438,.62289,.66345,.70023,.66296,.5433,.42618,.33475,.24533,.14105,.03851,.01358,.09143,.22845,.34961,.41711,.4874,.58914,.69519,.78186,.84357,.89822,.95389,.98135,.98615,.99167,.99243,.99445,.9942,.99469,.99493,.99393,.99545,.99445,.99521,.99469,.99445,.99521,.9942,.99469,.98965,.98715,.98563,.96295,.91736,.86624,.82367,.77554,.68411,.53549,.38916,.2612,.11435,-.04053,-.18161,-.23172,-.19394,-.15237,-.1073,-.02997,.08588,.2262,.34305,.44104,.5574,.65765,.71259,.69217,.65363,.69748,.79572,.89368,.95514,.97733,.98413,.98816,.99243,.99445,.99243,.97302,.96674,.97983,.90378,.71005,.51056,.40451,.40982,.41559,.32996,.24356,.18866,.11411,.05365,.01157,-.03247,-.09216,-.16095,-.23248,-.31662,-.39771,-.48663,-.59647,-.71536,-.82013,-.85287,-.82947,-.84937,-.92215,-.97177,-.98663,-.98816,-.98438,-.99091,-.99219,-.99091,-.99191,-.99042,-.99191,-.99091,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99142])},{name:"ultrabox shortened od guitar",expression:.5,samples:ne([-.82785,-.67621,-.40268,-.43817,-.45468,-.22531,-.18329,.2475,.71246,.52155,.56082,.48395,.3399,.46957,.27744,.42313,.47104,.18796,.1293,-.13901,-.07431,-.16348,-.74857,-.73206,-.35181,-.26227,-.41882,-.27786,-.19806,-.19867,.18643,.24808,.08847,-.06964,.06912,.20474,-.05304,.29416,.31967,.14243,.27521,-.23932,-.14752,.1236,-.26123,-.26111,.06616,.2652,.0809,.1524,.16254,-.12061,.04562,.00131,.0405,.08182,-.21729,-.17041,-.16312,-.08563,.0639,.05099,.05627,.02728,.00726,-.13028,-.05673,-.14969,-.17645,.35492,.16766,-.00897,.24326,-.00461,-.04456,.01776,-.0495,-.01221,.02039,.07684,.13397,.3985,.35962,.13754,.4231,.27161,-.17609,.03659,.10635,-.21909,-.22046,-.20258,-.40973,-.4028,-.40521,-.66284])}]);static chipWaves=Gn(l.rawChipWaves);static rawRawChipWaves=l.rawChipWaves;static firstIndexForSamplesInChipWaveList=l.chipWaves.length;static chipNoises=me([{name:"retro",expression:.25,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"white",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"clang",expression:.4,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"buzz",expression:.3,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"hollow",expression:1.5,basePitch:96,pitchFilterMult:1,isSoft:!0,samples:null},{name:"shine",expression:1,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"deep",expression:1.5,basePitch:120,pitchFilterMult:1024,isSoft:!0,samples:null},{name:"cutter",expression:.005,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"metallic",expression:1,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"static",expression:1,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"1-bit white",expression:.5,basePitch:74.41,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"1-bit metallic",expression:.5,basePitch:86.41,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"crackling",expression:.9,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"pink",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"brownian",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null}]);static filterFreqStep=1/4;static filterFreqRange=34;static filterFreqReferenceSetting=28;static filterFreqReferenceHz=8e3;static filterFreqMaxHz=l.filterFreqReferenceHz*Math.pow(2,l.filterFreqStep*(l.filterFreqRange-1-l.filterFreqReferenceSetting));static filterFreqMinHz=8;static filterGainRange=15;static filterGainCenter=7;static filterGainStep=1/2;static filterMaxPoints=8;static filterTypeNames=["low-pass","high-pass","peak"];static filterMorphCount=10;static filterSimpleCutRange=11;static filterSimplePeakRange=8;static fadeInRange=10;static fadeOutTicks=[-24,-12,-6,-3,-1,6,12,24,48,72,96];static fadeOutNeutral=4;static drumsetFadeOutTicks=48;static transitions=me([{name:"normal",isSeamless:!1,continues:!1,slides:!1,slideTicks:3,includeAdjacentPatterns:!1},{name:"interrupt",isSeamless:!0,continues:!1,slides:!1,slideTicks:3,includeAdjacentPatterns:!0},{name:"continue",isSeamless:!0,continues:!0,slides:!1,slideTicks:3,includeAdjacentPatterns:!0},{name:"slide",isSeamless:!0,continues:!1,slides:!0,slideTicks:3,includeAdjacentPatterns:!0},{name:"slide in pattern",isSeamless:!0,continues:!1,slides:!0,slideTicks:3,includeAdjacentPatterns:!1}]);static vibratos=me([{name:"none",amplitude:0,type:0,delayTicks:0},{name:"light",amplitude:.15,type:0,delayTicks:0},{name:"delayed",amplitude:.3,type:0,delayTicks:37},{name:"heavy",amplitude:.45,type:0,delayTicks:0},{name:"shaky",amplitude:.1,type:1,delayTicks:0}]);static vibratoTypes=me([{name:"normal",periodsSeconds:[.14],period:.14},{name:"shaky",periodsSeconds:[.11,1.618*.11,3*.11],period:266.97}]);static arpSpeedScale=[0,.0625,.125,.2,.25,1/3,.4,.5,2/3,.75,.8,.9,1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3,3.1,3.2,3.3,3.4,3.5,3.6,3.7,3.8,3.9,4,4.15,4.3,4.5,4.8,5,5.5,6,8];static unisons=me([{name:"none",voices:1,spread:0,offset:0,expression:1.4,sign:1},{name:"shimmer",voices:2,spread:.018,offset:0,expression:.8,sign:1},{name:"hum",voices:2,spread:.045,offset:0,expression:1,sign:1},{name:"honky tonk",voices:2,spread:.09,offset:0,expression:1,sign:1},{name:"dissonant",voices:2,spread:.25,offset:0,expression:.9,sign:1},{name:"fifth",voices:2,spread:3.5,offset:3.5,expression:.9,sign:1},{name:"octave",voices:2,spread:6,offset:6,expression:.8,sign:1},{name:"bowed",voices:2,spread:.02,offset:0,expression:1,sign:-1},{name:"piano",voices:2,spread:.01,offset:0,expression:1,sign:.7},{name:"warbled",voices:2,spread:.25,offset:.05,expression:.9,sign:-.8},{name:"hecking gosh",voices:2,spread:6.25,offset:-6,expression:.8,sign:-.7},{name:"spinner",voices:2,spread:.02,offset:0,expression:1,sign:1},{name:"detune",voices:1,spread:0,offset:.25,expression:1,sign:1},{name:"rising",voices:2,spread:1,offset:.7,expression:.95,sign:1},{name:"vibrate",voices:2,spread:3.5,offset:7,expression:.975,sign:1},{name:"fourths",voices:2,spread:4,offset:4,expression:.95,sign:1},{name:"bass",voices:1,spread:0,offset:-7,expression:1,sign:1},{name:"dirty",voices:2,spread:0,offset:.1,expression:.975,sign:1},{name:"stationary",voices:2,spread:3.5,offset:0,expression:.9,sign:1},{name:"recurve",voices:2,spread:.005,offset:0,expression:1,sign:1},{name:"voiced",voices:2,spread:9.5,offset:0,expression:1,sign:1},{name:"fluctuate",voices:2,spread:12,offset:0,expression:1,sign:1},{name:"thin",voices:1,spread:0,offset:50,expression:1,sign:1},{name:"inject",voices:2,spread:6,offset:.4,expression:1,sign:1},{name:"askewed",voices:2,spread:0,offset:.42,expression:.7,sign:1},{name:"resonance",voices:2,spread:.0025,offset:.1,expression:.8,sign:-1.5},{name:"FART",voices:2,spread:13,offset:-5,expression:1,sign:-3},{name:"augmented",voices:4,spread:6,offset:6,expression:.5,sign:1},{name:"diminished",voices:5,spread:6,offset:6,expression:.4,sign:1},{name:"chorus",voices:9,spread:.22,offset:0,expression:.15,sign:1},{name:"block",voices:9,spread:6,offset:6,expression:.15,sign:.8},{name:"extraterrestrial",voices:6,spread:15.2,offset:-6,expression:.35,sign:.7},{name:"bow",voices:9,spread:.006,offset:0,expression:.15,sign:.5}]);static effectNames=["reverb","chorus","panning","distortion","bitcrusher","post eq","echo","ring mod","granular","gain","flanger"];static effectDisplayNames=["Reverb","Chorus","Panning","Distortion","Bitcrusher","Post EQ","Echo","Ring Mod","Granular","Gain","Flanger"];static effectOrder=[0,1,2,3,4,5,6,7,8,9,10];static effectCount;static mdeffectNames=["pitch shift","detune","vibrato","transition type","chord type","note range"];static mdeffectOrder=[3,4,0,1,2,5];static mdeffectCount;static noteSizeMax=6;static volumeRange=100;static volumeLogScale=.0714;static gainRangeMult=2;static panCenter=50;static panMax=l.panCenter*2;static panDelaySecondsMax=.001;static ringModRange=8;static ringModHzRange=64;static ringModMinHz=20;static ringModMaxHz=4400;static rmHzOffsetCenter=200;static rmHzOffsetMax=400;static rmHzOffsetMin=0;static granularRange=10;static grainSizeMin=40;static grainSizeMax=2e3;static grainSizeStep=40;static grainRangeMax=1600;static grainAmountsMax=10;static granularEnvelopeType=0;static flangerRange=24;static flangerSpeedRange=16;static flangerDepthRange=16;static flangerFeedbackRange=16;static flangerMaxDelay=.0034*4.35;static flangerPeriodMult=4e-6;static flangerVolumeMult=.45;static chorusRange=24;static chorusPeriodSeconds=2;static chorusDelayRange=.0034;static chorusDelayOffsets=[[1.51,2.1,3.35],[1.47,2.15,3.25]];static chorusPhaseOffsets=[[0,2.1,4.2],[3.2,5.3,1]];static chorusMaxDelay=l.chorusDelayRange*(1+l.chorusDelayOffsets[0].concat(l.chorusDelayOffsets[1]).reduce((e,a)=>Math.max(e,a)));static chords=me([{name:"simultaneous",customInterval:!1,arpeggiates:!1,strumParts:0,singleTone:!1},{name:"strum",customInterval:!1,arpeggiates:!1,strumParts:1,singleTone:!1},{name:"arpeggio",customInterval:!1,arpeggiates:!0,strumParts:0,singleTone:!0},{name:"custom interval",customInterval:!0,arpeggiates:!1,strumParts:0,singleTone:!0},{name:"monophonic",customInterval:!1,arpeggiates:!1,strumParts:0,singleTone:!0}]);static maxChordSize=9;static operatorCount=4;static maxPitchOrOperatorCount=Math.max(l.maxChordSize,l.operatorCount+2);static algorithms=me([{name:"1\u2190(2\u20023\u20024)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3,4],[],[],[]]},{name:"1\u2190(2\u20023\u21904)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[],[4],[]]},{name:"1\u21902\u2190(3\u20024)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3,4],[],[]]},{name:"1\u2190(2\u20023)\u21904",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[4],[4],[]]},{name:"1\u21902\u21903\u21904",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3],[4],[]]},{name:"1\u21903\u20032\u21904",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[3],[4],[],[]]},{name:"1\u20032\u2190(3\u20024)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3,4],[],[]]},{name:"1\u20032\u21903\u21904",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3],[4],[]]},{name:"(1\u20022)\u21903\u21904",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3],[3],[4],[]]},{name:"(1\u20022)\u2190(3\u20024)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3,4],[3,4],[],[]]},{name:"1\u20032\u20033\u21904",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[],[],[4],[]]},{name:"(1\u20022\u20023)\u21904",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[4],[4],[4],[]]},{name:"1\u20032\u20033\u20034",carrierCount:4,associatedCarrier:[1,2,3,4],modulatedBy:[[],[],[],[]]},{name:"1\u2190(2 3)\u20032\u21904",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[2,3],[4],[],[]]},{name:"1\u2190(2 (3 (4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[2,3,4],[3,4],[4],[]]}]);static algorithms6Op=me([{name:"Custom",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1\u21902\u21903\u21904\u21905\u21906",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2],[3],[4],[5],[6],[]]},{name:"1\u21903\u20032\u21904\u21905\u21906",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4],[],[5],[6],[]]},{name:"1\u21903\u21904\u20032\u21905\u21906",carrierCount:2,associatedCarrier:[1,1,1,2,2,2],modulatedBy:[[3],[5],[4],[],[6],[]]},{name:"1\u21904\u20032\u21905\u20033\u21906",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[5],[6],[],[],[]]},{name:"1\u21903\u20022\u2190(4\u20025\u21906)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5],[],[],[6],[]]},{name:"1\u2190(3\u20024)\u20022\u21905\u21906",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3,4],[5],[],[],[6],[]]},{name:"1\u21903\u20022\u2190(4\u20025\u20026)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5,6],[],[],[],[]]},{name:"1\u21903\u20022\u2190(4\u20025)\u21906",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5],[],[6],[6],[]]},{name:"1\u21903\u20022\u21904\u2190(5\u20026)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4],[],[5,6],[],[]]},{name:"1\u2190(2\u20023\u20024\u20025\u20026)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1\u2190(2\u20023\u21905\u20024\u21906)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4],[],[5],[6],[],[]]},{name:"1\u2190(2\u20023\u20024\u21905\u21906)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4],[],[],[5],[6],[]]},{name:"1\u21904\u21905\u2003(2\u20033)\u21906",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[6],[6],[5],[],[]]},{name:"1\u2190(3\u20034)\u21905 2\u21906",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3,4],[6],[5],[5],[],[]]},{name:"(1\u20032)\u21904\u20033\u2190(5\u20036)",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[4],[5,6],[],[],[]]},{name:"(1\u20032)\u21905\u2003(3\u20034)\u21906",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[5],[5],[6],[6],[],[]]},{name:"(1\u20032\u20033)\u2190(4\u20035\u20036)",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4,5,6],[4,5,6],[4,5,6],[],[],[]]},{name:"1\u21905\u2003(2\u20033\u20034)\u21906",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[5],[6],[6],[6],[],[]]},{name:"1\u20032\u21905\u2003(3\u20034)\u21906",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[5],[6],[6],[],[]]},{name:"1\u20032\u2003(3\u20034\u20035)\u21906",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[6],[6],[6],[]]},{name:"1\u20032\u20033\u2003(4\u20035)\u21906",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[],[6],[6],[]]},{name:"1\u20032\u21904\u20033\u2190(5\u20036)",carrierCount:3,associatedCarrier:[1,2,3,3,3,3],modulatedBy:[[],[4],[5,6],[],[],[]]},{name:"1\u21904\u20032\u2190(5\u20036)\u20033",carrierCount:3,associatedCarrier:[1,2,3,3,3,3],modulatedBy:[[4],[5,6],[],[],[],[]]},{name:"1\u20032\u20033\u21905\u20034\u21906",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[],[5],[6],[],[]]},{name:"1\u2003(2\u20033)\u21905\u21906\u20034",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[5],[5],[],[6],[]]},{name:"1\u20032\u20033\u21905\u21906\u20034",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[],[5,6],[],[],[]]},{name:"(1\u20032\u20033\u20034\u20035)\u21906",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[6],[6],[6],[6],[6],[]]},{name:"1\u20032\u20033\u20034\u20035\u21906",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[],[],[6],[]]},{name:"1\u20032\u20033\u20034\u20035\u20036",carrierCount:6,associatedCarrier:[1,2,3,4,5,6],modulatedBy:[[],[],[],[],[],[]]},{name:"1\u2190(2 (3 (4 (5 (6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[2,3,4,5,6],[3,4,5,6],[4,5,6],[5,6],[6],[]]},{name:"1\u2190(2(3(4(5(6",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[3,4,5,6],[4,5,6],[5,6],[6],[]]},{name:"1\u21904(2\u21905(3\u21906",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[2,3,4],[3,5],[6],[],[],[]]},{name:"1\u21904(2\u21905 3\u21906",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[2,3,4],[5],[6],[],[],[]]}]);static operatorCarrierInterval=[0,.04,-.073,.091,.061,.024];static operatorAmplitudeMax=15;static operatorFrequencies=me([{name:"0.12\xD7",mult:.125,hzOffset:0,amplitudeSign:1},{name:"0.25\xD7",mult:.25,hzOffset:0,amplitudeSign:1},{name:"0.5\xD7",mult:.5,hzOffset:0,amplitudeSign:1},{name:"0.75\xD7",mult:.75,hzOffset:0,amplitudeSign:1},{name:"1\xD7",mult:1,hzOffset:0,amplitudeSign:1},{name:"~1\xD7",mult:1,hzOffset:1.5,amplitudeSign:-1},{name:"2\xD7",mult:2,hzOffset:0,amplitudeSign:1},{name:"~2\xD7",mult:2,hzOffset:-1.3,amplitudeSign:-1},{name:"3\xD7",mult:3,hzOffset:0,amplitudeSign:1},{name:"3.5\xD7",mult:3.5,hzOffset:-.05,amplitudeSign:1},{name:"4\xD7",mult:4,hzOffset:0,amplitudeSign:1},{name:"~4\xD7",mult:4,hzOffset:-2.4,amplitudeSign:-1},{name:"5\xD7",mult:5,hzOffset:0,amplitudeSign:1},{name:"6\xD7",mult:6,hzOffset:0,amplitudeSign:1},{name:"7\xD7",mult:7,hzOffset:0,amplitudeSign:1},{name:"8\xD7",mult:8,hzOffset:0,amplitudeSign:1},{name:"9\xD7",mult:9,hzOffset:0,amplitudeSign:1},{name:"10\xD7",mult:10,hzOffset:0,amplitudeSign:1},{name:"11\xD7",mult:11,hzOffset:0,amplitudeSign:1},{name:"12\xD7",mult:12,hzOffset:0,amplitudeSign:1},{name:"13\xD7",mult:13,hzOffset:0,amplitudeSign:1},{name:"14\xD7",mult:14,hzOffset:0,amplitudeSign:1},{name:"15\xD7",mult:15,hzOffset:0,amplitudeSign:1},{name:"16\xD7",mult:16,hzOffset:0,amplitudeSign:1},{name:"17\xD7",mult:17,hzOffset:0,amplitudeSign:1},{name:"18\xD7",mult:18,hzOffset:0,amplitudeSign:1},{name:"19\xD7",mult:19,hzOffset:0,amplitudeSign:1},{name:"20\xD7",mult:20,hzOffset:0,amplitudeSign:1},{name:"~20\xD7",mult:20,hzOffset:-5,amplitudeSign:-1},{name:"25\xD7",mult:25,hzOffset:0,amplitudeSign:1},{name:"50\xD7",mult:50,hzOffset:0,amplitudeSign:1},{name:"75\xD7",mult:75,hzOffset:0,amplitudeSign:1},{name:"100\xD7",mult:100,hzOffset:0,amplitudeSign:1},{name:"128\xD7",mult:128,hzOffset:0,amplitudeSign:1},{name:"256\xD7",mult:250,hzOffset:0,amplitudeSign:1}]);static envelopes=me([{name:"none",type:0,speed:0},{name:"note size",type:1,speed:0},{name:"pitch",type:2,speed:0},{name:"punch",type:4,speed:0},{name:"flare -1",type:5,speed:128},{name:"flare 1",type:5,speed:32},{name:"flare 2",type:5,speed:8},{name:"flare 3",type:5,speed:2},{name:"twang -1",type:6,speed:128},{name:"twang 1",type:6,speed:32},{name:"twang 2",type:6,speed:8},{name:"twang 3",type:6,speed:2},{name:"swell -1",type:7,speed:128},{name:"swell 1",type:7,speed:32},{name:"swell 2",type:7,speed:8},{name:"swell 3",type:7,speed:2},{name:"tremolo0",type:8,speed:8},{name:"tremolo1",type:8,speed:4},{name:"tremolo2",type:8,speed:2},{name:"tremolo3",type:8,speed:1},{name:"tremolo4",type:9,speed:4},{name:"tremolo5",type:9,speed:2},{name:"tremolo6",type:9,speed:1},{name:"decay -1",type:10,speed:40},{name:"decay 1",type:10,speed:10},{name:"decay 2",type:10,speed:7},{name:"decay 3",type:10,speed:4},{name:"wibble-1",type:11,speed:128},{name:"wibble 1",type:11,speed:24},{name:"wibble 2",type:11,speed:12},{name:"wibble 3",type:11,speed:4},{name:"linear-2",type:12,speed:256},{name:"linear-1",type:12,speed:128},{name:"linear 1",type:12,speed:32},{name:"linear 2",type:12,speed:8},{name:"linear 3",type:12,speed:2},{name:"rise -2",type:13,speed:256},{name:"rise -1",type:13,speed:128},{name:"rise 1",type:13,speed:32},{name:"rise 2",type:13,speed:8},{name:"rise 3",type:13,speed:2},{name:"flute 1",type:11,speed:16},{name:"flute 2",type:11,speed:8},{name:"flute 3",type:11,speed:4},{name:"tripolo1",type:8,speed:9},{name:"tripolo2",type:8,speed:6},{name:"tripolo3",type:8,speed:3},{name:"tripolo4",type:9,speed:9},{name:"tripolo5",type:9,speed:6},{name:"tripolo6",type:9,speed:3},{name:"pentolo1",type:8,speed:10},{name:"pentolo2",type:8,speed:5},{name:"pentolo3",type:8,speed:2.5},{name:"pentolo4",type:9,speed:10},{name:"pentolo5",type:9,speed:5},{name:"pentolo6",type:9,speed:2.5},{name:"flutter 1",type:8,speed:14},{name:"flutter 2",type:9,speed:11},{name:"water-y flutter",type:8,speed:9},{name:"blip 1",type:14,speed:6},{name:"blip 2",type:14,speed:16},{name:"blip 3",type:14,speed:32},{name:"fall 1",type:15,speed:8},{name:"fall 2",type:15,speed:4},{name:"fall 3",type:15,speed:2}]);static newEnvelopes=me([{name:"none",type:0,speed:0},{name:"note size",type:1,speed:0},{name:"pitch",type:2,speed:0},{name:"random",type:3,speed:4},{name:"punch",type:4,speed:0},{name:"flare",type:5,speed:32},{name:"twang",type:6,speed:32},{name:"swell",type:7,speed:32},{name:"lfo",type:8,speed:4},{name:"decay",type:10,speed:10},{name:"wibble",type:11,speed:24},{name:"linear",type:12,speed:32},{name:"rise",type:13,speed:32},{name:"blip",type:14,speed:6},{name:"fall",type:15,speed:2}]);static feedbacks=me([{name:"1\u27F2",indices:[[1],[],[],[]]},{name:"2\u27F2",indices:[[],[2],[],[]]},{name:"3\u27F2",indices:[[],[],[3],[]]},{name:"4\u27F2",indices:[[],[],[],[4]]},{name:"1\u27F2\u20032\u27F2",indices:[[1],[2],[],[]]},{name:"3\u27F2\u20034\u27F2",indices:[[],[],[3],[4]]},{name:"1\u27F2\u20032\u27F2\u20033\u27F2",indices:[[1],[2],[3],[]]},{name:"2\u27F2\u20033\u27F2\u20034\u27F2",indices:[[],[2],[3],[4]]},{name:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",indices:[[1],[2],[3],[4]]},{name:"1\u21922",indices:[[],[1],[],[]]},{name:"1\u21923",indices:[[],[],[1],[]]},{name:"1\u21924",indices:[[],[],[],[1]]},{name:"2\u21923",indices:[[],[],[2],[]]},{name:"2\u21924",indices:[[],[],[],[2]]},{name:"3\u21924",indices:[[],[],[],[3]]},{name:"1\u21923\u20032\u21924",indices:[[],[],[1],[2]]},{name:"1\u21924\u20032\u21923",indices:[[],[],[2],[1]]},{name:"1\u21922\u21923\u21924",indices:[[],[1],[2],[3]]},{name:"1\u21942 3\u21944",indices:[[2],[1],[4],[3]]},{name:"1\u21944 2\u21943",indices:[[4],[3],[2],[1]]},{name:"2\u21921\u21924\u21923\u21922",indices:[[2],[3],[4],[1]]},{name:"1\u21922\u21923\u21924\u21921",indices:[[4],[1],[2],[3]]},{name:"(1 2 3)\u21924",indices:[[],[],[],[1,2,3]]},{name:"ALL",indices:[[1,2,3,4],[1,2,3,4],[1,2,3,4],[1,2,3,4]]}]);static feedbacks6Op=me([{name:"Custom",indices:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1\u27F2",indices:[[1],[],[],[],[],[]]},{name:"2\u27F2",indices:[[],[2],[],[],[],[]]},{name:"3\u27F2",indices:[[],[],[3],[],[],[]]},{name:"4\u27F2",indices:[[],[],[],[4],[],[]]},{name:"5\u27F2",indices:[[],[],[],[],[5],[]]},{name:"6\u27F2",indices:[[],[],[],[],[],[6]]},{name:"1\u27F2\u20022\u27F2",indices:[[1],[2],[],[],[],[]]},{name:"3\u27F2\u20024\u27F2",indices:[[],[],[3],[4],[],[]]},{name:"1\u27F2\u20022\u27F2\u20023\u27F2",indices:[[1],[2],[3],[],[],[]]},{name:"2\u27F2\u20023\u27F2\u20024\u27F2",indices:[[],[2],[3],[4],[],[]]},{name:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",indices:[[1],[2],[3],[4],[],[]]},{name:"1\u27F2 2\u27F2 3\u27F2 4\u27F2 5\u27F2",indices:[[1],[2],[3],[4],[5],[]]},{name:"1\u27F2 2\u27F2 3\u27F2 4\u27F2 5\u27F2 6\u27F2",indices:[[1],[2],[3],[4],[5],[6]]},{name:"1\u21922",indices:[[],[1],[],[],[],[]]},{name:"1\u21923",indices:[[],[],[1],[],[],[]]},{name:"1\u21924",indices:[[],[],[],[1],[],[]]},{name:"1\u21925",indices:[[],[],[],[],[1],[]]},{name:"1\u21926",indices:[[],[],[],[],[],[1]]},{name:"2\u21923",indices:[[],[],[2],[],[],[]]},{name:"2\u21924",indices:[[],[],[],[2],[],[]]},{name:"3\u21924",indices:[[],[],[],[3],[],[]]},{name:"4\u21925",indices:[[],[],[],[],[4],[]]},{name:"1\u21924\u20022\u21925 3\u21926",indices:[[],[],[],[1],[2],[3]]},{name:"1\u21925\u20022\u21926 3\u21924",indices:[[],[],[],[3],[1],[2]]},{name:"1\u21922\u21923\u21924\u21925\u21926",indices:[[],[1],[2],[3],[4],[5]]},{name:"2\u21921\u21926\u21925\u21924\u21923\u21922",indices:[[2],[3],[4],[5],[6],[1]]},{name:"1\u21922\u21923\u21924\u21925\u21926\u21921",indices:[[6],[1],[2],[3],[4],[5]]},{name:"1\u21942 3\u21944 5\u21946",indices:[[2],[1],[4],[3],[6],[5]]},{name:"1\u21944 2\u21945 3\u21946",indices:[[4],[5],[6],[1],[2],[3]]},{name:"(1,2,3,4,5)\u21926",indices:[[],[],[],[],[],[1,2,3,4,5]]},{name:"ALL",indices:[[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6]]}]);static chipNoiseLength=32768;static spectrumNoiseLength=32768;static spectrumBasePitch=24;static spectrumControlPoints=30;static spectrumControlPointsPerOctave=7;static spectrumControlPointBits=3;static spectrumMax=(1<<l.spectrumControlPointBits)-1;static harmonicsControlPoints=28;static harmonicsRendered=64;static harmonicsRenderedForPickedString=256;static harmonicsControlPointBits=3;static harmonicsMax=(1<<l.harmonicsControlPointBits)-1;static harmonicsWavelength=2048;static pulseWidthRange=50;static pulseWidthStepPower=.5;static supersawVoiceCount=7;static supersawDynamismMax=6;static supersawSpreadMax=12;static supersawShapeMax=6;static pitchChannelCountMin=1;static pitchChannelCountMax=60;static noiseChannelCountMin=0;static noiseChannelCountMax=60;static modChannelCountMin=0;static modChannelCountMax=60;static noiseInterval=6;static pitchesPerOctave=12;static drumCount=12;static pitchOctaves=8;static modCount=6;static maxPitch=l.pitchOctaves*l.pitchesPerOctave;static maximumTonesPerChannel=l.maxChordSize*2;static justIntonationSemitones=[1/2,8/15,9/16,3/5,5/8,2/3,32/45,3/4,4/5,5/6,8/9,15/16,1,16/15,9/8,6/5,5/4,4/3,45/32,3/2,8/5,5/3,16/9,15/8,2].map(e=>Math.log2(e)*l.pitchesPerOctave);static pitchShiftRange=l.justIntonationSemitones.length;static pitchShiftCenter=l.pitchShiftRange>>1;static detuneCenter=200;static detuneMax=400;static detuneMin=0;static songDetuneMin=0;static songDetuneMax=500;static unisonVoicesMin=1;static unisonVoicesMax=9;static unisonSpreadMin=-96;static unisonSpreadMax=96;static unisonOffsetMin=-96;static unisonOffsetMax=96;static unisonExpressionMin=-2;static unisonExpressionMax=2;static unisonSignMin=-2;static unisonSignMax=2;static sineWaveLength=256;static sineWaveMask=l.sineWaveLength-1;static generateSineWave(){let e=new Float32Array(l.sineWaveLength+1);for(let a=0;a<l.sineWaveLength+1;a++)e[a]=Math.sin(a*Math.PI*2/l.sineWaveLength);return e}static generateTriWave(){let e=new Float32Array(l.sineWaveLength+1);for(let a=0;a<l.sineWaveLength+1;a++)e[a]=Math.asin(Math.sin(a*Math.PI*2/l.sineWaveLength))/(Math.PI/2);return e}static generateTrapezoidWave(e=2){let a=new Float32Array(l.sineWaveLength+1);for(let i=0;i<l.sineWaveLength+1;i++)a[i]=Math.max(-1,Math.min(1,Math.asin(Math.sin(i*Math.PI*2/l.sineWaveLength))*e));return a}static generateSquareWave(e=0){let a=new Float32Array(l.sineWaveLength+1),i=l.sineWaveLength/4;for(let n=0;n<l.sineWaveLength+1;n++)a[n]=+(Math.abs(n-i)<e*l.sineWaveLength/2||Math.abs(n-l.sineWaveLength-i)<e*l.sineWaveLength/2)*2-1;return a}static generateSawWave(e=!1){let a=new Float32Array(l.sineWaveLength+1);for(let i=0;i<l.sineWaveLength+1;i++)a[i]=(i+l.sineWaveLength/4)*2/l.sineWaveLength%2-1,a[i]=e?-a[i]:a[i];return a}static generateQuasiSineWave(){let e=new Float32Array(l.sineWaveLength+1);for(let a=0;a<l.sineWaveLength+1;a++)e[a]=Math.round(Math.sin(a*Math.PI*2/l.sineWaveLength));return e}static sineWave=l.generateSineWave();static perEnvelopeSpeedIndices=[0,.01,.02,.03,.04,.05,.06,.07,.08,.09,.1,.2,.25,.3,.3333,.4,.5,.6,.6667,.7,.75,.8,.9,1,1.25,1.3333,1.5,1.6667,1.75,2,2.25,2.5,2.75,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,11,12,13,14,15,16,17,18,19,20,24,32,40,64,128,256];static perEnvelopeSpeedToIndices={0:0,.01:1,.02:2,.03:3,.04:4,.05:5,.06:6,.07:7,.08:8,.09:9,.1:10,.2:11,.25:12,.3:13,.3333:14,.4:15,.5:16,.6:17,.6667:18,.7:19,.75:20,.8:21,.9:22,1:23,1.25:24,1.3333:25,1.5:26,1.6667:27,1.75:28,2:29,2.25:30,2.5:31,2.75:32,3:33,3.5:34,4:35,4.5:36,5:37,5.5:38,6:39,6.5:40,7:41,7.5:42,8:43,8.5:44,9:45,9.5:46,10:47,11:48,12:49,13:50,14:51,15:52,16:53,17:54,18:55,19:56,20:57,24:58,32:59,40:60,64:61,128:62,256:63};static perEnvelopeBoundMin=0;static perEnvelopeBoundMax=2;static randomEnvelopeSeedMax=63;static randomEnvelopeStepsMax=24;static pickedStringDispersionCenterFreq=6e3;static pickedStringDispersionFreqScale=.3;static pickedStringDispersionFreqMult=4;static pickedStringShelfHz=4e3;static distortionRange=16;static stringSustainRange=15;static stringDecayRate=.12;static enableAcousticSustain=!1;static sustainTypeNames=["bright","acoustic"];static bitcrusherFreqRange=14;static bitcrusherOctaveStep=.5;static bitcrusherQuantizationRange=8;static maxEnvelopeCount=16;static defaultAutomationRange=13;static instrumentAutomationTargets=me([{name:"none",computeIndex:null,displayName:"none",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:null},{name:"noteVolume",computeIndex:0,displayName:"pre volume",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:null},{name:"mixVolume",computeIndex:1,displayName:"post volume",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:null},{name:"pulseWidth",computeIndex:3,displayName:"pulse width",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[6,8]},{name:"stringSustain",computeIndex:4,displayName:"sustain",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[7]},{name:"unison",computeIndex:5,displayName:"unison",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[0,5,7,9,6,2,3,4]},{name:"operatorFrequency",computeIndex:6,displayName:"fm# freq",interleave:!0,isFilter:!1,maxCount:l.operatorCount+2,effect:null,mdeffect:null,compatibleInstruments:[1,11]},{name:"operatorAmplitude",computeIndex:12,displayName:"fm# volume",interleave:!1,isFilter:!1,maxCount:l.operatorCount+2,effect:null,mdeffect:null,compatibleInstruments:[1,11]},{name:"feedbackAmplitude",computeIndex:18,displayName:"fm feedback",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[1,11]},{name:"pitchShift",computeIndex:19,displayName:"pitch shift",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:0,compatibleInstruments:null},{name:"detune",computeIndex:20,displayName:"detune",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:1,compatibleInstruments:null},{name:"vibratoDepth",computeIndex:21,displayName:"vibrato depth",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:2,compatibleInstruments:null},{name:"noteFilterAllFreqs",computeIndex:2,displayName:"pre eq freqs",interleave:!1,isFilter:!0,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:null},{name:"noteFilterFreq",computeIndex:22,displayName:"pre eq # freq",interleave:!1,isFilter:!0,maxCount:l.filterMaxPoints,effect:null,mdeffect:null,compatibleInstruments:null},{name:"decimalOffset",computeIndex:38,displayName:"decimal offset",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[6,8]},{name:"supersawDynamism",computeIndex:39,displayName:"dynamism",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[8]},{name:"supersawSpread",computeIndex:40,displayName:"spread",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[8]},{name:"supersawShape",computeIndex:41,displayName:"saw\u2194pulse",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[8]},{name:"gain",computeIndex:57,displayName:"gain",interleave:!1,isFilter:!1,maxCount:1,effect:9,mdeffect:null,compatibleInstruments:null},{name:"panning",computeIndex:42,displayName:"panning",interleave:!1,isFilter:!1,maxCount:1,effect:2,mdeffect:null,compatibleInstruments:null},{name:"distortion",computeIndex:43,displayName:"distortion",interleave:!1,isFilter:!1,maxCount:1,effect:3,mdeffect:null,compatibleInstruments:null},{name:"bitcrusherQuantization",computeIndex:44,displayName:"bitcrush",interleave:!1,isFilter:!1,maxCount:1,effect:4,mdeffect:null,compatibleInstruments:null},{name:"bitcrusherFrequency",computeIndex:45,displayName:"freq crush",interleave:!1,isFilter:!1,maxCount:1,effect:4,mdeffect:null,compatibleInstruments:null},{name:"flanger",computeIndex:58,displayName:"flanger",interleave:!1,isFilter:!1,maxCount:1,effect:10,mdeffect:null,compatibleInstruments:null},{name:"flangerSpeed",computeIndex:58,displayName:"flanger speed",interleave:!1,isFilter:!1,maxCount:1,effect:10,mdeffect:null,compatibleInstruments:null},{name:"flangerDepth",computeIndex:58,displayName:"flanger depth",interleave:!1,isFilter:!1,maxCount:1,effect:10,mdeffect:null,compatibleInstruments:null},{name:"flangerFeedback",computeIndex:58,displayName:"flanger feedback",interleave:!1,isFilter:!1,maxCount:1,effect:10,mdeffect:null,compatibleInstruments:null},{name:"chorus",computeIndex:46,displayName:"chorus",interleave:!1,isFilter:!1,maxCount:1,effect:1,mdeffect:null,compatibleInstruments:null},{name:"echoSustain",computeIndex:47,displayName:"echo",interleave:!1,isFilter:!1,maxCount:1,effect:6,mdeffect:null,compatibleInstruments:null},{name:"reverb",computeIndex:48,displayName:"reverb",interleave:!1,isFilter:!1,maxCount:1,effect:0,mdeffect:null,compatibleInstruments:null},{name:"arpeggioSpeed",computeIndex:49,displayName:"arpeggio speed",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:4,compatibleInstruments:null},{name:"ringModulation",computeIndex:50,displayName:"ring mod",interleave:!1,isFilter:!1,maxCount:1,effect:7,mdeffect:null,compatibleInstruments:null},{name:"ringModulationHz",computeIndex:51,displayName:"ring mod hz",interleave:!1,isFilter:!1,maxCount:1,effect:7,mdeffect:null,compatibleInstruments:null},{name:"granular",computeIndex:52,displayName:"granular",interleave:!1,isFilter:!1,maxCount:1,effect:8,mdeffect:null,compatibleInstruments:null},{name:"grainFreq",computeIndex:53,displayName:"grain freq",interleave:!1,isFilter:!1,maxCount:1,effect:8,mdeffect:null,compatibleInstruments:null},{name:"grainSize",computeIndex:54,displayName:"grain size",interleave:!1,isFilter:!1,maxCount:1,effect:8,mdeffect:null,compatibleInstruments:null},{name:"grainRange",computeIndex:55,displayName:"grain range",interleave:!1,isFilter:!1,maxCount:1,effect:8,mdeffect:null,compatibleInstruments:null},{name:"echoDelay",computeIndex:56,displayName:"echo delay",interleave:!1,isFilter:!1,maxCount:1,effect:6,mdeffect:null,compatibleInstruments:null}]);static operatorWaves=me([{name:"sine",samples:l.sineWave},{name:"triangle",samples:l.generateTriWave()},{name:"pulse width",samples:l.generateSquareWave(.5)},{name:"sawtooth",samples:l.generateSawWave()},{name:"ramp",samples:l.generateSawWave(!0)},{name:"trapezoid",samples:l.generateTrapezoidWave(2)},{name:"quasi-sine",samples:l.generateQuasiSineWave()}]);static pwmOperatorWaves=me([{name:"1%",samples:l.generateSquareWave(.01)},{name:"5%",samples:l.generateSquareWave(.05)},{name:"12.5%",samples:l.generateSquareWave(.125)},{name:"25%",samples:l.generateSquareWave(.25)},{name:"33%",samples:l.generateSquareWave(1/3)},{name:"50%",samples:l.generateSquareWave(.5)},{name:"66%",samples:l.generateSquareWave(2/3)},{name:"75%",samples:l.generateSquareWave(.75)},{name:"87.5%",samples:l.generateSquareWave(.875)},{name:"95%",samples:l.generateSquareWave(.95)},{name:"99%",samples:l.generateSquareWave(.99)}]);static barEditorHeight=10;static modulators=me([{name:"none",pianoName:"None",maxRawVol:6,newNoteVol:6,forSong:!0,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"No Mod Setting",promptDesc:["No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.","[$LO - $HI]"]},{name:"song volume",pianoName:"Volume",maxRawVol:100,newNoteVol:100,forSong:!0,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Song Volume",promptDesc:["This setting affects the overall volume of the song, just like the main volume slider.","At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"tempo",pianoName:"Tempo",maxRawVol:l.tempoMax-l.tempoMin,newNoteVol:Math.ceil((l.tempoMax-l.tempoMin)/2),forSong:!0,convertRealFactor:l.tempoMin,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Song Tempo",promptDesc:["This setting controls the speed your song plays at, just like the tempo slider.","When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.","Note that you can make a 'swing' effect by rapidly changing between two tempo values.","[OVERWRITING] [$LO - $HI] [BPM]"]},{name:"song reverb",pianoName:"Reverb",maxRawVol:l.reverbRange*2,newNoteVol:l.reverbRange,forSong:!0,convertRealFactor:-l.reverbRange,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Song Reverb",promptDesc:["This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.","At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"next bar",pianoName:"Next Bar",maxRawVol:1,newNoteVol:1,forSong:!0,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Go To Next Bar",promptDesc:["This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.","This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.","You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.","[$LO - $HI]"]},{name:"pre volume",pianoName:"Note Vol.",maxRawVol:l.volumeRange,newNoteVol:Math.ceil(l.volumeRange/2),forSong:!1,convertRealFactor:Math.ceil(-l.volumeRange/2),associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Pre Volume",promptDesc:["This setting affects the volume of your instrument as if its note size had been scaled.","At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.","This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, pre volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'post volume' modulator instead, which will always just scale the volume with no added effects.","For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'post volume' modulator anyhow. However, as mentioned, it works more like changing pre volume.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"gain",pianoName:"Gain",maxRawVol:l.volumeRange/2*l.gainRangeMult,newNoteVol:Math.ceil(l.volumeRange/2*l.gainRangeMult/2),forSong:!1,convertRealFactor:0,associatedEffect:9,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Gain",promptDesc:["This setting controls the gain of your instrument.","At $LO, the instrument is muted, at $MID it will be unchanged, and at $HI, it will have maximum gain.","[OVERWRITING] [$LO - $HI] [L-R]"]},{name:"pan",pianoName:"Pan",maxRawVol:l.panMax,newNoteVol:Math.ceil(l.panMax/2),forSong:!1,convertRealFactor:0,associatedEffect:2,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Panning",promptDesc:["This setting controls the panning of your instrument, just like the panning slider.","At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.","[OVERWRITING] [$LO - $HI] [L-R]"]},{name:"reverb",pianoName:"Reverb",maxRawVol:l.reverbRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:0,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Reverb",promptDesc:["This setting controls the reverb of your insturment, just like the reverb slider.","At $LO, your instrument will have no reverb. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"distortion",pianoName:"Distortion",maxRawVol:l.distortionRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:3,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Distortion",promptDesc:["This setting controls the amount of distortion for your instrument, just like the distortion slider.","At $LO, your instrument will have no distortion. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"fm slider 1",pianoName:"FM 1",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Slider 1",promptDesc:["This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 2",pianoName:"FM 2",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Slider 2",promptDesc:["This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 3",pianoName:"FM 3",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Slider 3",promptDesc:["This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 4",pianoName:"FM 4",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Slider 4",promptDesc:["This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm feedback",pianoName:"FM Feedbck",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Feedback",promptDesc:["This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"pulse width",pianoName:"Pulse Width",maxRawVol:l.pulseWidthRange,newNoteVol:l.pulseWidthRange,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Pulse Width",promptDesc:["This setting controls the width of this instrument's pulse wave, just like the pulse width slider.","At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).","Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.","[OVERWRITING] [$LO - $HI] [%Duty]"]},{name:"detune",pianoName:"Detune",maxRawVol:l.detuneMax-l.detuneMin,newNoteVol:l.detuneCenter,forSong:!1,convertRealFactor:-l.detuneCenter,associatedEffect:11,associatedMDEffect:1,maxIndex:0,promptName:"Instrument Detune",promptDesc:["This setting controls the detune for this instrument, just like the detune slider.","At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.","[OVERWRITING] [$LO - $HI] [cents]"]},{name:"vibrato depth",pianoName:"Vibrato Depth",maxRawVol:50,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:2,maxIndex:0,promptName:"Vibrato Depth",promptDesc:["This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.","At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.","[OVERWRITING] [$LO - $HI] [pitch \xF725]"]},{name:"song detune",pianoName:"Detune",maxRawVol:l.songDetuneMax-l.songDetuneMin,newNoteVol:Math.ceil((l.songDetuneMax-l.songDetuneMin)/2),forSong:!0,convertRealFactor:-250,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Song Detune",promptDesc:["This setting controls the overall detune of the entire song. There is no associated slider.","At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.","[MULTIPLICATIVE] [$LO - $HI] [cents x4]"]},{name:"vibrato speed",pianoName:"Vibrato Speed",maxRawVol:30,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:2,maxIndex:0,promptName:"Vibrato Speed",promptDesc:["This setting controls the speed your instrument will vibrato at, just like the slider.","A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"vibrato delay",pianoName:"Vibrato Delay",maxRawVol:50,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:2,maxIndex:0,promptName:"Vibrato Delay",promptDesc:["This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.","A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).","[OVERWRITING] [$LO - $HI] [beats \xF724]"]},{name:"arp speed",pianoName:"Arp Speed",maxRawVol:50,newNoteVol:12,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:4,maxIndex:0,promptName:"Arpeggio Speed",promptDesc:["This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.","Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.","[0-4]: x0, x1/16, x\u215B, x\u2155, x\xBC,","[5-9]: x\u2153, x\u2156, x\xBD, x\u2154, x\xBE,","[10-14]: x\u2158, x0.9, x1, x1.1, x1.2,","[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,","[20-24]: x1.8, x1.9, x2, x2.1, x2.2,","[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,","[30-34]: x2.8, x2.9, x3, x3.1, x3.2,","[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,","[40-44]: x3.8, x3.9, x4, x4.15, x4.3,","[45-50]: x4.5, x4.8, x5, x5.5, x6, x8","[OVERWRITING] [$LO - $HI]"]},{name:"pan delay",pianoName:"Pan Delay",maxRawVol:20,newNoteVol:10,forSong:!1,convertRealFactor:0,associatedEffect:2,associatedMDEffect:6,maxIndex:0,promptName:"Panning Delay",promptDesc:["This setting controls the delay applied to panning for your instrument, just like the pan delay slider.","With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.","[OVERWRITING] [$LO - $HI]"]},{name:"reset arp",pianoName:"Reset Arp",maxRawVol:1,newNoteVol:1,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:4,maxIndex:0,promptName:"Reset Arpeggio",promptDesc:["This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.","This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.","[$LO - $HI]"]},{name:"post eq",pianoName:"PostEQ",maxRawVol:10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"EQ Filter",promptDesc:["This setting controls a few separate things for your instrument's EQ filter.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"pre eq",pianoName:"PreEQ",maxRawVol:10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:5,associatedMDEffect:6,maxIndex:0,promptName:"Note Filter",promptDesc:["This setting controls a few separate things for your instrument's note filter.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"bit crush",pianoName:"Bitcrush",maxRawVol:l.bitcrusherQuantizationRange-1,newNoteVol:Math.round(l.bitcrusherQuantizationRange/2),forSong:!1,convertRealFactor:0,associatedEffect:4,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Bit Crush",promptDesc:["This setting controls the bit crush of your instrument, just like the bit crush slider.","At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"freq crush",pianoName:"Freq Crush",maxRawVol:l.bitcrusherFreqRange-1,newNoteVol:Math.round(l.bitcrusherFreqRange/2),forSong:!1,convertRealFactor:0,associatedEffect:4,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Frequency Crush",promptDesc:["This setting controls the frequency crush of your instrument, just like the freq crush slider.","At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"echo",pianoName:"Echo",maxRawVol:l.echoSustainRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:6,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Echo Sustain",promptDesc:["This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.","At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"echo delay",pianoName:"Echo Delay",maxRawVol:l.echoDelayRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:6,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Echo Delay",promptDesc:["This setting controls the echo delay of your instrument, just like the echo delay slider.","At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.","[OVERWRITING] [$LO - $HI] [~beats \xF712]"]},{name:"echo ping pong",pianoName:"Ping-Pong",maxRawVol:l.panMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:6,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Ping Pong",promptDesc:["This setting controls the echo ping-pong of your instrument, just like the echo delay slider.","At $LO, the echo will start fully from the left-ear side. At $MID there will be no echo ping pong, and at $HI, it will start coming fully from the right.","[OVERWRITING] [$LO - $HI] [L-R]"]},{name:"flanger",pianoName:"Flanger",maxRawVol:l.flangerRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:10,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Flanger",promptDesc:["This setting controls the flanger strength of your instrument, just like the flanger slider.","At $LO, the flanger effect will be disabled. The strength of the flanger effect increases up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"flanger speed",pianoName:"Flanger Spd",maxRawVol:l.flangerSpeedRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:10,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Flanger Speed",promptDesc:["This setting controls the flanger speed of your instrument, just like the flanger speed slider."]},{name:"flanger depth",pianoName:"Flanger Dpth",maxRawVol:l.flangerDepthRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:10,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Flanger Depth",promptDesc:["This setting controls the flanger depth of your instrument, just like the flanger depth slider."]},{name:"flanger feedback",pianoName:"Flanger Fbck",maxRawVol:l.flangerFeedbackRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:10,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Flanger Feedback",promptDesc:["This setting controls the flanger feedback of your instrument, just like the flanger feedback slider."]},{name:"chorus",pianoName:"Chorus",maxRawVol:l.chorusRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:1,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Chorus",promptDesc:["This setting controls the chorus strength of your instrument, just like the chorus slider.","At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"post eq cut",pianoName:"PostEQ Cut",maxRawVol:l.filterSimpleCutRange-1,newNoteVol:l.filterSimpleCutRange-1,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"EQ Filter Cutoff Frequency",promptDesc:["This setting controls the filter cut position of your instrument, just like the filter cut slider.","This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.","[OVERWRITING] [$LO - $HI]"]},{name:"post eq peak",pianoName:"PostEQ Peak",maxRawVol:l.filterSimplePeakRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"EQ Filter Peak Gain",promptDesc:["This setting controls the filter peak position of your instrument, just like the filter peak slider.","This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.","[OVERWRITING] [$LO - $HI]"]},{name:"pre eq cut",pianoName:"PreEQ Cut",maxRawVol:l.filterSimpleCutRange-1,newNoteVol:l.filterSimpleCutRange-1,forSong:!1,convertRealFactor:0,associatedEffect:5,associatedMDEffect:6,maxIndex:0,promptName:"Note Filter Cutoff Frequency",promptDesc:["This setting controls the filter cut position of your instrument, just like the filter cut slider.","This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.","[OVERWRITING] [$LO - $HI]"]},{name:"pre eq peak",pianoName:"PreEQ Peak",maxRawVol:l.filterSimplePeakRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:5,associatedMDEffect:6,maxIndex:0,promptName:"Note Filter Peak Gain",promptDesc:["This setting controls the filter peak position of your instrument, just like the filter peak slider.","This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.","[OVERWRITING] [$LO - $HI]"]},{name:"pitch shift",pianoName:"Pitch Shift",maxRawVol:l.pitchShiftRange-1,newNoteVol:l.pitchShiftCenter,forSong:!1,convertRealFactor:-l.pitchShiftCenter,associatedEffect:11,associatedMDEffect:0,maxIndex:0,promptName:"Pitch Shift",promptDesc:["This setting controls the pitch offset of your instrument, just like the pitch shift slider.","At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.","[OVERWRITING] [$LO - $HI] [pitch]"]},{name:"sustain",pianoName:"Sustain",maxRawVol:l.stringSustainRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Picked String Sustain",promptDesc:["This setting controls the sustain of your picked string instrument, just like the sustain slider.","At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"post volume",pianoName:"Mix Vol.",maxRawVol:l.volumeRange,newNoteVol:Math.ceil(l.volumeRange/2),forSong:!1,convertRealFactor:Math.ceil(-l.volumeRange/2),associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Post Volume",promptDesc:["This setting affects the volume of your instrument as if its volume slider had been moved.","At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.","Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"fm slider 5",pianoName:"FM 5",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Slider 5",promptDesc:["This setting affects the strength of the fifth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 6",pianoName:"FM 6",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Slider 6",promptDesc:["This setting affects the strength of the sixth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"decimal offset",pianoName:"Decimal Offset",maxRawVol:99,newNoteVol:0,forSong:!1,convertRealFactor:0,invertSliderIndicator:!0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Decimal Offset",promptDesc:["This setting controls the decimal offset that is subtracted from the pulse width; use this for creating values like 12.5 or 6.25.","[$LO - $HI]"]},{name:"envelope speed",pianoName:"EnvelopeSpd",maxRawVol:50,newNoteVol:12,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Envelope Speed",promptDesc:["This setting controls how fast all of the envelopes for the instrument play.","At $LO, your instrument's envelopes will be frozen, and at values near there they will change very slowly. At 12, the envelopes will work as usual, performing at normal speed. This increases up to $HI, where the envelopes will change very quickly. The speeds are given below:","[0-4]: x0, x1/16, x\u215B, x\u2155, x\xBC,","[5-9]: x\u2153, x\u2156, x\xBD, x\u2154, x\xBE,","[10-14]: x\u2158, x0.9, x1, x1.1, x1.2,","[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,","[20-24]: x1.8, x1.9, x2, x2.1, x2.2,","[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,","[30-34]: x2.8, x2.9, x3, x3.1, x3.2,","[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,","[40-44]: x3.8, x3.9, x4, x4.15, x4.3,","[45-50]: x4.5, x4.8, x5, x5.5, x6, x8","[OVERWRITING] [$LO - $HI]"]},{name:"dynamism",pianoName:"Dynamism",maxRawVol:l.supersawDynamismMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Supersaw Dynamism",promptDesc:["This setting controls the supersaw dynamism of your instrument, just like the dynamism slider.","At $LO, your instrument will have only a single pulse contributing. Increasing this will raise the contribution of other waves which is similar to a chorus effect. The effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"spread",pianoName:"Spread",maxRawVol:l.supersawSpreadMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Supersaw Spread",promptDesc:["This setting controls the supersaw spread of your instrument, just like the spread slider.","At $LO, all the pulses in your supersaw will be at the same frequency. Increasing this value raises the frequency spread of the contributing waves, up to a dissonant spread at the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"saw shape",pianoName:"Saw Shape",maxRawVol:l.supersawShapeMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Supersaw Shape",promptDesc:["This setting controls the supersaw shape of your instrument, just like the Saw\u2194Pulse slider.","As the slider's name implies, this effect will give you a sawtooth wave at $LO, and a full pulse width wave at $HI. Values in between will be a blend of the two.","[OVERWRITING] [$LO - $HI] [%]"]},{name:"individual envelope speed",pianoName:"IndvEnvSpd",maxRawVol:63,newNoteVol:23,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:this.maxEnvelopeCount-1,promptName:"Individual Envelope Speed",promptDesc:["This setting controls how fast the specified envelope of the instrument will play.","At $LO, your the envelope will be frozen, and at values near there they will change very slowly. At 23, the envelope will work as usual, performing at normal speed. This increases up to $HI, where the envelope will change very quickly. The speeds are given below:","[0-4]: x0, x0.01, x0.02, x0.03, x0.04,","[5-9]: x0.05, x0.06, x0.07, x0.08, x0.09,","[10-14]: x0.1, x0.2, x0.25, x0.3, x0.33,","[15-19]: x0.4, x0.5, x0.6, x0.6667, x0.7,","[20-24]: x0.75, x0.8, x0.9, x1, x1.25,","[25-29]: x1.3333, x1.5, x1.6667, x1.75, x2,","[30-34]: x2.25, x2.5, x2.75, x3, x3.5,","[35-39]: x4, x4.5, x5, x5.5, x6,","[40-44]: x6.5, x7, x7.5, x8, x8.5,","[45-49]: x9, x9.5, x10, x11, x12","[50-54]: x13, x14, x15, x16, x17","[55-59]: x18, x19, x20, x24, x32","[60-63]: x40, x64, x128, x256","[OVERWRITING] [$LO - $HI]"]},{name:"song eq",pianoName:"Song EQ",maxRawVol:10,newNoteVol:0,forSong:!0,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Song EQ Filter",promptDesc:["This setting overwrites every instrument's eq filter. You can do this in a few separate ways, similar to the per instrument eq filter modulator.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"reset envelope",pianoName:"ResetEnv",maxRawVol:1,newNoteVol:1,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:this.maxEnvelopeCount-1,promptName:"Reset Envelope",promptDesc:["This setting functions a lot like the reset arp modulator. Wherever a note is placed, the envelope of this instrument at the specified index will reset at the very start of that note. ","[$LO - $HI]"]},{name:"ring modulation",pianoName:"Ring Mod",maxRawVol:l.ringModRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:7,associatedMDEffect:6,maxIndex:0,promptName:"Ring Modulation",promptDesc:["This setting controls the Ring Modulation effect in your instrument.","[OVERWRITING] [$LO - $HI]"]},{name:"ring mod hertz",pianoName:"Ring Mod(Hz)",maxRawVol:l.ringModHzRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:7,associatedMDEffect:6,maxIndex:0,promptName:"Ring Modulation (Hertz)",promptDesc:["This setting controls the Hertz (Hz) used in the Ring Modulation effect in your instrument.","[OVERWRITING] [$LO - $HI]"]},{name:"granular",pianoName:"Granular",maxRawVol:l.granularRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:8,associatedMDEffect:6,maxIndex:0,promptName:"Granular",promptDesc:["This setting controls the granular effect in your instrument.","[OVERWRITING] [$LO - $HI]"]},{name:"grain freq",pianoName:"Grain #",maxRawVol:l.grainAmountsMax,newNoteVol:8,forSong:!1,convertRealFactor:0,associatedEffect:8,associatedMDEffect:6,maxIndex:0,promptName:"Grain Count",promptDesc:["This setting controls the density of grains for the granular effect on your instrument.","[OVERWRITING] [$LO - $HI]"]},{name:"grain size",pianoName:"Grain Size",maxRawVol:l.grainSizeMax/l.grainSizeStep,newNoteVol:l.grainSizeMin/l.grainSizeStep,forSong:!1,convertRealFactor:0,associatedEffect:8,associatedMDEffect:6,maxIndex:0,promptName:"Grain Size",promptDesc:["This setting controls the grain size of the granular effect in your instrument.","The number shown in the mod channel is multiplied by "+l.grainSizeStep+" to get the actual grain size.","[OVERWRITING] [$LO - $HI]"]},{name:"grain range",pianoName:"Grain Range",maxRawVol:l.grainRangeMax/l.grainSizeStep,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:8,associatedMDEffect:6,maxIndex:0,promptName:"Grain Range",promptDesc:["This setting controls the range of values for your grain size of the granular effect in your instrument, from no variation to a lot","The number shown in the mod channel is multiplied by "+l.grainSizeStep+" to get the actual grain size.","[OVERWRITING] [$LO - $HI]"]},{name:"individual envelope lower bound",pianoName:"IndvEnvLow",maxRawVol:l.perEnvelopeBoundMax*10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:this.maxEnvelopeCount-1,promptName:"Individual Envelope Lower Bound",promptDesc:["This setting controls the envelope lower bound","At $LO, your the envelope will output an upper envelope bound to 0, and at $HI your envelope will output an upper envelope bound to 2.","This settings will not work if your lower envelope bound is higher than your upper envelope bound"]},{name:"individual envelope upper bound",pianoName:"IndvEnvUp",maxRawVol:l.perEnvelopeBoundMax*10,newNoteVol:10,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:this.maxEnvelopeCount-1,promptName:"Individual Envelope Upper Bound",promptDesc:["This setting controls the envelope upper bound","At $LO, your the envelope will output a 0 to lower envelope bound, and at $HI your envelope will output a 2 to lower envelope bound.","This settings will not work if your lower envelope bound is higher than your upper envelope bound"]}])};function K(l){let e=0;for(let i=0;i<l.length;i++)e+=l[i];let a=e/l.length;for(let i=0;i<l.length;i++)l[i]-=a;return St(l),l.push(0),new Float32Array(l)}function ne(l){let e=0;K(l);for(let i=0;i<l.length-1;i++)e+=Math.abs(l[i]);let a=e/(l.length-1);for(let i=0;i<l.length-1;i++)l[i]=l[i]/a;return new Float32Array(l)}function St(l){let e=0,a=new Float32Array(l.length);for(let i=0;i<l.length;i++)a[i]=e,e+=l[i];return a}function Pn(l){let e=0;for(let a=0;a<l.length;a++){let i=l[a];l[a]=e,e+=i}}function sn(l){return l/(t.pulseWidthRange*2)}function Gt(l,e,a){let i=t.chipNoises[l].samples;if(i==null){if(i=new Float32Array(t.chipNoiseLength+1),t.chipNoises[l].samples=i,l==0){let I=1;for(let F=0;F<t.chipNoiseLength;F++){i[F]=(I&1)*2-1;let M=I>>1;(I+M&1)==1&&(M+=16384),I=M}}else if(l==1)for(let I=0;I<t.chipNoiseLength;I++)i[I]=Math.random()*2-1;else if(l==2){let I=1;for(let F=0;F<t.chipNoiseLength;F++){i[F]=(I&1)*2-1;let M=I>>1;(I+M&1)==1&&(M+=32768),I=M}}else if(l==3){let I=1;for(let F=0;F<t.chipNoiseLength;F++){i[F]=(I&1)*2-1;let M=I>>1;(I+M&1)==1&&(M+=40),I=M}}else if(l==4)vt(i,t.chipNoiseLength,10,11,1,1,0),vt(i,t.chipNoiseLength,11,14,.6578,.6578,0),e(i,t.chipNoiseLength),a(i,1/Math.sqrt(t.chipNoiseLength));else if(l==5)for(var n=1,s=0;s<t.chipNoiseLength;s++){i[s]=(n&1)*2-1;var r=n>>1;(n+r&1)==1&&(r+=40),n=r}else if(l==6)vt(i,t.chipNoiseLength,1,10,1,1,0),vt(i,t.chipNoiseLength,20,14,-2,-2,0),e(i,t.chipNoiseLength),a(i,1/Math.sqrt(t.chipNoiseLength));else if(l==7)for(var n=1,s=0;s<t.chipNoiseLength;s++){i[s]=(n&1)*4*(Math.random()*14+1)-8;var r=n>>1;(n+r&1)==1&&(r+=60),n=r}else if(l==8)for(var n=1,s=0;s<t.chipNoiseLength;s++){i[s]=(n&1)/2-.5;var r=n>>1;(n+r&1)==1&&(r-=40),n=r}else if(l==9){let I=1;for(let F=0;F<t.chipNoiseLength;F++){i[F]=(I&1)*2-1.1;let M=I>>1;(I+M&1)==1&&(M+=8^2<<16),I=M}}else if(l==10)for(let I=0;I<t.chipNoiseLength;I++)i[I]=Math.round(Math.random());else if(l==11)for(var n=1,s=0;s<t.chipNoiseLength;s++){i[s]=Math.round(n&1);var r=n>>1;(n+r&1)==1&&(r-=40),n=r}else if(l==12)for(let I=0;I<t.chipNoiseLength;I++){var u=Math.random();i[I]=Math.pow(u,Math.clz32(u))}else if(l==13){var c=0,v=0,o=0,y,d,g,h;c=v=o=y=d=g=h=0;for(let I=0;I<t.chipNoiseLength;I++){var m=Math.random()*2-1;c=.99886*c+m*.0555179,v=.99332*v+m*.0750759,o=.969*o+m*.153852,y=.8665*y+m*.3104856,d=.55*d+m*.5329522,g=-.7616*g-m*.016898,i[I]=c+v+o+y+d+g+h+m*.5362,i[I]*=.44,h=m*.115926}}else if(l==14){var p=0;for(let I=0;I<t.chipNoiseLength;I++){var m=Math.random()*2-1;i[I]=(p+.02*m)/1.02,p=i[I],i[I]*=14}}else throw new Error("Unrecognized drum index: "+l);i[t.chipNoiseLength]=i[0]}return i}function vt(l,e,a,i,n,s,r){let v=Math.pow(2,a)|0,o=Math.min(e>>1,Math.pow(2,i)|0),y=Gt(0,null,null),d=0;for(let g=v;g<o;g++){let h=n+(s-n)*(Math.log2(g)-a)/(i-a),m=Math.pow(2,(h-1)*7+1)*h;m*=Math.pow(g/2048,r),d+=m,m*=y[g];let p=.61803398875*g*g*Math.PI*2;l[g]=Math.cos(p)*m,l[e-g]=Math.sin(p)*m}return d}function Pt(l,e,a){let i=t.arpeggioPatterns[l-1];return i!=null?(l==2&&e==!1&&(i=[0,0,1,1]),i[a%i.length]):a%l}function me(l){let e={};for(let i=0;i<l.length;i++){let n=l[i];n.index=i,e[n.name]=n}let a=l;return a.dictionary=e,a}function Tt(l){return(l&8)!=0}function kt(l){return(l&16)!=0}function It(l){return(l&1)!=0}function Ft(l){return(l&2)!=0}function wt(l){return(l&4)!=0}function rn(l,e=0){return l==0?0:(l>0&&(l-=1/t.ringModHzRange),l>1/t.ringModHzRange&&(l+=1/t.ringModHzRange),Math.floor(t.ringModMinHz*Math.pow(t.ringModMaxHz/t.ringModMinHz,l)))}function Gn(l){let e=new Array(l.length),a={};for(let n=0;n<e.length;n++){e[n]=Object.assign([],l[n]);let s=e[n];s.index=n,a[s.name]=s}for(let n in a)a[n].samples=St(a[n].samples);let i=e;return i.dictionary=a,i}var rt=class l{noteSecondsStart=[];noteSecondsStartUnscaled=0;noteSecondsEnd=[];noteSecondsEndUnscaled=0;noteTicksStart=0;noteTicksEnd=0;noteSizeStart=t.noteSizeMax;noteSizeEnd=t.noteSizeMax;prevNoteSize=t.noteSizeMax;nextNoteSize=t.noteSizeMax;te=t.noteSizeMax;prevNoteSecondsStart=[];prevNoteSecondsStartUnscaled=0;prevNoteSecondsEnd=[];prevNoteSecondsEndUnscaled=0;prevNoteTicksStart=0;prevNoteTicksEnd=0;re=t.noteSizeMax;tickTimeEnd=[];drumsetFilterEnvelopeStart=0;drumsetFilterEnvelopeEnd=0;prevSlideStart=!1;prevSlideEnd=!1;nextSlideStart=!1;nextSlideEnd=!1;prevSlideRatioStart=0;prevSlideRatioEnd=0;nextSlideRatioStart=0;nextSlideRatioEnd=0;startPinTickAbsolute=null;startPinTickDefaultPitch=null;startPinTickPitch=null;envelopeStarts=[];envelopeEnds=[];ue=[];ae=0;lowpassCutoffDecayVolumeCompensation=1;constructor(){let e=62;for(let a=0;a<e;a++)this.envelopeStarts[a]=1,this.envelopeEnds[a]=1;this.reset()}reset(){for(let e=0;e<t.maxEnvelopeCount+1;e++)this.noteSecondsEnd[e]=0,this.prevNoteSecondsEnd[e]=0;this.noteSecondsEndUnscaled=0,this.noteTicksEnd=0,this.te=t.noteSizeMax,this.prevNoteSecondsEndUnscaled=0,this.prevNoteTicksEnd=0,this.re=t.noteSizeMax,this.ae=0,this.drumsetFilterEnvelopeStart=0,this.drumsetFilterEnvelopeEnd=0,this.startPinTickAbsolute=null,this.startPinTickDefaultPitch=null,this.startPinTickPitch=null}computeEnvelopes(e,a,i,n,s,r,u,c,v,o,y){let d=s,g=e.getTransition();if(r!=null&&r.atNoteStart&&!g.continues&&!r.forceContinueAtStart){this.prevNoteSecondsEndUnscaled=this.noteSecondsEndUnscaled,this.prevNoteTicksEnd=this.noteTicksEnd,this.re=this.te,this.noteSecondsEndUnscaled=0,this.noteTicksEnd=0;for(let Q=0;Q<t.maxEnvelopeCount+1;Q++)this.prevNoteSecondsEnd[Q]=this.noteSecondsEnd[Q],this.noteSecondsEnd[Q]=0}r!=null&&(r.note!=null?this.te=r.note.pins[r.note.pins.length-1].size:this.te=t.noteSizeMax);let h=[],m=n+1,p=[],I=this.noteSecondsEndUnscaled,F=[],M=I+d,S=this.noteTicksEnd,C=S+1,W=[],L=[],T=this.prevNoteSecondsEndUnscaled,k=T+d,A=this.prevNoteTicksEnd,z=A+1,B=1/(t.ticksPerPart*t.partsPerBeat),N=[],G=[],U=this.te,V=this.te,f=this.re,b=0,x=!1,w=!1,P=!1,R=!1,O=0,_=0,te=0,ee=0;if(r==null&&(this.startPinTickAbsolute=null,this.startPinTickDefaultPitch=null),r!=null&&r.note!=null&&!r.passedEndOfNote){let Q=r.note.getEndPinIndex(a),H=r.note.pins[Q-1],Y=r.note.pins[Q],J=(r.note.start+H.time)*t.ticksPerPart;(this.startPinTickAbsolute==null||!(g.continues||g.slides)&&r.passedEndOfNote)&&(this.startPinTickAbsolute=J+v.computeTicksSinceStart(!0)),(this.startPinTickDefaultPitch==null||r.passedEndOfNote)&&(this.startPinTickDefaultPitch=this.getPitchValue(e,r,c,!1)),r.passedEndOfNote||(this.startPinTickPitch=this.getPitchValue(e,r,c,!0));let Z=(r.note.start+Y.time)*t.ticksPerPart,ie=(n-J)/(Z-J),de=(m-J)/(Z-J);if(U=H.size+(Y.size-H.size)*ie,V=H.size+(Y.size-H.size)*de,g.slides){let se=r.noteStartPart*t.ticksPerPart,he=r.noteEndPart*t.ticksPerPart,pe=(he-se)*.5,oe=Math.min(pe,g.slideTicks);r.prevNote!=null&&!r.forceContinueAtStart&&(n-se<oe&&(x=!0,O=.5*(1-(n-se)/oe)),m-se<oe&&(w=!0,_=.5*(1-(m-se)/oe))),r.nextNote!=null&&!r.forceContinueAtEnd&&(b=r.nextNote.pins[0].size,he-n<oe&&(P=!0,te=.5*(1-(he-n)/oe)),he-m<oe&&(R=!0,ee=.5*(1-(he-m)/oe)))}}let ge=1,Ie=!1;for(let Q=0;Q<=e.envelopeCount;Q++){let H,Y,J,Z=!1,ie=!1,de=1,se=1,he=de*se,ae=0,pe=1,oe=0,re=2,le=2,j=0,$=this.startPinTickAbsolute||0,fe=this.startPinTickDefaultPitch||0;if(Q==e.envelopeCount){if(Ie)break;H=t.instrumentAutomationTargets.dictionary.noteVolume,Y=0,J=t.newEnvelopes.dictionary["note size"]}else{let be=e.envelopes[Q];H=t.instrumentAutomationTargets[be.target],Y=be.index,J=t.newEnvelopes[be.envelope],Z=e.envelopes[Q].inverse,ie=e.envelopes[Q].discrete,de=e.envelopes[Q].perEnvelopeSpeed,se=Math.pow(e.envelopeSpeed,2)/144,he=de*se,ae=e.envelopes[Q].perEnvelopeLowerBound,pe=e.envelopes[Q].perEnvelopeUpperBound,v.isModActive(t.modulators.dictionary["individual envelope lower bound"].index,o,y)&&e.envelopes[Q].tempEnvelopeLowerBound!=null&&(ae=e.envelopes[Q].tempEnvelopeLowerBound),v.isModActive(t.modulators.dictionary["individual envelope upper bound"].index,o,y)&&e.envelopes[Q].tempEnvelopeUpperBound!=null&&(pe=e.envelopes[Q].tempEnvelopeUpperBound),ae<=pe||(ae=0,pe=1),oe=v.computeTicksSinceStart(),re=e.envelopes[Q].steps,le=e.envelopes[Q].seed,e.envelopes[Q].waveform>=(J.name=="lfo"?7:4)&&(e.envelopes[Q].waveform=0),j=e.envelopes[Q].waveform,u[Q]||(u[Q]=0);let X=s*u[Q];i[Q]||(i[Q]=0),h[Q]=i[Q]?i[Q]+u[Q]:u[Q],p[Q]=this.noteSecondsEnd[Q]?this.noteSecondsEnd[Q]:0,W[Q]=this.prevNoteSecondsEnd[Q]?this.prevNoteSecondsEnd[Q]:0,F[Q]=p[Q]?p[Q]+X:X,L[Q]=W[Q]?W[Q]+X:X,N[Q]=i[Q]?B*i[Q]:B,G[Q]=h[Q]?B*h[Q]:B,J.type==1&&(Ie=!0)}let ve=J.type==2?this.computePitchEnvelope(e,Q,this.startPinTickPitch||this.getPitchValue(e,r,c,!0)):0;if(H.computeIndex!=null){let be=H.computeIndex+Y,X=l.computeEnvelope(J,he,se,I,p[Q],N[Q],oe,U,ve,Z,ae,pe,!1,re,le,j,fe,$);if(x){let Se=l.computeEnvelope(J,he,se,T,W[Q],N[Q],oe,f,ve,Z,ae,pe,!1,re,le,j,fe,$);X+=(Se-X)*O}if(P){let Se=l.computeEnvelope(J,he,se,0,0,N[Q],oe,b,ve,Z,ae,pe,!1,re,le,j,fe,$);X+=(Se-X)*te}let ce=X;if(ie==!1){if(ce=l.computeEnvelope(J,he,se,M,F[Q],G[Q],oe,V,ve,Z,ae,pe,!1,re,le,j,fe,$),w){let Se=l.computeEnvelope(J,he,se,k,L[Q],G[Q],oe,f,ve,Z,ae,pe,!1,re,le,j,fe,$);ce+=(Se-ce)*_}if(R){let Se=l.computeEnvelope(J,he,se,0,0,G[Q],oe,b,ve,Z,ae,pe,!1,re,le,j,fe,$);ce+=(Se-ce)*ee}}if(this.envelopeStarts[be]*=X,this.envelopeEnds[be]*=ce,this.ue[this.ae++]=be,H.isFilter){let Se=e.tmpNoteFilterStart!=null?e.tmpNoteFilterStart:e.noteFilter;Se.controlPointCount>Y&&Se.controlPoints[Y].type==0&&(ge=Math.max(ge,l.getLowpassCutoffDecayVolumeCompensation(J,de)))}}}this.noteSecondsStartUnscaled=I,this.noteSecondsEndUnscaled=M,this.noteTicksStart=S,this.noteTicksEnd=C,this.prevNoteSecondsStartUnscaled=T,this.prevNoteSecondsEndUnscaled=k,this.prevNoteTicksStart=A,this.prevNoteTicksEnd=z;for(let Q=0;Q<t.maxEnvelopeCount+1;Q++)this.noteSecondsStart[Q]=p[Q],this.noteSecondsEnd[Q]=F[Q],this.prevNoteSecondsStart[Q]=W[Q],this.prevNoteSecondsEnd[Q]=L[Q];this.prevNoteSize=f,this.nextNoteSize=b,this.noteSizeStart=U,this.noteSizeEnd=V,this.prevSlideStart=x,this.prevSlideEnd=w,this.nextSlideStart=P,this.nextSlideEnd=R,this.prevSlideRatioStart=O,this.prevSlideRatioEnd=_,this.nextSlideRatioStart=te,this.nextSlideRatioEnd=ee,this.lowpassCutoffDecayVolumeCompensation=ge}clearEnvelopes(){for(let e=0;e<this.ae;e++){let a=this.ue[e];this.envelopeStarts[a]=1,this.envelopeEnds[a]=1}this.ae=0}static computeEnvelope(e,a,i,n,s,r,u,c,v,o,y,d,g=!1,h,m,p,I,F){let M=g?e.speed:1,S=d-y;switch(e.type){case 0:return d;case 1:return o?d-ue.noteSizeToVolumeMult(c)*S:ue.noteSizeToVolumeMult(c)*S+y;case 2:return v;case 3:let C=4294967295,W=h;switch(p){case 0:if(W<=1)return 1;let k=it((a==0?0:Math.floor(u*a/256))+"",m);return o?d-S*(W/(W-1))*Math.floor(k*W/(C+1))/W:S*(W/(W-1))*Math.floor(k*W/(C+1))/W+y;case 1:let A=it(I+"",m);return o?d-S*A/(C+1):S*A/(C+1)+y;case 2:if(W<=1)return 1;let z=it(F+"",m);return o?d-S*(W/(W-1))*Math.floor(z*W/(C+1))/W:S*(W/(W-1))*Math.floor(z*W/(C+1))/W+y;case 3:let B=it((a==0?0:Math.floor(u*a/256))+"",m),N=it((a==0?0:Math.floor((u*a+256)/256))+"",m),G=B*(1-u*a/256%1)+N*(u*a/256%1);return o?d-S*G/(C+1):S*G/(C+1)+y;default:throw new Error("Unrecognized operator envelope waveform type: "+p)}case 6:return o?d-S*(1/(1+s*M)):S/(1+s*M)+y;case 7:return o?S/(1+s*M)+y:d-S/(1+s*M);case 8:switch(p){case 0:return o?d/2+S*Math.cos(r*2*Math.PI*M)*.5+y/2:d/2-S*Math.cos(r*2*Math.PI*M)*.5+y/2;case 1:return o?Math.cos(r*2*Math.PI*M+3*Math.PI/2)<0?d:y:Math.cos(r*2*Math.PI*M+3*Math.PI/2)<0?y:d;case 2:return o?d/2-S/Math.PI*Math.asin(Math.sin(Math.PI/2+r*Math.PI*2*M))+y/2:d/2+S/Math.PI*Math.asin(Math.sin(Math.PI/2+r*Math.PI*2*M))+y/2;case 3:return o?d-r*M%1*S:r*M%1*S+y;case 4:let k=0;return o?k=d/2-S*2/Math.PI*Math.asin(Math.sin(Math.PI/2+r*Math.PI*2*M))+y/2:k=d/2+S*2/Math.PI*Math.asin(Math.sin(Math.PI/2+r*Math.PI*2*M))+y/2,Math.max(y,Math.min(d,k));case 5:if(h<=1)return 1;let A=r*M%1;return o?d-Math.floor(A*h)*S/(h-1):Math.floor(A*h)*S/(h-1)+y;case 6:if(h<=1)return 1;let z=.5+(o?-1:1)*(1/Math.PI)*Math.asin(Math.sin(Math.PI/2+r*Math.PI*2*M));return Math.round(z*(h-1))*S/(h-1)+y;default:throw new Error("Unrecognized operator envelope waveform type: "+p)}case 9:return o?d/4+S*Math.cos(r*2*Math.PI*M)*.25+y/4:.5+d/4-S*Math.cos(r*2*Math.PI*M)*.25-y/4;case 4:return o?Math.max(0,d+1-Math.max(1-y,1-d-n*i*10)):Math.max(1+y,1+d-n*i*10);case 5:let L=.25/Math.sqrt(M*a);return o?d-S*(n<L?n/L:1/(1+(n-L)*M*a)):S*(n<L?n/L:1/(1+(n-L)*M*a))+y;case 10:return o?d-S*Math.pow(2,-M*s):S*Math.pow(2,-M*s)+y;case 14:return o?d-S*+(n<.25/Math.sqrt(M*a)):S*+(n<.25/Math.sqrt(M*a))+y;case 11:let T=.5-Math.cos(r*M)*.5;return T=1/(1+s*(M-T/(1.5/M))),T=T>0?T:0,o?d-S*T:S*T+y;case 12:{let k=1-s/(16/M);return k=k>0?k:0,o?d-S*k:S*k+y}case 13:{let k=s/(16/M);return k=k<1?k:1,o?d-S*k:S*k+y}case 15:return o?Math.min(Math.max(y,d-S*Math.sqrt(Math.max(1-M*s/2,0))),d):Math.max(y,S*Math.sqrt(Math.max(1-M*s/2,0))+y);default:throw new Error("Unrecognized operator envelope type.")}}getPitchValue(e,a,i,n=!0){if(a&&a.pitchCount>=1){let s=e.getChord(),r=s.arpeggiates,u=s.name=="monophonic",c=Math.floor(i.arpTime/t.ticksPerArpeggio),v=a.pitches[r?Pt(a.pitchCount,e.fastTwoNoteArp,c):u?e.monoChordTone:0];return n&&a.lastInterval!=v?v+a.lastInterval:v}return 0}computePitchEnvelope(e,a,i=0){let n=0,s=t.maxPitch,r=!1,u=0,c=1;e.isNoiseInstrument&&(s=t.drumCount-1),a<e.envelopeCount&&a!==-2&&(n=e.envelopes[a].pitchEnvelopeStart,s=e.envelopes[a].pitchEnvelopeEnd,r=e.envelopes[a].inverse,u=e.envelopes[a].perEnvelopeLowerBound,c=e.envelopes[a].perEnvelopeUpperBound),n>s&&(n=0,s=e.isNoiseInstrument?t.drumCount-1:t.maxPitch);let v=s-n+1;return r?i<=n?c:i>=s?u:c-(i-n)*(c-u)/v:i<=n?u:i>=s?c:(i-n)*(c-u)/v+u}static getLowpassCutoffDecayVolumeCompensation(e,a=1){return e.type==10?1.25+.025*a:e.type==6?1+.02*a:1}computeDrumsetEnvelopes(e,a,i,n,s){function u(o,y,d,g){return l.computeEnvelope(a,1,1,o,y,d,0,g,1,!1,0,1,!0,2,2,0,1,0)}let c=u(this.noteSecondsStartUnscaled,this.noteSecondsStartUnscaled,i*n,this.noteSizeStart);if(this.prevSlideStart){let o=u(this.prevNoteSecondsStartUnscaled,this.prevNoteSecondsStartUnscaled,i*n,this.prevNoteSize);c+=(o-c)*this.prevSlideRatioStart}if(this.nextSlideStart){let o=u(0,0,i*n,this.nextNoteSize);c+=(o-c)*this.nextSlideRatioStart}let v=c;if(v=u(this.noteSecondsEndUnscaled,this.noteSecondsEndUnscaled,i*s,this.noteSizeEnd),this.prevSlideEnd){let o=u(this.prevNoteSecondsEndUnscaled,this.prevNoteSecondsEndUnscaled,i*s,this.prevNoteSize);v+=(o-v)*this.prevSlideRatioEnd}if(this.nextSlideEnd){let o=u(0,0,i*s,this.nextNoteSize);v+=(o-v)*this.nextSlideRatioEnd}this.drumsetFilterEnvelopeStart=c,this.drumsetFilterEnvelopeEnd=v}};var je=class{a=[1];b=[1];order=0;linearGain0thOrder(e){this.b[0]=e,this.order=0}lowPass1stOrderButterworth(e){let a=1/Math.tan(e*.5),i=1+a;this.a[1]=(1-a)/i,this.b[1]=this.b[0]=1/i,this.order=1}lowPass1stOrderSimplified(e){let a=2*Math.sin(e*.5);this.a[1]=a-1,this.b[0]=a,this.b[1]=0,this.order=1}highPass1stOrderButterworth(e){let a=1/Math.tan(e*.5),i=1+a;this.a[1]=(1-a)/i,this.b[0]=a/i,this.b[1]=-a/i,this.order=1}highShelf1stOrder(e,a){let i=Math.tan(e*.5),n=Math.sqrt(a),s=(i*n-1)/(i*n+1),r=1;this.a[1]=s/r,this.b[0]=(1+s+a*(1-s))/(2*r),this.b[1]=(1+s-a*(1-s))/(2*r),this.order=1}allPass1stOrderInvertPhaseAbove(e){let a=(Math.sin(e)-1)/Math.cos(e);this.a[1]=a,this.b[0]=a,this.b[1]=1,this.order=1}allPass1stOrderFractionalDelay(e){let a=(1-e)/(1+e);this.a[1]=a,this.b[0]=a,this.b[1]=1,this.order=1}lowPass2ndOrderButterworth(e,a){let i=Math.sin(e)/(2*a),n=Math.cos(e),s=1+i;this.a[1]=-2*n/s,this.a[2]=(1-i)/s,this.b[2]=this.b[0]=(1-n)/(2*s),this.b[1]=(1-n)/s,this.order=2}lowPass2ndOrderSimplified(e,a){let i=2*Math.sin(e/2),n=1-1/(2*a),s=n+n/(1-i);this.a[1]=2*i+(i-1)*i*s-2,this.a[2]=(i-1)*(i-i*s-1),this.b[0]=i*i,this.b[1]=0,this.b[2]=0,this.order=2}highPass2ndOrderButterworth(e,a){let i=Math.sin(e)/(2*a),n=Math.cos(e),s=1+i;this.a[1]=-2*n/s,this.a[2]=(1-i)/s,this.b[2]=this.b[0]=(1+n)/(2*s),this.b[1]=-(1+n)/s,this.order=2}highShelf2ndOrder(e,a,i){let n=Math.sqrt(a),s=Math.cos(e),r=n+1,u=n-1,c=Math.sin(e)*.5*Math.sqrt(r/n*(1/i-1)+2),v=2*Math.sqrt(n)*c,o=r-u*s+v;this.a[1]=2*(u-r*s)/o,this.a[2]=(r-u*s-v)/o,this.b[0]=n*(r+u*s+v)/o,this.b[1]=-2*n*(u+r*s)/o,this.b[2]=n*(r+u*s-v)/o,this.order=2}peak2ndOrder(e,a,i){let n=Math.sqrt(a),s=i*e/(n>=1?n:1/n),r=Math.tan(s*.5),u=1+r/n;this.b[0]=(1+r*n)/u,this.b[1]=this.a[1]=-2*Math.cos(e)/u,this.b[2]=(1-r*n)/u,this.a[2]=(1-r/n)/u,this.order=2}},tt=class{real=0;imag=0;denom=1;analyze(e,a){this.analyzeComplex(e,Math.cos(a),Math.sin(a))}analyzeComplex(e,a,i){let n=e.a,s=e.b,r=a,u=-i,c=s[0]+s[1]*r,v=s[1]*u,o=1+n[1]*r,y=n[1]*u,d=r,g=u;for(let h=2;h<=e.order;h++){let m=d*r-g*u,p=d*u+g*r;d=m,g=p,c+=s[h]*d,v+=s[h]*g,o+=n[h]*d,y+=n[h]*g}this.denom=o*o+y*y,this.real=c*o+v*y,this.imag=v*o-c*y}magnitude(){return Math.sqrt(this.real*this.real+this.imag*this.imag)/this.denom}angle(){return Math.atan2(this.imag,this.real)}},Re=class{a1=0;a2=0;b0=1;b1=0;b2=0;a1Delta=0;a2Delta=0;b0Delta=0;b1Delta=0;b2Delta=0;output1=0;output2=0;useMultiplicativeInputCoefficients=!1;resetOutput(){this.output1=0,this.output2=0}loadCoefficientsWithGradient(e,a,i,n){if(e.order!=2||a.order!=2)throw new Error;this.a1=e.a[1],this.a2=e.a[2],this.b0=e.b[0],this.b1=e.b[1],this.b2=e.b[2],this.a1Delta=(a.a[1]-e.a[1])*i,this.a2Delta=(a.a[2]-e.a[2])*i,n?(this.b0Delta=Math.pow(a.b[0]/e.b[0],i),this.b1Delta=Math.pow(a.b[1]/e.b[1],i),this.b2Delta=Math.pow(a.b[2]/e.b[2],i)):(this.b0Delta=(a.b[0]-e.b[0])*i,this.b1Delta=(a.b[1]-e.b[1])*i,this.b2Delta=(a.b[2]-e.b[2])*i),this.useMultiplicativeInputCoefficients=n}};function pn(l){return 2*Math.atan(l*.5)}var Ee=class l{controlPoints=[];controlPointCount=0;constructor(){this.reset()}reset(){this.controlPointCount=0}addPoint(e,a,i){let n;this.controlPoints.length<=this.controlPointCount?(n=new Me,this.controlPoints[this.controlPointCount]=n):n=this.controlPoints[this.controlPointCount],this.controlPointCount++,n.type=e,n.set(a,i)}toJsonObject(){let e=[];for(let a=0;a<this.controlPointCount;a++){let i=this.controlPoints[a];e.push({type:t.filterTypeNames[i.type],cutoffHz:Math.round(i.getHz()*100)/100,linearGain:Math.round(i.getLinearGain()*1e4)/1e4})}return e}fromJsonObject(e){if(this.controlPoints.length=0,e)for(let a of e){let i=new Me;i.type=t.filterTypeNames.indexOf(a.type),i.type==-1&&(i.type=2),a.cutoffHz!=null?i.freq=Me.getRoundedSettingValueFromHz(a.cutoffHz):i.freq=0,a.linearGain!=null?i.gain=Me.getRoundedSettingValueFromLinearGain(a.linearGain):i.gain=t.filterGainCenter,this.controlPoints.push(i)}this.controlPointCount=this.controlPoints.length}static filtersCanMorph(e,a){if(e.controlPointCount!=a.controlPointCount)return!1;for(let i=0;i<e.controlPointCount;i++)if(e.controlPoints[i].type!=a.controlPoints[i].type)return!1;return!0}static lerpFilters(e,a,i){let n=new l;if(e==null)return e;if(a==null)return a;if(i=Math.max(0,Math.min(1,i)),this.filtersCanMorph(e,a)){for(let s=0;s<e.controlPointCount;s++)n.controlPoints[s]=new Me,n.controlPoints[s].type=e.controlPoints[s].type,n.controlPoints[s].freq=e.controlPoints[s].freq+(a.controlPoints[s].freq-e.controlPoints[s].freq)*i,n.controlPoints[s].gain=e.controlPoints[s].gain+(a.controlPoints[s].gain-e.controlPoints[s].gain)*i;return n.controlPointCount=e.controlPointCount,n}else return i>=1?a:e}convertLegacySettings(e,a,i){this.reset();let n=8e3,r=Math.asin(.95/2)*2,u=.95,c=11,v=8,o=a>1,y=a==0,d=e==c-1,g=i.type==5||i.type==6||i.type==10||i.type==1,h=48e3,m=n*Math.pow(2,(e-(c-1))*.5),p=Math.min(r,2*Math.PI*m/h);if(!(i.type==0&&!o&&d))if(y){let F=p*Math.pow(2,3.5),M=F/(1+F/Math.PI),S=h*M/(2*Math.PI),C=Me.getRoundedSettingValueFromHz(S),W=Me.getHzFromSettingValue(C),L=2*Math.PI*W/h,T=new je;T.lowPass1stOrderSimplified(p);let k=new tt;k.analyze(T,L);let A=k.magnitude(),z=Math.log2(A);z=-3.5+(z+3.5)*.82,g&&(z=Math.min(z,-1));let B=Math.pow(2,z),N=Me.getRoundedSettingValueFromLinearGain(B);this.addPoint(0,C,N)}else{let I=.5/(1-u*Math.sqrt(Math.max(0,a-1)/(v-2))),F=.5/I,M=2*Math.PI*n/h,S=p/M,C=p*(S*Math.pow(F,.9)+1),W=p+(C-p)*F,L;g?L=h*Math.min(W,p*Math.pow(2,.25))/(2*Math.PI):L=h*W/(2*Math.PI);let T=Me.getRoundedSettingValueFromHz(L),k;if(g)k=I;else{let z=new je;z.lowPass2ndOrderSimplified(p,I);let B=new tt;B.analyze(z,W),k=B.magnitude()}o||(k=Math.min(k,Math.sqrt(.5)));let A=Me.getRoundedSettingValueFromLinearGain(k);this.addPoint(0,T,A)}this.controlPoints.length=this.controlPointCount}convertLegacySettingsForSynth(e,a,i=!1){this.reset();let n=8e3,r=Math.asin(.95/2)*2,u=.95,c=11,v=8,o=a==0&&i,y=48e3,d=n*Math.pow(2,(e-(c-1))*.5),g=Math.min(r,2*Math.PI*d/y);if(o){let m=g*Math.pow(2,3.5),p=m/(1+m/Math.PI),I=y*p/(2*Math.PI),F=Me.getRoundedSettingValueFromHz(I),M=Me.getHzFromSettingValue(F),S=2*Math.PI*M/y,C=new je;C.lowPass1stOrderSimplified(g);let W=new tt;W.analyze(C,S);let L=W.magnitude(),T=Math.log2(L);T=-3.5+(T+3.5)*.82;let k=Math.pow(2,T),A=Me.getRoundedSettingValueFromLinearGain(k);this.addPoint(0,F,A)}else{let h=.5/(1-u*Math.sqrt(Math.max(0,a-1)/(v-2))),m=.5/h,p=2*Math.PI*n/y,I=g/p,F=g*(I*Math.pow(m,.9)+1),M=g+(F-g)*m,S;S=y*M/(2*Math.PI);let C=Me.getSettingValueFromHz(S),W,L=new je;L.lowPass2ndOrderSimplified(g,h);let T=new tt;T.analyze(L,M),W=T.magnitude();let k=Me.getRoundedSettingValueFromLinearGain(W);this.addPoint(0,C,k)}}},Me=class l{freq=0;gain=t.filterGainCenter;type=2;set(e,a){this.freq=e,this.gain=a}getHz(){return l.getHzFromSettingValue(this.freq)}static getHzFromSettingValue(e){return t.filterFreqReferenceHz*Math.pow(2,(e-t.filterFreqReferenceSetting)*t.filterFreqStep)}static getSettingValueFromHz(e){return Math.log2(e/t.filterFreqReferenceHz)/t.filterFreqStep+t.filterFreqReferenceSetting}static getRoundedSettingValueFromHz(e){return Math.max(0,Math.min(t.filterFreqRange-1,Math.round(l.getSettingValueFromHz(e))))}getLinearGain(e=1){let a=(this.gain-t.filterGainCenter)*t.filterGainStep,i=this.type==2?0:-.5,n=i+(a-i)*e;return Math.pow(2,n)}static getRoundedSettingValueFromLinearGain(e){return Math.max(0,Math.min(t.filterGainRange-1,Math.round(Math.log2(e)/t.filterGainStep+t.filterGainCenter)))}toCoefficients(e,a,i=1,n=1){let s=2*Math.PI*Math.max(t.filterFreqMinHz,Math.min(t.filterFreqMaxHz,i*this.getHz()))/a,r=this.getLinearGain(n);switch(this.type){case 0:e.lowPass2ndOrderButterworth(s,r);break;case 1:e.highPass2ndOrderButterworth(s,r);break;case 2:e.peak2ndOrder(s,r,1);break;default:throw new Error}}getVolumeCompensationMult(){let e=(this.freq-t.filterFreqReferenceSetting)*t.filterFreqStep,a=(this.gain-t.filterGainCenter)*t.filterGainStep;switch(this.type){case 0:let i=Math.pow(2,e)*t.filterFreqReferenceHz/8e3,n=(Math.sqrt(1+4*i)-1)/2,s=Math.log2(n);return Math.pow(.5,.2*Math.max(0,a+1)+Math.min(0,Math.max(-3,.595*s+.35*Math.min(0,a+1))));case 1:return Math.pow(.5,.125*Math.max(0,a+1)+Math.min(0,.3*(-e-Math.log2(t.filterFreqReferenceHz/125))+.2*Math.min(0,a+1)));case 2:let r=e+Math.log2(t.filterFreqReferenceHz/2e3),u=Math.pow(1/(1+Math.pow(r/3,2)),2);return Math.pow(.5,.125*Math.max(0,a)+.1*u*Math.min(0,a));default:throw new Error}}};var Vt=class{type=0;wetDryMix=.5;send=1;eqFilter=new Ee;eqFilterType=!1;eqFilterSimpleCut=t.filterSimpleCutRange-1;eqFilterSimplePeak=0;eqSubFilters=[];tmpEqFilterStart;tmpEqFilterEnd;gain=t.volumeRange/2;pan=t.panCenter;panDelay=0;panMode=0;aliases=!1;distortion=0;bitcrusherFreq=0;bitcrusherQuantization=0;ringModulation=Math.floor(t.ringModRange/2);ringModulationHz=Math.floor(t.ringModHzRange/2);ringModWaveformIndex=0;ringModPulseWidth=0;ringModHzOffset=200;granular=4;grainSize=(t.grainSizeMax-t.grainSizeMin)/t.grainSizeStep;grainAmounts=t.grainAmountsMax;grainRange=40;flanger=0;flangerSpeed=0;flangerDepth=0;flangerFeedback=0;chorus=0;reverb=0;echoSustain=0;echoDelay=0;echoPingPong=t.panCenter;constructor(e){this.type=e}};function q(l,e,a){return e=e-1,a<=e?a>=l?a:l:e}function Ae(l,e,a){if(l<=a&&a<=e)return a;throw new Error(`Value ${a} not in range [${l}, ${e}]`)}function Rt(l,e){let a=parseFloat(l);return Number.isNaN(a)&&(a=e),a}function Lt(l,e){let a=parseInt(l);return Number.isNaN(a)&&(a=e),a}function un(l){return .0125*(.95*l+.05*l*l)}function ot(l){return q(0,t.fadeInRange,Math.round((-.95+Math.sqrt(.9025+.2*l/.0125))/.1))}function fn(l){return t.fadeOutTicks[l]}function lt(l){let e=t.fadeOutTicks[0];if(l<=e)return 0;for(let a=1;a<t.fadeOutTicks.length;a++){let i=t.fadeOutTicks[a];if(l<=i)return l<(e+i)/2?a-1:a;e=i}return t.fadeOutTicks.length-1}function At(l){return l-t.detuneCenter}function Tn(l){return l+t.detuneCenter}function $e(l){return 1<<32-Math.clz32(Math.ceil(l)-1)}var zt=class{constructor(e){this.isNoiseEnvelope=e;this.reset()}target=0;index=0;envelope=0;pitchEnvelopeStart;pitchEnvelopeEnd;inverse;perEnvelopeSpeed=t.envelopes[this.envelope].speed;perEnvelopeLowerBound=0;perEnvelopeUpperBound=1;tempEnvelopeSpeed=null;tempEnvelopeLowerBound=null;tempEnvelopeUpperBound=null;steps=2;seed=2;waveform=0;discrete=!1;reset(){this.target=0,this.index=0,this.envelope=0,this.pitchEnvelopeStart=0,this.pitchEnvelopeEnd=this.isNoiseEnvelope?t.drumCount-1:t.maxPitch,this.inverse=!1,this.isNoiseEnvelope=!1,this.perEnvelopeSpeed=t.envelopes[this.envelope].speed,this.perEnvelopeLowerBound=0,this.perEnvelopeUpperBound=1,this.tempEnvelopeSpeed=null,this.tempEnvelopeLowerBound=null,this.tempEnvelopeUpperBound=null,this.steps=2,this.seed=2,this.waveform=0,this.discrete=!1}toJsonObject(){let e={target:t.instrumentAutomationTargets[this.target].name,envelope:t.newEnvelopes[this.envelope].name,inverse:this.inverse,perEnvelopeSpeed:this.perEnvelopeSpeed,perEnvelopeLowerBound:this.perEnvelopeLowerBound,perEnvelopeUpperBound:this.perEnvelopeUpperBound,discrete:this.discrete};return t.instrumentAutomationTargets[this.target].maxCount>1&&(e.index=this.index),t.newEnvelopes[this.envelope].name=="pitch"?(e.pitchEnvelopeStart=this.pitchEnvelopeStart,e.pitchEnvelopeEnd=this.pitchEnvelopeEnd):t.newEnvelopes[this.envelope].name=="random"?(e.steps=this.steps,e.seed=this.seed,e.waveform=this.waveform):t.newEnvelopes[this.envelope].name=="lfo"&&(e.waveform=this.waveform,e.steps=this.steps),e}fromJsonObject(e,a){this.reset();let i=t.instrumentAutomationTargets.dictionary[e.target];i==null&&(i=t.instrumentAutomationTargets.dictionary.noteVolume),this.target=i.index;let n=t.envelopes.dictionary.none,s=!1;a=="slarmoosbox"?e.envelope=="tremolo2"?(n=t.newEnvelopes[8],s=!0):e.envelope=="tremolo"?(n=t.newEnvelopes[8],s=!1):n=t.newEnvelopes.dictionary[e.envelope]:t.envelopes.dictionary[e.envelope].type==9?(n=t.newEnvelopes[8],s=!0):t.newEnvelopes[Math.max(t.envelopes.dictionary[e.envelope].type-1,0)].index>8?n=t.newEnvelopes[t.envelopes.dictionary[e.envelope].type-1]:n=t.newEnvelopes[t.envelopes.dictionary[e.envelope].type],n==null&&(t.envelopes.dictionary[e.envelope].type==9?(n=t.newEnvelopes[8],s=!0):t.newEnvelopes[Math.max(t.envelopes.dictionary[e.envelope].type-1,0)].index>8?n=t.newEnvelopes[t.envelopes.dictionary[e.envelope].type-1]:n=t.newEnvelopes[t.envelopes.dictionary[e.envelope].type]),n==null&&(n=t.envelopes.dictionary.none),this.envelope=n.index,e.index!=null?this.index=q(0,t.instrumentAutomationTargets[this.target].maxCount,e.index|0):this.index=0,e.pitchEnvelopeStart!=null?this.pitchEnvelopeStart=q(0,this.isNoiseEnvelope?t.drumCount:t.maxPitch+1,e.pitchEnvelopeStart):this.pitchEnvelopeStart=0,e.pitchEnvelopeEnd!=null?this.pitchEnvelopeEnd=q(0,this.isNoiseEnvelope?t.drumCount:t.maxPitch+1,e.pitchEnvelopeEnd):this.pitchEnvelopeEnd=this.isNoiseEnvelope?t.drumCount:t.maxPitch,this.inverse=!!e.inverse,e.perEnvelopeSpeed!=null?this.perEnvelopeSpeed=e.perEnvelopeSpeed:this.perEnvelopeSpeed=t.envelopes.dictionary[e.envelope].speed,e.perEnvelopeLowerBound!=null?this.perEnvelopeLowerBound=q(t.perEnvelopeBoundMin,t.perEnvelopeBoundMax+1,e.perEnvelopeLowerBound):this.perEnvelopeLowerBound=0,e.perEnvelopeUpperBound!=null?this.perEnvelopeUpperBound=q(t.perEnvelopeBoundMin,t.perEnvelopeBoundMax+1,e.perEnvelopeUpperBound):this.perEnvelopeUpperBound=1,s&&(this.inverse?(this.perEnvelopeUpperBound=Math.floor(this.perEnvelopeUpperBound/2*10)/10,this.perEnvelopeLowerBound=Math.floor(this.perEnvelopeLowerBound/2*10)/10):(this.perEnvelopeUpperBound=Math.floor((.5+(this.perEnvelopeUpperBound-this.perEnvelopeLowerBound)/2)*10)/10,this.perEnvelopeLowerBound=.5)),e.steps!=null?this.steps=q(1,t.randomEnvelopeStepsMax+1,e.steps):this.steps=2,e.seed!=null?this.seed=q(1,t.randomEnvelopeSeedMax+1,e.seed):this.seed=2,e.waveform!=null?this.waveform=e.waveform:this.waveform=0,e.discrete!=null?this.discrete=e.discrete:this.discrete=!1}};var cn=class{frequency=4;amplitude=0;waveform=0;pulseWidth=.5;constructor(e){this.reset(e)}reset(e){this.frequency=4,this.amplitude=e<=1?t.operatorAmplitudeMax:0,this.waveform=0,this.pulseWidth=5}copy(e){this.frequency=e.frequency,this.amplitude=e.amplitude,this.waveform=e.waveform,this.pulseWidth=e.pulseWidth}},dn=class{name="";carrierCount=0;modulatedBy=[[],[],[],[],[],[]];associatedCarrier=[];constructor(){this.fromPreset(1)}set(e,a){this.reset(),this.carrierCount=e;for(let i=0;i<this.modulatedBy.length;i++){this.modulatedBy[i]=a[i],i<e&&(this.associatedCarrier[i]=i+1),this.name+=i+1;for(let n=0;n<a[i].length;n++)this.name+=a[i][n],a[i][n]>e-1&&(this.associatedCarrier[a[i][n]-1]=i+1),this.name+=",";i<e?this.name+="|":this.name+="."}}reset(){this.name="",this.carrierCount=1,this.modulatedBy=[[2,3,4,5,6],[],[],[],[],[]],this.associatedCarrier=[1,1,1,1,1,1]}copy(e){this.name=e.name,this.carrierCount=e.carrierCount,this.modulatedBy=e.modulatedBy,this.associatedCarrier=e.associatedCarrier}fromPreset(e){this.reset();let a=t.algorithms6Op[e];this.name=a.name,this.carrierCount=a.carrierCount;for(var i=0;i<a.modulatedBy.length;i++)this.modulatedBy[i]=Array.from(a.modulatedBy[i]),this.associatedCarrier[i]=a.associatedCarrier[i]}},hn=class{name="";indices=[[],[],[],[],[],[]];constructor(){this.fromPreset(1)}set(e){this.reset();for(let a=0;a<this.indices.length;a++){this.indices[a]=e[a];for(let i=0;i<e[a].length;i++)this.name+=e[a][i],this.name+=",";this.name+="."}}reset(){this.reset,this.name="",this.indices=[[1],[],[],[],[],[]]}copy(e){this.name=e.name,this.indices=e.indices}fromPreset(e){this.reset();let a=t.feedbacks6Op[e];for(var i=0;i<a.indices.length;i++){this.indices[i]=Array.from(a.indices[i]);for(let n=0;n<a.indices[i].length;n++)this.name+=a.indices[i][n],this.name+=",";this.name+="."}}},Wt=class{spectrum=[];hash=-1;constructor(e){this.reset(e)}reset(e){for(let a=0;a<t.spectrumControlPoints;a++)if(e)this.spectrum[a]=Math.round(t.spectrumMax*(1/Math.sqrt(1+a/3)));else{let i=a==0||a==7||a==11||a==14||a==16||a==18||a==21||a==23||a>=25;this.spectrum[a]=i?Math.max(0,Math.round(t.spectrumMax*(1-a/30))):0}this.markCustomWaveDirty()}markCustomWaveDirty(){let e=$e(t.spectrumMax+2)-1,a=0;for(let i of this.spectrum)a=a*e+i>>>0;this.hash=a}},mn=class{harmonics=[];hash=-1;constructor(){this.reset()}reset(){for(let e=0;e<t.harmonicsControlPoints;e++)this.harmonics[e]=0;this.harmonics[0]=t.harmonicsMax,this.harmonics[3]=t.harmonicsMax,this.harmonics[6]=t.harmonicsMax,this.markCustomWaveDirty()}markCustomWaveDirty(){let e=$e(t.harmonicsMax+2)-1,a=0;for(let i of this.harmonics)a=a*e+i>>>0;this.hash=a}},ze=class{type=0;preset=0;chipWave=2;isUsingAdvancedLoopControls=!1;chipWaveLoopStart=0;chipWaveLoopEnd=t.rawRawChipWaves[this.chipWave].samples.length-1;chipWaveLoopMode=0;chipWavePlayBackwards=!1;chipWaveStartOffset=0;chipWaveInStereo=!1;chipNoise=1;noteFilter=new Ee;noteFilterType=!1;noteFilterSimpleCut=t.filterSimpleCutRange-1;noteFilterSimplePeak=0;noteSubFilters=[];tmpNoteFilterStart;tmpNoteFilterEnd;envelopes=[];fadeIn=0;fadeOut=t.fadeOutNeutral;envelopeCount=0;transition=t.transitions.dictionary.normal.index;pitchShift=0;detune=0;vibrato=0;interval=0;vibratoDepth=0;vibratoSpeed=10;vibratoDelay=0;vibratoType=0;envelopeSpeed=12;unison=0;unisonVoices=1;unisonSpread=0;unisonOffset=0;unisonExpression=1.4;unisonSign=1;effects=[];effectCount=0;mdeffects=0;chord=1;volume=0;arpeggioSpeed=12;monoChordTone=0;fastTwoNoteArp=!1;legacyTieOver=!1;clicklessTransition=!1;aliases=!1;pulseWidth=t.pulseWidthRange;decimalOffset=0;supersawDynamism=t.supersawDynamismMax;supersawSpread=Math.ceil(t.supersawSpreadMax/2);supersawShape=0;stringSustain=10;stringSustainType=1;algorithm=0;feedbackType=0;algorithm6Op=1;feedbackType6Op=1;customAlgorithm=new dn;customFeedbackType=new hn;feedbackAmplitude=0;customChipWave=new Float32Array(64);customChipWaveIntegral=new Float32Array(65);operators=[];spectrumWave;harmonicsWave=new mn;drumsetEnvelopes=[];drumsetSpectrumWaves=[];modChannels=[];modInstruments=[];modulators=[];modFilterTypes=[];modEnvelopeNumbers=[];invalidModulators=[];isNoiseInstrument=!1;constructor(e,a){if(a)for(let u=0;u<t.modCount;u++)this.modChannels.push([-2]),this.modInstruments.push([0]),this.modulators.push(t.modulators.dictionary.none.index);this.spectrumWave=new Wt(e);for(let u=0;u<t.operatorCount+2;u++)this.operators[u]=new cn(u);for(let u=0;u<t.drumCount;u++)this.drumsetEnvelopes[u]=t.envelopes.dictionary["twang 2"].index,this.drumsetSpectrumWaves[u]=new Wt(!0);for(let u=0;u<64;u++)this.customChipWave[u]=24-Math.floor(u*(48/64));let i=0;for(let u=0;u<this.customChipWave.length;u++)i+=this.customChipWave[u];let n=i/this.customChipWave.length,s=0,r=0;for(let u=0;u<this.customChipWave.length;u++)s+=r,r=this.customChipWave[u]-n,this.customChipWaveIntegral[u]=s;this.customChipWaveIntegral[64]=0,this.isNoiseInstrument=e}setTypeAndReset(e,a,i){i&&(e=10),this.type=e,this.preset=e,this.volume=0,this.effects=[],this.effectCount=0,this.mdeffects=0;for(let n=0;n<t.filterMorphCount;n++)this.noteSubFilters[n]=null;switch(this.noteFilter.reset(),this.noteFilterType=!1,this.noteFilterSimpleCut=t.filterSimpleCutRange-1,this.noteFilterSimplePeak=0,this.pitchShift=t.pitchShiftCenter,this.detune=t.detuneCenter,this.vibrato=0,this.unison=0,this.stringSustain=10,this.stringSustainType=t.enableAcousticSustain?1:0,this.clicklessTransition=!1,this.arpeggioSpeed=12,this.monoChordTone=1,this.envelopeSpeed=12,this.legacyTieOver=!1,this.aliases=!1,this.fadeIn=0,this.fadeOut=t.fadeOutNeutral,this.transition=t.transitions.dictionary.normal.index,this.envelopeCount=0,this.isNoiseInstrument=a,e){case 0:this.chipWave=2,this.chord=t.chords.dictionary.arpeggio.index,this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=t.rawRawChipWaves[this.chipWave].samples.length-1,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveInStereo=!1,this.chipWaveStartOffset=0;break;case 9:this.chipWave=2,this.chipWaveInStereo=!1,this.chord=t.chords.dictionary.arpeggio.index;for(let c=0;c<64;c++)this.customChipWave[c]=24-Math.floor(c*(48/64));let n=0;for(let c=0;c<this.customChipWave.length;c++)n+=this.customChipWave[c];let s=n/this.customChipWave.length,r=0,u=0;for(let c=0;c<this.customChipWave.length;c++)r+=u,u=this.customChipWave[c]-s,this.customChipWaveIntegral[c]=r;this.customChipWaveIntegral[64]=0;break;case 1:this.chord=t.chords.dictionary["custom interval"].index,this.algorithm=0,this.feedbackType=0,this.feedbackAmplitude=0;for(let c=0;c<this.operators.length;c++)this.operators[c].reset(c);break;case 11:this.transition=1,this.vibrato=0,this.chord=3,this.algorithm=0,this.feedbackType=0,this.algorithm6Op=1,this.feedbackType6Op=1,this.customAlgorithm.fromPreset(1),this.feedbackAmplitude=0;for(let c=0;c<this.operators.length;c++)this.operators[c].reset(c);break;case 2:this.chipNoise=1,this.chord=t.chords.dictionary.arpeggio.index;break;case 3:this.chord=t.chords.dictionary.simultaneous.index,this.spectrumWave.reset(a);break;case 4:this.chord=t.chords.dictionary.simultaneous.index;for(let c=0;c<t.drumCount;c++)this.drumsetEnvelopes[c]=t.envelopes.dictionary["twang 2"].index,this.drumsetSpectrumWaves[c]==null&&(this.drumsetSpectrumWaves[c]=new Wt(!0)),this.drumsetSpectrumWaves[c].reset(a);break;case 5:this.chord=t.chords.dictionary.simultaneous.index,this.harmonicsWave.reset();break;case 6:this.chord=t.chords.dictionary.arpeggio.index,this.pulseWidth=t.pulseWidthRange,this.decimalOffset=0;break;case 7:this.chord=t.chords.dictionary.strum.index,this.harmonicsWave.reset();break;case 10:this.transition=0,this.vibrato=0,this.interval=0,this.chord=0,this.modChannels=[],this.modInstruments=[],this.modulators=[];for(let c=0;c<t.modCount;c++)this.modChannels.push([-2]),this.modInstruments.push([0]),this.modulators.push(t.modulators.dictionary.none.index),this.invalidModulators[c]=!1,this.modFilterTypes[c]=0,this.modEnvelopeNumbers[c]=0;break;case 8:this.chord=t.chords.dictionary.arpeggio.index,this.supersawDynamism=t.supersawDynamismMax,this.supersawSpread=Math.ceil(t.supersawSpreadMax/2),this.supersawShape=0,this.pulseWidth=t.pulseWidthRange-1,this.decimalOffset=0;break;default:throw new Error("Unrecognized instrument type: "+e)}this.chord!=t.chords.dictionary.simultaneous.index&&(this.mdeffects=this.mdeffects|16)}convertLegacySettings(e,a){let i=e.filterCutoff,n=e.filterResonance,s=e.filterEnvelope,r=e.pulseEnvelope,u=e.operatorEnvelopes,c=e.feedbackEnvelope;i==null&&(i=this.type==0?6:10),n==null&&(n=0),s==null&&(s=t.envelopes.dictionary.none),r==null&&(r=t.envelopes.dictionary[this.type==6?"twang 2":"none"]),u==null&&(u=[t.envelopes.dictionary[this.type==1?"note size":"none"],t.envelopes.dictionary.none,t.envelopes.dictionary.none,t.envelopes.dictionary.none]),c==null&&(c=t.envelopes.dictionary.none),i==11-1&&s.type==4&&(s=t.envelopes.dictionary.none);let y=t.algorithms[this.algorithm].carrierCount,d=!0,g=!0,h=s.type==1||r.type==1;if(this.type==1||this.type==11){h=h||c.type==1;for(let m=0;m<u.length;m++)m<y?u[m].type!=1?g=!1:d=!1:h=h||u[m].type==1}this.envelopeCount=0,(this.type==1||this.type==11)&&(g&&h?this.addEnvelope(t.instrumentAutomationTargets.dictionary.noteVolume.index,0,t.envelopes.dictionary["note size"].index,!1):d&&!h&&this.addEnvelope(t.instrumentAutomationTargets.dictionary.none.index,0,t.envelopes.dictionary["note size"].index,!1)),r.type!=0&&this.addEnvelope(t.instrumentAutomationTargets.dictionary.pulseWidth.index,0,r.index,!1);for(let m=0;m<u.length;m++)m<y&&g||u[m].type!=0&&this.addEnvelope(t.instrumentAutomationTargets.dictionary.operatorAmplitude.index,m,u[m].index,!1);c.type!=0&&this.addEnvelope(t.instrumentAutomationTargets.dictionary.feedbackAmplitude.index,0,c.index,!1)}toJsonObject(){let e={type:t.instrumentTypeNames[this.type],volume:this.volume,noteFilter:this.noteFilter.toJsonObject(),noteFilterType:this.noteFilterType,noteSimpleCut:this.noteFilterSimpleCut,noteSimplePeak:this.noteFilterSimplePeak,envelopeSpeed:this.envelopeSpeed};this.preset!=this.type&&(e.preset=this.preset);for(let i=0;i<t.filterMorphCount;i++)this.noteSubFilters[i]!=null&&(e["noteSubFilters"+i]=this.noteSubFilters[i].toJsonObject());if(e.mdeffects=this.mdeffects,Tt(this.mdeffects)&&(e.transition=t.transitions[this.transition].name,e.clicklessTransition=this.clicklessTransition),kt(this.mdeffects)&&(e.chord=this.getChord().name,e.fastTwoNoteArp=this.fastTwoNoteArp,e.arpeggioSpeed=this.arpeggioSpeed,e.monoChordTone=this.monoChordTone),It(this.mdeffects)&&(e.pitchShiftSemitones=this.pitchShift),Ft(this.mdeffects)&&(e.detuneCents=At(this.detune)),wt(this.mdeffects)&&(this.vibrato==-1&&(this.vibrato=5),this.vibrato!=5?e.vibrato=t.vibratos[this.vibrato].name:e.vibrato="custom",e.vibratoDepth=this.vibratoDepth,e.vibratoDelay=this.vibratoDelay,e.vibratoSpeed=this.vibratoSpeed,e.vibratoType=this.vibratoType),this.type!=4&&(e.fadeInSeconds=Math.round(1e4*un(this.fadeIn))/1e4,e.fadeOutTicks=fn(this.fadeOut)),this.type==5||this.type==7){e.harmonics=[];for(let i=0;i<t.harmonicsControlPoints;i++)e.harmonics[i]=Math.round(100*this.harmonicsWave.harmonics[i]/t.harmonicsMax)}if(this.type==2)e.wave=t.chipNoises[this.chipNoise].name,e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(this.type==3){e.spectrum=[];for(let i=0;i<t.spectrumControlPoints;i++)e.spectrum[i]=Math.round(100*this.spectrumWave.spectrum[i]/t.spectrumMax);e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign)}else if(this.type==4){e.drums=[],e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);for(let i=0;i<t.drumCount;i++){let n=[];for(let s=0;s<t.spectrumControlPoints;s++)n[s]=Math.round(100*this.drumsetSpectrumWaves[i].spectrum[s]/t.spectrumMax);e.drums[i]={filterEnvelope:this.getDrumsetEnvelope(i).name,spectrum:n}}}else if(this.type==0)e.wave=t.chipWaves[this.chipWave].name,e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign),e.isUsingAdvancedLoopControls=this.isUsingAdvancedLoopControls,e.chipWaveLoopStart=this.chipWaveLoopStart,e.chipWaveLoopEnd=this.chipWaveLoopEnd,e.chipWaveLoopMode=this.chipWaveLoopMode,e.chipWavePlayBackwards=this.chipWavePlayBackwards,e.chipWaveStartOffset=this.chipWaveStartOffset,e.chipWaveInStereo=this.chipWaveInStereo;else if(this.type==6)e.pulseWidth=this.pulseWidth,e.decimalOffset=this.decimalOffset,e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(this.type==8)e.pulseWidth=this.pulseWidth,e.decimalOffset=this.decimalOffset,e.dynamism=Math.round(100*this.supersawDynamism/t.supersawDynamismMax),e.spread=Math.round(100*this.supersawSpread/t.supersawSpreadMax),e.shape=Math.round(100*this.supersawShape/t.supersawShapeMax);else if(this.type==7)e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign),e.stringSustain=Math.round(100*this.stringSustain/(t.stringSustainRange-1)),t.enableAcousticSustain&&(e.stringSustainType=t.sustainTypeNames[this.stringSustainType]);else if(this.type==5)e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(this.type==1||this.type==11){let i=[];for(let n of this.operators)i.push({frequency:t.operatorFrequencies[n.frequency].name,amplitude:n.amplitude,waveform:t.operatorWaves[n.waveform].name,pulseWidth:n.pulseWidth});if(this.type==1)e.algorithm=t.algorithms[this.algorithm].name,e.feedbackType=t.feedbacks[this.feedbackType].name,e.feedbackAmplitude=this.feedbackAmplitude,e.operators=i;else{if(e.algorithm=t.algorithms6Op[this.algorithm6Op].name,e.feedbackType=t.feedbacks6Op[this.feedbackType6Op].name,e.feedbackAmplitude=this.feedbackAmplitude,this.algorithm6Op==0){let n={};n.mods=this.customAlgorithm.modulatedBy,n.carrierCount=this.customAlgorithm.carrierCount,e.customAlgorithm=n}if(this.feedbackType6Op==0){let n={};n.mods=this.customFeedbackType.indices,e.customFeedback=n}e.operators=i}}else if(this.type==9){e.wave=t.chipWaves[this.chipWave].name,e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign),e.customChipWave=new Float64Array(64),e.customChipWaveIntegral=new Float64Array(65);for(let i=0;i<this.customChipWave.length;i++)e.customChipWave[i]=this.customChipWave[i]}else if(this.type==10){e.modChannels=[],e.modInstruments=[],e.modSettings=[],e.modFilterTypes=[],e.modEnvelopeNumbers=[];for(let i=0;i<t.modCount;i++)e.modChannels[i]=this.modChannels[i],e.modInstruments[i]=this.modInstruments[i],e.modSettings[i]=this.modulators[i],e.modFilterTypes[i]=this.modFilterTypes[i],e.modEnvelopeNumbers[i]=this.modEnvelopeNumbers[i]}else throw new Error("Unrecognized instrument type");let a=[];for(let i=0;i<this.envelopeCount;i++)a.push(this.envelopes[i].toJsonObject());return e.envelopes=a,e}fromJsonObject(e,a,i,n,s,r=0,u=t.jsonFormat){e==null&&(e={});let c=u.toLowerCase(),v=t.instrumentTypeNames.indexOf(e.type);c=="synthbox"&&e.type=="FM"&&(v=t.instrumentTypeNames.indexOf("FM6op")),v==-1&&(v=i?10:a?2:0),this.setTypeAndReset(v,a,i),e.preset!=null&&(this.preset=e.preset>>>0),e.volume!=null?c=="jummbox"||c=="midbox"||c=="synthbox"||c=="goldbox"||c=="paandorasbox"||c=="ultrabox"||c=="slarmoosbox"||c=="Theepbox"?this.volume=q(-t.volumeRange/2,t.volumeRange/2+1,e.volume|0):this.volume=Math.round(-q(0,8,Math.round(5-(e.volume|0)/20))*25/7):this.volume=0,this.envelopeSpeed=e.envelopeSpeed!=null?q(0,t.modulators.dictionary["envelope speed"].maxRawVol+1,e.envelopeSpeed|0):12,Array.isArray(e.effects),e.mdeffects!=null?this.mdeffects=e.mdeffects:this.mdeffects=0,this.transition=t.transitions.dictionary.normal.index;let o=e.transition||e.envelope;if(o!=null){let m=t.transitions.dictionary[o];if(e.fadeInSeconds==null||e.fadeOutTicks==null){let p={binary:{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},seamless:{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},sudden:{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},hard:{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},smooth:{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},soft:{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},slide:{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3},"cross fade":{transition:"normal",fadeInSeconds:.04,fadeOutTicks:6},"hard fade":{transition:"normal",fadeInSeconds:0,fadeOutTicks:48},"medium fade":{transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72},"soft fade":{transition:"normal",fadeInSeconds:.06,fadeOutTicks:96}}[o];p!=null&&(m=t.transitions.dictionary[p.transition],this.fadeIn=ot(p.fadeInSeconds),this.fadeOut=lt(p.fadeOutTicks))}m!=null&&(this.transition=m.index),this.transition!=t.transitions.dictionary.normal.index&&(this.mdeffects=this.mdeffects|8)}e.fadeInSeconds!=null&&(this.fadeIn=ot(+e.fadeInSeconds)),e.fadeOutTicks!=null&&(this.fadeOut=lt(+e.fadeOutTicks));{let m=e.chord,p={harmony:"simultaneous"},I=t.chords.dictionary[p[m]]||t.chords.dictionary[m];I!=null?this.chord=I.index:this.type==2?this.chord=t.chords.dictionary.arpeggio.index:this.type==7?this.chord=t.chords.dictionary.strum.index:this.type==0?this.chord=t.chords.dictionary.arpeggio.index:this.type==1||this.type==11?this.chord=t.chords.dictionary["custom interval"].index:this.chord=t.chords.dictionary.simultaneous.index}this.unison=t.unisons.dictionary.none.index;let y=e.unison||e.interval||e.chorus;if(y!=null){let m={union:"none",fifths:"fifth",octaves:"octave",error:"voiced"},p=t.unisons.dictionary[m[y]]||t.unisons.dictionary[y];p!=null&&(this.unison=p.index),y=="custom"&&(this.unison=t.unisons.length)}if(this.unisonVoices=e.unisonVoices==null?t.unisons[this.unison].voices:e.unisonVoices,this.unisonSpread=e.unisonSpread==null?t.unisons[this.unison].spread:e.unisonSpread,this.unisonOffset=e.unisonOffset==null?t.unisons[this.unison].offset:e.unisonOffset,this.unisonExpression=e.unisonExpression==null?t.unisons[this.unison].expression:e.unisonExpression,this.unisonSign=e.unisonSign==null?t.unisons[this.unison].sign:e.unisonSign,e.chorus=="custom harmony"&&(this.unison=t.unisons.dictionary.hum.index,this.chord=t.chords.dictionary["custom interval"].index),this.chord!=t.chords.dictionary.simultaneous.index&&!Array.isArray(e.mdeffects)&&(this.mdeffects=this.mdeffects|16),e.pitchShiftSemitones!=null&&(this.pitchShift=q(0,t.pitchShiftRange,Math.round(+e.pitchShiftSemitones))),e.octoff!=null){let m=e.octoff;this.mdeffects=this.mdeffects|1,m=="+1 (octave)"||m=="+2 (2 octaves)"?this.pitchShift=24:m=="+1/2 (fifth)"||m=="+1 1/2 (octave and fifth)"?this.pitchShift=18:m=="-1 (octave)"||m=="-2 (2 octaves"?this.pitchShift=0:m=="-1/2 (fifth)"||m=="-1 1/2 (octave and fifth)"?this.pitchShift=6:this.pitchShift=12}e.detuneCents!=null&&(this.detune=q(t.detuneMin,t.detuneMax+1,Math.round(Tn(+e.detuneCents)))),this.vibrato=t.vibratos.dictionary.none.index;let d=e.vibrato||e.effect;if(d!=null){let m={"vibrato light":"light","vibrato delayed":"delayed","vibrato heavy":"heavy"},p=t.vibratos.dictionary[m[y]]||t.vibratos.dictionary[d];p!=null?this.vibrato=p.index:d=="custom"&&(this.vibrato=t.vibratos.length),this.vibrato==t.vibratos.length?(this.vibratoDepth=e.vibratoDepth,this.vibratoSpeed=e.vibratoSpeed,this.vibratoDelay=e.vibratoDelay,this.vibratoType=e.vibratoType):(this.vibratoDepth=t.vibratos[this.vibrato].amplitude,this.vibratoDelay=t.vibratos[this.vibrato].delayTicks/2,this.vibratoSpeed=10,this.vibratoType=t.vibratos[this.vibrato].type),p!=t.vibratos.dictionary.none&&(this.mdeffects=this.mdeffects|4)}if(e.detune!=null?this.detune=q(t.detuneMin,t.detuneMax+1,e.detune|0):e.detuneCents==null&&(this.detune=t.detuneCenter),e.pulseWidth!=null?this.pulseWidth=q(1,t.pulseWidthRange+1,Math.round(e.pulseWidth)):this.pulseWidth=t.pulseWidthRange,e.decimalOffset!=null?this.decimalOffset=q(0,100,Math.round(e.decimalOffset)):this.decimalOffset=0,e.dynamism!=null?this.supersawDynamism=q(0,t.supersawDynamismMax+1,Math.round(t.supersawDynamismMax*(e.dynamism|0)/100)):this.supersawDynamism=t.supersawDynamismMax,e.spread!=null?this.supersawSpread=q(0,t.supersawSpreadMax+1,Math.round(t.supersawSpreadMax*(e.spread|0)/100)):this.supersawSpread=Math.ceil(t.supersawSpreadMax/2),e.shape!=null?this.supersawShape=q(0,t.supersawShapeMax+1,Math.round(t.supersawShapeMax*(e.shape|0)/100)):this.supersawShape=0,e.harmonics!=null){for(let m=0;m<t.harmonicsControlPoints;m++)this.harmonicsWave.harmonics[m]=Math.max(0,Math.min(t.harmonicsMax,Math.round(t.harmonicsMax*+e.harmonics[m]/100)));this.harmonicsWave.markCustomWaveDirty()}else this.harmonicsWave.reset();if(e.spectrum!=null)for(let m=0;m<t.spectrumControlPoints;m++)this.spectrumWave.spectrum[m]=Math.max(0,Math.min(t.spectrumMax,Math.round(t.spectrumMax*+e.spectrum[m]/100))),this.spectrumWave.markCustomWaveDirty();else this.spectrumWave.reset(a);e.stringSustain!=null?this.stringSustain=q(0,t.stringSustainRange,Math.round((t.stringSustainRange-1)*(e.stringSustain|0)/100)):this.stringSustain=10,this.stringSustainType=t.enableAcousticSustain?t.sustainTypeNames.indexOf(e.stringSustainType):0,this.stringSustainType==-1&&(this.stringSustainType=0),this.type==2&&(this.chipNoise=t.chipNoises.findIndex(m=>m.name==e.wave),e.wave=="pink noise"&&(this.chipNoise=t.chipNoises.findIndex(m=>m.name=="pink")),e.wave=="brownian noise"&&(this.chipNoise=t.chipNoises.findIndex(m=>m.name=="brownian")),this.chipNoise==-1&&(this.chipNoise=1));let g={custom:"note size",steady:"none","pluck 1":"twang 1","pluck 2":"twang 2","pluck 3":"twang 3"},h=m=>g[m]!=null?t.envelopes.dictionary[g[m]]:t.envelopes.dictionary[m];if(this.type==4&&e.drums!=null)for(let m=0;m<t.drumCount;m++){let p=e.drums[m];if(p!=null){if(this.drumsetEnvelopes[m]=t.envelopes.dictionary["twang 2"].index,p.filterEnvelope!=null){let I=h(p.filterEnvelope);I!=null&&(this.drumsetEnvelopes[m]=I.index)}if(p.spectrum!=null)for(let I=0;I<t.spectrumControlPoints;I++)this.drumsetSpectrumWaves[m].spectrum[I]=Math.max(0,Math.min(t.spectrumMax,Math.round(t.spectrumMax*+p.spectrum[I]/100)));this.drumsetSpectrumWaves[m].markCustomWaveDirty()}}if(this.type==0){let m={triangle:1,square:2,"pulse wide":3,"pulse narrow":4,sawtooth:5,"double saw":6,"double pulse":7,spiky:8,plateau:0},p={"10% pulse":22,"sunsoft bass":23,"loud pulse":24,sax:25,guitar:26,"atari bass":28,"atari pulse":29,"1% pulse":30,"curved sawtooth":31,viola:32,brass:33,"acoustic bass":34,lyre:35,"ramp pulse":36,piccolo:37,squaretooth:38,flatline:39,"pnryshk a (u5)":40,"pnryshk b (riff)":41},I={"shrill lute":42,"shrill bass":44,"nes pulse":45,"saw bass":46,euphonium:47,"shrill pulse":48,"r-sawtooth":49,recorder:50,"narrow saw":51,"deep square":52,"ring pulse":53,"double sine":54,contrabass:55,"double bass":56},F={"semi-square":63,"deep square":64,squaretal:40,"saw wide":65,"saw narrow ":66,"deep sawtooth":67,sawtal:68,pulse:69,"triple pulse":70,"high pulse":71,"deep pulse":72},M={test1:56,"pokey 4bit lfsr":57,"pokey 5step bass":58,"isolated spiky":59,"unnamed 1":60,"unnamed 2":61,"guitar string":75,intense:76,"buzz wave":77,"pokey square":57,"pokey bass":58,"banana wave":83,"test 1":84,"test 2":84,"real snare":85,"earthbound o. guitar":86},S={kick:87,snare:88,piano1:89,WOW:90,overdrive:91,trumpet:92,saxophone:93,orchestrahit:94,"detached violin":95,synth:96,sonic3snare:97,"come on":98,choir:99,overdriveguitar:100,flute:101,"legato violin":102,"tremolo violin":103,"amen break":104,"pizzicato violin":105,"tim allen grunt":106,tuba:107,loopingcymbal:108,standardkick:109,standardsnare:110,closedhihat:111,foothihat:112,openhihat:113,crashcymbal:114,pianoC4:115,"liver pad":116,marimba:117,susdotwav:118,wackyboxtts:119};this.chipWave=-1;let C=e.wave;for(let W of[m,p,I,F,M,S])if(this.chipWave==-1&&W[C]!=null&&t.chipWaves[W[C]]!=null){this.chipWave=W[C];break}if(this.chipWave==-1){let W=t.chipWaves.findIndex(L=>L.name==C);W!=-1&&(this.chipWave=W)}this.chipWave==-1&&(this.chipWave=1)}if(this.type==1||this.type==11){if(this.type==1)this.algorithm=t.algorithms.findIndex(m=>m.name==e.algorithm),this.algorithm==-1&&(this.algorithm=0),this.feedbackType=t.feedbacks.findIndex(m=>m.name==e.feedbackType),this.feedbackType==-1&&(this.feedbackType=0);else{if(this.algorithm6Op=t.algorithms6Op.findIndex(m=>m.name==e.algorithm),this.algorithm6Op==-1&&(this.algorithm6Op=1),this.algorithm6Op==0?this.customAlgorithm.set(e.customAlgorithm.carrierCount,e.customAlgorithm.mods):this.customAlgorithm.fromPreset(this.algorithm6Op),this.feedbackType6Op=t.feedbacks6Op.findIndex(m=>m.name==e.feedbackType),this.feedbackType6Op==-1){let m=me([{name:"2\u27F2 3\u27F2",indices:[[],[2],[3],[],[],[]]},{name:"3\u27F2 4\u27F2",indices:[[],[],[3],[4],[],[]]},{name:"4\u27F2 5\u27F2",indices:[[],[],[],[4],[5],[]]},{name:"5\u27F2 6\u27F2",indices:[[],[],[],[],[5],[6]]},{name:"1\u27F2 6\u27F2",indices:[[1],[],[],[],[],[6]]},{name:"1\u27F2 3\u27F2",indices:[[1],[],[3],[],[],[]]},{name:"1\u27F2 4\u27F2",indices:[[1],[],[],[4],[],[]]},{name:"1\u27F2 5\u27F2",indices:[[1],[],[],[],[5],[]]},{name:"4\u27F2 6\u27F2",indices:[[],[],[],[4],[],[6]]},{name:"2\u27F2 6\u27F2",indices:[[],[2],[],[],[],[6]]},{name:"3\u27F2 6\u27F2",indices:[[],[],[3],[],[],[6]]},{name:"4\u27F2 5\u27F2 6\u27F2",indices:[[],[],[],[4],[5],[6]]},{name:"1\u27F2 3\u27F2 6\u27F2",indices:[[1],[],[3],[],[],[6]]},{name:"2\u21925",indices:[[],[],[],[],[2],[]]},{name:"2\u21926",indices:[[],[],[],[],[],[2]]},{name:"3\u21925",indices:[[],[],[],[],[3],[]]},{name:"3\u21926",indices:[[],[],[],[],[],[3]]},{name:"4\u21926",indices:[[],[],[],[],[],[4]]},{name:"5\u21926",indices:[[],[],[],[],[],[5]]},{name:"1\u21923\u21924",indices:[[],[],[1],[],[3],[]]},{name:"2\u21925\u21926",indices:[[],[],[],[],[2],[5]]},{name:"2\u21924\u21926",indices:[[],[],[],[2],[],[4]]},{name:"4\u21925\u21926",indices:[[],[],[],[],[4],[5]]},{name:"3\u21924\u21925\u21926",indices:[[],[],[],[3],[4],[5]]},{name:"2\u21923\u21924\u21925\u21926",indices:[[],[1],[2],[3],[4],[5]]},{name:"1\u21922\u21923\u21924\u21925\u21926",indices:[[],[1],[2],[3],[4],[5]]}]),p=m[m.findIndex(I=>I.name==e.feedbackType)].indices;p!=null?(this.feedbackType6Op=0,this.customFeedbackType.set(p)):this.feedbackType6Op=1}this.feedbackType6Op==0&&e.customFeedback!=null?this.customFeedbackType.set(e.customFeedback.mods):this.customFeedbackType.fromPreset(this.feedbackType6Op)}e.feedbackAmplitude!=null?this.feedbackAmplitude=q(0,t.operatorAmplitudeMax+1,e.feedbackAmplitude|0):this.feedbackAmplitude=0;for(let m=0;m<t.operatorCount+(this.type==11?2:0);m++){let p=this.operators[m],I;if(e.operators!=null&&(I=e.operators[m]),I==null&&(I={}),p.frequency=t.operatorFrequencies.findIndex(F=>F.name==I.frequency),p.frequency==-1&&(p.frequency=0),I.amplitude!=null?p.amplitude=q(0,t.operatorAmplitudeMax+1,I.amplitude|0):p.amplitude=0,I.waveform!=null){if(c=="goldbox"&&m>3){p.waveform=0;continue}p.waveform=t.operatorWaves.findIndex(F=>F.name==I.waveform),p.waveform==-1&&(I.waveform=="square"?(p.waveform=t.operatorWaves.dictionary["pulse width"].index,p.pulseWidth=5):I.waveform=="rounded"?p.waveform=t.operatorWaves.dictionary["quasi-sine"].index:p.waveform=0)}else p.waveform=0;I.pulseWidth!=null?p.pulseWidth=I.pulseWidth|0:p.pulseWidth=5}}else if(this.type==9){if(e.customChipWave){for(let M=0;M<64;M++)this.customChipWave[M]=e.customChipWave[M];let m=0;for(let M=0;M<this.customChipWave.length;M++)m+=this.customChipWave[M];let p=m/this.customChipWave.length,I=0,F=0;for(let M=0;M<this.customChipWave.length;M++)I+=F,F=this.customChipWave[M]-p,this.customChipWaveIntegral[M]=I;this.customChipWaveIntegral[64]=0}}else if(this.type==10&&e.modChannels!=null)for(let m=0;m<t.modCount;m++)this.modChannels[m]=e.modChannels[m],this.modInstruments[m]=e.modInstruments[m],this.modulators[m]=e.modSettings[m],e.modFilterTypes!=null&&(this.modFilterTypes[m]=e.modFilterTypes[m]),e.modEnvelopeNumbers!=null&&(this.modEnvelopeNumbers[m]=e.modEnvelopeNumbers[m]);if(this.type!=10){if(this.chord==t.chords.dictionary.arpeggio.index&&e.arpeggioSpeed!=null?this.arpeggioSpeed=e.arpeggioSpeed:this.arpeggioSpeed=n?9:12,this.chord==t.chords.dictionary.monophonic.index&&e.monoChordTone!=null&&(this.monoChordTone=e.monoChordTone),e.fastTwoNoteArp!=null?this.fastTwoNoteArp=e.fastTwoNoteArp:this.fastTwoNoteArp=s,e.clicklessTransition!=null?this.clicklessTransition=e.clicklessTransition:this.clicklessTransition=!1,e.aliases!=null)this.aliases=e.aliases;else if(c=="modbox"){let m=this.addEffect(3);this.aliases=!0,m.distortion=0}else this.aliases=!1;e.noteFilterType!=null&&(this.noteFilterType=e.noteFilterType),e.noteSimpleCut!=null&&(this.noteFilterSimpleCut=e.noteSimpleCut),e.noteSimplePeak!=null&&(this.noteFilterSimplePeak=e.noteSimplePeak),e.noteFilter!=null?this.noteFilter.fromJsonObject(e.noteFilter):this.noteFilter.reset();for(let m=0;m<t.filterMorphCount;m++)Array.isArray(e["noteSubFilters"+m])&&(this.noteSubFilters[m]=new Ee,this.noteSubFilters[m].fromJsonObject(e["noteSubFilters"+m]));if(!Array.isArray(e.eqFilter)){let m={};if(e.filterCutoffHz!=null?m.filterCutoff=q(0,11,Math.round(10+2*Math.log((e.filterCutoffHz|0)/8e3)/Math.LN2)):m.filterCutoff=this.type==0?6:10,e.filterResonance!=null?m.filterResonance=q(0,8,Math.round(7*(e.filterResonance|0)/100)):m.filterResonance=0,m.filterEnvelope=h(e.filterEnvelope),m.pulseEnvelope=h(e.pulseEnvelope),m.feedbackEnvelope=h(e.feedbackEnvelope),Array.isArray(e.operators)){m.operatorEnvelopes=[];for(let M=0;M<t.operatorCount+(this.type==11?2:0);M++){let S;e.operators[M]!=null&&(S=h(e.operators[M].envelope)),m.operatorEnvelopes[M]=S??t.envelopes.dictionary.none}}if(e.filter!=null){let M=[10,6,3,0,8,5,2],S=["none","none","none","none","decay 1","decay 2","decay 3"],C=["none","bright","medium","soft","decay bright","decay medium","decay soft"],W={"sustain sharp":1,"sustain medium":2,"sustain soft":3,"decay sharp":4},L=W[e.filter]!=null?W[e.filter]:C.indexOf(e.filter);L==-1&&(L=0),m.filterCutoff=M[L],m.filterEnvelope=h(S[L]),m.filterResonance=0}this.convertLegacySettings(m,!0)}if(Array.isArray(e.envelopes)){let m=e.envelopes;for(let p=0;p<m.length&&!(this.envelopeCount>=t.maxEnvelopeCount);p++){let I=new zt(this.isNoiseInstrument);I.fromJsonObject(m[p],c);let F;e.pitchEnvelopeStart!=null&&e.pitchEnvelopeStart!=null?F=e.pitchEnvelopeStart:e["pitchEnvelopeStart"+p]!=null&&e["pitchEnvelopeStart"+p]!=null?F=e["pitchEnvelopeStart"+p]:F=I.pitchEnvelopeStart;let M;e.pitchEnvelopeEnd!=null&&e.pitchEnvelopeEnd!=null?M=e.pitchEnvelopeEnd:e["pitchEnvelopeEnd"+p]!=null&&e["pitchEnvelopeEnd"+p]!=null?M=e["pitchEnvelopeEnd"+p]:M=I.pitchEnvelopeEnd;let S;e["envelopeInverse"+p]!=null&&e["envelopeInverse"+p]!=null?S=e["envelopeInverse"+p]:e.pitchEnvelopeInverse!=null&&e.pitchEnvelopeInverse!=null&&t.envelopes[I.envelope].name=="pitch"?S=e.pitchEnvelopeInverse:S=I.inverse;let C;e.discreteEnvelope!=null?C=e.discreteEnvelope:C=I.discrete,this.addEnvelope(I.target,I.index,I.envelope,!0,F,M,S,I.perEnvelopeSpeed,I.perEnvelopeLowerBound,I.perEnvelopeUpperBound,I.steps,I.seed,I.waveform,C)}}}v===0&&(e.isUsingAdvancedLoopControls!=null?(this.isUsingAdvancedLoopControls=e.isUsingAdvancedLoopControls,this.chipWaveLoopStart=e.chipWaveLoopStart,this.chipWaveLoopEnd=e.chipWaveLoopEnd,this.chipWaveLoopMode=e.chipWaveLoopMode,this.chipWavePlayBackwards=e.chipWavePlayBackwards,this.chipWaveStartOffset=e.chipWaveStartOffset):(this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=t.rawRawChipWaves[this.chipWave].samples.length-1,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0),this.chipWaveInStereo=e.chipWaveInStereo)}getLargestControlPointCount(e){let a;if(e){a=this.noteFilter.controlPointCount;for(let i=0;i<t.filterMorphCount;i++)this.noteSubFilters[i]!=null&&this.noteSubFilters[i].controlPointCount>a&&(a=this.noteSubFilters[i].controlPointCount)}else{a=this.effects[0].eqFilter.controlPointCount;for(let i=0;i<this.effectCount;i++)if(this.effects[i]!=null&&this.effects[i].type==5)for(let n=0;n<t.filterMorphCount;n++)this.effects[i].eqSubFilters[n]!=null&&this.effects[i].eqSubFilters[n].controlPointCount>a&&(a=this.effects[i].eqSubFilters[n].controlPointCount)}return a}static frequencyFromPitch(e){return 440*Math.pow(2,(e-69)/12)}addEffect(e){let a=new Vt(e);return this.effects.push(a),this.effectCount++,a}removeEffect(e){for(let a=0;a<this.effectCount;a++)if(this.effects[a]!=null&&this.effects[a].type==e){this.effects.splice(a,1);break}this.effectCount--}effectsIncludeType(e){for(let a=0;a<this.effects.length;a++)if(this.effects[a]!=null&&this.effects[a].type==e)return!0;return!1}addEnvelope(e,a,i,n,s=0,r=-1,u=!1,c=-1,v=0,o=1,y=2,d=2,g=0,h=!1){r=r!=-1?r:this.isNoiseInstrument?t.drumCount-1:t.maxPitch,c=c!=-1?c:n?1:t.envelopes[i].speed;let m=!1;if(this.supportsEnvelopeTarget(e,a)||(m=!0),this.envelopeCount>=t.maxEnvelopeCount)throw new Error;for(;this.envelopes.length<=this.envelopeCount;)this.envelopes[this.envelopes.length]=new zt(this.isNoiseInstrument);let p=this.envelopes[this.envelopeCount];p.target=m?t.instrumentAutomationTargets.dictionary.none.index:e,p.index=m?0:a,n?p.envelope=i:p.envelope=q(0,t.newEnvelopes.length,t.envelopes[i].type),p.pitchEnvelopeStart=s,p.pitchEnvelopeEnd=r,p.inverse=u,p.perEnvelopeSpeed=c,p.perEnvelopeLowerBound=v,p.perEnvelopeUpperBound=o,p.steps=y,p.seed=d,p.waveform=g,p.discrete=h,this.envelopeCount++}supportsEnvelopeTarget(e,a){let i=t.instrumentAutomationTargets[e];if(i.computeIndex==null&&i.name!="none"||a>=i.maxCount||i.compatibleInstruments!=null&&i.compatibleInstruments.indexOf(this.type)==-1||i.effect!=null&&!this.effectsIncludeType(i.effect)||i.mdeffect!=null&&(this.mdeffects&1<<i.mdeffect)==0)return!1;if(i.isFilter){let n=this.noteFilter.controlPointCount;if(this.noteFilterType&&(n=1),a>=n)return!1}return!((i.name=="operatorFrequency"||i.name=="operatorAmplitude")&&a>=4+(this.type==11?2:0))}clearInvalidEnvelopeTargets(){for(let e=0;e<this.envelopeCount;e++){let a=this.envelopes[e].target,i=this.envelopes[e].index;this.supportsEnvelopeTarget(a,i)||(this.envelopes[e].target=t.instrumentAutomationTargets.dictionary.none.index,this.envelopes[e].index=0)}}getTransition(){return Tt(this.mdeffects)?t.transitions[this.transition]:this.type==10?t.transitions.dictionary.interrupt:t.transitions.dictionary.normal}getFadeInSeconds(){return this.type==4?0:un(this.fadeIn)}getFadeOutTicks(){return this.type==4?t.drumsetFadeOutTicks:fn(this.fadeOut)}getChord(){return kt(this.mdeffects)?t.chords[this.chord]:t.chords.dictionary.simultaneous}getDrumsetEnvelope(e){if(this.type!=4)throw new Error("Can't getDrumsetEnvelope() for non-drumset.");return t.envelopes[this.drumsetEnvelopes[e]]}};var $t=class{delayLinePosition;ageInSamples;maxAgeInSamples;delay;parabolicEnvelopeAmplitude;parabolicEnvelopeSlope;parabolicEnvelopeCurve;rcbEnvelopeAmplitude;rcbEnvelopeAttackIndex;rcbEnvelopeReleaseIndex;rcbEnvelopeSustain;constructor(){this.delayLinePosition=0,this.ageInSamples=0,this.maxAgeInSamples=0,this.delay=0,this.parabolicEnvelopeAmplitude=0,this.parabolicEnvelopeSlope=0,this.parabolicEnvelopeCurve=0,this.rcbEnvelopeAmplitude=0,this.rcbEnvelopeAttackIndex=0,this.rcbEnvelopeReleaseIndex=0,this.rcbEnvelopeSustain=0}initializeParabolicEnvelope(e,a){this.parabolicEnvelopeAmplitude=0;let i=1/e,n=i*i;this.parabolicEnvelopeSlope=4*a*(i-n),this.parabolicEnvelopeCurve=-8*a*n}updateParabolicEnvelope(){this.parabolicEnvelopeAmplitude+=this.parabolicEnvelopeSlope,this.parabolicEnvelopeSlope+=this.parabolicEnvelopeCurve}initializeRCBEnvelope(e,a){this.rcbEnvelopeAttackIndex=Math.floor(e/6),this.rcbEnvelopeSustain=a,this.rcbEnvelopeReleaseIndex=Math.floor(e*5/6)}updateRCBEnvelope(){this.ageInSamples<this.rcbEnvelopeAttackIndex?this.rcbEnvelopeAmplitude=1+Math.cos(Math.PI+Math.PI*(this.ageInSamples/this.rcbEnvelopeAttackIndex)*(this.rcbEnvelopeSustain/2)):this.ageInSamples>this.rcbEnvelopeReleaseIndex&&(this.rcbEnvelopeAmplitude=1+Math.cos(Math.PI*((this.ageInSamples-this.rcbEnvelopeReleaseIndex)/this.rcbEnvelopeAttackIndex))*(this.rcbEnvelopeSustain/2))}addDelay(e){this.delay=e}},Qt=class{type=0;eqFilterVolume=1;eqFilterVolumeDelta=0;granularMix=1;granularMixDelta=0;granularDelayLineL=null;granularDelayLineR=null;granularDelayLineIndex=0;granularMaximumDelayTimeInSeconds=1;granularGrains;granularGrainsLength;granularMaximumGrains;usesRandomGrainLocation=!0;granularDelayLineDirty=!1;computeGrains=!0;ringModMix=0;ringModMixDelta=0;ringModPhase=0;ringModPhaseDelta=0;ringModPhaseDeltaScale=1;ringModWaveformIndex=0;ringModPulseWidth=0;ringModHzOffset=0;ringModMixFade=1;ringModMixFadeDelta=0;distortion=0;distortionDelta=0;distortionDrive=0;distortionDriveDelta=0;distortionFractionalInputL1=0;distortionFractionalInputL2=0;distortionFractionalInputL3=0;distortionFractionalInputR1=0;distortionFractionalInputR2=0;distortionFractionalInputR3=0;distortionPrevInputL=0;distortionPrevInputR=0;distortionNextOutputL=0;distortionNextOutputR=0;bitcrusherPrevInputL=0;bitcrusherPrevInputR=0;bitcrusherCurrentOutputL=0;bitcrusherCurrentOutputR=0;bitcrusherPhase=1;bitcrusherPhaseDelta=0;bitcrusherPhaseDeltaScale=1;bitcrusherScale=1;bitcrusherScaleScale=1;bitcrusherFoldLevel=1;bitcrusherFoldLevelScale=1;eqFiltersL=[];eqFiltersR=[];eqFilterCount=0;initialEqFilterInputL1=0;initialEqFilterInputR1=0;initialEqFilterInputL2=0;initialEqFilterInputR2=0;gain=1;gainDelta=0;panningDelayLineL=null;panningDelayLineR=null;panningDelayPos=0;panningVolumeL=0;panningVolumeR=0;panningVolumeDeltaL=0;panningVolumeDeltaR=0;panningOffsetL=0;panningOffsetR=0;panningOffsetDeltaL=0;panningOffsetDeltaR=0;panningMode=0;flangerDelayLineL=null;flangerDelayLineR=null;flangerDelayLineDirty=!1;flangerDelayPos=0;flanger=0;flangerDelta=0;flangerSpeed=0;flangerSpeedDelta=0;flangerDepth=0;flangerDepthDelta=0;flangerFeedback=0;flangerFeedbackDelta=0;flangerPhase=0;chorusDelayLineL=null;chorusDelayLineR=null;chorusDelayLineDirty=!1;chorusDelayPos=0;chorusPhase=0;chorusVoiceMult=0;chorusVoiceMultDelta=0;chorusCombinedMult=0;chorusCombinedMultDelta=0;echoDelayLineL=null;echoDelayLineR=null;echoDelayLineDirty=!1;echoDelayPosL=0;echoDelayPosR=0;echoDelayOffsetStart=0;echoDelayOffsetEnd=null;echoDelayOffsetRatio=0;echoDelayOffsetRatioDelta=0;echoMult=0;echoMultDelta=0;echoPingPong=0;echoShelfA1=0;echoShelfB0=0;echoShelfB1=0;echoShelfSampleL=0;echoShelfSampleR=0;echoShelfPrevInputL=0;echoShelfPrevInputR=0;reverbDelayLine=null;reverbDelayLineDirty=!1;reverbDelayPos=0;reverbMult=0;reverbMultDelta=0;reverbShelfA1=0;reverbShelfB0=0;reverbShelfB1=0;reverbShelfSample0=0;reverbShelfSample1=0;reverbShelfSample2=0;reverbShelfSample3=0;reverbShelfPrevInput0=0;reverbShelfPrevInput1=0;reverbShelfPrevInput2=0;reverbShelfPrevInput3=0;constructor(e){this.type=e,this.granularGrains=[],this.granularMaximumGrains=256;for(let a=0;a<this.granularMaximumGrains;a++)this.granularGrains.push(new $t);this.granularGrainsLength=0}reset(){if(this.chorusDelayLineDirty){for(let e=0;e<this.chorusDelayLineL.length;e++)this.chorusDelayLineL[e]=0;for(let e=0;e<this.chorusDelayLineR.length;e++)this.chorusDelayLineR[e]=0}if(this.flangerDelayLineDirty){for(let e=0;e<this.flangerDelayLineL.length;e++)this.flangerDelayLineL[e]=0;for(let e=0;e<this.flangerDelayLineR.length;e++)this.flangerDelayLineR[e]=0}if(this.echoDelayLineDirty){for(let e=0;e<this.echoDelayLineL.length;e++)this.echoDelayLineL[e]=0;for(let e=0;e<this.echoDelayLineR.length;e++)this.echoDelayLineR[e]=0}if(this.reverbDelayLineDirty)for(let e=0;e<this.reverbDelayLine.length;e++)this.reverbDelayLine[e]=0;if(this.granularDelayLineDirty){for(let e=0;e<this.granularDelayLineL.length;e++)this.granularDelayLineL[e]=0;for(let e=0;e<this.granularDelayLineR.length;e++)this.granularDelayLineR[e]=0}this.flangerPhase=0,this.chorusPhase=0,this.ringModPhase=0,this.ringModMixFade=1}allocateNecessaryBuffers(e,a,i,n){if(i.type==2&&(this.panningDelayLineL==null||this.panningDelayLineR==null||this.panningDelayLineL.length<e.panningDelayBufferSize||this.panningDelayLineR.length<e.panningDelayBufferSize)&&(this.panningDelayLineL=new Float32Array(e.panningDelayBufferSize),this.panningDelayLineR=new Float32Array(e.panningDelayBufferSize)),i.type==1&&((this.chorusDelayLineL==null||this.chorusDelayLineL.length<e.chorusDelayBufferSize)&&(this.chorusDelayLineL=new Float32Array(e.chorusDelayBufferSize)),(this.chorusDelayLineR==null||this.chorusDelayLineR.length<e.chorusDelayBufferSize)&&(this.chorusDelayLineR=new Float32Array(e.chorusDelayBufferSize))),i.type==10&&((this.flangerDelayLineL==null||this.flangerDelayLineL.length<e.flangerDelayBufferSize)&&(this.flangerDelayLineL=new Float32Array(e.flangerDelayBufferSize)),(this.flangerDelayLineR==null||this.flangerDelayLineR.length<e.flangerDelayBufferSize)&&(this.flangerDelayLineR=new Float32Array(e.flangerDelayBufferSize))),i.type==6&&this.allocateEchoBuffers(n,i.echoDelay),i.type==0&&this.reverbDelayLine==null&&(this.reverbDelayLine=new Float32Array(t.reverbDelayBufferSize)),i.type==8){this.granularMaximumDelayTimeInSeconds=2.5;let u=$e(Math.floor(2.5*e.samplesPerSecond));(this.granularDelayLineL==null||this.granularDelayLineR==null||this.granularDelayLineL.length!=u||this.granularDelayLineR.length!=u)&&(this.granularDelayLineL=new Float32Array(u),this.granularDelayLineR=new Float32Array(u),this.granularDelayLineIndex=0);let c=this.granularGrains.length;if(this.granularMaximumGrains>c)for(let v=c;v<this.granularMaximumGrains+1;v++)this.granularGrains.push(new $t);this.granularMaximumGrains<this.granularGrainsLength&&(this.granularGrainsLength=Math.round(this.granularMaximumGrains))}}allocateEchoBuffers(e,a){let i=Math.max(t.echoDelayRange>>1,a+1),s=$e(i*t.echoDelayStepTicks*e)*2;if(this.echoDelayLineL==null||this.echoDelayLineR==null)this.echoDelayLineL=new Float32Array(s),this.echoDelayLineR=new Float32Array(s);else if(this.echoDelayLineL.length<s||this.echoDelayLineR.length<s){let r=new Float32Array(s),u=new Float32Array(s),c=this.echoDelayLineL.length-1;for(let v=0;v<this.echoDelayLineL.length;v++)r[v]=this.echoDelayLineL[this.echoDelayPosL+v&c],u[v]=this.echoDelayLineR[this.echoDelayPosR+v&c];this.echoDelayPosL=this.echoDelayLineL.length,this.echoDelayPosR=this.echoDelayLineR.length,this.echoDelayLineL=r,this.echoDelayLineR=u}}deactivate(){this.bitcrusherPrevInputL=0,this.bitcrusherPrevInputR=0,this.bitcrusherCurrentOutputL=0,this.bitcrusherCurrentOutputR=0,this.bitcrusherPhase=1;for(let e=0;e<this.eqFilterCount;e++)this.eqFiltersL[e].resetOutput(),this.eqFiltersR[e].resetOutput();if(this.eqFilterCount=0,this.initialEqFilterInputL1=0,this.initialEqFilterInputR1=0,this.initialEqFilterInputL2=0,this.initialEqFilterInputR2=0,this.distortionFractionalInputL1=0,this.distortionFractionalInputL2=0,this.distortionFractionalInputL3=0,this.distortionFractionalInputR1=0,this.distortionFractionalInputR2=0,this.distortionFractionalInputR3=0,this.distortionPrevInputL=0,this.distortionPrevInputR=0,this.distortionNextOutputL=0,this.distortionNextOutputR=0,this.flangerDelayPos=0,this.panningDelayPos=0,this.panningDelayLineL!=null)for(let e=0;e<this.panningDelayLineL.length;e++)this.panningDelayLineL[e]=0;if(this.panningDelayLineR!=null)for(let e=0;e<this.panningDelayLineR.length;e++)this.panningDelayLineR[e]=0;this.echoDelayOffsetEnd=null,this.echoShelfSampleL=0,this.echoShelfSampleR=0,this.echoShelfPrevInputL=0,this.echoShelfPrevInputR=0,this.reverbShelfSample0=0,this.reverbShelfSample1=0,this.reverbShelfSample2=0,this.reverbShelfSample3=0,this.reverbShelfPrevInput0=0,this.reverbShelfPrevInput1=0,this.reverbShelfPrevInput2=0,this.reverbShelfPrevInput3=0}compute(e,a,i,n,s,r,u,c,v,o,y){let d=e.samplesPerSecond;this.type=i.type;let g=i.type==8,h=i.type==7,m=i.type==3,p=i.type==4,I=i.type==9,F=i.type==2,M=i.type==10,S=i.type==1,C=i.type==6,W=i.type==0,L=i.type==5;if(g&&(this.granularMaximumGrains=Math.pow(2,i.grainAmounts*o[53]),e.isModActive(t.modulators.dictionary["grain freq"].index,c,v)&&(this.granularMaximumGrains=Math.pow(2,e.getModValue(t.modulators.dictionary["grain freq"].index,c,v,!1)*o[53])),this.granularMaximumGrains==Math.floor(this.granularMaximumGrains)),this.allocateNecessaryBuffers(e,a,i,s),g){this.granularMix=i.granular/t.granularRange,this.computeGrains=!0;let z=this.granularMix;e.isModActive(t.modulators.dictionary.granular.index,c,v)&&(this.granularMix=e.getModValue(t.modulators.dictionary.granular.index,c,v,!1)/t.granularRange,z=e.getModValue(t.modulators.dictionary.granular.index,c,v,!0)/t.granularRange),this.granularMix*=o[52],z*=y[52],this.granularMixDelta=(z-this.granularMix)/r;for(let B=0;B<Math.ceil(Math.random()*Math.random()*10);B++)if(this.granularGrainsLength<this.granularMaximumGrains){let N=i.grainSize;e.isModActive(t.modulators.dictionary["grain size"].index,c,v)&&(N=e.getModValue(t.modulators.dictionary["grain size"].index,c,v,!1)),N*=o[54];let G=i.grainRange;e.isModActive(t.modulators.dictionary["grain range"].index,c,v)&&(G=e.getModValue(t.modulators.dictionary["grain range"].index,c,v,!1)),G*=o[55];let U=N+G,f=(N+(U-N)*Math.random())/1e3,b=Math.floor(f*d),x=this.granularDelayLineL.length,w=this.granularGrainsLength;this.granularGrainsLength++;let P=this.granularGrains[w];P.ageInSamples=0,P.maxAgeInSamples=b;let R=.02,O=2.4;P.delayLinePosition=this.usesRandomGrainLocation?(R+(O-R)*Math.random()*Math.random()*d)%(x-1):R,t.granularEnvelopeType==0?P.initializeParabolicEnvelope(P.maxAgeInSamples,1):t.granularEnvelopeType==1&&P.initializeRCBEnvelope(P.maxAgeInSamples,1),P.addDelay(Math.random()*s*4)}}if(m){let z=i.distortion,B=i.distortion;e.isModActive(t.modulators.dictionary.distortion.index,c,v)&&(z=e.getModValue(t.modulators.dictionary.distortion.index,c,v,!1),B=e.getModValue(t.modulators.dictionary.distortion.index,c,v,!0));let N=Math.min(1,o[43]*z/(t.distortionRange-1)),G=Math.min(1,y[43]*B/(t.distortionRange-1)),U=Math.pow(1-.895*(Math.pow(20,N)-1)/19,2),V=Math.pow(1-.895*(Math.pow(20,G)-1)/19,2),f=(1+2*N)/t.distortionBaseVolume,b=(1+2*G)/t.distortionBaseVolume;this.distortion=U,this.distortionDelta=(V-U)/r,this.distortionDrive=f,this.distortionDriveDelta=(b-f)/r}if(p){let z=i.bitcrusherFreq*Math.sqrt(o[45]),B=i.bitcrusherFreq*Math.sqrt(y[45]);e.isModActive(t.modulators.dictionary["freq crush"].index,c,v)&&(z=e.getModValue(t.modulators.dictionary["freq crush"].index,c,v,!1)*Math.sqrt(o[45]),B=e.getModValue(t.modulators.dictionary["freq crush"].index,c,v,!0)*Math.sqrt(y[45]));let N=i.bitcrusherQuantization*Math.sqrt(o[44]),G=i.bitcrusherQuantization*Math.sqrt(y[44]);e.isModActive(t.modulators.dictionary["bit crush"].index,c,v)&&(N=e.getModValue(t.modulators.dictionary["bit crush"].index,c,v,!1)*Math.sqrt(o[44]),G=e.getModValue(t.modulators.dictionary["bit crush"].index,c,v,!0)*Math.sqrt(y[44]));let U=t.keys[e.song.key].basePitch+t.pitchesPerOctave*e.song.octave,V=ze.frequencyFromPitch(U+60)*Math.pow(2,(t.bitcrusherFreqRange-1-z)*t.bitcrusherOctaveStep),f=ze.frequencyFromPitch(U+60)*Math.pow(2,(t.bitcrusherFreqRange-1-B)*t.bitcrusherOctaveStep),b=Math.min(1,V/d),x=Math.min(1,f/d);this.bitcrusherPhaseDelta=b,this.bitcrusherPhaseDeltaScale=Math.pow(x/b,1/r);let w=2*t.bitcrusherBaseVolume*Math.pow(2,1-Math.pow(2,(t.bitcrusherQuantizationRange-1-N)*.5)),P=2*t.bitcrusherBaseVolume*Math.pow(2,1-Math.pow(2,(t.bitcrusherQuantizationRange-1-G)*.5));this.bitcrusherScale=w,this.bitcrusherScaleScale=Math.pow(P/w,1/r);let R=2*t.bitcrusherBaseVolume*Math.pow(1.5,t.bitcrusherQuantizationRange-1-N),O=2*t.bitcrusherBaseVolume*Math.pow(1.5,t.bitcrusherQuantizationRange-1-G);this.bitcrusherFoldLevel=R,this.bitcrusherFoldLevelScale=Math.pow(O/R,1/r)}if(L){let z=1;if(i.eqFilterType){let G=i.eqFilter;i.eqSubFilters[1]==null&&(i.eqSubFilters[1]=new Ee);let U=i.eqSubFilters[1],V=i.eqFilterSimpleCut,f=i.eqFilterSimplePeak,b=i.eqFilterSimpleCut,x=i.eqFilterSimplePeak,w=!1;e.isModActive(t.modulators.dictionary["eq filt cut"].index,c,v)&&(V=e.getModValue(t.modulators.dictionary["eq filt cut"].index,c,v,!1),b=e.getModValue(t.modulators.dictionary["eq filt cut"].index,c,v,!0),w=!0),e.isModActive(t.modulators.dictionary["eq filt peak"].index,c,v)&&(f=e.getModValue(t.modulators.dictionary["eq filt peak"].index,c,v,!1),x=e.getModValue(t.modulators.dictionary["eq filt peak"].index,c,v,!0),w=!0);let P;if(w){G.convertLegacySettingsForSynth(V,f),U.convertLegacySettingsForSynth(b,x),P=G.controlPoints[0];let R=U.controlPoints[0];P.toCoefficients(ue.tempFilterStartCoefficients,d,1,1),R.toCoefficients(ue.tempFilterEndCoefficients,d,1,1),this.eqFiltersL.length<1&&(this.eqFiltersL[0]=new Re),this.eqFiltersR.length<1&&(this.eqFiltersR[0]=new Re),this.eqFiltersL[0].loadCoefficientsWithGradient(ue.tempFilterStartCoefficients,ue.tempFilterEndCoefficients,1/r,P.type==0),this.eqFiltersR[0].loadCoefficientsWithGradient(ue.tempFilterStartCoefficients,ue.tempFilterEndCoefficients,1/r,P.type==0)}else G.convertLegacySettingsForSynth(V,f,!0),P=G.controlPoints[0],P.toCoefficients(ue.tempFilterStartCoefficients,d,1,1),this.eqFiltersL.length<1&&(this.eqFiltersL[0]=new Re),this.eqFiltersR.length<1&&(this.eqFiltersR[0]=new Re),this.eqFiltersL[0].loadCoefficientsWithGradient(ue.tempFilterStartCoefficients,ue.tempFilterStartCoefficients,1/r,P.type==0),this.eqFiltersR[0].loadCoefficientsWithGradient(ue.tempFilterStartCoefficients,ue.tempFilterStartCoefficients,1/r,P.type==0);this.eqFilterCount=1,z*=P.getVolumeCompensationMult()}else{let G=i.tmpEqFilterStart!=null?i.tmpEqFilterStart:i.eqFilter;for(let U=0;U<G.controlPointCount;U++){let V=G.controlPoints[U],f=i.tmpEqFilterEnd!=null&&i.tmpEqFilterEnd.controlPoints[U]!=null?i.tmpEqFilterEnd.controlPoints[U]:G.controlPoints[U];V.type!=f.type&&(V=f),V.toCoefficients(ue.tempFilterStartCoefficients,d,1,1),f.toCoefficients(ue.tempFilterEndCoefficients,d,1,1),this.eqFiltersL.length<=U&&(this.eqFiltersL[U]=new Re),this.eqFiltersR.length<=U&&(this.eqFiltersR[U]=new Re),this.eqFiltersL[U].loadCoefficientsWithGradient(ue.tempFilterStartCoefficients,ue.tempFilterEndCoefficients,1/r,V.type==0),this.eqFiltersR[U].loadCoefficientsWithGradient(ue.tempFilterStartCoefficients,ue.tempFilterEndCoefficients,1/r,V.type==0),z*=V.getVolumeCompensationMult()}this.eqFilterCount=G.controlPointCount}z=Math.min(3,z);let B=z,N=z;this.eqFilterVolume=B,this.eqFilterVolumeDelta=(N-B)/r}if(F){this.panningMode=i.panMode;let z=o[42]*2-1,B=y[42]*2-1,N=i.pan,G=i.pan;e.isModActive(t.modulators.dictionary.pan.index,c,v)&&(N=e.getModValue(t.modulators.dictionary.pan.index,c,v,!1),G=e.getModValue(t.modulators.dictionary.pan.index,c,v,!0));let U=Math.max(-1,Math.min(1,(N-t.panCenter)/t.panCenter*z)),V=Math.max(-1,Math.min(1,(G-t.panCenter)/t.panCenter*B)),f=Math.cos((1+U)*Math.PI*.25)*1.414,b=Math.cos((1-U)*Math.PI*.25)*1.414,x=Math.cos((1+V)*Math.PI*.25)*1.414,w=Math.cos((1-V)*Math.PI*.25)*1.414,P=d*t.panDelaySecondsMax,R=i.panDelay,O=i.panDelay;e.isModActive(t.modulators.dictionary["pan delay"].index,c,v)&&(R=e.getModValue(t.modulators.dictionary["pan delay"].index,c,v,!1),O=e.getModValue(t.modulators.dictionary["pan delay"].index,c,v,!0));let _=U*R*P/10,te=V*O*P/10,ee=Math.max(0,_),ge=Math.max(0,-_),Ie=Math.max(0,te),Q=Math.max(0,-te);this.panningVolumeL=f,this.panningVolumeR=b,this.panningVolumeDeltaL=(x-f)/r,this.panningVolumeDeltaR=(w-b)/r,this.panningOffsetL=this.panningDelayPos-ee+e.panningDelayBufferSize,this.panningOffsetR=this.panningDelayPos-ge+e.panningDelayBufferSize,this.panningOffsetDeltaL=(Ie-ee)/r,this.panningOffsetDeltaR=(Q-ge)/r}if(I){let z=o[57],B=y[57],N=i.gain,G=i.gain;e.isModActive(t.modulators.dictionary.gain.index,c,v)&&(N=e.getModValue(t.modulators.dictionary.gain.index,c,v,!1),G=e.getModValue(t.modulators.dictionary.gain.index,c,v,!0));let U=Math.min(t.gainRangeMult,z*N/(t.volumeRange/2*t.gainRangeMult))*t.gainRangeMult,V=Math.min(t.gainRangeMult,B*G/(t.volumeRange/2*t.gainRangeMult))*t.gainRangeMult;this.gain=U,this.gainDelta=(V-U)/r}if(S){let z=o[46],B=y[46],N=i.chorus,G=i.chorus;e.isModActive(t.modulators.dictionary.chorus.index,c,v)&&(N=e.getModValue(t.modulators.dictionary.chorus.index,c,v,!1),G=e.getModValue(t.modulators.dictionary.chorus.index,c,v,!0));let U=Math.min(1,z*N/(t.chorusRange-1)),V=Math.min(1,B*G/(t.chorusRange-1));U=U*.6+Math.pow(U,6)*.4,V=V*.6+Math.pow(V,6)*.4;let f=1/Math.sqrt(3*U*U+1),b=1/Math.sqrt(3*V*V+1);this.chorusVoiceMult=U,this.chorusVoiceMultDelta=(V-U)/r,this.chorusCombinedMult=f,this.chorusCombinedMultDelta=(b-f)/r}if(M){let z=o[58],B=y[58],N=i.flanger,G=i.flanger;e.isModActive(t.modulators.dictionary.flanger.index,c,v)&&(N=e.getModValue(t.modulators.dictionary.flanger.index,c,v,!1),G=e.getModValue(t.modulators.dictionary.flanger.index,c,v,!0));let U=Math.min(1,z*N/(t.flangerRange-1)),V=Math.min(1,B*G/(t.flangerRange-1)),f=o[59],b=y[59],x=i.flangerSpeed,w=i.flangerSpeed;e.isModActive(t.modulators.dictionary["flanger speed"].index,c,v)&&(x=e.getModValue(t.modulators.dictionary["flanger speed"].index,c,v,!1),w=e.getModValue(t.modulators.dictionary["flanger speed"].index,c,v,!0));let P=f*x+2,R=b*w+2,O=o[60],_=y[60],te=i.flangerDepth,ee=i.flangerDepth;e.isModActive(t.modulators.dictionary["flanger depth"].index,c,v)&&(te=e.getModValue(t.modulators.dictionary["flanger depth"].index,c,v,!1),ee=e.getModValue(t.modulators.dictionary["flanger depth"].index,c,v,!0));let ge=O*te*2+2,Ie=_*ee*2+2,Q=o[61],H=y[61],Y=i.flangerFeedback,J=i.flangerFeedback;e.isModActive(t.modulators.dictionary["flanger feedback"].index,c,v)&&(Y=e.getModValue(t.modulators.dictionary["flanger feedback"].index,c,v,!1),J=e.getModValue(t.modulators.dictionary["flanger feedback"].index,c,v,!0));let Z=Q*Y*1.5,ie=H*J*1.5;this.flanger=U,this.flangerDelta=(V-U)/r,this.flangerSpeed=P,this.flangerSpeedDelta=(R-P)/r,this.flangerDepth=ge,this.flangerDepthDelta=(Ie-ge)/r,this.flangerFeedback=Math.sqrt(Z)/Math.sqrt(t.flangerFeedbackRange),this.flangerFeedbackDelta=(Math.sqrt(ie)/Math.sqrt(t.flangerFeedbackRange)-Math.sqrt(Z)/Math.sqrt(t.flangerFeedbackRange))/r}if(h){let z=i.ringModulation,B=i.ringModulation,N=o[50],G=y[50],U=Math.min(1,i.ringModulationHz/(t.ringModHzRange-1)),V=Math.min(1,i.ringModulationHz/(t.ringModHzRange-1)),f=o[51],b=y[51];e.isModActive(t.modulators.dictionary["ring modulation"].index,c,v)&&(z=e.getModValue(t.modulators.dictionary["ring modulation"].index,c,v,!1),B=e.getModValue(t.modulators.dictionary["ring modulation"].index,c,v,!0)),e.isModActive(t.modulators.dictionary["ring mod hertz"].index,c,v)&&(U=Math.min(1,Math.max(0,e.getModValue(t.modulators.dictionary["ring mod hertz"].index,c,v,!1)/(t.ringModHzRange-1))),V=Math.min(1,Math.max(0,e.getModValue(t.modulators.dictionary["ring mod hertz"].index,c,v,!1)/(t.ringModHzRange-1)))),U*=f,V*=b;let x=Math.min(1,z*N/(t.ringModRange-1)),w=Math.min(1,B*G/(t.ringModRange-1));this.ringModMix=x,this.ringModMixDelta=(w-x)/r,this.ringModHzOffset=i.ringModHzOffset;let P=Math.max(0,rn(U))/e.samplesPerSecond,R=Math.max(0,rn(V))/e.samplesPerSecond;this.ringModMixFadeDelta=0,this.ringModMixFade<0&&(this.ringModMixFade=0),P<=0&&R<=0&&this.ringModMixFade!=0?this.ringModMixFadeDelta=this.ringModMixFade/-10:P>0&&R>0&&(this.ringModMixFade=1),this.ringModPhaseDelta=P,this.ringModPhaseDeltaScale=P==0?1:Math.pow(R/P,1/r),this.ringModWaveformIndex=i.ringModWaveformIndex,this.ringModPulseWidth=i.ringModPulseWidth}let T=0,k=0;if(C){let z=o[47],B=y[47],N=i.echoSustain,G=i.echoSustain;e.isModActive(t.modulators.dictionary.echo.index,c,v)&&(N=Math.max(0,e.getModValue(t.modulators.dictionary.echo.index,c,v,!1)),G=Math.max(0,e.getModValue(t.modulators.dictionary.echo.index,c,v,!0)));let U=Math.min(1,Math.pow(z*N/t.echoSustainRange,1.1))*.9,V=Math.min(1,Math.pow(B*G/t.echoSustainRange,1.1))*.9;this.echoMult=U,this.echoMultDelta=Math.max(0,(V-U)/r),T=Math.max(U,V);let f=o[56],b=y[56],x=i.echoDelay*f,w=i.echoDelay*b;e.isModActive(t.modulators.dictionary["echo delay"].index,c,v)&&(x=e.getModValue(t.modulators.dictionary["echo delay"].index,c,v,!1)*f,w=e.getModValue(t.modulators.dictionary["echo delay"].index,c,v,!0)*b);let P=Math.round((x+1)*t.echoDelayStepTicks*s),R=Math.round((w+1)*t.echoDelayStepTicks*s);this.echoDelayOffsetEnd!=null?this.echoDelayOffsetStart=this.echoDelayOffsetEnd:this.echoDelayOffsetStart=P,this.echoDelayOffsetEnd=R,k=(this.echoDelayOffsetStart+this.echoDelayOffsetEnd)*.5/d,this.echoDelayOffsetRatio=0,this.echoDelayOffsetRatioDelta=1/r,this.echoPingPong=(i.echoPingPong/t.panMax-.5)*2;let O=2*Math.PI*t.echoShelfHz/e.samplesPerSecond;ue.tempFilterStartCoefficients.highShelf1stOrder(O,t.echoShelfGain),this.echoShelfA1=ue.tempFilterStartCoefficients.a[1],this.echoShelfB0=ue.tempFilterStartCoefficients.b[0],this.echoShelfB1=ue.tempFilterStartCoefficients.b[1]}let A=0;if(W){let z=o[48],B=y[48],N=i.reverb,G=i.reverb;e.isModActive(t.modulators.dictionary.reverb.index,c,v)&&(N=e.getModValue(t.modulators.dictionary.reverb.index,c,v,!1),G=e.getModValue(t.modulators.dictionary.reverb.index,c,v,!0)),e.isModActive(t.modulators.dictionary["song reverb"].index,c,v)&&(N*=(e.getModValue(t.modulators.dictionary["song reverb"].index,void 0,void 0,!1)-t.modulators.dictionary["song reverb"].convertRealFactor)/t.reverbRange,G*=(e.getModValue(t.modulators.dictionary["song reverb"].index,void 0,void 0,!0)-t.modulators.dictionary["song reverb"].convertRealFactor)/t.reverbRange);let U=Math.min(1,Math.pow(z*N/t.reverbRange,.667))*.425,V=Math.min(1,Math.pow(B*G/t.reverbRange,.667))*.425;this.reverbMult=U,this.reverbMultDelta=(V-U)/r,A=Math.max(U,V);let f=2*Math.PI*t.reverbShelfHz/e.samplesPerSecond;ue.tempFilterStartCoefficients.highShelf1stOrder(f,t.reverbShelfGain),this.reverbShelfA1=ue.tempFilterStartCoefficients.a[1],this.reverbShelfB0=ue.tempFilterStartCoefficients.b[0],this.reverbShelfB1=ue.tempFilterStartCoefficients.b[1]}if(!n.tonesAddedInThisTick&&!n.flushingDelayLines){let B=-Math.log2(.00390625);if(S&&(n.delayDuration+=t.chorusMaxDelay),M&&(n.delayDuration+=t.flangerMaxDelay),C){let N=Math.pow(T,1/k),U=-1/Math.log2(N)*B;n.delayDuration+=U}if(W){let N=A*2,G=t.reverbDelayBufferSize/4/d,U=Math.pow(N,1/G),f=-1/Math.log2(U)*B;n.delayDuration+=f}g&&(this.computeGrains=!1)}else S&&(n.totalDelaySamples+=e.chorusDelayBufferSize),M&&(n.totalDelaySamples+=e.flangerDelayBufferSize),C&&(n.totalDelaySamples+=this.echoDelayLineL.length),W&&(n.totalDelaySamples+=t.reverbDelayBufferSize),g&&(n.totalDelaySamples+=this.granularMaximumDelayTimeInSeconds)}};function gn(l,e){for(let a=0;a<l.length;a++)l[a]*=e}function $n(l){return!!l&&!(l&l-1)}function qn(l){if(!$n(l))throw new Error("FFT array length must be a power of 2.");return Math.round(Math.log(l)/Math.log(2))}function Qn(l,e){let a=qn(e);if(a>16)throw new Error("FFT array length must not be greater than 2^16.");let i=16-a;for(let n=0;n<e;n++){let s;if(s=(n&43690)>>1|(n&21845)<<1,s=(s&52428)>>2|(s&13107)<<2,s=(s&61680)>>4|(s&3855)<<4,s=(s>>8|(s&255)<<8)>>i,s>n){let r=l[n];l[n]=l[s],l[s]=r}}}function Jt(l,e){let a=qn(e);if(e<4)throw new Error("FFT array length must be at least 4.");for(let i=a-1;i>=2;i--){let n=1<<i,s=n>>1,r=n<<1,u=Math.PI*2/r,c=Math.cos(u),v=Math.sin(u),o=2*c;for(let y=0;y<e;y+=r){let d=y,g=d+s,h=d+n,m=h+s,p=h+n,I=l[d],F=l[h];l[d]=I+F,l[g]*=2,l[h]=I-F,l[m]*=2;let M=c,S=-v,C=1,W=0;for(let L=1;L<s;L++){let T=d+L,k=h-L,A=h+L,z=p-L,B=l[T],N=l[k],G=l[A],U=l[z],V=B-N,f=G+U;l[T]=B+N,l[k]=U-G,l[A]=V*M-f*S,l[z]=f*M+V*S;let b=o*M-C,x=o*S-W;C=M,W=S,M=b,S=x}}}for(let i=0;i<e;i+=4){let n=i+1,s=i+2,r=i+3,u=l[i],c=l[n]*2,v=l[s],o=l[r]*2,y=u+v,d=u-v;l[i]=y+c,l[n]=y-c,l[s]=d+o,l[r]=d-o}Qn(l,e)}var Kt=class{wave=null;ne=-1;getCustomWave(e,a){if(this.ne==e.hash)return this.wave;this.ne=e.hash;let i=t.spectrumNoiseLength;(this.wave==null||this.wave.length!=i+1)&&(this.wave=new Float32Array(i+1));let n=this.wave;for(let o=0;o<i;o++)n[o]=0;let s=14,r=.25,u=[0,1/7,Math.log2(5/4),3/7,Math.log2(3/2),5/7,6/7];function c(o){return a+Math.floor(o/t.spectrumControlPointsPerOctave)+u[(o+t.spectrumControlPointsPerOctave)%t.spectrumControlPointsPerOctave]}let v=1;for(let o=0;o<t.spectrumControlPoints+1;o++){let y=o<=0?0:e.spectrum[o-1],d=o>=t.spectrumControlPoints?e.spectrum[t.spectrumControlPoints-1]:e.spectrum[o],g=c(o-1),h=c(o);o>=t.spectrumControlPoints&&(h=s+(h-s)*r),!(y==0&&d==0)&&(v+=.02*vt(n,i,g,h,y/t.spectrumMax,d/t.spectrumMax,-.5))}return e.spectrum[t.spectrumControlPoints-1]>0&&(v+=.02*vt(n,i,s+(c(t.spectrumControlPoints)-s)*r,s,e.spectrum[t.spectrumControlPoints-1]/t.spectrumMax,0,-.5)),Jt(n,i),gn(n,5/(Math.sqrt(i)*Math.pow(v,.75))),n[i]=n[0],n}},vn=class{wave=null;ne=-1;fe;getCustomWave(e,a){if(this.ne==e.hash&&this.fe==a)return this.wave;this.ne=e.hash,this.fe=a;let i=a==7?t.harmonicsRenderedForPickedString:t.harmonicsRendered,n=t.harmonicsWavelength,s=Gt(0,null,null);(this.wave==null||this.wave.length!=n+1)&&(this.wave=new Float32Array(n+1));let r=this.wave;for(let o=0;o<n;o++)r[o]=0;let u=-.25,c=1;for(let o=0;o<i;o++){let y=o+1,d=o<t.harmonicsControlPoints?e.harmonics[o]:e.harmonics[t.harmonicsControlPoints-1];o>=t.harmonicsControlPoints&&(d*=1-(o-t.harmonicsControlPoints)/(i-t.harmonicsControlPoints));let g=d/t.harmonicsMax,h=Math.pow(2,d-t.harmonicsMax+1)*Math.sqrt(g);o<t.harmonicsControlPoints&&(c+=h),h*=Math.pow(y,u),h*=s[o+589],r[n-y]=h}Jt(r,n);let v=1/Math.pow(c,.7);for(let o=0;o<r.length;o++)r[o]*=v;return Pn(r),r[n]=r[0],r}},Yt=class{delayLine=null;delayIndex;allPassSample;allPassPrevInput;sustainFilterSample;sustainFilterPrevOutput2;sustainFilterPrevInput1;sustainFilterPrevInput2;fractionalDelaySample;prevDelayLength;delayLengthDelta;delayResetOffset;allPassG=0;allPassGDelta=0;sustainFilterA1=0;sustainFilterA1Delta=0;sustainFilterA2=0;sustainFilterA2Delta=0;sustainFilterB0=0;sustainFilterB0Delta=0;sustainFilterB1=0;sustainFilterB1Delta=0;sustainFilterB2=0;sustainFilterB2Delta=0;constructor(){this.reset()}reset(){this.delayIndex=-1,this.allPassSample=0,this.allPassPrevInput=0,this.sustainFilterSample=0,this.sustainFilterPrevOutput2=0,this.sustainFilterPrevInput1=0,this.sustainFilterPrevInput2=0,this.fractionalDelaySample=0,this.prevDelayLength=-1,this.delayResetOffset=0}update(e,a,i,n,s,r,u,c){let v=2*Math.PI*t.pickedStringDispersionCenterFreq/e.samplesPerSecond,o=this.prevDelayLength,y=i.phaseDeltas[n],d=i.phaseDeltaScales[n],g=y*Math.pow(d,s),h=Math.PI*2*y,m=Math.PI*2*g,p=h*2,I=m*2,F=Math.min(Math.PI,h*t.pickedStringDispersionFreqMult*Math.pow(v/h,t.pickedStringDispersionFreqScale)),M=Math.min(Math.PI,m*t.pickedStringDispersionFreqMult*Math.pow(v/m,t.pickedStringDispersionFreqScale)),S=2*Math.PI*t.pickedStringShelfHz/e.samplesPerSecond,C=(Math.pow(100,r)-1)/99,W=(Math.pow(100,u)-1)/99,L=c==1?.25:0,T=15.6,k=3*e.samplesPerSecond/48e3,A=Math.pow(.5,C*Math.pow(S/(h*T),1+2*L)*T),z=Math.pow(.5,W*Math.pow(S/(m*T),1+2*L)*T),B=Math.pow(A,.002),N=Math.pow(z,.002);ue.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(F),e.tempFrequencyResponse.analyze(ue.tempFilterStartCoefficients,p);let G=ue.tempFilterStartCoefficients.b[0],U=-e.tempFrequencyResponse.angle()/p;ue.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(M),e.tempFrequencyResponse.analyze(ue.tempFilterEndCoefficients,I);let V=ue.tempFilterEndCoefficients.b[0],f=-e.tempFrequencyResponse.angle()/I,b;($=>($[$.bright=0]="bright",$[$.normal=1]="normal",$[$.resonant=2]="resonant"))(b||={});let x=c==0?0:1;if(x==0){let re=Math.pow(A,t.stringDecayRate),le=Math.pow(z,t.stringDecayRate);ue.tempFilterStartCoefficients.highShelf2ndOrder(S,re,.5),ue.tempFilterEndCoefficients.highShelf2ndOrder(S,le,.5)}else{let re=Math.pow(x==1?0:1,.25),le=Math.pow(k*k*h*3.3*48e3/e.samplesPerSecond,.5+L)/k/Math.pow(C,.5),j=Math.pow(k*k*m*3.3*48e3/e.samplesPerSecond,.5+L)/k/Math.pow(W,.5),$=le*Math.pow(2,.5-1.75*(1-Math.pow(1-re,.85))),fe=j*Math.pow(2,.5-1.75*(1-Math.pow(1-re,.85))),ve=Math.pow(2,-Math.pow(2,-Math.pow(re,.9))),be=Math.pow(2,-Math.pow(2,-Math.pow(re,.9)));ue.tempFilterStartCoefficients.lowPass2ndOrderButterworth(pn($),ve),ue.tempFilterEndCoefficients.lowPass2ndOrderButterworth(pn(fe),be)}e.tempFrequencyResponse.analyze(ue.tempFilterStartCoefficients,p);let w=ue.tempFilterStartCoefficients.a[1],P=ue.tempFilterStartCoefficients.a[2],R=ue.tempFilterStartCoefficients.b[0]*B,O=ue.tempFilterStartCoefficients.b[1]*B,_=ue.tempFilterStartCoefficients.b[2]*B,te=-e.tempFrequencyResponse.angle()/p;e.tempFrequencyResponse.analyze(ue.tempFilterEndCoefficients,I);let ee=ue.tempFilterEndCoefficients.a[1],ge=ue.tempFilterEndCoefficients.a[2],Ie=ue.tempFilterEndCoefficients.b[0]*N,Q=ue.tempFilterEndCoefficients.b[1]*N,H=ue.tempFilterEndCoefficients.b[2]*N,Y=-e.tempFrequencyResponse.angle()/I,J=1/y,Z=1/g,ie=Math.ceil(Math.max(J,Z)*2),de=J-U-te,se=Z-f-Y;this.prevDelayLength=de,this.delayLengthDelta=(se-de)/s,this.allPassG=G,this.sustainFilterA1=w,this.sustainFilterA2=P,this.sustainFilterB0=R,this.sustainFilterB1=O,this.sustainFilterB2=_,this.allPassGDelta=(V-G)/s,this.sustainFilterA1Delta=(ee-w)/s,this.sustainFilterA2Delta=(ge-P)/s,this.sustainFilterB0Delta=(Ie-R)/s,this.sustainFilterB1Delta=(Q-O)/s,this.sustainFilterB2Delta=(H-_)/s;let he=Math.abs(Math.log2(de/o))>.01,ae=this.delayIndex==-1||he;if(this.delayLine==null||this.delayLine.length<=ie){let re=Math.ceil(2*e.samplesPerSecond/ze.frequencyFromPitch(12)),le=new Float32Array($e(Math.max(re,ie)));if(!ae&&this.delayLine!=null){let j=this.delayLine.length-1>>0,$=this.delayIndex+this.delayResetOffset;this.delayIndex=this.delayLine.length-this.delayResetOffset;for(let fe=0;fe<this.delayLine.length;fe++)le[fe]=this.delayLine[$+fe&j]}this.delayLine=le}let pe=this.delayLine,oe=pe.length-1>>0;if(ae){this.delayIndex=0,this.allPassSample=0,this.allPassPrevInput=0,this.sustainFilterSample=0,this.sustainFilterPrevOutput2=0,this.sustainFilterPrevInput1=0,this.sustainFilterPrevInput2=0,this.fractionalDelaySample=0;let re=-de,le=Math.floor(re-J/2),j=Math.ceil(le+J*2);this.delayResetOffset=j;for(let Pe=le;Pe<=j;Pe++)pe[Pe&oe]=0;let $=a.waveL,fe=$.length-1,ve=fe/J,be=Math.min(J*.2,e.samplesPerSecond*.003),X=Math.ceil(re),ce=re+J+be,Se=ce,Ce=(X-re)*ve,ke=0;for(let Pe=X;Pe<=Se;Pe++){let we=Ce|0,De=we%fe,xe=$[De],qe=Ce-we;xe+=($[De+1]-xe)*qe;let Le=(xe-ke)/ve,We=Math.min(1,(Pe-re)/be),Ke=Math.min(1,(ce-Pe)/be),Be=We*Ke,Qe=Be*Be*(3-2*Be);pe[Pe&oe]+=Le*Qe,ke=xe,Ce+=ve}}}},Bt=class l{awake=!1;computed=!1;tonesAddedInThisTick=!1;flushingDelayLines=!1;deactivateAfterThisTick=!1;attentuationProgress=0;flushedSamples=0;activeTones=new _e;activeModTones=new _e;releasedTones=new _e;liveInputTones=new _e;type=0;synthesizer=null;waveL=null;waveR=null;isStereo=!1;isUsingAdvancedLoopControls=!1;chipWaveLoopStart=0;chipWaveLoopEnd=0;chipWaveLoopMode=0;chipWavePlayBackwards=!1;chipWaveStartOffset=0;chipWaveInStereo=!1;noisePitchFilterMult=1;unison=null;unisonVoices=1;unisonSpread=0;unisonOffset=0;unisonExpression=1.4;unisonSign=1;chord=null;effects=[];volumeScale=0;aliases=!1;arpTime=0;vibratoTime=0;nextVibratoTime=0;envelopeTime=[];mixVolume=1;mixVolumeDelta=0;delayDuration=0;totalDelaySamples=0;delayInputMult=0;delayInputMultDelta=0;spectrumWave=new Kt;harmonicsWave=new vn;drumsetSpectrumWaves=[];constructor(){for(let e=0;e<t.drumCount;e++)this.drumsetSpectrumWaves[e]=new Kt}envelopeComputer=new rt;allocateNecessaryBuffers(e,a,i){for(let n=0;n<a.effects.length;n++)if(this.effects[n]!=null){let s=a.effects[n];this.effects[n].allocateNecessaryBuffers(e,a,s,i)}}deactivate(){for(let e=0;e<this.effects.length;e++)this.effects[e]!=null&&this.effects[e].deactivate();this.volumeScale=1,this.aliases=!1,this.awake=!1,this.flushingDelayLines=!1,this.deactivateAfterThisTick=!1,this.attentuationProgress=0,this.flushedSamples=0}resetAllEffects(){this.deactivate(),this.vibratoTime=0,this.nextVibratoTime=0,this.arpTime=0;for(let e=0;e<t.maxEnvelopeCount+1;e++)this.envelopeTime[e]=0;this.envelopeComputer.reset();for(let e=0;e<this.effects.length;e++)this.effects[e]!=null&&this.effects[e].reset()}compute(e,a,i,n,s,r,u){this.computed=!0,this.type=a.type,this.synthesizer=ue.getInstrumentSynthFunction(a),this.unison=t.unisons[a.unison],this.chord=a.getChord(),this.noisePitchFilterMult=t.chipNoises[a.chipNoise].pitchFilterMult,this.aliases=a.aliases,this.volumeScale=1,this.delayDuration=0,this.totalDelaySamples=0;for(let S=0;S<a.effects.length;S++)this.effects[S]==null&&(this.effects[S]=new Qt(a.effects[S].type));this.effects.length=a.effects.length,this.allocateNecessaryBuffers(e,a,i);let c=e.samplesPerSecond;this.updateWaves(a,c);let o=e.getTicksIntoBar(),y=i/e.samplesPerSecond,d=e.getCurrentPart(),g=[];for(let S=0;S<t.maxEnvelopeCount;S++)g[S]=0;let h=t.arpSpeedScale[a.envelopeSpeed];e.isModActive(t.modulators.dictionary["envelope speed"].index,r,u)&&(h=Math.max(0,Math.min(t.arpSpeedScale.length-1,e.getModValue(t.modulators.dictionary["envelope speed"].index,r,u,!1))),Number.isInteger(h)?h=t.arpSpeedScale[h]:h=(1-h%1)*t.arpSpeedScale[Math.floor(h)]+h%1*t.arpSpeedScale[Math.ceil(h)]);for(let S=0;S<a.envelopeCount;S++){let C=a.envelopes[S].perEnvelopeSpeed;e.isModActive(t.modulators.dictionary["individual envelope speed"].index,r,u)&&a.envelopes[S].tempEnvelopeSpeed!=null&&(C=a.envelopes[S].tempEnvelopeSpeed),g[S]=h*C}this.envelopeComputer.computeEnvelopes(a,d,this.envelopeTime,o,y,s,g,this,e,r,u);let m=this.envelopeComputer.envelopeStarts,p=this.envelopeComputer.envelopeEnds;for(let S=0;S<a.effects.length;S++)if(this.effects[S]!=null){let C=a.effects[S];this.effects[S].compute(e,a,C,this,i,n,s,r,u,m,p)}this.mixVolume=m[1]*ue.instrumentVolumeToVolumeMult(a.volume);let I=p[1]*ue.instrumentVolumeToVolumeMult(a.volume);if(e.isModActive(t.modulators.dictionary["post volume"].index,r,u)){let S=e.getModValue(t.modulators.dictionary["post volume"].index,r,u,!1),C=e.getModValue(t.modulators.dictionary["post volume"].index,r,u,!0);this.mixVolume*=S<=0?(S+t.volumeRange/2)/(t.volumeRange/2):ue.instrumentVolumeToVolumeMult(S),I*=C<=0?(C+t.volumeRange/2)/(t.volumeRange/2):ue.instrumentVolumeToVolumeMult(C)}e.isModActive(t.modulators.dictionary["song volume"].index)&&(this.mixVolume*=e.getModValue(t.modulators.dictionary["song volume"].index,void 0,void 0,!1)/100,I*=e.getModValue(t.modulators.dictionary["song volume"].index,void 0,void 0,!0)/100),this.mixVolumeDelta=(I-this.mixVolume)/n;let F=1,M=1;if(this.tonesAddedInThisTick)this.attentuationProgress=0,this.flushedSamples=0,this.flushingDelayLines=!1;else if(this.flushingDelayLines)F=0,M=0,this.flushedSamples+=n,this.flushedSamples>=this.totalDelaySamples&&(this.deactivateAfterThisTick=!0);else{this.attentuationProgress==0;let C=i/c/this.delayDuration,W=this.attentuationProgress+C;W>=1&&(M=0),this.attentuationProgress=W,this.attentuationProgress>=1&&(this.flushingDelayLines=!0)}this.delayInputMult=F,this.delayInputMultDelta=(M-F)/n,this.envelopeComputer.clearEnvelopes()}updateWaves(e,a){if(this.volumeScale=1,e.type==0)this.waveL=this.aliases?t.rawChipWaves[e.chipWave].samples:t.chipWaves[e.chipWave].samples,this.waveR=this.aliases?t.rawChipWaves[e.chipWave].samplesR||t.rawChipWaves[e.chipWave].samples:t.chipWaves[e.chipWave].samplesR||t.chipWaves[e.chipWave].samples,this.isUsingAdvancedLoopControls=e.isUsingAdvancedLoopControls,this.chipWaveLoopStart=e.chipWaveLoopStart,this.chipWaveLoopEnd=e.chipWaveLoopEnd,this.chipWaveLoopMode=e.chipWaveLoopMode,this.chipWavePlayBackwards=e.chipWavePlayBackwards,this.chipWaveStartOffset=e.chipWaveStartOffset,this.chipWaveInStereo=e.chipWaveInStereo,this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==6)this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==9)this.waveL=this.aliases?e.customChipWave:e.customChipWaveIntegral,this.waveR=this.aliases?e.customChipWave:e.customChipWaveIntegral,this.volumeScale=.05,this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==2)this.waveL=Gt(e.chipNoise,Jt,gn),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==5)this.waveL=this.harmonicsWave.getCustomWave(e.harmonicsWave,e.type),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==7)this.waveL=this.harmonicsWave.getCustomWave(e.harmonicsWave,e.type),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==3)this.waveL=this.spectrumWave.getCustomWave(e.spectrumWave,8),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==4){for(let i=0;i<t.drumCount;i++)this.drumsetSpectrumWaves[i].getCustomWave(e.drumsetSpectrumWaves[i],l.he(i));this.waveL=null,this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign}else this.waveL=null}getDrumsetWave(e){if(this.type==4)return this.drumsetSpectrumWaves[e].wave;throw new Error("Unhandled instrument type in getDrumsetWave")}static drumsetIndexReferenceDelta(e){return ze.frequencyFromPitch(t.spectrumBasePitch+e*6)/44100}static he(e){return 15+Math.log2(l.drumsetIndexReferenceDelta(e))}effectsIncludeType(e){for(let a=0;a<this.effects.length;a++)if(this.effects[a]!=null&&this.effects[a].type==e)return!0;return!1}};var da=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);var Fe=class l{static version="v1";static versionDisplayName="DragonBox";static releaseNotesURL="./patch_notes.html";static isOnMac=/^Mac/i.test(navigator.platform)||/Mac OS X/i.test(navigator.userAgent)||/^(iPhone|iPad|iPod)/i.test(navigator.platform)||/(iPhone|iPad|iPod)/i.test(navigator.userAgent);static ctrlSymbol=l.isOnMac?"\u2318":"Ctrl+";static ctrlName=l.isOnMac?"command":"control";static customSamples;static presetCategories=me([{name:"Custom Instruments",presets:me([{name:Ue[0],customType:0},{name:Ue[1],customType:1},{name:Ue[2],customType:2},{name:Ue[3],customType:3},{name:Ue[4],customType:4},{name:Ue[5],customType:5},{name:Ue[6],customType:6},{name:Ue[7],customType:7},{name:Ue[8],customType:8},{name:Ue[9],customType:9},{name:Ue[11],customType:11}])},{name:"Retro Presets",presets:me([{name:"square wave",midiProgram:80,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"square",unison:"none",envelopes:[]}},{name:"triangle wave",midiProgram:71,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"triangle",unison:"none",envelopes:[]}},{name:"square lead",midiProgram:80,generalMidi:!0,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",wave:"square",unison:"hum",envelopes:[]}},{name:"sawtooth lead 1",midiProgram:81,generalMidi:!0,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",wave:"sawtooth",unison:"shimmer",envelopes:[]}},{name:"sawtooth lead 2",midiProgram:81,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1}],effects:["vibrato","aliasing"],vibrato:"light",transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"hum",envelopes:[]}},{name:"chip noise",midiProgram:116,isNoise:!0,settings:{type:"noise",transition:"hard",effects:["aliasing"],chord:"arpeggio",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"steady",wave:"retro"}},{name:"supersaw lead",midiProgram:81,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:2}],effects:["reverb"],reverb:67,fadeInSeconds:0,fadeOutTicks:-6,pulseWidth:50,dynamism:100,spread:58,shape:0,envelopes:[]}},{name:"FM twang",midiProgram:32,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:0},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1}]}},{name:"FM bass",midiProgram:36,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"custom interval",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"2\xD7",amplitude:11},{frequency:"1\xD7",amplitude:7},{frequency:"1\xD7",amplitude:9},{frequency:"20\xD7",amplitude:3}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 2",index:3}]}},{name:"FM flute",midiProgram:73,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:6},{frequency:"1\xD7",amplitude:0},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1}]}},{name:"FM organ",midiProgram:16,settings:{type:"FM",eqFilter:[],effects:["vibrato"],vibrato:"delayed",transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"custom interval",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:14},{frequency:"2\xD7",amplitude:14},{frequency:"1\xD7",amplitude:11},{frequency:"2\xD7",amplitude:11}],envelopes:[]}},{name:"FM sine",midiProgram:55,settings:{type:"FM",eqFilter:[],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,effects:[],panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine"},{frequency:"1\xD7",amplitude:0,waveform:"sine"},{frequency:"1\xD7",amplitude:0,waveform:"sine"},{frequency:"1\xD7",amplitude:0,waveform:"sine"}],envelopes:[]}},{name:"NES Pulse",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",vibrato:"none",envelopes:[],customChipWave:[-24,-24,-24,-24,-23,-23,-23,-23,-22,-22,-22,-22,-21,-21,-21,-21,-20,-20,-20,-20,-19,-19,-19,-19,-18,-18,-18,-18,-17,-17,-17,-17,24,24,24,24,23,23,23,23,22,22,22,22,21,21,21,21,20,20,20,20,19,19,19,19,18,18,18,18,17,17,17,17]}},{name:"Gameboy Pulse",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-20,-17,-15,-13,-13,-11,-11,-11,-9,-9,-9,-9,-7,-7,-7,-7,-7,-5,-5,-5,-5,-5,-5,-3,-3,-3,-3,-3,-3,-3,-3,24,20,17,15,13,13,11,11,11,9,9,9,9,7,7,7,7,7,5,5,5,5,5,5,3,3,3,3,3,3,3,3]}},{name:"VRC6 Sawtooth",midiProgram:81,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-20,-16,-13,-10,-8,-6,-5,-4,-4,0,0,0,0,4,4,4,4,4,4,8,8,8,8,8,8,8,8,12,12,12,12,12,12,12,12,16,16,16,16,16,16,16,16,20,20,20,20,20,20,20,20,24,24,24,24,24,24,24,24,24,24,24,24]}},{name:"Atari Square",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-24,-24,-23,-23,-23,-22,-22,-22,-21,-21,-21,-20,-20,-20,-19,-19,-19,-18,-18,-18,-17,-17,-17,-16,-16,-16,-15,-15,-15,-14,-14,-14,-13,-13,-13,24,24,24,23,23,23,22,22,22,21,21,21,20,20,20,19,19,19,18,18,18,17,17,17,16,16,15,15]}},{name:"Atari Bass",midiProgram:36,settings:{type:"custom chip",effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,-24,-24,-24,24,24,24,-24,-24,-24,24,24,24,-24,-24,-24,24,24,-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,-24,-24,24,24,24,24,24,-24,-24,-24,-24,24,24,-24,-24,24,24]}},{name:"Sunsoft Bass",midiProgram:36,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[24,24,15,15,9,9,-4,-4,0,0,-13,-13,-19,-19,-24,-24,-24,-24,-10,-10,0,0,-7,-7,-7,-7,0,0,6,6,-4,-4,3,3,-4,-4,3,3,3,3,9,9,15,15,15,15,6,6,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,3,3,12,12,24,24]}}])},{name:"Keyboard Presets",presets:me([{name:"grand piano 1",midiProgram:0,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:2e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.125}],reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,100,86,86,86,71,71,71,0,86,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],unison:"piano",stringSustain:79,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}},{name:"bright piano",midiProgram:1,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.7071},{type:"high-pass",cutoffHz:148.65,linearGain:.5},{type:"peak",cutoffHz:3363.59,linearGain:1.4142}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",harmonics:[100,100,86,86,71,71,0,71,71,71,71,71,71,14,57,57,57,57,57,57,29,57,57,57,57,57,57,57],unison:"piano",stringSustain:86,envelopes:[]}},{name:"electric grand",midiProgram:2,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"1/8 pulse",unison:"shimmer",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"honky-tonk piano",midiProgram:3,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,100,86,71,86,71,43,71,43,43,57,57,57,29,57,57,57,57,57,57,43,57,57,57,43,43,43,43],unison:"honky tonk",stringSustain:71,envelopes:[]}},{name:"electric piano 1",midiProgram:4,generalMidi:!0,settings:{type:"harmonics",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:.5}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",harmonics:[86,100,100,71,71,57,57,43,43,43,29,29,29,14,14,14,0,0,0,0,0,57,0,0,0,0,0,0],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"electric piano 2",midiProgram:5,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:12},{frequency:"1\xD7",amplitude:6},{frequency:"1\xD7",amplitude:9},{frequency:"16\xD7",amplitude:6}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:3}]}},{name:"harpsichord",midiProgram:6,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:250,linearGain:.3536},{type:"peak",cutoffHz:11313.71,linearGain:2.8284}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",harmonics:[100,100,100,86,57,86,86,86,86,57,57,71,71,86,86,71,71,86,86,71,71,71,71,71,71,71,71,71],unison:"none",stringSustain:79,envelopes:[]}},{name:"clavinet",midiProgram:7,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.3536}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"3\u27F2",feedbackAmplitude:6,operators:[{frequency:"3\xD7",amplitude:15},{frequency:"~1\xD7",amplitude:6},{frequency:"8\xD7",amplitude:4},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"feedbackAmplitude",envelope:"twang 2"}]}},{name:"dulcimer",midiProgram:15,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,100,100,86,100,86,57,100,100,86,100,86,100,86,100,71,57,71,71,100,86,71,86,86,100,86,86,86],unison:"piano",stringSustain:79,envelopes:[]}},{name:"grand piano 2",midiProgram:0,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:2e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.125}],reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,86,86,86,86,71,71,57,0,57,29,43,57,57,57,43,43,0,29,43,43,43,43,43,43,29,0,29],unison:"piano",stringSustain:79,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}},{name:"grand piano 3",midiProgram:0,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:1681.79,linearGain:4},{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"peak",cutoffHz:3363.59,linearGain:4},{type:"peak",cutoffHz:2378.41,linearGain:.25}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:125,linearGain:.0884}],reverb:67,fadeInSeconds:0,fadeOutTicks:48,harmonics:[100,100,86,86,86,71,71,71,0,71,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],unison:"piano",stringSustain:86,stringSustainType:"acoustic",envelopes:[{target:"noteFilterFreq",envelope:"note size",index:0},{target:"noteFilterFreq",envelope:"twang 1",index:1},{target:"noteFilterFreq",envelope:"twang 1",index:1}]}}])},{name:"Idiophone Presets",presets:me([{name:"celesta",midiProgram:8,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~1\xD7",amplitude:11,envelope:"custom"},{frequency:"8\xD7",amplitude:6,envelope:"custom"},{frequency:"20\xD7",amplitude:3,envelope:"twang 1"},{frequency:"3\xD7",amplitude:1,envelope:"twang 2"}]}},{name:"glockenspiel",midiProgram:9,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:193,effects:["panning","chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:2,operators:[{frequency:"1\xD7",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"5\xD7",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"8\xD7",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"20\xD7",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"feedbackAmplitude",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"music box 1",midiProgram:10,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,0,0,100,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,71,0],unison:"none",stringSustain:64,envelopes:[]}},{name:"music box 2",midiProgram:10,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:.7071}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,57,57,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0],unison:"none",stringSustain:29,envelopes:[]}},{name:"vibraphone",midiProgram:11,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u21922\u21923\u21924",feedbackAmplitude:3,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:9,envelope:"custom"},{frequency:"~1\xD7",amplitude:9,envelope:"custom"},{frequency:"9\xD7",amplitude:3,envelope:"custom"},{frequency:"4\xD7",amplitude:9,envelope:"custom"}]}},{name:"marimba",midiProgram:12,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:197,effects:["panning","chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:6,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1\u20032\u2190(3\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"4\xD7",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"13\xD7",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2}],isDrum:!1}},{name:"kalimba",midiProgram:108,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:198,effects:["panning","chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:7,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:.5}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"5\xD7",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"20\xD7",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2}],isDrum:!1}},{name:"xylophone",midiProgram:13,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1\xD7",amplitude:9,envelope:"custom"},{frequency:"6\xD7",amplitude:9,envelope:"custom"},{frequency:"11\xD7",amplitude:9,envelope:"custom"},{frequency:"20\xD7",amplitude:6,envelope:"twang 1"}]}},{name:"tubular bell",midiProgram:14,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:96,chord:"strum",harmonics:[43,71,0,100,0,100,0,86,0,0,86,0,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,14],unison:"shimmer",stringSustain:86,envelopes:[]}},{name:"bell synth",midiProgram:14,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~2\xD7",amplitude:10,envelope:"custom"},{frequency:"7\xD7",amplitude:6,envelope:"twang 3"},{frequency:"20\xD7",amplitude:1,envelope:"twang 1"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"rain drop",midiProgram:96,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1\xD7",amplitude:12,envelope:"custom"},{frequency:"6\xD7",amplitude:4,envelope:"custom"},{frequency:"20\xD7",amplitude:3,envelope:"twang 1"},{frequency:"1\xD7",amplitude:6,envelope:"tremolo1"}]}},{name:"crystal",midiProgram:98,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"delayed",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:4,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:10,envelope:"custom"},{frequency:"3\xD7",amplitude:7,envelope:"custom"},{frequency:"6\xD7",amplitude:4,envelope:"custom"},{frequency:"13\xD7",amplitude:4,envelope:"custom"}]}},{name:"tinkle bell",midiProgram:112,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u21922\u21923\u21924",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"~2\xD7",amplitude:7,envelope:"custom"},{frequency:"5\xD7",amplitude:7,envelope:"custom"},{frequency:"7\xD7",amplitude:7,envelope:"custom"},{frequency:"16\xD7",amplitude:7,envelope:"custom"}]}},{name:"agogo",midiProgram:113,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:205,effects:["panning","chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:8,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u21924",feedbackAmplitude:15,operators:[{frequency:"2\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"5\xD7",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"8\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"13\xD7",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"feedbackAmplitude",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}}])},{name:"Guitar Presets",presets:me([{name:"nylon guitar",midiProgram:24,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u21902\u21903\u21904",feedbackType:"3\u27F2",feedbackAmplitude:6,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:6,envelope:"steady"},{frequency:"5\xD7",amplitude:2,envelope:"steady"},{frequency:"7\xD7",amplitude:4,envelope:"steady"}]}},{name:"steel guitar",midiProgram:25,generalMidi:!0,settings:{type:"Picked String",eqFilter:[],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,100,86,71,71,71,86,86,71,57,43,43,43,57,57,57,57,57,43,43,43,43,43,43,43,43,43,43],unison:"none",stringSustain:71,envelopes:[]}},{name:"jazz guitar",midiProgram:26,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,57,71,71,43,57,71,57,43,29,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},{name:"clean guitar",midiProgram:27,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[86,100,100,100,86,57,86,100,100,100,71,57,43,71,86,71,57,57,71,71,71,71,57,57,57,57,57,43]}},{name:"muted guitar",midiProgram:28,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:7,feedbackEnvelope:"twang 2",operators:[{frequency:"1\xD7",amplitude:13,envelope:"custom"},{frequency:"1\xD7",amplitude:4,envelope:"twang 3"},{frequency:"4\xD7",amplitude:4,envelope:"twang 2"},{frequency:"16\xD7",amplitude:4,envelope:"twang 1"}]}}])},{name:"Picked Bass Presets",presets:me([{name:"acoustic bass",midiProgram:32,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,86,71,71,71,71,57,57,57,57,43,43,43,43,43,29,29,29,29,29,29,14,14,14,14,14,14,14]}},{name:"fingered bass",midiProgram:33,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,86,71,57,71,43,57,29,29,29,29,29,29,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0]}},{name:"picked bass",midiProgram:34,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"3\u27F2",feedbackAmplitude:4,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:5,envelope:"steady"},{frequency:"11\xD7",amplitude:1,envelope:"twang 3"},{frequency:"1\xD7",amplitude:9,envelope:"steady"}]}},{name:"fretless bass",midiProgram:35,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:1e3,filterResonance:14,filterEnvelope:"flare 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,71,57,57,71,71,71,57,57,57,57,57,57,57,43,43,43,43,43,43,43,43,29,29,14]}},{name:"slap bass 1",midiProgram:36,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,100,100,100,86,71,57,29,29,43,43,57,71,57,29,29,43,57,57,57,43,43,43,57,71,71,71,71]}},{name:"slap bass 2",midiProgram:37,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u21902\u21903\u21904",feedbackType:"3\u27F2",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"3\xD7",amplitude:13,envelope:"custom"},{frequency:"1\xD7",amplitude:7,envelope:"steady"},{frequency:"13\xD7",amplitude:3,envelope:"steady"},{frequency:"1\xD7",amplitude:11,envelope:"steady"}]}},{name:"bass synth 1",midiProgram:38,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"3\u27F2\u20034\u27F2",feedbackAmplitude:9,feedbackEnvelope:"twang 2",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"custom"},{frequency:"1\xD7",amplitude:14,envelope:"twang 1"},{frequency:"~1\xD7",amplitude:13,envelope:"twang 2"}]}},{name:"bass synth 2",midiProgram:39,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:1e3,filterResonance:57,filterEnvelope:"punch",vibrato:"none",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u21922",feedbackAmplitude:4,feedbackEnvelope:"twang 3",operators:[{frequency:"1\xD7",amplitude:9,envelope:"custom"},{frequency:"1\xD7",amplitude:9,envelope:"steady"},{frequency:"3\xD7",amplitude:0,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"bass & lead",midiProgram:87,generalMidi:!0,settings:{type:"chip",transition:"hard",effects:"reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:86,filterEnvelope:"twang 2",wave:"sawtooth",interval:"shimmer",vibrato:"none"}},{name:"dubstep yoi yoi",midiProgram:87,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],effects:["note filter","bitcrusher"],noteFilter:[{type:"low-pass",cutoffHz:594.6,linearGain:11.3137}],bitcrusherOctave:1.5,bitcrusherQuantization:0,transition:"slide",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"arpeggio",wave:"sawtooth",unison:"none",envelopes:[{target:"noteFilterFreq",envelope:"flare 2",index:0}]}}])},{name:"Picked String Presets",presets:me([{name:"pizzicato strings",midiProgram:45,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:1e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:7,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"3\xD7",amplitude:11,envelope:"custom"},{frequency:"6\xD7",amplitude:9,envelope:"custom"},{frequency:"~1\xD7",amplitude:10,envelope:"steady"}]}},{name:"harp",midiProgram:46,generalMidi:!0,settings:{type:"FM",transition:"hard fade",effects:"reverb",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"3\u27F2",feedbackAmplitude:6,feedbackEnvelope:"twang 2",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"4\xD7",amplitude:6,envelope:"custom"},{frequency:"~2\xD7",amplitude:3,envelope:"steady"},{frequency:"1\xD7",amplitude:6,envelope:"steady"}]}},{name:"sitar",midiProgram:104,generalMidi:!0,settings:{type:"FM",transition:"hard fade",effects:"reverb",chord:"strum",filterCutoffHz:8e3,filterResonance:57,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:14,envelope:"twang 3"},{frequency:"9\xD7",amplitude:3,envelope:"twang 3"},{frequency:"16\xD7",amplitude:9,envelope:"swell 3"}]}},{name:"banjo",midiProgram:105,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"2\u27F2",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"4\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"steady"},{frequency:"11\xD7",amplitude:3,envelope:"twang 3"},{frequency:"1\xD7",amplitude:11,envelope:"steady"}]}},{name:"ukulele",midiProgram:105,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"3\u27F2",feedbackAmplitude:5,feedbackEnvelope:"twang 1",operators:[{frequency:"2\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:6,envelope:"steady"},{frequency:"9\xD7",amplitude:4,envelope:"twang 2"},{frequency:"1\xD7",amplitude:11,envelope:"steady"}]}},{name:"shamisen",midiProgram:106,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"3\u27F2",feedbackAmplitude:9,feedbackEnvelope:"twang 3",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:12,envelope:"steady"},{frequency:"16\xD7",amplitude:4,envelope:"twang 3"},{frequency:"1\xD7",amplitude:7,envelope:"steady"}]}},{name:"koto",midiProgram:107,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:5,feedbackEnvelope:"twang 2",operators:[{frequency:"~1\xD7",amplitude:12,envelope:"custom"},{frequency:"6\xD7",amplitude:10,envelope:"custom"},{frequency:"4\xD7",amplitude:8,envelope:"twang 3"},{frequency:"~2\xD7",amplitude:8,envelope:"twang 3"}]}}])},{name:"Distortion Presets",presets:me([{name:"overdrive guitar",midiProgram:29,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"peak",cutoffHz:840.9,linearGain:.5}],effects:["note filter","distortion"],noteFilter:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],distortion:71,transition:"normal",fadeInSeconds:0,fadeOutTicks:12,chord:"strum",harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"distortion guitar",midiProgram:30,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"peak",cutoffHz:1e3,linearGain:.25}],effects:["note filter","distortion","reverb"],noteFilter:[{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"low-pass",cutoffHz:2e3,linearGain:1}],distortion:86,reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:12,chord:"strum",harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"charango synth",midiProgram:84,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:1}],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u21922\u21923\u21924",feedbackAmplitude:8,operators:[{frequency:"3\xD7",amplitude:13},{frequency:"~1\xD7",amplitude:5},{frequency:"4\xD7",amplitude:6},{frequency:"3\xD7",amplitude:7}],envelopes:[{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"guitar harmonics",midiProgram:31,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:2}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1\u2190(2\u20023)\u21904",feedbackType:"1\u27F2",feedbackAmplitude:2,operators:[{frequency:"4\xD7",amplitude:12},{frequency:"16\xD7",amplitude:5},{frequency:"1\xD7",amplitude:2},{frequency:"~1\xD7",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:1},{target:"operatorAmplitude",envelope:"punch",index:2},{target:"operatorAmplitude",envelope:"twang 1",index:3}]}},{name:"PWM overdrive",midiProgram:29,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",pulseWidth:17.67767,envelopes:[{target:"pulseWidth",envelope:"punch"}]}},{name:"PWM distortion",midiProgram:30,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:2}],effects:["vibrato"],vibrato:"delayed",transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",pulseWidth:50,envelopes:[{target:"pulseWidth",envelope:"swell 1"}]}},{name:"FM overdrive",midiProgram:29,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u21922",feedbackAmplitude:2,operators:[{frequency:"~1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:12},{frequency:"~2\xD7",amplitude:6},{frequency:"1\xD7",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"twang 1",index:2},{target:"operatorAmplitude",envelope:"swell 3",index:3},{target:"feedbackAmplitude",envelope:"punch"}]}},{name:"FM distortion",midiProgram:30,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:2}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u21922",feedbackAmplitude:4,operators:[{frequency:"~1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:11},{frequency:"1\xD7",amplitude:9},{frequency:"~2\xD7",amplitude:4}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:2},{target:"operatorAmplitude",envelope:"swell 3",index:3}]}}])},{name:"Bellows Presets",presets:me([{name:"drawbar organ 1",midiProgram:16,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[86,86,0,86,0,0,0,86,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"drawbar organ 2",midiProgram:16,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[86,29,71,86,71,14,0,100,0,0,0,86,0,0,0,71,0,0,0,57,0,0,0,29,0,0,0,0]}},{name:"percussive organ",midiProgram:17,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:515,effects:["panning","vibrato","note filter","chorus","reverb"],vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!0,noteSimpleCut:8,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.5}],pan:0,panDelay:10,chorus:100,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:2,operators:[{frequency:"1\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"4\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"6\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"punch",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"feedbackAmplitude",envelope:"flare",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"rock organ",midiProgram:18,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"hard",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"punch",vibrato:"delayed",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:2,feedbackEnvelope:"flare 1",operators:[{frequency:"1\xD7",amplitude:9,envelope:"custom"},{frequency:"4\xD7",amplitude:9,envelope:"custom"},{frequency:"6\xD7",amplitude:9,envelope:"custom"},{frequency:"2\xD7",amplitude:5,envelope:"steady"}]}},{name:"pipe organ",midiProgram:19,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",transition:"cross fade",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:5,feedbackEnvelope:"steady",operators:[{frequency:"1\xD7",amplitude:8,envelope:"custom"},{frequency:"2\xD7",amplitude:9,envelope:"custom"},{frequency:"4\xD7",amplitude:9,envelope:"custom"},{frequency:"8\xD7",amplitude:8,envelope:"custom"}]}},{name:"reed organ",midiProgram:20,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[71,86,100,86,71,100,57,71,71,71,43,43,43,71,43,71,57,57,57,57,57,57,57,29,43,29,29,14]}},{name:"accordion",midiProgram:21,generalMidi:!0,settings:{type:"chip",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"swell 1",wave:"double saw",interval:"honky tonk",vibrato:"none"}},{name:"bandoneon",midiProgram:23,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",interval:"hum",vibrato:"none",harmonics:[86,86,86,57,71,86,57,71,71,71,57,43,57,43,71,43,71,57,57,43,43,43,57,43,43,29,29,29]}},{name:"bagpipe",midiProgram:109,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"punch",interval:"hum",vibrato:"none",harmonics:[71,86,86,100,100,86,57,100,86,71,71,71,57,57,57,71,57,71,57,71,43,57,57,43,43,43,43,43]}}])},{name:"String Presets",presets:me([{name:"violin 1",midiProgram:40,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["vibrato","reverb"],vibrato:"delayed",reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:6,chord:"simultaneous",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"1\u21922",feedbackAmplitude:5,operators:[{frequency:"4\xD7",amplitude:9},{frequency:"3\xD7",amplitude:9},{frequency:"2\xD7",amplitude:7},{frequency:"7\xD7",amplitude:5}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:3},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"viola",midiProgram:41,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:8,feedbackEnvelope:"swell 1",operators:[{frequency:"2\xD7",amplitude:11,envelope:"custom"},{frequency:"7\xD7",amplitude:7,envelope:"custom"},{frequency:"13\xD7",amplitude:4,envelope:"custom"},{frequency:"1\xD7",amplitude:5,envelope:"steady"}]}},{name:"cello",midiProgram:42,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.1768},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"peak",cutoffHz:4756.83,linearGain:5.6569}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.0884}],reverb:67,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:12,chord:"simultaneous",algorithm:"(1\u20022)\u21903\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:3,operators:[{frequency:"16\xD7",amplitude:5},{frequency:"~1\xD7",amplitude:10},{frequency:"1\xD7",amplitude:9},{frequency:"6\xD7",amplitude:3}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"operatorAmplitude",envelope:"swell 1",index:3}]}},{name:"contrabass",midiProgram:43,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1\u20022)\u21903\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"16\xD7",amplitude:5,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"steady"},{frequency:"6\xD7",amplitude:3,envelope:"swell 1"}]}},{name:"fiddle",midiProgram:110,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"3\u27F2\u20034\u27F2",feedbackAmplitude:5,feedbackEnvelope:"twang 1",operators:[{frequency:"2\xD7",amplitude:10,envelope:"custom"},{frequency:"8\xD7",amplitude:8,envelope:"custom"},{frequency:"1\xD7",amplitude:8,envelope:"steady"},{frequency:"16\xD7",amplitude:3,envelope:"steady"}]}},{name:"tremolo strings",midiProgram:44,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,effects:["panning","note filter","chorus","reverb"],noteFilterType:!0,noteSimpleCut:6,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.1768}],pan:0,panDelay:10,chorus:100,reverb:0,fadeInSeconds:.0125,fadeOutTicks:72,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u21922\u21923\u21924",feedbackAmplitude:12,operators:[{frequency:"1\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"4\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"7\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:4,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"strings",midiProgram:48,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"4\u27F2",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4\xD7",amplitude:9,envelope:"custom"},{frequency:"3\xD7",amplitude:9,envelope:"custom"},{frequency:"2\xD7",amplitude:7,envelope:"steady"},{frequency:"7\xD7",amplitude:3,envelope:"swell 1"}]}},{name:"slow strings",midiProgram:49,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:1414,filterResonance:0,filterEnvelope:"swell 2",vibrato:"none",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"4\u27F2",feedbackAmplitude:6,feedbackEnvelope:"flare 3",operators:[{frequency:"4\xD7",amplitude:10,envelope:"custom"},{frequency:"3\xD7",amplitude:10,envelope:"custom"},{frequency:"2\xD7",amplitude:7,envelope:"steady"},{frequency:"7\xD7",amplitude:4,envelope:"swell 1"}]}},{name:"strings synth 1",midiProgram:50,generalMidi:!0,settings:{type:"chip",transition:"soft fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:1414,filterResonance:43,filterEnvelope:"steady",wave:"sawtooth",interval:"hum",vibrato:"delayed"}},{name:"strings synth 2",midiProgram:51,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:12,feedbackEnvelope:"swell 1",operators:[{frequency:"3\xD7",amplitude:6,envelope:"custom"},{frequency:"2\xD7",amplitude:7,envelope:"custom"},{frequency:"1\xD7",amplitude:8,envelope:"custom"},{frequency:"1\xD7",amplitude:9,envelope:"custom"}]}},{name:"orchestra hit 1",midiProgram:55,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"custom",vibrato:"none",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:14,feedbackEnvelope:"twang 3",operators:[{frequency:"1\xD7",amplitude:15,envelope:"twang 3"},{frequency:"2\xD7",amplitude:15,envelope:"flare 3"},{frequency:"4\xD7",amplitude:15,envelope:"flare 2"},{frequency:"8\xD7",amplitude:15,envelope:"flare 1"}]}},{name:"violin 2",midiProgram:40,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:2828,linearGain:1.4142},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["vibrato","reverb"],vibrato:"light",reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:6,chord:"simultaneous",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"4\u27F2",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4\xD7",amplitude:15,envelope:"custom"},{frequency:"3\xD7",amplitude:13,envelope:"custom"},{frequency:"2\xD7",amplitude:7,envelope:"steady"},{frequency:"7\xD7",amplitude:8,envelope:"swell 1"}]}},{name:"orchestra hit 2",midiProgram:55,midiSubharmonicOctaves:1,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:588,effects:["panning","vibrato","note filter","chorus","reverb"],vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.5}],pan:0,panDelay:10,chorus:100,reverb:0,fadeInSeconds:.0125,fadeOutTicks:72,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:14,operators:[{frequency:"1\xD7",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:14,waveform:"sine",pulseWidth:5},{frequency:"3\xD7",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"4\xD7",amplitude:14,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"supersaw string",midiProgram:41,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1.4142},{type:"low-pass",cutoffHz:3363.59,linearGain:.1768}],effects:["note filter","reverb"],noteFilter:[{type:"high-pass",cutoffHz:500,linearGain:.1768}],reverb:33,fadeInSeconds:.0263,fadeOutTicks:6,pulseWidth:35.35534,dynamism:83,spread:8,shape:50,envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0}]}},{name:"supersaw string 2",midiProgram:41,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5},{type:"high-pass",cutoffHz:594.6,linearGain:.25},{type:"peak",cutoffHz:2e3,linearGain:2.8284},{type:"peak",cutoffHz:4756.83,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5},{type:"high-pass",cutoffHz:594.6,linearGain:.25},{type:"peak",cutoffHz:2e3,linearGain:2.8284},{type:"peak",cutoffHz:4756.83,linearGain:2}],effects:["note filter","chorus","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:1}],chorus:57,reverb:42,fadeInSeconds:.0575,fadeOutTicks:-6,pulseWidth:50,dynamism:67,spread:58,shape:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"pulseWidth",envelope:"flare 2"}]}}])},{name:"Vocal Presets",presets:me([{name:"choir soprano",midiProgram:94,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2},{type:"peak",cutoffHz:1189.21,linearGain:5.6569},{type:"high-pass",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:.25},{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:33,fadeInSeconds:.0413,fadeOutTicks:24,harmonics:[100,100,86,57,29,29,57,71,57,29,14,14,14,29,43,57,43,29,14,14,14,14,14,14,0,0,0,0],unison:"none",envelopes:[]}},{name:"choir tenor",midiProgram:52,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:707.11,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:48,chord:"simultaneous",harmonics:[86,100,100,86,71,57,43,29,29,29,29,43,43,43,29,29,29,29,29,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"choir bass",midiProgram:52,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:11.3137},{type:"peak",cutoffHz:594.6,linearGain:5.6569},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:48,chord:"simultaneous",harmonics:[71,86,100,100,86,86,57,43,29,29,29,29,29,29,43,43,43,43,43,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"solo soprano",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2},{type:"peak",cutoffHz:1189.21,linearGain:5.6569},{type:"high-pass",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:.25}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,harmonics:[86,100,86,43,14,14,57,71,57,14,14,14,14,14,43,57,43,14,14,14,14,14,14,14,0,0,0,0],unison:"none",envelopes:[]}},{name:"solo tenor",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:707.11,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,harmonics:[86,100,100,86,71,57,43,29,29,29,29,43,43,43,29,29,29,29,29,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"solo bass",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:5.6569},{type:"peak",cutoffHz:594.6,linearGain:8},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:8},{type:"high-pass",cutoffHz:210.22,linearGain:1.4142}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,transition:"normal",fadeInSeconds:.0263,fadeOutTicks:12,chord:"simultaneous",harmonics:[71,86,100,100,86,86,57,43,29,29,29,29,29,29,43,43,43,43,43,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"voice ooh",midiProgram:53,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:1414,filterResonance:57,filterEnvelope:"steady",interval:"union",vibrato:"shaky",harmonics:[100,57,43,43,14,14,0,0,0,14,29,29,14,0,14,29,29,14,0,0,0,0,0,0,0,0,0,0]}},{name:"voice synth",midiProgram:54,generalMidi:!0,settings:{type:"chip",transition:"medium fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:57,filterEnvelope:"steady",wave:"rounded",interval:"union",vibrato:"light"}},{name:"vox synth lead",midiProgram:85,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",vibrato:"light",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u21922\u21923\u21924",feedbackAmplitude:2,feedbackEnvelope:"punch",operators:[{frequency:"2\xD7",amplitude:10,envelope:"custom"},{frequency:"9\xD7",amplitude:5,envelope:"custom"},{frequency:"20\xD7",amplitude:1,envelope:"custom"},{frequency:"~1\xD7",amplitude:4,envelope:"steady"}]}},{name:"tiny robot",midiProgram:85,settings:{type:"FM",eqFilter:[],effects:["vibrato","reverb"],vibrato:"delayed",reverb:33,transition:"slide",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:2,operators:[{frequency:"2\xD7",amplitude:15},{frequency:"1\xD7",amplitude:7},{frequency:"~1\xD7",amplitude:7},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:1},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"yowie",midiProgram:85,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,effects:["panning","note filter","reverb"],noteFilterType:!0,noteSimpleCut:6,noteSimplePeak:6,noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:4}],pan:0,panDelay:10,reverb:0,fadeInSeconds:.0413,fadeOutTicks:6,algorithm:"1\u21902\u2190(3\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:12,operators:[{frequency:"2\xD7",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"16\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:1},{target:"feedbackAmplitude",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"mouse",midiProgram:85,settings:{type:"FM",eqFilter:[],effects:["vibrato","reverb"],vibrato:"light",reverb:33,transition:"slide in pattern",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:5,operators:[{frequency:"2\xD7",amplitude:13},{frequency:"5\xD7",amplitude:12},{frequency:"1\xD7",amplitude:0},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"noteVolume",envelope:"note size"},{target:"feedbackAmplitude",envelope:"flare 2"}]}},{name:"gumdrop",midiProgram:85,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"2\xD7",amplitude:15,envelope:"punch"},{frequency:"4\xD7",amplitude:15,envelope:"punch"},{frequency:"7\xD7",amplitude:15,envelope:"punch"},{frequency:"1\xD7",amplitude:10,envelope:"twang 1"}]}},{name:"echo drop",midiProgram:102,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"~2\xD7",amplitude:11,envelope:"custom"},{frequency:"~1\xD7",amplitude:5,envelope:"steady"},{frequency:"11\xD7",amplitude:2,envelope:"steady"},{frequency:"16\xD7",amplitude:5,envelope:"swell 3"}]}},{name:"dark choir",midiProgram:85,settings:{type:"spectrum",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",spectrum:[43,14,14,14,14,14,14,100,14,14,14,57,14,14,100,14,43,14,43,14,14,43,14,29,14,29,14,14,29,0]}}])},{name:"Brass Presets",presets:me([{name:"trumpet",midiProgram:56,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:9,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:8,envelope:"steady"},{frequency:"1\xD7",amplitude:5,envelope:"flare 2"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"trombone",midiProgram:57,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"2\u27F2",feedbackAmplitude:7,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:8,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"tuba",midiProgram:58,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"2\u27F2",feedbackAmplitude:8,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:6,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"muted trumpet",midiProgram:59,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2.8284},{type:"peak",cutoffHz:4e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1}],reverb:33,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:5,operators:[{frequency:"1\xD7",amplitude:13},{frequency:"1\xD7",amplitude:5},{frequency:"9\xD7",amplitude:5},{frequency:"13\xD7",amplitude:7}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"operatorAmplitude",envelope:"swell 1",index:3},{target:"feedbackAmplitude",envelope:"flare 2"}]}},{name:"french horn",midiProgram:60,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1},{type:"peak",cutoffHz:2378.41,linearGain:2.8284}],effects:["reverb"],reverb:33,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:3,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:12},{frequency:"1\xD7",amplitude:10},{frequency:"~1\xD7",amplitude:8}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:2},{target:"operatorAmplitude",envelope:"flare 2",index:3},{target:"feedbackAmplitude",envelope:"swell 1"}]}},{name:"brass section",midiProgram:61,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:12,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"swell 1"},{frequency:"~1\xD7",amplitude:10,envelope:"swell 1"}]}},{name:"brass synth 1",midiProgram:62,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:11,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:12,envelope:"flare 1"},{frequency:"~1\xD7",amplitude:8,envelope:"flare 2"}]}},{name:"brass synth 2",midiProgram:63,generalMidi:!0,settings:{type:"FM",transition:"soft",effects:"reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:9,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"flare 1"},{frequency:"~1\xD7",amplitude:7,envelope:"flare 1"}]}},{name:"pulse brass",midiProgram:62,settings:{type:"PWM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",pulseWidth:50,pulseEnvelope:"flare 3",vibrato:"none"}}])},{name:"Reed Presets",presets:me([{name:"soprano sax",midiProgram:64,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u21902\u21903\u21904",feedbackType:"4\u27F2",feedbackAmplitude:5,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:13,envelope:"custom"},{frequency:"4\xD7",amplitude:4,envelope:"swell 1"},{frequency:"1\xD7",amplitude:7,envelope:"steady"},{frequency:"5\xD7",amplitude:4,envelope:"punch"}]}},{name:"alto sax",midiProgram:65,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:4,feedbackEnvelope:"punch",operators:[{frequency:"1\xD7",amplitude:13,envelope:"custom"},{frequency:"1\xD7",amplitude:6,envelope:"steady"},{frequency:"4\xD7",amplitude:6,envelope:"swell 1"},{frequency:"1\xD7",amplitude:12,envelope:"steady"}]}},{name:"tenor sax",midiProgram:66,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u21902\u21903\u21904",feedbackType:"1\u27F2",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"2\xD7",amplitude:12,envelope:"custom"},{frequency:"3\xD7",amplitude:7,envelope:"steady"},{frequency:"1\xD7",amplitude:3,envelope:"steady"},{frequency:"8\xD7",amplitude:3,envelope:"steady"}]}},{name:"baritone sax",midiProgram:67,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:2,feedbackEnvelope:"swell 2",operators:[{frequency:"1\xD7",amplitude:12,envelope:"custom"},{frequency:"8\xD7",amplitude:4,envelope:"steady"},{frequency:"4\xD7",amplitude:5,envelope:"steady"},{frequency:"1\xD7",amplitude:4,envelope:"punch"}]}},{name:"sax synth",midiProgram:64,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"4\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:15,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"shehnai",midiProgram:111,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:3,feedbackEnvelope:"steady",operators:[{frequency:"4\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:8,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"oboe",midiProgram:68,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"swell 1",vibrato:"none",algorithm:"1\u20032\u2190(3\u20024)",feedbackType:"2\u27F2",feedbackAmplitude:2,feedbackEnvelope:"tremolo5",operators:[{frequency:"1\xD7",amplitude:7,envelope:"custom"},{frequency:"4\xD7",amplitude:12,envelope:"custom"},{frequency:"1\xD7",amplitude:6,envelope:"steady"},{frequency:"6\xD7",amplitude:2,envelope:"steady"}]}},{name:"english horn",midiProgram:69,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u20032\u2190(3\u20024)",feedbackType:"2\u27F2",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"4\xD7",amplitude:12,envelope:"custom"},{frequency:"2\xD7",amplitude:10,envelope:"custom"},{frequency:"1\xD7",amplitude:8,envelope:"punch"},{frequency:"8\xD7",amplitude:4,envelope:"steady"}]}},{name:"bassoon",midiProgram:70,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:707,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"2\xD7",amplitude:11,envelope:"custom"},{frequency:"1\xD7",amplitude:6,envelope:"steady"},{frequency:"6\xD7",amplitude:6,envelope:"swell 1"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"clarinet",midiProgram:71,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}},{name:"harmonica",midiProgram:22,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:778,effects:["panning","note filter","reverb"],noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],pan:0,panDelay:10,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:9,operators:[{frequency:"2\xD7",amplitude:14,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2},{target:"feedbackAmplitude",envelope:"tremolo2",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}}])},{name:"Flute Presets",presets:me([{name:"flute 1",midiProgram:73,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:9656.85,linearGain:.5}],eqFilterType:!0,eqSimpleCut:9,eqSimplePeak:1,envelopeSpeed:12,discreteEnvelope:!1,preset:832,eqSubFilters1:[],effects:["panning","reverb"],pan:0,panDelay:10,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"4\u27F2",feedbackAmplitude:7,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"~1\xD7",amplitude:1,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"punch",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"feedbackAmplitude",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:7,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"recorder",midiProgram:74,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 2",interval:"union",vibrato:"none",harmonics:[100,43,57,43,57,43,43,43,43,43,43,43,43,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},{name:"whistle",midiProgram:78,generalMidi:!0,settings:{type:"harmonics",effects:"chorus & reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",interval:"union",vibrato:"delayed",harmonics:[100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"ocarina",midiProgram:79,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,14,57,14,29,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"piccolo",midiProgram:72,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"4\u27F2",feedbackAmplitude:15,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"custom"},{frequency:"~2\xD7",amplitude:3,envelope:"punch"},{frequency:"~1\xD7",amplitude:5,envelope:"punch"}]}},{name:"shakuhachi",midiProgram:77,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"steady",vibrato:"delayed",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"3\u21924",feedbackAmplitude:15,feedbackEnvelope:"steady",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"2\xD7",amplitude:3,envelope:"punch"},{frequency:"~1\xD7",amplitude:4,envelope:"twang 1"},{frequency:"20\xD7",amplitude:15,envelope:"steady"}]}},{name:"pan flute",midiProgram:75,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:5.6569}],effects:["note filter","reverb"],noteFilter:[{type:"high-pass",cutoffHz:4756.83,linearGain:.7071}],reverb:33,fadeInSeconds:.0125,fadeOutTicks:-3,spectrum:[100,0,0,0,0,0,0,14,0,0,0,71,0,0,14,0,57,0,29,14,29,14,14,29,14,29,14,14,29,14],envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"punch"}]}},{name:"blown bottle",midiProgram:76,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:7,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"3\xD7",amplitude:4,envelope:"custom"},{frequency:"6\xD7",amplitude:2,envelope:"custom"},{frequency:"11\xD7",amplitude:2,envelope:"custom"}]}},{name:"calliope",midiProgram:82,generalMidi:!0,settings:{type:"spectrum",transition:"cross fade",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"steady",spectrum:[100,0,0,0,0,0,0,86,0,0,0,71,0,0,57,0,43,0,29,14,14,29,14,14,14,14,14,14,14,14]}},{name:"chiffer",midiProgram:83,generalMidi:!0,settings:{type:"spectrum",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"punch",spectrum:[86,0,0,0,0,0,0,71,0,0,0,71,0,0,57,0,57,0,43,14,14,43,14,29,14,29,29,29,29,14]}},{name:"breath noise",midiProgram:121,generalMidi:!0,settings:{type:"spectrum",eqFilter:[],effects:["chord type","note filter","reverb"],chord:"strum",noteFilter:[{type:"high-pass",cutoffHz:840.9,linearGain:.3536},{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,spectrum:[71,0,0,0,0,0,0,29,0,0,0,71,0,0,29,0,100,29,14,29,100,29,100,14,14,71,0,29,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"}]}},{name:"flute 2",midiProgram:73,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"seamless",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"delayed",harmonics:[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}}])},{name:"Pad Presets",presets:me([{name:"new age pad",midiProgram:88,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:3,operators:[{frequency:"2\xD7",amplitude:14},{frequency:"~1\xD7",amplitude:4},{frequency:"6\xD7",amplitude:3},{frequency:"13\xD7",amplitude:3}],envelopes:[{target:"operatorAmplitude",envelope:"swell 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"feedbackAmplitude",envelope:"swell 3"}]}},{name:"warm pad",midiProgram:89,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:7,operators:[{frequency:"1\xD7",amplitude:14},{frequency:"1\xD7",amplitude:6},{frequency:"1\xD7",amplitude:0},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 3"},{target:"operatorAmplitude",envelope:"swell 1",index:1}]}},{name:"polysynth pad",midiProgram:90,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["vibrato","note filter","chorus"],vibrato:"delayed",noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1}],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"sawtooth",unison:"honky tonk",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"space voice pad",midiProgram:91,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:5.6569},{type:"peak",cutoffHz:1414.21,linearGain:.1768}],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:5,operators:[{frequency:"1\xD7",amplitude:10},{frequency:"2\xD7",amplitude:8},{frequency:"3\xD7",amplitude:7},{frequency:"11\xD7",amplitude:2}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:3},{target:"feedbackAmplitude",envelope:"swell 2"}]}},{name:"bowed glass pad",midiProgram:92,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:10},{frequency:"2\xD7",amplitude:12},{frequency:"3\xD7",amplitude:7},{frequency:"7\xD7",amplitude:4}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"flare 3",index:3}]}},{name:"metallic pad",midiProgram:93,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:13,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"~1\xD7",amplitude:9},{frequency:"1\xD7",amplitude:7},{frequency:"11\xD7",amplitude:7}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"swell 2",index:2},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"sweep pad",midiProgram:95,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:4}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",wave:"sawtooth",unison:"hum",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 3"}]}},{name:"atmosphere",midiProgram:99,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],effects:["chorus","reverb"],chorus:100,reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"3\u27F2\u20034\u27F2",feedbackAmplitude:3,operators:[{frequency:"1\xD7",amplitude:14},{frequency:"~1\xD7",amplitude:10},{frequency:"3\xD7",amplitude:7},{frequency:"1\xD7",amplitude:7}],envelopes:[{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"operatorAmplitude",envelope:"twang 2",index:2},{target:"operatorAmplitude",envelope:"twang 3",index:3}]}},{name:"brightness",midiProgram:100,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:2}],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",harmonics:[100,86,86,86,43,57,43,71,43,43,43,57,43,43,57,71,57,43,29,43,57,57,43,29,29,29,29,14],unison:"octave",stringSustain:86,envelopes:[]}},{name:"goblins",midiProgram:101,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:2828.43,linearGain:11.3137}],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1\u21902\u21903\u21904",feedbackType:"1\u27F2",feedbackAmplitude:10,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"4\xD7",amplitude:5},{frequency:"1\xD7",amplitude:10},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 2"},{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"operatorAmplitude",envelope:"tremolo1",index:2},{target:"feedbackAmplitude",envelope:"flare 3"}]}},{name:"sci-fi",midiProgram:103,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:9513.66,linearGain:2.8284}],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:48,chord:"simultaneous",algorithm:"(1\u20022)\u21903\u21904",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:8,operators:[{frequency:"~1\xD7",amplitude:13},{frequency:"2\xD7",amplitude:10},{frequency:"5\xD7",amplitude:5},{frequency:"11\xD7",amplitude:8}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"tremolo5",index:3},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"flutter pad",midiProgram:90,settings:{type:"FM",eqFilter:[],effects:["vibrato","note filter","chorus"],vibrato:"delayed",noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:4}],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:9,operators:[{frequency:"1\xD7",amplitude:13},{frequency:"5\xD7",amplitude:7},{frequency:"7\xD7",amplitude:5},{frequency:"~1\xD7",amplitude:6}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"tremolo1",index:2},{target:"operatorAmplitude",envelope:"punch",index:3}]}},{name:"feedback pad",midiProgram:89,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:2378.41,linearGain:8}],effects:[],transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"custom interval",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:8,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:15},{frequency:"~1\xD7",amplitude:15}],envelopes:[{target:"feedbackAmplitude",envelope:"swell 2"}]}},{name:"supersaw pad",midiProgram:93,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768}],effects:["reverb"],reverb:100,fadeInSeconds:.0263,fadeOutTicks:24,pulseWidth:50,dynamism:100,spread:58,shape:0,envelopes:[]}}])},{name:"Drum Presets",presets:me([{name:"standard drumset",midiProgram:116,isNoise:!0,settings:{type:"drumset",effects:"reverb",drums:[{filterEnvelope:"twang 1",spectrum:[57,71,71,86,86,86,71,71,71,71,57,57,57,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29,29]},{filterEnvelope:"twang 1",spectrum:[0,0,0,100,71,71,57,86,57,57,57,71,43,43,57,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43]},{filterEnvelope:"twang 1",spectrum:[0,0,0,0,100,57,43,43,29,57,43,29,71,43,43,43,43,57,43,43,43,43,43,43,43,43,29,43,43,43]},{filterEnvelope:"twang 1",spectrum:[0,0,0,0,0,71,57,43,43,43,57,57,43,29,57,43,43,43,29,43,57,43,43,43,43,43,43,29,43,43]},{filterEnvelope:"decay 2",spectrum:[0,14,29,43,86,71,29,43,43,43,43,29,71,29,71,29,43,43,43,43,57,43,43,57,43,43,43,57,57,57]},{filterEnvelope:"decay 1",spectrum:[0,0,14,14,14,14,29,29,29,43,43,43,57,57,57,71,71,71,71,71,71,71,71,57,57,57,57,43,43,43]},{filterEnvelope:"twang 3",spectrum:[43,43,43,71,29,29,43,43,43,29,43,43,43,29,29,43,43,29,29,29,57,14,57,43,43,57,43,43,57,57]},{filterEnvelope:"decay 3",spectrum:[29,43,43,43,43,29,29,43,29,29,43,29,14,29,43,29,43,29,57,29,43,57,43,71,43,71,57,57,71,71]},{filterEnvelope:"twang 3",spectrum:[43,29,29,43,29,29,29,57,29,29,29,57,43,43,29,29,57,43,43,43,71,43,43,71,57,71,71,71,71,71]},{filterEnvelope:"decay 3",spectrum:[57,57,57,43,57,57,43,43,57,43,43,43,71,57,43,57,86,71,57,86,71,57,86,100,71,86,86,86,86,86]},{filterEnvelope:"flare 1",spectrum:[0,0,14,14,14,14,29,29,29,43,43,43,57,57,71,71,86,86,100,100,100,100,100,100,100,100,86,57,29,0]},{filterEnvelope:"decay 2",spectrum:[14,14,14,14,29,14,14,29,14,43,14,43,57,86,57,57,100,57,43,43,57,100,57,43,29,14,0,0,0,0]}]}},{name:"steel pan",midiProgram:114,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:62.5,linearGain:.1768}],effects:["note filter","chorus","reverb"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],chorus:67,reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"~1\xD7",amplitude:14},{frequency:"7\xD7",amplitude:3},{frequency:"3\xD7",amplitude:5},{frequency:"4\xD7",amplitude:4}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay 2"},{target:"operatorAmplitude",envelope:"flare 1",index:1},{target:"operatorAmplitude",envelope:"flare 2",index:2},{target:"operatorAmplitude",envelope:"swell 2",index:3}]}},{name:"steel pan synth",midiProgram:114,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1\u20032\u20033\u21904",feedbackType:"1\u27F2",feedbackAmplitude:5,operators:[{frequency:"~1\xD7",amplitude:12},{frequency:"2\xD7",amplitude:15},{frequency:"4\xD7",amplitude:14},{frequency:"~1\xD7",amplitude:3}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"},{target:"operatorAmplitude",envelope:"note size",index:0},{target:"operatorAmplitude",envelope:"note size",index:1},{target:"operatorAmplitude",envelope:"flare 1",index:2},{target:"operatorAmplitude",envelope:"flare 2",index:3},{target:"feedbackAmplitude",envelope:"flare 1"}]}},{name:"timpani",midiProgram:47,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"peak",cutoffHz:6727.17,linearGain:5.6569}],effects:["pitch shift","note filter","reverb"],pitchShiftSemitones:15,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.5}],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",spectrum:[100,0,0,0,86,0,0,71,0,14,43,14,43,43,0,29,43,29,29,29,43,29,43,29,43,43,43,43,43,43],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"}]}},{name:"dark strike",midiProgram:47,settings:{type:"spectrum",eqFilter:[],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071}],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",spectrum:[0,0,14,14,14,29,29,43,43,86,43,43,43,29,86,29,29,29,86,29,14,14,14,14,0,0,0,0,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"woodblock",midiProgram:115,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",spectrum:[0,14,29,43,43,57,86,86,71,57,57,43,43,57,86,86,43,43,71,57,57,57,57,57,86,86,71,71,71,71]}},{name:"taiko drum",midiProgram:116,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"twang 1",spectrum:[71,100,100,43,43,71,71,43,43,43,43,43,43,57,29,57,43,57,43,43,57,43,43,43,43,43,43,43,43,43]}},{name:"melodic drum",midiProgram:117,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-1.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"twang 1",spectrum:[100,71,71,57,57,43,43,71,43,43,43,57,43,43,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29]}},{name:"drum synth",midiProgram:118,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"decay 1",spectrum:[100,86,71,57,43,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29]}},{name:"tom-tom",midiProgram:116,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",spectrum:[100,29,14,0,0,86,14,43,29,86,29,14,29,57,43,43,43,43,57,43,43,43,29,57,43,43,43,43,43,43]}},{name:"metal pipe",midiProgram:117,isNoise:!0,midiSubharmonicOctaves:-1.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"twang 2",spectrum:[29,43,86,43,43,43,43,43,100,29,14,14,100,14,14,0,0,0,0,0,14,29,29,14,0,0,14,29,0,0]}},{name:"synth kick",midiProgram:47,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-6,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"8\xD7",amplitude:15},{frequency:"1\xD7",amplitude:0},{frequency:"1\xD7",amplitude:0},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"twang 2"}]}}])},{name:"Novelty Presets",presets:me([{name:"guitar fret noise",midiProgram:120,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"high-pass",cutoffHz:1e3,linearGain:.1768}],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:5.6569}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"simultaneous",spectrum:[0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,29,14,0,0,43,0,43,0,71,43,0,57,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 1"},{target:"noteVolume",envelope:"twang 2"}]}},{name:"fifth saw lead",midiProgram:86,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1.4142}],chorus:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"fifth swell",midiProgram:86,midiSubharmonicOctaves:1,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:2}],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 3"}]}},{name:"soundtrack",midiProgram:97,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],chorus:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 3"}]}},{name:"reverse cymbal",midiProgram:119,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",effects:"none",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"swell 3",spectrum:[29,57,57,29,57,57,29,29,43,29,29,43,29,29,57,57,14,57,14,57,71,71,57,86,57,100,86,86,86,86]}},{name:"seashore",midiProgram:122,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",transition:"soft fade",effects:"reverb",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"swell 3",spectrum:[14,14,29,29,43,43,43,57,57,57,57,57,57,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,57]}},{name:"bird tweet",midiProgram:123,generalMidi:!0,settings:{type:"harmonics",eqFilter:[],effects:["chord type","vibrato","reverb"],chord:"strum",vibrato:"heavy",reverb:67,fadeInSeconds:.0575,fadeOutTicks:-6,harmonics:[0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"hum",envelopes:[{target:"noteVolume",envelope:"decay 1"}]}},{name:"telephone ring",midiProgram:124,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:1}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"arpeggio",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"2\xD7",amplitude:12},{frequency:"1\xD7",amplitude:4},{frequency:"20\xD7",amplitude:1},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo4"},{target:"operatorAmplitude",envelope:"tremolo1",index:1}]}},{name:"helicopter",midiProgram:125,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-.5,settings:{type:"spectrum",effects:"reverb",transition:"seamless",chord:"arpeggio",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"tremolo4",spectrum:[14,43,43,57,57,57,71,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,71,71,71,57,57]}},{name:"applause",midiProgram:126,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",effects:"reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"swell 3",spectrum:[14,14,29,29,29,43,43,57,71,71,86,86,86,71,71,57,57,57,71,86,86,86,86,86,71,71,57,57,57,57]}},{name:"gunshot",midiProgram:127,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:1414,filterResonance:29,filterEnvelope:"twang 1",spectrum:[14,29,43,43,57,57,57,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,57,57,57,57,43]}},{name:"scoot",midiProgram:92,settings:{type:"chip",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:707.11,linearGain:4}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"simultaneous",wave:"double saw",unison:"shimmer",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 1"}]}},{name:"buzz saw",midiProgram:30,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],effects:[],transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"custom interval",algorithm:"1\u21902\u21903\u21904",feedbackType:"1\u27F2",feedbackAmplitude:4,operators:[{frequency:"5\xD7",amplitude:13},{frequency:"1\xD7",amplitude:10},{frequency:"~1\xD7",amplitude:6},{frequency:"11\xD7",amplitude:12}],envelopes:[]}},{name:"mosquito",midiProgram:93,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2}],effects:["vibrato"],vibrato:"shaky",transition:"normal",fadeInSeconds:.0575,fadeOutTicks:-6,chord:"simultaneous",pulseWidth:4.41942,envelopes:[{target:"pulseWidth",envelope:"tremolo6"}]}},{name:"breathing",midiProgram:126,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"swell 2",spectrum:[14,14,14,29,29,29,29,29,43,29,29,43,43,43,29,29,71,43,86,86,57,100,86,86,86,86,71,86,71,57]}},{name:"klaxon synth",midiProgram:125,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"noise",effects:"reverb",transition:"slide",chord:"harmony",filterCutoffHz:2e3,filterResonance:86,filterEnvelope:"steady",wave:"buzz"}},{name:"theremin",midiProgram:40,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.7071}],effects:["vibrato","reverb"],vibrato:"heavy",reverb:33,transition:"slide in pattern",fadeInSeconds:.0263,fadeOutTicks:-6,chord:"simultaneous",harmonics:[100,71,57,43,29,29,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",envelopes:[]}},{name:"sonar ping",midiProgram:121,settings:{type:"spectrum",eqFilter:[],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],reverb:33,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",spectrum:[100,43,29,29,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}}])},{name:"UltraBox Presets",presets:me([{name:"nes white",midiProgram:116,generalMidi:!0,isNoise:!0,settings:{type:"noise",eqFilter:[],eqFilterType:!1,eqSimpleCut:8,eqSimplePeak:0,eqSubFilters1:[],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:0,wave:"1-bit white",envelopes:[]}},{name:"nes ping",midiProgram:116,generalMidi:!0,isNoise:!0,settings:{type:"noise",eqFilter:[],eqFilterType:!1,eqSimpleCut:8,eqSimplePeak:0,eqSubFilters1:[],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:0,wave:"1-bit metallic",envelopes:[]}},{name:"distorted pulse vocal",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884}],effects:["panning","transition type","pitch shift","vibrato","note filter","bitcrusher","echo","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:0,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:840.9,linearGain:11.3137},{type:"low-pass",cutoffHz:297.3,linearGain:8},{type:"peak",cutoffHz:500,linearGain:11.3137},{type:"high-pass",cutoffHz:62.5,linearGain:1.4142},{type:"peak",cutoffHz:176.78,linearGain:11.3137},{type:"high-pass",cutoffHz:250,linearGain:11.3137}],noteSubFilters0:[{type:"high-pass",cutoffHz:840.9,linearGain:11.3137},{type:"low-pass",cutoffHz:297.3,linearGain:8},{type:"peak",cutoffHz:500,linearGain:11.3137},{type:"high-pass",cutoffHz:62.5,linearGain:1.4142},{type:"peak",cutoffHz:176.78,linearGain:11.3137},{type:"high-pass",cutoffHz:250,linearGain:11.3137}],bitcrusherOctave:6.5,bitcrusherQuantization:71,pan:0,panDelay:10,echoSustain:14,echoDelayBeats:.167,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,wave:"1/8 pulse",unison:"none",envelopes:[]}},{name:"dubsteb bwah",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","chord type"],transition:"interrupt",clicklessTransition:!1,chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:10,operators:[{frequency:"2\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"4\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:13,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"note size"},{target:"operatorAmplitude",envelope:"swell 2",index:1},{target:"operatorAmplitude",envelope:"punch",index:2},{target:"operatorAmplitude",envelope:"note size",index:3}]}},{name:"FM cool bass",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:1},{type:"peak",cutoffHz:1e3,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:1},{type:"peak",cutoffHz:1e3,linearGain:.7071}],effects:["panning","transition type","note filter","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"2\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"13\xD7",amplitude:11,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"operatorAmplitude",envelope:"twang 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 2",index:3}]}},{name:"FM funky bass",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.1768}],eqFilterType:!0,eqSimpleCut:5,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","reverb"],transition:"normal",clicklessTransition:!1,pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~1\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"punch"},{target:"noteVolume",envelope:"note size"}]}},{name:"talking bass",generalMidi:!1,settings:{type:"FM",eqFilter:[],effects:["chord type"],chord:"custom interval",fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1\u2190(2\u20023)\u21904",feedbackType:"1\u27F2",feedbackAmplitude:15,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"2\xD7",amplitude:8},{frequency:"2\xD7",amplitude:5},{frequency:"1\xD7",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"note size",index:2},{target:"operatorAmplitude",envelope:"note size",index:3},{target:"feedbackAmplitude",envelope:"note size"}]}},{name:"synth marimba",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:176.78,linearGain:1},{type:"peak",cutoffHz:4e3,linearGain:.5}],effects:["note filter","echo"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142}],echoSustain:71,echoDelayBeats:.5,fadeInSeconds:0,fadeOutTicks:-1,harmonics:[86,100,29,29,0,0,0,100,0,0,0,86,29,0,14,100,0,0,0,0,0,14,0,0,14,0,0,86],unison:"fifth",stringSustain:7,envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"}]}},{name:"italian accordian",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"low-pass",cutoffHz:6e3,linearGain:.5}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:1,eqSubFilters1:[],effects:["panning","chorus","reverb"],pan:0,panDelay:10,chorus:71,reverb:45,fadeInSeconds:.0263,fadeOutTicks:-3,wave:"square",unison:"honky tonk",customChipWave:{0:-24,1:-24,2:-24,3:-24,4:-24,5:-24,6:-24,7:-24,8:-24,9:-24,10:-24,11:-24,12:-24,13:-24,14:-24,15:-24,16:24,17:24,18:24,19:24,20:24,21:24,22:24,23:24,24:-24,25:-24,26:-24,27:-24,28:-24,29:-24,30:-24,31:-24,32:-24,33:-24,34:-24,35:-24,36:-24,37:-24,38:-24,39:-24,40:24,41:24,42:24,43:24,44:24,45:24,46:24,47:24,48:-24,49:-24,50:-24,51:-24,52:-24,53:-24,54:-24,55:-24,56:-24,57:-24,58:-24,59:-24,60:-24,61:-24,62:-24,63:-24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"chip supersaw",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","vibrato","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,chorus:29,reverb:29,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"dissonant",customChipWave:{0:22,1:22,2:16,3:6,4:0,5:-3,6:-8,7:-10,8:-13,9:-16,10:-19,11:-19,12:-20,13:-22,14:-22,15:-24,16:-24,17:-24,18:-24,19:-24,20:-24,21:-24,22:-24,23:-24,24:-24,25:-24,26:-24,27:-24,28:-24,29:-24,30:-24,31:24,32:24,33:16,34:9,35:6,36:4,37:2,38:0,39:-1,40:-3,41:-4,42:-4,43:-6,44:-6,45:-6,46:-6,47:-5,48:-5,49:-4,50:-2,51:-2,52:1,53:4,54:6,55:8,56:10,57:12,58:14,59:16,60:18,61:19,62:22,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"fm supersaw",generalMidi:!1,settings:{type:"FM6op",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:1.4142},{type:"high-pass",cutoffHz:148.65,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:19027.31,linearGain:1.4142},{type:"high-pass",cutoffHz:148.65,linearGain:.7071}],effects:["panning","transition type","pitch shift","note filter","chorus","reverb"],transition:"continue",clicklessTransition:!1,pitchShiftSemitones:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],noteSubFilters1:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],pan:0,panDelay:10,chorus:71,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u20032\u20033\u20034\u20035\u20036",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:13,waveform:"sawtooth",pulseWidth:5},{frequency:"~1\xD7",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"2\xD7",amplitude:10,waveform:"sawtooth",pulseWidth:5},{frequency:"3\xD7",amplitude:7,waveform:"sawtooth",pulseWidth:5},{frequency:"4\xD7",amplitude:9,waveform:"sawtooth",pulseWidth:5},{frequency:"8\xD7",amplitude:6,waveform:"sawtooth",pulseWidth:5}],envelopes:[]}},{name:"wind",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:250.03,linearGain:11.3137}],eqFilterType:!0,eqSimpleCut:0,eqSimplePeak:7,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["transition type","reverb"],transition:"continue",clicklessTransition:!1,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u21923\u20032\u21924",feedbackAmplitude:15,operators:[{frequency:"16\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"16\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"16\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"16\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[]}},{name:"mrow",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[],effects:["panning","chord type","reverb"],chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,pan:0,panDelay:10,reverb:35,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:5,operators:[{frequency:"4\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:9,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"flare 1",index:0},{target:"operatorAmplitude",envelope:"note size",index:1},{target:"operatorAmplitude",envelope:"note size",index:2},{target:"operatorAmplitude",envelope:"flare 3",index:3},{target:"feedbackAmplitude",envelope:"flare 1"}]}},{name:"vocal why",generalMidi:!1,settings:{type:"harmonics",eqFilter:[],effects:["note filter","panning","reverb"],noteFilter:[{type:"low-pass",cutoffHz:840.9,linearGain:11.3137}],pan:0,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,harmonics:[100,86,29,29,14,14,0,14,14,43,71,100,100,86,71,71,57,57,43,43,43,43,43,0,0,0,0,0],unison:"octave",envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}}])},{name:"Slarmoo's Box Presets",presets:me([{name:"radio fm",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:1189.21,linearGain:1.4142},{type:"high-pass",cutoffHz:74.33,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1189.21,linearGain:1.4142},{type:"high-pass",cutoffHz:74.33,linearGain:.3536}],effects:["panning","detune","vibrato","bitcrusher","reverb"],detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,bitcrusherOctave:6.5,bitcrusherQuantization:43,pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:6,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:4,operators:[{frequency:"1\xD7",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"0.12\xD7",amplitude:7,waveform:"trapezoid",pulseWidth:5},{frequency:"0.5\xD7",amplitude:10,waveform:"triangle",pulseWidth:5},{frequency:"~1\xD7",amplitude:5,waveform:"triangle",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"anguished underworld",generalMidi:!1,settings:{type:"FM6op",eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.0884},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.0884},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],effects:["panning","note filter","distortion","bitcrusher","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2}],noteSubFilters0:[{type:"low-pass",cutoffHz:2828.43,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2}],noteSubFilters1:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],distortion:43,aliases:!1,bitcrusherOctave:4.5,bitcrusherQuantization:43,pan:0,panDelay:10,reverb:0,fadeInSeconds:.075,fadeOutTicks:6,algorithm:"1\u20032\u21904\u20033\u2190(5\u20036)",feedbackType:"1\u21925\u20022\u21926 3\u21924",feedbackAmplitude:4,operators:[{frequency:"0.25\xD7",amplitude:14,waveform:"triangle",pulseWidth:5},{frequency:"0.5\xD7",amplitude:13,waveform:"sawtooth",pulseWidth:5},{frequency:"1\xD7",amplitude:12,waveform:"trapezoid",pulseWidth:5},{frequency:"8\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"0.75\xD7",amplitude:3,waveform:"ramp",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"operatorAmplitude",envelope:"decay -1",index:5},{target:"feedbackAmplitude",envelope:"wibble 3"}],isDrum:!1}},{name:"faint sorrow",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4240.89,linearGain:2}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:4,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","detune","vibrato","echo","reverb"],detuneCents:22,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,echoSustain:100,echoDelayBeats:.667,reverb:87,fadeInSeconds:.075,fadeOutTicks:48,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2",feedbackAmplitude:3,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"bright sorrow fm",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["panning","chord type","note filter","echo","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:2e3,linearGain:2.8284}],noteSubFilters1:[{type:"low-pass",cutoffHz:1414.21,linearGain:1.4142}],pan:0,panDelay:10,echoSustain:71,echoDelayBeats:1.333,reverb:61,fadeInSeconds:0,fadeOutTicks:48,algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:2,operators:[{frequency:"1\xD7",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"5\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"5\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"wet sorrow fm",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","vibrato","reverb"],vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,reverb:23,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:4,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"decay 3",index:2}],isDrum:!1}},{name:"scream fm",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2},{type:"high-pass",cutoffHz:250,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:.125},{type:"peak",cutoffHz:353.55,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:2},{type:"high-pass",cutoffHz:250,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:.125},{type:"peak",cutoffHz:353.55,linearGain:.7071}],effects:["panning","detune","note filter","distortion","reverb"],detuneCents:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:1681.79,linearGain:.125},{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:11.3137}],noteSubFilters0:[{type:"high-pass",cutoffHz:1681.79,linearGain:.125},{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:11.3137}],distortion:0,aliases:!1,pan:0,panDelay:10,reverb:87,fadeInSeconds:.135,fadeOutTicks:-3,algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:11,operators:[{frequency:"4\xD7",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"7\xD7",amplitude:5,waveform:"triangle",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"detune",envelope:"swell 1"},{target:"feedbackAmplitude",envelope:"tremolo4"}],isDrum:!1}},{name:"anguished radio fm pad",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:9513.66,linearGain:4},{type:"peak",cutoffHz:353.55,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:62.5,linearGain:.0884},{type:"peak",cutoffHz:9513.66,linearGain:4},{type:"peak",cutoffHz:353.55,linearGain:.0884}],eqSubFilters4:[],effects:["panning","detune","note filter","bitcrusher","chorus","echo","reverb"],detuneCents:-16,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:11313.71,linearGain:11.3137}],noteSubFilters2:[{type:"low-pass",cutoffHz:105.11,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:11313.71,linearGain:11.3137}],noteSubFilters4:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:11313.71,linearGain:11.3137}],bitcrusherOctave:5.5,bitcrusherQuantization:43,pan:0,panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:1,reverb:58,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u21923",feedbackAmplitude:3,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"juicy kick",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:62.5,linearGain:11.3137},{type:"low-pass",cutoffHz:5656.85,linearGain:.3536},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.0884},{type:"peak",cutoffHz:594.6,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:62.5,linearGain:11.3137},{type:"low-pass",cutoffHz:5656.85,linearGain:.3536},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.0884},{type:"peak",cutoffHz:594.6,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884}],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-6,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"20\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"twang 2"}],isDrum:!1}},{name:"good vibes supersaw",generalMidi:!1,settings:{type:"supersaw",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:6,discreteEnvelope:!1,pitchEnvelopeStart:37,pitchEnvelopeEnd:96,pitchEnvelopeInverse:!0,eqSubFilters0:[],effects:["panning","transition type","detune","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,detuneCents:30,pan:0,panDelay:10,chorus:14,reverb:23,fadeInSeconds:.0263,fadeOutTicks:12,pulseWidth:26,decimalOffset:0,dynamism:33,spread:33,shape:17,envelopes:[{target:"supersawShape",envelope:"pitch"},{target:"detune",envelope:"tremolo2"}],isDrum:!1}},{name:"ethereal",generalMidi:!1,isNoise:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"peak",cutoffHz:4e3,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:88.39,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:4,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:4e3,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:88.39,linearGain:1.4142}],eqSubFilters1:[],effects:["panning","transition type","chord type","pitch shift","detune","vibrato","note filter","bitcrusher","chorus","reverb"],transition:"continue",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:36,vibrato:"custom",vibratoDepth:.12,vibratoDelay:36,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:2828.43,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.7071}],noteSubFilters0:[{type:"peak",cutoffHz:2828.43,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.7071}],bitcrusherOctave:4.5,bitcrusherQuantization:43,pan:0,panDelay:10,chorus:71,reverb:100,fadeInSeconds:0,fadeOutTicks:-1,spectrum:[43,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,0],unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,pitchEnvelopeStart2:0,pitchEnvelopeEnd2:96,envelopeInverse2:!1,envelopes:[{target:"noteVolume",envelope:"note size"},{target:"detune",envelope:"tremolo3"},{target:"bitcrusherQuantization",envelope:"note size"}],isDrum:!1}},{name:"walrus wuh",generalMidi:!1,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25},{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"peak",cutoffHz:3363.59,linearGain:.0884},{type:"peak",cutoffHz:74.33,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,pitchEnvelopeStart:0,pitchEnvelopeEnd:96,pitchEnvelopeInverse:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25},{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"peak",cutoffHz:3363.59,linearGain:.0884},{type:"peak",cutoffHz:74.33,linearGain:2.8284}],effects:["panning","note filter","bitcrusher","chorus","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.125}],noteSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.125}],bitcrusherOctave:4,bitcrusherQuantization:71,pan:0,panDelay:10,chorus:86,reverb:32,fadeInSeconds:.0263,fadeOutTicks:48,pulseWidth:50,decimalOffset:0,dynamism:100,spread:50,shape:0,envelopes:[{target:"noteVolume",envelope:"punch"},{target:"bitcrusherQuantization",envelope:"decay 3"}],isDrum:!1}},{name:"saturnic",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4240.89,linearGain:2}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:4,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","vibrato","chorus","echo","reverb"],vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,chorus:100,echoSustain:71,echoDelayBeats:.5,reverb:45,fadeInSeconds:.0125,fadeOutTicks:72,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:15,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"glassy harmonics",generalMidi:!1,settings:{type:"harmonics",volume:0,eqFilter:[{type:"low-pass",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:840.9,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:840.9,linearGain:.5}],effects:["panning","detune","note filter","chorus","reverb"],detuneCents:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],pan:0,panDelay:10,chorus:14,reverb:29,fadeInSeconds:0,fadeOutTicks:-3,harmonics:[100,0,43,29,0,100,0,0,0,0,0,0,0,0,14,29,14,0,14,0,0,0,0,100,0,0,14,0],unison:"none",envelopes:[],isDrum:!1}},{name:"plucked",generalMidi:!1,settings:{type:"Picked String",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.0884}],effects:["panning","transition type","echo","reverb"],transition:"interrupt",clicklessTransition:!1,pan:0,panDelay:10,echoSustain:100,echoDelayBeats:1.333,reverb:26,fadeInSeconds:0,fadeOutTicks:24,harmonics:[100,86,57,0,0,57,57,57,86,57,57,43,43,43,29,29,14,14,29,14,14,14,29,100,57,43,14,14],unison:"none",stringSustain:14,envelopes:[],isDrum:!1}},{name:"spectrum wind",generalMidi:!1,isNoise:!0,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","note filter","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:1.4142}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:1.4142}],pan:0,panDelay:10,reverb:87,fadeInSeconds:0,fadeOutTicks:12,spectrum:[29,0,0,0,0,0,0,71,0,0,0,14,57,14,0,57,57,0,0,57,0,71,14,29,100,71,0,100,14,86],unison:"none",envelopes:[],isDrum:!0}},{name:"hi-hat",generalMidi:!1,isNoise:!0,settings:{type:"noise",volume:0,eqFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqSubFilters1:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqSubFilters2:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqSubFilters3:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,wave:"white",unison:"none",envelopes:[],isDrum:!0}},{name:"jungle bass",generalMidi:!1,isNoise:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884},{type:"peak",cutoffHz:148.65,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884},{type:"peak",cutoffHz:148.65,linearGain:.0884}],effects:["panning","vibrato","note filter","chorus","reverb"],vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:74.33,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:74.33,linearGain:.0884}],pan:0,panDelay:10,chorus:14,reverb:3,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u21942 3\u21944",feedbackAmplitude:3,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"8\xD7",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,pitchEnvelopeStart2:12,pitchEnvelopeEnd2:28,envelopeInverse2:!1,envelopes:[{target:"operatorFrequency",envelope:"swell 3",index:0},{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"noteFilterFreq",envelope:"pitch",index:0}],isDrum:!1}},{name:"beach tide",generalMidi:!1,isNoise:!1,settings:{type:"harmonics",volume:0,eqFilter:[{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:13454.34,linearGain:.1768},{type:"peak",cutoffHz:8e3,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:13454.34,linearGain:.1768},{type:"peak",cutoffHz:8e3,linearGain:.0884}],effects:["panning","transition type","chord type","note filter","chorus","reverb"],transition:"continue",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:1},{type:"peak",cutoffHz:5656.85,linearGain:.1768}],noteSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:1},{type:"peak",cutoffHz:5656.85,linearGain:.1768}],pan:0,panDelay:10,chorus:14,reverb:32,fadeInSeconds:.0938,fadeOutTicks:72,harmonics:[86,86,71,57,57,43,43,43,29,29,14,14,14,0,0,57,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,envelopes:[{target:"noteFilterAllFreqs",envelope:"pitch"}],isDrum:!1}},{name:"starlight",generalMidi:!1,isNoise:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884}],effects:["panning","transition type","vibrato","bitcrusher","echo","reverb"],transition:"continue",clicklessTransition:!1,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,bitcrusherOctave:5.5,bitcrusherQuantization:29,pan:0,panDelay:10,echoSustain:29,echoDelayBeats:1,reverb:13,fadeInSeconds:0,fadeOutTicks:24,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"distant monument",generalMidi:!1,isNoise:!1,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1},{type:"peak",cutoffHz:11313.71,linearGain:.25},{type:"peak",cutoffHz:500,linearGain:.125},{type:"peak",cutoffHz:210.22,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:5.6569}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:1},{type:"peak",cutoffHz:11313.71,linearGain:.25},{type:"peak",cutoffHz:500,linearGain:.125},{type:"peak",cutoffHz:210.22,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:5.6569}],effects:["panning","transition type","chord type","detune","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:24,bitcrusherOctave:2.5,bitcrusherQuantization:14,pan:0,panDelay:10,chorus:86,echoSustain:71,echoDelayBeats:1,reverb:35,fadeInSeconds:.0413,fadeOutTicks:12,wave:"modbox pnryshk a (u5)",unison:"detune",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:11,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,envelopes:[{target:"noteVolume",envelope:"punch"},{target:"noteVolume",envelope:"twang 1"}],isDrum:!1}},{name:"mercurial",generalMidi:!1,isNoise:!1,settings:{type:"FM6op",volume:0,eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.5},{type:"peak",cutoffHz:88.39,linearGain:2.8284},{type:"peak",cutoffHz:1189.21,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.5},{type:"peak",cutoffHz:88.39,linearGain:2.8284},{type:"peak",cutoffHz:1189.21,linearGain:.1768}],eqSubFilters1:[],effects:["panning","distortion","chorus"],distortion:43,aliases:!1,pan:0,panDelay:10,chorus:43,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"Custom",feedbackType:"1\u27F2",feedbackAmplitude:8,customAlgorithm:{mods:[[3],[5],[4],[],[6],[]],carrierCount:2},operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"0.5\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:2,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorFrequency",envelope:"linear",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"distortion",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:20,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"air hiss",generalMidi:!1,isNoise:!0,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],eqFilterType:!0,eqSimpleCut:7,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","note filter","distortion","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"high-pass",cutoffHz:2828.43,linearGain:.3536}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"high-pass",cutoffHz:2828.43,linearGain:.3536}],distortion:71,aliases:!1,pan:0,panDelay:10,reverb:6,fadeInSeconds:0,fadeOutTicks:-24,spectrum:[57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,57,71,86,100,100,100,100,86,71,71,43],unison:"none",envelopes:[],isDrum:!0}},{name:"spectral phaser",generalMidi:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536},{type:"high-pass",cutoffHz:74.33,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:10,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["panning","note filter","distortion","bitcrusher","chorus","echo","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:9513.66,linearGain:5.6569},{type:"peak",cutoffHz:5656.85,linearGain:.0884},{type:"peak",cutoffHz:2828.43,linearGain:4},{type:"peak",cutoffHz:1414.21,linearGain:.125},{type:"peak",cutoffHz:707.11,linearGain:4},{type:"peak",cutoffHz:353.55,linearGain:.1768},{type:"peak",cutoffHz:148.65,linearGain:4},{type:"peak",cutoffHz:88.39,linearGain:.1768}],noteSubFilters0:[{type:"peak",cutoffHz:9513.66,linearGain:5.6569},{type:"peak",cutoffHz:5656.85,linearGain:.0884},{type:"peak",cutoffHz:2828.43,linearGain:4},{type:"peak",cutoffHz:1414.21,linearGain:.125},{type:"peak",cutoffHz:707.11,linearGain:4},{type:"peak",cutoffHz:353.55,linearGain:.1768},{type:"peak",cutoffHz:148.65,linearGain:4},{type:"peak",cutoffHz:88.39,linearGain:.1768}],distortion:14,aliases:!1,bitcrusherOctave:6,bitcrusherQuantization:14,pan:0,panDelay:10,chorus:100,echoSustain:86,echoDelayBeats:1,reverb:32,fadeInSeconds:0,fadeOutTicks:48,spectrum:[86,0,0,0,57,0,0,71,0,0,0,86,0,0,57,0,43,0,43,0,0,43,0,29,0,29,14,14,29,14],unison:"piano",envelopes:[{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.07,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:0},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.06,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:1},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.05,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.04,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.09,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:4},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.08,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:5},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:6},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.03,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:7},{target:"distortion",envelope:"none",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:.3}],isDrum:!1}},{name:"shaker",generalMidi:!1,isNoise:!0,settings:{type:"noise",volume:0,eqFilter:[{type:"high-pass",cutoffHz:4e3,linearGain:5.6569},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"low-pass",cutoffHz:11313.71,linearGain:8},{type:"peak",cutoffHz:2378.41,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:6,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:4e3,linearGain:5.6569},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"low-pass",cutoffHz:11313.71,linearGain:8},{type:"peak",cutoffHz:2378.41,linearGain:.25}],effects:["panning","transition type","detune","distortion","bitcrusher","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,detuneCents:30,distortion:43,aliases:!1,bitcrusherOctave:2.5,bitcrusherQuantization:43,pan:0,panDelay:10,chorus:43,echoSustain:29,echoDelayBeats:1,reverb:23,fadeInSeconds:.0263,fadeOutTicks:96,wave:"deep",unison:"none",envelopes:[{target:"detune",envelope:"tremolo2",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"bitcrusherQuantization",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteVolume",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteVolume",envelope:"flare",pitchEnvelopeStart:0,pitchEnvelopeEnd:12,inverse:!1,perEnvelopeSpeed:64,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!0}},{name:"distant sorrow",generalMidi:!1,settings:{type:"harmonics",volume:0,eqFilter:[{type:"high-pass",cutoffHz:707.11,linearGain:4},{type:"peak",cutoffHz:5656.85,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:707.11,linearGain:4},{type:"peak",cutoffHz:5656.85,linearGain:.5}],effects:["panning","transition type","detune","vibrato","note filter","echo","reverb"],transition:"interrupt",clicklessTransition:!1,detuneCents:0,vibrato:"custom",vibratoDepth:.2,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25}],pan:0,panDelay:10,echoSustain:100,echoDelayBeats:1,reverb:74,fadeInSeconds:0,fadeOutTicks:24,harmonics:[86,71,57,43,43,29,57,0,14,0,29,29,29,29,29,43,43,43,43,43,57,57,57,0,57,57,0,0],unison:"none",envelopes:[{target:"noteVolume",envelope:"fall",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteFilterAllFreqs",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2.5,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:2}],isDrum:!1}},{name:"metallic kick",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:28,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],effects:["panning"],pan:0,panDelay:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u21922\u21923\u21924",feedbackAmplitude:15,operators:[{frequency:"8\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"256x",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"128x",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"256x",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorFrequency",envelope:"twang",inverse:!1,perEnvelopeSpeed:16,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:0},{target:"noteVolume",envelope:"twang",inverse:!1,perEnvelopeSpeed:3.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"feedbackAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:256,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:256,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:1},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:256,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:256,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2}],isDrum:!1}},{name:"chimes",generalMidi:!1,settings:{type:"Picked String",volume:0,eqFilter:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:5656.85,linearGain:.0884},{type:"peak",cutoffHz:8e3,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:5656.85,linearGain:.0884},{type:"peak",cutoffHz:8e3,linearGain:2.8284}],effects:["panning","chord type","detune","note filter","bitcrusher","chorus","echo","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:24,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],noteSubFilters1:[{type:"low-pass",cutoffHz:2378.41,linearGain:1}],bitcrusherOctave:4,bitcrusherQuantization:29,pan:0,panDelay:0,chorus:29,echoSustain:86,echoDelayBeats:.667,reverb:84,fadeInSeconds:0,fadeOutTicks:48,harmonics:[0,100,71,71,29,0,57,86,0,0,0,0,71,29,0,0,57,0,0,86,0,0,0,100,0,100,0,57],unison:"none",stringSustain:36,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang",inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"bitcrusherQuantization",envelope:"swell",inverse:!1,perEnvelopeSpeed:4.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"bitcrusherQuantization",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"stringSustain",envelope:"random",inverse:!1,perEnvelopeSpeed:16,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:1,steps:14,seed:2,waveform:0},{target:"detune",envelope:"pitch",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,pitchEnvelopeStart:0,pitchEnvelopeEnd:96}],isDrum:!1}},{name:"supersaw bass",generalMidi:!1,settings:{type:"supersaw",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],effects:["panning","note filter","distortion","chorus","reverb"],noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],distortion:14,aliases:!1,pan:0,panDelay:10,chorus:29,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,pulseWidth:50,decimalOffset:0,dynamism:100,spread:67,shape:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"swell",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"ascension",generalMidi:!1,isNoise:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:420.45,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:420.45,linearGain:.25}],eqSubFilters1:[],effects:["panning","granular","chorus","reverb"],granular:7,grainSize:44,grainAmounts:9,grainRange:37,pan:0,panDelay:10,chorus:71,reverb:19,fadeInSeconds:0,fadeOutTicks:24,spectrum:[43,0,0,57,0,0,14,100,29,0,0,100,29,0,100,0,57,29,86,14,14,100,14,0,14,14,0,0,43,0],unison:"voiced",envelopes:[{target:"noteVolume",envelope:"swell",inverse:!1,perEnvelopeSpeed:.7,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"panning",envelope:"lfo",inverse:!1,perEnvelopeSpeed:.3,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,waveform:2,steps:6}],isDrum:!1}},{name:"liminal",generalMidi:!1,isNoise:!1,settings:{type:"supersaw",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142},{type:"high-pass",cutoffHz:840.9,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142},{type:"high-pass",cutoffHz:840.9,linearGain:.25}],effects:["panning","detune","vibrato","note filter","granular","distortion","bitcrusher","chorus","reverb"],detuneCents:8,vibrato:"custom",vibratoDepth:.48,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!0,noteSimpleCut:6,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:2196.8,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:2196.8,linearGain:1}],granular:6,grainSize:49,grainAmounts:10,grainRange:40,distortion:57,aliases:!1,bitcrusherOctave:5,bitcrusherQuantization:0,pan:38,panDelay:10,chorus:29,reverb:48,fadeInSeconds:0,fadeOutTicks:72,pulseWidth:30,decimalOffset:0,dynamism:17,spread:83,shape:67,envelopes:[{target:"noteVolume",envelope:"twang",inverse:!1,perEnvelopeSpeed:17,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"pulseWidth",envelope:"twang",inverse:!1,perEnvelopeSpeed:1.3333,perEnvelopeLowerBound:.1,perEnvelopeUpperBound:1,discrete:!1},{target:"distortion",envelope:"random",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:.2,perEnvelopeUpperBound:1,discrete:!0,steps:8,seed:2,waveform:2},{target:"panning",envelope:"lfo",inverse:!1,perEnvelopeSpeed:.3333,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,waveform:2,steps:2},{target:"noteVolume",envelope:"swell",inverse:!1,perEnvelopeSpeed:18,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"granular",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}}])},{name:"Slarmoo's Box Chip Presets",presets:me([{name:"Slarmoo's Pulse",midiProgram:80,settings:{type:"PWM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["panning","transition type","chord type","detune"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:8,detuneCents:24,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,pulseWidth:50,decimalOffset:0,unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,envelopes:[{target:"detune",envelope:"pitch"}],isDrum:!1}},{name:"discovery square",midiProgram:80,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["panning","bitcrusher"],bitcrusherOctave:5.5,bitcrusherQuantization:57,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,wave:"square",unison:"octave",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:2,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[],isDrum:!1}},{name:"VRC6 Sawtooth alt",midiProgram:81,settings:{type:"custom chip",volume:0,eqFilter:[{type:"high-pass",cutoffHz:62.5,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:62.5,linearGain:.5}],effects:["panning","transition type","chord type","pitch shift","detune","vibrato","distortion"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,distortion:0,aliases:!1,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"none",customChipWave:{0:-1,1:-1,2:-1,3:-1,4:-1,5:-1,6:-1,7:-1,8:-1,9:-5,10:-5,11:-5,12:-4,13:-4,14:-4,15:-3,16:-3,17:-3,18:-7,19:-7,20:-6,21:-6,22:-5,23:-5,24:-4,25:-4,26:-4,27:-7,28:-7,29:-6,30:-6,31:-5,32:-5,33:-4,34:-4,35:-4,36:-8,37:-8,38:-7,39:-7,40:-6,41:-6,42:-5,43:-5,44:-4,45:-4,46:21,47:20,48:18,49:17,50:16,51:14,52:13,53:12,54:11,55:7,56:6,57:6,58:5,59:5,60:5,61:4,62:4,63:4},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[],isDrum:!1}},{name:"pulse arps",midiProgram:80,settings:{type:"PWM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.125},{type:"high-pass",cutoffHz:840.9,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:7,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.125},{type:"high-pass",cutoffHz:840.9,linearGain:2}],effects:["panning","transition type","chord type","detune","chorus","echo"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:8,detuneCents:64,pan:58,panDelay:10,chorus:43,echoSustain:71,echoDelayBeats:.333,fadeInSeconds:0,fadeOutTicks:-1,pulseWidth:50,decimalOffset:0,unison:"none",envelopes:[{target:"detune",envelope:"pitch",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,pitchEnvelopeStart:0,pitchEnvelopeEnd:96},{target:"pulseWidth",envelope:"pitch",inverse:!0,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,pitchEnvelopeStart:24,pitchEnvelopeEnd:83},{target:"panning",envelope:"lfo",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,waveform:0,steps:2},{target:"noteVolume",envelope:"twang",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"chorus",envelope:"twang",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}}])},{name:"Slarmoo's Box Instrumental Presets",presets:me([{name:"rusty flute",midiProgram:73,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:13454.34,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:13454.34,linearGain:2.8284}],effects:["panning","transition type","detune","distortion","reverb"],transition:"normal",clicklessTransition:!1,detuneCents:-7,distortion:14,aliases:!1,pan:0,panDelay:10,reverb:100,fadeInSeconds:0,fadeOutTicks:96,algorithm:"1\u21902\u21903\u21904",feedbackType:"3\u21924",feedbackAmplitude:8,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"20\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"bitcrushed piano",midiProgram:4,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2.8284},{type:"high-pass",cutoffHz:74.33,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2.8284},{type:"high-pass",cutoffHz:74.33,linearGain:.5}],effects:["panning","transition type","detune","distortion","bitcrusher","reverb"],transition:"continue",clicklessTransition:!1,detuneCents:0,distortion:29,aliases:!0,bitcrusherOctave:4,bitcrusherQuantization:43,pan:0,panDelay:0,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,wave:"triangle",unison:"none",isUsingAdvancedLoopControls:!0,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"bitcrusherQuantization",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:.6,perEnvelopeUpperBound:1,discrete:!1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"detuned piano",midiProgram:3,settings:{type:"Picked String",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2.8284}],effects:["panning","transition type","detune","vibrato","note filter","bitcrusher"],transition:"continue",clicklessTransition:!1,detuneCents:44,vibrato:"custom",vibratoDepth:.04,vibratoDelay:13,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:1}],noteSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:1}],bitcrusherOctave:4,bitcrusherQuantization:14,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,harmonics:[86,86,71,71,57,57,43,29,14,29,29,29,29,29,29,29,29,43,43,43,43,43,29,14,14,0,0,0],unison:"custom",unisonVoices:2,unisonSpread:.26,unisonOffset:0,unisonExpression:1,unisonSign:1,stringSustain:79,envelopes:[{target:"detune",envelope:"random",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:49,waveform:1},{target:"noteVolume",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1.6667,perEnvelopeLowerBound:.4,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0},{target:"unison",envelope:"random",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:20,waveform:1},{target:"noteFilterAllFreqs",envelope:"pitch",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!0,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0}],isDrum:!1}},{name:"pan flute 2",midiProgram:75,isNoise:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"peak",cutoffHz:2828.43,linearGain:2},{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:8e3,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:2828.43,linearGain:2},{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:8e3,linearGain:.5}],effects:["panning","transition type","note filter","bitcrusher","reverb"],transition:"continue",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],noteSubFilters1:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],bitcrusherOctave:6,bitcrusherQuantization:57,pan:0,panDelay:10,reverb:16,fadeInSeconds:.0125,fadeOutTicks:-6,spectrum:[100,29,14,14,57,0,0,71,0,86,57,43,57,71,14,29,14,14,14,100,71,14,14,14,14,86,43,14,0,0],unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,pitchEnvelopeStart2:0,pitchEnvelopeEnd2:96,envelopeInverse2:!1,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"},{target:"bitcrusherQuantization",envelope:"note size"},{target:"noteVolume",envelope:"note size"}],isDrum:!1}},{name:"trumpet 2",midiProgram:56,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:3049.17,linearGain:1.4142}],eqFilterType:!0,eqSimpleCut:7,eqSimplePeak:3,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","detune","vibrato","note filter","distortion","chorus","reverb"],detuneCents:-64,vibrato:"custom",vibratoDepth:.68,vibratoDelay:17,vibratoSpeed:12,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.5},{type:"peak",cutoffHz:3363.59,linearGain:.1768},{type:"high-pass",cutoffHz:1e3,linearGain:.1768}],noteSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.5},{type:"peak",cutoffHz:3363.59,linearGain:.1768},{type:"high-pass",cutoffHz:1e3,linearGain:.1768}],distortion:29,aliases:!1,pan:0,panDelay:10,chorus:14,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u20032\u2190(3\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:9,operators:[{frequency:"0.75\xD7",amplitude:14,waveform:"pulse width",pulseWidth:2},{frequency:"1\xD7",amplitude:14,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"flare",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"feedbackAmplitude",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorFrequency",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:128,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:0},{target:"noteFilterFreq",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2},{target:"noteVolume",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"detune",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!0,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"harp 2",midiProgram:46,settings:{type:"FM6op",volume:0,eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.0884},{type:"peak",cutoffHz:1e3,linearGain:2.8284},{type:"high-pass",cutoffHz:62.5,linearGain:.25},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.0884},{type:"peak",cutoffHz:1e3,linearGain:2.8284},{type:"high-pass",cutoffHz:62.5,linearGain:.25},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqSubFilters1:[],effects:["panning","detune","note filter","echo","reverb"],detuneCents:-23,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:105.11,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:105.11,linearGain:2.8284}],pan:0,panDelay:10,echoSustain:29,echoDelayBeats:1.083,reverb:74,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u21904\u20032\u21905\u20033\u21906",feedbackType:"1\u27F2",feedbackAmplitude:5,operators:[{frequency:"1\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"4\xD7",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"6\xD7",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:2,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:4,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorFrequency",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:1},{target:"detune",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:7,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteFilterFreq",envelope:"tremolo2",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:0},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:4},{target:"operatorAmplitude",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!0,perEnvelopeSpeed:8,perEnvelopeLowerBound:.4,perEnvelopeUpperBound:1,index:0},{target:"noteVolume",envelope:"punch",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"electric guitar 1",midiProgram:30,settings:{type:"FM",volume:0,eqFilter:[{type:"high-pass",cutoffHz:1189.21,linearGain:2},{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"high-pass",cutoffHz:1189.21,linearGain:2},{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884}],effects:["panning","chord type","vibrato","note filter","distortion","reverb"],chord:"monophonic",fastTwoNoteArp:!1,arpeggioSpeed:12,monoChordTone:0,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1414.21,linearGain:4},{type:"high-pass",cutoffHz:594.6,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:1414.21,linearGain:4},{type:"high-pass",cutoffHz:594.6,linearGain:1}],distortion:100,aliases:!1,pan:0,panDelay:0,reverb:6,fadeInSeconds:0,fadeOutTicks:24,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"2\xD7",amplitude:0,waveform:"sawtooth",pulseWidth:5},{frequency:"4\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"0.25\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"punch",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"vibratoDepth",envelope:"rise",inverse:!1,perEnvelopeSpeed:9,perEnvelopeLowerBound:1,perEnvelopeUpperBound:2,discrete:!1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"distortion",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"electric guitar 2",midiProgram:30,settings:{type:"PWM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:5.6569},{type:"high-pass",cutoffHz:1681.79,linearGain:.25},{type:"peak",cutoffHz:5656.85,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:5.6569},{type:"high-pass",cutoffHz:1681.79,linearGain:.25},{type:"peak",cutoffHz:5656.85,linearGain:2}],effects:["panning","chord type","vibrato","note filter","distortion","bitcrusher","chorus","reverb"],chord:"monophonic",fastTwoNoteArp:!1,arpeggioSpeed:12,monoChordTone:0,vibrato:"custom",vibratoDepth:.68,vibratoDelay:22,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1e3,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:1e3,linearGain:2.8284}],distortion:43,aliases:!1,bitcrusherOctave:6.5,bitcrusherQuantization:71,pan:0,panDelay:0,chorus:14,reverb:13,fadeInSeconds:0,fadeOutTicks:24,pulseWidth:50,decimalOffset:0,unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"rise",inverse:!1,perEnvelopeSpeed:.3333,perEnvelopeLowerBound:.8,perEnvelopeUpperBound:1,discrete:!1},{target:"pulseWidth",envelope:"twang",inverse:!0,perEnvelopeSpeed:2.25,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:.9,discrete:!1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"bitcrusherQuantization",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}}])},{name:"Slarmoo's Box Novelty Presets",presets:me([{name:"bitcrushed artifacts",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:9656.85,linearGain:.5}],eqFilterType:!0,eqSimpleCut:9,eqSimplePeak:1,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","distortion","bitcrusher","echo"],distortion:71,aliases:!1,bitcrusherOctave:2,bitcrusherQuantization:86,pan:0,panDelay:10,echoSustain:0,echoDelayBeats:1,fadeInSeconds:0,fadeOutTicks:-6,harmonics:[0,0,0,0,0,0,0,57,0,0,0,0,0,0,100,43,0,0,14,86,0,14,0,0,0,0,0,86],unison:"none",stringSustain:14,envelopes:[],isDrum:!1}},{name:"whistle 2",midiProgram:78,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2110.37,linearGain:1.4142}],eqFilterType:!0,eqSimpleCut:6,eqSimplePeak:3,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","transition type","pitch shift","note filter","distortion","echo","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:11,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1414.21,linearGain:2},{type:"high-pass",cutoffHz:88.39,linearGain:2},{type:"peak",cutoffHz:1681.79,linearGain:4}],noteSubFilters0:[{type:"low-pass",cutoffHz:1414.21,linearGain:2},{type:"high-pass",cutoffHz:88.39,linearGain:2},{type:"peak",cutoffHz:1681.79,linearGain:4}],distortion:43,aliases:!1,pan:0,panDelay:10,echoSustain:57,echoDelayBeats:1.083,reverb:87,fadeInSeconds:.0575,fadeOutTicks:-1,harmonics:[57,0,0,0,0,0,0,0,0,86,57,0,0,0,0,0,0,0,86,0,0,0,57,29,0,29,100,0],unison:"none",envelopes:[{target:"pitchShift",envelope:"decay 1"}],isDrum:!1}},{name:"frog wuh",generalMidi:!1,settings:{type:"spectrum",eqFilter:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:6727.17,linearGain:8},{type:"low-pass",cutoffHz:13454.34,linearGain:.125}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:6727.17,linearGain:8},{type:"low-pass",cutoffHz:13454.34,linearGain:.125}],eqSubFilters1:[],effects:["panning","pitch shift","note filter"],pitchShiftSemitones:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1e3,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:1e3,linearGain:1}],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,spectrum:[100,29,14,29,0,14,0,71,0,43,14,71,0,0,71,14,100,0,71,0,43,86,43,0,43,0,0,43,29,29],envelopes:[{target:"pitchShift",envelope:"twang 1"},{target:"noteFilterAllFreqs",envelope:"twang 1"}],isDrum:!1}},{name:"stationary harmonics",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.5}],effects:["panning","transition type","chord type","vibrato"],transition:"continue",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,vibrato:"shaky",vibratoDepth:.1,vibratoDelay:0,vibratoSpeed:10,vibratoType:1,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:12,harmonics:[100,0,57,29,14,57,29,29,14,14,29,43,14,14,14,0,14,29,29,14,0,0,14,0,0,29,14,14],unison:"stationary",envelopes:[],isDrum:!1}},{name:"dead souls",generalMidi:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"high-pass",cutoffHz:353.55,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!0,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"high-pass",cutoffHz:353.55,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:1.4142}],effects:["panning","transition type","chord type","pitch shift","detune","distortion","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:24,detuneCents:-200,distortion:100,aliases:!1,pan:0,panDelay:10,chorus:14,reverb:35,fadeInSeconds:0,fadeOutTicks:-1,spectrum:[100,71,43,43,29,29,29,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,14,14,0,0],unison:"none",envelopes:[{target:"pitchShift",envelope:"random",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:24,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1.2,steps:16,seed:37,waveform:0},{target:"noteVolume",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0},{target:"detune",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!0,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0},{target:"distortion",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0}],isDrum:!1}},{name:"flutter",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"high-pass",cutoffHz:707.11,linearGain:1},{type:"peak",cutoffHz:6727.17,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:707.11,linearGain:1},{type:"peak",cutoffHz:6727.17,linearGain:2.8284}],effects:["panning","transition type","chorus","reverb","ring mod"],transition:"interrupt",clicklessTransition:!1,ringMod:100,ringModHz:100,ringModWaveformIndex:0,pan:0,panDelay:0,chorus:14,reverb:10,fadeInSeconds:0,fadeOutTicks:12,algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2",feedbackAmplitude:3,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"ringModulationHz",envelope:"fall",inverse:!1,perEnvelopeSpeed:1.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1.9},{target:"noteVolume",envelope:"blip",inverse:!1,perEnvelopeSpeed:.25,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"vinyl",generalMidi:!1,settings:{type:"noise",volume:0,eqFilter:[{type:"high-pass",cutoffHz:1414.21,linearGain:.3536},{type:"low-pass",cutoffHz:1189.21,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:1414.21,linearGain:.3536},{type:"low-pass",cutoffHz:1189.21,linearGain:.25}],effects:["panning","transition type","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:250,linearGain:.5},{type:"low-pass",cutoffHz:8e3,linearGain:1}],noteSubFilters0:[{type:"high-pass",cutoffHz:250,linearGain:.5},{type:"low-pass",cutoffHz:8e3,linearGain:1}],distortion:14,aliases:!1,bitcrusherOctave:5.5,bitcrusherQuantization:14,pan:0,panDelay:10,chorus:29,echoSustain:14,echoDelayBeats:.083,reverb:32,fadeInSeconds:0,fadeOutTicks:24,wave:"crackling",unison:"none",envelopes:[],isDrum:!1}}])}]);static valueToPreset(e){let a=e>>6,i=e&63;return l.presetCategories[a]?.presets[i]}static midiProgramToPresetValue(e){for(let a=0;a<l.presetCategories.length;a++){let i=l.presetCategories[a];for(let n=0;n<i.presets.length;n++){let s=i.presets[n];if(s.generalMidi&&s.midiProgram==e)return(a<<6)+n}}return null}static nameToPresetValue(e){for(let a=0;a<l.presetCategories.length;a++){let i=l.presetCategories[a];for(let n=0;n<i.presets.length;n++)if(i.presets[n].name==e)return(a<<6)+n}return null}static instrumentToPreset(e){return l.presetCategories[0].presets.dictionary?.[Ue?.[e]]}};var Dt=class{octave=0;instruments=[];patterns=[];bars=[];muted=!1;visible=!0;name="";color=0};function Mt(l,e,a){return{interval:l,time:e,size:a}}var Et=class l{pitches;pins;start;end;continuesLastPattern;chipWaveStartOffset;constructor(e,a,i,n,s=!1,r=0){this.pitches=[e],this.pins=[Mt(0,0,n),Mt(0,i-a,s?0:n)],this.start=a,this.end=i,this.continuesLastPattern=!1,this.chipWaveStartOffset=r}pickMainInterval(){let e=0,a=0;for(let i=1;i<this.pins.length;i++){let n=this.pins[i-1],s=this.pins[i];if(n.interval==s.interval){let r=s.time-n.time;e<r&&(e=r,a=n.interval)}}if(e==0){let i=0;for(let n=0;n<this.pins.length;n++){let s=this.pins[n];i<s.size&&(i=s.size,a=s.interval)}}return a}clone(){let e=new l(-1,this.start,this.end,3);e.pitches=this.pitches.concat(),e.pins=[];for(let a of this.pins)e.pins.push(Mt(a.interval,a.time,a.size));return e.continuesLastPattern=this.continuesLastPattern,e}getEndPinIndex(e){let a;for(a=1;a<this.pins.length-1&&!(this.pins[a].time+this.start>e);a++);return a}},pt=class{notes=[];instruments=[0];cloneNotes(){let e=[];for(let a of this.notes)e.push(a.clone());return e}reset(){this.notes.length=0,this.instruments[0]=0,this.instruments.length=1}toJsonObject(e,a,i){let n=[];for(let r of this.notes){let u=a.instruments[this.instruments[0]],c=Math.max(0,t.modCount-r.pitches[0]-1),v=e.getVolumeCapForSetting(i,u.modulators[c],u.modFilterTypes[c]),o=[];for(let d of r.pins){let g=Math.round(i?d.size:d.size*100/v);o.push({tick:(d.time+r.start)*t.rhythms[e.rhythm].stepsPerBeat/t.partsPerBeat,pitchBend:d.interval,volume:g,forMod:i})}let y={pitches:r.pitches,points:o};r.start==0&&(y.continuesLastPattern=r.continuesLastPattern),n.push(y)}let s={notes:n};return e.patternInstruments&&(s.instruments=this.instruments.map(r=>r+1)),s}fromJsonObject(e,a,i,n,s,r,u="auto"){let c=u.toLowerCase();if(a.patternInstruments)if(Array.isArray(e.instruments)){let v=e.instruments,o=q(t.instrumentCountMin,a.getMaxInstrumentsPerPatternForChannel(i)+1,v.length);for(let y=0;y<o;y++)this.instruments[y]=q(0,i.instruments.length,(v[y]|0)-1);this.instruments.length=o}else this.instruments[0]=q(0,i.instruments.length,(e.instrument|0)-1),this.instruments.length=1;if(e.notes&&e.notes.length>0){let v=Math.min(a.beatsPerBar*t.partsPerBeat*(r?t.modCount:1),e.notes.length>>>0);for(let o=0;o<e.notes.length&&!(o>=v);o++){let y=e.notes[o];if(!y||!y.pitches||!(y.pitches.length>=1)||!y.points||!(y.points.length>=2))continue;let d=new Et(0,0,0,0);d.pitches=[],d.pins=[];for(let M=0;M<y.pitches.length;M++){let S=y.pitches[M]|0;if(d.pitches.indexOf(S)==-1&&(d.pitches.push(S),d.pitches.length>=t.maxChordSize))break}if(d.pitches.length<1)continue;let g=0,h=i.instruments[this.instruments[0]],m=Math.max(0,t.modCount-d.pitches[0]-1);for(let M=0;M<y.points.length;M++){let S=y.points[M];if(S==null||S.tick==null)continue;let C=S.pitchBend==null?0:S.pitchBend|0,W=Math.round(+S.tick*t.partsPerBeat/n),L=a.getVolumeCapForSetting(r,h.modulators[m],h.modFilterTypes[m]),T;S.volume==null?T=L:S.forMod==null?T=Math.max(0,Math.min(L,Math.round((S.volume|0)*L/100))):T=(S.forMod|0)>0?Math.round(S.volume|0):Math.max(0,Math.min(L,Math.round((S.volume|0)*L/100))),!(W>a.beatsPerBar*t.partsPerBeat)&&(d.pins.length==0&&(d.start=W,g=C),d.pins.push(Mt(C-g,W-d.start,T)))}if(d.pins.length<2)continue;d.end=d.pins[d.pins.length-1].time+d.start;let p=s?t.drumCount-1:t.maxPitch,I=p,F=0;for(let M=0;M<d.pitches.length;M++)d.pitches[M]+=g,(d.pitches[M]<0||d.pitches[M]>p)&&(d.pitches.splice(M,1),M--),d.pitches[M]<I&&(I=d.pitches[M]),d.pitches[M]>F&&(F=d.pitches[M]);if(!(d.pitches.length<1)){for(let M=0;M<d.pins.length;M++){let S=d.pins[M];S.interval+I<0&&(S.interval=-I),S.interval+F>p&&(S.interval=p-F),M>=2&&S.interval==d.pins[M-1].interval&&S.interval==d.pins[M-2].interval&&S.size==d.pins[M-1].size&&S.size==d.pins[M-2].size&&(d.pins.splice(M-1,1),M--)}if(d.start==0?d.continuesLastPattern=y.continuesLastPattern===!0:d.continuesLastPattern=!1,c!="ultrabox"&&c!="slarmoosbox"&&h.modulators[m]==t.modulators.dictionary.tempo.index)for(let M of d.pins){let W=M.size+30;M.size=W-1}this.notes.push(d)}}}}};function yn(l,e){l.push(D[e>>>6*5&3]),l.push(D[e>>>6*4&63]),l.push(D[e>>>6*3&63]),l.push(D[e>>>6*2&63]),l.push(D[e>>>6*1&63]),l.push(D[e>>>6*0&63])}function Zt(l,e){let a=0;return a|=E[l.charCodeAt(e++)]<<6*5,a|=E[l.charCodeAt(e++)]<<6*4,a|=E[l.charCodeAt(e++)]<<6*3,a|=E[l.charCodeAt(e++)]<<6*2,a|=E[l.charCodeAt(e++)]<<6*1,a|=E[l.charCodeAt(e++)]<<6*0,a}function ut(l,e,a,i,n,s){l.push(D[e]),l.push(D[+(a>0)]);let r=Math.round(Math.abs(a)*1e3),u=Math.floor(r/63);l.push(D[r%63],D[u%63],D[Math.floor(u/63)]),l.push(D[+(i>0)]);let c=Math.round(Math.abs(i)*1e3),v=Math.floor(c/63);l.push(D[c%63],D[v%63],D[Math.floor(v/63)]),l.push(D[+(n>0)]);let o=Math.round(Math.abs(n)*1e3);l.push(D[o%63],D[Math.floor(o/63)]),l.push(D[+(s>0)]);let y=Math.round(Math.abs(s)*1e3);l.push(D[y%63],D[Math.floor(y/63)])}function Jn(l){let e=q(0,t.keys.length,l),a=0;return l===12?(e=0,a=1):l===13?(e=6,a=-1):l===14?(e=0,a=-1):l===15&&(e=5,a=-1),[e,a]}var D=[48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,45,95],E=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,0,0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0,0,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,0,0,0,0,63,0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,0,0,0,0],Je=class{$=[];oe=0;constructor(e,a,i){for(let n=a;n<i;n++){let s=E[e.charCodeAt(n)];this.$.push(s>>5&1),this.$.push(s>>4&1),this.$.push(s>>3&1),this.$.push(s>>2&1),this.$.push(s>>1&1),this.$.push(s&1)}}read(e){let a=0;for(;e>0;)a=a<<1,a+=this.$[this.oe++],e--;return a}readLongTail(e,a){let i=e,n=a;for(;this.$[this.oe++];)i+=1<<n,n++;for(;n>0;)n--,this.$[this.oe++]&&(i+=1<<n);return i}readPartDuration(){return this.readLongTail(1,3)}readLegacyPartDuration(){return this.readLongTail(1,2)}readPinCount(){return this.readLongTail(1,0)}readPitchInterval(){return this.read(1)?-this.readLongTail(1,3):this.readLongTail(1,3)}},ft=class{ee=0;$=[];clear(){this.ee=0}write(e,a){for(e--;e>=0;)this.$[this.ee++]=a>>>e&1,e--}writeLongTail(e,a,i){if(i<e)throw new Error("value out of bounds");i-=e;let n=a;for(;i>=1<<n;)this.$[this.ee++]=1,i-=1<<n,n++;for(this.$[this.ee++]=0;n>0;)n--,this.$[this.ee++]=i>>>n&1}writePartDuration(e){this.writeLongTail(1,3,e)}writePinCount(e){this.writeLongTail(1,0,e)}writePitchInterval(e){e<0?(this.write(1,1),this.writeLongTail(1,3,-e)):(this.write(1,0),this.writeLongTail(1,3,e))}concat(e){for(let a=0;a<e.ee;a++)this.$[this.ee++]=e.$[a]}encodeBase64(e){for(let a=0;a<this.ee;a+=6){let i=this.$[a]<<5|this.$[a+1]<<4|this.$[a+2]<<3|this.$[a+3]<<2|this.$[a+4]<<1|this.$[a+5];e.push(D[i])}return e}lengthBase64(){return Math.ceil(this.ee/6)}},Nt=class l{static me=t.jsonFormat;static ge=2;static ve=9;static ye=1;static Se=6;static be=1;static xe=4;static Ie=1;static Fe=5;static we=1;static le=5;static Me=100;title;scale;scaleCustom=[];key;octave;tempo;reverb;beatsPerBar;barCount;patternsPerChannel;rhythm;layeredInstruments;patternInstruments;loopStart;loopLength;pitchChannelCount;noiseChannelCount;modChannelCount;channels=[];limitDecay=4;limitRise=4e3;compressionThreshold=1;limitThreshold=1;compressionRatio=1;limitRatio=1;masterGain=1;inVolumeCap=0;outVolumeCap=0;outVolumeCapL=0;outVolumeCapR=0;eqFilter=new Ee;eqFilterType=!1;eqFilterSimpleCut=t.filterSimpleCutRange-1;eqFilterSimplePeak=0;eqSubFilters=[];tmpEqFilterStart;tmpEqFilterEnd;constructor(e){e!=null?this.fromBase64String(e):this.initToDefault(!0)}getNewNoteVolume=(e,a,i,n)=>{if(!e||a==null||i==null||n==null)return t.noteSizeMax;{n=t.modCount-n-1;let s=this.channels[a].instruments[i],r=t.modulators[s.modulators[n]].newNoteVol,u=s.modulators[n],c=t.modulators.dictionary.tempo.index;if(u==c&&(r=this.tempo-t.modulators[c].convertRealFactor),!t.modulators[u].forSong&&s.modInstruments[n][0]<this.channels[s.modChannels[n][0]].instruments.length){let v=t.modulators.dictionary.chorus.index,o=t.modulators.dictionary.reverb.index,y=t.modulators.dictionary.gain.index,d=t.modulators.dictionary.pan.index,g=t.modulators.dictionary["pan delay"].index,h=t.modulators.dictionary.distortion.index,m=t.modulators.dictionary.detune.index,p=t.modulators.dictionary["vibrato depth"].index,I=t.modulators.dictionary["vibrato speed"].index,F=t.modulators.dictionary["vibrato delay"].index,M=t.modulators.dictionary["arp speed"].index,S=t.modulators.dictionary["bit crush"].index,C=t.modulators.dictionary["freq crush"].index,W=t.modulators.dictionary.echo.index,L=t.modulators.dictionary["echo delay"].index,T=t.modulators.dictionary["echo ping pong"].index,k=t.modulators.dictionary["pitch shift"].index,A=t.modulators.dictionary["ring modulation"].index,z=t.modulators.dictionary["ring mod hertz"].index,B=t.modulators.dictionary.granular.index,N=t.modulators.dictionary["grain freq"].index,G=t.modulators.dictionary["grain size"].index,U=t.modulators.dictionary["grain range"].index,V=t.modulators.dictionary["envelope speed"].index,f=t.modulators.dictionary["individual envelope speed"].index,b=t.modulators.dictionary["individual envelope lower bound"].index,x=t.modulators.dictionary["individual envelope upper bound"].index,w=s.modInstruments[n][0],P=this.channels[s.modChannels[n][0]].instruments[w].effectCount;switch(u){case v:r=this.channels[s.modChannels[n][0]].instruments[w].effects[P].chorus-t.modulators[v].convertRealFactor;break;case o:r=this.channels[s.modChannels[n][0]].instruments[w].effects[P].reverb-t.modulators[o].convertRealFactor;break;case y:r=this.channels[s.modChannels[n][0]].instruments[w].effects[P].gain-t.modulators[y].convertRealFactor;break;case d:r=this.channels[s.modChannels[n][0]].instruments[w].effects[P].pan-t.modulators[d].convertRealFactor;break;case g:r=this.channels[s.modChannels[n][0]].instruments[w].effects[P].panDelay-t.modulators[g].convertRealFactor;break;case h:r=this.channels[s.modChannels[n][0]].instruments[w].effects[P].distortion-t.modulators[h].convertRealFactor;break;case m:r=this.channels[s.modChannels[n][0]].instruments[w].detune;break;case p:r=Math.round(this.channels[s.modChannels[n][0]].instruments[w].vibratoDepth*25-t.modulators[p].convertRealFactor);break;case I:r=this.channels[s.modChannels[n][0]].instruments[w].vibratoSpeed-t.modulators[I].convertRealFactor;break;case F:r=this.channels[s.modChannels[n][0]].instruments[w].vibratoDelay-t.modulators[F].convertRealFactor;break;case M:r=this.channels[s.modChannels[n][0]].instruments[w].arpeggioSpeed-t.modulators[M].convertRealFactor;break;case S:r=this.channels[s.modChannels[n][0]].instruments[w].effects[P].bitcrusherQuantization-t.modulators[S].convertRealFactor;break;case C:r=this.channels[s.modChannels[n][0]].instruments[w].effects[P].bitcrusherFreq-t.modulators[C].convertRealFactor;break;case W:r=this.channels[s.modChannels[n][0]].instruments[w].effects[P].echoSustain-t.modulators[W].convertRealFactor;break;case L:r=this.channels[s.modChannels[n][0]].instruments[w].effects[P].echoDelay-t.modulators[L].convertRealFactor;break;case T:r=this.channels[s.modChannels[n][0]].instruments[w].effects[P].echoPingPong-t.modulators[T].convertRealFactor;break;case k:r=this.channels[s.modChannels[n][0]].instruments[w].pitchShift;break;case A:r=this.channels[s.modChannels[n][0]].instruments[w].effects[P].ringModulation-t.modulators[A].convertRealFactor;break;case z:r=this.channels[s.modChannels[n][0]].instruments[w].effects[P].ringModulationHz-t.modulators[z].convertRealFactor;break;case B:r=this.channels[s.modChannels[n][0]].instruments[w].effects[P].granular-t.modulators[B].convertRealFactor;break;case N:r=this.channels[s.modChannels[n][0]].instruments[w].effects[P].grainAmounts-t.modulators[N].convertRealFactor;break;case G:r=this.channels[s.modChannels[n][0]].instruments[w].effects[P].grainSize-t.modulators[G].convertRealFactor;break;case U:r=this.channels[s.modChannels[n][0]].instruments[w].effects[P].grainRange-t.modulators[U].convertRealFactor;break;case V:r=this.channels[s.modChannels[n][0]].instruments[w].envelopeSpeed-t.modulators[V].convertRealFactor;break;case f:r=t.perEnvelopeSpeedToIndices[this.channels[s.modChannels[n][0]].instruments[w].envelopes[s.modEnvelopeNumbers[n]].perEnvelopeSpeed]-t.modulators[f].convertRealFactor;break;case b:r=this.channels[s.modChannels[n][0]].instruments[w].envelopes[s.modEnvelopeNumbers[n]].perEnvelopeLowerBound-t.modulators[b].convertRealFactor;break;case x:r=this.channels[s.modChannels[n][0]].instruments[w].envelopes[s.modEnvelopeNumbers[n]].perEnvelopeUpperBound-t.modulators[x].convertRealFactor;break}}return r??t.noteSizeMax}};getVolumeCap=(e,a,i,n)=>{if(!e||a==null||i==null||n==null)return t.noteSizeMax;{n=t.modCount-n-1;let s=this.channels[a].instruments[i],r=t.modulators[s.modulators[n]],u=r.maxRawVol;return u!=null?((r.name=="post eq"||r.name=="pre eq"||r.name=="song eq")&&(u=t.filterMorphCount-1,s.modFilterTypes[n]>0&&s.modFilterTypes[n]%2?u=t.filterFreqRange:s.modFilterTypes[n]>0&&(u=t.filterGainRange)),u):t.noteSizeMax}};getVolumeCapForSetting=(e,a,i)=>{if(e){let n=t.modulators[a].maxRawVol;return n!=null?(i!=null&&(t.modulators[a].name=="post eq"||t.modulators[a].name=="pre eq"||t.modulators[a].name=="song eq")&&(n=t.filterMorphCount-1,i>0&&i%2?n=t.filterFreqRange:i>0&&(n=t.filterGainRange)),n):t.noteSizeMax}else return t.noteSizeMax};getChannelCount(){return this.pitchChannelCount+this.noiseChannelCount+this.modChannelCount}getMaxInstrumentsPerChannel(){return Math.max(this.layeredInstruments?t.layeredInstrumentCountMax:t.instrumentCountMin,this.patternInstruments?t.patternInstrumentCountMax:t.instrumentCountMin)}getMaxInstrumentsPerPattern(e){return this.getMaxInstrumentsPerPatternForChannel(this.channels[e])}getMaxInstrumentsPerPatternForChannel(e){return this.layeredInstruments?Math.min(t.layeredInstrumentCountMax,e.instruments.length):1}getChannelIsNoise(e){return e>=this.pitchChannelCount&&e<this.pitchChannelCount+this.noiseChannelCount}getChannelIsMod(e){return e>=this.pitchChannelCount+this.noiseChannelCount}static secondsToFadeInSetting(e){return q(0,t.fadeInRange,Math.round((-.95+Math.sqrt(.9025+.2*e/.0125))/.1))}static ticksToFadeOutSetting(e){let a=t.fadeOutTicks[0];if(e<=a)return 0;for(let i=1;i<t.fadeOutTicks.length;i++){let n=t.fadeOutTicks[i];if(e<=n)return e<(a+n)/2?i-1:i;a=n}return t.fadeOutTicks.length-1}initToDefault(e=!0){this.scale=1,this.scaleCustom=[!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0],this.key=0,this.octave=0,this.loopStart=0,this.loopLength=4,this.tempo=151,this.reverb=0,this.beatsPerBar=8,this.barCount=16,this.patternsPerChannel=8,this.rhythm=1,this.layeredInstruments=!1,this.patternInstruments=!1,this.eqFilter.reset();for(let a=0;a<t.filterMorphCount-1;a++)this.eqSubFilters[a]=null;if(this.title="Untitled",document.title=this.title+" - "+Fe.versionDisplayName,e){this.pitchChannelCount=3,this.noiseChannelCount=1,this.modChannelCount=1;for(let a=0;a<this.getChannelCount();a++){let i=a>=this.pitchChannelCount&&a<this.pitchChannelCount+this.noiseChannelCount,n=a>=this.pitchChannelCount+this.noiseChannelCount;this.channels.length<=a&&(this.channels[a]=new Dt,this.channels[a].color=a);let s=this.channels[a];s.octave=Math.max(4-a,0);for(let r=0;r<this.patternsPerChannel;r++)s.patterns.length<=r?s.patterns[r]=new pt:s.patterns[r].reset();s.patterns.length=this.patternsPerChannel;for(let r=0;r<t.instrumentCountMin;r++)s.instruments.length<=r&&(s.instruments[r]=new ze(i,n)),s.instruments[r].setTypeAndReset(n?10:i?2:0,i,n);s.instruments.length=t.instrumentCountMin;for(let r=0;r<this.barCount;r++)s.bars[r]=0;s.bars.length=this.barCount}this.channels.length=this.getChannelCount()}}toBase64String(){let e,a=[];a.push(l.Me),a.push(D[l.le]),a.push(78);var i=encodeURIComponent(this.title);a.push(D[i.length>>6],D[i.length&63]);for(let h=0;h<i.length;h++)a.push(i.charCodeAt(h));if(a.push(110,D[this.pitchChannelCount],D[this.noiseChannelCount],D[this.modChannelCount]),a.push(115,D[this.scale]),this.scale==t.scales.dictionary.Custom.index)for(var n=1;n<t.pitchesPerOctave;n++)a.push(D[this.scaleCustom[n]?1:0]);if(a.push(107,D[this.key],D[this.octave-t.octaveMin]),a.push(108,D[this.loopStart>>6],D[this.loopStart&63]),a.push(101,D[this.loopLength-1>>6],D[this.loopLength-1&63]),a.push(116,D[this.tempo>>6],D[this.tempo&63]),a.push(97,D[this.beatsPerBar-1]),a.push(103,D[this.barCount-1>>6],D[this.barCount-1&63]),a.push(106,D[this.patternsPerChannel-1>>6],D[this.patternsPerChannel-1&63]),a.push(114,D[this.rhythm]),a.push(79),this.compressionRatio!=1||this.limitRatio!=1||this.limitRise!=4e3||this.limitDecay!=4||this.limitThreshold!=1||this.compressionThreshold!=1||this.masterGain!=1?(a.push(D[Math.round(this.compressionRatio<1?this.compressionRatio*10:10+(this.compressionRatio-1)*60)]),a.push(D[Math.round(this.limitRatio<1?this.limitRatio*10:9+this.limitRatio)]),a.push(D[this.limitDecay]),a.push(D[Math.round((this.limitRise-2e3)/250)]),a.push(D[Math.round(this.compressionThreshold*20)]),a.push(D[Math.round(this.limitThreshold*20)]),a.push(D[Math.round(this.masterGain*50)>>6],D[Math.round(this.masterGain*50)&63])):a.push(D[63]),a.push(99),this.eqFilter==null)a.push(D[0]),console.log("Null post eq settings detected in toBase64String for song");else{a.push(D[this.eqFilter.controlPointCount]);for(let h=0;h<this.eqFilter.controlPointCount;h++){let m=this.eqFilter.controlPoints[h];a.push(D[m.type],D[Math.round(m.freq)],D[Math.round(m.gain)])}}let s=0;for(let h=0;h<t.filterMorphCount-1;h++)s|=+(this.eqSubFilters[h+1]!=null)<<h;a.push(D[s>>6],D[s&63]);for(let h=0;h<t.filterMorphCount-1;h++)if(s&1<<h){a.push(D[this.eqSubFilters[h+1].controlPointCount]);for(let m=0;m<this.eqSubFilters[h+1].controlPointCount;m++){let p=this.eqSubFilters[h+1].controlPoints[m];a.push(D[p.type],D[Math.round(p.freq)],D[Math.round(p.gain)])}}a.push(85);for(let h=0;h<this.getChannelCount();h++){var r=encodeURIComponent(this.channels[h].name);a.push(D[r.length>>6],D[r.length&63]);for(let m=0;m<r.length;m++)a.push(r.charCodeAt(m));a.push(D[this.channels[h].color%60])}if(a.push(105,D[this.layeredInstruments<<1|this.patternInstruments]),this.layeredInstruments||this.patternInstruments)for(let h=0;h<this.getChannelCount();h++)a.push(D[this.channels[h].instruments.length-t.instrumentCountMin]);a.push(111);for(let h=0;h<this.pitchChannelCount;h++)a.push(D[this.channels[h].octave]);for(let h=0;h<this.getChannelCount();h++)for(let m=0;m<this.channels[h].instruments.length;m++){let p=this.channels[h].instruments[m];if(a.push(84,D[p.type]),a.push(118,D[p.volume+t.volumeRange/2>>6],D[p.volume+t.volumeRange/2&63]),a.push(117,D[p.preset>>6],D[p.preset&63]),a.push(102),a.push(D[+p.noteFilterType]),p.noteFilterType)a.push(D[p.noteFilterSimpleCut]),a.push(D[p.noteFilterSimplePeak]);else{if(p.noteFilter==null)a.push(D[0]),console.log("Null pre eq settings detected in toBase64String for channelIndex "+h+", instrumentIndex "+m);else{a.push(D[p.noteFilter.controlPointCount]);for(let F=0;F<p.noteFilter.controlPointCount;F++){let M=p.noteFilter.controlPoints[F];a.push(D[M.type],D[Math.round(M.freq)],D[Math.round(M.gain)])}}let I=0;for(let F=0;F<t.filterMorphCount-1;F++)I|=+(p.noteSubFilters[F+1]!=null)<<F;a.push(D[I>>6],D[I&63]);for(let F=0;F<t.filterMorphCount-1;F++)if(I&1<<F){a.push(D[p.noteSubFilters[F+1].controlPointCount]);for(let M=0;M<p.noteSubFilters[F+1].controlPointCount;M++){let S=p.noteSubFilters[F+1].controlPoints[M];a.push(D[S.type],D[Math.round(S.freq)],D[Math.round(S.gain)])}}}a.push(113,D[p.effectCount]);for(let I=0;I<p.effectCount;I++){if(p.effects[I]!=null)a.push(D[p.effects[I].type&63]);else{a.push(D[0]);continue}let F=p.effects[I];if(F.type==5)if(a.push(D[+F.eqFilterType]),F.eqFilterType)a.push(D[F.eqFilterSimpleCut]),a.push(D[F.eqFilterSimplePeak]);else{if(F.eqFilter==null)a.push(D[0]),console.log("Null post eq settings detected in toBase64String for channelIndex "+h+", instrumentIndex "+m);else{a.push(D[F.eqFilter.controlPointCount]);for(let S=0;S<F.eqFilter.controlPointCount;S++){let C=F.eqFilter.controlPoints[S];a.push(D[C.type],D[Math.round(C.freq)],D[Math.round(C.gain)])}}let M=0;for(let S=0;S<t.filterMorphCount-1;S++)M|=+(F.eqSubFilters[S+1]!=null)<<S;a.push(D[M>>6],D[M&63]);for(let S=0;S<t.filterMorphCount-1;S++)if(M&1<<S){a.push(D[F.eqSubFilters[S+1].controlPointCount]);for(let C=0;C<F.eqSubFilters[S+1].controlPointCount;C++){let W=F.eqSubFilters[S+1].controlPoints[C];a.push(D[W.type],D[Math.round(W.freq)],D[Math.round(W.gain)])}}}else F.type==3?(a.push(D[F.distortion]),a.push(D[+p.aliases])):F.type==4?a.push(D[F.bitcrusherFreq],D[F.bitcrusherQuantization]):F.type==9?a.push(D[F.gain>>6],D[F.gain&63]):F.type==2?(a.push(D[F.pan>>6],D[F.pan&63]),a.push(D[F.panDelay]),a.push(D[F.panMode])):F.type==10?(a.push(D[F.flanger]),a.push(D[F.flangerSpeed]),a.push(D[F.flangerDepth]),a.push(D[F.flangerFeedback])):F.type==1?a.push(D[F.chorus]):F.type==6?a.push(D[F.echoSustain],D[F.echoDelay],D[F.echoPingPong>>6],D[F.echoPingPong&63]):F.type==0?a.push(D[F.reverb]):F.type==8?(a.push(D[F.granular]),a.push(D[F.grainSize]),a.push(D[F.grainAmounts]),a.push(D[F.grainRange])):F.type==7&&(a.push(D[F.ringModulation]),a.push(D[F.ringModulationHz]),a.push(D[F.ringModWaveformIndex]),a.push(D[F.ringModPulseWidth]),a.push(D[F.ringModHzOffset-t.rmHzOffsetMin>>6],D[F.ringModHzOffset-t.rmHzOffsetMin&63]))}if(a.push(D[p.mdeffects&63]),Tt(p.mdeffects)&&a.push(D[p.transition]),kt(p.mdeffects)&&(a.push(D[p.chord]),p.chord==t.chords.dictionary.arpeggio.index&&(a.push(D[p.arpeggioSpeed]),a.push(D[+p.fastTwoNoteArp])),p.chord==t.chords.dictionary.monophonic.index&&a.push(D[p.monoChordTone])),It(p.mdeffects)&&a.push(D[p.pitchShift]),Ft(p.mdeffects)&&a.push(D[p.detune-t.detuneMin>>6],D[p.detune-t.detuneMin&63]),wt(p.mdeffects)&&(a.push(D[p.vibrato]),p.vibrato==t.vibratos.length&&(a.push(D[Math.round(p.vibratoDepth*25)]),a.push(D[p.vibratoSpeed]),a.push(D[Math.round(p.vibratoDelay)]),a.push(D[p.vibratoType]))),p.type!=4&&(a.push(100,D[p.fadeIn],D[p.fadeOut]),a.push(D[+p.clicklessTransition])),p.type==5||p.type==7){a.push(72);let I=new ft;for(let F=0;F<t.harmonicsControlPoints;F++)I.write(t.harmonicsControlPointBits,p.harmonicsWave.harmonics[F]);I.encodeBase64(a)}if(p.type==0){p.chipWave>186?(a.push(119,D[p.chipWave-186]),a.push(D[3])):p.chipWave>124?(a.push(119,D[p.chipWave-124]),a.push(D[2])):p.chipWave>62?(a.push(119,D[p.chipWave-62]),a.push(D[1])):(a.push(119,D[p.chipWave]),a.push(D[0])),a.push(104,D[p.unison]),p.unison==t.unisons.length&&ut(a,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign),a.push(121);let I=q(0,32,p.chipWaveLoopMode)<<1|(p.isUsingAdvancedLoopControls?1:0);a.push(D[I]);let F=q(0,32,0)<<2|(p.chipWaveInStereo?1:0)<<1|(p.chipWavePlayBackwards?1:0);a.push(D[F]),yn(a,p.chipWaveLoopStart),yn(a,p.chipWaveLoopEnd),yn(a,p.chipWaveStartOffset)}else if(p.type==1||p.type==11){if(p.type==1)a.push(65,D[p.algorithm]),a.push(70,D[p.feedbackType]);else{if(a.push(65,D[p.algorithm6Op]),p.algorithm6Op==0){a.push(67,D[p.customAlgorithm.carrierCount]),a.push(113);for(let I=0;I<p.customAlgorithm.modulatedBy.length;I++){for(let F=0;F<p.customAlgorithm.modulatedBy[I].length;F++)a.push(D[p.customAlgorithm.modulatedBy[I][F]]);a.push(82)}a.push(113)}if(a.push(70,D[p.feedbackType6Op]),p.feedbackType6Op==0){a.push(113);for(let I=0;I<p.customFeedbackType.indices.length;I++){for(let F=0;F<p.customFeedbackType.indices[I].length;F++)a.push(D[p.customFeedbackType.indices[I][F]]);a.push(82)}a.push(113)}}a.push(66,D[p.feedbackAmplitude]),a.push(81);for(let I=0;I<(p.type==11?6:t.operatorCount);I++)a.push(D[p.operators[I].frequency]);a.push(80);for(let I=0;I<(p.type==11?6:t.operatorCount);I++)a.push(D[p.operators[I].amplitude]);a.push(82);for(let I=0;I<(p.type==11?6:t.operatorCount);I++)a.push(D[p.operators[I].waveform]),p.operators[I].waveform==2&&a.push(D[p.operators[I].pulseWidth])}else if(p.type==9){p.chipWave>186?(a.push(119,D[p.chipWave-186]),a.push(D[3])):p.chipWave>124?(a.push(119,D[p.chipWave-124]),a.push(D[2])):p.chipWave>62?(a.push(119,D[p.chipWave-62]),a.push(D[1])):(a.push(119,D[p.chipWave]),a.push(D[0])),a.push(104,D[p.unison]),p.unison==t.unisons.length&&ut(a,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign),a.push(77);for(let I=0;I<64;I++)a.push(D[p.customChipWave[I]+24])}else if(p.type==2)a.push(119,D[p.chipNoise]),a.push(104,D[p.unison]),p.unison==t.unisons.length&&ut(a,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign);else if(p.type==3){a.push(83);let I=new ft;for(let F=0;F<t.spectrumControlPoints;F++)I.write(t.spectrumControlPointBits,p.spectrumWave.spectrum[F]);I.encodeBase64(a),a.push(104,D[p.unison]),p.unison==t.unisons.length&&ut(a,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign)}else if(p.type==4){a.push(122);for(let F=0;F<t.drumCount;F++)a.push(D[p.drumsetEnvelopes[F]]);a.push(83);let I=new ft;for(let F=0;F<t.drumCount;F++)for(let M=0;M<t.spectrumControlPoints;M++)I.write(t.spectrumControlPointBits,p.drumsetSpectrumWaves[F].spectrum[M]);I.encodeBase64(a),a.push(104,D[p.unison]),p.unison==t.unisons.length&&ut(a,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign)}else if(p.type==5)a.push(104,D[p.unison]),p.unison==t.unisons.length&&ut(a,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign);else if(p.type==6)a.push(87,D[p.pulseWidth]),a.push(D[p.decimalOffset>>6],D[p.decimalOffset&63]),a.push(104,D[p.unison]),p.unison==t.unisons.length&&ut(a,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign);else if(p.type==8)a.push(120,D[p.supersawDynamism],D[p.supersawSpread],D[p.supersawShape]),a.push(87,D[p.pulseWidth]),a.push(D[p.decimalOffset>>6],D[p.decimalOffset&63]);else if(p.type==7){if(t.stringSustainRange>32||!1)throw new Error("Not enough bits to represent sustain value and type in same base64 character.");a.push(104,D[p.unison]),p.unison==t.unisons.length&&ut(a,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign),a.push(73,D[p.stringSustain|p.stringSustainType<<5])}else if(p.type!=10)throw new Error("Unknown instrument type.");a.push(69,D[p.envelopeCount]),a.push(D[p.envelopeSpeed]);for(let I=0;I<p.envelopeCount;I++){a.push(D[p.envelopes[I].target]),t.instrumentAutomationTargets[p.envelopes[I].target].maxCount>1&&a.push(D[p.envelopes[I].index]),a.push(D[p.envelopes[I].envelope]),t.newEnvelopes[p.envelopes[I].envelope].name=="pitch"?p.isNoiseInstrument?(a.push(D[p.envelopes[I].pitchEnvelopeStart]),a.push(D[p.envelopes[I].pitchEnvelopeEnd])):(a.push(D[p.envelopes[I].pitchEnvelopeStart>>6],D[p.envelopes[I].pitchEnvelopeStart&63]),a.push(D[p.envelopes[I].pitchEnvelopeEnd>>6],D[p.envelopes[I].pitchEnvelopeEnd&63])):t.newEnvelopes[p.envelopes[I].envelope].name=="random"?(a.push(D[p.envelopes[I].steps]),a.push(D[p.envelopes[I].seed]),a.push(D[p.envelopes[I].waveform])):t.newEnvelopes[p.envelopes[I].envelope].name=="lfo"&&(a.push(D[p.envelopes[I].waveform]),(p.envelopes[I].waveform==5||p.envelopes[I].waveform==6)&&a.push(D[p.envelopes[I].steps]));let F=+p.envelopes[I].discrete;F=F<<1,F+=+p.envelopes[I].inverse,a.push(D[F]?D[F]:D[0]),t.newEnvelopes[p.envelopes[I].envelope].name!="pitch"&&t.newEnvelopes[p.envelopes[I].envelope].name!="note size"&&t.newEnvelopes[p.envelopes[I].envelope].name!="punch"&&t.newEnvelopes[p.envelopes[I].envelope].name!="none"&&a.push(D[t.perEnvelopeSpeedToIndices[p.envelopes[I].perEnvelopeSpeed]]),a.push(D[p.envelopes[I].perEnvelopeLowerBound*10]),a.push(D[p.envelopes[I].perEnvelopeUpperBound*10])}}a.push(98),e=new ft;let u=0;for(;1<<u<this.patternsPerChannel+1;)u++;for(let h=0;h<this.getChannelCount();h++)for(let m=0;m<this.barCount;m++)e.write(u,this.channels[h].bars[m]);e.encodeBase64(a),a.push(112),e=new ft;let c=new ft,v=l.getNeededBits(t.noteSizeMax);for(let h=0;h<this.getChannelCount();h++){let m=this.channels[h],p=this.getMaxInstrumentsPerPattern(h),I=this.getChannelIsNoise(h),F=this.getChannelIsMod(h),M=l.getNeededBits(p-t.instrumentCountMin),S=l.getNeededBits(m.instruments.length-1);if(F){let k=l.getNeededBits(this.getMaxInstrumentsPerChannel()+2);for(let A=0;A<m.instruments.length;A++){let z=this.channels[h].instruments[A];for(let B=0;B<t.modCount;B++){let N=z.modChannels[B],G=z.modInstruments[B],U=z.modulators[B],V=z.modFilterTypes[B],f=z.modEnvelopeNumbers[B],b=t.modulators[U].forSong?2:0;if(U==t.modulators.dictionary.none.index&&(b=3),e.write(2,b),b==0||b==1){e.write(8,N.length);for(let x=0;x<N.length;x++)e.write(8,N[x]);e.write(8,G.length);for(let x=0;x<G.length;x++)e.write(k,G[x])}b!=3&&e.write(6,U),(t.modulators[z.modulators[B]].name=="post eq"||t.modulators[z.modulators[B]].name=="pre eq"||t.modulators[z.modulators[B]].name=="song eq")&&e.write(6,V),(t.modulators[z.modulators[B]].name=="individual envelope speed"||t.modulators[z.modulators[B]].name=="reset envelope"||t.modulators[z.modulators[B]].name=="individual envelope lower bound"||t.modulators[z.modulators[B]].name=="individual envelope upper bound")&&e.write(6,f)}}}let C=I||F?0:m.octave*t.pitchesPerOctave,W=I?4:C,L=F?[0,1,2,3,4,5]:I?[4,6,7,2,3,8,0,10]:[0,7,12,19,24,-5,-12],T=[];for(let k=0;k<L.length;k++)L[k]+=C;for(let k of m.patterns){if(this.patternInstruments){let A=Ae(t.instrumentCountMin,p,k.instruments.length);e.write(M,A-t.instrumentCountMin);for(let z=0;z<A;z++)e.write(S,k.instruments[z])}if(k.notes.length>0){e.write(1,1);let A=0;for(let z of k.notes){z.start<A&&F&&(e.write(2,0),e.write(1,1),e.writePartDuration(A-z.start)),z.start>A&&(e.write(2,0),F&&e.write(1,0),e.writePartDuration(z.start-A)),c.clear(),z.pitches.length==1?c.write(1,0):(c.write(1,1),c.write(3,z.pitches.length-2)),z.chipWaveStartOffset==0?c.write(1,0):(c.write(1,1),c.write(31,z.chipWaveStartOffset)),c.writePinCount(z.pins.length-1),F?c.write(11,z.pins[0].size):c.write(v,z.pins[0].size);let B=0,N=z.pitches[0],G=N,U=[];for(let x=1;x<z.pins.length;x++){let w=z.pins[x],P=N+w.interval;G!=P?(c.write(1,1),U.push(P),G=P):c.write(1,0),c.writePartDuration(w.time-B),B=w.time,F?c.write(11,w.size):c.write(v,w.size)}let V=String.fromCharCode.apply(null,c.encodeBase64([])),f=T.indexOf(V);f==-1?(e.write(2,1),e.concat(c)):(e.write(1,1),e.writeLongTail(0,0,f),T.splice(f,1)),T.unshift(V),T.length>10&&T.pop();let b=z.pitches.concat(U);for(let x=0;x<b.length;x++){let w=b[x],P=L.indexOf(w);if(P==-1){let R=0,O=W;if(O<w)for(;O!=w;)O++,L.indexOf(O)==-1&&R++;else for(;O!=w;)O--,L.indexOf(O)==-1&&R--;e.write(1,0),e.writePitchInterval(R)}else e.write(1,1),e.write(4,P),L.splice(P,1);L.unshift(w),L.length>16&&L.pop(),x==z.pitches.length-1?W=z.pitches[0]:W=w}z.start==0&&e.write(1,z.continuesLastPattern?1:0),A=z.end}A<this.beatsPerBar*t.partsPerBeat+ +F&&(e.write(2,0),F&&e.write(1,0),e.writePartDuration(this.beatsPerBar*t.partsPerBeat+ +F-A))}else e.write(1,0)}}let o=e.lengthBase64(),y=[];for(;o>0;)y.unshift(D[o&63]),o=o>>6;a.push(D[y.length]),Array.prototype.push.apply(a,y),e.encodeBase64(a);let d=64e3,g="";if(Fe.customSamples!=null&&Fe.customSamples.length>0&&(g="|"+Fe.customSamples.join("|")),a.length<d)return String.fromCharCode.apply(null,a)+g;{let h="";for(let m=0;m<a.length;m+=d)h+=String.fromCharCode.apply(null,a.slice(m,m+d));return h+g}}static ie(e){return e==0?e=1:e==1&&(e=0),t.envelopes[q(0,t.envelopes.length,e)]}fromBase64String(e,a="auto"){if(e==null||e==""){l.ce(),this.initToDefault(!0);return}let i=0;for(;e.charCodeAt(i)<=32;)i++;if(e.charCodeAt(i)==35&&i++,e.charCodeAt(i)==123){this.fromJsonObject(JSON.parse(i==0?e:e.substring(i)),a);return}let n=e.charCodeAt(i),s=!1,r=!1,u=!1,c=!1,v=!1,o=!1;n==100||n==116?(o=!0,v=!0,i++):n==106?(r=!0,i++):n==103?(u=!0,i++):n==117?(c=!0,i++):n==100?(r=!0,i++):n==97?(c=!0,i++):n==115?(v=!0,i++):s=!0;let y=E[e.charCodeAt(i++)];if(s&&(y==-1||y>l.ve||y<l.ge)||r&&(y==-1||y>l.Se||y<l.ye)||u&&(y==-1||y>l.xe||y<l.be)||c&&(y==-1||y>l.Fe||y<l.Ie)||(v||o)&&(y==-1||y>l.le||y<l.we))return;let d=y<2,g=y<3,h=y<4,m=y<5,p=y<6,I=y<7,F=y<8,M=y<9;this.initToDefault(s&&M||r&&m||h&&u);let S=s&&M||r&&m,C=!1;if(v||c||u){e=e.replaceAll("%7C","|");var W=e.split("|");if(e=W.shift(),Fe.customSamples==null||Fe.customSamples.join(", ")!=W.join(", ")){l.se();let f=!1,b=!1,x=!1,w=[],P=[];ye.statusTable={},ye.urlTable={},ye.totalSamples=0,ye.samplesLoaded=0,yt.dispatchEvent(new et(ye.totalSamples,ye.samplesLoaded));for(let R of W)if(R.toLowerCase()==="legacysamples")f||(f=!0,w.push(R),Xe(0));else if(R.toLowerCase()==="nintariboxsamples")b||(b=!0,w.push(R),Xe(1));else if(R.toLowerCase()==="mariopaintboxsamples")x||(x=!0,w.push(R),Xe(2));else{let O=g;if(!l.de(R,w,P,ye,O))continue}if(w.length>0&&(Fe.customSamples=w),P.length>0){let R=me(P);Fe.presetCategories[Fe.presetCategories.length]={name:"Custom Sample Presets",presets:R,index:Fe.presetCategories.length}}}}if(g&&s){for(let f of this.channels)f.instruments[0].transition=t.transitions.dictionary.interrupt.index,f.instruments[0].mdeffects|=8;this.channels[3].instruments[0].chipNoise=0}let L=null;if(s&&M||r&&m||h&&u){L=[];for(let f=L.length;f<this.getChannelCount();f++){L[f]=[];for(let b=0;b<t.instrumentCountMin;b++)L[f][b]={}}}let T=0,k=0,A=-1,z,B=!1,N=!1;for(;i<e.length;)switch(z=e.charCodeAt(i++)){case 78:{var G=(E[e.charCodeAt(i++)]<<6)+E[e.charCodeAt(i++)];this.title=decodeURIComponent(e.substring(i,i+G)),document.title=this.title+" - "+Fe.versionDisplayName,i+=G}break;case 110:{this.pitchChannelCount=E[e.charCodeAt(i++)],this.noiseChannelCount=E[e.charCodeAt(i++)],s||r&&d?this.modChannelCount=0:this.modChannelCount=E[e.charCodeAt(i++)],this.pitchChannelCount=Ae(t.pitchChannelCountMin,t.pitchChannelCountMax,this.pitchChannelCount),this.noiseChannelCount=Ae(t.noiseChannelCountMin,t.noiseChannelCountMax,this.noiseChannelCount),this.modChannelCount=Ae(t.modChannelCountMin,t.modChannelCountMax,this.modChannelCount);for(let f=this.channels.length;f<this.getChannelCount();f++)this.channels[f]=new Dt;if(this.channels.length=this.getChannelCount(),s&&M||r&&m||h&&u)for(let f=L.length;f<this.getChannelCount();f++){L[f]=[];for(let b=0;b<t.instrumentCountMin;b++)L[f][b]={}}}break;case 115:{if(this.scale=q(0,t.scales.length,E[e.charCodeAt(i++)]),this.scale==t.scales.dictionary.Custom.index)for(var U=1;U<t.pitchesPerOctave;U++)this.scaleCustom[U]=E[e.charCodeAt(i++)]==1;s&&(this.scale=0)}break;case 107:if(I&&s)this.key=q(0,t.keys.length,11-E[e.charCodeAt(i++)]),this.octave=0;else if(s||r)this.key=q(0,t.keys.length,E[e.charCodeAt(i++)]),this.octave=0;else if(u||g&&c){let f=E[e.charCodeAt(i++)],[b,x]=Jn(f);this.key=b,this.octave=x}else this.key=q(0,t.keys.length,E[e.charCodeAt(i++)]),this.octave=q(t.octaveMin,t.octaveMax+1,E[e.charCodeAt(i++)]+t.octaveMin);break;case 108:m&&s?this.loopStart=E[e.charCodeAt(i++)]:this.loopStart=(E[e.charCodeAt(i++)]<<6)+E[e.charCodeAt(i++)];break;case 101:m&&s?this.loopLength=E[e.charCodeAt(i++)]:this.loopLength=(E[e.charCodeAt(i++)]<<6)+E[e.charCodeAt(i++)]+1;break;case 116:h&&s?this.tempo=[95,120,151,190][E[e.charCodeAt(i++)]]:I&&s?this.tempo=[88,95,103,111,120,130,140,151,163,176,190,206,222,240,259][E[e.charCodeAt(i++)]]:this.tempo=E[e.charCodeAt(i++)]<<6|E[e.charCodeAt(i++)],this.tempo=q(t.tempoMin,t.tempoMax+1,this.tempo);break;case 109:M&&s?(T=E[e.charCodeAt(i++)]*12,T=q(0,t.reverbRange,T)):(r&&m||h&&u)&&(T=E[e.charCodeAt(i++)],T=q(0,t.reverbRange,T));break;case 97:g&&s?this.beatsPerBar=[6,7,8,9,10][E[e.charCodeAt(i++)]]:this.beatsPerBar=E[e.charCodeAt(i++)]+1,this.beatsPerBar=Math.max(t.beatsPerBarMin,Math.min(t.beatsPerBarMax,this.beatsPerBar));break;case 103:{let f=(E[e.charCodeAt(i++)]<<6)+E[e.charCodeAt(i++)]+1;this.barCount=Ae(t.barCountMin,t.barCountMax,f);for(let b=0;b<this.getChannelCount();b++){for(let x=this.channels[b].bars.length;x<this.barCount;x++)this.channels[b].bars[x]=x<4?1:0;this.channels[b].bars.length=this.barCount}}break;case 106:{let f;F&&s?f=E[e.charCodeAt(i++)]+1:f=(E[e.charCodeAt(i++)]<<6)+E[e.charCodeAt(i++)]+1,this.patternsPerChannel=Ae(1,t.barCountMax,f);let b=this.getChannelCount();for(let x=0;x<b;x++){let w=this.channels[x].patterns;for(let P=w.length;P<this.patternsPerChannel;P++)w[P]=new pt;w.length=this.patternsPerChannel}}break;case 105:if(M&&s||r&&m||h&&u){let f=Ae(t.instrumentCountMin,t.patternInstrumentCountMax,E[e.charCodeAt(i++)]+t.instrumentCountMin);this.layeredInstruments=!1,this.patternInstruments=f>1;for(let b=0;b<this.getChannelCount();b++){let x=b>=this.pitchChannelCount&&b<this.pitchChannelCount+this.noiseChannelCount,w=b>=this.pitchChannelCount+this.noiseChannelCount;for(let P=this.channels[b].instruments.length;P<f;P++)this.channels[b].instruments[P]=new ze(x,w);if(this.channels[b].instruments.length=f,p&&s)for(let P=0;P<f;P++)this.channels[b].instruments[P].setTypeAndReset(x?2:0,x,w);for(let P=L[b].length;P<f;P++)L[b][P]={}}}else{let f=E[e.charCodeAt(i++)];this.layeredInstruments=(f&2)!=0,this.patternInstruments=(f&1)!=0;for(let b=0;b<this.getChannelCount();b++){let x=1;(this.layeredInstruments||this.patternInstruments)&&(x=Ae(t.instrumentCountMin,this.getMaxInstrumentsPerChannel(),E[e.charCodeAt(i++)]+t.instrumentCountMin));let w=this.channels[b],P=this.getChannelIsNoise(b),R=this.getChannelIsMod(b);for(let O=w.instruments.length;O<x;O++)w.instruments[O]=new ze(P,R);w.instruments.length=x}}break;case 114:if(!c&&!v){let f=E[e.charCodeAt(i++)];this.rhythm=q(0,t.rhythms.length,f),(r&&g||s)&&((this.rhythm==t.rhythms.dictionary["\xF73 (triplets)"].index||this.rhythm==t.rhythms.dictionary["\xF76"].index)&&(B=!0),this.rhythm>=t.rhythms.dictionary["\xF76"].index&&(N=!0))}else if(v&&h||c&&m){let f=[1,1,0,1,2,3,4,5];this.rhythm=q(0,t.rhythms.length,f[E[e.charCodeAt(i++)]])}else this.rhythm=q(0,t.rhythms.length,E[e.charCodeAt(i++)]);break;case 111:if(g&&s){let f=E[e.charCodeAt(i++)];this.channels[f].octave=q(0,t.pitchOctaves,E[e.charCodeAt(i++)]+1),f>=this.pitchChannelCount&&(this.channels[f].octave=0)}else if(M&&s||r&&m||h&&u)for(let f=0;f<this.getChannelCount();f++)this.channels[f].octave=q(0,t.pitchOctaves,E[e.charCodeAt(i++)]+1),f>=this.pitchChannelCount&&(this.channels[f].octave=0);else{for(let f=0;f<this.pitchChannelCount;f++)this.channels[f].octave=q(0,t.pitchOctaves,E[e.charCodeAt(i++)]);for(let f=this.pitchChannelCount;f<this.getChannelCount();f++)this.channels[f].octave=0}break;case 84:{A++,A>=this.channels[k].instruments.length&&(k++,A=0),Ae(0,this.channels.length-1,k);let f=this.channels[k].instruments[A],b=Ae(0,11,E[e.charCodeAt(i++)]);if(r&&m||h&&u?(b==7||b==8)&&(b+=2):(r&&p||u&&!h||c&&m)&&(b==8||b==9||b==10)&&(b+=1),f.setTypeAndReset(b,k>=this.pitchChannelCount&&k<this.pitchChannelCount+this.noiseChannelCount,k>=this.pitchChannelCount+this.noiseChannelCount),(I&&s||d&&r)&&(b==0||b==9||b==6)){f.aliases=!0;let x=f.addEffect(3);x.distortion=0}B&&(f.arpeggioSpeed=9),N&&(f.fastTwoNoteArp=!0),I&&s&&f.chord!=t.chords.dictionary.simultaneous.index&&(f.mdeffects|=16)}break;case 117:{let f=E[e.charCodeAt(i++)]<<6|E[e.charCodeAt(i++)];this.channels[k].instruments[A].preset=f,r&&m||h&&u?this.channels[k].instruments[A].preset==7&&(this.channels[k].instruments[A].preset=9,this.channels[k].instruments[A].type=9):(r&&p||c&&m)&&(this.channels[k].instruments[A].preset==8&&(this.channels[k].instruments[A].preset=9,this.channels[k].instruments[A].type=9),this.channels[k].instruments[A].preset==10&&(this.channels[k].instruments[A].preset=11,this.channels[k].instruments[A].type=11)),s&&f==Fe.nameToPresetValue("grand piano 1")&&(this.channels[k].instruments[A].preset=Fe.nameToPresetValue("grand piano 3"))}break;case 119:if(g&&s){let f=[1,2,3,4,5,6,7,8,0],b=E[e.charCodeAt(i++)],x=this.channels[b].instruments[0];x.chipWave=q(0,t.chipWaves.length,f[E[e.charCodeAt(i++)]]|0),x.convertLegacySettings(L[b][0],S)}else if(p&&s){let f=[1,2,3,4,5,6,7,8,0];for(let b=0;b<this.getChannelCount();b++)for(let x of this.channels[b].instruments)b>=this.pitchChannelCount?x.chipNoise=q(0,t.chipNoises.length,E[e.charCodeAt(i++)]):x.chipWave=q(0,t.chipWaves.length,f[E[e.charCodeAt(i++)]]|0)}else if(I&&s){let f=[1,2,3,4,5,6,7,8,0];k>=this.pitchChannelCount?this.channels[k].instruments[A].chipNoise=q(0,t.chipNoises.length,E[e.charCodeAt(i++)]):this.channels[k].instruments[A].chipWave=q(0,t.chipWaves.length,f[E[e.charCodeAt(i++)]]|0)}else if(this.channels[k].instruments[A].type==2)this.channels[k].instruments[A].chipNoise=q(0,t.chipNoises.length,E[e.charCodeAt(i++)]);else if(v||c){let f=E[e.charCodeAt(i++)],b=E[e.charCodeAt(i++)];b==3?this.channels[k].instruments[A].chipWave=q(0,t.chipWaves.length,f+186):b==2?this.channels[k].instruments[A].chipWave=q(0,t.chipWaves.length,f+124):b==1?this.channels[k].instruments[A].chipWave=q(0,t.chipWaves.length,f+62):this.channels[k].instruments[A].chipWave=q(0,t.chipWaves.length,f)}else this.channels[k].instruments[A].chipWave=q(0,t.chipWaves.length,E[e.charCodeAt(i++)]);break;case 102:if(M&&s||m&&r||h&&u)if(I&&s){let f=[10,6,3,0,8,5,2],b=["none","none","none","none","decay 1","decay 2","decay 3"];if(g&&s){let x=E[e.charCodeAt(i++)],w=this.channels[x].instruments[0],P=L[x][0],R=[1,3,4,5][q(0,f.length,E[e.charCodeAt(i++)])];P.filterCutoff=f[R],P.filterResonance=0,P.filterEnvelope=t.envelopes.dictionary[b[R]],w.convertLegacySettings(P,S)}else if(p&&s)for(let x=0;x<this.getChannelCount();x++)for(let w=0;w<this.channels[x].instruments.length;w++){let P=this.channels[x].instruments[w],R=L[x][w],O=q(0,f.length,E[e.charCodeAt(i++)]+1);x<this.pitchChannelCount?(R.filterCutoff=f[O],R.filterResonance=0,R.filterEnvelope=t.envelopes.dictionary[b[O]]):(R.filterCutoff=10,R.filterResonance=0,R.filterEnvelope=t.envelopes.dictionary.none),P.convertLegacySettings(R,S)}else{let x=q(0,f.length,E[e.charCodeAt(i++)]),w=this.channels[k].instruments[A],P=L[k][A];P.filterCutoff=f[x],P.filterResonance=0,P.filterEnvelope=t.envelopes.dictionary[b[x]],w.convertLegacySettings(P,S)}}else{let b=this.channels[k].instruments[A],x=L[k][A];x.filterCutoff=q(0,11,E[e.charCodeAt(i++)]),b.convertLegacySettings(x,S)}else{let f=this.channels[k].instruments[A],b=E[e.charCodeAt(i++)];if(o)if(b==0){f.noteFilterType=!1,b=E[e.charCodeAt(i++)];let x=b;f.noteFilter.controlPointCount=q(0,t.filterMaxPoints+1,x);for(let P=f.noteFilter.controlPoints.length;P<f.noteFilter.controlPointCount;P++)f.noteFilter.controlPoints[P]=new Me;for(let P=0;P<f.noteFilter.controlPointCount;P++){let R=f.noteFilter.controlPoints[P];R.type=q(0,3,E[e.charCodeAt(i++)]),R.freq=q(0,t.filterFreqRange,E[e.charCodeAt(i++)]),R.gain=q(0,t.filterGainRange,E[e.charCodeAt(i++)])}for(let P=f.noteFilter.controlPointCount;P<x;P++)i+=3;f.noteSubFilters[0]=f.noteFilter;let w=E[e.charCodeAt(i++)]<<6|E[e.charCodeAt(i++)];for(let P=0;P<t.filterMorphCount-1;P++)if(w&1<<P){let R=E[e.charCodeAt(i++)];f.noteSubFilters[P+1]==null&&(f.noteSubFilters[P+1]=new Ee),f.noteSubFilters[P+1].controlPointCount=q(0,t.filterMaxPoints+1,R);for(let O=f.noteSubFilters[P+1].controlPoints.length;O<f.noteSubFilters[P+1].controlPointCount;O++)f.noteSubFilters[P+1].controlPoints[O]=new Me;for(let O=0;O<f.noteSubFilters[P+1].controlPointCount;O++){let _=f.noteSubFilters[P+1].controlPoints[O];_.type=q(0,3,E[e.charCodeAt(i++)]),_.freq=q(0,t.filterFreqRange,E[e.charCodeAt(i++)]),_.gain=q(0,t.filterGainRange,E[e.charCodeAt(i++)])}for(let O=f.noteSubFilters[P+1].controlPointCount;O<R;O++)i+=3}}else f.noteFilterType=!0,f.noteFilterSimpleCut=q(0,t.filterSimpleCutRange,E[e.charCodeAt(i++)]),f.noteFilterSimplePeak=q(0,t.filterSimplePeakRange,E[e.charCodeAt(i++)]);else{let x=f.addEffect(5);if(s||b==0){x.eqFilterType=!1,(r||u||c||v)&&(b=E[e.charCodeAt(i++)]);let w=b;x.eqFilter.controlPointCount=q(0,t.filterMaxPoints+1,w);for(let P=x.eqFilter.controlPoints.length;P<x.eqFilter.controlPointCount;P++)x.eqFilter.controlPoints[P]=new Me;for(let P=0;P<x.eqFilter.controlPointCount;P++){let R=x.eqFilter.controlPoints[P];R.type=q(0,3,E[e.charCodeAt(i++)]),R.freq=q(0,t.filterFreqRange,E[e.charCodeAt(i++)]),R.gain=q(0,t.filterGainRange,E[e.charCodeAt(i++)])}for(let P=x.eqFilter.controlPointCount;P<w;P++)i+=3;if(x.eqSubFilters[0]=x.eqFilter,r&&!m||u&&!h||c||v){let P=E[e.charCodeAt(i++)]<<6|E[e.charCodeAt(i++)];for(let R=0;R<t.filterMorphCount-1;R++)if(P&1<<R){let O=E[e.charCodeAt(i++)];x.eqSubFilters[R+1]==null&&(x.eqSubFilters[R+1]=new Ee),x.eqSubFilters[R+1].controlPointCount=q(0,t.filterMaxPoints+1,O);for(let _=x.eqSubFilters[R+1].controlPoints.length;_<x.eqSubFilters[R+1].controlPointCount;_++)x.eqSubFilters[R+1].controlPoints[_]=new Me;for(let _=0;_<x.eqSubFilters[R+1].controlPointCount;_++){let te=x.eqSubFilters[R+1].controlPoints[_];te.type=q(0,3,E[e.charCodeAt(i++)]),te.freq=q(0,t.filterFreqRange,E[e.charCodeAt(i++)]),te.gain=q(0,t.filterGainRange,E[e.charCodeAt(i++)])}for(let _=x.eqSubFilters[R+1].controlPointCount;_<O;_++)i+=3}}}else x.eqFilterType=!0,x.eqFilterSimpleCut=q(0,t.filterSimpleCutRange,E[e.charCodeAt(i++)]),x.eqFilterSimplePeak=q(0,t.filterSimplePeakRange,E[e.charCodeAt(i++)])}}break;case 121:if(v||c)if(g&&c){let f=Zt(e,i);i+=6;let b=e.slice(i,i+f);i+=f;let x=JSON.parse(atob(b));for(let w of x){let P=w.channel,R=w.instrument,O=w.info,_=this.channels[P].instruments[R];_.isUsingAdvancedLoopControls=O.isUsingAdvancedLoopControls,_.chipWaveLoopStart=O.chipWaveLoopStart,_.chipWaveLoopEnd=O.chipWaveLoopEnd,_.chipWaveLoopMode=O.chipWaveLoopMode,_.chipWavePlayBackwards=O.chipWavePlayBackwards,_.chipWaveStartOffset=O.chipWaveStartOffset}}else{let f=E[e.charCodeAt(i++)],b=!!(f&1),x=f>>1,w=E[e.charCodeAt(i++)],P=!!(w&2),R=!!(w&1),O=Zt(e,i);i+=6;let _=Zt(e,i);i+=6;let te=Zt(e,i);i+=6;let ee=this.channels[k].instruments[A];ee.isUsingAdvancedLoopControls=b,ee.chipWaveLoopStart=O,ee.chipWaveLoopEnd=_,ee.chipWaveLoopMode=x,ee.chipWavePlayBackwards=R,ee.chipWaveStartOffset=te,ee.chipWaveInStereo=P}else if(u&&!h&&p)document.URL.substring(document.URL.length-13).toLowerCase()!="legacysamples"&&(C||(C=!0,t.willReloadForCustomSamples=!0,Fe.customSamples=["legacySamples"],Xe(0))),this.channels[k].instruments[A].chipWave=q(0,t.chipWaves.length,E[e.charCodeAt(i++)]+125);else if(M&&s||r&&m||h&&u){let b=this.channels[k].instruments[A],x=L[k][A];x.filterResonance=q(0,8,E[e.charCodeAt(i++)]),b.convertLegacySettings(x,S)}break;case 122:{let f=this.channels[k].instruments[A],b=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11];if(M&&s||m&&r||h&&u)if(f.type==4)for(let x=0;x<t.drumCount;x++){let w=E[e.charCodeAt(i++)];(d&&u||!u&&!c&&!v)&&(w=b[w]),f.drumsetEnvelopes[x]=l.ie(w).index}else{let x=L[k][A],w=E[e.charCodeAt(i++)];(d&&u||!u&&!c&&!v)&&(w=b[w]),x.filterEnvelope=l.ie(w),f.convertLegacySettings(x,S)}else for(let x=0;x<t.drumCount;x++){let w=E[e.charCodeAt(i++)];(d&&u||!u&&!c&&!v)&&(w=b[w]),!v&&w>=2&&w++,f.drumsetEnvelopes[x]=q(0,t.envelopes.length,w)}}break;case 87:{let f=this.channels[k].instruments[A];if(f.pulseWidth=q(0,t.pulseWidthRange+ +r+1,E[e.charCodeAt(i++)]),s&&(f.pulseWidth=Math.round(Math.pow(.5,(7-f.pulseWidth)*t.pulseWidthStepPower)*t.pulseWidthRange)),M&&s||m&&r||h&&u){let b=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],x=L[k][A],w=E[e.charCodeAt(i++)];(d&&u||!u&&!c&&!v)&&(w=b[w]),x.pulseEnvelope=l.ie(w),f.convertLegacySettings(x,S)}(c&&!h||v)&&(f.decimalOffset=q(0,100,(E[e.charCodeAt(i++)]<<6)+E[e.charCodeAt(i++)]))}break;case 73:{let f=this.channels[k].instruments[A],b=E[e.charCodeAt(i++)];f.stringSustain=q(0,t.stringSustainRange,b&31),f.stringSustainType=t.enableAcousticSustain?q(0,2,b>>5):0}break;case 100:if(M&&s||r&&m||h&&u){let f=[{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3},{transition:"normal",fadeInSeconds:.04,fadeOutTicks:6},{transition:"normal",fadeInSeconds:0,fadeOutTicks:48},{transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72},{transition:"normal",fadeInSeconds:.06,fadeOutTicks:96},{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3}];if(g&&s){let b=E[e.charCodeAt(i++)],x=f[q(0,f.length,E[e.charCodeAt(i++)])],w=this.channels[b].instruments[0];w.fadeIn=ot(x.fadeInSeconds),w.fadeOut=lt(x.fadeOutTicks),w.transition=t.transitions.dictionary[x.transition].index,w.transition!=t.transitions.dictionary.normal.index&&(w.mdeffects|=8)}else if(p&&s)for(let b=0;b<this.getChannelCount();b++)for(let x of this.channels[b].instruments){let w=f[q(0,f.length,E[e.charCodeAt(i++)])];x.fadeIn=ot(w.fadeInSeconds),x.fadeOut=lt(w.fadeOutTicks),x.transition=t.transitions.dictionary[w.transition].index,x.transition!=t.transitions.dictionary.normal.index&&(x.mdeffects|=8)}else if(h&&!u&&!c&&!v||s){let b=f[q(0,f.length,E[e.charCodeAt(i++)])],x=this.channels[k].instruments[A];x.fadeIn=ot(b.fadeInSeconds),x.fadeOut=lt(b.fadeOutTicks),x.transition=t.transitions.dictionary[b.transition].index,x.transition!=t.transitions.dictionary.normal.index&&(x.mdeffects|=8)}else{let b=f[q(0,f.length,E[e.charCodeAt(i++)])],x=this.channels[k].instruments[A];x.fadeIn=ot(b.fadeInSeconds),x.fadeOut=lt(b.fadeOutTicks),x.transition=t.transitions.dictionary[b.transition].index,E[e.charCodeAt(i++)]>0&&(x.legacyTieOver=!0),x.clicklessTransition=!!E[e.charCodeAt(i++)],(x.transition!=t.transitions.dictionary.normal.index||x.clicklessTransition)&&(x.mdeffects|=8)}}else{let f=this.channels[k].instruments[A];f.fadeIn=q(0,t.fadeInRange,E[e.charCodeAt(i++)]),f.fadeOut=q(0,t.fadeOutTicks.length,E[e.charCodeAt(i++)]),(r||u||c||v)&&(f.clicklessTransition=!!E[e.charCodeAt(i++)])}break;case 99:if(M&&s||r&&m||h&&u)if(I&&s)if(g&&s){let f=[0,3,2,0],b=["none","none","none","tremolo2"],x=E[e.charCodeAt(i++)],w=q(0,f.length,E[e.charCodeAt(i++)]),P=this.channels[x].instruments[0],R=L[x][0];P.vibrato=f[w],(R.filterEnvelope==null||R.filterEnvelope.type==0)&&(R.filterEnvelope=t.envelopes.dictionary[b[w]],P.convertLegacySettings(R,S)),P.vibrato!=t.vibratos.dictionary.none.index&&(P.mdeffects|=4)}else if(p&&s){let f=[0,1,2,3,0,0],b=["none","none","none","none","tremolo5","tremolo2"];for(let x=0;x<this.getChannelCount();x++)for(let w=0;w<this.channels[x].instruments.length;w++){let P=q(0,f.length,E[e.charCodeAt(i++)]),R=this.channels[x].instruments[w],O=L[x][w];if(R.vibrato=f[P],(O.filterEnvelope==null||O.filterEnvelope.type==0)&&(O.filterEnvelope=t.envelopes.dictionary[b[P]],R.convertLegacySettings(O,S)),R.vibrato!=t.vibratos.dictionary.none.index&&(R.mdeffects|=4),(T!=0||r&&m||h&&u)&&!this.getChannelIsNoise(x)){let _=R.addEffect(0);_.reverb=T}}}else{let f=[0,1,2,3,0,0],b=["none","none","none","none","tremolo5","tremolo2"],x=q(0,f.length,E[e.charCodeAt(i++)]),w=this.channels[k].instruments[A],P=L[k][A];if(w.vibrato=f[x],(P.filterEnvelope==null||P.filterEnvelope.type==0)&&(P.filterEnvelope=t.envelopes.dictionary[b[x]],w.convertLegacySettings(P,S)),w.vibrato!=t.vibratos.dictionary.none.index&&(w.mdeffects|=4),T!=0||r&&m||h&&u){let R=w.addEffect(0);R.reverb=T}}else{let f=this.channels[k].instruments[A],b=q(0,t.vibratos.length+1,E[e.charCodeAt(i++)]);f.vibrato=b,f.vibrato!=t.vibratos.dictionary.none.index&&(f.mdeffects|=4),b==t.vibratos.length?(f.vibratoDepth=q(0,t.modulators.dictionary["vibrato depth"].maxRawVol+1,E[e.charCodeAt(i++)])/50,f.vibratoSpeed=q(0,t.modulators.dictionary["vibrato speed"].maxRawVol+1,E[e.charCodeAt(i++)]),f.vibratoDelay=q(0,t.modulators.dictionary["vibrato delay"].maxRawVol+1,E[e.charCodeAt(i++)])/2,f.vibratoType=q(0,t.vibratoTypes.length,E[e.charCodeAt(i++)]),f.mdeffects|=4):(f.vibratoDepth=t.vibratos[f.vibrato].amplitude,f.vibratoSpeed=10,f.vibratoDelay=t.vibratos[f.vibrato].delayTicks/2,f.vibratoType=t.vibratos[f.vibrato].type)}else if(v&&!h){let f=E[e.charCodeAt(i++)];this.eqFilter.controlPointCount=q(0,t.filterMaxPoints+1,f);for(let x=this.eqFilter.controlPoints.length;x<this.eqFilter.controlPointCount;x++)this.eqFilter.controlPoints[x]=new Me;for(let x=0;x<this.eqFilter.controlPointCount;x++){let w=this.eqFilter.controlPoints[x];w.type=q(0,3,E[e.charCodeAt(i++)]),w.freq=q(0,t.filterFreqRange,E[e.charCodeAt(i++)]),w.gain=q(0,t.filterGainRange,E[e.charCodeAt(i++)])}for(let x=this.eqFilter.controlPointCount;x<f;x++)i+=3;this.eqSubFilters[0]=this.eqFilter;let b=E[e.charCodeAt(i++)]<<6|E[e.charCodeAt(i++)];for(let x=0;x<t.filterMorphCount-1;x++)if(b&1<<x){let w=E[e.charCodeAt(i++)];this.eqSubFilters[x+1]==null&&(this.eqSubFilters[x+1]=new Ee),this.eqSubFilters[x+1].controlPointCount=q(0,t.filterMaxPoints+1,w);for(let P=this.eqSubFilters[x+1].controlPoints.length;P<this.eqSubFilters[x+1].controlPointCount;P++)this.eqSubFilters[x+1].controlPoints[P]=new Me;for(let P=0;P<this.eqSubFilters[x+1].controlPointCount;P++){let R=this.eqSubFilters[x+1].controlPoints[P];R.type=q(0,3,E[e.charCodeAt(i++)]),R.freq=q(0,t.filterFreqRange,E[e.charCodeAt(i++)]),R.gain=q(0,t.filterGainRange,E[e.charCodeAt(i++)])}for(let P=this.eqSubFilters[x+1].controlPointCount;P<w;P++)i+=3}}break;case 71:if(r&&m||h&&u){let f=this.channels[k].instruments[A];f.arpeggioSpeed=q(0,t.modulators.dictionary["arp speed"].maxRawVol+1,E[e.charCodeAt(i++)]),f.fastTwoNoteArp=!!E[e.charCodeAt(i++)]}break;case 104:if(g&&s){let f=E[e.charCodeAt(i++)],b=this.channels[f].instruments[0];b.unison=q(0,t.unisons.length,E[e.charCodeAt(i++)]),b.unisonVoices=t.unisons[b.unison].voices,b.unisonSpread=t.unisons[b.unison].spread,b.unisonOffset=t.unisons[b.unison].offset,b.unisonExpression=t.unisons[b.unison].expression,b.unisonSign=t.unisons[b.unison].sign}else if(p&&s)for(let f=0;f<this.getChannelCount();f++)for(let b of this.channels[f].instruments){let x=E[e.charCodeAt(i++)],w=q(0,t.unisons.length,x);x==8&&(w=2,b.chord=3),b.unison=w,b.unisonVoices=t.unisons[b.unison].voices,b.unisonSpread=t.unisons[b.unison].spread,b.unisonOffset=t.unisons[b.unison].offset,b.unisonExpression=t.unisons[b.unison].expression,b.unisonSign=t.unisons[b.unison].sign}else if(I&&s){let f=E[e.charCodeAt(i++)],b=q(0,t.unisons.length,f),x=this.channels[k].instruments[A];f==8&&(b=2,x.chord=3),x.unison=b,x.unisonVoices=t.unisons[x.unison].voices,x.unisonSpread=t.unisons[x.unison].spread,x.unisonOffset=t.unisons[x.unison].offset,x.unisonExpression=t.unisons[x.unison].expression,x.unisonSign=t.unisons[x.unison].sign}else{let f=this.channels[k].instruments[A];f.unison=q(0,t.unisons.length+1,E[e.charCodeAt(i++)]);let b=m||!v?27:t.unisons.length;if((c&&!m||v)&&f.unison==b){f.unison=t.unisons.length,f.unisonVoices=E[e.charCodeAt(i++)];let x=E[e.charCodeAt(i++)],w=E[e.charCodeAt(i++)]+(E[e.charCodeAt(i++)]+E[e.charCodeAt(i++)]*63)*63,P=E[e.charCodeAt(i++)],R=E[e.charCodeAt(i++)]+(E[e.charCodeAt(i++)]+E[e.charCodeAt(i++)]*63)*63,O=E[e.charCodeAt(i++)],_=E[e.charCodeAt(i++)]+E[e.charCodeAt(i++)]*63,te=E[e.charCodeAt(i++)],ee=E[e.charCodeAt(i++)]+E[e.charCodeAt(i++)]*63;f.unisonSpread=w/1e3,x==0&&(f.unisonSpread*=-1),f.unisonOffset=R/1e3,P==0&&(f.unisonOffset*=-1),f.unisonExpression=_/1e3,O==0&&(f.unisonExpression*=-1),f.unisonSign=ee/1e3,te==0&&(f.unisonSign*=-1)}else f.unisonVoices=t.unisons[f.unison].voices,f.unisonSpread=t.unisons[f.unison].spread,f.unisonOffset=t.unisons[f.unison].offset,f.unisonExpression=t.unisons[f.unison].expression,f.unisonSign=t.unisons[f.unison].sign}break;case 67:if(M&&s||r&&m||h&&u){let f=this.channels[k].instruments[A];f.chord=q(0,t.chords.length,E[e.charCodeAt(i++)]),f.chord!=t.chords.dictionary.simultaneous.index&&(f.mdeffects|=16)}break;case 113:{let f=this.channels[k].instruments[A];if(M&&s||r&&m||h&&u){f.addEffect(E[e.charCodeAt(i++)]&2047);let b=L[k][A];f.convertLegacySettings(b,S)}else{let b=E[e.charCodeAt(i++)];if(o){f.effects=[];for(let x=0;x<b;x++){let w=f.addEffect(E[e.charCodeAt(i++)]);if(w.type==5){let P=E[e.charCodeAt(i++)];if(P==0){w.eqFilterType=!1,P=E[e.charCodeAt(i++)],w.eqFilter.controlPointCount=q(0,t.filterMaxPoints+1,P);for(let O=w.eqFilter.controlPoints.length;O<w.eqFilter.controlPointCount;O++)w.eqFilter.controlPoints[O]=new Me;for(let O=0;O<w.eqFilter.controlPointCount;O++){let _=w.eqFilter.controlPoints[O];_.type=q(0,3,E[e.charCodeAt(i++)]),_.freq=q(0,t.filterFreqRange,E[e.charCodeAt(i++)]),_.gain=q(0,t.filterGainRange,E[e.charCodeAt(i++)])}for(let O=w.eqFilter.controlPointCount;O<P;O++)i+=3;w.eqSubFilters[0]=w.eqFilter;let R=E[e.charCodeAt(i++)]<<6|E[e.charCodeAt(i++)];for(let O=0;O<t.filterMorphCount-1;O++)if(R&1<<O){let _=E[e.charCodeAt(i++)];w.eqSubFilters[O+1]==null&&(w.eqSubFilters[O+1]=new Ee),w.eqSubFilters[O+1].controlPointCount=q(0,t.filterMaxPoints+1,_);for(let te=w.eqSubFilters[O+1].controlPoints.length;te<w.eqSubFilters[O+1].controlPointCount;te++)w.eqSubFilters[O+1].controlPoints[te]=new Me;for(let te=0;te<w.eqSubFilters[O+1].controlPointCount;te++){let ee=w.eqSubFilters[O+1].controlPoints[te];ee.type=q(0,3,E[e.charCodeAt(i++)]),ee.freq=q(0,t.filterFreqRange,E[e.charCodeAt(i++)]),ee.gain=q(0,t.filterGainRange,E[e.charCodeAt(i++)])}for(let te=w.eqSubFilters[O+1].controlPointCount;te<_;te++)i+=3}}else w.eqFilterType=!0,w.eqFilter.reset(),w.eqFilterSimpleCut=q(0,t.filterSimpleCutRange,E[e.charCodeAt(i++)]),w.eqFilterSimplePeak=q(0,t.filterSimplePeakRange,E[e.charCodeAt(i++)])}w.type==3&&(o?w.distortion=q(0,t.distortionRange,E[e.charCodeAt(i++)]):w.distortion=q(0,t.distortionRange,E[e.charCodeAt(i++)])*2,(r&&!m||u||c||v)&&(f.aliases=!!E[e.charCodeAt(i++)])),w.type==4&&(w.bitcrusherFreq=q(0,t.bitcrusherFreqRange,E[e.charCodeAt(i++)]),w.bitcrusherQuantization=q(0,t.bitcrusherQuantizationRange,E[e.charCodeAt(i++)])),w.type==2&&(s?w.pan=q(0,t.panMax+1,Math.round(E[e.charCodeAt(i++)]*(t.panMax/8))):w.pan=q(0,t.panMax+1,(E[e.charCodeAt(i++)]<<6)+E[e.charCodeAt(i++)]),(r&&!d||u||c||v)&&(w.panDelay=E[e.charCodeAt(i++)]),o&&(w.panMode=E[e.charCodeAt(i++)])),w.type==10&&(w.flanger=q(0,t.flangerRange,E[e.charCodeAt(i++)]),w.flangerSpeed=q(0,t.flangerSpeedRange,E[e.charCodeAt(i++)]),w.flangerDepth=q(0,t.flangerDepthRange,E[e.charCodeAt(i++)]),w.flangerFeedback=q(0,t.flangerFeedbackRange,E[e.charCodeAt(i++)])),w.type==1&&(o?w.chorus=q(0,t.chorusRange/2+1,E[e.charCodeAt(i++)]):s?w.chorus=q(0,t.chorusRange/2+1,E[e.charCodeAt(i++)])*4:w.chorus=q(0,t.chorusRange,E[e.charCodeAt(i++)])*2),w.type==9&&(w.gain=q(0,t.volumeRange,(E[e.charCodeAt(i++)]<<6)+E[e.charCodeAt(i++)])),w.type==6&&(o?w.echoSustain=q(0,t.echoSustainRange,E[e.charCodeAt(i++)]):w.echoSustain=q(0,t.echoSustainRange/3,E[e.charCodeAt(i++)])*3,w.echoDelay=q(0,t.echoDelayRange,E[e.charCodeAt(i++)]),w.echoPingPong=q(0,t.panMax+1,(E[e.charCodeAt(i++)]<<6)+E[e.charCodeAt(i++)])),w.type==0&&(s?w.reverb=q(0,t.reverbRange,Math.round(E[e.charCodeAt(i++)]*t.reverbRange/3)):w.reverb=q(0,t.reverbRange,E[e.charCodeAt(i++)])),w.type==8&&(w.granular=E[e.charCodeAt(i++)],w.grainSize=E[e.charCodeAt(i++)],w.grainAmounts=E[e.charCodeAt(i++)],w.grainRange=E[e.charCodeAt(i++)]),w.type==7&&(w.ringModulation=q(0,t.ringModRange,E[e.charCodeAt(i++)]),w.ringModulationHz=q(0,t.ringModHzRange,E[e.charCodeAt(i++)]),w.ringModWaveformIndex=q(0,t.operatorWaves.length,E[e.charCodeAt(i++)]),w.ringModPulseWidth=q(0,t.pulseWidthRange,E[e.charCodeAt(i++)]),w.ringModHzOffset=q(t.rmHzOffsetMin,t.rmHzOffsetMax+1,(E[e.charCodeAt(i++)]<<6)+E[e.charCodeAt(i++)]))}f.mdeffects=E[e.charCodeAt(i++)]}else{let x=[0,1,2,3,4,5,6,0,1,2,3,4,5,7,8],w=0;if(v&&!m){let P=new Je(e,i,i+18);for(let R=0;R<18;R++)w=P.read(1),R>6&&R<13?f.mdeffects&=x[w]:w==1&&f.addEffect(x[R])}else{let P=new Je(e,i,i+12);for(let R=0;R<12;R++)w=P.read(1),R>6?f.mdeffects&=x[w]:w==1&&f.addEffect(x[R])}}Tt(f.mdeffects)&&(f.transition=q(0,t.transitions.length,E[e.charCodeAt(i++)])),kt(f.mdeffects)&&(f.chord=q(0,t.chords.length,E[e.charCodeAt(i++)]),f.chord==t.chords.dictionary.arpeggio.index&&(r||u||c||v)&&(f.arpeggioSpeed=E[e.charCodeAt(i++)],f.fastTwoNoteArp=!!E[e.charCodeAt(i++)]),f.chord==t.chords.dictionary.monophonic.index&&v&&!m&&(f.monoChordTone=E[e.charCodeAt(i++)])),It(f.mdeffects)&&(f.pitchShift=q(0,t.pitchShiftRange,E[e.charCodeAt(i++)])),Ft(f.mdeffects)&&(s?(f.detune=q(t.detuneMin,t.detuneMax+1,E[e.charCodeAt(i++)]),f.detune=Math.round((f.detune-9)*(Math.abs(f.detune-9)+1)/2+t.detuneCenter)):f.detune=q(t.detuneMin,t.detuneMax+1,(E[e.charCodeAt(i++)]<<6)+E[e.charCodeAt(i++)])),wt(f.mdeffects)&&(f.vibrato=q(0,t.vibratos.length+1,E[e.charCodeAt(i++)]),f.vibrato==t.vibratos.length&&(r||u||c||v)?(f.vibratoDepth=q(0,t.modulators.dictionary["vibrato depth"].maxRawVol+1,E[e.charCodeAt(i++)])/25,f.vibratoSpeed=q(0,t.modulators.dictionary["vibrato speed"].maxRawVol+1,E[e.charCodeAt(i++)]),f.vibratoDelay=q(0,t.modulators.dictionary["vibrato delay"].maxRawVol+1,E[e.charCodeAt(i++)]),f.vibratoType=q(0,t.vibratoTypes.length,E[e.charCodeAt(i++)])):(f.vibratoDepth=t.vibratos[f.vibrato].amplitude,f.vibratoSpeed=10,f.vibratoDelay=t.vibratos[f.vibrato].delayTicks/2,f.vibratoType=t.vibratos[f.vibrato].type))}}break;case 118:if(g&&s){let f=E[e.charCodeAt(i++)],b=this.channels[f].instruments[0];b.volume=Math.round(q(-t.volumeRange/2,1,-E[e.charCodeAt(i++)]*5))}else if(p&&s)for(let f=0;f<this.getChannelCount();f++)for(let b of this.channels[f].instruments)b.volume=Math.round(q(-t.volumeRange/2,1,-E[e.charCodeAt(i++)]*5));else if(I&&s){let f=this.channels[k].instruments[A];f.volume=Math.round(q(-t.volumeRange/2,1,-E[e.charCodeAt(i++)]*5))}else if(s){let f=this.channels[k].instruments[A];f.volume=Math.round(q(-t.volumeRange/2,1,-E[e.charCodeAt(i++)]*25/7))}else if(o){let f=this.channels[k].instruments[A];f.volume=Math.round(q(-t.volumeRange/2,t.volumeRange/2+1,(E[e.charCodeAt(i++)]<<6|E[e.charCodeAt(i++)])-t.volumeRange/2))}else{let f=this.channels[k].instruments[A];f.volume=Math.round(q(-t.volumeRange/2,t.volumeRange/2+1,(E[e.charCodeAt(i++)]<<6|E[e.charCodeAt(i++)])-t.volumeRange/2)*2)}break;case 76:break;case 68:{let f=this.channels[k].instruments[A];(r&&m||h&&u)&&(f.detune=q(t.detuneMin,t.detuneMax+1,((E[e.charCodeAt(i++)]<<6)+E[e.charCodeAt(i++)])*4),f.mdeffects|=2)}break;case 77:{let f=this.channels[k].instruments[A];for(let R=0;R<64;R++)f.customChipWave[R]=q(-24,25,E[e.charCodeAt(i++)]-24);let b=0;for(let R=0;R<f.customChipWave.length;R++)b+=f.customChipWave[R];let x=b/f.customChipWave.length,w=0,P=0;for(let R=0;R<f.customChipWave.length;R++)w+=P,P=f.customChipWave[R]-x,f.customChipWaveIntegral[R]=w;f.customChipWaveIntegral[64]=0}break;case 79:{let f=E[e.charCodeAt(i++)];f==63?this.restoreLimiterDefaults():(this.compressionRatio=f<10?f/10:1+(f-10)/60,f=E[e.charCodeAt(i++)],this.limitRatio=f<10?f/10:f-9,this.limitDecay=E[e.charCodeAt(i++)],this.limitRise=E[e.charCodeAt(i++)]*250+2e3,this.compressionThreshold=E[e.charCodeAt(i++)]/20,this.limitThreshold=E[e.charCodeAt(i++)]/20,this.masterGain=((E[e.charCodeAt(i++)]<<6)+E[e.charCodeAt(i++)])/50)}break;case 85:for(let f=0;f<this.getChannelCount();f++){var V;h&&!u&&!c&&!v?V=E[e.charCodeAt(i++)]:V=(E[e.charCodeAt(i++)]<<6)+E[e.charCodeAt(i++)],this.channels[f].name=decodeURIComponent(e.substring(i,i+V)),i+=V,o&&(this.channels[f].color=E[e.charCodeAt(i++)])}break;case 65:{let f=this.channels[k].instruments[A];if(f.type==1)f.algorithm=q(0,t.algorithms.length,E[e.charCodeAt(i++)]);else if(f.algorithm6Op=q(0,t.algorithms6Op.length,E[e.charCodeAt(i++)]),f.customAlgorithm.fromPreset(f.algorithm6Op),e.charCodeAt(i)==67){let b=q(1,t.operatorCount+2+1,E[e.charCodeAt(i+1)]);i++;let x=[];if(e.charCodeAt(i+1)==113){i++;let w=0;for(i++;e.charCodeAt(i)!=113;){x[w]=[];let P=0;for(;e.charCodeAt(i)!=82;)x[w][P]=q(1,t.operatorCount+3,E[e.charCodeAt(i)]),P++,i++;w++,i++}f.customAlgorithm.set(b,x),i++}}if(M&&s||m&&r||h&&u){let b=L[k][A];f.convertLegacySettings(b,S)}}break;case 120:if(u&&!h&&p){let f=E[e.charCodeAt(i++)];f+62>85&&document.URL.substring(document.URL.length-13).toLowerCase()!="legacysamples"&&(C||(C=!0,t.willReloadForCustomSamples=!0,Fe.customSamples=["legacySamples"],Xe(0))),f+62>78?this.channels[k].instruments[A].chipWave=q(0,t.chipWaves.length,f+63):f+62>67?this.channels[k].instruments[A].chipWave=q(0,t.chipWaves.length,f+61):f+62==67?this.channels[k].instruments[A].chipWave=40:this.channels[k].instruments[A].chipWave=q(0,t.chipWaves.length,f+62)}else{let f=this.channels[k].instruments[A];f.supersawDynamism=q(0,t.supersawDynamismMax+1,E[e.charCodeAt(i++)]),f.supersawSpread=q(0,t.supersawSpreadMax+1,E[e.charCodeAt(i++)]),f.supersawShape=q(0,t.supersawShapeMax+1,E[e.charCodeAt(i++)])}break;case 70:{let f=this.channels[k].instruments[A];if(f.type==1)f.feedbackType=q(0,t.feedbacks.length,E[e.charCodeAt(i++)]);else{f.feedbackType6Op=q(0,t.feedbacks6Op.length,E[e.charCodeAt(i++)]),f.customFeedbackType.fromPreset(f.feedbackType6Op);let b=[];if(e.charCodeAt(i)==113){let x=0;for(i++;e.charCodeAt(i)!=113;){b[x]=[];let w=0;for(;e.charCodeAt(i)!=82;)b[x][w]=q(1,t.operatorCount+2,E[e.charCodeAt(i)]),w++,i++;x++,i++}f.customFeedbackType.set(b),i++}}}break;case 66:this.channels[k].instruments[A].feedbackAmplitude=q(0,t.operatorAmplitudeMax+1,E[e.charCodeAt(i++)]);break;case 86:if(M&&s||m&&r||h&&u){let f=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],b=this.channels[k].instruments[A],x=L[k][A],w=E[e.charCodeAt(i++)];(d&&u||!u&&!c&&!v)&&(w=f[w]),x.feedbackEnvelope=l.ie(E[w]),b.convertLegacySettings(x,S)}break;case 81:{let f=this.channels[k].instruments[A];if(g&&u){let b=[4,5,6,7,8,10,12,13,14,15,16,18,20,22,24,2,1,9,17,19,21,23,0,3];for(let x=0;x<(f.type==11?6:t.operatorCount);x++)f.operators[x].frequency=b[q(0,b.length,E[e.charCodeAt(i++)])]}else if(!u&&!c&&!v){let b=[4,5,6,7,8,10,12,13,14,15,16,18,20,23,27,2,1,9,17,19,21,23,0,3];for(let x=0;x<(f.type==11?6:t.operatorCount);x++)f.operators[x].frequency=b[q(0,b.length,E[e.charCodeAt(i++)])]}else for(let b=0;b<(f.type==11?6:t.operatorCount);b++)f.operators[b].frequency=q(0,t.operatorFrequencies.length,E[e.charCodeAt(i++)])}break;case 80:{let f=this.channels[k].instruments[A];for(let b=0;b<(f.type==11?6:t.operatorCount);b++)f.operators[b].amplitude=q(0,t.operatorAmplitudeMax+1,E[e.charCodeAt(i++)])}break;case 69:{let f=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],b=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,58,59,60],x=[0,1,2,3,4,5,6,7,8,8,9,10,11,12,13,14],w=this.channels[k].instruments[A];if(M&&s||m&&r||h&&u){let P=L[k][A];P.operatorEnvelopes=[];for(let R=0;R<(w.type==11?6:t.operatorCount);R++){let O=E[e.charCodeAt(i++)];(d&&u||s)&&(O=f[O]),r&&(O=b[O]),P.operatorEnvelopes[R]=l.ie(O)}w.convertLegacySettings(P,S)}else{let P=q(0,t.maxEnvelopeCount+1,E[e.charCodeAt(i++)]),R=!1;(r&&!p||c&&!m||v)&&(w.envelopeSpeed=q(0,t.modulators.dictionary["envelope speed"].maxRawVol+1,E[e.charCodeAt(i++)]),(!v||m)&&(R=!!E[e.charCodeAt(i++)]));for(let ee=0;ee<P;ee++){let ge=q(0,t.instrumentAutomationTargets.length,E[e.charCodeAt(i++)]),Ie=0,Q=t.instrumentAutomationTargets[ge].maxCount;Q>1&&(Ie=q(0,Q,E[e.charCodeAt(i++)]));let H=E[e.charCodeAt(i++)];(d&&u||s)&&(H=f[H]),r&&(H=b[H]),!v&&H>=2&&H++;let Y=!1,J=1;!v||g?(Y=!0,J=t.envelopes[H].speed,H=t.envelopes[H].type):h&&H>=3&&H++;let Z=!1;(v&&!g&&h||Y)&&(H==9&&(Z=!0),H=x[H]);let ie=q(0,v&&!g||Y?t.newEnvelopes.length:t.envelopes.length,H),de=0,se=t.maxPitch,he=!1;J=v&&!g?t.newEnvelopes[ie].speed:J;let ae=0,pe=1,oe=2,re=2,le=0;if(v&&!h&&(t.newEnvelopes[ie].name=="lfo"?(le=q(0,7,E[e.charCodeAt(i++)]),(le==5||le==6)&&(oe=q(1,t.randomEnvelopeStepsMax+1,E[e.charCodeAt(i++)]))):t.newEnvelopes[ie].name=="random"&&(oe=q(1,t.randomEnvelopeStepsMax+1,E[e.charCodeAt(i++)]),re=q(1,t.randomEnvelopeSeedMax+1,E[e.charCodeAt(i++)]),le=q(0,4,E[e.charCodeAt(i++)]))),v&&!g){if(t.newEnvelopes[ie].name=="pitch")if(w.isNoiseInstrument)de=q(0,t.drumCount,E[e.charCodeAt(i++)]),se=q(0,t.drumCount,E[e.charCodeAt(i++)]);else{let $=E[e.charCodeAt(i++)];de=q(0,t.maxPitch+1,$*64+E[e.charCodeAt(i++)]),$=E[e.charCodeAt(i++)],se=q(0,t.maxPitch+1,$*64+E[e.charCodeAt(i++)])}let j=E[e.charCodeAt(i++)];v&&!m&&(R=j>>1==1),he=(j&1)==1,t.newEnvelopes[ie].name!="pitch"&&t.newEnvelopes[ie].name!="note size"&&t.newEnvelopes[ie].name!="punch"&&t.newEnvelopes[ie].name!="none"&&(J=t.perEnvelopeSpeedIndices[E[e.charCodeAt(i++)]]),ae=E[e.charCodeAt(i++)]/10,pe=E[e.charCodeAt(i++)]/10}if((!v||h)&&Z&&(le=0,he?(pe=Math.floor(pe/2*10)/10,ae=Math.floor(ae/2*10)/10):(pe=Math.floor((.5+(pe-ae)/2)*10)/10,ae=.5)),w.addEnvelope(ge,Ie,ie,!0,de,se,he,J,ae,pe,oe,re,le,R),v&&g&&!d){let j=E[e.charCodeAt(i++)];w.envelopes[ee].pitchEnvelopeStart=j*64+E[e.charCodeAt(i++)],j=E[e.charCodeAt(i++)],w.envelopes[ee].pitchEnvelopeEnd=j*64+E[e.charCodeAt(i++)],w.envelopes[ee].inverse=E[e.charCodeAt(i++)]==1}}let O=0,_=t.maxPitch,te=!1;if(v&&d){let ee=E[e.charCodeAt(i++)];O=ee*64+E[e.charCodeAt(i++)],ee=E[e.charCodeAt(i++)],_=ee*64+E[e.charCodeAt(i++)],te=E[e.charCodeAt(i++)]===1;for(let ge=0;ge<P;ge++)w.envelopes[ge].pitchEnvelopeStart=O,w.envelopes[ge].pitchEnvelopeEnd=_,w.envelopes[ge].inverse=t.envelopes[w.envelopes[ge].envelope].name=="pitch"?te:!1}}}break;case 82:{let f=this.channels[k].instruments[A];if(g&&u)for(let b=0;b<t.operatorCount;b++){let x=[0,1,3,2,2,2,4,5],w=q(0,x.length,E[e.charCodeAt(i++)]);w==3?f.operators[b].pulseWidth=5:w==4?f.operators[b].pulseWidth=4:w==5&&(f.operators[b].pulseWidth=6),f.operators[b].waveform=x[w]}else for(let b=0;b<(f.type==11?6:t.operatorCount);b++){if(r){let x=[0,1,3,2,4,5];f.operators[b].waveform=x[q(0,t.operatorWaves.length,E[e.charCodeAt(i++)])]}else f.operators[b].waveform=q(0,t.operatorWaves.length,E[e.charCodeAt(i++)]);f.operators[b].waveform==2&&(f.operators[b].pulseWidth=q(0,t.pwmOperatorWaves.length,E[e.charCodeAt(i++)]))}}break;case 83:{let f=this.channels[k].instruments[A];if(f.type==3){let b=Math.ceil(t.spectrumControlPoints*t.spectrumControlPointBits/6),x=new Je(e,i,i+b);for(let w=0;w<t.spectrumControlPoints;w++)f.spectrumWave.spectrum[w]=x.read(t.spectrumControlPointBits);f.spectrumWave.markCustomWaveDirty(),i+=b}else if(f.type==4){let b=Math.ceil(t.drumCount*t.spectrumControlPoints*t.spectrumControlPointBits/6),x=new Je(e,i,i+b);for(let w=0;w<t.drumCount;w++){for(let P=0;P<t.spectrumControlPoints;P++)f.drumsetSpectrumWaves[w].spectrum[P]=x.read(t.spectrumControlPointBits);f.drumsetSpectrumWaves[w].markCustomWaveDirty()}i+=b}else throw new Error("Unhandled instrument type for spectrum song tag code.")}break;case 72:{let f=this.channels[k].instruments[A],b=Math.ceil(t.harmonicsControlPoints*t.harmonicsControlPointBits/6),x=new Je(e,i,i+b);for(let w=0;w<t.harmonicsControlPoints;w++)f.harmonicsWave.harmonics[w]=x.read(t.harmonicsControlPointBits);f.harmonicsWave.markCustomWaveDirty(),i+=b}break;case 88:if(r&&m||u&&h){let f=this.channels[k].instruments[A];if(f.aliases=!!E[e.charCodeAt(i++)],f.aliases){let b=f.addEffect(3);b.distortion=0}}else if(c||v){let f=this.channels[k].instruments[A];f.decimalOffset=q(0,51,E[e.charCodeAt(i++)])}break;case 98:{let f;if(g&&s){let b=E[e.charCodeAt(i++)],x=E[e.charCodeAt(i++)];f=Math.ceil(x*.5);let w=new Je(e,i,i+f);for(let P=0;P<x;P++)this.channels[b].bars[P]=w.read(3)+1}else if(m&&s){let b=0;for(;1<<b<this.patternsPerChannel;)b++;f=Math.ceil(this.getChannelCount()*this.barCount*b/6);let x=new Je(e,i,i+f);for(let w=0;w<this.getChannelCount();w++)for(let P=0;P<this.barCount;P++)this.channels[w].bars[P]=x.read(b)+1}else{let b=0;for(;1<<b<this.patternsPerChannel+1;)b++;f=Math.ceil(this.getChannelCount()*this.barCount*b/6);let x=new Je(e,i,i+f);for(let w=0;w<this.getChannelCount();w++)for(let P=0;P<this.barCount;P++)this.channels[w].bars[P]=x.read(b)}i+=f}break;case 112:{let f=0,b,x=!(h&&r||s),w=x?4:3,P=x?16:8;if(g&&s)b=E[e.charCodeAt(i++)],i++,f=E[e.charCodeAt(i++)],f=f<<6,f+=E[e.charCodeAt(i++)];else{b=0;let Q=Ae(1,4,E[e.charCodeAt(i++)]);for(;Q>0;)f=f<<6,f+=E[e.charCodeAt(i++)],Q--}let R=new Je(e,i,i+f);i+=f;let O=l.getNeededBits(t.noteSizeMax),_=-1,te=-1,ee=-1,ge=r,Ie=30;for(;;){let Q=this.channels[b],H=this.getChannelIsNoise(b),Y=this.getChannelIsMod(b),J=this.getMaxInstrumentsPerPattern(b),Z=l.getNeededBits(J-t.instrumentCountMin),ie=l.getNeededBits(Q.instruments.length-1);if(Y){let oe=m&&r||h&&u,re=oe?ie:l.getNeededBits(this.getMaxInstrumentsPerChannel()+2);for(let le=0;le<Q.instruments.length;le++){let j=Q.instruments[le];for(let $=0;$<t.modCount;$++){let fe=R.read(2);switch(fe){case 0:let ve=R.read(8);for(let X=0;X<ve;X++)j.modChannels[$][X]=q(0,this.pitchChannelCount+this.noiseChannelCount+1,R.read(8));let be=R.read(8);for(let X=0;X<be;X++)j.modInstruments[$][X]=q(0,this.channels[j.modChannels[$][X]].instruments.length+2,R.read(re));break;case 1:j.modChannels[$][0]=this.pitchChannelCount+q(0,this.noiseChannelCount+1,R.read(8)),j.modInstruments[$][0]=q(0,this.channels[j.modChannels[$][0]].instruments.length+2,R.read(ie));break;case 2:j.modChannels[$][0]=-1;break;case 3:j.modChannels[$][0]=-2;break}if(fe!=3&&(j.modulators[$]=R.read(6)),!oe&&(t.modulators[j.modulators[$]].name=="post eq"||t.modulators[j.modulators[$]].name=="pre eq"||t.modulators[j.modulators[$]].name=="song eq")&&(j.modFilterTypes[$]=R.read(6)),(t.modulators[j.modulators[$]].name=="individual envelope speed"||t.modulators[j.modulators[$]].name=="reset envelope"||t.modulators[j.modulators[$]].name=="individual envelope lower bound"||t.modulators[j.modulators[$]].name=="individual envelope upper bound")&&(j.modEnvelopeNumbers[$]=R.read(6)),oe&&j.modChannels[$][0]>=0){let ve=this.channels[j.modChannels[$][0]].instruments[j.modInstruments[$][0]].effectsIncludeType(5);j.modulators[$]==7?(ve?j.modulators[$]=t.modulators.dictionary["note filt cut"].index:j.modulators[$]=t.modulators.dictionary["eq filt cut"].index,j.modFilterTypes[$]=1):j.modulators[$]==8&&(ve?j.modulators[$]=t.modulators.dictionary["note filt peak"].index:j.modulators[$]=t.modulators.dictionary["eq filt peak"].index,j.modFilterTypes[$]=2)}else oe&&j.modulators[$]==t.modulators.dictionary["song reverb"].index&&(_=b,te=le,ee=$);oe&&t.modulators[j.modulators[$]].associatedEffect!=11&&this.channels[j.modChannels[$][0]].instruments[j.modInstruments[$][0]].addEffect(t.modulators[j.modulators[$]].associatedEffect)}}}let de=[];for(let oe=0;oe<Q.instruments.length;oe++){de[oe]=[];for(let re=0;re<t.modCount;re++)de[oe][t.modCount-1-re]=1+3*+((m&&r||h&&u)&&Y&&Q.instruments[oe].modulators[re]==t.modulators.dictionary.detune.index)}let se=H||Y?0:Q.octave*12,he=H||Y?4:se,ae=Y?[0,1,2,3,4,5]:H?[4,6,7,2,3,8,0,10]:[0,7,12,19,24,-5,-12],pe=[];for(let oe=0;oe<ae.length;oe++)ae[oe]+=se;for(let oe=0;oe<this.patternsPerChannel;oe++){let re=Q.patterns[oe];if(M&&s||m&&r||h&&u)re.instruments[0]=Ae(0,Q.instruments.length-1,R.read(ie)),re.instruments.length=1;else if(this.patternInstruments){let fe=Ae(t.instrumentCountMin,J,R.read(Z)+t.instrumentCountMin);for(let ve=0;ve<fe;ve++)re.instruments[ve]=Ae(0,Q.instruments.length-1+ +Y*2,R.read(ie));re.instruments.length=fe}else re.instruments[0]=0,re.instruments.length=t.instrumentCountMin;if(!(s&&g)&&R.read(1)==0){re.notes.length=0;continue}let le=0,j=re.notes,$=0;for(;le<this.beatsPerBar*t.partsPerBeat+ +Y;){let fe=R.read(1)==1,ve=!1,be=0;if(fe?be=Ae(0,pe.length-1,R.readLongTail(0,0)):ve=R.read(1)==1,!fe&&!ve)if(Y){let X=R.read(1)==1,ce=R.readPartDuration();X?le-=ce:le+=ce}else{let X=I&&s?R.readLegacyPartDuration()*t.partsPerBeat/t.rhythms[this.rhythm].stepsPerBeat:R.readPartDuration();le+=X}else{let X;if(fe)X=pe[be],pe.splice(be,1);else{if(X={},x)R.read(1)==1?X.pitchCount=R.read(3)+2:X.pitchCount=1;else for(X.pitchCount=1;X.pitchCount<4&&R.read(1)==1;)X.pitchCount++;o?R.read(1)==1&&(X.startOffset=R.read(31)):X.startOffset=0,X.pinCount=R.readPinCount(),s?X.initialSize=R.read(2)*2:Y?X.initialSize=R.read(11):X.initialSize=R.read(O),X.pins=[],X.length=0,X.bendCount=0;for(let xe=0;xe<X.pinCount;xe++){let qe={};qe.pitchBend=R.read(1)==1,qe.pitchBend&&X.bendCount++,X.length+=I&&s?R.readLegacyPartDuration()*t.partsPerBeat/t.rhythms[this.rhythm].stepsPerBeat:R.readPartDuration(),qe.time=X.length,s?qe.size=R.read(2)*2:Y?qe.size=R.read(11):qe.size=R.read(O),X.pins.push(qe)}}pe.unshift(X),pe.length>10&&pe.pop();let ce;j.length<=$?(ce=new Et(0,le,le+X.length,X.initialSize,!1,X.startOffset),j[$++]=ce):(ce=j[$++],ce.start=le,ce.end=le+X.length,ce.pins[0].size=X.initialSize);let Se,Ce=0,ke=[];for(let xe=0;xe<X.pitchCount+X.bendCount;xe++){if(R.read(1)==1){let Le=Ae(0,ae.length-1,R.read(w));Se=ae[Le],ae.splice(Le,1)}else{let Le=R.readPitchInterval();Se=he;let We=Le;for(;We>0;){for(Se++;ae.indexOf(Se)!=-1;)Se++;We--}for(;We<0;){for(Se--;ae.indexOf(Se)!=-1;)Se--;We++}}ae.unshift(Se),ae.length>P&&ae.pop(),xe<X.pitchCount?ce.pitches[Ce++]=Se:ke.push(Se),xe==X.pitchCount-1?he=ce.pitches[0]:he=Se}ce.pitches.length=Ce,ke.unshift(ce.pitches[0]);let Pe=Y&&Q.instruments[re.instruments[0]].modulators[t.modCount-1-ce.pitches[0]]===t.modulators.dictionary.tempo.index,we=0;ge&&Pe&&(we=Ie-t.tempoMin),Y&&(ce.pins[0].size+=we,ce.pins[0].size*=de[re.instruments[0]][ce.pitches[0]]);let De=1;for(let xe of X.pins){xe.pitchBend&&ke.shift();let qe=ke[0]-ce.pitches[0];if(ce.pins.length<=De)Y?ce.pins[De++]=Mt(qe,xe.time,xe.size*de[re.instruments[0]][ce.pitches[0]]+we):ce.pins[De++]=Mt(qe,xe.time,xe.size);else{let Le=ce.pins[De++];Le.interval=qe,Le.time=xe.time,Y?Le.size=xe.size*de[re.instruments[0]][ce.pitches[0]]+we:Le.size=xe.size}}ce.pins.length=De,ce.start==0&&(M&&s||m&&r||h&&u?h&&!c&&!v||s?ce.continuesLastPattern=!1:ce.continuesLastPattern=Q.instruments[re.instruments[0]].legacyTieOver:ce.continuesLastPattern=R.read(1)==1),le=Ae(0,this.beatsPerBar*t.partsPerBeat,ce.end)}}j.length=$}if(g&&s)break;if(b++,b>=this.getChannelCount())break}if((r&&m||h&&u)&&ee>=0){for(let Q=0;Q<this.channels.length;Q++)for(let H=0;H<this.channels[Q].instruments.length;H++)if(this.channels[Q].instruments[H].effectsIncludeType(0),_==Q&&te==H){let J=this.channels[Q].bars[0];if(J>0){let Z=this.channels[Q].patterns[J-1],ie=6;for(let de of Z.notes)de.pitches[0]==t.modCount-1-ee&&(ie=Math.min(ie,de.start));ie>0&&Z.notes.push(new Et(t.modCount-1-ee,0,ie,T))}else if(this.channels[Q].patterns.length<t.barCountMax){let Z=new pt;if(this.channels[Q].patterns.push(Z),this.channels[Q].bars[0]=this.channels[Q].patterns.length,this.channels[Q].patterns.length>this.patternsPerChannel){for(let ie=0;ie<this.channels.length;ie++)this.channels[ie].patterns.length<=this.patternsPerChannel&&this.channels[ie].patterns.push(new pt);this.patternsPerChannel++}Z.instruments.length=1,Z.instruments[0]=te,Z.notes.length=0,Z.notes.push(new Et(t.modCount-1-ee,0,6,T))}}}}break;default:throw new Error("Unrecognized song tag code "+String.fromCharCode(z)+" at index "+(i-1)+" "+e.substring(0,i))}t.willReloadForCustomSamples&&(window.location.hash=this.toBase64String(),setTimeout(()=>{location.reload()},50))}static Ee(e){try{return!!new URL(e)}catch{return!1}}static de(e,a,i,n,s){let u=t.chipWaves[0].samples,c=t.chipWaves[0].samplesR||t.chipWaves[0].samples,v=t.rawRawChipWaves[0].samples,o=t.rawRawChipWaves[0].samplesR||t.chipWaves[0].samples,y=a.length;a.push(e);let d=t.chipWaves.length,g=e,h=44100,m=!1,p=60,I=!1,F=null,M=null,S=null,C=null,W=!1,L=!1,T=!1,k=e.indexOf("!"),A=-1;if(k===0&&(A=e.indexOf("!",k+1),A!==-1)){let B=e.slice(k+1,A).split(",");for(let N of B){let G=N.charAt(0),U=N.slice(1,N.length);G==="s"?h=q(8e3,96001,Rt(U,44100)):G==="r"?p=Rt(U,60):G==="p"?m=!0:G==="a"?(F=Lt(U,null),F!=null&&(I=!0)):G==="b"?(M=Lt(U,null),M!=null&&(I=!0)):G==="c"?(S=Lt(U,null),S!=null&&(I=!0)):G==="d"?(C=Lt(U,null),C!=null&&(C=q(0,4,C),I=!0)):G==="e"?(W=!0,I=!0):G==="f"&&(L=!0,I=!0)}g=e.slice(A+1,e.length),T=!0}let z=null;if(l.Ee(g))z=new URL(g);else return alert(e+" is not a valid url"),!1;if(s&&!T&&z!=null){let B=function(){g=e.slice(0,e.indexOf(",")),z=new URL(g),h=q(8e3,96001,Rt(e.slice(e.indexOf(",")+1),44100))},N=function(){g=e.slice(0,e.indexOf("!")),z=new URL(g),p=Rt(e.slice(e.indexOf("!")+1),60)};e.indexOf("@")!=-1&&(g=e.replaceAll("@",""),z=new URL(g),m=!0),e.indexOf(",")!=-1&&e.indexOf("!")!=-1?e.indexOf(",")<e.indexOf("!")?(N(),B()):(B(),N()):(e.indexOf(",")!=-1&&B(),e.indexOf("!")!=-1&&N())}if(z!=null){let B=g,N=[];h!==44100&&N.push("s"+h),p!==60&&N.push("r"+p),m&&N.push("p"),I&&(F!=null&&N.push("a"+F),M!=null&&N.push("b"+M),S!=null&&N.push("c"+S),C!=null&&N.push("d"+C),W&&N.push("e"),L&&N.push("f")),N.length>0&&(B="!"+N.join(",")+"!"+g),a[y]=B;let G;G=decodeURIComponent(z.pathname.replace(/^([^\/]*\/)+/,""));let U=1;t.chipWaves[d]={name:G,expression:U,isCustomSampled:!0,isPercussion:m,rootKey:p,sampleRate:h,samples:u,samplesR:c,index:d},t.rawChipWaves[d]={name:G,expression:U,isCustomSampled:!0,isPercussion:m,rootKey:p,sampleRate:h,samples:v,samplesR:o,index:d},t.rawRawChipWaves[d]={name:G,expression:U,isCustomSampled:!0,isPercussion:m,rootKey:p,sampleRate:h,samples:v,samplesR:o,index:d};let V={type:"chip",eqFilter:[],effects:[],mdeffects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"harmony",wave:G,unison:"none",envelopes:[],chipWaveInStereo:!0};I&&(V.isUsingAdvancedLoopControls=!0,V.chipWaveLoopStart=F??0,V.chipWaveLoopEnd=M??2,V.chipWaveLoopMode=C??0,V.chipWavePlayBackwards=W,V.chipWaveStartOffset=S??0);let f={index:0,name:G,midiProgram:80,settings:V};i.push(f),t.willReloadForCustomSamples||Cn(g,d,V,{isUsingAdvancedLoopControls:I,chipWaveLoopStart:F,chipWaveLoopEnd:M,chipWaveLoopMode:C,chipWavePlayBackwards:W,chipWaveStartOffset:S},h),n.statusTable[d]=0,n.urlTable[d]=g,n.totalSamples++}return!0}static se(){t.chipWaves=me(t.chipWaves.slice(0,t.firstIndexForSamplesInChipWaveList)),t.rawChipWaves=me(t.rawChipWaves.slice(0,t.firstIndexForSamplesInChipWaveList)),t.rawRawChipWaves=me(t.rawRawChipWaves.slice(0,t.firstIndexForSamplesInChipWaveList))}static ce(){Fe.customSamples=null,l.se(),ye.statusTable={},ye.urlTable={},ye.totalSamples=0,ye.samplesLoaded=0,yt.dispatchEvent(new et(ye.totalSamples,ye.samplesLoaded))}toJsonObject(e=!0,a=1,i=!0){let n=[];for(let r=0;r<this.getChannelCount();r++){let u=this.channels[r],c=[],v=this.getChannelIsNoise(r),o=this.getChannelIsMod(r);for(let h of u.instruments)c.push(h.toJsonObject());let y=[];for(let h of u.patterns)y.push(h.toJsonObject(this,u,o));let d=[];if(e)for(let h=0;h<this.loopStart;h++)d.push(u.bars[h]);for(let h=0;h<a;h++)for(let m=this.loopStart;m<this.loopStart+this.loopLength;m++)d.push(u.bars[m]);if(i)for(let h=this.loopStart+this.loopLength;h<this.barCount;h++)d.push(u.bars[h]);let g={type:o?"mod":v?"drum":"pitch",name:u.name,instruments:c,patterns:y,sequence:d};v||(g.octaveScrollBar=u.octave-1),n.push(g)}let s={name:this.title,format:l.me,version:l.le,scale:t.scales[this.scale].name,customScale:this.scaleCustom,key:t.keys[this.key].name,keyOctave:this.octave,introBars:this.loopStart,loopBars:this.loopLength,beatsPerBar:this.beatsPerBar,ticksPerBeat:t.rhythms[this.rhythm].stepsPerBeat,beatsPerMinute:this.tempo,reverb:this.reverb,masterGain:this.masterGain,compressionThreshold:this.compressionThreshold,limitThreshold:this.limitThreshold,limitDecay:this.limitDecay,limitRise:this.limitRise,limitRatio:this.limitRatio,compressionRatio:this.compressionRatio,songEq:this.eqFilter.toJsonObject(),layeredInstruments:this.layeredInstruments,patternInstruments:this.patternInstruments,channels:n};for(let r=0;r<t.filterMorphCount-1;r++)s["songEq"+r]=this.eqSubFilters[r];return Fe.customSamples!=null&&Fe.customSamples.length>0&&(s.customSamples=Fe.customSamples),s}fromJsonObject(e,a="auto"){if(this.initToDefault(!0),!e)return;a=="auto"&&e.format=="BeepBox"&&(e.riff!=null&&(a="modbox"),e.masterGain!=null&&(a="jummbox"));let i=(a=="auto"?e.format:a).toLowerCase();if(e.name!=null&&(this.title=e.name),e.customSamples!=null){let g=e.customSamples;if(Fe.customSamples==null||Fe.customSamples.join(", ")!=g.join(", ")){t.willReloadForCustomSamples=!0,l.se();let h=!1,m=!1,p=!1,I=[],F=[];for(let M of g)M.toLowerCase()==="legacysamples"?h||(h=!0,I.push(M),Xe(0)):M.toLowerCase()==="nintariboxsamples"?m||(m=!0,I.push(M),Xe(1)):M.toLowerCase()==="mariopaintboxsamples"?p||(p=!0,I.push(M),Xe(2)):l.de(M,I,F,ye,!1);if(I.length>0&&(Fe.customSamples=I),F.length>0){let M=me(F);Fe.presetCategories[Fe.presetCategories.length]={name:"Custom Sample Presets",presets:M,index:Fe.presetCategories.length}}}}else{let g=!1;if(e.channels!=null)for(let h=0;h<e.channels.length;h++){let m=e.channels[h];if(m.type==="pitch"&&Array.isArray(m.instruments)){let p=m.instruments;for(let I=0;I<p.length;I++){let F=p[I];if(F.type!=="chip"||F.wave==null)continue;let M=F.wave,S=["paandorasbox kick","paandorasbox snare","paandorasbox piano1","paandorasbox WOW","paandorasbox overdrive","paandorasbox trumpet","paandorasbox saxophone","paandorasbox orchestrahit","paandorasbox detatched violin","paandorasbox synth","paandorasbox sonic3snare","paandorasbox come on","paandorasbox choir","paandorasbox overdriveguitar","paandorasbox flute","paandorasbox legato violin","paandorasbox tremolo violin","paandorasbox amen break","paandorasbox pizzicato violin","paandorasbox tim allen grunt","paandorasbox tuba","paandorasbox loopingcymbal","paandorasbox standardkick","paandorasbox standardsnare","paandorasbox closedhihat","paandorasbox foothihat","paandorasbox openhihat","paandorasbox crashcymbal","paandorasbox pianoC4","paandorasbox liver pad","paandorasbox marimba","paandorasbox susdotwav","paandorasbox wackyboxtts","paandorasbox peppersteak_1","paandorasbox peppersteak_2","paandorasbox vinyl_noise","paandorasbeta slap bass","paandorasbeta HD EB overdrive guitar","paandorasbeta sunsoft bass","paandorasbeta masculine choir","paandorasbeta feminine choir","paandorasbeta tololoche","paandorasbeta harp","paandorasbeta pan flute","paandorasbeta krumhorn","paandorasbeta timpani","paandorasbeta crowd hey","paandorasbeta wario land 4 brass","paandorasbeta wario land 4 rock organ","paandorasbeta wario land 4 DAOW","paandorasbeta wario land 4 hour chime","paandorasbeta wario land 4 tick","paandorasbeta kirby kick","paandorasbeta kirby snare","paandorasbeta kirby bongo","paandorasbeta kirby click","paandorasbeta sonor kick","paandorasbeta sonor snare","paandorasbeta sonor snare (left hand)","paandorasbeta sonor snare (right hand)","paandorasbeta sonor high tom","paandorasbeta sonor low tom","paandorasbeta sonor hihat (closed)","paandorasbeta sonor hihat (half opened)","paandorasbeta sonor hihat (open)","paandorasbeta sonor hihat (open tip)","paandorasbeta sonor hihat (pedal)","paandorasbeta sonor crash","paandorasbeta sonor crash (tip)","paandorasbeta sonor ride"],C=["pandoraasbox kick","pandoraasbox snare","pandoraasbox piano1","pandoraasbox WOW","pandoraasbox overdrive","pandoraasbox trumpet","pandoraasbox saxophone","pandoraasbox orchestrahit","pandoraasbox detatched violin","pandoraasbox synth","pandoraasbox sonic3snare","pandoraasbox come on","pandoraasbox choir","pandoraasbox overdriveguitar","pandoraasbox flute","pandoraasbox legato violin","pandoraasbox tremolo violin","pandoraasbox amen break","pandoraasbox pizzicato violin","pandoraasbox tim allen grunt","pandoraasbox tuba","pandoraasbox loopingcymbal","pandoraasbox standardkick","pandoraasbox standardsnare","pandoraasbox closedhihat","pandoraasbox foothihat","pandoraasbox openhihat","pandoraasbox crashcymbal","pandoraasbox pianoC4","pandoraasbox liver pad","pandoraasbox marimba","pandoraasbox susdotwav","pandoraasbox wackyboxtts","pandoraasbox peppersteak_1","pandoraasbox peppersteak_2","pandoraasbox vinyl_noise","pandoraasbeta slap bass","pandoraasbeta HD EB overdrive guitar","pandoraasbeta sunsoft bass","pandoraasbeta masculine choir","pandoraasbeta feminine choir","pandoraasbeta tololoche","pandoraasbeta harp","pandoraasbeta pan flute","pandoraasbeta krumhorn","pandoraasbeta timpani","pandoraasbeta crowd hey","pandoraasbeta wario land 4 brass","pandoraasbeta wario land 4 rock organ","pandoraasbeta wario land 4 DAOW","pandoraasbeta wario land 4 hour chime","pandoraasbeta wario land 4 tick","pandoraasbeta kirby kick","pandoraasbeta kirby snare","pandoraasbeta kirby bongo","pandoraasbeta kirby click","pandoraasbeta sonor kick","pandoraasbeta sonor snare","pandoraasbeta sonor snare (left hand)","pandoraasbeta sonor snare (right hand)","pandoraasbeta sonor high tom","pandoraasbeta sonor low tom","pandoraasbeta sonor hihat (closed)","pandoraasbeta sonor hihat (half opened)","pandoraasbeta sonor hihat (open)","pandoraasbeta sonor hihat (open tip)","pandoraasbeta sonor hihat (pedal)","pandoraasbeta sonor crash","pandoraasbeta sonor crash (tip)","pandoraasbeta sonor ride"],W=["kick","snare","piano1","WOW","overdrive","trumpet","saxophone","orchestrahit","detatched violin","synth","sonic3snare","come on","choir","overdriveguitar","flute","legato violin","tremolo violin","amen break","pizzicato violin","tim allen grunt","tuba","loopingcymbal","standardkick","standardsnare","closedhihat","foothihat","openhihat","crashcymbal","pianoC4","liver pad","marimba","susdotwav","wackyboxtts"];S.includes(M)?g=!0:C.includes(M)?(g=!0,F.wave=S[C.findIndex(L=>L===M)]):W.includes(M)&&((M==="trumpet"||M==="flute")&&i!="paandorasbox"||(g=!0,F.wave=S[W.findIndex(L=>L===M)]))}}}g?(t.willReloadForCustomSamples=!0,l.se(),Xe(0),Fe.customSamples=["legacySamples"]):Fe.customSamples!=null&&Fe.customSamples.length>0&&(t.willReloadForCustomSamples=!0,l.ce())}if(this.scale=0,e.scale!=null){let g={"romani :)":"double harmonic :)","romani :(":"double harmonic :(","dbl harmonic :)":"double harmonic :)","dbl harmonic :(":"double harmonic :(",enigma:"strange"},h=g[e.scale]!=null?g[e.scale]:e.scale,m=t.scales.findIndex(p=>p.name==h);if(m!=-1&&(this.scale=m),this.scale==t.scales.dictionary.Custom.index&&e.customScale!=null)for(var n of e.customScale.keys())this.scaleCustom[n]=e.customScale[n]}if(e.key!=null){if(typeof e.key=="number")this.key=(e.key+1200>>>0)%t.keys.length;else if(typeof e.key=="string"){let g=e.key;if(g==="C+")this.key=0,this.octave=1;else if(g==="G- (actually F#-)")this.key=6,this.octave=-1;else if(g==="C-")this.key=0,this.octave=-1;else if(g==="oh no (F-)")this.key=5,this.octave=-1;else{let h=g.charAt(0).toUpperCase(),m=g.charAt(1).toLowerCase(),p={C:0,D:2,E:4,F:5,G:7,A:9,B:11},I={"#":1,"\u266F":1,b:-1,"\u266D":-1},F=p[h],M=I[m];F!=null&&(M!=null&&(F+=M),F<0&&(F+=12),F=F%12,this.key=F)}}}e.beatsPerMinute!=null&&(this.tempo=q(t.tempoMin,t.tempoMax+1,e.beatsPerMinute|0)),e.keyOctave!=null&&(this.octave=q(t.octaveMin,t.octaveMax+1,e.keyOctave|0));let s=0;e.reverb!=null&&(s=q(0,32,e.reverb|0)),e.beatsPerBar!=null&&(this.beatsPerBar=Math.max(t.beatsPerBarMin,Math.min(t.beatsPerBarMax,e.beatsPerBar|0)));let r=4;e.ticksPerBeat!=null&&(r=e.ticksPerBeat|0||4,this.rhythm=t.rhythms.findIndex(g=>g.stepsPerBeat==r),this.rhythm==-1&&(this.rhythm=1)),e.masterGain!=null?this.masterGain=Math.max(0,Math.min(5,e.masterGain||0)):this.masterGain=1,e.limitThreshold!=null?this.limitThreshold=Math.max(0,Math.min(2,e.limitThreshold||0)):this.limitThreshold=1,e.compressionThreshold!=null?this.compressionThreshold=Math.max(0,Math.min(1.1,e.compressionThreshold||0)):this.compressionThreshold=1,e.limitRise!=null?this.limitRise=Math.max(2e3,Math.min(1e4,e.limitRise||0)):this.limitRise=4e3,e.limitDecay!=null?this.limitDecay=Math.max(1,Math.min(30,e.limitDecay||0)):this.limitDecay=4,e.limitRatio!=null?this.limitRatio=Math.max(0,Math.min(11,e.limitRatio||0)):this.limitRatio=1,e.compressionRatio!=null?this.compressionRatio=Math.max(0,Math.min(1.168,e.compressionRatio||0)):this.compressionRatio=1,e.songEq!=null?this.eqFilter.fromJsonObject(e.songEq):this.eqFilter.reset();for(let g=0;g<t.filterMorphCount-1;g++)e["songEq"+g]?this.eqSubFilters[g]=e["songEq"+g]:this.eqSubFilters[g]=null;let u=1,c=1,v=1;if(e.channels!=null)for(let g of e.channels)g.instruments&&(u=Math.max(u,g.instruments.length|0)),g.patterns&&(c=Math.max(c,g.patterns.length|0)),g.sequence&&(v=Math.max(v,g.sequence.length|0));e.layeredInstruments!=null?this.layeredInstruments=!!e.layeredInstruments:this.layeredInstruments=!1,e.patternInstruments!=null?this.patternInstruments=!!e.patternInstruments:this.patternInstruments=u>1,this.patternsPerChannel=Math.min(c,t.barCountMax),this.barCount=Math.min(v,t.barCountMax),e.introBars!=null&&(this.loopStart=q(0,this.barCount,e.introBars|0)),e.loopBars!=null&&(this.loopLength=q(1,this.barCount-this.loopStart+1,e.loopBars|0));let o=[],y=[],d=[];if(e.channels!=null)for(let g=0;g<e.channels.length;g++){let h=e.channels[g],m=new Dt,p=!1,I=!1;if(h.type!=null?(p=h.type=="drum",I=h.type=="mod"):p=g>=3,p?y.push(m):I?d.push(m):o.push(m),h.octaveScrollBar!=null&&(m.octave=q(0,t.pitchOctaves,(h.octaveScrollBar|0)+1),p&&(m.octave=0)),h.name!=null?m.name=h.name:m.name="",Array.isArray(h.instruments)){let F=h.instruments;for(let M=0;M<F.length&&!(M>=this.getMaxInstrumentsPerChannel());M++){let S=new ze(p,I);m.instruments[M]=S,S.fromJsonObject(F[M],p,I,!1,!1,s,i)}}for(let F=0;F<this.patternsPerChannel;F++){let M=new pt;m.patterns[F]=M;let S;h.patterns&&(S=h.patterns[F]),S!=null&&M.fromJsonObject(S,this,m,r,p,I,i)}m.patterns.length=this.patternsPerChannel;for(let F=0;F<this.barCount;F++)m.bars[F]=h.sequence!=null?Math.min(this.patternsPerChannel,h.sequence[F]>>>0):0;m.bars.length=this.barCount}o.length>t.pitchChannelCountMax&&(o.length=t.pitchChannelCountMax),y.length>t.noiseChannelCountMax&&(y.length=t.noiseChannelCountMax),d.length>t.modChannelCountMax&&(d.length=t.modChannelCountMax),this.pitchChannelCount=o.length,this.noiseChannelCount=y.length,this.modChannelCount=d.length,this.channels.length=0,Array.prototype.push.apply(this.channels,o),Array.prototype.push.apply(this.channels,y),Array.prototype.push.apply(this.channels,d),t.willReloadForCustomSamples&&(window.location.hash=this.toBase64String(),setTimeout(()=>{location.reload()},50))}getPattern(e,a){if(a<0||a>=this.barCount)return null;let i=this.channels[e].bars[a];return i==0?null:this.channels[e].patterns[i-1]}getBeatsPerMinute(){return this.tempo}static getNeededBits(e){return 32-Math.clz32(Math.ceil(e+1)-1)}restoreLimiterDefaults(){this.compressionRatio=1,this.limitRatio=1,this.limitRise=4e3,this.limitDecay=4,this.limitThreshold=1,this.compressionThreshold=1,this.masterGain=1}};var Xt=class{instrumentIndex;pitches=Array(t.maxChordSize+2).fill(0);pitchCount=0;chordSize=0;drumsetPitch=null;note=null;prevNote=null;nextNote=null;prevNotePitchIndex=0;nextNotePitchIndex=0;freshlyAllocated=!0;atNoteStart=!1;isOnLastTick=!1;passedEndOfNote=!1;forceContinueAtStart=!1;forceContinueAtEnd=!1;noteStartPart=0;noteEndPart=0;ticksSinceReleased=0;liveInputSamplesHeld=0;lastInterval=0;chipWaveStartOffset=0;noiseSample=0;noiseSampleA=0;noiseSampleB=0;stringSustainStart=0;stringSustainEnd=0;noiseSamples=[];phases=[];operatorWaves=[];phaseDeltas=[];directions=[];chipWaveCompletions=[];chipWavePrevWavesL=[];chipWavePrevWavesR=[];chipWaveCompletionsLastWaveL=[];chipWaveCompletionsLastWaveR=[];phaseDeltaScales=[];expression=0;expressionDelta=0;operatorExpressions=[];operatorExpressionDeltas=[];prevPitchExpressions=Array(t.maxPitchOrOperatorCount).fill(null);prevVibrato=null;prevStringDecay=null;pulseWidth=0;pulseWidthDelta=0;decimalOffset=0;supersawDynamism=0;supersawDynamismDelta=0;supersawUnisonDetunes=[];supersawShape=0;supersawShapeDelta=0;supersawDelayLength=0;supersawDelayLengthDelta=0;supersawDelayLine=null;supersawDelayIndex=-1;supersawPrevPhaseDelta=null;pickedStrings=[];noteFiltersL=[];noteFiltersR=[];noteFilterCount=0;initialNoteFilterInputL1=0;initialNoteFilterInputR1=0;initialNoteFilterInputL2=0;initialNoteFilterInputR2=0;specialIntervalExpressionMult=1;feedbackOutputs=[];feedbackMult=0;feedbackDelta=0;stereoVolumeLStart=0;stereoVolumeRStart=0;stereoVolumeLDelta=0;stereoVolumeRDelta=0;stereoDelayStart=0;stereoDelayEnd=0;stereoDelayDelta=0;customVolumeStart=0;customVolumeEnd=0;filterResonanceStart=0;filterResonanceDelta=0;isFirstOrder=!1;envelopeComputer=new rt;constructor(){this.reset()}reset(){for(let e=0;e<t.unisonVoicesMax;e++)this.noiseSamples[e]=0;for(let e=0;e<t.maxPitchOrOperatorCount;e++)this.phases[e]=0,this.directions[e]=1,this.chipWaveCompletions[e]=0,this.chipWavePrevWavesL[e]=0,this.chipWavePrevWavesR[e]=0,this.chipWaveCompletionsLastWaveL[e]=0,this.chipWaveCompletionsLastWaveR[e]=0,this.operatorWaves[e]=t.operatorWaves[0],this.feedbackOutputs[e]=0,this.prevPitchExpressions[e]=null;for(let e=0;e<this.noteFilterCount;e++)this.noteFiltersL[e].resetOutput(),this.noteFiltersR[e].resetOutput();this.noteFilterCount=0,this.initialNoteFilterInputL1=0,this.initialNoteFilterInputR1=0,this.initialNoteFilterInputL2=0,this.initialNoteFilterInputR2=0,this.liveInputSamplesHeld=0,this.supersawDelayIndex=-1;for(let e of this.pickedStrings)e.reset();this.envelopeComputer.reset(),this.prevVibrato=null,this.prevStringDecay=null,this.supersawPrevPhaseDelta=null,this.drumsetPitch=null}};var ct=1e-24,ue=class l{syncSongState(){let e=this.song.getChannelCount();for(let a=this.channels.length;a<e;a++)this.channels[a]=new Ht;this.channels.length=e;for(let a=0;a<e;a++){let i=this.song.channels[a],n=this.channels[a];for(let s=n.instruments.length;s<i.instruments.length;s++)n.instruments[s]=new Bt;if(n.instruments.length=i.instruments.length,n.muted!=i.muted&&(n.muted=i.muted,n.muted))for(let s of n.instruments)s.resetAllEffects()}}initModFilters(e){if(e!=null){e.tmpEqFilterStart=e.eqFilter,e.tmpEqFilterEnd=null;for(let a=0;a<e.getChannelCount();a++)for(let i=0;i<e.channels[a].instruments.length;i++){let n=e.channels[a].instruments[i];for(let s=0;s<e.channels[a].instruments[i].effects.length;s++){let r=e.channels[a].instruments[i].effects[s];r.tmpEqFilterStart=r.eqFilter,r.tmpEqFilterEnd=null}n.tmpNoteFilterStart=n.noteFilter,n.tmpNoteFilterEnd=null}}}warmUpSynthesizer(e){if(e!=null){this.syncSongState();let i=this.getSamplesPerTick();for(let n=0;n<e.getChannelCount();n++)for(let s=0;s<e.channels[n].instruments.length;s++){let r=e.channels[n].instruments[s],u=this.channels[n].instruments[s];l.getInstrumentSynthFunction(r),u.vibratoTime=0,u.nextVibratoTime=0;for(let c=0;c<t.maxEnvelopeCount+1;c++)u.envelopeTime[c]=0;u.arpTime=0,u.updateWaves(r,this.samplesPerSecond),u.allocateNecessaryBuffers(this,r,i)}}var a=new Float32Array(1);this.isPlayingSong=!0,this.synthesize(a,a,1,!0),this.isPlayingSong=!1}computeLatestModValues(){if(this.song!=null&&this.song.modChannelCount>0){let e=[],a=[];this.modValues=[],this.nextModValues=[],this.modInsValues=[],this.nextModInsValues=[],this.heldMods=[];for(let n=0;n<this.song.pitchChannelCount+this.song.noiseChannelCount;n++){a[n]=[],this.modInsValues[n]=[],this.nextModInsValues[n]=[];for(let s=0;s<this.song.channels[n].instruments.length;s++)this.modInsValues[n][s]=[],this.nextModInsValues[n][s]=[],a[n][s]=[]}let i=this.beat*t.partsPerBeat+this.part;for(let n=this.song.pitchChannelCount+this.song.noiseChannelCount;n<this.song.getChannelCount();n++)if(!this.song.channels[n].muted){let s;for(let r=this.bar;r>=0;r--)if(s=this.song.getPattern(n,r),s!=null){let u=s.instruments[0],c=this.song.channels[n].instruments[u],v=[],o=[],y=r==this.bar?i:this.findPartsInBar(r);for(let d of s.notes)if(d.start<=y&&(v[t.modCount-1-d.pitches[0]]==null||d.end>v[t.modCount-1-d.pitches[0]]))if(d.start==y&&(v[t.modCount-1-d.pitches[0]]=d.start,o[t.modCount-1-d.pitches[0]]=d.pins[0].size),d.end<=y)v[t.modCount-1-d.pitches[0]]=d.end,o[t.modCount-1-d.pitches[0]]=d.pins[d.pins.length-1].size;else{v[t.modCount-1-d.pitches[0]]=y;for(let g=0;g<d.pins.length;g++)if(d.pins[g].time+d.start>y){let h=d.pins[g].time-d.pins[g-1].time,m=y-d.start-d.pins[g-1].time,p=d.pins[g].size-d.pins[g-1].size;o[t.modCount-1-d.pitches[0]]=Math.round(d.pins[g-1].size+p*m/h),g=d.pins.length}}for(let d=0;d<t.modCount;d++)if(v[d]!=null)if(t.modulators[c.modulators[d]].forSong){let g=c.modulators[d]==t.modulators.dictionary["song eq"].index;if(e[c.modulators[d]]==null||r*t.partsPerBeat*this.song.beatsPerBar+v[d]>e[c.modulators[d]]){if(g){let h=this.song;if(c.modFilterTypes[d]==0)h.tmpEqFilterStart=h.eqSubFilters[o[d]];else{for(let m=0;m<t.filterMorphCount;m++)h.tmpEqFilterStart!=null&&h.tmpEqFilterStart==h.eqSubFilters[m]&&(h.tmpEqFilterStart=new Ee,h.tmpEqFilterStart.fromJsonObject(h.eqSubFilters[m].toJsonObject()),m=t.filterMorphCount);h.tmpEqFilterStart!=null&&Math.floor((c.modFilterTypes[d]-1)/2)<h.tmpEqFilterStart.controlPointCount&&(c.modFilterTypes[d]%2?h.tmpEqFilterStart.controlPoints[Math.floor((c.modFilterTypes[d]-1)/2)].freq=o[d]:h.tmpEqFilterStart.controlPoints[Math.floor((c.modFilterTypes[d]-1)/2)].gain=o[d])}h.tmpEqFilterEnd=h.tmpEqFilterStart}for(let h=0;h<c.modChannels[d].length;h++)this.setModValue(o[d],o[d],c.modChannels[d][h],c.modInstruments[d][h],c.modulators[d]);e[c.modulators[d]]=r*t.partsPerBeat*this.song.beatsPerBar+v[d]}}else{let g=[],h=[];if(c.modInstruments[d][0]==this.song.channels[c.modChannels[d][0]].instruments.length)for(let m=0;m<this.song.channels[c.modChannels[d][0]].instruments.length;m++)g.push(c.modChannels[d][0]),h.push(m);else if(c.modInstruments[d][0]>this.song.channels[c.modChannels[d][0]].instruments.length){let m=this.song.getPattern(c.modChannels[d][0],r);m!=null&&(g.push(c.modChannels[d][0]),h=m.instruments)}else for(let m=0;m<c.modChannels[d].length;m++)g.push(c.modChannels[d][m]),h.push(c.modInstruments[d][m]);for(let m=0;m<h.length;m++){let p=c.modulators[d]==t.modulators.dictionary["post eq"].index,I=c.modulators[d]==t.modulators.dictionary["pre eq"].index,F=c.modulators[d];if(p?F=t.modulators.length+(c.modFilterTypes[d]|0):I&&(F=t.modulators.length+1+2*t.filterMaxPoints+(c.modFilterTypes[d]|0)),a[c.modChannels[d][m]][h[m]][F]==null||r*t.partsPerBeat*this.song.beatsPerBar+v[d]>a[c.modChannels[d][m]][h[m]][F]){if(p){let M=this.song.channels[c.modChannels[d][m]].instruments[h[m]];for(let S=0;S<M.effects.length;S++){let C=M.effects[S];if(c.modFilterTypes[d]==0)C.tmpEqFilterStart=C.eqSubFilters[o[d]];else{for(let W=0;W<t.filterMorphCount;W++)C.tmpEqFilterStart!=null&&C.tmpEqFilterStart==C.eqSubFilters[W]&&(C.tmpEqFilterStart=new Ee,C.tmpEqFilterStart.fromJsonObject(C.eqSubFilters[W].toJsonObject()),W=t.filterMorphCount);C.tmpEqFilterStart!=null&&Math.floor((c.modFilterTypes[d]-1)/2)<C.tmpEqFilterStart.controlPointCount&&(c.modFilterTypes[d]%2?C.tmpEqFilterStart.controlPoints[Math.floor((c.modFilterTypes[d]-1)/2)].freq=o[d]:C.tmpEqFilterStart.controlPoints[Math.floor((c.modFilterTypes[d]-1)/2)].gain=o[d])}C.tmpEqFilterEnd=C.tmpEqFilterStart}}else if(I){let M=this.song.channels[c.modChannels[d][m]].instruments[h[m]];if(c.modFilterTypes[d]==0)M.tmpNoteFilterStart=M.noteSubFilters[o[d]];else{for(let S=0;S<t.filterMorphCount;S++)M.tmpNoteFilterStart!=null&&M.tmpNoteFilterStart==M.noteSubFilters[S]&&(M.tmpNoteFilterStart=new Ee,M.tmpNoteFilterStart.fromJsonObject(M.noteSubFilters[S].toJsonObject()),S=t.filterMorphCount);M.tmpNoteFilterStart!=null&&Math.floor((c.modFilterTypes[d]-1)/2)<M.tmpNoteFilterStart.controlPointCount&&(c.modFilterTypes[d]%2?M.tmpNoteFilterStart.controlPoints[Math.floor((c.modFilterTypes[d]-1)/2)].freq=o[d]:M.tmpNoteFilterStart.controlPoints[Math.floor((c.modFilterTypes[d]-1)/2)].gain=o[d])}M.tmpNoteFilterEnd=M.tmpNoteFilterStart}else this.setModValue(o[d],o[d],c.modChannels[d][m],h[m],F);a[c.modChannels[d][m]][h[m]][F]=r*t.partsPerBeat*this.song.beatsPerBar+v[d]}}}}}}}determineInvalidModulators(e){if(this.song!=null)for(let a=0;a<t.modCount;a++){if(e.invalidModulators[a]=!0,e.modChannels[a][0]==-1){e.modulators[a]!=0&&(e.invalidModulators[a]=!1);continue}for(let i=0;i<e.modChannels[a].length;i++){let n=this.song.channels[e.modChannels[a][i]];if(n==null)continue;let s=[];e.modInstruments[a][i]>=n.instruments.length?s=n.instruments:s=[n.instruments[e.modInstruments[a][i]]];for(let r=0;r<s.length;r++){let u=s[r],c=u.effects[0];if(u==null)continue;let v=t.modulators[e.modulators[a]].name;(!(t.modulators[e.modulators[a]].associatedEffect!=11&&!u.effectsIncludeType(t.modulators[e.modulators[a]].associatedEffect))&&!(t.modulators[e.modulators[a]].associatedMDEffect!=6&&!(u.mdeffects&1<<t.modulators[e.modulators[a]].associatedMDEffect))||u.type!=1&&u.type!=11&&(v=="fm slider 1"||v=="fm slider 2"||v=="fm slider 3"||v=="fm slider 4"||v=="fm feedback")||u.type!=11&&(v=="fm slider 5"||v=="fm slider 6")||u.type!=6&&u.type!=8&&(v=="pulse width"||v=="decimal offset")||u.type!=8&&(v=="dynamism"||v=="spread"||v=="saw shape")||!u.getChord().arpeggiates&&(v=="arp speed"||v=="reset arp")||c.eqFilterType&&v=="post eq"||!c.eqFilterType&&(v=="post eq cut"||v=="post eq peak")||v=="post eq"&&Math.floor((e.modFilterTypes[a]+1)/2)>u.getLargestControlPointCount(!1)||u.noteFilterType&&v=="pre eq"||!u.noteFilterType&&(v=="pre eq cut"||v=="pre eq peak")||v=="pre eq"&&Math.floor((e.modFilterTypes[a]+1)/2)>u.getLargestControlPointCount(!0))&&(e.invalidModulators[a]=!1,r=s.length)}}}}static operatorAmplitudeCurve(e){return(Math.pow(16,e/15)-1)/15}samplesPerSecond=44100;panningDelayBufferSize;panningDelayBufferMask;flangerDelayBufferSize;flangerDelayBufferMask;chorusDelayBufferSize;chorusDelayBufferMask;song=null;preferLowerLatency=!1;anticipatePoorPerformance=!1;liveInputDuration=0;liveBassInputDuration=0;liveInputStarted=!1;liveBassInputStarted=!1;liveInputPitches=[];liveBassInputPitches=[];liveInputChannel=0;liveBassInputChannel=0;liveInputInstruments=[];liveBassInputInstruments=[];loopRepeatCount=-1;volume=1;oscRefreshEventTimer=0;oscEnabled=!0;enableMetronome=!1;countInMetronome=!1;renderingSong=!1;heldMods=[];wantToSkip=!1;playheadInternal=0;bar=0;prevBar=null;nextBar=null;beat=0;part=0;tick=0;isAtStartOfTick=!0;isAtEndOfTick=!0;tickSampleCountdown=0;modValues=[];modInsValues=[];nextModValues=[];nextModInsValues=[];isPlayingSong=!1;isRecording=!1;liveInputEndTime=0;browserAutomaticallyClearsAudioBuffer=!0;static tempFilterStartCoefficients=new je;static tempFilterEndCoefficients=new je;tempDrumSetControlPoint=new Me;tempFrequencyResponse=new tt;loopBarStart=-1;loopBarEnd=-1;static fmSynthFunctionCache={};static fm6SynthFunctionCache={};static effectsFunctionCache={};static pickedStringFunctionCache=Array(3).fill(void 0);channels=[];tonePool=new _e;tempMatchedPitchTones=Array(t.maxChordSize).fill(null);startedMetronome=!1;metronomeSamplesRemaining=-1;metronomeAmplitude=0;metronomePrevAmplitude=0;metronomeFilter=0;limit=0;songEqFilterVolume=1;songEqFilterVolumeDelta=0;songEqFiltersL=[];songEqFiltersR=[];songEqFilterCount=0;initialSongEqFilterInput1L=0;initialSongEqFilterInput2L=0;initialSongEqFilterInput1R=0;initialSongEqFilterInput2R=0;tempInstrumentSampleBufferL=null;tempInstrumentSampleBufferR=null;audioCtx=null;scriptNode=null;get playing(){return this.isPlayingSong}get recording(){return this.isRecording}get playhead(){return this.playheadInternal}set playhead(e){if(this.song!=null){this.playheadInternal=Math.max(0,Math.min(this.song.barCount,e));let a=this.playheadInternal;this.bar=Math.floor(a),a=this.song.beatsPerBar*(a-this.bar),this.beat=Math.floor(a),a=t.partsPerBeat*(a-this.beat),this.part=Math.floor(a),a=t.ticksPerPart*(a-this.part),this.tick=Math.floor(a),this.tickSampleCountdown=0,this.isAtStartOfTick=!0,this.prevBar=null}}getSamplesPerBar(){if(this.song==null)throw new Error;return this.getSamplesPerTick()*t.ticksPerPart*t.partsPerBeat*this.song.beatsPerBar}getTicksIntoBar(){return(this.beat*t.partsPerBeat+this.part)*t.ticksPerPart+this.tick}getCurrentPart(){return this.beat*t.partsPerBeat+this.part}findPartsInBar(e){if(this.song==null)return 0;let a=t.partsPerBeat*this.song.beatsPerBar;for(let i=this.song.pitchChannelCount+this.song.noiseChannelCount;i<this.song.getChannelCount();i++){let n=this.song.getPattern(i,e);if(n!=null){let s=this.song.channels[i].instruments[n.instruments[0]];for(let r=0;r<t.modCount;r++)if(s.modulators[r]==t.modulators.dictionary["next bar"].index)for(let u of n.notes)u.pitches[0]==t.modCount-1-r&&a>u.start&&(a=u.start)}}return a}getTotalSamples(e,a,i){if(this.song==null)return-1;let n=e?0:this.song.loopStart,s=a?this.song.barCount:this.song.loopStart+this.song.loopLength,r=!1,u=!1,c=this.song.tempo;for(let v=this.song.getChannelCount()-1;v>=this.song.pitchChannelCount+this.song.noiseChannelCount;v--)for(let o=n;o<s;o++){let y=this.song.getPattern(v,o);if(y!=null){let d=this.song.channels[v].instruments[y.instruments[0]];for(let g=0;g<t.modCount;g++)d.modulators[g]==t.modulators.dictionary.tempo.index&&(r=!0),d.modulators[g]==t.modulators.dictionary["next bar"].index&&(u=!0)}}if(n>0){let v=null,o=0;for(let y=n-1;y>=0;y--){for(let d=this.song.getChannelCount()-1;d>=this.song.pitchChannelCount+this.song.noiseChannelCount;d--){let g=this.song.getPattern(d,y);if(g!=null){let h=g.instruments[0],m=this.song.channels[d].instruments[h],p=this.findPartsInBar(y);for(let I of g.notes)if(m.modulators[t.modCount-1-I.pitches[0]]==t.modulators.dictionary.tempo.index&&I.start<p&&(v==null||I.end>v))if(I.end<=p)v=I.end,o=I.pins[I.pins.length-1].size;else{v=p;for(let F=0;F<I.pins.length;F++)if(I.pins[F].time+I.start>p){let M=I.pins[F].time-I.pins[F-1].time,S=p-I.start-I.pins[F-1].time,C=I.pins[F].size-I.pins[F-1].size;o=Math.round(I.pins[F-1].size+C*S/M),F=I.pins.length}}}}v!=null&&(c=o+t.modulators.dictionary.tempo.convertRealFactor,y=-1)}}if(r||u){let v=n,o=!1,y=0;for(;!o;){let d=t.partsPerBeat*this.song.beatsPerBar,g=0;if(u&&(d=this.findPartsInBar(v)),r){let h=!1;for(let m=this.song.getChannelCount()-1;m>=this.song.pitchChannelCount+this.song.noiseChannelCount;m--)if(h==!1){let p=this.song.getPattern(m,v);if(p!=null){let I=this.song.channels[m].instruments[p.instruments[0]];for(let F=0;F<t.modCount;F++)if(h==!1&&I.modulators[F]==t.modulators.dictionary.tempo.index&&p.notes.find(M=>M.pitches[0]==t.modCount-1-F)){h=!0,p.notes.sort(function(M,S){return M.start==S.start?M.pitches[0]-S.pitches[0]:M.start-S.start});for(let M of p.notes)if(M.pitches[0]==t.modCount-1-F&&(y+=Math.min(d-g,M.start-g)*t.ticksPerPart*this.getSamplesPerTickSpecificBPM(c),M.start<d))for(let S=1;S<M.pins.length;S++){if(M.pins[S-1].time+M.start<=d){let C=t.ticksPerPart*Math.min(d-(M.start+M.pins[S-1].time),M.pins[S].time-M.pins[S-1].time),W=M.pins[S-1].size+t.modulators.dictionary.tempo.convertRealFactor,L=M.pins[S].size+t.modulators.dictionary.tempo.convertRealFactor;M.pins[S].time+M.start>d&&(L=M.pins[S-1].size+(M.pins[S].size-M.pins[S-1].size)*(d-(M.start+M.pins[S-1].time))/(M.pins[S].time-M.pins[S-1].time)+t.modulators.dictionary.tempo.convertRealFactor);let T=t.partsPerBeat*t.ticksPerPart/60;L!=W?y+=-this.samplesPerSecond*C*(Math.log(T*L*C)-Math.log(T*W*C))/(T*(W-L)):y+=C*this.getSamplesPerTickSpecificBPM(L),c=L}g=Math.min(M.start+M.pins[S].time,d)}}}}}y+=(d-g)*t.ticksPerPart*this.getSamplesPerTickSpecificBPM(c),v++,i!=0&&v==this.song.loopStart+this.song.loopLength&&(v=this.song.loopStart,i>0&&i--),v>=s&&(o=!0)}return Math.ceil(y)}else return this.getSamplesPerBar()*this.getTotalBars(e,a,i)}getTotalBars(e,a,i=this.loopRepeatCount){if(this.song==null)throw new Error;let n=this.song.loopLength*(i+1);return e&&(n+=this.song.loopStart),a&&(n+=this.song.barCount-(this.song.loopStart+this.song.loopLength)),n}constructor(e=null){this.computeDelayBufferSizes(),e!=null&&this.setSong(e)}setSong(e){typeof e=="string"?this.song=new Nt(e):e instanceof Nt&&(this.song=e),this.prevBar=null}computeDelayBufferSizes(){this.panningDelayBufferSize=$e(this.samplesPerSecond*t.panDelaySecondsMax),this.panningDelayBufferMask=this.panningDelayBufferSize-1,this.flangerDelayBufferSize=$e(this.samplesPerSecond*t.flangerMaxDelay),this.flangerDelayBufferMask=this.flangerDelayBufferSize-1,this.chorusDelayBufferSize=$e(this.samplesPerSecond*t.chorusMaxDelay),this.chorusDelayBufferMask=this.chorusDelayBufferSize-1}activateAudio(){let e=this.anticipatePoorPerformance?this.preferLowerLatency?2048:4096:this.preferLowerLatency?512:2048;if(this.audioCtx==null||this.scriptNode==null||this.scriptNode.bufferSize!=e){this.scriptNode!=null&&this.deactivateAudio();let a=this.anticipatePoorPerformance?this.preferLowerLatency?"balanced":"playback":this.preferLowerLatency?"interactive":"balanced";this.audioCtx=this.audioCtx||new(window.AudioContext||window.webkitAudioContext)({latencyHint:a}),this.samplesPerSecond=this.audioCtx.sampleRate,this.scriptNode=this.audioCtx.createScriptProcessor?this.audioCtx.createScriptProcessor(e,0,2):this.audioCtx.createJavaScriptNode(e,0,2),this.scriptNode.onaudioprocess=this.audioProcessCallback,this.scriptNode.channelCountMode="explicit",this.scriptNode.channelInterpretation="speakers",this.scriptNode.connect(this.audioCtx.destination),this.computeDelayBufferSizes()}this.audioCtx.resume()}deactivateAudio(){this.audioCtx!=null&&this.scriptNode!=null&&(this.scriptNode.disconnect(this.audioCtx.destination),this.scriptNode=null,this.audioCtx.close&&this.audioCtx.close(),this.audioCtx=null)}maintainLiveInput(){this.activateAudio(),this.liveInputEndTime=performance.now()+1e4}play(){this.isPlayingSong||(this.initModFilters(this.song),this.computeLatestModValues(),this.activateAudio(),this.warmUpSynthesizer(this.song),this.isPlayingSong=!0)}pause(){if(this.isPlayingSong&&(this.isPlayingSong=!1,this.isRecording=!1,this.preferLowerLatency=!1,this.modValues=[],this.nextModValues=[],this.heldMods=[],this.song!=null)){this.song.inVolumeCap=0,this.song.outVolumeCap=0,this.song.outVolumeCapL=0,this.song.outVolumeCapR=0,this.song.tmpEqFilterStart=null,this.song.tmpEqFilterEnd=null;for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)this.modInsValues[e]=[],this.nextModInsValues[e]=[]}}startRecording(){this.preferLowerLatency=!0,this.isRecording=!0,this.play()}resetEffects(){if(this.limit=0,this.freeAllTones(),this.song!=null)for(let e of this.channels)for(let a of e.instruments)a.resetAllEffects()}setModValue(e,a,i,n,s){let r=e+t.modulators[s].convertRealFactor,u=a+t.modulators[s].convertRealFactor;return t.modulators[s].forSong?(this.modValues[s]==null||this.modValues[s]!=r||this.nextModValues[s]!=u)&&(this.modValues[s]=r,this.nextModValues[s]=u):(this.modInsValues[i][n][s]==null||this.modInsValues[i][n][s]!=r||this.nextModInsValues[i][n][s]!=u)&&(this.modInsValues[i][n][s]=r,this.nextModInsValues[i][n][s]=u),r}getModValue(e,a,i,n){if(t.modulators[e].forSong){if(this.modValues[e]!=null&&this.nextModValues[e]!=null)return n?this.nextModValues[e]:this.modValues[e]}else if(a!=null&&i!=null&&this.modInsValues[a][i][e]!=null&&this.nextModInsValues[a][i][e]!=null)return n?this.nextModInsValues[a][i][e]:this.modInsValues[a][i][e];return-1}isAnyModActive(e,a){for(let i=0;i<t.modulators.length;i++)if(this.modValues!=null&&this.modValues[i]!=null||this.modInsValues!=null&&this.modInsValues[e]!=null&&this.modInsValues[e][a]!=null&&this.modInsValues[e][a][i]!=null)return!0;return!1}unsetMod(e,a,i){if(this.isModActive(e)||a!=null&&i!=null&&this.isModActive(e,a,i)){this.modValues[e]=null,this.nextModValues[e]=null;for(let n=0;n<this.heldMods.length;n++)a!=null&&i!=null?this.heldMods[n].channelIndex==a&&this.heldMods[n].instrumentIndex==i&&this.heldMods[n].setting==e&&this.heldMods.splice(n,1):this.heldMods[n].setting==e&&this.heldMods.splice(n,1);a!=null&&i!=null&&(this.modInsValues[a][i][e]=null,this.nextModInsValues[a][i][e]=null)}}isFilterModActive(e,a,i,n){let s=this.song.channels[a].instruments[i];if(e){if(s.noteFilterType)return!1;if(s.tmpNoteFilterEnd!=null)return!0}else if(n){if(this?.song?.tmpEqFilterEnd!=null)return!0}else for(let r=0;r<s.effects.length;r++){let u=s.effects[r];if(u.eqFilterType)return!1;if(u.tmpEqFilterEnd!=null)return!0}return!1}isModActive(e,a,i){return t.modulators[e].forSong?this.modValues!=null&&this.modValues[e]!=null:a!=null&&i!=null&&this.modInsValues!=null&&this.modInsValues[a]!=null&&this.modInsValues[a][i]!=null?this.modInsValues[a][i][e]!=null:!1}forceHoldMods(e,a,i,n){let s=!1;for(let r=0;r<this.heldMods.length;r++)this.heldMods[r].channelIndex==a&&this.heldMods[r].instrumentIndex==i&&this.heldMods[r].setting==n&&(this.heldMods[r].volume=e,this.heldMods[r].holdFor=24,s=!0);s||this.heldMods.push({volume:e,channelIndex:a,instrumentIndex:i,setting:n,holdFor:24})}snapToStart(){this.bar=0,this.resetEffects(),this.snapToBar()}goToBar(e){this.bar=e,this.resetEffects(),this.playheadInternal=this.bar}snapToBar(){this.playheadInternal=this.bar,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=0}jumpIntoLoop(){if(this.song&&(this.bar<this.song.loopStart||this.bar>=this.song.loopStart+this.song.loopLength)){let e=this.bar;this.bar=this.song.loopStart,this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}}goToNextBar(){if(!this.song)return;this.prevBar=this.bar;let e=this.bar;this.bar++,this.bar>=this.song.barCount&&(this.bar=0),this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}goToPrevBar(){if(!this.song)return;this.prevBar=null;let e=this.bar;this.bar--,(this.bar<0||this.bar>=this.song.barCount)&&(this.bar=this.song.barCount-1),this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}getNextBar(){let e=this.bar+1;return this.isRecording?e>=this.song.barCount&&(e=this.song.barCount-1):this.bar==this.loopBarEnd&&!this.renderingSong?e=this.loopBarStart:this.loopRepeatCount!=0&&e==Math.max(this.loopBarEnd+1,this.song.loopStart+this.song.loopLength)&&(e=this.song.loopStart),e}skipBar(){if(!this.song)return;let e=this.getSamplesPerTick();this.prevBar=this.bar,this.loopBarEnd!=this.bar?this.bar++:this.bar=this.loopBarStart,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=e,this.isAtStartOfTick=!0,this.loopRepeatCount!=0&&this.bar==Math.max(this.song.loopStart+this.song.loopLength,this.loopBarEnd)&&(this.bar=this.song.loopStart,this.loopBarStart!=-1&&(this.bar=this.loopBarStart),this.loopRepeatCount>0&&this.loopRepeatCount--)}audioProcessCallback=e=>{let a=e.outputBuffer,i=a.getChannelData(0),n=a.getChannelData(1);if(this.browserAutomaticallyClearsAudioBuffer&&(i[0]!=0||n[0]!=0||i[a.length-1]!=0||n[a.length-1]!=0)&&(this.browserAutomaticallyClearsAudioBuffer=!1),!this.browserAutomaticallyClearsAudioBuffer){let s=a.length;for(let r=0;r<s;r++)i[r]=0,n[r]=0}!this.isPlayingSong&&performance.now()>=this.liveInputEndTime?this.deactivateAudio():(this.synthesize(i,n,a.length,this.isPlayingSong),this.oscEnabled&&(this.oscRefreshEventTimer<=0?(En.raise("oscilloscopeUpdate",i,n),this.oscRefreshEventTimer=2):this.oscRefreshEventTimer--))};computeSongState(e){if(this.song==null)return;let a=Math.ceil(e),i=this.samplesPerSecond,n=1;if(this.song.eqFilterType){let u=this.song.eqFilter;this.song.eqSubFilters[1]==null&&(this.song.eqSubFilters[1]=new Ee);let c=this.song.eqSubFilters[1],v=this.song.eqFilterSimpleCut,o=this.song.eqFilterSimplePeak,y=this.song.eqFilterSimpleCut,d=this.song.eqFilterSimplePeak,g=!1,h;if(g){u.convertLegacySettingsForSynth(v,o),c.convertLegacySettingsForSynth(y,d),h=u.controlPoints[0];let m=c.controlPoints[0];h.toCoefficients(l.tempFilterStartCoefficients,i,1,1),m.toCoefficients(l.tempFilterEndCoefficients,i,1,1),this.songEqFiltersL.length<1&&(this.songEqFiltersL[0]=new Re),this.songEqFiltersL[0].loadCoefficientsWithGradient(l.tempFilterStartCoefficients,l.tempFilterEndCoefficients,1/a,h.type==0),this.songEqFiltersR.length<1&&(this.songEqFiltersR[0]=new Re),this.songEqFiltersR[0].loadCoefficientsWithGradient(l.tempFilterStartCoefficients,l.tempFilterEndCoefficients,1/a,h.type==0)}else u.convertLegacySettingsForSynth(v,o,!0),h=u.controlPoints[0],h.toCoefficients(l.tempFilterStartCoefficients,i,1,1),this.songEqFiltersL.length<1&&(this.songEqFiltersL[0]=new Re),this.songEqFiltersL[0].loadCoefficientsWithGradient(l.tempFilterStartCoefficients,l.tempFilterStartCoefficients,1/a,h.type==0),this.songEqFiltersR.length<1&&(this.songEqFiltersR[0]=new Re),this.songEqFiltersR[0].loadCoefficientsWithGradient(l.tempFilterStartCoefficients,l.tempFilterStartCoefficients,1/a,h.type==0);n*=h.getVolumeCompensationMult(),this.songEqFilterCount=1,n=Math.min(3,n)}else{let u=this.song.tmpEqFilterStart!=null?this.song.tmpEqFilterStart:this.song.eqFilter;for(let c=0;c<u.controlPointCount;c++){let v=u.controlPoints[c],o=this.song.tmpEqFilterEnd!=null&&this.song.tmpEqFilterEnd.controlPoints[c]!=null?this.song.tmpEqFilterEnd.controlPoints[c]:u.controlPoints[c];v.type!=o.type&&(v=o),v.toCoefficients(l.tempFilterStartCoefficients,i,1,1),o.toCoefficients(l.tempFilterEndCoefficients,i,1,1),this.songEqFiltersL.length<=c&&(this.songEqFiltersL[c]=new Re),this.songEqFiltersL[c].loadCoefficientsWithGradient(l.tempFilterStartCoefficients,l.tempFilterEndCoefficients,1/a,v.type==0),this.songEqFiltersR.length<=c&&(this.songEqFiltersR[c]=new Re),this.songEqFiltersR[c].loadCoefficientsWithGradient(l.tempFilterStartCoefficients,l.tempFilterEndCoefficients,1/a,v.type==0),n*=v.getVolumeCompensationMult()}this.songEqFilterCount=u.controlPointCount,n=Math.min(3,n)}let s=n,r=n;this.songEqFilterVolume=s,this.songEqFilterVolumeDelta=(r-s)/a}synthesize(e,a,i,n=!0){if(this.song==null){for(let m=0;m<i;m++)e[m]=0,a[m]=0;this.deactivateAudio();return}let s=this.song;this.song.inVolumeCap=0,this.song.outVolumeCap=0,this.song.outVolumeCapL=0,this.song.outVolumeCapR=0;let r=this.getSamplesPerTick(),u=!1;(this.tickSampleCountdown<=0||this.tickSampleCountdown>r)&&(this.tickSampleCountdown=r,this.isAtStartOfTick=!0),n&&(this.beat>=s.beatsPerBar&&(this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=r,this.isAtStartOfTick=!0,this.prevBar=this.bar,this.bar=this.getNextBar(),this.bar<=this.prevBar&&this.loopRepeatCount>0&&this.loopRepeatCount--),this.bar>=s.barCount&&(this.bar=0,this.loopRepeatCount!=-1&&(u=!0,this.pause()))),this.syncSongState(),(this.tempInstrumentSampleBufferL==null||this.tempInstrumentSampleBufferL.length<i||this.tempInstrumentSampleBufferR==null||this.tempInstrumentSampleBufferR.length<i)&&(this.tempInstrumentSampleBufferL=new Float32Array(i),this.tempInstrumentSampleBufferR=new Float32Array(i));let c=+this.volume,v=1-Math.pow(.5,this.song.limitDecay/this.samplesPerSecond),o=1-Math.pow(.5,this.song.limitRise/this.samplesPerSecond),y=+this.limit,d=[],g=-1,h=0;for(;h<i&&!u;){this.nextBar=this.getNextBar(),this.nextBar>=s.barCount&&(this.nextBar=null);let m=i-h,p=Math.ceil(this.tickSampleCountdown),I=Math.min(p,m),F=h+I;if(this.isPlayingSong||this.renderingSong){for(let S=s.pitchChannelCount+s.noiseChannelCount;S<s.getChannelCount();S++){let C=s.channels[S],W=this.channels[S];this.determineCurrentActiveTones(s,S,r,n);for(let L=0;L<C.instruments.length;L++){let T=W.instruments[L];for(let k=0;k<T.activeModTones.count();k++){let A=T.activeModTones.get(k),B=s.channels[S].instruments[A.instrumentIndex],N=t.modCount-1-A.pitches[0];(B.modulators[N]==t.modulators.dictionary["pre eq"].index||B.modulators[N]==t.modulators.dictionary["post eq"].index||B.modulators[N]==t.modulators.dictionary["song eq"].index)&&B.modFilterTypes[N]!=null&&B.modFilterTypes[N]>0||this.playModTone(s,S,r,h,I,A,!1,!1)}}}for(let S=s.pitchChannelCount+s.noiseChannelCount;S<s.getChannelCount();S++){let C=s.channels[S],W=this.channels[S];for(let L=0;L<C.instruments.length;L++){let T=W.instruments[L];for(let k=0;k<T.activeModTones.count();k++){let A=T.activeModTones.get(k),B=s.channels[S].instruments[A.instrumentIndex],N=t.modCount-1-A.pitches[0];(B.modulators[N]==t.modulators.dictionary["pre eq"].index||B.modulators[N]==t.modulators.dictionary["post eq"].index||B.modulators[N]==t.modulators.dictionary["song eq"].index)&&B.modFilterTypes[N]!=null&&B.modFilterTypes[N]>0&&this.playModTone(s,S,r,h,I,A,!1,!1)}}}}if(this.wantToSkip){let S=d.includes(this.bar);if(S&&h==g){this.pause();return}g==-1&&(g=h),S||d.push(this.bar),this.wantToSkip=!1,this.skipBar();continue}this.computeSongState(r);for(let S=0;S<s.pitchChannelCount+s.noiseChannelCount;S++){let C=s.channels[S],W=this.channels[S];this.isAtStartOfTick&&(this.determineCurrentActiveTones(s,S,r,n&&!this.countInMetronome),this.determineLiveInputTones(s,S,r));for(let L=0;L<C.instruments.length;L++){let T=C.instruments[L],k=W.instruments[L];if(this.isAtStartOfTick){let x=k.activeTones.count()+k.liveInputTones.count();for(let w=0;w<k.releasedTones.count();w++){let P=k.releasedTones.get(w);if(P.ticksSinceReleased>=Math.abs(T.getFadeOutTicks())){this.freeReleasedTone(k,w),w--;continue}let R=x>=t.maximumTonesPerChannel;this.computeTone(s,S,r,P,!0,R),x++}k.awake&&(k.computed||k.compute(this,T,r,Math.ceil(r),null,S,L),k.computed=!1,k.envelopeComputer.clearEnvelopes())}for(let x=0;x<k.activeTones.count();x++){let w=k.activeTones.get(x);this.playTone(S,h,I,w)}for(let x=0;x<k.liveInputTones.count();x++){let w=k.liveInputTones.get(x);this.playTone(S,h,I,w)}for(let x=0;x<k.releasedTones.count();x++){let w=k.releasedTones.get(x);this.playTone(S,h,I,w)}k.awake&&l.effectsSynth(this,e,a,h,I,k);let A=this.tickSampleCountdown,z=1-A/r,B=1-(A-I)/r,N=(this.beat*t.partsPerBeat+this.part)*t.ticksPerPart+this.tick,G=N/t.ticksPerPart,U=(N+1)/t.ticksPerPart,V=G+(U-G)*z,f=G+(U-G)*B,b=T.vibratoSpeed;k.vibratoTime=k.nextVibratoTime,this.isModActive(t.modulators.dictionary["vibrato speed"].index,S,L)&&(b=this.getModValue(t.modulators.dictionary["vibrato speed"].index,S,L)),b==0?(k.vibratoTime=0,k.nextVibratoTime=0):k.nextVibratoTime+=b*.1*(f-V)}}if(this.enableMetronome||this.countInMetronome)if(this.part==0){if(!this.startedMetronome){let S=s.beatsPerBar>4&&s.beatsPerBar%2==0&&this.beat==s.beatsPerBar/2,C=this.beat==0?8:S?6:4,W=this.beat==0?1600:S?1200:800,L=this.beat==0?.06:S?.05:.04,T=this.samplesPerSecond/W,k=Math.PI*2/T;this.metronomeSamplesRemaining=Math.floor(T*C),this.metronomeFilter=2*Math.cos(k),this.metronomeAmplitude=L*Math.sin(k),this.metronomePrevAmplitude=0,this.startedMetronome=!0}if(this.metronomeSamplesRemaining>0){let S=Math.min(F,h+this.metronomeSamplesRemaining);this.metronomeSamplesRemaining-=S-h;for(let C=h;C<S;C++){e[C]+=this.metronomeAmplitude,a[C]+=this.metronomeAmplitude;let W=this.metronomeFilter*this.metronomeAmplitude-this.metronomePrevAmplitude;this.metronomePrevAmplitude=this.metronomeAmplitude,this.metronomeAmplitude=W}}}else this.startedMetronome=!1;for(let S=h;S<F;S++){{let N=this.songEqFiltersL,G=this.songEqFiltersR,U=this.songEqFilterCount|0,V=+this.initialSongEqFilterInput1L,f=+this.initialSongEqFilterInput2L,b=+this.initialSongEqFilterInput1R,x=+this.initialSongEqFilterInput2R,w=l.applyFilters,P=+this.songEqFilterVolume,R=+this.songEqFilterVolumeDelta,O=e[S],_=O;_=w(_,V,f,U,N),f=V,V=O,_*=P,e[S]=_;let te=a[S],ee=te;ee=w(ee,b,x,U,G),x=b,b=te,ee*=P,a[S]=ee,P+=R,this.sanitizeFilters(N),(!(V<100)||!(f<100))&&(V=0,f=0),Math.abs(V)<ct&&(V=0),Math.abs(f)<ct&&(f=0),this.initialSongEqFilterInput1L=V,this.initialSongEqFilterInput2L=f,this.sanitizeFilters(G),(!(b<100)||!(x<100))&&(b=0,x=0),Math.abs(b)<ct&&(b=0),Math.abs(x)<ct&&(x=0),this.initialSongEqFilterInput1R=b,this.initialSongEqFilterInput2R=x}let C=e[S]*s.masterGain*s.masterGain,W=a[S]*s.masterGain*s.masterGain,L=C<0?-C:C,T=W<0?-W:W,k=L>T?L:T;this.song.inVolumeCap=this.song.inVolumeCap>k?this.song.inVolumeCap:k;let A=+(k>s.compressionThreshold)+ +(k>s.limitThreshold),z=+(A==0)*(((k+1-s.compressionThreshold)*.8+.25)*s.compressionRatio+1.05*(1-s.compressionRatio))+ +(A==1)*1.05+ +(A==2)*(1.05*((k+1-s.limitThreshold)*s.limitRatio+(1-s.limitThreshold)));y+=(z-y)*(y<z?o:v);let B=c/(y>=1?y*1.05:y*.8+.25);e[S]=C*B,a[S]=W*B,this.song.outVolumeCap=this.song.outVolumeCap>k*B?this.song.outVolumeCap:k*B,this.song.outVolumeCapL=this.song.outVolumeCapL>L*B?this.song.outVolumeCapL:L*B,this.song.outVolumeCapR=this.song.outVolumeCapR>T*B?this.song.outVolumeCapR:T*B}if(h+=I,this.isAtStartOfTick=!1,this.tickSampleCountdown-=I,this.tickSampleCountdown<=0){this.isAtStartOfTick=!0;for(let T of this.channels)for(let k of T.instruments){for(let A=0;A<k.releasedTones.count();A++){let z=k.releasedTones.get(A);z.isOnLastTick?(this.freeReleasedTone(k,A),A--):z.ticksSinceReleased++}k.deactivateAfterThisTick&&k.deactivate(),k.tonesAddedInThisTick=!1}let C=this.getTicksIntoBar(),W=r/this.samplesPerSecond,L=this.getCurrentPart();for(let T=0;T<this.song.pitchChannelCount+this.song.noiseChannelCount;T++)for(let k=0;k<this.song.channels[T].instruments.length;k++){let A=this.song.channels[T].instruments[k],z=this.channels[T].instruments[k],B=z.envelopeComputer,N=[];for(let f=0;f<t.maxEnvelopeCount;f++)N[f]=0;for(let f=0;f<A.envelopeCount;f++){let b=A.envelopeSpeed,x=A.envelopes[f].perEnvelopeSpeed;this.isModActive(t.modulators.dictionary["individual envelope speed"].index,T,k)&&A.envelopes[f].tempEnvelopeSpeed!=null&&(x=A.envelopes[f].tempEnvelopeSpeed),this.isModActive(t.modulators.dictionary["envelope speed"].index,T,k)?(b=Math.max(0,Math.min(t.arpSpeedScale.length-1,this.getModValue(t.modulators.dictionary["envelope speed"].index,T,k,!1))),Number.isInteger(b)?z.envelopeTime[f]+=t.arpSpeedScale[b]*x:z.envelopeTime[f]+=((1-b%1)*t.arpSpeedScale[Math.floor(b)]+b%1*t.arpSpeedScale[Math.ceil(b)])*x):z.envelopeTime[f]+=t.arpSpeedScale[b]*x}if(z.activeTones.count()>0){let f=z.activeTones.get(0);B.computeEnvelopes(A,L,z.envelopeTime,C,W,f,N,z,this,T,k)}let U=B.envelopeStarts[49],V=A.arpeggioSpeed;this.isModActive(t.modulators.dictionary["arp speed"].index,T,k)?(V=q(0,t.arpSpeedScale.length,U*this.getModValue(t.modulators.dictionary["arp speed"].index,T,k,!1)),Number.isInteger(V)?z.arpTime+=t.arpSpeedScale[V]:z.arpTime+=(1-V%1)*t.arpSpeedScale[Math.floor(V)]+V%1*t.arpSpeedScale[Math.ceil(V)]):(V=q(0,t.arpSpeedScale.length,U*V),Number.isInteger(V)?z.arpTime+=t.arpSpeedScale[V]:z.arpTime+=(1-V%1)*t.arpSpeedScale[Math.floor(V)]+V%1*t.arpSpeedScale[Math.ceil(V)]),B.clearEnvelopes()}for(let T=0;T<this.song.pitchChannelCount+this.song.noiseChannelCount;T++)for(let k=0;k<this.song.channels[T].instruments.length;k++){let A=this.song.channels[T].instruments[k];for(let z=0;z<A.effects.length;z++){let B=A.effects[z];B.tmpEqFilterEnd!=null?B.tmpEqFilterStart=B.tmpEqFilterEnd:B.tmpEqFilterStart=B.eqFilter}A.tmpNoteFilterEnd!=null?A.tmpNoteFilterStart=A.tmpNoteFilterEnd:A.tmpNoteFilterStart=A.noteFilter}if(s.tmpEqFilterEnd!=null?s.tmpEqFilterStart=s.tmpEqFilterEnd:s.tmpEqFilterStart=s.eqFilter,this.tick++,this.tickSampleCountdown+=r,this.tick==t.ticksPerPart){this.tick=0,this.part++,this.liveInputDuration--,this.liveBassInputDuration--;for(let T=0;T<this.heldMods.length;T++)this.heldMods[T].holdFor--,this.heldMods[T].holdFor<=0&&this.heldMods.splice(T,1);this.part==t.partsPerBeat&&(this.part=0,n&&(this.beat++,this.beat==s.beatsPerBar&&(this.beat=0,this.countInMetronome?this.countInMetronome=!1:(this.prevBar=this.bar,this.bar=this.getNextBar(),this.bar<=this.prevBar&&this.loopRepeatCount>0&&this.loopRepeatCount--,this.bar>=s.barCount&&(this.bar=0,this.loopRepeatCount!=-1&&(u=!0,this.resetEffects(),this.pause()))))))}}for(let S=0;S<t.modulators.length;S++)this.nextModValues!=null&&this.nextModValues[S]!=null&&(this.modValues[S]=this.nextModValues[S]);this.isModActive(t.modulators.dictionary.tempo.index)&&(r=this.getSamplesPerTick(),this.tickSampleCountdown=Math.min(this.tickSampleCountdown,r));for(let S=0;S<this.song.pitchChannelCount+this.song.noiseChannelCount;S++)for(let C=0;C<this.channels[S].instruments.length;C++){let W=this.channels[S].instruments[C],L=this.song.channels[S].instruments[C];W.nextVibratoTime=W.nextVibratoTime%(t.vibratoTypes[L.vibratoType].period/(t.ticksPerPart*r/this.samplesPerSecond)),W.arpTime=W.arpTime%(2520*t.ticksPerArpeggio);for(let T=0;T<L.envelopeCount;T++)W.envelopeTime[T]=W.envelopeTime[T]%(t.partsPerBeat*t.ticksPerPart*this.song.beatsPerBar)}let M=this.song.getMaxInstrumentsPerChannel();for(let S=0;S<t.modulators.length;S++)for(let C=0;C<this.song.pitchChannelCount+this.song.noiseChannelCount;C++)for(let W=0;W<M;W++)this.nextModInsValues!=null&&this.nextModInsValues[C]!=null&&this.nextModInsValues[C][W]!=null&&this.nextModInsValues[C][W][S]!=null&&(this.modInsValues[C][W][S]=this.nextModInsValues[C][W][S])}(!Number.isFinite(y)||Math.abs(y)<ct)&&(y=0),this.limit=y,n&&!this.countInMetronome&&(this.playheadInternal=(((this.tick+1-this.tickSampleCountdown/r)/2+this.part)/t.partsPerBeat+this.beat)/s.beatsPerBar+this.bar)}freeTone(e){this.tonePool.pushBack(e)}newTone(){if(this.tonePool.count()>0){let e=this.tonePool.popBack();return e.freshlyAllocated=!0,e}return new Xt}releaseTone(e,a){e.releasedTones.pushFront(a),a.atNoteStart=!1,a.passedEndOfNote=!0}freeReleasedTone(e,a){this.freeTone(e.releasedTones.get(a)),e.releasedTones.remove(a)}freeAllTones(){for(let e of this.channels)for(let a of e.instruments){for(;a.activeTones.count()>0;)this.freeTone(a.activeTones.popBack());for(;a.activeModTones.count()>0;)this.freeTone(a.activeModTones.popBack());for(;a.releasedTones.count()>0;)this.freeTone(a.releasedTones.popBack());for(;a.liveInputTones.count()>0;)this.freeTone(a.liveInputTones.popBack())}}determineLiveInputTones(e,a,i){let n=e.channels[a],s=this.channels[a],r=this.liveInputPitches,u=this.liveBassInputPitches;(this.liveInputPitches.length>0||this.liveBassInputPitches.length>0)&&this.computeLatestModValues();for(let c=0;c<n.instruments.length;c++){let v=s.instruments[c],o=v.liveInputTones,y=0;if(this.liveInputDuration>0&&a==this.liveInputChannel&&r.length>0&&this.liveInputInstruments.indexOf(c)!=-1){let d=n.instruments[c];if(d.getChord().singleTone){let g;o.count()<=y?(g=this.newTone(),o.pushBack(g)):!d.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(v,o.get(y)),g=this.newTone(),o.set(y,g)):g=o.get(y),y++;for(let h=0;h<r.length;h++)g.pitches[h]=r[h];g.pitchCount=r.length,g.chordSize=1,g.instrumentIndex=c,g.note=g.prevNote=g.nextNote=null,g.atNoteStart=this.liveInputStarted,g.forceContinueAtStart=!1,g.forceContinueAtEnd=!1,this.computeTone(e,a,i,g,!1,!1)}else{this.moveTonesIntoOrderedTempMatchedList(o,r);for(let g=0;g<r.length;g++){let h;this.tempMatchedPitchTones[y]!=null?(h=this.tempMatchedPitchTones[y],this.tempMatchedPitchTones[y]=null,(h.pitchCount!=1||h.pitches[0]!=r[g])&&(this.releaseTone(v,h),h=this.newTone()),o.pushBack(h)):(h=this.newTone(),o.pushBack(h)),y++,h.pitches[0]=r[g],h.pitchCount=1,h.chordSize=r.length,h.instrumentIndex=c,h.note=h.prevNote=h.nextNote=null,h.atNoteStart=this.liveInputStarted,h.forceContinueAtStart=!1,h.forceContinueAtEnd=!1,this.computeTone(e,a,i,h,!1,!1)}}}if(this.liveBassInputDuration>0&&a==this.liveBassInputChannel&&u.length>0&&this.liveBassInputInstruments.indexOf(c)!=-1){let d=n.instruments[c];if(d.getChord().singleTone){let g;o.count()<=y?(g=this.newTone(),o.pushBack(g)):!d.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(v,o.get(y)),g=this.newTone(),o.set(y,g)):g=o.get(y),y++;for(let h=0;h<u.length;h++)g.pitches[h]=u[h];g.pitchCount=u.length,g.chordSize=1,g.instrumentIndex=c,g.note=g.prevNote=g.nextNote=null,g.atNoteStart=this.liveBassInputStarted,g.forceContinueAtStart=!1,g.forceContinueAtEnd=!1,this.computeTone(e,a,i,g,!1,!1)}else{this.moveTonesIntoOrderedTempMatchedList(o,u);for(let g=0;g<u.length;g++){let h;this.tempMatchedPitchTones[y]!=null?(h=this.tempMatchedPitchTones[y],this.tempMatchedPitchTones[y]=null,(h.pitchCount!=1||h.pitches[0]!=u[g])&&(this.releaseTone(v,h),h=this.newTone()),o.pushBack(h)):(h=this.newTone(),o.pushBack(h)),y++,h.pitches[0]=u[g],h.pitchCount=1,h.chordSize=u.length,h.instrumentIndex=c,h.note=h.prevNote=h.nextNote=null,h.atNoteStart=this.liveBassInputStarted,h.forceContinueAtStart=!1,h.forceContinueAtEnd=!1,this.computeTone(e,a,i,h,!1,!1)}}}for(;o.count()>y;)this.releaseTone(v,o.popBack());this.clearTempMatchedPitchTones(y,v)}this.liveInputStarted=!1,this.liveBassInputStarted=!1}adjacentPatternHasCompatibleInstrumentTransition(e,a,i,n,s,r,u,c,v,o){if(e.patternInstruments&&n.instruments.indexOf(s)==-1){if(i.instruments.length>1||n.instruments.length>1)return null;let y=a.instruments[n.instruments[0]];if(o)return y.getChord();let d=y.getTransition();return r.includeAdjacentPatterns&&d.includeAdjacentPatterns&&d.slides==r.slides?y.getChord():null}else return o||r.includeAdjacentPatterns?u:null}static adjacentNotesHaveMatchingPitches(e,a){if(e.pitches.length!=a.pitches.length)return!1;let i=e.pins[e.pins.length-1].interval;for(let n of e.pitches)if(a.pitches.indexOf(n+i)==-1)return!1;return!0}moveTonesIntoOrderedTempMatchedList(e,a){for(let i=0;i<e.count();i++){let n=e.get(i),s=n.pitches[0]+n.lastInterval;for(let r=0;r<a.length;r++)if(a[r]==s){this.tempMatchedPitchTones[r]=n,e.remove(i),i--;break}}for(;e.count()>0;){let i=e.popFront();for(let n=0;n<this.tempMatchedPitchTones.length;n++)if(this.tempMatchedPitchTones[n]==null){this.tempMatchedPitchTones[n]=i;break}}}determineCurrentActiveTones(e,a,i,n){let s=e.channels[a],r=this.channels[a],u=e.getPattern(a,this.bar),c=this.getCurrentPart(),v=this.tick+t.ticksPerPart*c;if(n&&e.getChannelIsMod(a)){let o=[],y=[],d=[],g=t.modCount;for(;g--;)o.push(null),y.push(null),d.push(null);if(u!=null&&!s.muted)for(let F=0;F<u.notes.length;F++)u.notes[F].end<=c?(y[u.notes[F].pitches[0]]==null||u.notes[F].end>y[u.notes[F].pitches[0]].start)&&(y[u.notes[F].pitches[0]]=u.notes[F]):u.notes[F].start<=c&&u.notes[F].end>c?o[u.notes[F].pitches[0]]=u.notes[F]:u.notes[F].start>c&&(d[u.notes[F].pitches[0]]==null||u.notes[F].start<d[u.notes[F].pitches[0]].start)&&(d[u.notes[F].pitches[0]]=u.notes[F]);let h=0,m=e.patternInstruments&&u!=null?u.instruments[0]:0,p=r.instruments[m],I=p.activeModTones;for(let F=0;F<t.modCount;F++){if(o[F]!=null&&(y[F]!=null&&y[F].end!=o[F].start&&(y[F]=null),d[F]!=null&&d[F].start!=o[F].end&&(d[F]=null)),r.singleSeamlessInstrument!=null&&r.singleSeamlessInstrument!=m&&r.singleSeamlessInstrument<r.instruments.length){let M=r.instruments[r.singleSeamlessInstrument],S=r.instruments[m];for(;M.activeModTones.count()>0;)S.activeModTones.pushFront(M.activeModTones.popBack())}if(r.singleSeamlessInstrument=m,o[F]!=null){let M=y[F],S=d[F],C=!1,W=!1,L=t.ticksPerPart*o[F].start==v&&this.isAtStartOfTick,T;if(I.count()<=h)T=this.newTone(),I.pushBack(T);else if(L&&M==null){let k=I.get(h);k.isOnLastTick?this.freeTone(k):this.releaseTone(p,k),T=this.newTone(),I.set(h,T)}else T=I.get(h);h++;for(let k=0;k<o[F].pitches.length;k++)T.pitches[k]=o[F].pitches[k];T.pitchCount=o[F].pitches.length,T.chordSize=1,T.instrumentIndex=m,T.note=o[F],T.noteStartPart=o[F].start,T.noteEndPart=o[F].end,T.prevNote=M,T.nextNote=S,T.prevNotePitchIndex=0,T.nextNotePitchIndex=0,T.atNoteStart=L,T.passedEndOfNote=!1,T.forceContinueAtStart=C,T.forceContinueAtEnd=W}}for(;I.count()>h;){let F=I.popBack(),M=e.channels[a];if(F.instrumentIndex<M.instruments.length&&!F.isOnLastTick){let S=this.channels[a].instruments[F.instrumentIndex];this.releaseTone(S,F)}else this.freeTone(F)}}else if(!e.getChannelIsMod(a)){let o=null,y=null,d=null;if(n&&u!=null&&!s.muted&&(!this.isRecording||this.liveInputChannel!=a)){for(let g=0;g<u.notes.length;g++)if(u.notes[g].end<=c)y=u.notes[g];else if(u.notes[g].start<=c&&u.notes[g].end>c)o=u.notes[g];else if(u.notes[g].start>c){d=u.notes[g];break}o!=null&&(y!=null&&y.end!=o.start&&(y=null),d!=null&&d.start!=o.end&&(d=null))}if(u!=null&&(!e.layeredInstruments||s.instruments.length==1||e.patternInstruments&&u.instruments.length==1)){let g=e.patternInstruments?u.instruments[0]:0;if(r.singleSeamlessInstrument!=null&&r.singleSeamlessInstrument!=g&&r.singleSeamlessInstrument<r.instruments.length){let h=r.instruments[r.singleSeamlessInstrument],m=r.instruments[g];for(;h.activeTones.count()>0;)m.activeTones.pushFront(h.activeTones.popBack())}r.singleSeamlessInstrument=g}else r.singleSeamlessInstrument=null;for(let g=0;g<s.instruments.length;g++){let h=r.instruments[g],m=h.activeTones,p=0;if(o!=null&&(!e.patternInstruments||u.instruments.indexOf(g)!=-1)){let I=s.instruments[g],F=y,M=d,S=t.partsPerBeat*e.beatsPerBar,C=I.getTransition(),W=I.getChord(),L=!1,T=!1,k=0,A=0;if(o.start==0){let z=this.prevBar==null?null:e.getPattern(a,this.prevBar);if(z!=null){let B=z.notes.length<=0?null:z.notes[z.notes.length-1];if(B!=null&&B.end==S){let N=o.continuesLastPattern&&l.adjacentNotesHaveMatchingPitches(B,o),G=this.adjacentPatternHasCompatibleInstrumentTransition(e,s,u,z,g,C,W,o,B,N);G!=null&&(F=B,k=G.singleTone?1:F.pitches.length,L=N)}}}else F!=null&&(k=W.singleTone?1:F.pitches.length);if(o.end==S){let z=this.nextBar==null?null:e.getPattern(a,this.nextBar);if(z!=null){let B=z.notes.length<=0?null:z.notes[0];if(B!=null&&B.start==0){let N=B.continuesLastPattern&&l.adjacentNotesHaveMatchingPitches(o,B),G=this.adjacentPatternHasCompatibleInstrumentTransition(e,s,u,z,g,C,W,o,B,N);G!=null&&(M=B,A=G.singleTone?1:M.pitches.length,T=N)}}}else M!=null&&(A=W.singleTone?1:M.pitches.length);if(W.singleTone){let z=t.ticksPerPart*o.start==v,B;if(m.count()<=p)B=this.newTone(),m.pushBack(B);else if(z&&(!(C.isSeamless||I.clicklessTransition)&&!L||F==null)){let N=m.get(p);N.isOnLastTick?this.freeTone(N):this.releaseTone(h,N),B=this.newTone(),m.set(p,B)}else B=m.get(p);p++;for(let N=0;N<o.pitches.length;N++)B.pitches[N]=o.pitches[N];B.pitchCount=o.pitches.length,B.chordSize=1,B.instrumentIndex=g,B.note=o,B.noteStartPart=o.start,B.noteEndPart=o.end,B.prevNote=F,B.nextNote=M,B.prevNotePitchIndex=0,B.nextNotePitchIndex=0,B.atNoteStart=z,B.passedEndOfNote=!1,B.forceContinueAtStart=L,B.forceContinueAtEnd=T,this.computeTone(e,a,i,B,!1,!1)}else{let z=I.getTransition();(z.isSeamless&&!z.slides&&W.strumParts==0||L)&&t.ticksPerPart*o.start==v&&F!=null&&this.moveTonesIntoOrderedTempMatchedList(m,o.pitches);let B=0;for(let N=0;N<o.pitches.length;N++){let G=k>N?F:null,U=o,V=A>N?M:null,f=U.start+B,b=!1;if(f>c)if(m.count()>N&&(z.isSeamless||L)&&G!=null)V=U,U=G,G=null,f=U.start+B,b=!0;else break;let x=U.end;(z.isSeamless||L)&&V!=null&&(x=Math.min(t.partsPerBeat*this.song.beatsPerBar,x+B)),(!z.continues&&!L||G==null)&&(B+=W.strumParts);let w=t.ticksPerPart*f==v,P;if(this.tempMatchedPitchTones[p]!=null)P=this.tempMatchedPitchTones[p],this.tempMatchedPitchTones[p]=null,m.pushBack(P);else if(m.count()<=p)P=this.newTone(),m.pushBack(P);else if(w&&(!z.isSeamless&&!L||G==null)){let R=m.get(p);R.isOnLastTick?this.freeTone(R):this.releaseTone(h,R),P=this.newTone(),m.set(p,P)}else P=m.get(p);p++,P.pitches[0]=U.pitches[N],P.pitchCount=1,P.chordSize=U.pitches.length,P.instrumentIndex=g,P.note=U,P.noteStartPart=f,P.noteEndPart=x,P.prevNote=G,P.nextNote=V,P.prevNotePitchIndex=N,P.nextNotePitchIndex=N,P.atNoteStart=w,P.passedEndOfNote=b,P.forceContinueAtStart=L&&G!=null,P.forceContinueAtEnd=T&&V!=null,this.computeTone(e,a,i,P,!1,!1)}}(C.continues&&m.count()<=0||o.pitches.length<=0)&&h.envelopeComputer.reset()}for(;m.count()>p;){let I=m.popBack(),F=e.channels[a];if(I.instrumentIndex<F.instruments.length&&!I.isOnLastTick){let M=r.instruments[I.instrumentIndex];this.releaseTone(M,I)}else this.freeTone(I)}this.clearTempMatchedPitchTones(p,h)}}}clearTempMatchedPitchTones(e,a){for(let i=e;i<this.tempMatchedPitchTones.length;i++){let n=this.tempMatchedPitchTones[i];n!=null&&(n.isOnLastTick?this.freeTone(n):this.releaseTone(a,n),this.tempMatchedPitchTones[i]=null)}}playTone(e,a,i,n){let r=this.channels[e].instruments[n.instrumentIndex];r.synthesizer!=null&&r.synthesizer(this,a,i,n,r),n.envelopeComputer.clearEnvelopes(),r.envelopeComputer.clearEnvelopes()}playModTone(e,a,i,n,s,r,u,c){let o=e.channels[a].instruments[r.instrumentIndex];if(r.note!=null){let y=this.getTicksIntoBar(),d=y/t.ticksPerPart,g=(y+1)/t.ticksPerPart,h=this.tickSampleCountdown,m=1-h/i,p=1-(h-s)/i,I=d+(g-d)*m,F=d+(g-d)*p,M=t.ticksPerPart*I,S=t.ticksPerPart*F,C=r.note.getEndPinIndex(this.getCurrentPart()),W=r.note.pins[C-1],L=r.note.pins[C],T=(r.note.start+W.time)*t.ticksPerPart,k=(r.note.start+L.time)*t.ticksPerPart,A=(M-T)/(k-T),z=(S-T)/(k-T);r.expression=W.size+(L.size-W.size)*A,r.expressionDelta=W.size+(L.size-W.size)*z-r.expression,l.modSynth(this,n,s,r,o)}}static computeChordExpression(e){return 1/((e-1)*.25+1)}computeTone(e,a,i,n,s,r){let u=Math.ceil(i),c=e.channels[a],v=this.channels[a],o=c.instruments[n.instrumentIndex],y=v.instruments[n.instrumentIndex];y.awake=!0,y.tonesAddedInThisTick=!0,y.computed||y.compute(this,o,i,u,n,a,n.instrumentIndex);let d=o.getTransition(),g=o.getChord(),h=g.singleTone?1:l.computeChordExpression(n.chordSize),m=e.getChannelIsNoise(a),p=m?t.noiseInterval:1,I=t.ticksPerPart*i/this.samplesPerSecond,F=1/this.samplesPerSecond,M=1/t.partsPerBeat,S=this.getTicksIntoBar(),C=S/t.ticksPerPart,W=(S+1)/t.ticksPerPart,L=this.getCurrentPart(),T=1;n.specialIntervalExpressionMult=1;let k=r,A=0,z=0,B=1,N=1,G=h,U=h,V=16,f=t.keys[e.key].basePitch+t.pitchesPerOctave*e.octave,b=1,x=48;if(o.type==3)b=t.spectrumBaseExpression,m&&(f=t.spectrumBasePitch,b*=2),V=t.spectrumBasePitch,x=28;else if(o.type==4)f=t.spectrumBasePitch,b=t.drumsetBaseExpression,V=f;else if(o.type==2)f=m?t.chipNoises[o.chipNoise].basePitch:f+t.chipNoises[o.chipNoise].basePitch-12,b=t.noiseBaseExpression,V=f,x=t.chipNoises[o.chipNoise].isSoft?24:60;else if(o.type==1||o.type==11)b=t.fmBaseExpression;else if(o.type==0)b=t.chipBaseExpression,t.chipWaves[o.chipWave].isCustomSampled?t.chipWaves[o.chipWave].isPercussion?f=-84.37+Math.log2(t.chipWaves[o.chipWave].samples.length/t.chipWaves[o.chipWave].sampleRate)*-12-(-60+t.chipWaves[o.chipWave].rootKey):f+=-96.37+Math.log2(t.chipWaves[o.chipWave].samples.length/t.chipWaves[o.chipWave].sampleRate)*-12-(-60+t.chipWaves[o.chipWave].rootKey):t.chipWaves[o.chipWave].isSampled&&!t.chipWaves[o.chipWave].isPercussion?f=f-63+t.chipWaves[o.chipWave].extraSampleDetune:t.chipWaves[o.chipWave].isSampled&&t.chipWaves[o.chipWave].isPercussion&&(f=-51+t.chipWaves[o.chipWave].extraSampleDetune);else if(o.type==9)b=t.chipBaseExpression;else if(o.type==5)b=t.harmonicsBaseExpression;else if(o.type==6)b=t.pwmBaseExpression;else if(o.type==8)b=t.supersawBaseExpression;else if(o.type==7)b=t.pickedStringBaseExpression;else if(o.type==10)b=1,V=0,x=1,f=0;else throw new Error("Unknown instrument type in computeTone.");if((n.atNoteStart&&!d.isSeamless&&!n.forceContinueAtStart||n.freshlyAllocated)&&(n.reset(),n.note!=null&&(n.chipWaveStartOffset=n.note.chipWaveStartOffset),y.envelopeComputer.reset(),o.type==0&&o.isUsingAdvancedLoopControls)){let H=t.rawRawChipWaves[o.chipWave].samples.length-1,Y=(n.chipWaveStartOffset+o.chipWaveStartOffset)/H,J=.999999999999999;for(let Z=0;Z<t.maxPitchOrOperatorCount;Z++)n.phases[Z]=o.chipWavePlayBackwards?Math.max(0,Math.min(J,Y)):Math.max(0,Y),n.directions[Z]=o.chipWavePlayBackwards?-1:1,n.chipWaveCompletions[Z]=0,n.chipWavePrevWavesL[Z]=0,n.chipWavePrevWavesR[Z]=0,n.chipWaveCompletionsLastWaveL[Z]=0,n.chipWaveCompletionsLastWaveR[Z]=0}n.freshlyAllocated=!1;for(let H=0;H<t.maxPitchOrOperatorCount;H++)n.phaseDeltas[H]=0,n.phaseDeltaScales[H]=0,n.operatorExpressions[H]=0,n.operatorExpressionDeltas[H]=0;n.expression=0,n.expressionDelta=0;for(let H=0;H<(o.type==11?6:t.operatorCount);H++)n.operatorWaves[H]=l.getOperatorWave(o.operators[H].waveform,o.operators[H].pulseWidth);if(s){let H=n.ticksSinceReleased,Y=n.ticksSinceReleased+1;A=z=n.lastInterval;let J=Math.abs(o.getFadeOutTicks());B=l.noteSizeToVolumeMult((1-H/J)*t.noteSizeMax),N=l.noteSizeToVolumeMult((1-Y/J)*t.noteSizeMax),r&&(N=0),n.ticksSinceReleased+1>=J&&(k=!0)}else if(n.note==null)B=N=1,n.lastInterval=0,n.ticksSinceReleased=0,n.liveInputSamplesHeld+=u;else{let H=n.note,Y=n.nextNote,J=n.noteStartPart,Z=n.noteEndPart,ie=H.getEndPinIndex(L),de=H.pins[ie-1],se=H.pins[ie],he=J*t.ticksPerPart,ae=Z*t.ticksPerPart,pe=(H.start+de.time)*t.ticksPerPart,oe=(H.start+se.time)*t.ticksPerPart;n.ticksSinceReleased=0;let re=L*t.ticksPerPart+this.tick,le=re+1,j=re-he,$=le-he,fe=Math.min(1,(re-pe)/(oe-pe)),ve=Math.min(1,(le-pe)/(oe-pe));if(B=1,N=1,A=de.interval+(se.interval-de.interval)*fe,z=de.interval+(se.interval-de.interval)*ve,n.lastInterval=z,!d.isSeamless&&!n.forceContinueAtEnd||Y==null){let be=-o.getFadeOutTicks();if(be>0){let X=ae-he;B*=Math.min(1,(X-j)/be),N*=Math.min(1,(X-$)/be),le>=he+X&&(k=!0)}}}n.isOnLastTick=k;let w=o.noteFilter,P,R;if(o.noteFilterType){let H=o.noteFilter;o.noteSubFilters[1]==null&&(o.noteSubFilters[1]=new Ee);let Y=o.noteSubFilters[1],J=o.noteFilterSimpleCut,Z=o.noteFilterSimplePeak,ie=o.noteFilterSimpleCut,de=o.noteFilterSimplePeak,se=!1;this.isModActive(t.modulators.dictionary["note filt cut"].index,a,n.instrumentIndex)&&(J=this.getModValue(t.modulators.dictionary["note filt cut"].index,a,n.instrumentIndex,!1),ie=this.getModValue(t.modulators.dictionary["note filt cut"].index,a,n.instrumentIndex,!0),se=!0),this.isModActive(t.modulators.dictionary["note filt peak"].index,a,n.instrumentIndex)&&(Z=this.getModValue(t.modulators.dictionary["note filt peak"].index,a,n.instrumentIndex,!1),de=this.getModValue(t.modulators.dictionary["note filt peak"].index,a,n.instrumentIndex,!0),se=!0),H.convertLegacySettingsForSynth(J,Z,!se),Y.convertLegacySettingsForSynth(ie,de,!se),P=H.controlPoints[0],R=Y.controlPoints[0],o.noteFilter=H,o.tmpNoteFilterStart=H}let O=n.envelopeComputer,_=[];for(let H=0;H<t.maxEnvelopeCount;H++)_[H]=0;for(let H=0;H<o.envelopeCount;H++){let Y=o.envelopes[H].perEnvelopeSpeed;this.isModActive(t.modulators.dictionary["individual envelope speed"].index,a,n.instrumentIndex)&&o.envelopes[H].tempEnvelopeSpeed!=null&&(Y=o.envelopes[H].tempEnvelopeSpeed);let J=t.arpSpeedScale[o.envelopeSpeed]*Y;this.isModActive(t.modulators.dictionary["envelope speed"].index,a,n.instrumentIndex)&&(J=Math.max(0,Math.min(t.arpSpeedScale.length-1,this.getModValue(t.modulators.dictionary["envelope speed"].index,a,n.instrumentIndex,!1))),Number.isInteger(J)?J=t.arpSpeedScale[J]*Y:J=(1-J%1)*t.arpSpeedScale[Math.floor(J)]+J%1*t.arpSpeedScale[Math.ceil(J)]*Y),_[H]=J}O.computeEnvelopes(o,L,y.envelopeTime,t.ticksPerPart*C,i/this.samplesPerSecond,n,_,y,this,a,n.instrumentIndex);let te=n.envelopeComputer.envelopeStarts,ee=n.envelopeComputer.envelopeEnds;if(o.noteFilter=w,d.continues&&(n.prevNote==null||n.note==null)&&y.envelopeComputer.reset(),n.note!=null&&d.slides){let H=n.prevNote,Y=n.nextNote;if(H!=null){let J=H.pitches[n.prevNotePitchIndex]+H.pins[H.pins.length-1].interval-n.pitches[0];if(O.prevSlideStart&&(A+=J*O.prevSlideRatioStart),O.prevSlideEnd&&(z+=J*O.prevSlideRatioEnd),!g.singleTone){let Z=H.pitches.length-n.chordSize;O.prevSlideStart&&(G=l.computeChordExpression(n.chordSize+Z*O.prevSlideRatioStart)),O.prevSlideEnd&&(U=l.computeChordExpression(n.chordSize+Z*O.prevSlideRatioEnd))}}if(Y!=null){let J=Y.pitches[n.nextNotePitchIndex]-(n.pitches[0]+n.note.pins[n.note.pins.length-1].interval);if(O.nextSlideStart&&(A+=J*O.nextSlideRatioStart),O.nextSlideEnd&&(z+=J*O.nextSlideRatioEnd),!g.singleTone){let Z=Y.pitches.length-n.chordSize;O.nextSlideStart&&(G=l.computeChordExpression(n.chordSize+Z*O.nextSlideRatioStart)),O.nextSlideEnd&&(U=l.computeChordExpression(n.chordSize+Z*O.nextSlideRatioEnd))}}}if(It(o.mdeffects)){let H=t.justIntonationSemitones[o.pitchShift]/p,Y=1,J=1;this.isModActive(t.modulators.dictionary["pitch shift"].index,a,n.instrumentIndex)&&(H=t.justIntonationSemitones[t.justIntonationSemitones.length-1],Y=this.getModValue(t.modulators.dictionary["pitch shift"].index,a,n.instrumentIndex,!1)/t.pitchShiftCenter,J=this.getModValue(t.modulators.dictionary["pitch shift"].index,a,n.instrumentIndex,!0)/t.pitchShiftCenter);let Z=te[19],ie=ee[19];A+=H*Z*Y,z+=H*ie*J}if(Ft(o.mdeffects)||this.isModActive(t.modulators.dictionary["song detune"].index,a,n.instrumentIndex)){let H=te[20],Y=ee[20],J=o.detune,Z=o.detune;this.isModActive(t.modulators.dictionary.detune.index,a,n.instrumentIndex)&&(J=this.getModValue(t.modulators.dictionary.detune.index,a,n.instrumentIndex,!1)+t.detuneCenter,Z=this.getModValue(t.modulators.dictionary.detune.index,a,n.instrumentIndex,!0)+t.detuneCenter),this.isModActive(t.modulators.dictionary["song detune"].index,a,n.instrumentIndex)&&(J+=4*this.getModValue(t.modulators.dictionary["song detune"].index,a,n.instrumentIndex,!1),Z+=4*this.getModValue(t.modulators.dictionary["song detune"].index,a,n.instrumentIndex,!0)),A+=At(J)*H*t.pitchesPerOctave/(12*100),z+=At(Z)*Y*t.pitchesPerOctave/(12*100)}if(wt(o.mdeffects)){let H,Y,J;o.vibrato==t.vibratos.length?(H=o.vibratoDelay*2,o.vibratoDelay==t.modulators.dictionary["vibrato delay"].maxRawVol&&(H=Number.POSITIVE_INFINITY),Y=o.vibratoDepth,J=Y):(H=t.vibratos[o.vibrato].delayTicks,Y=t.vibratos[o.vibrato].amplitude,J=Y),this.isModActive(t.modulators.dictionary["vibrato delay"].index,a,n.instrumentIndex)&&(H=this.getModValue(t.modulators.dictionary["vibrato delay"].index,a,n.instrumentIndex,!1)*2,H==t.modulators.dictionary["vibrato delay"].maxRawVol*2&&(H=Number.POSITIVE_INFINITY)),this.isModActive(t.modulators.dictionary["vibrato depth"].index,a,n.instrumentIndex)&&(Y=this.getModValue(t.modulators.dictionary["vibrato depth"].index,a,n.instrumentIndex,!1)/25,J=this.getModValue(t.modulators.dictionary["vibrato depth"].index,a,n.instrumentIndex,!0)/25);let Z;if(n.prevVibrato!=null)Z=n.prevVibrato;else{let se=l.getLFOAmplitude(o,I*y.vibratoTime),he=te[21];if(Z=Y*se*he,H>0){let ae=H-O.noteTicksStart;Z*=Math.max(0,Math.min(1,1-ae/2))}}let ie=l.getLFOAmplitude(o,I*y.nextVibratoTime),de=ee[21];if(o.type!=10){let se=J*ie*de;if(H>0){let he=H-O.noteTicksEnd;se*=Math.max(0,Math.min(1,1-he/2))}n.prevVibrato=se,A+=Z,z+=se}}if(!d.isSeamless&&!n.forceContinueAtStart||n.prevNote==null){let H=o.getFadeInSeconds();H>0&&(B*=Math.min(1,O.noteSecondsStartUnscaled/H),N*=Math.min(1,O.noteSecondsEndUnscaled/H))}o.type==4&&n.drumsetPitch==null&&(n.drumsetPitch=n.pitches[0],n.note!=null&&(n.drumsetPitch+=n.note.pickMainInterval()),n.drumsetPitch=Math.max(0,Math.min(t.drumCount-1,n.drumsetPitch)));let ge=O.lowpassCutoffDecayVolumeCompensation,Ie=te[2],Q=ee[2];if(o.noteFilterType){let H=te[22],Y=ee[22],J=te[30],Z=ee[30];P.toCoefficients(l.tempFilterStartCoefficients,this.samplesPerSecond,Ie*H,J),R.toCoefficients(l.tempFilterEndCoefficients,this.samplesPerSecond,Q*Y,Z),n.noteFiltersL.length<1&&(n.noteFiltersL[0]=new Re),n.noteFiltersR.length<1&&(n.noteFiltersR[0]=new Re),n.noteFiltersL[0].loadCoefficientsWithGradient(l.tempFilterStartCoefficients,l.tempFilterEndCoefficients,1/u,P.type==0),n.noteFiltersR[0].loadCoefficientsWithGradient(l.tempFilterStartCoefficients,l.tempFilterEndCoefficients,1/u,P.type==0),ge*=P.getVolumeCompensationMult(),n.noteFilterCount=1}else{let H=o.tmpNoteFilterStart!=null?o.tmpNoteFilterStart:o.noteFilter;for(let Y=0;Y<H.controlPointCount;Y++){let J=te[22+Y],Z=ee[22+Y],ie=te[30+Y],de=ee[30+Y],se=H.controlPoints[Y],he=o.tmpNoteFilterEnd!=null&&o.tmpNoteFilterEnd.controlPoints[Y]!=null?o.tmpNoteFilterEnd.controlPoints[Y]:H.controlPoints[Y];se.type!=he.type&&(se=he),se.toCoefficients(l.tempFilterStartCoefficients,this.samplesPerSecond,Ie*J,ie),he.toCoefficients(l.tempFilterEndCoefficients,this.samplesPerSecond,Q*Z,de),n.noteFiltersL.length<=Y&&(n.noteFiltersL[Y]=new Re),n.noteFiltersR.length<=Y&&(n.noteFiltersR[Y]=new Re),n.noteFiltersL[Y].loadCoefficientsWithGradient(l.tempFilterStartCoefficients,l.tempFilterEndCoefficients,1/u,se.type==0),n.noteFiltersR[Y].loadCoefficientsWithGradient(l.tempFilterStartCoefficients,l.tempFilterEndCoefficients,1/u,se.type==0),ge*=se.getVolumeCompensationMult()}n.noteFilterCount=H.controlPointCount}if(o.type==4){let H=n.envelopeComputer,Y=o.getDrumsetEnvelope(n.drumsetPitch);ge*=rt.getLowpassCutoffDecayVolumeCompensation(Y),H.computeDrumsetEnvelopes(o,Y,M,C,W);let J=H.drumsetFilterEnvelopeStart,Z=H.drumsetFilterEnvelopeEnd,ie=this.tempDrumSetControlPoint;ie.type=0,ie.gain=Me.getRoundedSettingValueFromLinearGain(.5),ie.freq=Me.getRoundedSettingValueFromHz(8e3),ie.toCoefficients(l.tempFilterStartCoefficients,this.samplesPerSecond,J*(1+J),1),ie.toCoefficients(l.tempFilterEndCoefficients,this.samplesPerSecond,Z*(1+Z),1),n.noteFiltersL.length==n.noteFilterCount&&(n.noteFiltersL[n.noteFilterCount]=new Re),n.noteFiltersR.length==n.noteFilterCount&&(n.noteFiltersR[n.noteFilterCount]=new Re),n.noteFiltersL[n.noteFilterCount].loadCoefficientsWithGradient(l.tempFilterStartCoefficients,l.tempFilterEndCoefficients,1/u,!0),n.noteFiltersR[n.noteFilterCount].loadCoefficientsWithGradient(l.tempFilterStartCoefficients,l.tempFilterEndCoefficients,1/u,!0),n.noteFilterCount++}if(ge=Math.min(3,ge),o.type==1||o.type==11){let H=1,Y=0,J=0,Z=g.arpeggiates,ie=g.name=="monophonic";if(n.pitchCount>1&&Z){let $=Math.floor(y.arpTime/t.ticksPerArpeggio);J=n.pitches[Pt(n.pitchCount,o.fastTwoNoteArp,$)]-n.pitches[0]}let de=o.type==11?o.customAlgorithm.carrierCount:t.algorithms[o.algorithm].carrierCount;for(let $=0;$<(o.type==11?6:t.operatorCount);$++){let fe=o.type==11?o.customAlgorithm.associatedCarrier[$]-1:t.algorithms[o.algorithm].associatedCarrier[$]-1,ve=n.pitches[Z?0:ie?o.monoChordTone:$<n.pitchCount?$:fe<n.pitchCount?fe:0],be=t.operatorFrequencies[o.operators[$].frequency].mult,X=t.operatorCarrierInterval[fe]+J,ce=f+(ve+A)*p+X,Se=f+(ve+z)*p+X,Ce=ze.frequencyFromPitch(ce),ke=ze.frequencyFromPitch(Se),Pe=t.operatorFrequencies[o.operators[$].frequency].hzOffset,we=be*Ce+Pe,De=be*ke+Pe,xe=te[6+$],qe=ee[6+$],Le,We;xe!=1||qe!=1?(Le=Math.pow(2,Math.log2(we/Ce)*xe)*Ce,We=Math.pow(2,Math.log2(De/ke)*qe)*ke):(Le=we,We=De),n.phaseDeltas[$]=Le*F,n.phaseDeltaScales[$]=Math.pow(We/Le,1/u);let Ke=o.operators[$].amplitude,Be=o.operators[$].amplitude;$<4?this.isModActive(t.modulators.dictionary["fm slider 1"].index+$,a,n.instrumentIndex)&&(Ke*=this.getModValue(t.modulators.dictionary["fm slider 1"].index+$,a,n.instrumentIndex,!1)/15,Be*=this.getModValue(t.modulators.dictionary["fm slider 1"].index+$,a,n.instrumentIndex,!0)/15):this.isModActive(t.modulators.dictionary["fm slider 5"].index+$-4,a,n.instrumentIndex)&&(Ke*=this.getModValue(t.modulators.dictionary["fm slider 5"].index+$-4,a,n.instrumentIndex,!1)/15,Be*=this.getModValue(t.modulators.dictionary["fm slider 5"].index+$-4,a,n.instrumentIndex,!0)/15);let Qe=l.operatorAmplitudeCurve(Ke),Ye=l.operatorAmplitudeCurve(Be),Ze=Qe*t.operatorFrequencies[o.operators[$].frequency].amplitudeSign,nt=Ye*t.operatorFrequencies[o.operators[$].frequency].amplitudeSign,He=Ze,Ge=nt;if($<de){let Ne;n.prevPitchExpressions[$]!=null?Ne=n.prevPitchExpressions[$]:Ne=Math.pow(2,-(ce-V)/x);let Oe=Math.pow(2,-(Se-V)/x);n.prevPitchExpressions[$]=Oe,He*=Ne,Ge*=Oe,Y+=Ye}else He*=t.sineWaveLength*1.5,Ge*=t.sineWaveLength*1.5,H*=1-Math.min(1,o.operators[$].amplitude/15);if(He*=te[12+$],Ge*=ee[12+$],this.isModActive(t.modulators.dictionary["pre volume"].index,a,n.instrumentIndex)){let Ne=this.getModValue(t.modulators.dictionary["pre volume"].index,a,n.instrumentIndex,!1),Oe=this.getModValue(t.modulators.dictionary["pre volume"].index,a,n.instrumentIndex,!0);He*=Ne<=0?(Ne+t.volumeRange/2)/(t.volumeRange/2):l.instrumentVolumeToVolumeMult(Ne),Ge*=Oe<=0?(Oe+t.volumeRange/2)/(t.volumeRange/2):l.instrumentVolumeToVolumeMult(Oe)}n.operatorExpressions[$]=He,n.operatorExpressionDeltas[$]=(Ge-He)/u}H*=(Math.pow(2,2-1.4*o.feedbackAmplitude/15)-1)/3,H*=1-Math.min(1,Math.max(0,Y-1)/2),H=1+H*3;let se=b*H*ge*B*G*te[0],he=b*H*ge*N*U*ee[0];ie&&n.pitchCount<=o.monoChordTone&&(se=0,he=0),n.expression=se,n.expressionDelta=(he-se)/u;let ae=o.feedbackAmplitude,pe=o.feedbackAmplitude;this.isModActive(t.modulators.dictionary["fm feedback"].index,a,n.instrumentIndex)&&(ae*=this.getModValue(t.modulators.dictionary["fm feedback"].index,a,n.instrumentIndex,!1)/15,pe*=this.getModValue(t.modulators.dictionary["fm feedback"].index,a,n.instrumentIndex,!0)/15);let oe=t.sineWaveLength*.3*ae/15,re=t.sineWaveLength*.3*pe/15,le=oe*te[18],j=re*ee[18];n.feedbackMult=le,n.feedbackDelta=(j-le)/u}else{let H=Math.pow(2,(z-A)*p/12),Y=Math.pow(H,1/u),J=g.name=="monophonic",Z=n.pitches[0];if(n.pitchCount>1&&(g.arpeggiates||g.customInterval||J)){let $=Math.floor(y.arpTime/t.ticksPerArpeggio);if(g.customInterval){let fe=n.pitches[1+Pt(n.pitchCount-1,o.fastTwoNoteArp,$)]-n.pitches[0];T=Math.pow(2,fe/12),n.specialIntervalExpressionMult=Math.pow(2,-fe/x)}else g.arpeggiates?Z=n.pitches[Pt(n.pitchCount,o.fastTwoNoteArp,$)]:Z=n.pitches[o.monoChordTone]}let ie=f+(Z+A)*p,de=f+(Z+z)*p,se;n.prevPitchExpressions[0]!=null?se=n.prevPitchExpressions[0]:se=Math.pow(2,-(ie-V)/x);let he=Math.pow(2,-(de-V)/x);n.prevPitchExpressions[0]=he;let ae=b*ge;if(o.type==2&&(ae*=t.chipNoises[o.chipNoise].expression),o.type==0&&(ae*=t.chipWaves[o.chipWave].expression),o.type==6){let $=sn(o.pulseWidth),fe=$,ve=$;this.isModActive(t.modulators.dictionary["pulse width"].index,a,n.instrumentIndex)&&(fe=this.getModValue(t.modulators.dictionary["pulse width"].index,a,n.instrumentIndex,!1)/(t.pulseWidthRange*2),ve=this.getModValue(t.modulators.dictionary["pulse width"].index,a,n.instrumentIndex,!0)/(t.pulseWidthRange*2));let be=fe*te[3],X=ve*ee[3];n.pulseWidth=be,n.pulseWidthDelta=(X-be)/u;let ce=o.decimalOffset;this.isModActive(t.modulators.dictionary["decimal offset"].index,a,n.instrumentIndex)&&(ce=this.getModValue(t.modulators.dictionary["decimal offset"].index,a,n.instrumentIndex,!1));let Se=ce*te[38];n.decimalOffset=Se,n.pulseWidth-=n.decimalOffset/1e4}if(o.type==7){let $=o.stringSustain,fe=o.stringSustain;this.isModActive(t.modulators.dictionary.sustain.index,a,n.instrumentIndex)&&($=this.getModValue(t.modulators.dictionary.sustain.index,a,n.instrumentIndex,!1),fe=this.getModValue(t.modulators.dictionary.sustain.index,a,n.instrumentIndex,!0)),n.stringSustainStart=$,n.stringSustainEnd=fe,ae*=Math.pow(2,.7*(1-$/(t.stringSustainRange-1)))}let pe=ze.frequencyFromPitch(ie);if(o.type==0||o.type==9||o.type==5||o.type==7||o.type==3||o.type==6||o.type==2||o.type==4){let $=o.unisonVoices,fe=o.unisonSpread,ve=o.unisonOffset,be=o.unisonExpression,X=o.type==7?1:$/2;ae*=be*X;let ce=te[5],Se=ee[5],Ce=Math.pow(2,(ve+fe)*ce/12),ke=Math.pow(2,(ve+fe)*Se/12);n.phaseDeltas[0]=pe*F*Ce,n.phaseDeltaScales[0]=Y*Math.pow(ke/Ce,1/u);let Pe=$==1?1:$-1;for(let we=1;we<$;we++){let De=Math.pow(2,(ve+fe-2*we*fe/Pe)*ce/12)*T,xe=Math.pow(2,(ve+fe-2*we*fe/Pe)*Se/12)*T;n.phaseDeltas[we]=pe*F*De,n.phaseDeltaScales[we]=Y*Math.pow(xe/De,1/u)}for(let we=$;we<t.unisonVoicesMax;we++)n.phaseDeltas[we]=n.phaseDeltas[0],n.phaseDeltaScales[we]=n.phaseDeltaScales[0]}else n.phaseDeltas[0]=pe*F,n.phaseDeltaScales[0]=Y;let oe=1,re=1;if(o.type==8){let $=1/Math.sqrt(t.supersawVoiceCount),fe=o.supersawDynamism/t.supersawDynamismMax,ve=o.supersawDynamism/t.supersawDynamismMax;this.isModActive(t.modulators.dictionary.dynamism.index,a,n.instrumentIndex)&&(fe=this.getModValue(t.modulators.dictionary.dynamism.index,a,n.instrumentIndex,!1)/t.supersawDynamismMax,ve=this.getModValue(t.modulators.dictionary.dynamism.index,a,n.instrumentIndex,!0)/t.supersawDynamismMax);let be=1-Math.pow(Math.max(0,1-fe*te[39]),.2),X=1-Math.pow(Math.max(0,1-ve*ee[39]),.2),ce=Math.pow(2,Math.log2($)*be),Se=Math.pow(2,Math.log2($)*X),Ce=Math.sqrt((1/Math.pow(ce,2)-1)/(t.supersawVoiceCount-1)),ke=Math.sqrt((1/Math.pow(Se,2)-1)/(t.supersawVoiceCount-1));n.supersawDynamism=Ce,n.supersawDynamismDelta=(ke-Ce)/u;let Pe=n.supersawDelayIndex==-1;if(Pe){let Ve=0;for(let Te=0;Te<t.supersawVoiceCount;Te++)n.phases[Te]=Ve,Ve+=-Math.log(Math.random());let Ot=1+(t.supersawVoiceCount-1)*Ce,Ct=0;for(let Te=0;Te<t.supersawVoiceCount;Te++){let mt=Te==0?1:Ce,gt=n.phases[Te]/Ve;n.phases[Te]=gt,Ct+=(gt-.5)*mt}let ht=1,_t=0;for(let Te=t.supersawVoiceCount-1;Te>=0;Te--){let mt=1-n.phases[Te],gt=mt-_t;if(Ct<0){let Mn=-Ct/Ot;if(Mn<gt){ht=_t+Mn;break}}let Ln=Te==0?1:Ce;Ct+=gt*Ot-Ln,_t=mt}for(let Te=0;Te<t.supersawVoiceCount;Te++)n.phases[Te]+=ht;for(let Te=1;Te<t.supersawVoiceCount-1;Te++){let mt=Te+Math.floor(Math.random()*(t.supersawVoiceCount-Te)),gt=n.phases[Te];n.phases[Te]=n.phases[mt],n.phases[mt]=gt}}let we=o.supersawSpread/t.supersawSpreadMax,De=we,xe=we;this.isModActive(t.modulators.dictionary.spread.index,a,n.instrumentIndex)&&(De=this.getModValue(t.modulators.dictionary.spread.index,a,n.instrumentIndex,!1)/t.supersawSpreadMax,xe=this.getModValue(t.modulators.dictionary.spread.index,a,n.instrumentIndex,!0)/t.supersawSpreadMax);let qe=De*te[40],Le=xe*ee[40],We=(qe+Le)*.5,Ke=Math.pow(1-Math.sqrt(Math.max(0,1-We)),1.75);for(let Ve=0;Ve<t.supersawVoiceCount;Ve++){let qt=Ve==0?0:Math.pow(((Ve+1>>1)-.5+.025*((Ve&2)-1))/(t.supersawVoiceCount>>1),1.1)*((Ve&1)*2-1);n.supersawUnisonDetunes[Ve]=Math.pow(2,Ke*qt/12)}let Be=o.supersawShape/t.supersawShapeMax,Qe=Be*te[41],Ye=Be*ee[41];this.isModActive(t.modulators.dictionary["saw shape"].index,a,n.instrumentIndex)&&(Qe=this.getModValue(t.modulators.dictionary["saw shape"].index,a,n.instrumentIndex,!1)/t.supersawShapeMax,Ye=this.getModValue(t.modulators.dictionary["saw shape"].index,a,n.instrumentIndex,!0)/t.supersawShapeMax);let Ze=Qe*te[41],nt=Ye*ee[41];n.supersawShape=Ze,n.supersawShapeDelta=(nt-Ze)/u;let He=o.decimalOffset;this.isModActive(t.modulators.dictionary["decimal offset"].index,a,n.instrumentIndex)&&(He=this.getModValue(t.modulators.dictionary["decimal offset"].index,a,n.instrumentIndex,!1));let Ge=He*te[38];n.decimalOffset=Ge;let Ne=sn(o.pulseWidth),Oe=Ne,dt=Ne;this.isModActive(t.modulators.dictionary["pulse width"].index,a,n.instrumentIndex)&&(Oe=this.getModValue(t.modulators.dictionary["pulse width"].index,a,n.instrumentIndex,!1)/(t.pulseWidthRange*2),dt=this.getModValue(t.modulators.dictionary["pulse width"].index,a,n.instrumentIndex,!0)/(t.pulseWidthRange*2));let Sn=Oe*te[3],bn=dt*ee[3];Sn-=Ge/1e4,bn-=Ge/1e4;let Rn=n.supersawPrevPhaseDelta!=null?n.supersawPrevPhaseDelta:pe*F,xn=pe*F*H;n.supersawPrevPhaseDelta=xn;let jt=Sn/Rn,In=bn/xn;n.supersawDelayLength=jt,n.supersawDelayLengthDelta=(In-jt)/u;let Fn=Math.ceil(Math.max(jt,In))+2;if(n.supersawDelayLine==null||n.supersawDelayLine.length<=Fn){let Ve=Math.ceil(.5*this.samplesPerSecond/ze.frequencyFromPitch(24)),qt=new Float32Array($e(Math.max(Ve,Fn)));if(!Pe&&n.supersawDelayLine!=null){let Ot=n.supersawDelayLine.length-1>>0,Ct=n.supersawDelayIndex;for(let ht=0;ht<n.supersawDelayLine.length;ht++)qt[ht]=n.supersawDelayLine[Ct+ht&Ot]}n.supersawDelayLine=qt,n.supersawDelayIndex=n.supersawDelayLine.length}else Pe&&(n.supersawDelayLine.fill(0),n.supersawDelayIndex=n.supersawDelayLine.length);let wn=t.pwmBaseExpression/t.supersawBaseExpression;oe*=(1+(wn-1)*Ze)/Math.sqrt(1+(t.supersawVoiceCount-1)*Ce*Ce),re*=(1+(wn-1)*nt)/Math.sqrt(1+(t.supersawVoiceCount-1)*ke*ke)}let le=ae*B*G*se*te[0]*oe,j=ae*N*U*he*ee[0]*re;if(this.isModActive(t.modulators.dictionary["pre volume"].index,a,n.instrumentIndex)){let $=this.getModValue(t.modulators.dictionary["pre volume"].index,a,n.instrumentIndex,!1),fe=this.getModValue(t.modulators.dictionary["pre volume"].index,a,n.instrumentIndex,!0);le*=$<=0?($+t.volumeRange/2)/(t.volumeRange/2):l.instrumentVolumeToVolumeMult($),j*=fe<=0?(fe+t.volumeRange/2)/(t.volumeRange/2):l.instrumentVolumeToVolumeMult(fe)}if(J&&n.pitchCount<=o.monoChordTone&&(le=0,j=0,y.awake=!1),n.expression=le,n.expressionDelta=(j-le)/u,o.type==7){let $;if(n.prevStringDecay!=null)$=n.prevStringDecay;else{let X=n.envelopeComputer.envelopeStarts[4];$=1-Math.min(1,X*n.stringSustainStart/(t.stringSustainRange-1))}let fe=n.envelopeComputer.envelopeEnds[4],ve=1-Math.min(1,fe*n.stringSustainEnd/(t.stringSustainRange-1));n.prevStringDecay=ve;let be=o.unisonVoices;for(let X=n.pickedStrings.length;X<be;X++)n.pickedStrings[X]=new Yt;if(n.atNoteStart&&!d.continues&&!n.forceContinueAtStart)for(let X of n.pickedStrings)X.delayIndex=-1;for(let X=0;X<be;X++)n.pickedStrings[X].update(this,y,n,X,u,$,ve,o.stringSustainType)}}}static getLFOAmplitude(e,a){let i=0;for(let n of t.vibratoTypes[e.vibratoType].periodsSeconds)i+=Math.sin(Math.PI*2*a/n);return i}static getInstrumentSynthFunction(e){if(e.type==1){let a=e.algorithm+"_"+e.feedbackType;if(l.fmSynthFunctionCache[a]==null){let i=[];for(let s of l.fmSourceTemplate)if(s.indexOf("// CARRIER OUTPUTS")!=-1){let r=[];for(let u=0;u<t.algorithms[e.algorithm].carrierCount;u++)r.push("operator"+u+"Scaled");i.push(s.replace("/*operator#Scaled*/",r.join(" + ")))}else if(s.indexOf("// INSERT OPERATOR COMPUTATION HERE")!=-1)for(let r=t.operatorCount-1;r>=0;r--)for(let u of l.operatorSourceTemplate)if(u.indexOf("/* + operator@Scaled*/")!=-1){let c="";for(let o of t.algorithms[e.algorithm].modulatedBy[r])c+=" + operator"+(o-1)+"Scaled";let v=t.feedbacks[e.feedbackType].indices[r];if(v.length>0){c+=" + feedbackMult * (";let o=[];for(let y of v)o.push("operator"+(y-1)+"Output");c+=o.join(" + ")+")"}i.push(u.replace(/\#/g,r+"").replace("/* + operator@Scaled*/",c))}else i.push(u.replace(/\#/g,r+""));else if(s.indexOf("#")!=-1)for(let r=0;r<t.operatorCount;r++)i.push(s.replace(/\#/g,r+""));else i.push(s);let n="return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {"+i.join(`
`)+"}";l.fmSynthFunctionCache[a]=new Function("Config","Synth",n)(t,l)}return l.fmSynthFunctionCache[a]}else{if(e.type==0)return e.isUsingAdvancedLoopControls?l.loopableChipSynth:l.chipSynth;if(e.type==9)return l.chipSynth;if(e.type==5)return l.harmonicsSynth;if(e.type==6)return l.pulseWidthSynth;if(e.type==8)return l.supersawSynth;if(e.type==7)return l.pickedStringSynth;if(e.type==2)return l.noiseSynth;if(e.type==3)return l.spectrumSynth;if(e.type==4)return l.drumsetSynth;if(e.type==10)return l.modSynth;if(e.type==11){let a=e.customAlgorithm.name+"_"+e.customFeedbackType.name;if(l.fm6SynthFunctionCache[a]==null){let i=[];for(let s of l.fmSourceTemplate)if(s.indexOf("// CARRIER OUTPUTS")!=-1){let r=[];for(let u=0;u<e.customAlgorithm.carrierCount;u++)r.push("operator"+u+"Scaled");i.push(s.replace("/*operator#Scaled*/",r.join(" + ")))}else if(s.indexOf("// INSERT OPERATOR COMPUTATION HERE")!=-1)for(let r=t.operatorCount+2-1;r>=0;r--)for(let u of l.operatorSourceTemplate)if(u.indexOf("/* + operator@Scaled*/")!=-1){let c="";for(let o of e.customAlgorithm.modulatedBy[r])c+=" + operator"+(o-1)+"Scaled";let v=e.customFeedbackType.indices[r];if(v.length>0){c+=" + feedbackMult * (";let o=[];for(let y of v)o.push("operator"+(y-1)+"Output");c+=o.join(" + ")+")"}i.push(u.replace(/\#/g,r+"").replace("/* + operator@Scaled*/",c))}else i.push(u.replace(/\#/g,r+""));else if(s.indexOf("#")!=-1)for(let r=0;r<t.operatorCount+2;r++)i.push(s.replace(/\#/g,r+""));else i.push(s);let n="return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {"+i.join(`
`)+"}";l.fm6SynthFunctionCache[a]=new Function("Config","Synth",n)(t,l)}return l.fm6SynthFunctionCache[a]}else throw new Error("Unrecognized instrument type: "+e.type)}}static wrap(e,a){return(e%a+a)%a}static loopableChipSynth(e,a,i,n,s){let r=s.effectsIncludeType(3)&&s.aliases,u=e.tempInstrumentSampleBufferL,c=e.tempInstrumentSampleBufferR,v=s.waveL,o=s.waveR,y=s.volumeScale,d=r&&s.type==8?v.length:v.length-1,g=Math.max(0,Math.min(d,s.chipWaveLoopEnd)),h=Math.max(0,Math.min(g-1,s.chipWaveLoopStart)),m=g-h;m<2&&(h=0,g=d,m=d);let p=s.chipWaveLoopMode,I=s.chipWavePlayBackwards,F=n.specialIntervalExpressionMult*s.unisonSign;s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(n.phases[1]=n.phases[0]);let M=n.phaseDeltas[0]*d,S=n.phaseDeltas[1]*d,C=n.directions[0],W=n.directions[1],L=n.chipWaveCompletions[0],T=n.chipWaveCompletions[1];(p===3||p===2||p===0)&&(I?(C=-1,W=-1):(C=1,W=1)),(p===0||p===1)&&(L=0,T=0);let k=n.chipWaveCompletionsLastWaveL[0],A=n.chipWaveCompletionsLastWaveL[1],z=n.chipWaveCompletionsLastWaveR[0],B=n.chipWaveCompletionsLastWaveR[1],N=1e3,G=+n.phaseDeltaScales[0],U=+n.phaseDeltaScales[1],V=+n.expression,f=+n.expressionDelta,b=l.wrap(n.phases[0],1)*d,x=l.wrap(n.phases[1],1)*d,w=0,P=0,R=0,O=0;if(!r){let he=Math.floor(b),ae=Math.floor(x),pe=l.wrap(he,d),oe=l.wrap(ae,d),re=b-he,le=x-ae;w=+v[pe],P=+v[oe],R=+o[pe],O=+o[oe],w+=(v[l.wrap(pe+1,d)]-w)*re,P+=(v[l.wrap(oe+1,d)]-P)*le,R+=(o[l.wrap(pe+1,d)]-R)*re,O+=(o[l.wrap(oe+1,d)]-O)*le}let _=n.noteFiltersL,te=n.noteFiltersR,ee=n.noteFilterCount|0,ge=+n.initialNoteFilterInputL1,Ie=+n.initialNoteFilterInputR1,Q=+n.initialNoteFilterInputL2,H=+n.initialNoteFilterInputR2,Y=l.applyFilters,J=a+i,Z=n.chipWavePrevWavesL[0],ie=n.chipWavePrevWavesL[1],de=n.chipWavePrevWavesR[0],se=n.chipWavePrevWavesR[1];for(let he=a;he<J;he++){L>0&&L<N&&L++,T>0&&T<N&&T++;let ae=0;b+=M*C,x+=S*W,p===2?(C===1?b>d&&(L<=0&&(k=Z,z=de,L++),ae=1):C===-1&&b<0&&(L<=0&&(k=Z,z=de,L++),ae=1),W===1?x>d&&(T<=0&&(A=ie,B=se,T++),ae=1):C===-1&&x<0&&(T<=0&&(A=ie,B=se,T++),ae=1)):p===3?(C===1?b>g&&(L<=0&&(k=Z,z=de,L++),ae=1):C===-1&&b<h&&(L<=0&&(k=Z,z=de,L++),ae=1),W===1?x>g&&(T<=0&&(A=ie,B=se,T++),ae=1):C===-1&&x<h&&(T<=0&&(A=ie,B=se,T++),ae=1)):p===0?(C===1?b>g&&(b=h+l.wrap(b-g,m),ae=1):C===-1&&b<h&&(b=g-l.wrap(h-b,m),ae=1),W===1?x>g&&(x=h+l.wrap(x-g,m),ae=1):W===-1&&x<h&&(x=g-l.wrap(h-x,m),ae=1)):p===1&&(C===1?b>g&&(b=g-l.wrap(b-g,m),C=-1,ae=1):C===-1&&b<h&&(b=h+l.wrap(h-b,m),C=1,ae=1),W===1?x>g&&(x=g-l.wrap(x-g,m),W=-1,ae=1):W===-1&&x<h&&(x=h+l.wrap(h-x,m),W=1,ae=1));let pe=0,oe=0,re=0,le=0,j=0,$=0;if(r){pe=v[l.wrap(Math.floor(b),d)],oe=v[l.wrap(Math.floor(x),d)],re=o[l.wrap(Math.floor(b),d)],le=o[l.wrap(Math.floor(x),d)],Z=pe,ie=oe,de=re,se=le;let ce=L>0?(N-Math.min(L,N))/N:1,Se=T>0?(N-Math.min(T,N))/N:1;j=0,L>0?(j+=k*ce,$+=k*ce):(j+=pe,$+=re),T>0?(j+=A*Se,$+=B*Se):(j+=oe,$+=le)}else{let ce=Math.floor(b),Se=Math.floor(x),Ce=l.wrap(ce,d),ke=l.wrap(Se,d),Pe=v[Ce],we=v[ke],De=o[Ce],xe=o[ke],qe=b-ce,Le=x-Se;if(Pe+=(v[l.wrap(Ce+1,d)]-Pe)*qe,we+=(v[l.wrap(ke+1,d)]-we)*Le,De+=(o[l.wrap(Ce+1,d)]-De)*qe,xe+=(o[l.wrap(ke+1,d)]-xe)*Le,!(p===0&&h===0&&g===d)&&ae!==0){let Be=0,Qe=0,Ye=0,Ze=0,nt=Math.max(0,b-M*C),He=Math.max(0,x-S*W),Ge=Math.floor(nt),Ne=Math.floor(He),Oe=l.wrap(Ge,d),dt=l.wrap(Ne,d);Be=v[Oe],Qe=v[dt],Ye=o[Oe],Ze=o[dt],Be+=(v[l.wrap(Oe+1,d)]-Be)*(nt-Ge)*C,Qe+=(v[l.wrap(dt+1,d)]-Qe)*(He-Ne)*W,Ye+=(o[l.wrap(Oe+1,d)]-Ye)*(nt-Ge)*C,Ze+=(o[l.wrap(dt+1,d)]-Ze)*(He-Ne)*W,w=Be,P=Qe,R=Ye,O=Ze}p===1&&ae!==0?(pe=Z,oe=ie,re=de,le=se):(pe=(Pe-w)/(M*C),oe=(we-P)/(S*W),re=(De-R)/(M*C),le=(xe-O)/(S*W)),Z=pe,ie=oe,de=re,se=le,w=Pe,P=we,R=De,O=xe;let We=L>0?(N-Math.min(L,N))/N:1,Ke=T>0?(N-Math.min(T,N))/N:1;L>0?(j+=k*We,$+=z*We):(j+=pe,$+=re),T>0?(j+=A*Ke,$+=B*Ke):(j+=oe*F,$+=le*F)}let fe=Y(j*y,ge,Q,ee,_),ve=Y($*y,Ie,H,ee,te);Q=ge,H=Ie,ge=j*y,Ie=$*y,M*=G,S*=U;let be=fe*V,X=ve*V;V+=f,u[he]+=be,c[he]+=X}n.phases[0]=b/d,n.phases[1]=x/d,n.phaseDeltas[0]=M/d,n.phaseDeltas[1]=S/d,n.directions[0]=C,n.directions[1]=W,n.chipWaveCompletions[0]=L,n.chipWaveCompletions[1]=T,n.chipWavePrevWavesL[0]=Z,n.chipWavePrevWavesL[1]=ie,n.chipWavePrevWavesR[0]=de,n.chipWavePrevWavesR[1]=se,n.chipWaveCompletionsLastWaveL[0]=k,n.chipWaveCompletionsLastWaveL[1]=A,n.chipWaveCompletionsLastWaveR[0]=z,n.chipWaveCompletionsLastWaveR[1]=B,n.expression=V,e.sanitizeFilters(_),e.sanitizeFilters(te),n.initialNoteFilterInputL1=ge,n.initialNoteFilterInputR1=Ie,n.initialNoteFilterInputL2=Q,n.initialNoteFilterInputR2=H}static chipSynth(e,a,i,n,s){let r=s.effectsIncludeType(5)&&s.aliases,u=e.tempInstrumentSampleBufferL,c=e.tempInstrumentSampleBufferR,v=s.waveL,o=s.waveR,y=s.volumeScale,d=r&&s.type==8?v.length:v.length-1,g=n.specialIntervalExpressionMult*s.unisonSign;s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(n.phases[1]=n.phases[0]);let h=n.phaseDeltas[0]*d,m=n.phaseDeltas[1]*d,p=+n.phaseDeltaScales[0],I=+n.phaseDeltaScales[1],F=+n.expression,M=+n.expressionDelta,S=n.phases[0]%1*d,C=n.phases[1]%1*d,W=n.noteFiltersL,L=n.noteFiltersR,T=n.noteFilterCount|0,k=+n.initialNoteFilterInputL1,A=+n.initialNoteFilterInputR1,z=+n.initialNoteFilterInputL2,B=+n.initialNoteFilterInputR2,N=l.applyFilters,G=0,U=0,V=0,f=0;if(!r){let x=S|0,w=C|0,P=x%d,R=w%d,O=S-x,_=C-w;G=+v[P],U=+v[R],V=+o[P],f=+o[R],G+=(v[P+1]-G)*O,U+=(v[R+1]-U)*_,V+=(o[P+1]-V)*O,f+=(o[R+1]-f)*_}let b=a+i;for(let x=a;x<b;x++){S+=h,C+=m;let w,P,R,O,_,te;if(r)w=v[(0|S)%d],P=v[(0|C)%d],R=o[(0|S)%d],O=o[(0|C)%d],_=w+P,te=R+O;else{let H=S|0,Y=C|0,J=H%d,Z=Y%d,ie=v[J],de=v[Z],se=o[J],he=o[Z],ae=S-H,pe=C-Y;ie+=(v[J+1]-ie)*ae,de+=(v[Z+1]-de)*pe,se+=(o[J+1]-se)*ae,he+=(o[Z+1]-he)*pe,w=(ie-G)/h,P=(de-U)/m,R=(se-V)/h,O=(he-f)/m,G=ie,U=de,V=se,f=he,_=w+P*g,te=R+O*g}let ee=N(_*y,k,z,T,W),ge=N(te*y,A,B,T,L);z=k,B=A,k=_*y,A=te*y,h*=p,m*=I;let Ie=ee*F,Q=ge*F;F+=M,u[x]+=Ie,c[x]+=Q}n.phases[0]=S/d,n.phases[1]=C/d,n.phaseDeltas[0]=h/d,n.phaseDeltas[1]=m/d,n.expression=F,e.sanitizeFilters(W),e.sanitizeFilters(L),n.initialNoteFilterInputL1=k,n.initialNoteFilterInputR1=A,n.initialNoteFilterInputL2=z,n.initialNoteFilterInputR2=B}static harmonicsSynth(e,a,i,n,s){let r=e.tempInstrumentSampleBufferL,u=s.waveL,c=u.length-1,v=n.specialIntervalExpressionMult*s.unisonSign;s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(n.phases[1]=n.phases[0]);let o=n.phaseDeltas[0]*c,y=n.phaseDeltas[1]*c,d=+n.phaseDeltaScales[0],g=+n.phaseDeltaScales[1],h=+n.expression,m=+n.expressionDelta,p=n.phases[0]%1*c,I=n.phases[1]%1*c,F=n.noteFiltersL,M=n.noteFilterCount|0,S=+n.initialNoteFilterInputL1,C=+n.initialNoteFilterInputL2,W=l.applyFilters,L=p|0,T=I|0,k=L%c,A=T%c,z=p-L,B=I-T,N=+u[k],G=+u[A];N+=(u[k+1]-N)*z,G+=(u[A+1]-G)*B;let U=a+i;for(let V=a;V<U;V++){p+=o,I+=y;let f=p|0,b=I|0,x=f%c,w=b%c,P=u[x],R=u[w],O=p-f,_=I-b;P+=(u[x+1]-P)*O,R+=(u[w+1]-R)*_;let te=(P-N)/o,ee=(R-G)/y;N=P,G=R;let ge=te+ee*v,Ie=W(ge,S,C,M,F);C=S,S=ge,o*=d,y*=g;let Q=Ie*h;h+=m,r[V]+=Q}n.phases[0]=p/c,n.phases[1]=I/c,n.phaseDeltas[0]=o/c,n.phaseDeltas[1]=y/c,n.expression=h,e.sanitizeFilters(F),n.initialNoteFilterInputL1=S,n.initialNoteFilterInputL2=C}static pickedStringSynth(e,a,i,n,s){let r=s.unisonVoices,u=l.pickedStringFunctionCache[r];if(u==null){let c="return (synth, bufferIndex, runLength, tone, instrumentState) => {";c+=`
				const Config = beepbox.Config;
				const Synth = beepbox.Synth;
                const data = synth.tempInstrumentSampleBufferL;
				
				let pickedString# = tone.pickedStrings[#];
				let allPassSample# = +pickedString#.allPassSample;
				let allPassPrevInput# = +pickedString#.allPassPrevInput;
				let sustainFilterSample# = +pickedString#.sustainFilterSample;
				let sustainFilterPrevOutput2# = +pickedString#.sustainFilterPrevOutput2;
				let sustainFilterPrevInput1# = +pickedString#.sustainFilterPrevInput1;
				let sustainFilterPrevInput2# = +pickedString#.sustainFilterPrevInput2;
				let fractionalDelaySample# = +pickedString#.fractionalDelaySample;
				const delayLine# = pickedString#.delayLine;
				const delayBufferMask# = (delayLine#.length - 1) >> 0;
				let delayIndex# = pickedString#.delayIndex|0;
				delayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;
				let delayLength# = +pickedString#.prevDelayLength;
				const delayLengthDelta# = +pickedString#.delayLengthDelta;
				let allPassG# = +pickedString#.allPassG;
				let sustainFilterA1# = +pickedString#.sustainFilterA1;
				let sustainFilterA2# = +pickedString#.sustainFilterA2;
				let sustainFilterB0# = +pickedString#.sustainFilterB0;
				let sustainFilterB1# = +pickedString#.sustainFilterB1;
				let sustainFilterB2# = +pickedString#.sustainFilterB2;
				const allPassGDelta# = +pickedString#.allPassGDelta;
				const sustainFilterA1Delta# = +pickedString#.sustainFilterA1Delta;
				const sustainFilterA2Delta# = +pickedString#.sustainFilterA2Delta;
				const sustainFilterB0Delta# = +pickedString#.sustainFilterB0Delta;
				const sustainFilterB1Delta# = +pickedString#.sustainFilterB1Delta;
				const sustainFilterB2Delta# = +pickedString#.sustainFilterB2Delta;
				
				let expression = +tone.expression;
				const expressionDelta = +tone.expressionDelta;
				
				const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;
				const delayResetOffset# = pickedString#.delayResetOffset|0;
				
				const filters = tone.noteFiltersL;
				const filterCount = tone.noteFilterCount|0;
				let initialFilterInput1 = +tone.initialNoteFilterInputL1;
				let initialFilterInput2 = +tone.initialNoteFilterInputL2;
				const applyFilters = Synth.applyFilters;
				
				const stopIndex = bufferIndex + runLength;
				for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {
					const targetSampleTime# = delayIndex# - delayLength#;
					const lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.
					const upperIndex# = lowerIndex# + 1;
					const fractionalDelay# = upperIndex# - targetSampleTime#;
					const fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay
					const prevInput# = delayLine#[lowerIndex# & delayBufferMask#];
					const input# = delayLine#[upperIndex# & delayBufferMask#];
					fractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;
					
					allPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;
					allPassPrevInput# = fractionalDelaySample#;
					
					const sustainFilterPrevOutput1# = sustainFilterSample#;
					sustainFilterSample# = sustainFilterB0# * allPassSample# + sustainFilterB1# * sustainFilterPrevInput1# + sustainFilterB2# * sustainFilterPrevInput2# - sustainFilterA1# * sustainFilterSample# - sustainFilterA2# * sustainFilterPrevOutput2#;
					sustainFilterPrevOutput2# = sustainFilterPrevOutput1#;
					sustainFilterPrevInput2# = sustainFilterPrevInput1#;
					sustainFilterPrevInput1# = allPassSample#;
					
					delayLine#[delayIndex# & delayBufferMask#] += sustainFilterSample#;
					delayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;
					delayIndex#++;
					
					const inputSample = (`;let v=[];for(let o=0;o<r;o++)v.push("fractionalDelaySample"+o+(o!=0?" * unisonSign":""));c+=v.join(" + "),c+=`) * expression;
					const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);
					initialFilterInput2 = initialFilterInput1;
					initialFilterInput1 = inputSample;
                    data[sampleIndex] += sample;
					
					expression += expressionDelta;
					delayLength# += delayLengthDelta#;
					allPassG# += allPassGDelta#;
					sustainFilterA1# += sustainFilterA1Delta#;
					sustainFilterA2# += sustainFilterA2Delta#;
					sustainFilterB0# += sustainFilterB0Delta#;
					sustainFilterB1# += sustainFilterB1Delta#;
					sustainFilterB2# += sustainFilterB2Delta#;
				}
				
				// Avoid persistent denormal or NaN values in the delay buffers and filter history.
				const epsilon = (1.0e-24);
				if (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;
				if (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;
				if (!Number.isFinite(sustainFilterSample#) || Math.abs(sustainFilterSample#) < epsilon) sustainFilterSample# = 0.0;
				if (!Number.isFinite(sustainFilterPrevOutput2#) || Math.abs(sustainFilterPrevOutput2#) < epsilon) sustainFilterPrevOutput2# = 0.0;
				if (!Number.isFinite(sustainFilterPrevInput1#) || Math.abs(sustainFilterPrevInput1#) < epsilon) sustainFilterPrevInput1# = 0.0;
				if (!Number.isFinite(sustainFilterPrevInput2#) || Math.abs(sustainFilterPrevInput2#) < epsilon) sustainFilterPrevInput2# = 0.0;
				if (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;
				pickedString#.allPassSample = allPassSample#;
				pickedString#.allPassPrevInput = allPassPrevInput#;
				pickedString#.sustainFilterSample = sustainFilterSample#;
				pickedString#.sustainFilterPrevOutput2 = sustainFilterPrevOutput2#;
				pickedString#.sustainFilterPrevInput1 = sustainFilterPrevInput1#;
				pickedString#.sustainFilterPrevInput2 = sustainFilterPrevInput2#;
				pickedString#.fractionalDelaySample = fractionalDelaySample#;
				pickedString#.delayIndex = delayIndex#;
				pickedString#.prevDelayLength = delayLength#;
				pickedString#.allPassG = allPassG#;
				pickedString#.sustainFilterA1 = sustainFilterA1#;
				pickedString#.sustainFilterA2 = sustainFilterA2#;
				pickedString#.sustainFilterB0 = sustainFilterB0#;
				pickedString#.sustainFilterB1 = sustainFilterB1#;
				pickedString#.sustainFilterB2 = sustainFilterB2#;
				
				tone.expression = expression;
				
				synth.sanitizeFilters(filters);
				tone.initialNoteFilterInputL1 = initialFilterInput1;
				tone.initialNoteFilterInputL2 = initialFilterInput2;
			}`,c=c.replace(/^.*\#.*$/mg,o=>{let y=[];for(let d=0;d<r;d++)y.push(o.replace(/\#/g,String(d)));return y.join(`
`)}),u=new Function("Config","Synth",c)(t,l),l.pickedStringFunctionCache[r]=u}u(e,a,i,n,s)}static effectsSynth(e,a,i,n,s,r){let u=r.effectsIncludeType(3),c=r.effectsIncludeType(4),v=r.effectsIncludeType(5),o=r.effectsIncludeType(9),y=r.effectsIncludeType(2),d=r.effectsIncludeType(10),g=r.effectsIncludeType(1),h=r.effectsIncludeType(6),m=r.effectsIncludeType(0),p=r.effectsIncludeType(8),I=r.effectsIncludeType(7),F=r.chipWaveInStereo&&(r.synthesizer==l.loopableChipSynth||r.synthesizer==l.chipSynth),M="";for(let C of r.effects)C!=null&&(M=M+C.type.toString(),C.type==2&&(M=M+C.panningMode.toString()));let S=l.effectsFunctionCache[M];if(S==null){let C="return (synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) => {",W=g||m||h||p||d;C+=`
            let effectState = instrumentState.effects[0]

            const tempInstrumentSampleBufferL = synth.tempInstrumentSampleBufferL;
            const tempInstrumentSampleBufferR = synth.tempInstrumentSampleBufferR;

            let mixVolume = +instrumentState.mixVolume;
            const mixVolumeDelta = +instrumentState.mixVolumeDelta;
            `,W&&(C+=`

                let delayInputMult = +instrumentState.delayInputMult;
                const delayInputMultDelta = +instrumentState.delayInputMultDelta;`),v&&(C+=`

                let filtersL = [];
                let filtersR = [];

                let filterCount = [];
                let initialFilterInputL1 = [];
                let initialFilterInputR1 = [];
                let initialFilterInputL2 = [];
                let initialFilterInputR2 = [];
                let inputSampleL = [];
                let inputSampleR = [];
                const applyFilters = Synth.applyFilters;`,C+=`

                let eqFilterVolume = [];
                let eqFilterVolumeDelta = [];
                `),u&&(C+=`

                const distortionBaseVolume = +Config.distortionBaseVolume;
                let distortion = [];
                let distortionDelta = [];
                let distortionDrive = [];
                let distortionDriveDelta = [];
                const distortionFractionalResolution = 4.0;
                const distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;
                const distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;
                const distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;
                const distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;
                const distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay
                const distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay
                const distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay
                const distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;
                const distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;
                const distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;
                const distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;
                const distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;
                const distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;

                let distortionFractionalInputL1 = [];
                let distortionFractionalInputL2 = [];
                let distortionFractionalInputL3 = [];
                let distortionFractionalInputR1 = [];
                let distortionFractionalInputR2 = [];
                let distortionFractionalInputR3 = [];
                let distortionPrevInputL = [];
                let distortionPrevInputR = [];
                let distortionNextOutputL = [];
                let distortionNextOutputR = [];

                let distortionReverse = [];
                let distortionNextInputL = [];
                let distortionNextInputR = [];
                let distortionOutputL1 = [];
                let distortionOutputL2 = [];
                let distortionOutputL3 = [];
                let distortionOutputR1 = [];
                let distortionOutputR2 = [];
                let distortionOutputR3 = [];`),c&&(C+=`

                let bitcrusherPrevInputL = [];
                let bitcrusherPrevInputR = [];
                let bitcrusherCurrentOutputL = [];
                let bitcrusherCurrentOutputR = [];
                let bitcrusherPhase = [];
                let bitcrusherPhaseDelta = [];
                let bitcrusherPhaseDeltaScale = [];
                let bitcrusherScale = [];
                let bitcrusherScaleScale = [];
                let bitcrusherFoldLevel = [];
                let bitcrusherFoldLevelScale = [];

                let lerpedInputL = [];
                let lerpedInputR = [];

                let bitcrusherWrapLevel = [];
                let wrappedSampleL = [];
                let wrappedSampleR = [];
                let foldedSampleL = [];
                let foldedSampleR = [];
                let scaledSampleL = [];
                let scaledSampleR = [];
                let oldValueL = [];
                let oldValueR = [];
                let newValueL = [];
                let newValueR = [];`),d&&(C+=`

                const flangerMask = synth.flangerDelayBufferMask >>> 0;
                let flangerDelayLineL = [];
                let flangerDelayLineR = [];
                let flangerDelayPos = [];

                let flanger = [];
                let flangerDelta = [];
                let flangerSpeed = [];
                let flangerSpeedDelta = [];
                let flangerDepth = [];
                let flangerDepthDelta = [];
                let flangerFeedback = [];
                let flangerFeedbackDelta = [];

                let flangerPhase = [];
                let flangerRange = [];

                let flangerTapIndexL = [];
                let flangerTapIndexR = [];
                let flangerTapEndL = [];
                let flangerTapEndR = [];
                let flangerTapDeltaL = [];
                let flangerTapDeltaR = [];

                let flangerTapRatioL = []; // you don't know how happy i am that this variable exists
                let flangerTapRatioR = [];
                let flangerTapLA = [];
                let flangerTapLB = [];
                let flangerTapRA = [];
                let flangerTapRB = [];
                let flangerTapL = [];
                let flangerTapR = [];`),g&&(C+=`

                const chorusMask = synth.chorusDelayBufferMask >>> 0;
                let chorusDelayLineL = [];
                let chorusDelayLineR = [];
                let chorusDelayPos = [];

                let chorusVoiceMult = [];
                let chorusVoiceMultDelta = [];
                let chorusCombinedMult = [];
                let chorusCombinedMultDelta = [];

                const chorusDuration = +Config.chorusPeriodSeconds;
                const chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);
                const chorusRange = synth.samplesPerSecond * Config.chorusDelayRange;
                const chorusOffset0 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[0][0] * chorusRange;
                const chorusOffset1 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[0][1] * chorusRange;
                const chorusOffset2 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[0][2] * chorusRange;
                const chorusOffset3 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[1][0] * chorusRange;
                const chorusOffset4 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[1][1] * chorusRange;
                const chorusOffset5 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[1][2] * chorusRange;

                let chorusPhase = [];
                let chorusTap0Index = [];
                let chorusTap1Index = [];
                let chorusTap2Index = [];
                let chorusTap3Index = [];
                let chorusTap4Index = [];
                let chorusTap5Index = [];
                let chorusTap0End = [];
                let chorusTap1End = [];
                let chorusTap2End = [];
                let chorusTap3End = [];
                let chorusTap4End = [];
                let chorusTap5End = [];
                let chorusTap0Delta = [];
                let chorusTap1Delta = [];
                let chorusTap2Delta = [];
                let chorusTap3Delta = [];
                let chorusTap4Delta = [];
                let chorusTap5Delta = [];

                let chorusTap0Ratio = [];
                let chorusTap1Ratio = [];
                let chorusTap2Ratio = [];
                let chorusTap3Ratio = [];
                let chorusTap4Ratio = [];
                let chorusTap5Ratio = [];
                let chorusTap0A = [];
                let chorusTap0B = [];
                let chorusTap1A = [];
                let chorusTap1B = [];
                let chorusTap2A = [];
                let chorusTap2B = [];
                let chorusTap3A = [];
                let chorusTap3B = [];
                let chorusTap4A = [];
                let chorusTap4B = [];
                let chorusTap5A = [];
                let chorusTap5B = [];
                let chorusTap0 = [];
                let chorusTap1 = [];
                let chorusTap2 = [];
                let chorusTap3 = [];
                let chorusTap4 = [];
                let chorusTap5 = [];`),h&&(C+=`
                let echoMult = [];
                let echoMultDelta = [];

                let echoDelayLineL = [];
                let echoDelayLineR = [];
                let echoMask = [];

                let echoDelayPosL = [];
                let echoDelayPosR = [];
                let echoDelayOffsetStart = [];
                let echoDelayOffsetEnd   = [];
                let echoDelayOffsetRatio = [];
                let echoDelayOffsetRatioDelta = [];
                let echoPingPong = [];

                let echoShelfA1 = [];
                let echoShelfB0 = [];
                let echoShelfB1 = [];
                let echoShelfSampleL = [];
                let echoShelfSampleR = [];
                let echoShelfPrevInputL = [];
                let echoShelfPrevInputR = [];

                let echoNextInputL = [];
                let echoNextInputR = [];
                let echoTapStartIndexL = [];
                let echoTapStartIndexR = [];
                let echoTapEndIndexL   = [];
                let echoTapEndIndexR   = [];
                let echoTapStartL = [];
                let echoTapEndL   = [];
                let echoTapStartR = [];
                let echoTapEndR   = [];
                let echoTapL = [];
                let echoTapR = [];`),m&&(C+=`

                const reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.
                let reverbDelayLine = [];
                let reverbDelayPos = [];

                let reverb = [];
                let reverbDelta = [];

                let reverbShelfA1 = [];
                let reverbShelfB0 = [];
                let reverbShelfB1 = [];
                let reverbShelfSample0 = [];
                let reverbShelfSample1 = [];
                let reverbShelfSample2 = [];
                let reverbShelfSample3 = [];
                let reverbShelfPrevInput0 = [];
                let reverbShelfPrevInput1 = [];
                let reverbShelfPrevInput2 = [];
                let reverbShelfPrevInput3 = [];

                let reverbDelayPos1 = [];
                let reverbDelayPos2 = [];
                let reverbDelayPos3 = [];
                let reverbSample0 = [];
                let reverbSample1 = [];
                let reverbSample2 = [];
                let reverbSample3 = [];
                let reverbTemp0 = [];
                let reverbTemp1 = [];
                let reverbTemp2 = [];
                let reverbTemp3 = [];
                let reverbShelfInput0 = [];
                let reverbShelfInput1 = [];
                let reverbShelfInput2 = [];
                let reverbShelfInput3 = [];`),I&&(C+=`

                let ringModMix = [];
                let ringModMixDelta = [];
                let ringModPhase = [];
                let ringModPhaseDelta = [];
                let ringModPhaseDeltaScale = [];
                let ringModWaveformIndex = [];
                let ringModMixFade = [];
                let ringModMixFadeDelta = [];

                let ringModPulseWidth = [];

                let waveform = [];
                let waveformLength = [];
                let ringModOutputL = [];
                let ringModOutputR = [];
                let ringModMixF = [];
                `),y&&(C+=`

                const panningMask = synth.panningDelayBufferMask >>> 0;
                let panningDelayLineL = [];
                let panningDelayLineR = [];
                let panningDelayPos = [];
                let panningVolumeL      = [];
                let panningVolumeR      = [];
                let panningVolumeDeltaL = [];
                let panningVolumeDeltaR = [];
                let panningOffsetL      = [];
                let panningOffsetR      = [];
                let panningOffsetDeltaL = [];
                let panningOffsetDeltaR = [];
                let panningRatioL  = [];
                let panningRatioR  = [];
                let panningTapLA   = [];
                let panningTapLB   = [];
                let panningTapRA   = [];
                let panningTapRB   = [];
                let panningTapL    = [];
                let panningTapR    = [];`),o&&(C+=`

                let gain = [];
                let gainDelta = [];`),p&&(C+=`

                let granularWet = [];
                let granularMixDelta = [];
                let granularDry = [];
                let granularDelayLineL = [];
                let granularDelayLineR = [];
                let granularGrains = [];
                let granularGrainCount = [];
                let granularDelayLineLength = [];
                let granularDelayLineMask = [];
                let granularDelayLineIndex = [];
                let usesRandomGrainLocation = [];
                let computeGrains = [];
                let granularOutputL = [];
                let granularOutputR = [];
                `);for(let L=0;L<r.effects.length;L++){let T=r.effects[L];C+=`

                effectState = instrumentState.effects[`+L+`];
                effectIndex = `+L+`;
                `,p&&T.type==8?C+=`

                    granularWet[effectIndex] = effectState.granularMix;
                    granularMixDelta[effectIndex] = effectState.granularMixDelta;
                    granularDry[effectIndex] = 1.0 - granularWet[effectIndex];
                    granularDelayLineL[effectIndex] = effectState.granularDelayLineL;
                    granularDelayLineR[effectIndex] = effectState.granularDelayLineR;
                    granularGrains[effectIndex] = effectState.granularGrains;
                    granularGrainCount[effectIndex] = effectState.granularGrainsLength;
                    granularDelayLineLength[effectIndex] = granularDelayLineL.length;
                    granularDelayLineMask[effectIndex] = granularDelayLineLength[effectIndex] - 1;
                    granularDelayLineIndex[effectIndex] = effectState.granularDelayLineIndex;
                    usesRandomGrainLocation[effectIndex] = effectState.usesRandomGrainLocation;
                    computeGrains[effectIndex] = effectState.computeGrains;
                    effectState.granularDelayLineDirty = true;
                    `:u&&T.type==3?C+=`

                    distortion[effectIndex] = effectState.distortion;
                    distortionDelta[effectIndex] = effectState.distortionDelta;
                    distortionDrive[effectIndex] = effectState.distortionDrive;
                    distortionDriveDelta[effectIndex] = effectState.distortionDriveDelta;
                    distortionReverse[effectIndex] = 1.0 - distortion[effectIndex];

                    distortionFractionalInputL1[effectIndex] = +effectState.distortionFractionalInputL1;
                    distortionFractionalInputL2[effectIndex] = +effectState.distortionFractionalInputL2;
                    distortionFractionalInputL3[effectIndex] = +effectState.distortionFractionalInputL3;
                    distortionFractionalInputR1[effectIndex] = +effectState.distortionFractionalInputR1;
                    distortionFractionalInputR2[effectIndex] = +effectState.distortionFractionalInputR2;
                    distortionFractionalInputR3[effectIndex] = +effectState.distortionFractionalInputR3;
                    distortionPrevInputL[effectIndex] = +effectState.distortionPrevInputL;
                    distortionPrevInputR[effectIndex] = +effectState.distortionPrevInputR;
                    distortionNextOutputL[effectIndex] = +effectState.distortionNextOutputL;
                    distortionNextOutputR[effectIndex] = +effectState.distortionNextOutputR;`:c&&T.type==4?C+=`

                    bitcrusherPrevInputL[effectIndex] = +effectState.bitcrusherPrevInputL;
                    bitcrusherPrevInputR[effectIndex] = +effectState.bitcrusherPrevInputR;
                    bitcrusherCurrentOutputL[effectIndex] = +effectState.bitcrusherCurrentOutputL;
                    bitcrusherCurrentOutputR[effectIndex] = +effectState.bitcrusherCurrentOutputR;
                    bitcrusherPhase[effectIndex] = +effectState.bitcrusherPhase;
                    bitcrusherPhaseDelta[effectIndex] = +effectState.bitcrusherPhaseDelta;
                    bitcrusherPhaseDeltaScale[effectIndex] = +effectState.bitcrusherPhaseDeltaScale;
                    bitcrusherScale[effectIndex] = +effectState.bitcrusherScale;
                    bitcrusherScaleScale[effectIndex] = +effectState.bitcrusherScaleScale;
                    bitcrusherFoldLevel[effectIndex] = +effectState.bitcrusherFoldLevel;
                    bitcrusherFoldLevelScale[effectIndex] = +effectState.bitcrusherFoldLevelScale;`:I&&T.type==7?C+=`

                    ringModMix[effectIndex] = +effectState.ringModMix;
                    ringModMixDelta[effectIndex] = +effectState.ringModMixDelta;
                    ringModPhase[effectIndex] = +effectState.ringModPhase;
                    ringModPhaseDelta[effectIndex] = +effectState.ringModPhaseDelta;
                    ringModPhaseDeltaScale[effectIndex] = +effectState.ringModPhaseDeltaScale;
                    ringModWaveformIndex[effectIndex] = +effectState.ringModWaveformIndex;
                    ringModMixFade[effectIndex] = +effectState.ringModMixFade;
                    ringModMixFadeDelta[effectIndex] = +effectState.ringModMixFadeDelta;

                    ringModPulseWidth[effectIndex] = +effectState.ringModPulseWidth;

                    waveform[effectIndex] = Config.operatorWaves[ringModWaveformIndex[effectIndex]].samples;
                    if (ringModWaveformIndex[effectIndex] == 2) {
                        waveform[effectIndex] = Synth.getOperatorWave(ringModWaveformIndex[effectIndex], ringModPulseWidth[effectIndex]).samples;
                    }
                    waveformLength[effectIndex] = waveform[effectIndex].length - 1;
                    `:v&&T.type==5?(C+=`

                    filtersL[effectIndex] = effectState.eqFiltersL;
                    filtersR[effectIndex] = effectState.eqFiltersR;
                    filterCount[effectIndex] = effectState.eqFilterCount|0;
                    initialFilterInputL1[effectIndex] = +effectState.initialEqFilterInputL1;
                    initialFilterInputR1[effectIndex] = +effectState.initialEqFilterInputR1;
                    initialFilterInputL2[effectIndex] = +effectState.initialEqFilterInputL2;
                    initialFilterInputR2[effectIndex] = +effectState.initialEqFilterInputR2;`,C+=`

                    eqFilterVolume[effectIndex] = +effectState.eqFilterVolume;
                    eqFilterVolumeDelta[effectIndex] = +effectState.eqFilterVolumeDelta;`):y&&T.type==2?C+=`

                    panningDelayLineL[effectIndex] = effectState.panningDelayLineL;
                    panningDelayLineR[effectIndex] = effectState.panningDelayLineR;
                    panningDelayPos[effectIndex] = effectState.panningDelayPos & panningMask;
                    panningVolumeL[effectIndex]      = +effectState.panningVolumeL;
                    panningVolumeR[effectIndex]      = +effectState.panningVolumeR;
                    panningVolumeDeltaL[effectIndex] = +effectState.panningVolumeDeltaL;
                    panningVolumeDeltaR[effectIndex] = +effectState.panningVolumeDeltaR;
                    panningOffsetL[effectIndex]      = +effectState.panningOffsetL;
                    panningOffsetR[effectIndex]      = +effectState.panningOffsetR;
                    panningOffsetDeltaL[effectIndex] = 1.0 - effectState.panningOffsetDeltaL;
                    panningOffsetDeltaR[effectIndex] = 1.0 - effectState.panningOffsetDeltaR;`:d&&T.type==10?C+=`

                    flangerDelayLineL[effectIndex] = effectState.flangerDelayLineL;
                    flangerDelayLineR[effectIndex] = effectState.flangerDelayLineR;
                    flangerDelayPos[effectIndex] = effectState.flangerDelayPos & flangerMask;

                    flanger[effectIndex] = effectState.flanger;
                    flangerDelta[effectIndex] = effectState.flangerDelta;
                    flangerSpeed[effectIndex] = effectState.flangerSpeed;
                    flangerSpeedDelta[effectIndex] = effectState.flangerSpeedDelta;
                    flangerDepth[effectIndex] = effectState.flangerDepth;
                    flangerDepthDelta[effectIndex] = effectState.flangerDepthDelta;
                    flangerFeedback[effectIndex] = effectState.flangerFeedback;
                    flangerFeedbackDelta[effectIndex] = effectState.flangerFeedbackDelta;

                    flangerPhase[effectIndex] = effectState.flangerPhase % (Math.PI * 2.0);
                    flangerRange[effectIndex] = flangerDepth[effectIndex];

                    flangerTapIndexL[effectIndex] = flangerDelayPos[effectIndex] - flangerRange[effectIndex] - flangerRange[effectIndex] * Math.cos(flangerPhase[effectIndex]);
                    flangerTapIndexR[effectIndex] = flangerDelayPos[effectIndex] - flangerRange[effectIndex] - flangerRange[effectIndex] * Math.sin(flangerPhase[effectIndex]);
                    flangerPhase[effectIndex] += flangerSpeed[effectIndex] * Config.flangerPeriodMult * runLength;
                    flangerTapEndL[effectIndex] = flangerDelayPos[effectIndex] - flangerRange[effectIndex] - flangerRange[effectIndex] * Math.cos(flangerPhase[effectIndex]) + runLength;
                    flangerTapEndR[effectIndex] = flangerDelayPos[effectIndex] - flangerRange[effectIndex] - flangerRange[effectIndex] * Math.sin(flangerPhase[effectIndex]) + runLength;
                    flangerTapDeltaL[effectIndex] = (flangerTapEndL[effectIndex] - flangerTapIndexL[effectIndex]) / runLength;
                    flangerTapDeltaR[effectIndex] = (flangerTapEndR[effectIndex] - flangerTapIndexR[effectIndex]) / runLength;`:g&&T.type==1?C+=`

                    chorusDelayLineL[effectIndex] = effectState.chorusDelayLineL;
                    chorusDelayLineR[effectIndex] = effectState.chorusDelayLineR;
                    effectState.chorusDelayLineDirty = true;
                    chorusDelayPos[effectIndex] = effectState.chorusDelayPos & chorusMask;

                    chorusVoiceMult[effectIndex] = +effectState.chorusVoiceMult;
                    chorusVoiceMultDelta[effectIndex] = +effectState.chorusVoiceMultDelta;
                    chorusCombinedMult[effectIndex] = +effectState.chorusCombinedMult;
                    chorusCombinedMultDelta[effectIndex] = +effectState.chorusCombinedMultDelta;

                    chorusPhase[effectIndex] = effectState.chorusPhase % (Math.PI * 2.0);
                    chorusTap0Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset0 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][0]);
                    chorusTap1Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset1 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][1]);
                    chorusTap2Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset2 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][2]);
                    chorusTap3Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset3 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][0]);
                    chorusTap4Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset4 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][1]);
                    chorusTap5Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset5 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][2]);
                    chorusPhase[effectIndex] += chorusAngle * runLength;
                    chorusTap0End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset0 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][0]) + runLength;
                    chorusTap1End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset1 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][1]) + runLength;
                    chorusTap2End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset2 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][2]) + runLength;
                    chorusTap3End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset3 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][0]) + runLength;
                    chorusTap4End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset4 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][1]) + runLength;
                    chorusTap5End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset5 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][2]) + runLength;
                    chorusTap0Delta[effectIndex] = (chorusTap0End[effectIndex] - chorusTap0Index[effectIndex]) / runLength;
                    chorusTap1Delta[effectIndex] = (chorusTap1End[effectIndex] - chorusTap1Index[effectIndex]) / runLength;
                    chorusTap2Delta[effectIndex] = (chorusTap2End[effectIndex] - chorusTap2Index[effectIndex]) / runLength;
                    chorusTap3Delta[effectIndex] = (chorusTap3End[effectIndex] - chorusTap3Index[effectIndex]) / runLength;
                    chorusTap4Delta[effectIndex] = (chorusTap4End[effectIndex] - chorusTap4Index[effectIndex]) / runLength;
                    chorusTap5Delta[effectIndex] = (chorusTap5End[effectIndex] - chorusTap5Index[effectIndex]) / runLength;`:h&&T.type==6?C+=`
                    echoMult[effectIndex] = +effectState.echoMult;
                    echoMultDelta[effectIndex] = +effectState.echoMultDelta;

                    echoDelayLineL[effectIndex] = effectState.echoDelayLineL;
                    echoDelayLineR[effectIndex] = effectState.echoDelayLineR;
                    echoMask[effectIndex] = (echoDelayLineL[effectIndex].length - 1) >>> 0;
                    effectState.echoDelayLineDirty = true;

                    echoDelayPosL[effectIndex] = effectState.echoDelayPosL & echoMask[effectIndex];
                    echoDelayPosR[effectIndex] = effectState.echoDelayPosR & echoMask[effectIndex];
                    echoDelayOffsetStart[effectIndex] = (echoDelayLineL[effectIndex].length - effectState.echoDelayOffsetStart) & echoMask[effectIndex];
                    echoDelayOffsetEnd[effectIndex]   = (echoDelayLineL[effectIndex].length - effectState.echoDelayOffsetEnd) & echoMask[effectIndex];
                    echoDelayOffsetRatio[effectIndex] = +effectState.echoDelayOffsetRatio;
                    echoDelayOffsetRatioDelta[effectIndex] = +effectState.echoDelayOffsetRatioDelta;
                    echoPingPong[effectIndex] = effectState.echoPingPong;

                    echoShelfA1[effectIndex] = +effectState.echoShelfA1;
                    echoShelfB0[effectIndex] = +effectState.echoShelfB0;
                    echoShelfB1[effectIndex] = +effectState.echoShelfB1;
                    echoShelfSampleL[effectIndex] = +effectState.echoShelfSampleL;
                    echoShelfSampleR[effectIndex] = +effectState.echoShelfSampleR;
                    echoShelfPrevInputL[effectIndex] = +effectState.echoShelfPrevInputL;
                    echoShelfPrevInputR[effectIndex] = +effectState.echoShelfPrevInputR;`:m&&T.type==0?C+=`

                    reverbDelayLine[effectIndex] = effectState.reverbDelayLine;
                    effectState.reverbDelayLineDirty = true;
                    reverbDelayPos[effectIndex] = effectState.reverbDelayPos & reverbMask;

                    reverb[effectIndex] = +effectState.reverbMult;
                    reverbDelta[effectIndex] = +effectState.reverbMultDelta;

                    reverbShelfA1[effectIndex] = +effectState.reverbShelfA1;
                    reverbShelfB0[effectIndex] = +effectState.reverbShelfB0;
                    reverbShelfB1[effectIndex] = +effectState.reverbShelfB1;
                    reverbShelfSample0[effectIndex] = +effectState.reverbShelfSample0;
                    reverbShelfSample1[effectIndex] = +effectState.reverbShelfSample1;
                    reverbShelfSample2[effectIndex] = +effectState.reverbShelfSample2;
                    reverbShelfSample3[effectIndex] = +effectState.reverbShelfSample3;
                    reverbShelfPrevInput0[effectIndex] = +effectState.reverbShelfPrevInput0;
                    reverbShelfPrevInput1[effectIndex] = +effectState.reverbShelfPrevInput1;
                    reverbShelfPrevInput2[effectIndex] = +effectState.reverbShelfPrevInput2;
                    reverbShelfPrevInput3[effectIndex] = +effectState.reverbShelfPrevInput3;`:o&&T.type==9&&(C+=`

                    gain[effectIndex] = +effectState.gain;
                    gainDelta[effectIndex] = +effectState.gainDelta;`)}F?C+=`

                const stopIndex = bufferIndex + runLength;
                for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {
                    let sample = 0.0;
                    let sampleL = tempInstrumentSampleBufferL[sampleIndex];
                    let sampleR = tempInstrumentSampleBufferR[sampleIndex];
                    tempInstrumentSampleBufferL[sampleIndex] = 0.0;
                    tempInstrumentSampleBufferR[sampleIndex] = 0.0;`:C+=`

                const stopIndex = bufferIndex + runLength;
                for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {
                    let sampleL = tempInstrumentSampleBufferL[sampleIndex];
                    let sampleR = tempInstrumentSampleBufferL[sampleIndex];
                    tempInstrumentSampleBufferL[sampleIndex] = 0.0;
                    tempInstrumentSampleBufferR[sampleIndex] = 0.0;`;for(let L=0;L<r.effects.length;L++){let T=r.effects[L];C+=`

                effectIndex = `+L+`;
                `,c&&T.type==4?C+=`

                    bitcrusherPhase[effectIndex] += bitcrusherPhaseDelta[effectIndex];
                    if (bitcrusherPhase[effectIndex] < 1.0) {
                        bitcrusherPrevInputL[effectIndex] = sampleL;
                        bitcrusherPrevInputR[effectIndex] = sampleR;
                        sampleL = bitcrusherCurrentOutputL[effectIndex];
                        sampleR = bitcrusherCurrentOutputR[effectIndex];
                    } else {
                        bitcrusherPhase[effectIndex] = bitcrusherPhase[effectIndex] % 1.0;

                        lerpedInputL[effectIndex] = sampleL + (bitcrusherPrevInputL[effectIndex] - sampleL) * (bitcrusherPhase[effectIndex] / bitcrusherPhaseDelta[effectIndex]);
                        lerpedInputR[effectIndex] = sampleR + (bitcrusherPrevInputR[effectIndex] - sampleR) * (bitcrusherPhase[effectIndex] / bitcrusherPhaseDelta[effectIndex]);
                        bitcrusherPrevInputL[effectIndex] = sampleL;
                        bitcrusherPrevInputR[effectIndex] = sampleR;

                        bitcrusherWrapLevel[effectIndex] = bitcrusherFoldLevel[effectIndex] * 4.0;
                        wrappedSampleL[effectIndex] = (((lerpedInputL[effectIndex] + bitcrusherFoldLevel[effectIndex]) % bitcrusherWrapLevel[effectIndex]) + bitcrusherWrapLevel[effectIndex]) % bitcrusherWrapLevel[effectIndex];
                        wrappedSampleR[effectIndex] = (((lerpedInputR[effectIndex] + bitcrusherFoldLevel[effectIndex]) % bitcrusherWrapLevel[effectIndex]) + bitcrusherWrapLevel[effectIndex]) % bitcrusherWrapLevel[effectIndex];
                        foldedSampleL[effectIndex] = bitcrusherFoldLevel[effectIndex] - Math.abs(bitcrusherFoldLevel[effectIndex] * 2.0 - wrappedSampleL[effectIndex]);
                        foldedSampleR[effectIndex] = bitcrusherFoldLevel[effectIndex] - Math.abs(bitcrusherFoldLevel[effectIndex] * 2.0 - wrappedSampleR[effectIndex]);
                        scaledSampleL[effectIndex] = foldedSampleL[effectIndex] / bitcrusherScale[effectIndex];
                        scaledSampleR[effectIndex] = foldedSampleR[effectIndex] / bitcrusherScale[effectIndex];
                        oldValueL[effectIndex] = bitcrusherCurrentOutputL[effectIndex];
                        oldValueR[effectIndex] = bitcrusherCurrentOutputR[effectIndex];
                        newValueL[effectIndex] = (((scaledSampleL[effectIndex] > 0 ? scaledSampleL[effectIndex] + 1 : scaledSampleL[effectIndex])|0)-.5) * bitcrusherScale[effectIndex];
                        newValueR[effectIndex] = (((scaledSampleR[effectIndex] > 0 ? scaledSampleR[effectIndex] + 1 : scaledSampleR[effectIndex])|0)-.5) * bitcrusherScale[effectIndex];

                        sampleL = oldValueL[effectIndex] + (newValueL[effectIndex] - oldValueL[effectIndex]) * (bitcrusherPhase[effectIndex] / bitcrusherPhaseDelta[effectIndex]);
                        sampleR = oldValueR[effectIndex] + (newValueR[effectIndex] - oldValueR[effectIndex]) * (bitcrusherPhase[effectIndex] / bitcrusherPhaseDelta[effectIndex]);
                        bitcrusherCurrentOutputL[effectIndex] = newValueL[effectIndex];
                        bitcrusherCurrentOutputR[effectIndex] = newValueR[effectIndex];
                    }
                    bitcrusherPhaseDelta[effectIndex] *= bitcrusherPhaseDeltaScale[effectIndex];
                    bitcrusherScale[effectIndex] *= bitcrusherScaleScale[effectIndex];
                    bitcrusherFoldLevel[effectIndex] *= bitcrusherFoldLevelScale[effectIndex];`:u&&T.type==3?C+=`

                    distortionNextInputL[effectIndex] = sampleL * distortionDrive[effectIndex];
                    distortionNextInputR[effectIndex] = sampleR * distortionDrive[effectIndex];
                    sampleL = distortionNextOutputL[effectIndex];
                    sampleR = distortionNextOutputR[effectIndex];
                    distortionNextOutputL[effectIndex] = distortionNextInputL[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionNextInputL[effectIndex]) + distortion[effectIndex]);
                    distortionNextOutputR[effectIndex] = distortionNextInputR[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionNextInputR[effectIndex]) + distortion[effectIndex]);
                    distortionFractionalInputL1[effectIndex] = distortionFractionalDelayG1 * distortionNextInputL[effectIndex] + distortionPrevInputL[effectIndex] - distortionFractionalDelayG1 * distortionFractionalInputL1[effectIndex];
                    distortionFractionalInputL2[effectIndex] = distortionFractionalDelayG2 * distortionNextInputL[effectIndex] + distortionPrevInputL[effectIndex] - distortionFractionalDelayG2 * distortionFractionalInputL2[effectIndex];
                    distortionFractionalInputL3[effectIndex] = distortionFractionalDelayG3 * distortionNextInputL[effectIndex] + distortionPrevInputL[effectIndex] - distortionFractionalDelayG3 * distortionFractionalInputL3[effectIndex];
                    distortionFractionalInputR1[effectIndex] = distortionFractionalDelayG1 * distortionNextInputR[effectIndex] + distortionPrevInputR[effectIndex] - distortionFractionalDelayG1 * distortionFractionalInputR1[effectIndex];
                    distortionFractionalInputR2[effectIndex] = distortionFractionalDelayG2 * distortionNextInputR[effectIndex] + distortionPrevInputR[effectIndex] - distortionFractionalDelayG2 * distortionFractionalInputR2[effectIndex];
                    distortionFractionalInputR3[effectIndex] = distortionFractionalDelayG3 * distortionNextInputR[effectIndex] + distortionPrevInputR[effectIndex] - distortionFractionalDelayG3 * distortionFractionalInputR3[effectIndex];
                    distortionOutputL1[effectIndex] = distortionFractionalInputL1[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputL1[effectIndex]) + distortion[effectIndex]);
                    distortionOutputL2[effectIndex] = distortionFractionalInputL2[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputL2[effectIndex]) + distortion[effectIndex]);
                    distortionOutputL3[effectIndex] = distortionFractionalInputL3[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputL3[effectIndex]) + distortion[effectIndex]);
                    distortionOutputR1[effectIndex] = distortionFractionalInputR1[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputR1[effectIndex]) + distortion[effectIndex]);
                    distortionOutputR2[effectIndex] = distortionFractionalInputR2[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputR2[effectIndex]) + distortion[effectIndex]);
                    distortionOutputR3[effectIndex] = distortionFractionalInputR3[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputR3[effectIndex]) + distortion[effectIndex]);
                    distortionNextOutputL[effectIndex] += distortionOutputL1[effectIndex] * distortionNextOutputWeight1 + distortionOutputL2[effectIndex] * distortionNextOutputWeight2 + distortionOutputL3[effectIndex] * distortionNextOutputWeight3;
                    distortionNextOutputR[effectIndex] += distortionOutputR1[effectIndex] * distortionNextOutputWeight1 + distortionOutputR2[effectIndex] * distortionNextOutputWeight2 + distortionOutputR3[effectIndex] * distortionNextOutputWeight3;
                    sampleL += distortionOutputL1[effectIndex] * distortionPrevOutputWeight1 + distortionOutputL2[effectIndex] * distortionPrevOutputWeight2 + distortionOutputL3[effectIndex] * distortionPrevOutputWeight3;
                    sampleR += distortionOutputR1[effectIndex] * distortionPrevOutputWeight1 + distortionOutputR2[effectIndex] * distortionPrevOutputWeight2 + distortionOutputR3[effectIndex] * distortionPrevOutputWeight3;
                    sampleL *= distortionOversampleCompensation;
                    sampleR *= distortionOversampleCompensation;
                    distortionPrevInputL[effectIndex] = distortionNextInputL[effectIndex];
                    distortionPrevInputR[effectIndex] = distortionNextInputR[effectIndex];
                    distortion[effectIndex] += distortionDelta[effectIndex];
                    distortionDrive[effectIndex] += distortionDriveDelta[effectIndex];`:o&&T.type==9?C+=`

                    sampleL *= gain[effectIndex];
                    sampleR *= gain[effectIndex];
                    `:y&&T.type==2?(C+=`

                    panningDelayLineL[effectIndex][panningDelayPos[effectIndex]] = sampleL;
                    panningDelayLineR[effectIndex][panningDelayPos[effectIndex]] = sampleR;
                    panningRatioL[effectIndex]  = panningOffsetL[effectIndex] % 1;
                    panningRatioR[effectIndex]  = panningOffsetR[effectIndex] % 1;
                    panningTapLA[effectIndex]   = panningDelayLineL[effectIndex][(panningOffsetL[effectIndex]) & panningMask];
                    panningTapLB[effectIndex]   = panningDelayLineL[effectIndex][(panningOffsetL[effectIndex] + 1) & panningMask];
                    panningTapRA[effectIndex]   = panningDelayLineR[effectIndex][(panningOffsetR[effectIndex]) & panningMask];
                    panningTapRB[effectIndex]   = panningDelayLineR[effectIndex][(panningOffsetR[effectIndex] + 1) & panningMask];
                    panningTapL[effectIndex]    = panningTapLA[effectIndex] + (panningTapLB[effectIndex] - panningTapLA[effectIndex]) * panningRatioL[effectIndex];
                    panningTapR[effectIndex]    = panningTapRA[effectIndex] + (panningTapRB[effectIndex] - panningTapRA[effectIndex]) * panningRatioR[effectIndex];
                    `,T.panningMode==0?C+=`

                    sampleL = panningTapL[effectIndex] * panningVolumeL[effectIndex];
                    sampleR = panningTapR[effectIndex] * panningVolumeR[effectIndex];
                    panningDelayPos[effectIndex] = (panningDelayPos[effectIndex] + 1) & panningMask;
                    panningVolumeL[effectIndex] += panningVolumeDeltaL[effectIndex];
                    panningVolumeR[effectIndex] += panningVolumeDeltaR[effectIndex];
                    panningOffsetL[effectIndex] += panningOffsetDeltaL[effectIndex];
                    panningOffsetR[effectIndex] += panningOffsetDeltaR[effectIndex];`:T.panningMode==1?C+=`

                    sampleL = panningTapL[effectIndex] * panningVolumeL[effectIndex] + Math.max(0, panningVolumeL[effectIndex] - panningVolumeR[effectIndex]) * panningTapR[effectIndex];
                    sampleR = panningTapR[effectIndex] * panningVolumeR[effectIndex] + Math.max(0, panningVolumeR[effectIndex] - panningVolumeL[effectIndex]) * panningTapL[effectIndex];
                    panningDelayPos[effectIndex] = (panningDelayPos[effectIndex] + 1) & panningMask;
                    panningVolumeL[effectIndex] += panningVolumeDeltaL[effectIndex];
                    panningVolumeR[effectIndex] += panningVolumeDeltaR[effectIndex];
                    panningOffsetL[effectIndex] += panningOffsetDeltaL[effectIndex];
                    panningOffsetR[effectIndex] += panningOffsetDeltaR[effectIndex];`:T.panningMode==2&&(C+=`

                    sampleL = (panningTapL[effectIndex] + panningTapR[effectIndex]) / 2.0
                    sampleR = sampleL
                    sampleL *= panningVolumeL[effectIndex];
                    sampleR *= panningVolumeR[effectIndex];
                    panningDelayPos[effectIndex] = (panningDelayPos[effectIndex] + 1) & panningMask;
                    panningVolumeL[effectIndex] += panningVolumeDeltaL[effectIndex];
                    panningVolumeR[effectIndex] += panningVolumeDeltaR[effectIndex];
                    panningOffsetL[effectIndex] += panningOffsetDeltaL[effectIndex];
                    panningOffsetR[effectIndex] += panningOffsetDeltaR[effectIndex];`)):d&&T.type==10?C+=`

                    flangerTapRatioL[effectIndex] = flangerTapIndexL[effectIndex] % 1;
                    flangerTapRatioR[effectIndex] = flangerTapIndexR[effectIndex] % 1;
                    flangerTapLA[effectIndex] = flangerDelayLineL[effectIndex][(flangerTapIndexL[effectIndex]) & flangerMask];
                    flangerTapLB[effectIndex] = flangerDelayLineL[effectIndex][(flangerTapIndexL[effectIndex] + 1) & flangerMask];
                    flangerTapRA[effectIndex] = flangerDelayLineR[effectIndex][(flangerTapIndexR[effectIndex]) & flangerMask];
                    flangerTapRB[effectIndex] = flangerDelayLineR[effectIndex][(flangerTapIndexR[effectIndex] + 1) & flangerMask];
                    flangerTapL[effectIndex] = flangerTapLA[effectIndex] + (flangerTapLB[effectIndex] - flangerTapLA[effectIndex]) * flangerTapRatioL[effectIndex];
                    flangerTapR[effectIndex] = flangerTapRA[effectIndex] + (flangerTapRB[effectIndex] - flangerTapRA[effectIndex]) * flangerTapRatioR[effectIndex];

                    flangerDelayLineL[effectIndex][flangerDelayPos[effectIndex]] = sampleL * delayInputMult;
                    flangerDelayLineR[effectIndex][flangerDelayPos[effectIndex]] = sampleR * delayInputMult;
                    sampleL = (sampleL + flanger[effectIndex] * flangerTapL[effectIndex]) * (1 - flanger[effectIndex] * Config.flangerVolumeMult);
                    sampleR = (sampleR + flanger[effectIndex] * flangerTapR[effectIndex]) * (1 - flanger[effectIndex] * Config.flangerVolumeMult);
                    flangerDelayLineL[effectIndex][flangerDelayPos[effectIndex]] = flangerDelayLineL[effectIndex][flangerDelayPos[effectIndex]] * (1 - flangerFeedback[effectIndex]) - sampleL * flangerFeedback[effectIndex];
                    flangerDelayLineR[effectIndex][flangerDelayPos[effectIndex]] = flangerDelayLineR[effectIndex][flangerDelayPos[effectIndex]] * (1 - flangerFeedback[effectIndex]) - sampleR * flangerFeedback[effectIndex];
                    flangerDelayPos[effectIndex] = (flangerDelayPos[effectIndex] + 1) & flangerMask;
                    flangerTapIndexL[effectIndex] += flangerTapDeltaL[effectIndex];
                    flangerTapIndexR[effectIndex] += flangerTapDeltaR[effectIndex];

                    flanger[effectIndex] += flangerDelta[effectIndex];
                    flangerSpeed[effectIndex] += flangerSpeedDelta[effectIndex];
                    flangerDepth[effectIndex] += flangerDepthDelta[effectIndex];
                    flangerFeedback[effectIndex] += flangerFeedbackDelta[effectIndex];`:g&&T.type==1?C+=`

                    chorusTap0Ratio[effectIndex] = chorusTap0Index[effectIndex] % 1;
                    chorusTap1Ratio[effectIndex] = chorusTap1Index[effectIndex] % 1;
                    chorusTap2Ratio[effectIndex] = chorusTap2Index[effectIndex] % 1;
                    chorusTap3Ratio[effectIndex] = chorusTap3Index[effectIndex] % 1;
                    chorusTap4Ratio[effectIndex] = chorusTap4Index[effectIndex] % 1;
                    chorusTap5Ratio[effectIndex] = chorusTap5Index[effectIndex] % 1;
                    chorusTap0A[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap0Index[effectIndex]) & chorusMask];
                    chorusTap0B[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap0Index[effectIndex] + 1) & chorusMask];
                    chorusTap1A[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap1Index[effectIndex]) & chorusMask];
                    chorusTap1B[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap1Index[effectIndex] + 1) & chorusMask];
                    chorusTap2A[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap2Index[effectIndex]) & chorusMask];
                    chorusTap2B[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap2Index[effectIndex] + 1) & chorusMask];
                    chorusTap3A[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap3Index[effectIndex]) & chorusMask];
                    chorusTap3B[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap3Index[effectIndex] + 1) & chorusMask];
                    chorusTap4A[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap4Index[effectIndex]) & chorusMask];
                    chorusTap4B[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap4Index[effectIndex] + 1) & chorusMask];
                    chorusTap5A[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap5Index[effectIndex]) & chorusMask];
                    chorusTap5B[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap5Index[effectIndex] + 1) & chorusMask];
                    chorusTap0[effectIndex] = chorusTap0A[effectIndex] + (chorusTap0B[effectIndex] - chorusTap0A[effectIndex]) * chorusTap0Ratio[effectIndex];
                    chorusTap1[effectIndex] = chorusTap1A[effectIndex] + (chorusTap1B[effectIndex] - chorusTap1A[effectIndex]) * chorusTap1Ratio[effectIndex];
                    chorusTap2[effectIndex] = chorusTap2A[effectIndex] + (chorusTap2B[effectIndex] - chorusTap2A[effectIndex]) * chorusTap2Ratio[effectIndex];
                    chorusTap3[effectIndex] = chorusTap3A[effectIndex] + (chorusTap3B[effectIndex] - chorusTap3A[effectIndex]) * chorusTap3Ratio[effectIndex];
                    chorusTap4[effectIndex] = chorusTap4A[effectIndex] + (chorusTap4B[effectIndex] - chorusTap4A[effectIndex]) * chorusTap4Ratio[effectIndex];
                    chorusTap5[effectIndex] = chorusTap5A[effectIndex] + (chorusTap5B[effectIndex] - chorusTap5A[effectIndex]) * chorusTap5Ratio[effectIndex];
                    chorusDelayLineL[effectIndex][chorusDelayPos[effectIndex]] = sampleL * delayInputMult;
                    chorusDelayLineR[effectIndex][chorusDelayPos[effectIndex]] = sampleR * delayInputMult;
                    sampleL = chorusCombinedMult[effectIndex] * (sampleL + chorusVoiceMult[effectIndex] * (chorusTap1[effectIndex] - chorusTap0[effectIndex] - chorusTap2[effectIndex]));
                    sampleR = chorusCombinedMult[effectIndex] * (sampleR + chorusVoiceMult[effectIndex] * (chorusTap4[effectIndex] - chorusTap3[effectIndex] - chorusTap5[effectIndex]));
                    chorusDelayPos[effectIndex] = (chorusDelayPos[effectIndex] + 1) & chorusMask;
                    chorusTap0Index[effectIndex] += chorusTap0Delta[effectIndex];
                    chorusTap1Index[effectIndex] += chorusTap1Delta[effectIndex];
                    chorusTap2Index[effectIndex] += chorusTap2Delta[effectIndex];
                    chorusTap3Index[effectIndex] += chorusTap3Delta[effectIndex];
                    chorusTap4Index[effectIndex] += chorusTap4Delta[effectIndex];
                    chorusTap5Index[effectIndex] += chorusTap5Delta[effectIndex];
                    chorusVoiceMult[effectIndex] += chorusVoiceMultDelta[effectIndex];
                    chorusCombinedMult[effectIndex] += chorusCombinedMultDelta[effectIndex];`:h&&T.type==6?C+=`

                    echoNextInputL[effectIndex] = (sampleL + sampleR) / 2;
                    echoNextInputR[effectIndex] = (sampleL + sampleR) / 2;
                    echoTapStartIndexL[effectIndex] = (echoDelayPosL[effectIndex] + echoDelayOffsetStart[effectIndex]) & echoMask[effectIndex];
                    echoTapStartIndexR[effectIndex] = (echoDelayPosR[effectIndex] + echoDelayOffsetStart[effectIndex]) & echoMask[effectIndex];
                    echoTapEndIndexL[effectIndex]   = (echoDelayPosL[effectIndex] + echoDelayOffsetEnd[effectIndex]) & echoMask[effectIndex];
                    echoTapEndIndexR[effectIndex]   = (echoDelayPosR[effectIndex] + echoDelayOffsetEnd[effectIndex]) & echoMask[effectIndex];
                    echoTapStartL[effectIndex] = echoDelayLineL[effectIndex][echoTapStartIndexL[effectIndex]];
                    echoTapEndL[effectIndex]   = echoDelayLineL[effectIndex][echoTapEndIndexL[effectIndex]];
                    echoTapStartR[effectIndex] = echoDelayLineR[effectIndex][echoTapStartIndexR[effectIndex]];
                    echoTapEndR[effectIndex]   = echoDelayLineR[effectIndex][echoTapEndIndexR[effectIndex]];
                    echoTapL[effectIndex] = (echoTapStartL[effectIndex] + (echoTapEndL[effectIndex] - echoTapStartL[effectIndex]) * echoDelayOffsetRatio[effectIndex]) * echoMult[effectIndex];
                    echoTapR[effectIndex] = (echoTapStartR[effectIndex] + (echoTapEndR[effectIndex] - echoTapStartR[effectIndex]) * echoDelayOffsetRatio[effectIndex]) * echoMult[effectIndex];

                    echoShelfSampleL[effectIndex] = echoShelfB0[effectIndex] * echoTapL[effectIndex] + echoShelfB1[effectIndex] * echoShelfPrevInputL[effectIndex] - echoShelfA1[effectIndex] * echoShelfSampleL[effectIndex];
                    echoShelfSampleR[effectIndex] = echoShelfB0[effectIndex] * echoTapR[effectIndex] + echoShelfB1[effectIndex] * echoShelfPrevInputR[effectIndex] - echoShelfA1[effectIndex] * echoShelfSampleR[effectIndex];
                    echoShelfPrevInputL[effectIndex] = echoTapL[effectIndex];
                    echoShelfPrevInputR[effectIndex] = echoTapR[effectIndex];
                    sampleL += echoShelfSampleL[effectIndex];
                    sampleR += echoShelfSampleR[effectIndex];

                    echoDelayLineL[effectIndex][echoDelayPosL[effectIndex]] = (sampleL * (1 - Math.abs(echoPingPong[effectIndex])) + (echoNextInputL[effectIndex] * Math.max(0, echoPingPong[effectIndex]) + echoShelfSampleR[effectIndex]) * Math.abs(echoPingPong[effectIndex])) * delayInputMult;
                    echoDelayLineR[effectIndex][echoDelayPosR[effectIndex]] = (sampleR * (1 - Math.abs(echoPingPong[effectIndex])) + (echoNextInputR[effectIndex] * Math.max(0, -echoPingPong[effectIndex]) + echoShelfSampleL[effectIndex]) * Math.abs(echoPingPong[effectIndex])) * delayInputMult;
                    echoDelayPosL[effectIndex] = (echoDelayPosL[effectIndex] + 1) & echoMask[effectIndex];
                    echoDelayPosR[effectIndex] = (echoDelayPosR[effectIndex] + 1) & echoMask[effectIndex];
                    echoDelayOffsetRatio[effectIndex] += echoDelayOffsetRatioDelta[effectIndex];
                    echoMult[effectIndex] += echoMultDelta[effectIndex];
                    `:m&&T.type==0?C+=`

                    // Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.
                    // good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268
                    // Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14
                    // Buffer offsets: 3041    -> 6426   -> 10907 -> 16384
                    reverbDelayPos1[effectIndex] = (reverbDelayPos[effectIndex] +  3041) & reverbMask;
                    reverbDelayPos2[effectIndex] = (reverbDelayPos[effectIndex] +  6426) & reverbMask;
                    reverbDelayPos3[effectIndex] = (reverbDelayPos[effectIndex] + 10907) & reverbMask;
                    reverbSample0[effectIndex] = (reverbDelayLine[effectIndex][reverbDelayPos[effectIndex]]);
                    reverbSample1[effectIndex] = reverbDelayLine[effectIndex][reverbDelayPos1[effectIndex]];
                    reverbSample2[effectIndex] = reverbDelayLine[effectIndex][reverbDelayPos2[effectIndex]];
                    reverbSample3[effectIndex] = reverbDelayLine[effectIndex][reverbDelayPos3[effectIndex]];
                    reverbTemp0[effectIndex] = -(reverbSample0[effectIndex] + sampleL) + reverbSample1[effectIndex];
                    reverbTemp1[effectIndex] = -(reverbSample0[effectIndex] + sampleR) - reverbSample1[effectIndex];
                    reverbTemp2[effectIndex] = -reverbSample2[effectIndex] + reverbSample3[effectIndex];
                    reverbTemp3[effectIndex] = -reverbSample2[effectIndex] - reverbSample3[effectIndex];
                    reverbShelfInput0[effectIndex] = (reverbTemp0[effectIndex] + reverbTemp2[effectIndex]) * reverb[effectIndex];
                    reverbShelfInput1[effectIndex] = (reverbTemp1[effectIndex] + reverbTemp3[effectIndex]) * reverb[effectIndex];
                    reverbShelfInput2[effectIndex] = (reverbTemp0[effectIndex] - reverbTemp2[effectIndex]) * reverb[effectIndex];
                    reverbShelfInput3[effectIndex] = (reverbTemp1[effectIndex] - reverbTemp3[effectIndex]) * reverb[effectIndex];
                    reverbShelfSample0[effectIndex] = reverbShelfB0[effectIndex] * reverbShelfInput0[effectIndex] + reverbShelfB1[effectIndex] * reverbShelfPrevInput0[effectIndex] - reverbShelfA1[effectIndex] * reverbShelfSample0[effectIndex];
                    reverbShelfSample1[effectIndex] = reverbShelfB0[effectIndex] * reverbShelfInput1[effectIndex] + reverbShelfB1[effectIndex] * reverbShelfPrevInput1[effectIndex] - reverbShelfA1[effectIndex] * reverbShelfSample1[effectIndex];
                    reverbShelfSample2[effectIndex] = reverbShelfB0[effectIndex] * reverbShelfInput2[effectIndex] + reverbShelfB1[effectIndex] * reverbShelfPrevInput2[effectIndex] - reverbShelfA1[effectIndex] * reverbShelfSample2[effectIndex];
                    reverbShelfSample3[effectIndex] = reverbShelfB0[effectIndex] * reverbShelfInput3[effectIndex] + reverbShelfB1[effectIndex] * reverbShelfPrevInput3[effectIndex] - reverbShelfA1[effectIndex] * reverbShelfSample3[effectIndex];
                    reverbShelfPrevInput0[effectIndex] = reverbShelfInput0[effectIndex];
                    reverbShelfPrevInput1[effectIndex] = reverbShelfInput1[effectIndex];
                    reverbShelfPrevInput2[effectIndex] = reverbShelfInput2[effectIndex];
                    reverbShelfPrevInput3[effectIndex] = reverbShelfInput3[effectIndex];
                    reverbDelayLine[effectIndex][reverbDelayPos1[effectIndex]] = reverbShelfSample0[effectIndex] * delayInputMult;
                    reverbDelayLine[effectIndex][reverbDelayPos2[effectIndex]] = reverbShelfSample1[effectIndex] * delayInputMult;
                    reverbDelayLine[effectIndex][reverbDelayPos3[effectIndex]] = reverbShelfSample2[effectIndex] * delayInputMult;
                    reverbDelayLine[effectIndex][reverbDelayPos[effectIndex] ] = reverbShelfSample3[effectIndex] * delayInputMult;
                    reverbDelayPos[effectIndex] = (reverbDelayPos[effectIndex] + 1) & reverbMask;
                    sampleL += reverbSample1[effectIndex] + reverbSample2[effectIndex] + reverbSample3[effectIndex];
                    sampleR += reverbSample0[effectIndex] + reverbSample2[effectIndex] - reverbSample3[effectIndex];
                    reverb[effectIndex] += reverbDelta[effectIndex];`:v&&T.type==5?(C+=`

                    inputSampleL[effectIndex] = sampleL;
                    inputSampleR[effectIndex] = sampleR;
                    sampleL = applyFilters(inputSampleL[effectIndex], initialFilterInputL1[effectIndex], initialFilterInputL2[effectIndex], filterCount[effectIndex], filtersL[effectIndex]);
                    sampleR = applyFilters(inputSampleR[effectIndex], initialFilterInputR1[effectIndex], initialFilterInputR2[effectIndex], filterCount[effectIndex], filtersR[effectIndex]);
                    initialFilterInputL2[effectIndex] = initialFilterInputL1[effectIndex];
                    initialFilterInputR2[effectIndex] = initialFilterInputR1[effectIndex];
                    initialFilterInputL1[effectIndex] = inputSampleL[effectIndex];
                    initialFilterInputR1[effectIndex] = inputSampleR[effectIndex];`,C+=`

                    sampleL *= eqFilterVolume[effectIndex];
                    sampleR *= eqFilterVolume[effectIndex];
                    eqFilterVolume[effectIndex] += eqFilterVolumeDelta[effectIndex];`):I&&T.type==7?C+=`

					ringModOutputL[effectIndex] = sampleL * waveform[effectIndex][(ringModPhase[effectIndex]*waveformLength[effectIndex])|0];
					ringModOutputR[effectIndex] = sampleR * waveform[effectIndex][(ringModPhase[effectIndex]*waveformLength[effectIndex])|0];
					ringModMixF[effectIndex] = Math.max(0, ringModMix[effectIndex] * ringModMixFade[effectIndex]);
					sampleL = sampleL * (1 - ringModMixF[effectIndex]) + ringModOutputL[effectIndex] * ringModMixF[effectIndex];
					sampleR = sampleR * (1 - ringModMixF[effectIndex]) + ringModOutputR[effectIndex] * ringModMixF[effectIndex];

					ringModMix[effectIndex] += ringModMixDelta[effectIndex];
					ringModPhase[effectIndex] += ringModPhaseDelta[effectIndex];
					ringModPhase[effectIndex] = ringModPhase[effectIndex] % 1.0;
					ringModPhaseDelta[effectIndex] *= ringModPhaseDeltaScale[effectIndex];
					ringModMixFade[effectIndex] += ringModMixFadeDelta[effectIndex];
					`:p&&T.type==8&&(C+=`
                    granularOutputL[effectIndex] = 0;
                    granularOutputR[effectIndex] = 0;
                    for (let grainIndex = 0; grainIndex < granularGrainCount[effectIndex]; grainIndex++) {
                        const grain = granularGrains[effectIndex][grainIndex];
                        if(computeGrains[effectIndex]) {
                            if(grain.delay > 0) {
                                grain.delay--;
                            } else {
                                const grainDelayLinePosition = grain.delayLinePosition;
                                const grainDelayLinePositionInt = grainDelayLinePosition | 0;
                                let grainAgeInSamples = grain.ageInSamples;
                                const grainMaxAgeInSamples = grain.maxAgeInSamples;
                                let grainSampleL = granularDelayLineL[effectIndex][((granularDelayLineIndex[effectIndex] + (granularDelayLineLength[effectIndex] - grainDelayLinePositionInt))    ) & granularDelayLineMask];
                                let grainSampleR = granularDelayLineR[effectIndex][((granularDelayLineIndex[effectIndex] + (granularDelayLineLength[effectIndex] - grainDelayLinePositionInt))    ) & granularDelayLineMask];
                                `,t.granularEnvelopeType==0?C+=`
                                    const grainEnvelope = grain.parabolicEnvelopeAmplitude;
                                    `:t.granularEnvelopeType==1&&(C+=`
                                    const grainEnvelope = grain.rcbEnvelopeAmplitude;
                                    `),C+=`
                                grainSampleL *= grainEnvelope;
                                grainSampleR *= grainEnvelope;
                                granularOutputL[effectIndex] += grainSampleL;
                                granularOutputR[effectIndex] += grainSampleR;
                                if (grainAgeInSamples > grainMaxAgeInSamples) {
                                    if (granularGrainCount[effectIndex] > 0) {
                                        // Faster equivalent of .pop, ignoring the order in the array.
                                        const lastGrainIndex = granularGrainCount[effectIndex] - 1;
                                        const lastGrain = granularGrains[effectIndex][lastGrainIndex];
                                        granularGrains[effectIndex][grainIndex] = lastGrain;
                                        granularGrains[effectIndex][lastGrainIndex] = grain;
                                        granularGrainCount[effectIndex]--;
                                        grainIndex--;
                                        // ^ Dangerous, since this could end up causing an infinite loop,
                                        // but should be okay in this case.
                                    }
                                } else {
                                    grainAgeInSamples++;
                                    `,t.granularEnvelopeType==0?C+=`
                                        grain.parabolicEnvelopeAmplitude += grain.parabolicEnvelopeSlope;
                                        grain.parabolicEnvelopeSlope += grain.parabolicEnvelopeCurve;
                                        `:t.granularEnvelopeType==1&&(C+=`
                                        grain.updateRCBEnvelope();
                                        `),C+=`
                                    grain.ageInSamples = grainAgeInSamples;
                                }
                            }
                        }
                    }
                    granularWet[effectIndex] += granularMixDelta[effectIndex];
                    granularDry[effectIndex] -= granularMixDelta[effectIndex];
                    granularOutputL[effectIndex] *= Config.granularOutputLoudnessCompensation;
                    granularOutputR[effectIndex] *= Config.granularOutputLoudnessCompensation;
                    granularDelayLineL[effectIndex][granularDelayLineIndex[effectIndex]] = sampleL;
                    granularDelayLineR[effectIndex][granularDelayLineIndex[effectIndex]] = sampleR;
                    granularDelayLineIndex[effectIndex] = (granularDelayLineIndex[effectIndex] + 1) & granularDelayLineMask[effectIndex];
                    sampleL = sampleL * granularDry[effectIndex] + granularOutputL[effectIndex] * granularWet[effectIndex];
                    sampleR = sampleR * granularDry[effectIndex] + granularOutputR[effectIndex] * granularWet[effectIndex];
                    `)}C+=`

                    outputDataL[sampleIndex] += sampleL * mixVolume;
                    outputDataR[sampleIndex] += sampleR * mixVolume;
                    mixVolume += mixVolumeDelta;`,W&&(C+=`

                    delayInputMult += delayInputMultDelta;`),C+=`
                }

                instrumentState.mixVolume = mixVolume;

                // Avoid persistent denormal or NaN values in the delay buffers and filter history.
                const epsilon = (1.0e-24);`,W&&(C+=`

                instrumentState.delayInputMult = delayInputMult;`);for(let L=0;L<r.effects.length;L++){let T=r.effects[L];C+=`

                effectState = instrumentState.effects[`+L+`];
                effectIndex = `+L+`;
                `,p&&T.type==8?C+=`
                        effectState.granularMix = granularWet[effectIndex];
                        effectState.granularGrainsLength = granularGrainCount[effectIndex];
                        effectState.granularDelayLineIndex = granularDelayLineIndex[effectIndex];
                    `:u&&T.type==3?C+=`

                    effectState.distortion = distortion[effectIndex];
                    effectState.distortionDrive = distortionDrive[effectIndex];

                    if (!Number.isFinite(distortionFractionalInputL1[effectIndex]) || Math.abs(distortionFractionalInputL1[effectIndex]) < epsilon) distortionFractionalInputL1[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionFractionalInputL2[effectIndex]) || Math.abs(distortionFractionalInputL2[effectIndex]) < epsilon) distortionFractionalInputL2[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionFractionalInputL3[effectIndex]) || Math.abs(distortionFractionalInputL3[effectIndex]) < epsilon) distortionFractionalInputL3[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionFractionalInputR1[effectIndex]) || Math.abs(distortionFractionalInputR1[effectIndex]) < epsilon) distortionFractionalInputR1[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionFractionalInputR2[effectIndex]) || Math.abs(distortionFractionalInputR2[effectIndex]) < epsilon) distortionFractionalInputR2[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionFractionalInputR3[effectIndex]) || Math.abs(distortionFractionalInputR3[effectIndex]) < epsilon) distortionFractionalInputR3[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionPrevInputL[effectIndex]) || Math.abs(distortionPrevInputL[effectIndex]) < epsilon) distortionPrevInputL[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionPrevInputR[effectIndex]) || Math.abs(distortionPrevInputR[effectIndex]) < epsilon) distortionPrevInputR[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionNextOutputL[effectIndex]) || Math.abs(distortionNextOutputL[effectIndex]) < epsilon) distortionNextOutputL[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionNextOutputR[effectIndex]) || Math.abs(distortionNextOutputR[effectIndex]) < epsilon) distortionNextOutputR[effectIndex] = 0.0;

                    effectState.distortionFractionalInputL1 = distortionFractionalInputL1[effectIndex];
                    effectState.distortionFractionalInputL2 = distortionFractionalInputL2[effectIndex];
                    effectState.distortionFractionalInputL3 = distortionFractionalInputL3[effectIndex];
                    effectState.distortionFractionalInputR1 = distortionFractionalInputR1[effectIndex];
                    effectState.distortionFractionalInputR2 = distortionFractionalInputR2[effectIndex];
                    effectState.distortionFractionalInputR3 = distortionFractionalInputR3[effectIndex];
                    effectState.distortionPrevInputL = distortionPrevInputL[effectIndex];
                    effectState.distortionPrevInputR = distortionPrevInputR[effectIndex];
                    effectState.distortionNextOutputL = distortionNextOutputL[effectIndex];
                    effectState.distortionNextOutputR = distortionNextOutputR[effectIndex];`:c&&T.type==4?C+=`

                    if (Math.abs(bitcrusherPrevInputL[effectIndex]) < epsilon) bitcrusherPrevInputL[effectIndex] = 0.0;
                    if (Math.abs(bitcrusherPrevInputR[effectIndex]) < epsilon) bitcrusherPrevInputR[effectIndex] = 0.0;
                    if (Math.abs(bitcrusherCurrentOutputL[effectIndex]) < epsilon) bitcrusherCurrentOutputL[effectIndex] = 0.0;
                    if (Math.abs(bitcrusherCurrentOutputR[effectIndex]) < epsilon) bitcrusherCurrentOutputR[effectIndex] = 0.0;
                    effectState.bitcrusherPrevInputL = bitcrusherPrevInputL[effectIndex];
                    effectState.bitcrusherPrevInputR = bitcrusherPrevInputR[effectIndex];
                    effectState.bitcrusherCurrentOutputL = bitcrusherCurrentOutputL[effectIndex];
                    effectState.bitcrusherCurrentOutputR = bitcrusherCurrentOutputR[effectIndex];
                    effectState.bitcrusherPhase = bitcrusherPhase[effectIndex];
                    effectState.bitcrusherPhaseDelta = bitcrusherPhaseDelta[effectIndex];
                    effectState.bitcrusherScale = bitcrusherScale[effectIndex];
                    effectState.bitcrusherFoldLevel = bitcrusherFoldLevel[effectIndex];`:I&&T.type==7?C+=`
                    effectState.ringModMix = ringModMix[effectIndex];
                    effectState.ringModMixDelta = ringModMixDelta[effectIndex];
                    effectState.ringModPhase = ringModPhase[effectIndex];
                    effectState.ringModPhaseDelta = ringModPhaseDelta[effectIndex];
                    effectState.ringModPhaseDeltaScale = ringModPhaseDeltaScale[effectIndex];
                    effectState.ringModWaveformIndex = ringModWaveformIndex[effectIndex];
                    effectState.ringModPulseWidth = ringModPulseWidth[effectIndex];
                    effectState.ringModMixFade = ringModMixFade[effectIndex];
                    `:v&&T.type==5?C+=`

                        synth.sanitizeFilters(filtersL[effectIndex]);
                        synth.sanitizeFilters(filtersR[effectIndex]);
                    // The filter input here is downstream from another filter so we
                    // better make sure it's safe too.
                    if (!(initialFilterInputL1[effectIndex] < 100) || !(initialFilterInputL2[effectIndex] < 100) || !(initialFilterInputR1[effectIndex] < 100) || !(initialFilterInputR2[effectIndex] < 100)) {
                        initialFilterInputL1[effectIndex] = 0.0;
                        initialFilterInputR2[effectIndex] = 0.0;
                        initialFilterInputL1[effectIndex] = 0.0;
                        initialFilterInputR2[effectIndex] = 0.0;
                    }
                    if (Math.abs(initialFilterInputL1[effectIndex]) < epsilon) initialFilterInputL1[effectIndex] = 0.0;
                    if (Math.abs(initialFilterInputL2[effectIndex]) < epsilon) initialFilterInputL2[effectIndex] = 0.0;
                    if (Math.abs(initialFilterInputR1[effectIndex]) < epsilon) initialFilterInputR1[effectIndex] = 0.0;
                    if (Math.abs(initialFilterInputR2[effectIndex]) < epsilon) initialFilterInputR2[effectIndex] = 0.0;
                    effectState.initialEqFilterInputL1 = initialFilterInputL1[effectIndex];
                    effectState.initialEqFilterInputL2 = initialFilterInputL2[effectIndex];
                    effectState.initialEqFilterInputR1 = initialFilterInputR1[effectIndex];
                    effectState.initialEqFilterInputR2 = initialFilterInputR2[effectIndex];

                    instrumentState.eqFilterVolume = eqFilterVolume[effectIndex];`:o&&T.type==9?C+=`
                    effectState.gain = gain[effectIndex];
                    `:y&&T.type==2?C+=`

                    Synth.sanitizeDelayLine(panningDelayLineL[effectIndex], panningDelayPos[effectIndex], panningMask);
                    Synth.sanitizeDelayLine(panningDelayLineR[effectIndex], panningDelayPos[effectIndex], panningMask);
                    effectState.panningDelayPos = panningDelayPos[effectIndex];
                    effectState.panningVolumeL = panningVolumeL[effectIndex];
                    effectState.panningVolumeR = panningVolumeR[effectIndex];
                    effectState.panningOffsetL = panningOffsetL[effectIndex];
                    effectState.panningOffsetR = panningOffsetR[effectIndex];`:d&&T.type==10?C+=`

                    Synth.sanitizeDelayLine(flangerDelayLineL[effectIndex], flangerDelayPos[effectIndex], flangerMask);
                    Synth.sanitizeDelayLine(flangerDelayLineR[effectIndex], flangerDelayPos[effectIndex], flangerMask);
                    effectState.flangerPhase = flangerPhase[effectIndex];
                    effectState.flangerDelayPos = flangerDelayPos[effectIndex];
                    effectState.flanger = flanger[effectIndex];
                    effectState.flangerSpeed = flangerSpeed[effectIndex];
                    effectState.flangerDepth = flangerDepth[effectIndex];
                    effectState.flangerFeedback = flangerFeedback[effectIndex];`:g&&T.type==1?C+=`

                    Synth.sanitizeDelayLine(chorusDelayLineL[effectIndex], chorusDelayPos[effectIndex], chorusMask);
                    Synth.sanitizeDelayLine(chorusDelayLineR[effectIndex], chorusDelayPos[effectIndex], chorusMask);
                    effectState.chorusPhase = chorusPhase[effectIndex];
                    effectState.chorusDelayPos = chorusDelayPos[effectIndex];
                    effectState.chorusVoiceMult = chorusVoiceMult[effectIndex];
                    effectState.chorusCombinedMult = chorusCombinedMult[effectIndex];`:h&&T.type==6?C+=`

                    Synth.sanitizeDelayLine(echoDelayLineL[effectIndex], echoDelayPosL[effectIndex], echoMask[effectIndex]);
                    Synth.sanitizeDelayLine(echoDelayLineR[effectIndex], echoDelayPosR[effectIndex], echoMask[effectIndex]);
                    effectState.echoDelayPosL = echoDelayPosL[effectIndex];
                    effectState.echoDelayPosR = echoDelayPosR[effectIndex];
                    effectState.echoMult = echoMult[effectIndex];
                    effectState.echoDelayOffsetRatio = echoDelayOffsetRatio[effectIndex];

                    if (!Number.isFinite(echoShelfSampleL[effectIndex]) || Math.abs(echoShelfSampleL[effectIndex]) < epsilon) echoShelfSampleL[effectIndex] = 0.0;
                    if (!Number.isFinite(echoShelfSampleR[effectIndex]) || Math.abs(echoShelfSampleR[effectIndex]) < epsilon) echoShelfSampleR[effectIndex] = 0.0;
                    if (!Number.isFinite(echoShelfPrevInputL[effectIndex]) || Math.abs(echoShelfPrevInputL[effectIndex]) < epsilon) echoShelfPrevInputL[effectIndex] = 0.0;
                    if (!Number.isFinite(echoShelfPrevInputR[effectIndex]) || Math.abs(echoShelfPrevInputR[effectIndex]) < epsilon) echoShelfPrevInputR[effectIndex] = 0.0;
                    effectState.echoShelfSampleL = echoShelfSampleL[effectIndex];
                    effectState.echoShelfSampleR = echoShelfSampleR[effectIndex];
                    effectState.echoShelfPrevInputL = echoShelfPrevInputL[effectIndex];
                    effectState.echoShelfPrevInputR = echoShelfPrevInputR[effectIndex];`:m&&T.type==0&&(C+=`

                    Synth.sanitizeDelayLine(reverbDelayLine[effectIndex], reverbDelayPos[effectIndex]        , reverbMask);
                    Synth.sanitizeDelayLine(reverbDelayLine[effectIndex], reverbDelayPos[effectIndex] +  3041, reverbMask);
                    Synth.sanitizeDelayLine(reverbDelayLine[effectIndex], reverbDelayPos[effectIndex] +  6426, reverbMask);
                    Synth.sanitizeDelayLine(reverbDelayLine[effectIndex], reverbDelayPos[effectIndex] + 10907, reverbMask);
                    effectState.reverbDelayPos = reverbDelayPos[effectIndex];
                    effectState.reverbMult = reverb[effectIndex];

                    if (!Number.isFinite(reverbShelfSample0[effectIndex]) || Math.abs(reverbShelfSample0[effectIndex]) < epsilon) reverbShelfSample0[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfSample1[effectIndex]) || Math.abs(reverbShelfSample1[effectIndex]) < epsilon) reverbShelfSample1[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfSample2[effectIndex]) || Math.abs(reverbShelfSample2[effectIndex]) < epsilon) reverbShelfSample2[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfSample3[effectIndex]) || Math.abs(reverbShelfSample3[effectIndex]) < epsilon) reverbShelfSample3[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfPrevInput0[effectIndex]) || Math.abs(reverbShelfPrevInput0[effectIndex]) < epsilon) reverbShelfPrevInput0[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfPrevInput1[effectIndex]) || Math.abs(reverbShelfPrevInput1[effectIndex]) < epsilon) reverbShelfPrevInput1[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfPrevInput2[effectIndex]) || Math.abs(reverbShelfPrevInput2[effectIndex]) < epsilon) reverbShelfPrevInput2[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfPrevInput3[effectIndex]) || Math.abs(reverbShelfPrevInput3[effectIndex]) < epsilon) reverbShelfPrevInput3[effectIndex] = 0.0;
                    effectState.reverbShelfSample0 = reverbShelfSample0[effectIndex];
                    effectState.reverbShelfSample1 = reverbShelfSample1[effectIndex];
                    effectState.reverbShelfSample2 = reverbShelfSample2[effectIndex];
                    effectState.reverbShelfSample3 = reverbShelfSample3[effectIndex];
                    effectState.reverbShelfPrevInput0 = reverbShelfPrevInput0[effectIndex];
                    effectState.reverbShelfPrevInput1 = reverbShelfPrevInput1[effectIndex];
                    effectState.reverbShelfPrevInput2 = reverbShelfPrevInput2[effectIndex];
                    effectState.reverbShelfPrevInput3 = reverbShelfPrevInput3[effectIndex];`)}C+="}",console.log(C),S=new Function("Config","Synth",C)(t,l),l.effectsFunctionCache[M]=S}S(e,a,i,n,s,r)}static pulseWidthSynth(e,a,i,n,s){let r=e.tempInstrumentSampleBufferL,u=n.specialIntervalExpressionMult*s.unisonSign;s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(n.phases[1]=n.phases[0]);let c=n.phaseDeltas[0],v=n.phaseDeltas[1],o=+n.phaseDeltaScales[0],y=+n.phaseDeltaScales[1],d=+n.expression,g=+n.expressionDelta,h=n.phases[0]%1,m=n.phases[1]%1,p=n.pulseWidth,I=n.pulseWidthDelta,F=n.noteFiltersL,M=n.noteFilterCount|0,S=+n.initialNoteFilterInputL1,C=+n.initialNoteFilterInputL2,W=l.applyFilters,L=a+i;for(let k=a;k<L;k++){let A=h%1,z=(h+p)%1,B=m%1,N=(m+p)%1,G=z-A,U=N-B;if(!s.aliases){if(A<c){var T=A/c;G+=(T+T-T*T-1)*.5}else if(A>1-c){var T=(A-1)/c;G+=(T+T+T*T+1)*.5}if(z<c){var T=z/c;G-=(T+T-T*T-1)*.5}else if(z>1-c){var T=(z-1)/c;G-=(T+T+T*T+1)*.5}if(B<v){var T=B/v;U+=(T+T-T*T-1)*.5}else if(B>1-v){var T=(B-1)/v;U+=(T+T+T*T+1)*.5}if(N<v){var T=N/v;U-=(T+T-T*T-1)*.5}else if(N>1-v){var T=(N-1)/v;U-=(T+T+T*T+1)*.5}}let V=G+U*u,f=W(V,S,C,M,F);C=S,S=V,h+=c,m+=v,c*=o,v*=y,p+=I;let b=f*d;d+=g,r[k]+=b}n.phases[0]=h,n.phases[1]=m,n.phaseDeltas[0]=c,n.phaseDeltas[1]=v,n.expression=d,n.pulseWidth=p,e.sanitizeFilters(F),n.initialNoteFilterInputL1=S,n.initialNoteFilterInputL2=C}static supersawSynth(e,a,i,n,s){let r=e.tempInstrumentSampleBufferL,u=t.supersawVoiceCount|0,c=n.phaseDeltas[0],v=+n.phaseDeltaScales[0],o=+n.expression,y=+n.expressionDelta,d=n.phases,g=+n.supersawDynamism,h=+n.supersawDynamismDelta,m=n.supersawUnisonDetunes,p=+n.supersawShape,I=+n.supersawShapeDelta,F=+n.supersawDelayLength,M=+n.supersawDelayLengthDelta,S=n.supersawDelayLine,C=S.length-1>>0,W=n.supersawDelayIndex|0;W=(W&C)+S.length;let L=n.noteFiltersL,T=n.noteFilterCount|0,k=+n.initialNoteFilterInputL1,A=+n.initialNoteFilterInputL2,z=l.applyFilters,B=a+i;for(let G=a;G<B;G++){let U=(d[0]+c)%1,V=U-.5*(1+(u-1)*g);if(!s.aliases){if(U<c){var N=U/c;V-=(N+N-N*N-1)*.5}else if(U>1-c){var N=(U-1)/c;V-=(N+N+N*N+1)*.5}}d[0]=U;for(let ge=1;ge<u;ge++){let Ie=c*m[ge],Q=(d[ge]+Ie)%1;if(V+=Q*g,!s.aliases){if(Q<Ie){let H=Q/Ie;V-=(H+H-H*H-1)*.5*g}else if(Q>1-Ie){let H=(Q-1)/Ie;V-=(H+H+H*H+1)*.5*g}}d[ge]=Q}S[W&C]=V;let f=W-F,b=f|0,x=b+1,w=f-b,P=S[b&C],R=S[x&C],O=P+(R-P)*w;W++;let _=V-O*p,te=z(_,k,A,T,L);A=k,k=_,c*=v,g+=h,p+=I,F+=M;let ee=te*o;o+=y,r[G]+=ee}n.phaseDeltas[0]=c,n.expression=o,n.supersawDynamism=g,n.supersawShape=p,n.supersawDelayLength=F,n.supersawDelayIndex=W,e.sanitizeFilters(L),n.initialNoteFilterInputL1=k,n.initialNoteFilterInputL2=A}static fmSourceTemplate=(`
		const data = synth.tempInstrumentSampleBufferL;
		const sineWave = Config.sineWave;
			
		// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.
		let operator#Phase       = +((tone.phases[#] % 1) + 1000) * `+t.sineWaveLength+`;
		let operator#PhaseDelta  = +tone.phaseDeltas[#] * `+t.sineWaveLength+`;
		let operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];
		let operator#OutputMult  = +tone.operatorExpressions[#];
		const operator#OutputDelta = +tone.operatorExpressionDeltas[#];
		let operator#Output      = +tone.feedbackOutputs[#];
        const operator#Wave      = tone.operatorWaves[#].samples;
		let feedbackMult         = +tone.feedbackMult;
		const feedbackDelta        = +tone.feedbackDelta;
        let expression = +tone.expression;
		const expressionDelta = +tone.expressionDelta;
		
		const filters = tone.noteFiltersL;
		const filterCount = tone.noteFilterCount|0;
		let initialFilterInput1 = +tone.initialNoteFilterInputL1;
		let initialFilterInput2 = +tone.initialNoteFilterInputL2;
		const applyFilters = Synth.applyFilters;
		
		const stopIndex = bufferIndex + roundedSamplesPerTick;
		for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {
				// INSERT OPERATOR COMPUTATION HERE
				const fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS
				
			const inputSample = fmOutput;
			const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);
			initialFilterInput2 = initialFilterInput1;
			initialFilterInput1 = inputSample;
				
				feedbackMult += feedbackDelta;
				operator#OutputMult += operator#OutputDelta;
				operator#Phase += operator#PhaseDelta;
			operator#PhaseDelta *= operator#PhaseDeltaScale;
			
			const output = sample * expression;
			expression += expressionDelta;

			data[sampleIndex] += output;
			}
			
			tone.phases[#] = operator#Phase / `+t.sineWaveLength+`;
			tone.phaseDeltas[#] = operator#PhaseDelta / `+t.sineWaveLength+`;
			tone.operatorExpressions[#] = operator#OutputMult;
		    tone.feedbackOutputs[#] = operator#Output;
		    tone.feedbackMult = feedbackMult;
		    tone.expression = expression;
			
		synth.sanitizeFilters(filters);
		tone.initialNoteFilterInputL1 = initialFilterInput1;
		tone.initialNoteFilterInputL2 = initialFilterInput2;
		`).split(`
`);static operatorSourceTemplate=(`
		const operator#PhaseMix = operator#Phase/* + operator@Scaled*/;
		const operator#PhaseInt = operator#PhaseMix|0;
		const operator#Index    = operator#PhaseInt & `+t.sineWaveMask+`;
		const operator#Sample   = operator#Wave[operator#Index];
		operator#Output         = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);
		const operator#Scaled   = operator#OutputMult * operator#Output;
		`).split(`
`);static noiseSynth(e,a,i,n,s){let r=e.tempInstrumentSampleBufferL,u=s.waveL,c=n.specialIntervalExpressionMult*s.unisonSign;s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(n.phases[1]=n.phases[0]);let v=n.phaseDeltas[0],o=n.phaseDeltas[1],y=+n.phaseDeltaScales[0],d=+n.phaseDeltaScales[1],g=+n.expression,h=+n.expressionDelta,m=n.phases[0]%1*t.chipNoiseLength,p=n.phases[1]%1*t.chipNoiseLength;n.phases[0]==0&&(m=Math.random()*t.chipNoiseLength,s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(p=m)),n.phases[1]==0&&!(s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval)&&(p=Math.random()*t.chipNoiseLength);let I=t.chipNoiseLength-1,F=+n.noiseSampleA,M=+n.noiseSampleB,S=n.noteFiltersL,C=n.noteFilterCount|0,W=+n.initialNoteFilterInputL1,L=+n.initialNoteFilterInputL2,T=l.applyFilters,k=Math.min(1,v*s.noisePitchFilterMult),A=Math.min(1,o*s.noisePitchFilterMult),z=a+i;for(let B=a;B<z;B++){let N=u[m&I],G=u[p&I];F+=(N-F)*k,M+=(G-M)*A;let U=F+M*c,V=T(U,W,L,C,S);L=W,W=U,m+=v,p+=o,v*=y,o*=d;let f=V*g;g+=h,r[B]+=f}n.phases[0]=m/t.chipNoiseLength,n.phases[1]=p/t.chipNoiseLength,n.phaseDeltas[0]=v,n.phaseDeltas[1]=o,n.expression=g,n.noiseSampleA=F,n.noiseSampleB=M,e.sanitizeFilters(S),n.initialNoteFilterInputL1=W,n.initialNoteFilterInputL2=L}static spectrumSynth(e,a,i,n,s){let r=e.tempInstrumentSampleBufferL,u=s.waveL,c=128,v=n.specialIntervalExpressionMult*s.unisonSign;s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(n.phases[1]=n.phases[0]);let o=n.phaseDeltas[0]*c,y=n.phaseDeltas[1]*c,d=+n.phaseDeltaScales[0],g=+n.phaseDeltaScales[1],h=+n.expression,m=+n.expressionDelta,p=+n.noiseSampleA,I=+n.noiseSampleB,F=n.noteFiltersL,M=n.noteFilterCount|0,S=+n.initialNoteFilterInputL1,C=+n.initialNoteFilterInputL2,W=l.applyFilters,L=n.phases[0]%1*t.spectrumNoiseLength,T=n.phases[1]%1*t.spectrumNoiseLength;n.phases[0]==0&&(L=l.findRandomZeroCrossing(u,t.spectrumNoiseLength)+o,s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(T=L)),n.phases[1]==0&&!(s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval)&&(T=l.findRandomZeroCrossing(u,t.spectrumNoiseLength)+y);let k=t.spectrumNoiseLength-1,A=Math.min(1,o),z=Math.min(1,y),B=a+i;for(let N=a;N<B;N++){let G=L|0,U=T|0,V=G&k,f=U&k,b=u[V],x=u[f],w=L-G,P=T-U;b+=(u[V+1]-b)*w,x+=(u[f+1]-x)*P,p+=(b-p)*A,I+=(x-I)*z;let R=p+I*v,O=W(R,S,C,M,F);C=S,S=R,L+=o,T+=y,o*=d,y*=g;let _=O*h;h+=m,r[N]+=_}n.phases[0]=L/t.spectrumNoiseLength,n.phases[1]=T/t.spectrumNoiseLength,n.phaseDeltas[0]=o/c,n.phaseDeltas[1]=y/c,n.expression=h,n.noiseSampleA=p,n.noiseSampleB=I,e.sanitizeFilters(F),n.initialNoteFilterInputL1=S,n.initialNoteFilterInputL2=C}static drumsetSynth(e,a,i,n,s){let r=e.tempInstrumentSampleBufferL,u=s.getDrumsetWave(n.drumsetPitch),c=Bt.drumsetIndexReferenceDelta(n.drumsetPitch),v=n.phaseDeltas[0]/c,o=+n.phaseDeltaScales[0],y=+n.expression,d=+n.expressionDelta,g=n.noteFiltersL,h=n.noteFilterCount|0,m=+n.initialNoteFilterInputL1,p=+n.initialNoteFilterInputL2,I=l.applyFilters,F=n.phases[0]%1*t.spectrumNoiseLength;n.phases[0]==0&&(F=l.findRandomZeroCrossing(u,t.spectrumNoiseLength)+v);let M=t.spectrumNoiseLength-1,S=a+i;for(let C=a;C<S;C++){let W=F|0,L=W&M,T=u[L],k=F-W;T+=(u[L+1]-T)*k;let A=T,z=I(A,m,p,h,g);p=m,m=A,F+=v,v*=o;let B=z*y;y+=d,r[C]+=B}n.phases[0]=F/t.spectrumNoiseLength,n.phaseDeltas[0]=v*c,n.expression=y,e.sanitizeFilters(g),n.initialNoteFilterInputL1=m,n.initialNoteFilterInputL2=p}static modSynth(e,a,i,n,s){if(!e.song)return;let r=t.modCount-1-n.pitches[0];if(s.invalidModulators[r])return;let u=s.modulators[r],c=[],v=[];if(t.modulators[s.modulators[r]].forSong)v.push(0);else if(s.modInstruments[r][0]==e.song.channels[s.modChannels[r][0]].instruments.length)for(let o=0;o<e.song.channels[s.modChannels[r][0]].instruments.length;o++)v.push(o),c.push(0);else if(s.modInstruments[r][0]>e.song.channels[s.modChannels[r][0]].instruments.length)e.song.getPattern(s.modChannels[r][0],e.bar)!=null&&(v=e.song.getPattern(s.modChannels[r][0],e.bar).instruments,c.push(0));else for(let o=0;o<s.modChannels[r].length;o++)c.push(s.modChannels[r][o]),v.push(s.modInstruments[r][o]);for(let o=0;o<v.length;o++){e.setModValue(n.expression,n.expression+n.expressionDelta,s.modChannels[r][o],v[o],u);for(let y=0;y<e.heldMods.length;y++)t.modulators[s.modulators[r]].forSong?e.heldMods[y].setting==u&&e.setModValue(e.heldMods[y].volume,e.heldMods[y].volume,s.modChannels[r][o],v[o],u):e.heldMods[y].channelIndex==s.modChannels[r][o]&&e.heldMods[y].instrumentIndex==v[o]&&e.heldMods[y].setting==u&&e.setModValue(e.heldMods[y].volume,e.heldMods[y].volume,s.modChannels[r][o],v[o],u);if(u==t.modulators.dictionary["reset arp"].index&&e.tick==0&&n.noteStartPart==e.beat*t.partsPerBeat+e.part)e.channels[s.modChannels[r][o]].instruments[v[o]].arpTime=0;else if(u==t.modulators.dictionary["reset envelope"].index&&e.tick==0&&n.noteStartPart==e.beat*t.partsPerBeat+e.part){let y=s.modEnvelopeNumbers[r],d=e.channels[s.modChannels[r][o]].instruments[v[o]];e.song.channels[s.modChannels[r][o]].instruments[v[o]].envelopeCount>y&&(d.envelopeTime[y]=0)}else if(u==t.modulators.dictionary["next bar"].index)e.wantToSkip=!0;else if(u==t.modulators.dictionary["song eq"].index){let y=e.song,d=s.modFilterTypes[r]|0;if(d==0){let g=0,h=e.getTicksIntoBar()/t.ticksPerPart;for(;n.note.start+n.note.pins[g].time<=h;)g++;let m=(h-n.note.start+i/(e.getSamplesPerTick()*t.ticksPerPart)*t.ticksPerPart-n.note.pins[g-1].time)/(n.note.pins[g].time-n.note.pins[g-1].time);y.eqSubFilters[n.note.pins[g-1].size]!=null||y.eqSubFilters[n.note.pins[g].size]!=null?y.tmpEqFilterEnd=Ee.lerpFilters(y.eqSubFilters[n.note.pins[g-1].size],y.eqSubFilters[n.note.pins[g].size],m):y.tmpEqFilterEnd=y.eqFilter}else{for(let g=0;g<t.filterMorphCount;g++)y.tmpEqFilterEnd==y.eqSubFilters[g]&&y.tmpEqFilterEnd!=null&&(y.tmpEqFilterEnd=new Ee,y.tmpEqFilterEnd.fromJsonObject(y.eqSubFilters[g].toJsonObject()));y.tmpEqFilterEnd==null&&(y.tmpEqFilterEnd=new Ee,y.tmpEqFilterEnd.fromJsonObject(y.eqFilter.toJsonObject())),y.tmpEqFilterEnd.controlPointCount>Math.floor((d-1)/2)&&(d%2?y.tmpEqFilterEnd.controlPoints[Math.floor((d-1)/2)].freq=n.expression+n.expressionDelta:y.tmpEqFilterEnd.controlPoints[Math.floor((d-1)/2)].gain=n.expression+n.expressionDelta)}}else if(u==t.modulators.dictionary["post eq"].index){let y=e.song.channels[s.modChannels[r][o]].instruments[v[o]];for(let d=0;d<y.effects.length;d++){let g=y.effects[d];if(!g.eqFilterType){let h=s.modFilterTypes[r]|0;if(h==0){let m=0,p=e.getTicksIntoBar()/t.ticksPerPart;for(;n.note.start+n.note.pins[m].time<=p;)m++;let I=(p-n.note.start+i/(e.getSamplesPerTick()*t.ticksPerPart)*t.ticksPerPart-n.note.pins[m-1].time)/(n.note.pins[m].time-n.note.pins[m-1].time);g.eqSubFilters[n.note.pins[m-1].size]!=null||g.eqSubFilters[n.note.pins[m].size]!=null?g.tmpEqFilterEnd=Ee.lerpFilters(g.eqSubFilters[n.note.pins[m-1].size],g.eqSubFilters[n.note.pins[m].size],I):g.tmpEqFilterEnd=g.eqFilter}else{for(let m=0;m<t.filterMorphCount;m++)g.tmpEqFilterEnd==g.eqSubFilters[m]&&g.tmpEqFilterEnd!=null&&(g.tmpEqFilterEnd=new Ee,g.tmpEqFilterEnd.fromJsonObject(g.eqSubFilters[m].toJsonObject()));g.tmpEqFilterEnd==null&&(g.tmpEqFilterEnd=new Ee,g.tmpEqFilterEnd.fromJsonObject(g.eqFilter.toJsonObject())),g.tmpEqFilterEnd.controlPointCount>Math.floor((h-1)/2)&&(h%2?g.tmpEqFilterEnd.controlPoints[Math.floor((h-1)/2)].freq=n.expression+n.expressionDelta:g.tmpEqFilterEnd.controlPoints[Math.floor((h-1)/2)].gain=n.expression+n.expressionDelta)}}}}else if(u==t.modulators.dictionary["pre eq"].index){let y=e.song.channels[s.modChannels[r][o]].instruments[v[o]];if(!y.noteFilterType){let d=s.modFilterTypes[r]|0;if(d==0){let g=0,h=e.getTicksIntoBar()/t.ticksPerPart;for(;n.note.start+n.note.pins[g].time<=h;)g++;let m=(h-n.note.start+i/(e.getSamplesPerTick()*t.ticksPerPart)*t.ticksPerPart-n.note.pins[g-1].time)/(n.note.pins[g].time-n.note.pins[g-1].time);y.noteSubFilters[n.note.pins[g-1].size]!=null||y.noteSubFilters[n.note.pins[g].size]!=null?y.tmpNoteFilterEnd=Ee.lerpFilters(y.noteSubFilters[n.note.pins[g-1].size],y.noteSubFilters[n.note.pins[g].size],m):y.tmpNoteFilterEnd=y.noteFilter}else{for(let g=0;g<t.filterMorphCount;g++)y.tmpNoteFilterEnd==y.noteSubFilters[g]&&y.tmpNoteFilterEnd!=null&&(y.tmpNoteFilterEnd=new Ee,y.tmpNoteFilterEnd.fromJsonObject(y.noteSubFilters[g].toJsonObject()));y.tmpNoteFilterEnd==null&&(y.tmpNoteFilterEnd=new Ee,y.tmpNoteFilterEnd.fromJsonObject(y.noteFilter.toJsonObject())),y.tmpNoteFilterEnd.controlPointCount>Math.floor((d-1)/2)&&(d%2?y.tmpNoteFilterEnd.controlPoints[Math.floor((d-1)/2)].freq=n.expression+n.expressionDelta:y.tmpNoteFilterEnd.controlPoints[Math.floor((d-1)/2)].gain=n.expression+n.expressionDelta)}}}else if(u==t.modulators.dictionary["individual envelope speed"].index){let y=e.song.channels[s.modChannels[r][o]].instruments[v[o]],d=s.modEnvelopeNumbers[r],g=n.expression+n.expressionDelta;y.envelopeCount>d&&(Number.isInteger(g)?y.envelopes[d].tempEnvelopeSpeed=t.perEnvelopeSpeedIndices[g]:(g=(1-g%1)*t.perEnvelopeSpeedIndices[Math.floor(g)]+g%1*t.perEnvelopeSpeedIndices[Math.ceil(g)],y.envelopes[d].tempEnvelopeSpeed=g))}else if(u==t.modulators.dictionary["individual envelope lower bound"].index){let y=e.song.channels[s.modChannels[r][o]].instruments[v[o]],d=s.modEnvelopeNumbers[r],g=n.expression+n.expressionDelta;y.envelopeCount>d&&(y.envelopes[d].tempEnvelopeLowerBound=g/10)}else if(u==t.modulators.dictionary["individual envelope upper bound"].index){let y=e.song.channels[s.modChannels[r][o]].instruments[v[o]],d=s.modEnvelopeNumbers[r],g=n.expression+n.expressionDelta;y.envelopeCount>d&&(y.envelopes[d].tempEnvelopeUpperBound=g/10),console.log(y.envelopes[d])}}}static findRandomZeroCrossing(e,a){let i=Math.random()*a,n=a-1,s=i&n,r=e[s],u=16;for(let c=128;c>0;c--){let v=s+u&n,o=e[v];if(r*o<=0){for(let y=0;y<u;y++){let d=s+1&n,g=e[d];if(r*g<=0){let h=g-r;i=s,Math.abs(h)>1e-8&&(i+=-r/h),i=Math.max(0,i)%a;break}else s=d,r=g}break}else s=v,r=o}return i}static instrumentVolumeToVolumeMult(e){return e==-t.volumeRange/2?0:Math.pow(2,t.volumeLogScale*e)}static volumeMultToInstrumentVolume(e){return e<=0?-t.volumeRange/2:Math.min(t.volumeRange,Math.log(e)/Math.LN2/t.volumeLogScale)}static noteSizeToVolumeMult(e){return Math.pow(Math.max(0,e)/t.noteSizeMax,1.5)}static volumeMultToNoteSize(e){return Math.pow(Math.max(0,e),1/1.5)*t.noteSizeMax}static getOperatorWave(e,a){return e!=2?t.operatorWaves[e]:t.pwmOperatorWaves[a]}getSamplesPerTick(){if(this.song==null)return 0;let e=this.song.getBeatsPerMinute();return this.isModActive(t.modulators.dictionary.tempo.index)&&(e=this.getModValue(t.modulators.dictionary.tempo.index)),this.getSamplesPerTickSpecificBPM(e)}getSamplesPerTickSpecificBPM(e){let a=e/60,i=t.partsPerBeat*a,n=t.ticksPerPart*i;return this.samplesPerSecond/n}sanitizeFilters(e){let a=!1;for(let i of e){let n=Math.abs(i.output1),s=Math.abs(i.output2);if(!(n<100)||!(s<100)){a=!0;break}n<ct&&(i.output1=0),s<ct&&(i.output2=0)}if(a)for(let i of e)i.output1=0,i.output2=0}static sanitizeDelayLine(e,a,i){for(;;){a--;let n=a&i,s=Math.abs(e[n]);if(Number.isFinite(s)&&(s==0||s>=ct))break;e[n]=0}}static applyFilters(e,a,i,n,s){for(let r=0;r<n;r++){let u=s[r],c=u.output1,v=u.output2,o=u.a1,y=u.a2,d=u.b0,g=u.b1,h=u.b2;e=d*e+g*a+h*i-o*c-y*v,u.a1=o+u.a1Delta,u.a2=y+u.a2Delta,u.useMultiplicativeInputCoefficients?(u.b0=d*u.b0Delta,u.b1=g*u.b1Delta,u.b2=h*u.b2Delta):(u.b0=d+u.b0Delta,u.b1=g+u.b1Delta,u.b2=h+u.b2Delta),u.output2=c,u.output1=e,i=v,a=c}return e}computeTicksSinceStart(e=!1){let a=this.song?.beatsPerBar?this.song?.beatsPerBar:8;return e?t.ticksPerPart*t.partsPerBeat*a*this.bar:this.tick+t.ticksPerPart*(this.part+t.partsPerBeat*(this.beat+a*this.bar))}};return On(Kn);})();
/*!
Copyright (c) 2012-2022 John Nesky and contributing authors

Permission is hereby granted, free of charge, to any person obtaining a copy of 
this software and associated documentation files (the "Software"), to deal in 
the Software without restriction, including without limitation the rights to 
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies 
of the Software, and to permit persons to whom the Software is furnished to do 
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all 
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE 
SOFTWARE.
*/
//# sourceMappingURL=beepbox_synth.min.js.map
