var beepbox=(()=>{var Bn=Object.defineProperty;var fo=Object.getOwnPropertyDescriptor;var mo=Object.getOwnPropertyNames;var yo=Object.prototype.hasOwnProperty;var go=(o,e)=>{for(var i in e)Bn(o,i,{get:e[i],enumerable:!0})},vo=(o,e,i,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of mo(e))!yo.call(o,a)&&a!==i&&Bn(o,a,{get:()=>e[a],enumerable:!(n=fo(e,a))||n.enumerable});return o};var bo=o=>vo(Bn({},"__esModule",{value:!0}),o);var ts={};go(ts,{Channel:()=>ft,Config:()=>t,EnvelopeType:()=>rt,Instrument:()=>Ne,InstrumentType:()=>ht,Note:()=>lt,Pattern:()=>at,Synth:()=>pe});var Nn=function(o){var e=typeof Symbol=="function"&&Symbol.iterator,i=e&&o[e],n=0;if(i)return i.call(o);if(o&&typeof o.length=="number")return{next:function(){return o&&n>=o.length&&(o=void 0),{value:o&&o[n++],done:!o}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")},So=function(o,e){var i=typeof Symbol=="function"&&o[Symbol.iterator];if(!i)return o;var n=i.call(o),a,s=[],r;try{for(;(e===void 0||e-- >0)&&!(a=n.next()).done;)s.push(a.value)}catch(c){r={error:c}}finally{try{a&&!a.done&&(i=n.return)&&i.call(n)}finally{if(r)throw r.error}}return s},Ca=function(){for(var o=[],e=0;e<arguments.length;e++)o=o.concat(So(arguments[e]));return o};function kt(o,e){var i,n,a,s,r,c;try{for(var d=Nn(e),y=d.next();!y.done;y=d.next()){var l=y.value;if(l instanceof Node)o.appendChild(l);else if(typeof l=="string")o.appendChild(document.createTextNode(l));else if(typeof l=="function")kt(o,[l()]);else if(Array.isArray(l))kt(o,l);else if(l&&typeof Symbol<"u"&&typeof l[Symbol.iterator]=="function")kt(o,Ca(l));else if(l&&l.constructor===Object&&o instanceof Element)try{for(var v=(a=void 0,Nn(Object.keys(l))),h=v.next();!h.done;h=v.next()){var g=h.value,f=l[g];if(g==="class")typeof f=="string"?o.setAttribute("class",f):Array.isArray(l)||f&&typeof Symbol<"u"&&typeof f[Symbol.iterator]=="function"?o.setAttribute("class",Ca(f).join(" ")):console.warn("Invalid "+g+' value "'+f+'" on '+o.tagName+" element.");else if(g==="style")if(f&&f.constructor===Object)try{for(var m=(r=void 0,Nn(Object.keys(f))),p=m.next();!p.done;p=m.next()){var S=p.value;S in o.style?o.style[S]=f[S]:o.style.setProperty(S,f[S])}}catch(x){r={error:x}}finally{try{p&&!p.done&&(c=m.return)&&c.call(m)}finally{if(r)throw r.error}}else o.setAttribute(g,f);else typeof f=="function"?o[g]=f:typeof f=="boolean"?f?o.setAttribute(g,""):o.removeAttribute(g):o.setAttribute(g,f)}}catch(x){a={error:x}}finally{try{h&&!h.done&&(s=v.return)&&s.call(v)}finally{if(a)throw a.error}}else o.appendChild(document.createTextNode(l))}}catch(x){i={error:x}}finally{try{y&&!y.done&&(n=d.return)&&n.call(d)}finally{if(i)throw i.error}}return o}var zn="http://www.w3.org/2000/svg";function Ia(){for(var o=[],e=0;e<arguments.length;e++)o[e]=arguments[e];return document.createRange().createContextualFragment(o.join())}function wa(){for(var o=[],e=0;e<arguments.length;e++)o[e]=arguments[e];for(var i=document.createDocumentFragment(),n=new DOMParser().parseFromString('<svg xmlns="http://www.w3.org/2000/svg">'+o.join()+"</svg>","image/svg+xml").documentElement;n.firstChild!==null;)document.importNode(n.firstChild,!0),i.appendChild(n.firstChild);return i}var Da=function(o){var e=typeof Symbol=="function"&&Symbol.iterator,i=e&&o[e],n=0;if(i)return i.call(o);if(o&&typeof o.length=="number")return{next:function(){return o&&n>=o.length&&(o=void 0),{value:o&&o[n++],done:!o}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")},Wn,ka,On,Pa;var Ot=Ia,_e=wa,xo=function(o){Ot[o]=function(){for(var e=[],i=0;i<arguments.length;i++)e[i]=arguments[i];return kt(document.createElement(o),e)}};try{for(_t=Da("a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr".split(" ")),zt=_t.next();!zt.done;zt=_t.next())Ea=zt.value,xo(Ea)}catch(o){Wn={error:o}}finally{try{zt&&!zt.done&&(ka=_t.return)&&ka.call(_t)}finally{if(Wn)throw Wn.error}}var Ea,_t,zt,Fo=function(o){if(_e[o]=function(){for(var i=[],n=0;n<arguments.length;n++)i[n]=arguments[n];return kt(document.createElementNS(zn,o),i)},/-/.test(o)){var e=o.replace(/-/g,"_");_e[e]=function(){for(var i=[],n=0;n<arguments.length;n++)i[n]=arguments[n];return kt(document.createElementNS(zn,o),i)}}};try{for(Qt=Da("a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern".split(" ")),Wt=Qt.next();!Wt.done;Wt=Qt.next())Ma=Wt.value,Fo(Ma)}catch(o){On={error:o}}finally{try{Wt&&!Wt.done&&(Pa=Qt.return)&&Pa.call(Qt)}finally{if(On)throw On.error}}var Ma,Qt,Wt;var Ta="DragonBox";function Aa(o,e){window.localStorage.setItem(`${Ta}_${o}`,e)}function Vt(o){return window.localStorage.getItem(`${Ta}_${o}`)}var rt=(p=>(p[p.none=0]="none",p[p.noteSize=1]="noteSize",p[p.pitch=2]="pitch",p[p.pseudorandom=3]="pseudorandom",p[p.punch=4]="punch",p[p.flare=5]="flare",p[p.twang=6]="twang",p[p.swell=7]="swell",p[p.lfo=8]="lfo",p[p.tremolo2=9]="tremolo2",p[p.decay=10]="decay",p[p.wibble=11]="wibble",p[p.linear=12]="linear",p[p.rise=13]="rise",p[p.blip=14]="blip",p[p.fall=15]="fall",p))(rt||{}),ht=(g=>(g[g.chip=0]="chip",g[g.fm=1]="fm",g[g.noise=2]="noise",g[g.spectrum=3]="spectrum",g[g.drumset=4]="drumset",g[g.harmonics=5]="harmonics",g[g.pwm=6]="pwm",g[g.pickedString=7]="pickedString",g[g.supersaw=8]="supersaw",g[g.customChipWave=9]="customChipWave",g[g.mod=10]="mod",g[g.fm6op=11]="fm6op",g[g.length=12]="length",g))(ht||{}),Qe=["chip","FM","noise","spectrum","drumset","harmonics","pulse width","picked string","supersaw","chip (custom)","mod","FM (6-op)"];var Vn=class{statusTable;urlTable;totalSamples;samplesLoaded;constructor(){this.statusTable={},this.urlTable={},this.totalSamples=0,this.samplesLoaded=0}},be=new Vn,ot=class extends Event{totalSamples;samplesLoaded;constructor(e,i){super("sampleloaded"),this.totalSamples=e,this.samplesLoaded=i}},Hn=class extends EventTarget{constructor(){super()}},Et=new Hn;async function La(o,e,i,n,a){let s=new AudioContext({sampleRate:a}),r=!1,c=t.chipWaves[e],d=t.rawChipWaves[e],y=t.rawRawChipWaves[e];fetch(o).then(l=>l.ok?l.arrayBuffer():(be.statusTable[e]=2,Promise.reject(new Error("Couldn't load sample")))).then(l=>s.decodeAudioData(l)).then(l=>{let v=J(Array.from(l.getChannelData(0)));var h=v;l.numberOfChannels>1?h=J(Array.from(l.getChannelData(1))):h=v;let g=Mt(v),f=Mt(h);c.samples=g,c.samplesR=f,d.samples=v,d.samplesR=h,y.samples=v,y.samplesR=h,n.isUsingAdvancedLoopControls&&(i.chipWaveLoopStart=n.chipWaveLoopStart!=null?n.chipWaveLoopStart:0,i.chipWaveLoopEnd=n.chipWaveLoopEnd!=null?n.chipWaveLoopEnd:v.length-1,i.chipWaveLoopMode=n.chipWaveLoopMode!=null?n.chipWaveLoopMode:0,i.chipWavePlayBackwards=n.chipWavePlayBackwards,i.chipWaveStartOffset=n.chipWaveStartOffset!=null?n.chipWaveStartOffset:0),be.samplesLoaded++,be.statusTable[e]=1,Et.dispatchEvent(new ot(be.totalSamples,be.samplesLoaded)),r||(r=!0,s.close())}).catch(l=>{be.statusTable[e]=2,alert("Failed to load "+o+`:
`+l),r||(r=!0,s.close())})}function ut(o){return new Promise((i,n)=>{if(!t.willReloadForCustomSamples){let a=document.createElement("script");a.src=o,document.head.appendChild(a),a.addEventListener("load",s=>{i()})}})}function tt(o){let i=t.chipWaves[0].samples,n=t.rawRawChipWaves[0].samples;if(o==0){let a=[{name:"paandorasbox kick",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox snare",expression:3,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox piano1",expression:3,isSampled:!0,isPercussion:!1,extraSampleDetune:2},{name:"paandorasbox WOW",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"paandorasbox overdrive",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-2},{name:"paandorasbox trumpet",expression:3,isSampled:!0,isPercussion:!1,extraSampleDetune:1.2},{name:"paandorasbox saxophone",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-5},{name:"paandorasbox orchestrahit",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:4.2},{name:"paandorasbox detatched violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:4.2},{name:"paandorasbox synth",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-.8},{name:"paandorasbox sonic3snare",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox come on",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"paandorasbox choir",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-3},{name:"paandorasbox overdriveguitar",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-6.2},{name:"paandorasbox flute",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-6},{name:"paandorasbox legato violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-28},{name:"paandorasbox tremolo violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-33},{name:"paandorasbox amen break",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-55},{name:"paandorasbox pizzicato violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-11},{name:"paandorasbox tim allen grunt",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-20},{name:"paandorasbox tuba",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:44},{name:"paandorasbox loopingcymbal",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-17},{name:"paandorasbox standardkick",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-7},{name:"paandorasbox standardsnare",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox closedhihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:5},{name:"paandorasbox foothihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:4},{name:"paandorasbox openhihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-31},{name:"paandorasbox crashcymbal",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-43},{name:"paandorasbox pianoC4",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-42.5},{name:"paandorasbox liver pad",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-22.5},{name:"paandorasbox marimba",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-15.5},{name:"paandorasbox susdotwav",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-24.5},{name:"paandorasbox wackyboxtts",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-17.5},{name:"paandorasbox peppersteak_1",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-42.2},{name:"paandorasbox peppersteak_2",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-47},{name:"paandorasbox vinyl_noise",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-50},{name:"paandorasbeta slap bass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-56},{name:"paandorasbeta HD EB overdrive guitar",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-60},{name:"paandorasbeta sunsoft bass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-18.5},{name:"paandorasbeta masculine choir",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-50},{name:"paandorasbeta feminine choir",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-60.5},{name:"paandorasbeta tololoche",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-29.5},{name:"paandorasbeta harp",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-54},{name:"paandorasbeta pan flute",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-58},{name:"paandorasbeta krumhorn",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-46},{name:"paandorasbeta timpani",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-50},{name:"paandorasbeta crowd hey",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-29},{name:"paandorasbeta wario land 4 brass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-68},{name:"paandorasbeta wario land 4 rock organ",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-63},{name:"paandorasbeta wario land 4 DAOW",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-35},{name:"paandorasbeta wario land 4 hour chime",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-47.5},{name:"paandorasbeta wario land 4 tick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-12.5},{name:"paandorasbeta kirby kick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby snare",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby bongo",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby click",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta sonor kick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28.5},{name:"paandorasbeta sonor snare",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28.5},{name:"paandorasbeta sonor snare (left hand)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-22.5},{name:"paandorasbeta sonor snare (right hand)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-22.5},{name:"paandorasbeta sonor high tom",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-41.5},{name:"paandorasbeta sonor low tom",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-41.5},{name:"paandorasbeta sonor hihat (closed)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-17},{name:"paandorasbeta sonor hihat (half opened)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-21},{name:"paandorasbeta sonor hihat (open)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-54.5},{name:"paandorasbeta sonor hihat (open tip)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-43.5},{name:"paandorasbeta sonor hihat (pedal)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28},{name:"paandorasbeta sonor crash",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-51},{name:"paandorasbeta sonor crash (tip)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-50.5},{name:"paandorasbeta sonor ride",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46}];be.totalSamples+=a.length;let s=t.rawRawChipWaves.length;for(let r of a){let c=t.rawRawChipWaves.length,d={index:c,name:r.name,expression:r.expression,isSampled:r.isSampled,isPercussion:r.isPercussion,extraSampleDetune:r.extraSampleDetune,samples:n},y={index:c,name:r.name,expression:r.expression,isSampled:r.isSampled,isPercussion:r.isPercussion,extraSampleDetune:r.extraSampleDetune,samples:n},l={index:c,name:r.name,expression:r.expression,isSampled:r.isSampled,isPercussion:r.isPercussion,extraSampleDetune:r.extraSampleDetune,samples:i};t.rawRawChipWaves[c]=y,t.rawRawChipWaves.dictionary[r.name]=y,t.rawChipWaves[c]=d,t.rawChipWaves.dictionary[r.name]=d,t.chipWaves[c]=l,t.chipWaves.dictionary[r.name]=d,be.statusTable[c]=0,be.urlTable[c]="legacySamples"}ut("samples.js").then(()=>ut("samples2.js")).then(()=>ut("samples3.js")).then(()=>ut("drumsamples.js")).then(()=>ut("wario_samples.js")).then(()=>ut("kirby_samples.js")).then(()=>{let r=[J(kicksample),J(snaresample),J(pianosample),J(WOWsample),J(overdrivesample),J(trumpetsample),J(saxophonesample),J(orchhitsample),J(detatchedviolinsample),J(synthsample),J(sonic3snaresample),J(comeonsample),J(choirsample),J(overdrivensample),J(flutesample),J(legatoviolinsample),J(tremoloviolinsample),J(amenbreaksample),J(pizzicatoviolinsample),J(timallengruntsample),J(tubasample),J(loopingcymbalsample),J(kickdrumsample),J(snaredrumsample),J(closedhihatsample),J(foothihatsample),J(openhihatsample),J(crashsample),J(pianoC4sample),J(liverpadsample),J(marimbasample),J(susdotwavsample),J(wackyboxttssample),J(peppersteak1),J(peppersteak2),J(vinyl),J(slapbass),J(hdeboverdrive),J(sunsoftbass),J(masculinechoir),J(femininechoir),J(southtololoche),J(harp),J(panflute),J(krumhorn),J(timpani),J(crowdhey),J(warioland4brass),J(warioland4organ),J(warioland4daow),J(warioland4hourchime),J(warioland4tick),J(kirbykick),J(kirbysnare),J(kirbybongo),J(kirbyclick),J(funkkick),J(funksnare),J(funksnareleft),J(funksnareright),J(funktomhigh),J(funktomlow),J(funkhihatclosed),J(funkhihathalfopen),J(funkhihatopen),J(funkhihatopentip),J(funkhihatfoot),J(funkcrash),J(funkcrashtip),J(funkride)],c=0;for(let d of r){let y=s+c;t.rawChipWaves[y].samples=d,t.rawRawChipWaves[y].samples=d,t.chipWaves[y].samples=Mt(d),be.statusTable[y]=1,be.samplesLoaded++,Et.dispatchEvent(new ot(be.totalSamples,be.samplesLoaded)),c++}})}else if(o==1){let a=[{name:"chronoperc1final",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"synthkickfm",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"mcwoodclick1",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"acoustic snare",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0}];be.totalSamples+=a.length;let s=t.rawRawChipWaves.length;for(let r of a){let c=t.rawRawChipWaves.length,d={index:c,name:r.name,expression:r.expression,isSampled:r.isSampled,isPercussion:r.isPercussion,extraSampleDetune:r.extraSampleDetune,samples:n},y={index:c,name:r.name,expression:r.expression,isSampled:r.isSampled,isPercussion:r.isPercussion,extraSampleDetune:r.extraSampleDetune,samples:n},l={index:c,name:r.name,expression:r.expression,isSampled:r.isSampled,isPercussion:r.isPercussion,extraSampleDetune:r.extraSampleDetune,samples:i};t.rawRawChipWaves[c]=y,t.rawRawChipWaves.dictionary[r.name]=y,t.rawChipWaves[c]=d,t.rawChipWaves.dictionary[r.name]=d,t.chipWaves[c]=l,t.chipWaves.dictionary[r.name]=d,be.statusTable[c]=0,be.urlTable[c]="nintariboxSamples"}ut("nintaribox_samples.js").then(()=>{let r=[J(chronoperc1finalsample),J(synthkickfmsample),J(woodclicksample),J(acousticsnaresample)],c=0;for(let d of r){let y=s+c;t.rawChipWaves[y].samples=d,t.rawRawChipWaves[y].samples=d,t.chipWaves[y].samples=Mt(d),be.statusTable[y]=1,be.samplesLoaded++,Et.dispatchEvent(new ot(be.totalSamples,be.samplesLoaded)),c++}})}else if(o==2){let a=[{name:"cat",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-3},{name:"gameboy",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:7},{name:"mario",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"drum",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:4},{name:"yoshi",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-16},{name:"star",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-16},{name:"fire flower",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-1},{name:"dog",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-1},{name:"oink",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:3},{name:"swan",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:1},{name:"face",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-12}];be.totalSamples+=a.length;let s=t.rawRawChipWaves.length;for(let r of a){let c=t.rawRawChipWaves.length,d={index:c,name:r.name,expression:r.expression,isSampled:r.isSampled,isPercussion:r.isPercussion,extraSampleDetune:r.extraSampleDetune,samples:n},y={index:c,name:r.name,expression:r.expression,isSampled:r.isSampled,isPercussion:r.isPercussion,extraSampleDetune:r.extraSampleDetune,samples:n},l={index:c,name:r.name,expression:r.expression,isSampled:r.isSampled,isPercussion:r.isPercussion,extraSampleDetune:r.extraSampleDetune,samples:i};t.rawRawChipWaves[c]=y,t.rawRawChipWaves.dictionary[r.name]=y,t.rawChipWaves[c]=d,t.rawChipWaves.dictionary[r.name]=d,t.chipWaves[c]=l,t.chipWaves.dictionary[r.name]=d,be.statusTable[c]=0,be.urlTable[c]="marioPaintboxSamples"}ut("mario_paintbox_samples.js").then(()=>{let r=[J(catpaintboxsample),J(gameboypaintboxsample),J(mariopaintboxsample),J(drumpaintboxsample),J(yoshipaintboxsample),J(starpaintboxsample),J(fireflowerpaintboxsample),J(dogpaintbox),J(oinkpaintbox),J(swanpaintboxsample),J(facepaintboxsample)],c=0;for(let d of r){let y=s+c;t.rawChipWaves[y].samples=d,t.rawRawChipWaves[y].samples=d,t.chipWaves[y].samples=Mt(d),be.statusTable[y]=1,be.samplesLoaded++,Et.dispatchEvent(new ot(be.totalSamples,be.samplesLoaded)),c++}})}else console.log("invalid set of built-in samples")}var t=class o{static thresholdVal=-10;static kneeVal=40;static ratioVal=12;static attackVal=0;static releaseVal=.25;static willReloadForCustomSamples=!1;static jsonFormat="DragonBox";static scales=fe([{name:"Free",realName:"chromatic",flags:[!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0]},{name:"Major",realName:"ionian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0]},{name:"Minor",realName:"aeolian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Mixolydian",realName:"mixolydian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!0,!1]},{name:"Lydian",realName:"lydian",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0]},{name:"Dorian",realName:"dorian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!0,!1]},{name:"Phrygian",realName:"phrygian",flags:[!0,!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Locrian",realName:"locrian",flags:[!0,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1]},{name:"Lydian Dominant",realName:"lydian dominant",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!0,!1]},{name:"Phrygian Dominant",realName:"phrygian dominant",flags:[!0,!0,!1,!1,!0,!0,!1,!0,!0,!1,!0,!1]},{name:"Harmonic Major",realName:"harmonic major",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!0,!1,!1,!0]},{name:"Harmonic Minor",realName:"harmonic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0]},{name:"Melodic Minor",realName:"melodic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1,!0]},{name:"Blues Major",realName:"blues major",flags:[!0,!1,!0,!0,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"Blues",realName:"blues",flags:[!0,!1,!1,!0,!1,!0,!0,!0,!1,!1,!0,!1]},{name:"Altered",realName:"altered",flags:[!0,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Major Pentatonic",realName:"major pentatonic",flags:[!0,!1,!0,!1,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"Minor Pentatonic",realName:"minor pentatonic",flags:[!0,!1,!1,!0,!1,!0,!1,!0,!1,!1,!0,!1]},{name:"Whole Tone",realName:"whole tone",flags:[!0,!1,!0,!1,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Octatonic",realName:"octatonic",flags:[!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!1,!0]},{name:"Hexatonic",realName:"hexatonic",flags:[!0,!1,!1,!0,!0,!1,!1,!0,!0,!1,!1,!0]},{name:"No Dabbing (MB)",realName:"no dabbing",flags:[!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!1]},{name:"Jacked Toad (TB)",realName:"jacked toad",flags:[!0,!1,!0,!0,!1,!0,!0,!0,!0,!1,!0,!0]},{name:"Test Scale (TB)",realName:"**t",flags:[!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!1]},{name:"Custom",realName:"custom",flags:[!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0]}]);static keys=fe([{name:"C",isWhiteKey:!0,basePitch:12},{name:"C\u266F",isWhiteKey:!1,basePitch:13},{name:"D",isWhiteKey:!0,basePitch:14},{name:"D\u266F",isWhiteKey:!1,basePitch:15},{name:"E",isWhiteKey:!0,basePitch:16},{name:"F",isWhiteKey:!0,basePitch:17},{name:"F\u266F",isWhiteKey:!1,basePitch:18},{name:"G",isWhiteKey:!0,basePitch:19},{name:"G\u266F",isWhiteKey:!1,basePitch:20},{name:"A",isWhiteKey:!0,basePitch:21},{name:"A\u266F",isWhiteKey:!1,basePitch:22},{name:"B",isWhiteKey:!0,basePitch:23}]);static blackKeyNameParents=[-1,1,-1,1,-1,1,-1,-1,1,-1,1,-1];static tempoMin=1;static tempoMax=2e3;static octaveMin=-2;static octaveMax=2;static echoDelayRange=24;static echoDelayStepTicks=4;static echoSustainRange=24;static echoShelfHz=4e3;static echoShelfGain=Math.pow(2,-.5);static reverbShelfHz=8e3;static reverbShelfGain=Math.pow(2,-1.5);static reverbRange=32;static reverbDelayBufferSize=16384;static reverbDelayBufferMask=o.reverbDelayBufferSize-1;static beatsPerBarMin=1;static beatsPerBarMax=64;static barCountMin=1;static barCountMax=1024;static instrumentCountMin=1;static layeredInstrumentCountMax=10;static patternInstrumentCountMax=10;static partsPerBeat=24;static ticksPerPart=2;static ticksPerArpeggio=3;static arpeggioPatterns=[[0],[0,1],[0,1,2,1],[0,1,2,3],[0,1,2,3,4],[0,1,2,3,4,5],[0,1,2,3,4,5,6],[0,1,2,3,4,5,6,7]];static rhythms=fe([{name:"\xF73 (triplets)",stepsPerBeat:3,roundUpThresholds:[5,12,18]},{name:"\xF74 (standard)",stepsPerBeat:4,roundUpThresholds:[3,9,17,21]},{name:"\xF76",stepsPerBeat:6,roundUpThresholds:null},{name:"\xF78",stepsPerBeat:8,roundUpThresholds:null},{name:"\xF712",stepsPerBeat:12,roundUpThresholds:null},{name:"freehand",stepsPerBeat:24,roundUpThresholds:null}]);static instrumentTypeNames=["chip","FM","noise","spectrum","drumset","harmonics","PWM","Picked String","supersaw","custom chip","mod","FM6op"];static instrumentTypeHasSpecialInterval=[!0,!0,!1,!1,!1,!0,!1,!1,!1,!1,!1];static chipBaseExpression=.03375;static fmBaseExpression=.03;static noiseBaseExpression=.19;static spectrumBaseExpression=.3;static drumsetBaseExpression=.45;static harmonicsBaseExpression=.025;static pwmBaseExpression=.04725;static supersawBaseExpression=.061425;static pickedStringBaseExpression=.025;static distortionBaseVolume=.011;static bitcrusherBaseVolume=.01;static granularOutputLoudnessCompensation=.5;static rawChipWaves=fe([{name:"rounded",expression:.94,samples:J([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0,-.2,-.4,-.5,-.6,-.7,-.8,-.85,-.9,-.95,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-.95,-.9,-.85,-.8,-.7,-.6,-.5,-.4,-.2])},{name:"triangle",expression:1,samples:J([1/15,3/15,5/15,7/15,9/15,11/15,13/15,15/15,15/15,13/15,11/15,9/15,7/15,5/15,3/15,1/15,-1/15,-3/15,-5/15,-7/15,-9/15,-11/15,-13/15,-15/15,-15/15,-13/15,-11/15,-9/15,-7/15,-5/15,-3/15,-1/15])},{name:"square",expression:.5,samples:J([1,-1])},{name:"1/4 pulse",expression:.5,samples:J([1,-1,-1,-1])},{name:"1/8 pulse",expression:.5,samples:J([1,-1,-1,-1,-1,-1,-1,-1])},{name:"sawtooth",expression:.65,samples:J([1/31,3/31,5/31,7/31,9/31,11/31,13/31,15/31,17/31,19/31,21/31,23/31,25/31,27/31,29/31,31/31,-31/31,-29/31,-27/31,-25/31,-23/31,-21/31,-19/31,-17/31,-15/31,-13/31,-11/31,-9/31,-7/31,-5/31,-3/31,-1/31])},{name:"double saw",expression:.5,samples:J([0,-.2,-.4,-.6,-.8,-1,1,-.8,-.6,-.4,-.2,1,.8,.6,.4,.2])},{name:"double pulse",expression:.4,samples:J([1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,-1,-1])},{name:"spiky",expression:.4,samples:J([1,-1,1,-1,1,0])},{name:"sine",expression:.88,samples:ne([8,9,11,12,13,14,15,15,15,15,14,14,13,11,10,9,7,6,4,3,2,1,0,0,0,0,1,1,2,4,5,6])},{name:"flute",expression:.8,samples:ne([3,4,6,8,10,11,13,14,15,15,14,13,11,8,5,3])},{name:"harp",expression:.8,samples:ne([0,3,3,3,4,5,5,6,7,8,9,11,11,13,13,15,15,14,12,11,10,9,8,7,7,5,4,3,2,1,0,0])},{name:"sharp clarinet",expression:.38,samples:ne([0,0,0,1,1,8,8,9,9,9,8,8,8,8,8,9,9,7,9,9,10,4,0,0,0,0,0,0,0,0,0,0])},{name:"soft clarinet",expression:.45,samples:ne([0,1,5,8,9,9,9,9,9,9,9,11,11,12,13,12,10,9,7,6,4,3,3,3,1,1,1,1,1,1,1,1])},{name:"alto sax",expression:.3,samples:ne([5,5,6,4,3,6,8,7,2,1,5,6,5,4,5,7,9,11,13,14,14,14,14,13,10,8,7,7,4,3,4,2])},{name:"bassoon",expression:.35,samples:ne([9,9,7,6,5,4,4,4,4,5,7,8,9,10,11,13,13,11,10,9,7,6,4,2,1,1,1,2,2,5,11,14])},{name:"trumpet",expression:.22,samples:ne([10,11,8,6,5,5,5,6,7,7,7,7,6,6,7,7,7,7,7,6,6,6,6,6,6,6,6,7,8,9,11,14])},{name:"electric guitar",expression:.2,samples:ne([11,12,12,10,6,6,8,0,2,4,8,10,9,10,1,7,11,3,6,6,8,13,14,2,0,12,8,4,13,11,10,13])},{name:"organ",expression:.2,samples:ne([11,10,12,11,14,7,5,5,12,10,10,9,12,6,4,5,13,12,12,10,12,5,2,2,8,6,6,5,8,3,2,1])},{name:"pan flute",expression:.35,samples:ne([1,4,7,6,7,9,7,7,11,12,13,15,13,11,11,12,13,10,7,5,3,6,10,7,3,3,1,0,1,0,1,0])},{name:"glitch",expression:.5,samples:J([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1])},{name:"trapezoid",expression:1,samples:J([1/15,6/15,10/15,14/15,15/15,15/15,15/15,15/15,15/15,15/15,15/15,15/15,14/15,10/15,6/15,1/15,-1/15,-6/15,-10/15,-14/15,-15/15,-15/15,-15/15,-15/15,-15/15,-15/15,-15/15,-15/15,-14/15,-10/15,-6/15,-1/15])},{name:"modbox 10% pulse",expression:.5,samples:ne([1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"modbox sunsoft bass",expression:1,samples:ne([0,.1875,.3125,.5625,.5,.75,.875,1,1,.6875,.5,.625,.625,.5,.375,.5625,.4375,.5625,.4375,.4375,.3125,.1875,.1875,.375,.5625,.5625,.5625,.5625,.5625,.4375,.25,0])},{name:"modbox loud pulse",expression:.5,samples:ne([1,.7,.1,.1,0,0,0,0,0,.1,.2,.15,.25,.125,.215,.345,4])},{name:"modbox sax",expression:.5,samples:ne([1/15,3/15,5/15,9,.06])},{name:"modbox guitar",expression:.5,samples:ne([-.5,3.5,3,-.5,-.25,-1])},{name:"modbox sine",expression:.5,samples:ne([0,.05,.125,.2,.25,.3,.425,.475,.525,.625,.675,.725,.775,.8,.825,.875,.9,.925,.95,.975,.98,.99,.995,1,.995,.99,.98,.975,.95,.925,.9,.875,.825,.8,.775,.725,.675,.625,.525,.475,.425,.3,.25,.2,.125,.05,0,-.05,-.125,-.2,-.25,-.3,-.425,-.475,-.525,-.625,-.675,-.725,-.775,-.8,-.825,-.875,-.9,-.925,-.95,-.975,-.98,-.99,-.995,-1,-.995,-.99,-.98,-.975,-.95,-.925,-.9,-.875,-.825,-.8,-.775,-.725,-.675,-.625,-.525,-.475,-.425,-.3,-.25,-.2,-.125,-.05])},{name:"modbox atari bass",expression:.5,samples:ne([1,1,1,1,0,1,0,1,1,0,0,1,0,0,0])},{name:"modbox atari pulse",expression:.5,samples:ne([1,0,1,1,1,1,1,1,1,1,1,1,1,1,1])},{name:"modbox 1% pulse",expression:.5,samples:ne([1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"modbox curved sawtooth",expression:.5,samples:ne([1,1/2,1/3,1/4])},{name:"modbox viola",expression:.45,samples:ne([-.9,-1,-.85,-.775,-.7,-.6,-.5,-.4,-.325,-.225,-.2,-.125,-.1,-.11,-.125,-.15,-.175,-.18,-.2,-.21,-.22,-.21,-.2,-.175,-.15,-.1,-.5,.75,.11,.175,.2,.25,.26,.275,.26,.25,.225,.2,.19,.18,.19,.2,.21,.22,.23,.24,.25,.26,.275,.28,.29,.3,.29,.28,.27,.26,.25,.225,.2,.175,.15,.1,.075,0,-.01,-.025,.025,.075,.2,.3,.475,.6,.75,.85,.85,1,.99,.95,.8,.675,.475,.275,.01,-.15,-.3,-.475,-.5,-.6,-.71,-.81,-.9,-1,-.9])},{name:"modbox brass",expression:.45,samples:ne([-1,-.95,-.975,-.9,-.85,-.8,-.775,-.65,-.6,-.5,-.475,-.35,-.275,-.2,-.125,-.05,0,.075,.125,.15,.2,.21,.225,.25,.225,.21,.2,.19,.175,.125,.1,.075,.06,.05,.04,.025,.04,.05,.1,.15,.225,.325,.425,.575,.7,.85,.95,1,.9,.675,.375,.2,.275,.4,.5,.55,.6,.625,.65,.65,.65,.65,.64,.6,.55,.5,.4,.325,.25,.15,.05,-.05,-.15,-.275,-.35,-.45,-.55,-.65,-.7,-.78,-.825,-.9,-.925,-.95,-.975])},{name:"modbox acoustic bass",expression:.5,samples:ne([1,0,.1,-.1,-.2,-.4,-.3,-1])},{name:"modbox lyre",expression:.45,samples:ne([1,-1,4,2.15,4.13,5.15,0,-.05,1])},{name:"modbox ramp pulse",expression:.5,samples:ne([6.1,-2.9,1.4,-2.9])},{name:"modbox piccolo",expression:.5,samples:ne([1,4,2,1,-.1,-1,-.12])},{name:"modbox squaretooth",expression:.5,samples:ne([.2,1,2.6,1,0,-2.4])},{name:"modbox flatline",expression:1,samples:ne([1,.9,.8,.7,.6,.5,.4,.3,.2,.1,0,.1,.2,.3,.4,.5,.6,.7,.8,.9])},{name:"modbox pnryshk a (u5)",expression:.4,samples:ne([1,.9,.8,.7,.6,.5,.4,.3,.2,.1,0])},{name:"modbox pnryshk b (riff)",expression:.5,samples:ne([1,-.9,.8,-.7,.6,-.5,.4,-.3,.2,-.1,0,-.1,.2,-.3,.4,-.5,.6,-.7,.8,-.9,1])},{name:"sandbox shrill lute",expression:.94,samples:ne([1,1.5,1.25,1.2,1.3,1.5])},{name:"sandbox bassoon",expression:.5,samples:ne([1,-1,1,1,1,1,1,1,1,1,1,1,0])},{name:"sandbox shrill bass",expression:.5,samples:ne([0,1,0,0,1,0,1,0,0,0])},{name:"sandbox nes pulse",expression:.4,samples:ne([2.1,-2.2,1.2,3])},{name:"sandbox saw bass",expression:.25,samples:ne([1,1,1,1,0,2,1,2,3,1,-2,1,4,1,4,2,1,6,-3,4,2,1,5,1,4,1,5,6,7,1,6,1,4,1,9])},{name:"sandbox euphonium",expression:.3,samples:ne([0,1,2,1,2,1,4,2,5,0,-2,1,5,1,2,1,2,4,5,1,5,-2,5,10,1])},{name:"sandbox shrill pulse",expression:.3,samples:ne([2,0,4,1,4,6,7,3])},{name:"sandbox r-sawtooth",expression:.2,samples:ne([6.1,-2.9,1.4,-2.9])},{name:"sandbox recorder",expression:.2,samples:ne([5,-5.1,4,-4.1,3,-3.1,2,-2.1,1,-1.1,6])},{name:"sandbox narrow saw",expression:1.2,samples:ne([.1,.13/-.1,.13/-.3,.13/-.5,.13/-.7,.13/-.9,.13/-.11,.13/-.31,.13/-.51,.13/-.71,.13/-.91,.13/-.12,.13/-.32,.13/-.52,.13/-.72,.13/-.92,.13/-.13,.13/.13,.13/.92,.13/.72,.13/.52,.13/.32,.13/.12,.13/.91,.13/.71,.13/.51,.13/.31,.13/.11,.13/.9,.13/.7,.13/.5,.13/.3,.13])},{name:"sandbox deep square",expression:1,samples:ne([1,2.25,1,-1,-2.25,-1])},{name:"sandbox ring pulse",expression:1,samples:ne([1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1])},{name:"sandbox double sine",expression:1,samples:ne([1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,1.8,1.7,1.6,1.5,1.4,1.3,1.2,1.1,1,0,-1,-1.1,-1.2,-1.3,-1.4,-1.5,-1.6,-1.7,-1.8,-1.9,-1.8,-1.7,-1.6,-1.5,-1.4,-1.3,-1.2,-1.1,-1])},{name:"sandbox contrabass",expression:.5,samples:ne([4.2,6.9,1.337,6.66])},{name:"sandbox double bass",expression:.4,samples:ne([0,.1875,.3125,.5625,.5,.75,.875,1,-1,-.6875,-.5,-.625,-.625,-.5,-.375,-.5625,-.4375,-.5625,-.4375,-.4375,-.3125,-.1875,.1875,.375,.5625,-.5625,.5625,.5625,.5625,.4375,.25,0])},{name:"haileybox test1",expression:.5,samples:ne([1,.5,-1])},{name:"brucebox pokey 4bit lfsr",expression:.5,samples:ne([1,-1,-1,-1,1,1,1,1,-1,1,-1,1,1,-1,-1])},{name:"brucebox pokey 5step bass",expression:.5,samples:ne([1,-1,1,-1,1])},{name:"brucebox isolated spiky",expression:.5,samples:ne([1,-1,1,-1,1,-1])},{name:"nerdbox unnamed 1",expression:.5,samples:ne([.2,.8/.2,.7,-.4,-1,.5,-.5/.6])},{name:"nerdbox unnamed 2",expression:.5,samples:ne([2,5/55,-9,6.5/6.5,-55,18.5/-26])},{name:"zefbox semi-square",expression:1,samples:ne([1,1.5,2,2.5,2.5,2.5,2,1.5,1])},{name:"zefbox deep square",expression:1,samples:ne([1,2.25,1,-1,-2.25,-1])},{name:"zefbox squaretal",expression:.7,samples:ne([1.5,1,1.5,-1.5,-1,-1.5])},{name:"zefbox saw wide",expression:.65,samples:ne([0,-.4,-.8,-1.2,-1.6,-2,0,-.4,-.8,-1.2,-1.6])},{name:"zefbox saw narrow",expression:.65,samples:ne([1,.5,1,.5,1,.5,1,2,1,2,1])},{name:"zefbox deep sawtooth",expression:.5,samples:ne([0,2,3,4,4.5,5,5.5,6,6.25,6.5,6.75,7,6.75,6.5,6.25,6,5.5,5,4.5,4,3,2,1])},{name:"zefbox sawtal",expression:.3,samples:ne([1.5,1,1.25,-.5,1.5,-.5,0,-1.5,1.5,0,.5,-1.5,.5,1.25,-1,-1.5])},{name:"zefbox deep sawtal",expression:.7,samples:ne([.75,.25,.5,-.5,.5,-.5,-.25,-.75])},{name:"zefbox pulse",expression:.5,samples:ne([1,-2,-2,-1.5,-1.5,-1.25,-1.25,-1,-1])},{name:"zefbox triple pulse",expression:.4,samples:ne([1,1,1,1,1,-1,-1,1.5,1,1,1,1,-1,-1,-1,1.5])},{name:"zefbox high pulse",expression:.2,samples:ne([1,-2,2,-3,3,-4,5,-4,3,-3,2,-2,1])},{name:"zefbox deep pulse",expression:.2,samples:ne([1,2,2,-2,-2,-3,-4,-4,-5,-5,-5,-5,0,-1,-2])},{name:"wackybox guitar string",expression:.6,samples:ne([0,63,63,63,63,19,63,63,63,63,63,63,63,63,63,63,11,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,27,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,34,63,63,63,63])},{name:"wackybox intense",expression:.6,samples:ne([36,25,33,35,18,51,22,40,27,37,31,33,25,29,41,23,31,31,45,20,37,23,29,26,42,29,33,26,31,27,40,25,40,26,37,24,41,32,0,32,33,29,32,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31])},{name:"wackybox buzz wave",expression:.6,samples:ne([0,1,1,2,4,4,4,4,5,5,6,6,6,7,8,8,8,9,9,9,9,9,9,8,8,8,11,15,23,62,61,60,58,56,56,54,53,52,50,49,48,47,47,45,45,45,44,44,43,43,42,42,42,42,42,42,42,42,42,42,42,43,43,53])},{name:"todbox 1/3 pulse",expression:.5,samples:J([1,-1,-1])},{name:"todbox 1/5 pulse",expression:.5,samples:J([1,-1,-1,-1,-1])},{name:"todbox slap bass",expression:.5,samples:ne([1,.5,0,.5,1.25,.5,-.25,.1,-.1,.1,1.1,2.1,3,3.5,2.9,3.3,2.7,2.9,2.3,2,1.9,1.8,1,.7,.9,.8,.4,.1,0,.2,.4,.6,.5,.8])},{name:"todbox harsh wave",expression:.45,samples:ne([1,-1,-1,-1,.5,.5,.5,.7,.39,1.3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"todbox accordian",expression:.5,samples:ne([0,1,1,2,2,1.5,1.5,.8,0,-2,-3.25,-4,-4.5,-5.5,-6,-5.75,-5.5,-5,-5,-5,-6,-6,-6,-5,-4,-3,-2,-1,.75,1,2,3,4,5,6,6.5,7.5,8,7.75,6,5.25,5,5,5,5,5,4.25,3.75,3.25,2.75,1.25,-.75,-2,-.75,1.25,1.25,2,2,2,2,1.5,-1,-2,-1,1.5,2,2.75,2.75,2.75,3,2.75,-1,-2,-2.5,-2,-1,-2.25,-2.75,-2,-3,-1.75,1,2,3.5,4,5.25,6,8,9.75,10,9.5,9,8.5,7.5,6.5,5.25,5,4.5,4,4,4,3.25,2.5,2,1,-.5,-2,-3.5,-4,-4,-4,-3.75,-3,-2,-1])},{name:"todbox beta banana wave",expression:.8,samples:ne([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0])},{name:"todbox beta test wave",expression:.5,samples:ne([56,0,-52,16,3,3,2,-35,20,147,-53,0,0,5,-6])},{name:"todbox beta real snare",expression:1,samples:ne([0,-.01208,-.02997,-.04382,-.06042,-.07529,-.09116,-.10654,-.12189,-.13751,-.15289,-.16849,-.18387,-.19974,-.21484,-.23071,-.24557,-.26144,-.27731,-.29141,-.3035,-.32416,-.34406,-.32947,-.31158,-.33725,-.37579,-.39746,-.40201,-.40906,-.4418,-.47229,-.47379,-.47733,-.45239,-.33954,-.22894,-.22443,-.32138,-.46371,-.57178,-.61081,-.59998,-.61459,-.62189,-.43979,-.19217,-.12643,-.17252,-.20956,-.20981,-.19217,-.22845,-.34332,-.50629,-.64307,-.72922,-.81384,-.87857,-.90149,-.88687,-.86169,-.87781,-.80478,-.52493,-.31308,-.33249,-.39395,-.39017,-.30301,-.19949,-.13071,-.02493,.14307,.34961,.52542,.63223,.68613,.7471,.87305,.98184,.98889,.97052,.99066,.99747,.99344,.99469,.99393,.9957,.99393,.99521,.99469,.9942,.99521,.9942,.99521,.99469,.99469,.99521,.9942,.99545,.99445,.99469,.99493,.9942,.99521,.99393,.99493,.99469,.99445,.9957,.99445,.99521,.99469,.99469,.99521,.9942,.99545,.99445,.99445,.99493,.9942,.99545,.9942,.99493,.99493,.9942,.99545,.99445,.99521,.99469,.99445,.99545,.99368,.99393,.99445,.99268,.97983,.97229,.95944,.88486,.76773,.64481,.53098,.39847,.19318,-.03827,-.20325,-.39319,-.68765,-.88461,-.93448,-.96069,-.97681,-.98715,-.99042,-.99142,-.99091,-.99142,-.99219,-.99091,-.99219,-.99066,-.99142,-.99142,-.99118,-.99191,-.99066,-.99191,-.99142,-.99142,-.99191,-.99091,-.99219,-.99118,-.99142,-.99167,-.99091,-.99219,-.99091,-.99167,-.99142,-.99091,-.99191,-.99091,-.99191,-.99142,-.99118,-.99191,-.99066,-.99191,-.99118,-.99142,-.99191,-.99066,-.99191,-.99091,-.99167,-.99191,-.99118,-.99219,-.99091,-.99191,-.99142,-.99142,-.99243,-.98865,-.98764,-.99219,-.98083,-.92517,-.9277,-.91486,-.59042,-.15189,.02945,.05667,.06195,.00629,-.18008,-.56497,-.8801,-.9277,-.92871,-.97705,-.99167,-.98663,-.99118,-.99042,-.99219,-.99142,-.99118,-.98941,-.99219,-1,-.9758,-.95993,-.99948,-.98236,-.84659,-.7486,-.70679,-.59747,-.48035,-.41687,-.36826,-.29745,-.18185,-.06219,.02164,.07907,.13123,.18033,.1962,.15692,.14053,.20251,.2753,.30905,.29092,.27252,.30402,.32416,.32214,.35239,.3967,.43198,.4942,.58487,.64154,.65967,.6705,.67026,.66522,.6554,.66119,.70627,.75842,.78738,.7894,.78763,.80402,.85944,.94559,.9899,.9816,.98007,.99368,.99393,.98538,.9758,.97101,.93802,.81812,.64633,.46649,.28613,.14685,.08966,.12543,.20325,.24557,.18866,.02795,-.20175,-.44205,-.58713,-.57629,-.41385,-.14255,.18033,.47882,.68311,.72314,.62064,.48309,.43073,.53577,.72794,.9025,.97354,.97,.98083,.99191,.99319,.99493,.99393,.99521,.99393,.99545,.9942,.99493,.99493,.99445,.99545,.9942,.99545,.99243,.98917,.98386,.97781,.95844,.89066,.81561,.78134,.77277,.75995,.73022,.67126,.57178,.47,.38361,.29419,.20703,.14734,.15866,.25162,.35818,.45062,.5675,.69748,.81232,.89697,.95062,.97656,.98615,.99191,.99219,.99243,.99368,.99368,.97028,.95566,.94559,.82617,.59973,.38361,.23901,.15338,.12921,.11206,.04382,-.12946,-.43552,-.72644,-.89847,-.95465,-.95541,-.97229,-.99268,-.99319,-.9884,-.99142,-.99167,-.99091,-.9884,-.98965,-.99368,-.97455,-.9501,-.94684,-.96219,-.98514,-.99243,-.98889,-.98917,-.99142,-.99219,-.99091,-.99191,-.99142,-.99142,-.99191,-.99066,-.99167,-.99091,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99167,-.99091,-.99219,-.99091,-.99191,-.99142,-.99118,-.99191,-.99066,-.99191,-.99091,-.99118,-.99243,-.98941,-.98462,-.96976,-.9632,-.96194,-.87305,-.66196,-.44809,-.29495,-.18085,-.11813,-.11334,-.18564,-.34885,-.58237,-.8045,-.93726,-.97806,-.97354,-.97531,-.9899,-.99368,-.98941,-.99219,-.99091,-.99142,-.99167,-.99091,-.99191,-.99118,-.99219,-.98236,-.97781,-.97656,-.95135,-.87204,-.71335,-.52139,-.34232,-.17783,-.00906,.14886,.3045,.48889,.67404,.8403,.94128,.97681,.98462,.98337,.99142,.99521,.99493,.9942,.99445,.99521,.99393,.99545,.99445,.99521,.99521,.99445,.9957,.99445,.99521,.99469,.99445,.99521,.9942,.99521,.99445,.99445,.99521,.99445,.99545,.99445,.99469,.99493,.99393,.99493,.99445,.99393,.98285,.97781,.97479,.92844,.82114,.66095,.52417,.46826,.46722,.47934,.47379,.47076,.48209,.42014,.25439,.10074,-.00302,-.08966,-.16068,-.21436,-.2204,-.15137,-.00476,.18536,.37631,.52292,.62164,.70425,.74835,.72366,.63928,.52567,.40805,.35666,.42896,.60175,.802,.92743,.96548,.97632,.98337,.99066,.99521,.9942,.99368,.99292,.9884,.98083,.96774,.93323,.8544,.6947,.47202,.20425,-.0889,-.36423,-.60025,-.77481,-.90173,-.96017,-.97028,-.98108,-.9884,-.99219,-.9899,-.99219,-.99142,-.99142,-.99219,-.99091,-.99243,-.99066,-.99142,-.99142,-.99118,-.99191,-.99066,-.99167,-.99142,-.99142,-.99219,-.99091,-.99191,-.99118,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99191,-.99118,-.99219,-.99091,-.99167,-.99142,-.99142,-.99219,-.99091,-.99191,-.99142,-.99118,-.98917,-.99042,-.99445,-.9733,-.9559,-.96219,-.8967,-.72241,-.55112,-.44809,-.39319,-.37833,-.35641,-.2627,-.1423,-.11282,-.13525,-.11536,-.09671,-.11511,-.1806,-.26874,-.33374,-.42215,-.51358,-.44785,-.3045,-.28613,-.30527,-.25037,-.1539,-.08286,-.11157,-.12592,-.00327,.13803,.19141,.1282,.01788,-.03952,-.12592,-.26773,-.34634,-.31384,-.1806,-.0108,.13574,.2612,.36975,.46573,.55087,.63626,.73022,.83072,.92014,.97177,.98587,.98413,.99167,.99445,.99292,.99219,.9874,.98007,.96472,.92239,.82166,.69067,.57959,.54962,.59695,.64255,.64633,.60629,.55942,.5491,.58966,.61887,.56952,.54181,.59518,.63248,.63876,.65463,.73398,.88312,.96927,.97101,.97958,.99344,.9942,.99268,.99493,.99469,.99445,.99521,.99445,.99545,.9942,.99493,.99493,.9942,.99545,.9942,.99493,.9942,.99393,.9942,.9884,.98309,.98309,.96069,.88461,.7937,.72064,.65765,.59998,.53247,.49268,.48615,.44205,.38034,.36447,.38715,.39294,.32645,.19595,.07782,-.05893,-.27832,-.48309,-.62619,-.72995,-.79999,-.84583,-.82166,-.73575,-.67227,-.65491,-.6496,-.66397,-.70175,-.72894,-.74658,-.76724,-.7952,-.82846,-.86523,-.90527,-.94382,-.89948,-.69849,-.47479,-.31662,-.15414,-.00729,.07077,.08237,.04431,-.02292,-.11761,-.24307,-.36926,-.45087,-.4617,-.4025,-.30679,-.17529,0,.14331,.24179,.36774,.49545,.56522,.57907,.56775,.53851,.51132,.48688,.41913,.26044,.00955,-.26297,-.46396,-.62341,-.82214,-.94684,-.96774,-.97531,-.98413,-.99017,-.9899,-.99219,-.99066,-.99142,-.99167,-.99118,-.99219,-.9899,-.99118,-.99368,-.99142,-.97757,-.97403,-.98007,-.9617,-.86826,-.67783,-.52719,-.48788,-.4549,-.43146,-.47681,-.54105,-.57983,-.60904,-.62317,-.59949,-.55566,-.52063,-.52115,-.55112,-.56244,-.58337,-.6554,-.73373,-.77228,-.74759,-.6889,-.64609,-.61887,-.5806,-.50351,-.40729,-.33929,-.3511,-.42944,-.47028,-.42267,-.32718,-.20224,-.0564,.04556,.10529,.1763,.26169,.33197,.32138,.23776,.20956,.23148,.20352,.23325,.39267,.52719,.58438,.62289,.66345,.70023,.66296,.5433,.42618,.33475,.24533,.14105,.03851,.01358,.09143,.22845,.34961,.41711,.4874,.58914,.69519,.78186,.84357,.89822,.95389,.98135,.98615,.99167,.99243,.99445,.9942,.99469,.99493,.99393,.99545,.99445,.99521,.99469,.99445,.99521,.9942,.99469,.98965,.98715,.98563,.96295,.91736,.86624,.82367,.77554,.68411,.53549,.38916,.2612,.11435,-.04053,-.18161,-.23172,-.19394,-.15237,-.1073,-.02997,.08588,.2262,.34305,.44104,.5574,.65765,.71259,.69217,.65363,.69748,.79572,.89368,.95514,.97733,.98413,.98816,.99243,.99445,.99243,.97302,.96674,.97983,.90378,.71005,.51056,.40451,.40982,.41559,.32996,.24356,.18866,.11411,.05365,.01157,-.03247,-.09216,-.16095,-.23248,-.31662,-.39771,-.48663,-.59647,-.71536,-.82013,-.85287,-.82947,-.84937,-.92215,-.97177,-.98663,-.98816,-.98438,-.99091,-.99219,-.99091,-.99191,-.99042,-.99191,-.99091,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99142])},{name:"ultrabox shortened od guitar",expression:.5,samples:ne([-.82785,-.67621,-.40268,-.43817,-.45468,-.22531,-.18329,.2475,.71246,.52155,.56082,.48395,.3399,.46957,.27744,.42313,.47104,.18796,.1293,-.13901,-.07431,-.16348,-.74857,-.73206,-.35181,-.26227,-.41882,-.27786,-.19806,-.19867,.18643,.24808,.08847,-.06964,.06912,.20474,-.05304,.29416,.31967,.14243,.27521,-.23932,-.14752,.1236,-.26123,-.26111,.06616,.2652,.0809,.1524,.16254,-.12061,.04562,.00131,.0405,.08182,-.21729,-.17041,-.16312,-.08563,.0639,.05099,.05627,.02728,.00726,-.13028,-.05673,-.14969,-.17645,.35492,.16766,-.00897,.24326,-.00461,-.04456,.01776,-.0495,-.01221,.02039,.07684,.13397,.3985,.35962,.13754,.4231,.27161,-.17609,.03659,.10635,-.21909,-.22046,-.20258,-.40973,-.4028,-.40521,-.66284])}]);static chipWaves=Co(o.rawChipWaves);static rawRawChipWaves=o.rawChipWaves;static firstIndexForSamplesInChipWaveList=o.chipWaves.length;static chipNoises=fe([{name:"retro",expression:.25,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"white",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"clang",expression:.4,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"buzz",expression:.3,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"hollow",expression:1.5,basePitch:96,pitchFilterMult:1,isSoft:!0,samples:null},{name:"shine",expression:1,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"deep",expression:1.5,basePitch:120,pitchFilterMult:1024,isSoft:!0,samples:null},{name:"cutter",expression:.005,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"metallic",expression:1,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"static",expression:1,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"1-bit white",expression:.5,basePitch:74.41,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"1-bit metallic",expression:.5,basePitch:86.41,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"crackling",expression:.9,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"pink",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"brownian",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null}]);static filterFreqStep=1/4;static filterFreqRange=34;static filterFreqReferenceSetting=28;static filterFreqReferenceHz=8e3;static filterFreqMaxHz=o.filterFreqReferenceHz*Math.pow(2,o.filterFreqStep*(o.filterFreqRange-1-o.filterFreqReferenceSetting));static filterFreqMinHz=8;static filterGainRange=15;static filterGainCenter=7;static filterGainStep=1/2;static filterMaxPoints=8;static filterTypeNames=["low-pass","high-pass","peak"];static filterMorphCount=10;static filterSimpleCutRange=11;static filterSimplePeakRange=8;static fadeInRange=10;static fadeOutTicks=[-24,-12,-6,-3,-1,6,12,24,48,72,96];static fadeOutNeutral=4;static drumsetFadeOutTicks=48;static transitions=fe([{name:"normal",isSeamless:!1,continues:!1,slides:!1,slideTicks:3,includeAdjacentPatterns:!1},{name:"interrupt",isSeamless:!0,continues:!1,slides:!1,slideTicks:3,includeAdjacentPatterns:!0},{name:"continue",isSeamless:!0,continues:!0,slides:!1,slideTicks:3,includeAdjacentPatterns:!0},{name:"slide",isSeamless:!0,continues:!1,slides:!0,slideTicks:3,includeAdjacentPatterns:!0},{name:"slide in pattern",isSeamless:!0,continues:!1,slides:!0,slideTicks:3,includeAdjacentPatterns:!1}]);static vibratos=fe([{name:"none",amplitude:0,type:0,delayTicks:0},{name:"light",amplitude:.15,type:0,delayTicks:0},{name:"delayed",amplitude:.3,type:0,delayTicks:37},{name:"heavy",amplitude:.45,type:0,delayTicks:0},{name:"shaky",amplitude:.1,type:1,delayTicks:0}]);static vibratoTypes=fe([{name:"normal",periodsSeconds:[.14],period:.14},{name:"shaky",periodsSeconds:[.11,1.618*.11,3*.11],period:266.97}]);static arpSpeedScale=[0,.0625,.125,.2,.25,1/3,.4,.5,2/3,.75,.8,.9,1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3,3.1,3.2,3.3,3.4,3.5,3.6,3.7,3.8,3.9,4,4.15,4.3,4.5,4.8,5,5.5,6,8];static unisons=fe([{name:"none",voices:1,spread:0,offset:0,expression:1.4,sign:1},{name:"shimmer",voices:2,spread:.018,offset:0,expression:.8,sign:1},{name:"hum",voices:2,spread:.045,offset:0,expression:1,sign:1},{name:"honky tonk",voices:2,spread:.09,offset:0,expression:1,sign:1},{name:"dissonant",voices:2,spread:.25,offset:0,expression:.9,sign:1},{name:"fifth",voices:2,spread:3.5,offset:3.5,expression:.9,sign:1},{name:"octave",voices:2,spread:6,offset:6,expression:.8,sign:1},{name:"bowed",voices:2,spread:.02,offset:0,expression:1,sign:-1},{name:"piano",voices:2,spread:.01,offset:0,expression:1,sign:.7},{name:"warbled",voices:2,spread:.25,offset:.05,expression:.9,sign:-.8},{name:"hecking gosh",voices:2,spread:6.25,offset:-6,expression:.8,sign:-.7},{name:"spinner",voices:2,spread:.02,offset:0,expression:1,sign:1},{name:"detune",voices:1,spread:0,offset:.25,expression:1,sign:1},{name:"rising",voices:2,spread:1,offset:.7,expression:.95,sign:1},{name:"vibrate",voices:2,spread:3.5,offset:7,expression:.975,sign:1},{name:"fourths",voices:2,spread:4,offset:4,expression:.95,sign:1},{name:"bass",voices:1,spread:0,offset:-7,expression:1,sign:1},{name:"dirty",voices:2,spread:0,offset:.1,expression:.975,sign:1},{name:"stationary",voices:2,spread:3.5,offset:0,expression:.9,sign:1},{name:"recurve",voices:2,spread:.005,offset:0,expression:1,sign:1},{name:"voiced",voices:2,spread:9.5,offset:0,expression:1,sign:1},{name:"fluctuate",voices:2,spread:12,offset:0,expression:1,sign:1},{name:"thin",voices:1,spread:0,offset:50,expression:1,sign:1},{name:"inject",voices:2,spread:6,offset:.4,expression:1,sign:1},{name:"askewed",voices:2,spread:0,offset:.42,expression:.7,sign:1},{name:"resonance",voices:2,spread:.0025,offset:.1,expression:.8,sign:-1.5},{name:"FART",voices:2,spread:13,offset:-5,expression:1,sign:-3},{name:"augmented",voices:4,spread:6,offset:6,expression:.5,sign:1},{name:"diminished",voices:5,spread:6,offset:6,expression:.4,sign:1},{name:"chorus",voices:9,spread:.22,offset:0,expression:.15,sign:1},{name:"block",voices:9,spread:6,offset:6,expression:.15,sign:.8},{name:"extraterrestrial",voices:6,spread:15.2,offset:-6,expression:.35,sign:.7},{name:"bow",voices:9,spread:.006,offset:0,expression:.15,sign:.5}]);static effectNames=["reverb","chorus","panning","distortion","bitcrusher","post eq","echo","ring mod","granular","gain","flanger"];static effectDisplayNames=["Reverb","Chorus","Panning","Distortion","Bitcrusher","Post EQ","Echo","Ring Mod","Granular","Gain","Flanger"];static effectOrder=[0,1,2,3,4,5,6,7,8,9,10];static effectCount;static mdeffectNames=["pitch shift","detune","vibrato","transition type","chord type","note range"];static mdeffectOrder=[3,4,0,1,2,5];static mdeffectCount;static noteSizeMax=6;static volumeRange=100;static volumeLogScale=.0714;static gainRangeMult=2;static panCenter=50;static panMax=o.panCenter*2;static panDelaySecondsMax=.001;static ringModRange=8;static ringModHzRange=64;static ringModMinHz=20;static ringModMaxHz=4400;static rmHzOffsetCenter=200;static rmHzOffsetMax=400;static rmHzOffsetMin=0;static granularRange=10;static grainSizeMin=40;static grainSizeMax=2e3;static grainSizeStep=40;static grainRangeMax=1600;static grainAmountsMax=10;static granularEnvelopeType=0;static flangerRange=24;static flangerSpeedRange=16;static flangerDepthRange=16;static flangerFeedbackRange=16;static flangerMaxDelay=.0034*4.35;static flangerPeriodMult=4e-6;static flangerVolumeMult=.45;static chorusRange=24;static chorusPeriodSeconds=2;static chorusDelayRange=.0034;static chorusDelayOffsets=[[1.51,2.1,3.35],[1.47,2.15,3.25]];static chorusPhaseOffsets=[[0,2.1,4.2],[3.2,5.3,1]];static chorusMaxDelay=o.chorusDelayRange*(1+o.chorusDelayOffsets[0].concat(o.chorusDelayOffsets[1]).reduce((e,i)=>Math.max(e,i)));static chords=fe([{name:"simultaneous",customInterval:!1,arpeggiates:!1,strumParts:0,singleTone:!1},{name:"strum",customInterval:!1,arpeggiates:!1,strumParts:1,singleTone:!1},{name:"arpeggio",customInterval:!1,arpeggiates:!0,strumParts:0,singleTone:!0},{name:"custom interval",customInterval:!0,arpeggiates:!1,strumParts:0,singleTone:!0},{name:"monophonic",customInterval:!1,arpeggiates:!1,strumParts:0,singleTone:!0}]);static maxChordSize=9;static operatorCount=4;static maxPitchOrOperatorCount=Math.max(o.maxChordSize,o.operatorCount+2);static algorithms=fe([{name:"1\u2190(2\u20023\u20024)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3,4],[],[],[]]},{name:"1\u2190(2\u20023\u21904)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[],[4],[]]},{name:"1\u21902\u2190(3\u20024)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3,4],[],[]]},{name:"1\u2190(2\u20023)\u21904",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[4],[4],[]]},{name:"1\u21902\u21903\u21904",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3],[4],[]]},{name:"1\u21903\u20032\u21904",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[3],[4],[],[]]},{name:"1\u20032\u2190(3\u20024)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3,4],[],[]]},{name:"1\u20032\u21903\u21904",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3],[4],[]]},{name:"(1\u20022)\u21903\u21904",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3],[3],[4],[]]},{name:"(1\u20022)\u2190(3\u20024)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3,4],[3,4],[],[]]},{name:"1\u20032\u20033\u21904",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[],[],[4],[]]},{name:"(1\u20022\u20023)\u21904",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[4],[4],[4],[]]},{name:"1\u20032\u20033\u20034",carrierCount:4,associatedCarrier:[1,2,3,4],modulatedBy:[[],[],[],[]]},{name:"1\u2190(2 3)\u20032\u21904",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[2,3],[4],[],[]]},{name:"1\u2190(2 (3 (4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[2,3,4],[3,4],[4],[]]}]);static algorithms6Op=fe([{name:"Custom",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1\u21902\u21903\u21904\u21905\u21906",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2],[3],[4],[5],[6],[]]},{name:"1\u21903\u20032\u21904\u21905\u21906",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4],[],[5],[6],[]]},{name:"1\u21903\u21904\u20032\u21905\u21906",carrierCount:2,associatedCarrier:[1,1,1,2,2,2],modulatedBy:[[3],[5],[4],[],[6],[]]},{name:"1\u21904\u20032\u21905\u20033\u21906",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[5],[6],[],[],[]]},{name:"1\u21903\u20022\u2190(4\u20025\u21906)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5],[],[],[6],[]]},{name:"1\u2190(3\u20024)\u20022\u21905\u21906",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3,4],[5],[],[],[6],[]]},{name:"1\u21903\u20022\u2190(4\u20025\u20026)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5,6],[],[],[],[]]},{name:"1\u21903\u20022\u2190(4\u20025)\u21906",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5],[],[6],[6],[]]},{name:"1\u21903\u20022\u21904\u2190(5\u20026)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4],[],[5,6],[],[]]},{name:"1\u2190(2\u20023\u20024\u20025\u20026)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1\u2190(2\u20023\u21905\u20024\u21906)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4],[],[5],[6],[],[]]},{name:"1\u2190(2\u20023\u20024\u21905\u21906)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4],[],[],[5],[6],[]]},{name:"1\u21904\u21905\u2003(2\u20033)\u21906",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[6],[6],[5],[],[]]},{name:"1\u2190(3\u20034)\u21905 2\u21906",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3,4],[6],[5],[5],[],[]]},{name:"(1\u20032)\u21904\u20033\u2190(5\u20036)",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[4],[5,6],[],[],[]]},{name:"(1\u20032)\u21905\u2003(3\u20034)\u21906",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[5],[5],[6],[6],[],[]]},{name:"(1\u20032\u20033)\u2190(4\u20035\u20036)",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4,5,6],[4,5,6],[4,5,6],[],[],[]]},{name:"1\u21905\u2003(2\u20033\u20034)\u21906",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[5],[6],[6],[6],[],[]]},{name:"1\u20032\u21905\u2003(3\u20034)\u21906",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[5],[6],[6],[],[]]},{name:"1\u20032\u2003(3\u20034\u20035)\u21906",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[6],[6],[6],[]]},{name:"1\u20032\u20033\u2003(4\u20035)\u21906",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[],[6],[6],[]]},{name:"1\u20032\u21904\u20033\u2190(5\u20036)",carrierCount:3,associatedCarrier:[1,2,3,3,3,3],modulatedBy:[[],[4],[5,6],[],[],[]]},{name:"1\u21904\u20032\u2190(5\u20036)\u20033",carrierCount:3,associatedCarrier:[1,2,3,3,3,3],modulatedBy:[[4],[5,6],[],[],[],[]]},{name:"1\u20032\u20033\u21905\u20034\u21906",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[],[5],[6],[],[]]},{name:"1\u2003(2\u20033)\u21905\u21906\u20034",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[5],[5],[],[6],[]]},{name:"1\u20032\u20033\u21905\u21906\u20034",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[],[5,6],[],[],[]]},{name:"(1\u20032\u20033\u20034\u20035)\u21906",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[6],[6],[6],[6],[6],[]]},{name:"1\u20032\u20033\u20034\u20035\u21906",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[],[],[6],[]]},{name:"1\u20032\u20033\u20034\u20035\u20036",carrierCount:6,associatedCarrier:[1,2,3,4,5,6],modulatedBy:[[],[],[],[],[],[]]},{name:"1\u2190(2 (3 (4 (5 (6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[2,3,4,5,6],[3,4,5,6],[4,5,6],[5,6],[6],[]]},{name:"1\u2190(2(3(4(5(6",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[3,4,5,6],[4,5,6],[5,6],[6],[]]},{name:"1\u21904(2\u21905(3\u21906",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[2,3,4],[3,5],[6],[],[],[]]},{name:"1\u21904(2\u21905 3\u21906",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[2,3,4],[5],[6],[],[],[]]}]);static operatorCarrierInterval=[0,.04,-.073,.091,.061,.024];static operatorAmplitudeMax=15;static operatorFrequencies=fe([{name:"0.12\xD7",mult:.125,hzOffset:0,amplitudeSign:1},{name:"0.25\xD7",mult:.25,hzOffset:0,amplitudeSign:1},{name:"0.5\xD7",mult:.5,hzOffset:0,amplitudeSign:1},{name:"0.75\xD7",mult:.75,hzOffset:0,amplitudeSign:1},{name:"1\xD7",mult:1,hzOffset:0,amplitudeSign:1},{name:"~1\xD7",mult:1,hzOffset:1.5,amplitudeSign:-1},{name:"2\xD7",mult:2,hzOffset:0,amplitudeSign:1},{name:"~2\xD7",mult:2,hzOffset:-1.3,amplitudeSign:-1},{name:"3\xD7",mult:3,hzOffset:0,amplitudeSign:1},{name:"3.5\xD7",mult:3.5,hzOffset:-.05,amplitudeSign:1},{name:"4\xD7",mult:4,hzOffset:0,amplitudeSign:1},{name:"~4\xD7",mult:4,hzOffset:-2.4,amplitudeSign:-1},{name:"5\xD7",mult:5,hzOffset:0,amplitudeSign:1},{name:"6\xD7",mult:6,hzOffset:0,amplitudeSign:1},{name:"7\xD7",mult:7,hzOffset:0,amplitudeSign:1},{name:"8\xD7",mult:8,hzOffset:0,amplitudeSign:1},{name:"9\xD7",mult:9,hzOffset:0,amplitudeSign:1},{name:"10\xD7",mult:10,hzOffset:0,amplitudeSign:1},{name:"11\xD7",mult:11,hzOffset:0,amplitudeSign:1},{name:"12\xD7",mult:12,hzOffset:0,amplitudeSign:1},{name:"13\xD7",mult:13,hzOffset:0,amplitudeSign:1},{name:"14\xD7",mult:14,hzOffset:0,amplitudeSign:1},{name:"15\xD7",mult:15,hzOffset:0,amplitudeSign:1},{name:"16\xD7",mult:16,hzOffset:0,amplitudeSign:1},{name:"17\xD7",mult:17,hzOffset:0,amplitudeSign:1},{name:"18\xD7",mult:18,hzOffset:0,amplitudeSign:1},{name:"19\xD7",mult:19,hzOffset:0,amplitudeSign:1},{name:"20\xD7",mult:20,hzOffset:0,amplitudeSign:1},{name:"~20\xD7",mult:20,hzOffset:-5,amplitudeSign:-1},{name:"25\xD7",mult:25,hzOffset:0,amplitudeSign:1},{name:"50\xD7",mult:50,hzOffset:0,amplitudeSign:1},{name:"75\xD7",mult:75,hzOffset:0,amplitudeSign:1},{name:"100\xD7",mult:100,hzOffset:0,amplitudeSign:1},{name:"128\xD7",mult:128,hzOffset:0,amplitudeSign:1},{name:"256\xD7",mult:250,hzOffset:0,amplitudeSign:1}]);static envelopes=fe([{name:"none",type:0,speed:0},{name:"note size",type:1,speed:0},{name:"pitch",type:2,speed:0},{name:"punch",type:4,speed:0},{name:"flare -1",type:5,speed:128},{name:"flare 1",type:5,speed:32},{name:"flare 2",type:5,speed:8},{name:"flare 3",type:5,speed:2},{name:"twang -1",type:6,speed:128},{name:"twang 1",type:6,speed:32},{name:"twang 2",type:6,speed:8},{name:"twang 3",type:6,speed:2},{name:"swell -1",type:7,speed:128},{name:"swell 1",type:7,speed:32},{name:"swell 2",type:7,speed:8},{name:"swell 3",type:7,speed:2},{name:"tremolo0",type:8,speed:8},{name:"tremolo1",type:8,speed:4},{name:"tremolo2",type:8,speed:2},{name:"tremolo3",type:8,speed:1},{name:"tremolo4",type:9,speed:4},{name:"tremolo5",type:9,speed:2},{name:"tremolo6",type:9,speed:1},{name:"decay -1",type:10,speed:40},{name:"decay 1",type:10,speed:10},{name:"decay 2",type:10,speed:7},{name:"decay 3",type:10,speed:4},{name:"wibble-1",type:11,speed:128},{name:"wibble 1",type:11,speed:24},{name:"wibble 2",type:11,speed:12},{name:"wibble 3",type:11,speed:4},{name:"linear-2",type:12,speed:256},{name:"linear-1",type:12,speed:128},{name:"linear 1",type:12,speed:32},{name:"linear 2",type:12,speed:8},{name:"linear 3",type:12,speed:2},{name:"rise -2",type:13,speed:256},{name:"rise -1",type:13,speed:128},{name:"rise 1",type:13,speed:32},{name:"rise 2",type:13,speed:8},{name:"rise 3",type:13,speed:2},{name:"flute 1",type:11,speed:16},{name:"flute 2",type:11,speed:8},{name:"flute 3",type:11,speed:4},{name:"tripolo1",type:8,speed:9},{name:"tripolo2",type:8,speed:6},{name:"tripolo3",type:8,speed:3},{name:"tripolo4",type:9,speed:9},{name:"tripolo5",type:9,speed:6},{name:"tripolo6",type:9,speed:3},{name:"pentolo1",type:8,speed:10},{name:"pentolo2",type:8,speed:5},{name:"pentolo3",type:8,speed:2.5},{name:"pentolo4",type:9,speed:10},{name:"pentolo5",type:9,speed:5},{name:"pentolo6",type:9,speed:2.5},{name:"flutter 1",type:8,speed:14},{name:"flutter 2",type:9,speed:11},{name:"water-y flutter",type:8,speed:9},{name:"blip 1",type:14,speed:6},{name:"blip 2",type:14,speed:16},{name:"blip 3",type:14,speed:32},{name:"fall 1",type:15,speed:8},{name:"fall 2",type:15,speed:4},{name:"fall 3",type:15,speed:2}]);static newEnvelopes=fe([{name:"none",type:0,speed:0},{name:"note size",type:1,speed:0},{name:"pitch",type:2,speed:0},{name:"random",type:3,speed:4},{name:"punch",type:4,speed:0},{name:"flare",type:5,speed:32},{name:"twang",type:6,speed:32},{name:"swell",type:7,speed:32},{name:"lfo",type:8,speed:4},{name:"decay",type:10,speed:10},{name:"wibble",type:11,speed:24},{name:"linear",type:12,speed:32},{name:"rise",type:13,speed:32},{name:"blip",type:14,speed:6},{name:"fall",type:15,speed:2}]);static feedbacks=fe([{name:"1\u27F2",indices:[[1],[],[],[]]},{name:"2\u27F2",indices:[[],[2],[],[]]},{name:"3\u27F2",indices:[[],[],[3],[]]},{name:"4\u27F2",indices:[[],[],[],[4]]},{name:"1\u27F2\u20032\u27F2",indices:[[1],[2],[],[]]},{name:"3\u27F2\u20034\u27F2",indices:[[],[],[3],[4]]},{name:"1\u27F2\u20032\u27F2\u20033\u27F2",indices:[[1],[2],[3],[]]},{name:"2\u27F2\u20033\u27F2\u20034\u27F2",indices:[[],[2],[3],[4]]},{name:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",indices:[[1],[2],[3],[4]]},{name:"1\u21922",indices:[[],[1],[],[]]},{name:"1\u21923",indices:[[],[],[1],[]]},{name:"1\u21924",indices:[[],[],[],[1]]},{name:"2\u21923",indices:[[],[],[2],[]]},{name:"2\u21924",indices:[[],[],[],[2]]},{name:"3\u21924",indices:[[],[],[],[3]]},{name:"1\u21923\u20032\u21924",indices:[[],[],[1],[2]]},{name:"1\u21924\u20032\u21923",indices:[[],[],[2],[1]]},{name:"1\u21922\u21923\u21924",indices:[[],[1],[2],[3]]},{name:"1\u21942 3\u21944",indices:[[2],[1],[4],[3]]},{name:"1\u21944 2\u21943",indices:[[4],[3],[2],[1]]},{name:"2\u21921\u21924\u21923\u21922",indices:[[2],[3],[4],[1]]},{name:"1\u21922\u21923\u21924\u21921",indices:[[4],[1],[2],[3]]},{name:"(1 2 3)\u21924",indices:[[],[],[],[1,2,3]]},{name:"ALL",indices:[[1,2,3,4],[1,2,3,4],[1,2,3,4],[1,2,3,4]]}]);static feedbacks6Op=fe([{name:"Custom",indices:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1\u27F2",indices:[[1],[],[],[],[],[]]},{name:"2\u27F2",indices:[[],[2],[],[],[],[]]},{name:"3\u27F2",indices:[[],[],[3],[],[],[]]},{name:"4\u27F2",indices:[[],[],[],[4],[],[]]},{name:"5\u27F2",indices:[[],[],[],[],[5],[]]},{name:"6\u27F2",indices:[[],[],[],[],[],[6]]},{name:"1\u27F2\u20022\u27F2",indices:[[1],[2],[],[],[],[]]},{name:"3\u27F2\u20024\u27F2",indices:[[],[],[3],[4],[],[]]},{name:"1\u27F2\u20022\u27F2\u20023\u27F2",indices:[[1],[2],[3],[],[],[]]},{name:"2\u27F2\u20023\u27F2\u20024\u27F2",indices:[[],[2],[3],[4],[],[]]},{name:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",indices:[[1],[2],[3],[4],[],[]]},{name:"1\u27F2 2\u27F2 3\u27F2 4\u27F2 5\u27F2",indices:[[1],[2],[3],[4],[5],[]]},{name:"1\u27F2 2\u27F2 3\u27F2 4\u27F2 5\u27F2 6\u27F2",indices:[[1],[2],[3],[4],[5],[6]]},{name:"1\u21922",indices:[[],[1],[],[],[],[]]},{name:"1\u21923",indices:[[],[],[1],[],[],[]]},{name:"1\u21924",indices:[[],[],[],[1],[],[]]},{name:"1\u21925",indices:[[],[],[],[],[1],[]]},{name:"1\u21926",indices:[[],[],[],[],[],[1]]},{name:"2\u21923",indices:[[],[],[2],[],[],[]]},{name:"2\u21924",indices:[[],[],[],[2],[],[]]},{name:"3\u21924",indices:[[],[],[],[3],[],[]]},{name:"4\u21925",indices:[[],[],[],[],[4],[]]},{name:"1\u21924\u20022\u21925 3\u21926",indices:[[],[],[],[1],[2],[3]]},{name:"1\u21925\u20022\u21926 3\u21924",indices:[[],[],[],[3],[1],[2]]},{name:"1\u21922\u21923\u21924\u21925\u21926",indices:[[],[1],[2],[3],[4],[5]]},{name:"2\u21921\u21926\u21925\u21924\u21923\u21922",indices:[[2],[3],[4],[5],[6],[1]]},{name:"1\u21922\u21923\u21924\u21925\u21926\u21921",indices:[[6],[1],[2],[3],[4],[5]]},{name:"1\u21942 3\u21944 5\u21946",indices:[[2],[1],[4],[3],[6],[5]]},{name:"1\u21944 2\u21945 3\u21946",indices:[[4],[5],[6],[1],[2],[3]]},{name:"(1,2,3,4,5)\u21926",indices:[[],[],[],[],[],[1,2,3,4,5]]},{name:"ALL",indices:[[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6]]}]);static chipNoiseLength=32768;static spectrumNoiseLength=32768;static spectrumBasePitch=24;static spectrumControlPoints=30;static spectrumControlPointsPerOctave=7;static spectrumControlPointBits=3;static spectrumMax=(1<<o.spectrumControlPointBits)-1;static harmonicsControlPoints=28;static harmonicsRendered=64;static harmonicsRenderedForPickedString=256;static harmonicsControlPointBits=3;static harmonicsMax=(1<<o.harmonicsControlPointBits)-1;static harmonicsWavelength=2048;static pulseWidthRange=50;static pulseWidthStepPower=.5;static supersawVoiceCount=7;static supersawDynamismMax=6;static supersawSpreadMax=12;static supersawShapeMax=6;static pitchChannelCountMin=1;static pitchChannelCountMax=60;static noiseChannelCountMin=0;static noiseChannelCountMax=60;static modChannelCountMin=0;static modChannelCountMax=60;static noiseInterval=6;static pitchesPerOctave=12;static drumCount=12;static pitchOctaves=8;static modCount=6;static maxPitch=o.pitchOctaves*o.pitchesPerOctave;static maximumTonesPerChannel=o.maxChordSize*2;static justIntonationSemitones=[1/2,8/15,9/16,3/5,5/8,2/3,32/45,3/4,4/5,5/6,8/9,15/16,1,16/15,9/8,6/5,5/4,4/3,45/32,3/2,8/5,5/3,16/9,15/8,2].map(e=>Math.log2(e)*o.pitchesPerOctave);static pitchShiftRange=o.justIntonationSemitones.length;static pitchShiftCenter=o.pitchShiftRange>>1;static detuneCenter=200;static detuneMax=400;static detuneMin=0;static songDetuneMin=0;static songDetuneMax=500;static unisonVoicesMin=1;static unisonVoicesMax=9;static unisonSpreadMin=-96;static unisonSpreadMax=96;static unisonOffsetMin=-96;static unisonOffsetMax=96;static unisonExpressionMin=-2;static unisonExpressionMax=2;static unisonSignMin=-2;static unisonSignMax=2;static sineWaveLength=256;static sineWaveMask=o.sineWaveLength-1;static generateSineWave(){let e=new Float32Array(o.sineWaveLength+1);for(let i=0;i<o.sineWaveLength+1;i++)e[i]=Math.sin(i*Math.PI*2/o.sineWaveLength);return e}static generateTriWave(){let e=new Float32Array(o.sineWaveLength+1);for(let i=0;i<o.sineWaveLength+1;i++)e[i]=Math.asin(Math.sin(i*Math.PI*2/o.sineWaveLength))/(Math.PI/2);return e}static generateTrapezoidWave(e=2){let i=new Float32Array(o.sineWaveLength+1);for(let n=0;n<o.sineWaveLength+1;n++)i[n]=Math.max(-1,Math.min(1,Math.asin(Math.sin(n*Math.PI*2/o.sineWaveLength))*e));return i}static generateSquareWave(e=0){let i=new Float32Array(o.sineWaveLength+1),n=o.sineWaveLength/4;for(let a=0;a<o.sineWaveLength+1;a++)i[a]=+(Math.abs(a-n)<e*o.sineWaveLength/2||Math.abs(a-o.sineWaveLength-n)<e*o.sineWaveLength/2)*2-1;return i}static generateSawWave(e=!1){let i=new Float32Array(o.sineWaveLength+1);for(let n=0;n<o.sineWaveLength+1;n++)i[n]=(n+o.sineWaveLength/4)*2/o.sineWaveLength%2-1,i[n]=e?-i[n]:i[n];return i}static generateQuasiSineWave(){let e=new Float32Array(o.sineWaveLength+1);for(let i=0;i<o.sineWaveLength+1;i++)e[i]=Math.round(Math.sin(i*Math.PI*2/o.sineWaveLength));return e}static sineWave=o.generateSineWave();static perEnvelopeSpeedIndices=[0,.01,.02,.03,.04,.05,.06,.07,.08,.09,.1,.2,.25,.3,.3333,.4,.5,.6,.6667,.7,.75,.8,.9,1,1.25,1.3333,1.5,1.6667,1.75,2,2.25,2.5,2.75,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,11,12,13,14,15,16,17,18,19,20,24,32,40,64,128,256];static perEnvelopeSpeedToIndices={0:0,.01:1,.02:2,.03:3,.04:4,.05:5,.06:6,.07:7,.08:8,.09:9,.1:10,.2:11,.25:12,.3:13,.3333:14,.4:15,.5:16,.6:17,.6667:18,.7:19,.75:20,.8:21,.9:22,1:23,1.25:24,1.3333:25,1.5:26,1.6667:27,1.75:28,2:29,2.25:30,2.5:31,2.75:32,3:33,3.5:34,4:35,4.5:36,5:37,5.5:38,6:39,6.5:40,7:41,7.5:42,8:43,8.5:44,9:45,9.5:46,10:47,11:48,12:49,13:50,14:51,15:52,16:53,17:54,18:55,19:56,20:57,24:58,32:59,40:60,64:61,128:62,256:63};static perEnvelopeBoundMin=0;static perEnvelopeBoundMax=2;static randomEnvelopeSeedMax=63;static randomEnvelopeStepsMax=24;static pickedStringDispersionCenterFreq=6e3;static pickedStringDispersionFreqScale=.3;static pickedStringDispersionFreqMult=4;static pickedStringShelfHz=4e3;static distortionRange=16;static stringSustainRange=15;static stringDecayRate=.12;static enableAcousticSustain=!1;static sustainTypeNames=["bright","acoustic"];static bitcrusherFreqRange=14;static bitcrusherOctaveStep=.5;static bitcrusherQuantizationRange=8;static maxEnvelopeCount=16;static defaultAutomationRange=13;static instrumentAutomationTargets=fe([{name:"none",computeIndex:null,displayName:"none",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:null},{name:"noteVolume",computeIndex:0,displayName:"pre volume",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:null},{name:"mixVolume",computeIndex:1,displayName:"post volume",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:null},{name:"pulseWidth",computeIndex:3,displayName:"pulse width",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[6,8]},{name:"stringSustain",computeIndex:4,displayName:"sustain",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[7]},{name:"unison",computeIndex:5,displayName:"unison",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[0,5,7,9,6,2,3,4]},{name:"operatorFrequency",computeIndex:6,displayName:"fm# freq",interleave:!0,isFilter:!1,maxCount:o.operatorCount+2,effect:null,mdeffect:null,compatibleInstruments:[1,11]},{name:"operatorAmplitude",computeIndex:12,displayName:"fm# volume",interleave:!1,isFilter:!1,maxCount:o.operatorCount+2,effect:null,mdeffect:null,compatibleInstruments:[1,11]},{name:"feedbackAmplitude",computeIndex:18,displayName:"fm feedback",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[1,11]},{name:"pitchShift",computeIndex:19,displayName:"pitch shift",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:0,compatibleInstruments:null},{name:"detune",computeIndex:20,displayName:"detune",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:1,compatibleInstruments:null},{name:"vibratoDepth",computeIndex:21,displayName:"vibrato depth",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:2,compatibleInstruments:null},{name:"noteFilterAllFreqs",computeIndex:2,displayName:"pre eq freqs",interleave:!1,isFilter:!0,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:null},{name:"noteFilterFreq",computeIndex:22,displayName:"pre eq # freq",interleave:!1,isFilter:!0,maxCount:o.filterMaxPoints,effect:null,mdeffect:null,compatibleInstruments:null},{name:"decimalOffset",computeIndex:38,displayName:"decimal offset",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[6,8]},{name:"supersawDynamism",computeIndex:39,displayName:"dynamism",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[8]},{name:"supersawSpread",computeIndex:40,displayName:"spread",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[8]},{name:"supersawShape",computeIndex:41,displayName:"saw\u2194pulse",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[8]},{name:"gain",computeIndex:57,displayName:"gain",interleave:!1,isFilter:!1,maxCount:1,effect:9,mdeffect:null,compatibleInstruments:null},{name:"panning",computeIndex:42,displayName:"panning",interleave:!1,isFilter:!1,maxCount:1,effect:2,mdeffect:null,compatibleInstruments:null},{name:"distortion",computeIndex:43,displayName:"distortion",interleave:!1,isFilter:!1,maxCount:1,effect:3,mdeffect:null,compatibleInstruments:null},{name:"bitcrusherQuantization",computeIndex:44,displayName:"bitcrush",interleave:!1,isFilter:!1,maxCount:1,effect:4,mdeffect:null,compatibleInstruments:null},{name:"bitcrusherFrequency",computeIndex:45,displayName:"freq crush",interleave:!1,isFilter:!1,maxCount:1,effect:4,mdeffect:null,compatibleInstruments:null},{name:"flanger",computeIndex:58,displayName:"flanger",interleave:!1,isFilter:!1,maxCount:1,effect:10,mdeffect:null,compatibleInstruments:null},{name:"flangerSpeed",computeIndex:58,displayName:"flanger speed",interleave:!1,isFilter:!1,maxCount:1,effect:10,mdeffect:null,compatibleInstruments:null},{name:"flangerDepth",computeIndex:58,displayName:"flanger depth",interleave:!1,isFilter:!1,maxCount:1,effect:10,mdeffect:null,compatibleInstruments:null},{name:"flangerFeedback",computeIndex:58,displayName:"flanger feedback",interleave:!1,isFilter:!1,maxCount:1,effect:10,mdeffect:null,compatibleInstruments:null},{name:"chorus",computeIndex:46,displayName:"chorus",interleave:!1,isFilter:!1,maxCount:1,effect:1,mdeffect:null,compatibleInstruments:null},{name:"echoSustain",computeIndex:47,displayName:"echo",interleave:!1,isFilter:!1,maxCount:1,effect:6,mdeffect:null,compatibleInstruments:null},{name:"reverb",computeIndex:48,displayName:"reverb",interleave:!1,isFilter:!1,maxCount:1,effect:0,mdeffect:null,compatibleInstruments:null},{name:"arpeggioSpeed",computeIndex:49,displayName:"arpeggio speed",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:4,compatibleInstruments:null},{name:"ringModulation",computeIndex:50,displayName:"ring mod",interleave:!1,isFilter:!1,maxCount:1,effect:7,mdeffect:null,compatibleInstruments:null},{name:"ringModulationHz",computeIndex:51,displayName:"ring mod hz",interleave:!1,isFilter:!1,maxCount:1,effect:7,mdeffect:null,compatibleInstruments:null},{name:"granular",computeIndex:52,displayName:"granular",interleave:!1,isFilter:!1,maxCount:1,effect:8,mdeffect:null,compatibleInstruments:null},{name:"grainFreq",computeIndex:53,displayName:"grain freq",interleave:!1,isFilter:!1,maxCount:1,effect:8,mdeffect:null,compatibleInstruments:null},{name:"grainSize",computeIndex:54,displayName:"grain size",interleave:!1,isFilter:!1,maxCount:1,effect:8,mdeffect:null,compatibleInstruments:null},{name:"grainRange",computeIndex:55,displayName:"grain range",interleave:!1,isFilter:!1,maxCount:1,effect:8,mdeffect:null,compatibleInstruments:null},{name:"echoDelay",computeIndex:56,displayName:"echo delay",interleave:!1,isFilter:!1,maxCount:1,effect:6,mdeffect:null,compatibleInstruments:null}]);static operatorWaves=fe([{name:"sine",samples:o.sineWave},{name:"triangle",samples:o.generateTriWave()},{name:"pulse width",samples:o.generateSquareWave(.5)},{name:"sawtooth",samples:o.generateSawWave()},{name:"ramp",samples:o.generateSawWave(!0)},{name:"trapezoid",samples:o.generateTrapezoidWave(2)},{name:"quasi-sine",samples:o.generateQuasiSineWave()}]);static pwmOperatorWaves=fe([{name:"1%",samples:o.generateSquareWave(.01)},{name:"5%",samples:o.generateSquareWave(.05)},{name:"12.5%",samples:o.generateSquareWave(.125)},{name:"25%",samples:o.generateSquareWave(.25)},{name:"33%",samples:o.generateSquareWave(1/3)},{name:"50%",samples:o.generateSquareWave(.5)},{name:"66%",samples:o.generateSquareWave(2/3)},{name:"75%",samples:o.generateSquareWave(.75)},{name:"87.5%",samples:o.generateSquareWave(.875)},{name:"95%",samples:o.generateSquareWave(.95)},{name:"99%",samples:o.generateSquareWave(.99)}]);static barEditorHeight=10;static modulators=fe([{name:"none",pianoName:"None",maxRawVol:6,newNoteVol:6,forSong:!0,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"No Mod Setting",promptDesc:["No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.","[$LO - $HI]"]},{name:"song volume",pianoName:"Volume",maxRawVol:100,newNoteVol:100,forSong:!0,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Song Volume",promptDesc:["This setting affects the overall volume of the song, just like the main volume slider.","At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"tempo",pianoName:"Tempo",maxRawVol:o.tempoMax-o.tempoMin,newNoteVol:Math.ceil((o.tempoMax-o.tempoMin)/2),forSong:!0,convertRealFactor:o.tempoMin,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Song Tempo",promptDesc:["This setting controls the speed your song plays at, just like the tempo slider.","When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.","Note that you can make a 'swing' effect by rapidly changing between two tempo values.","[OVERWRITING] [$LO - $HI] [BPM]"]},{name:"song reverb",pianoName:"Reverb",maxRawVol:o.reverbRange*2,newNoteVol:o.reverbRange,forSong:!0,convertRealFactor:-o.reverbRange,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Song Reverb",promptDesc:["This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.","At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"next bar",pianoName:"Next Bar",maxRawVol:1,newNoteVol:1,forSong:!0,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Go To Next Bar",promptDesc:["This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.","This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.","You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.","[$LO - $HI]"]},{name:"pre volume",pianoName:"Note Vol.",maxRawVol:o.volumeRange,newNoteVol:Math.ceil(o.volumeRange/2),forSong:!1,convertRealFactor:Math.ceil(-o.volumeRange/2),associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Pre Volume",promptDesc:["This setting affects the volume of your instrument as if its note size had been scaled.","At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.","This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, pre volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'post volume' modulator instead, which will always just scale the volume with no added effects.","For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'post volume' modulator anyhow. However, as mentioned, it works more like changing pre volume.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"gain",pianoName:"Gain",maxRawVol:o.volumeRange/2*o.gainRangeMult,newNoteVol:Math.ceil(o.volumeRange/2*o.gainRangeMult/2),forSong:!1,convertRealFactor:0,associatedEffect:9,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Gain",promptDesc:["This setting controls the gain of your instrument.","At $LO, the instrument is muted, at $MID it will be unchanged, and at $HI, it will have maximum gain.","[OVERWRITING] [$LO - $HI] [L-R]"]},{name:"pan",pianoName:"Pan",maxRawVol:o.panMax,newNoteVol:Math.ceil(o.panMax/2),forSong:!1,convertRealFactor:0,associatedEffect:2,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Panning",promptDesc:["This setting controls the panning of your instrument, just like the panning slider.","At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.","[OVERWRITING] [$LO - $HI] [L-R]"]},{name:"reverb",pianoName:"Reverb",maxRawVol:o.reverbRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:0,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Reverb",promptDesc:["This setting controls the reverb of your insturment, just like the reverb slider.","At $LO, your instrument will have no reverb. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"distortion",pianoName:"Distortion",maxRawVol:o.distortionRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:3,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Distortion",promptDesc:["This setting controls the amount of distortion for your instrument, just like the distortion slider.","At $LO, your instrument will have no distortion. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"fm slider 1",pianoName:"FM 1",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Slider 1",promptDesc:["This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 2",pianoName:"FM 2",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Slider 2",promptDesc:["This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 3",pianoName:"FM 3",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Slider 3",promptDesc:["This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 4",pianoName:"FM 4",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Slider 4",promptDesc:["This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm feedback",pianoName:"FM Feedbck",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Feedback",promptDesc:["This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"pulse width",pianoName:"Pulse Width",maxRawVol:o.pulseWidthRange,newNoteVol:o.pulseWidthRange,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Pulse Width",promptDesc:["This setting controls the width of this instrument's pulse wave, just like the pulse width slider.","At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).","Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.","[OVERWRITING] [$LO - $HI] [%Duty]"]},{name:"detune",pianoName:"Detune",maxRawVol:o.detuneMax-o.detuneMin,newNoteVol:o.detuneCenter,forSong:!1,convertRealFactor:-o.detuneCenter,associatedEffect:11,associatedMDEffect:1,maxIndex:0,promptName:"Instrument Detune",promptDesc:["This setting controls the detune for this instrument, just like the detune slider.","At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.","[OVERWRITING] [$LO - $HI] [cents]"]},{name:"vibrato depth",pianoName:"Vibrato Depth",maxRawVol:50,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:2,maxIndex:0,promptName:"Vibrato Depth",promptDesc:["This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.","At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.","[OVERWRITING] [$LO - $HI] [pitch \xF725]"]},{name:"song detune",pianoName:"Detune",maxRawVol:o.songDetuneMax-o.songDetuneMin,newNoteVol:Math.ceil((o.songDetuneMax-o.songDetuneMin)/2),forSong:!0,convertRealFactor:-250,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Song Detune",promptDesc:["This setting controls the overall detune of the entire song. There is no associated slider.","At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.","[MULTIPLICATIVE] [$LO - $HI] [cents x4]"]},{name:"vibrato speed",pianoName:"Vibrato Speed",maxRawVol:30,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:2,maxIndex:0,promptName:"Vibrato Speed",promptDesc:["This setting controls the speed your instrument will vibrato at, just like the slider.","A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"vibrato delay",pianoName:"Vibrato Delay",maxRawVol:50,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:2,maxIndex:0,promptName:"Vibrato Delay",promptDesc:["This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.","A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).","[OVERWRITING] [$LO - $HI] [beats \xF724]"]},{name:"arp speed",pianoName:"Arp Speed",maxRawVol:50,newNoteVol:12,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:4,maxIndex:0,promptName:"Arpeggio Speed",promptDesc:["This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.","Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.","[0-4]: x0, x1/16, x\u215B, x\u2155, x\xBC,","[5-9]: x\u2153, x\u2156, x\xBD, x\u2154, x\xBE,","[10-14]: x\u2158, x0.9, x1, x1.1, x1.2,","[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,","[20-24]: x1.8, x1.9, x2, x2.1, x2.2,","[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,","[30-34]: x2.8, x2.9, x3, x3.1, x3.2,","[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,","[40-44]: x3.8, x3.9, x4, x4.15, x4.3,","[45-50]: x4.5, x4.8, x5, x5.5, x6, x8","[OVERWRITING] [$LO - $HI]"]},{name:"pan delay",pianoName:"Pan Delay",maxRawVol:20,newNoteVol:10,forSong:!1,convertRealFactor:0,associatedEffect:2,associatedMDEffect:6,maxIndex:0,promptName:"Panning Delay",promptDesc:["This setting controls the delay applied to panning for your instrument, just like the pan delay slider.","With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.","[OVERWRITING] [$LO - $HI]"]},{name:"reset arp",pianoName:"Reset Arp",maxRawVol:1,newNoteVol:1,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:4,maxIndex:0,promptName:"Reset Arpeggio",promptDesc:["This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.","This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.","[$LO - $HI]"]},{name:"post eq",pianoName:"PostEQ",maxRawVol:10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"EQ Filter",promptDesc:["This setting controls a few separate things for your instrument's EQ filter.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"pre eq",pianoName:"PreEQ",maxRawVol:10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:5,associatedMDEffect:6,maxIndex:0,promptName:"Note Filter",promptDesc:["This setting controls a few separate things for your instrument's note filter.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"bit crush",pianoName:"Bitcrush",maxRawVol:o.bitcrusherQuantizationRange-1,newNoteVol:Math.round(o.bitcrusherQuantizationRange/2),forSong:!1,convertRealFactor:0,associatedEffect:4,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Bit Crush",promptDesc:["This setting controls the bit crush of your instrument, just like the bit crush slider.","At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"freq crush",pianoName:"Freq Crush",maxRawVol:o.bitcrusherFreqRange-1,newNoteVol:Math.round(o.bitcrusherFreqRange/2),forSong:!1,convertRealFactor:0,associatedEffect:4,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Frequency Crush",promptDesc:["This setting controls the frequency crush of your instrument, just like the freq crush slider.","At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"echo",pianoName:"Echo",maxRawVol:o.echoSustainRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:6,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Echo Sustain",promptDesc:["This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.","At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"echo delay",pianoName:"Echo Delay",maxRawVol:o.echoDelayRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:6,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Echo Delay",promptDesc:["This setting controls the echo delay of your instrument, just like the echo delay slider.","At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.","[OVERWRITING] [$LO - $HI] [~beats \xF712]"]},{name:"echo ping pong",pianoName:"Ping-Pong",maxRawVol:o.panMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:6,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Ping Pong",promptDesc:["This setting controls the echo ping-pong of your instrument, just like the echo delay slider.","At $LO, the echo will start fully from the left-ear side. At $MID there will be no echo ping pong, and at $HI, it will start coming fully from the right.","[OVERWRITING] [$LO - $HI] [L-R]"]},{name:"flanger",pianoName:"Flanger",maxRawVol:o.flangerRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:10,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Flanger",promptDesc:["This setting controls the flanger strength of your instrument, just like the flanger slider.","At $LO, the flanger effect will be disabled. The strength of the flanger effect increases up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"flanger speed",pianoName:"Flanger Spd",maxRawVol:o.flangerSpeedRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:10,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Flanger Speed",promptDesc:["This setting controls the flanger speed of your instrument, just like the flanger speed slider."]},{name:"flanger depth",pianoName:"Flanger Dpth",maxRawVol:o.flangerDepthRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:10,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Flanger Depth",promptDesc:["This setting controls the flanger depth of your instrument, just like the flanger depth slider."]},{name:"flanger feedback",pianoName:"Flanger Fbck",maxRawVol:o.flangerFeedbackRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:10,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Flanger Feedback",promptDesc:["This setting controls the flanger feedback of your instrument, just like the flanger feedback slider."]},{name:"chorus",pianoName:"Chorus",maxRawVol:o.chorusRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:1,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Chorus",promptDesc:["This setting controls the chorus strength of your instrument, just like the chorus slider.","At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"post eq cut",pianoName:"PostEQ Cut",maxRawVol:o.filterSimpleCutRange-1,newNoteVol:o.filterSimpleCutRange-1,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"EQ Filter Cutoff Frequency",promptDesc:["This setting controls the filter cut position of your instrument, just like the filter cut slider.","This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.","[OVERWRITING] [$LO - $HI]"]},{name:"post eq peak",pianoName:"PostEQ Peak",maxRawVol:o.filterSimplePeakRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"EQ Filter Peak Gain",promptDesc:["This setting controls the filter peak position of your instrument, just like the filter peak slider.","This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.","[OVERWRITING] [$LO - $HI]"]},{name:"pre eq cut",pianoName:"PreEQ Cut",maxRawVol:o.filterSimpleCutRange-1,newNoteVol:o.filterSimpleCutRange-1,forSong:!1,convertRealFactor:0,associatedEffect:5,associatedMDEffect:6,maxIndex:0,promptName:"Note Filter Cutoff Frequency",promptDesc:["This setting controls the filter cut position of your instrument, just like the filter cut slider.","This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.","[OVERWRITING] [$LO - $HI]"]},{name:"pre eq peak",pianoName:"PreEQ Peak",maxRawVol:o.filterSimplePeakRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:5,associatedMDEffect:6,maxIndex:0,promptName:"Note Filter Peak Gain",promptDesc:["This setting controls the filter peak position of your instrument, just like the filter peak slider.","This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.","[OVERWRITING] [$LO - $HI]"]},{name:"pitch shift",pianoName:"Pitch Shift",maxRawVol:o.pitchShiftRange-1,newNoteVol:o.pitchShiftCenter,forSong:!1,convertRealFactor:-o.pitchShiftCenter,associatedEffect:11,associatedMDEffect:0,maxIndex:0,promptName:"Pitch Shift",promptDesc:["This setting controls the pitch offset of your instrument, just like the pitch shift slider.","At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.","[OVERWRITING] [$LO - $HI] [pitch]"]},{name:"sustain",pianoName:"Sustain",maxRawVol:o.stringSustainRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Picked String Sustain",promptDesc:["This setting controls the sustain of your picked string instrument, just like the sustain slider.","At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"post volume",pianoName:"Mix Vol.",maxRawVol:o.volumeRange,newNoteVol:Math.ceil(o.volumeRange/2),forSong:!1,convertRealFactor:Math.ceil(-o.volumeRange/2),associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Post Volume",promptDesc:["This setting affects the volume of your instrument as if its volume slider had been moved.","At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.","Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"fm slider 5",pianoName:"FM 5",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Slider 5",promptDesc:["This setting affects the strength of the fifth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 6",pianoName:"FM 6",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Slider 6",promptDesc:["This setting affects the strength of the sixth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"decimal offset",pianoName:"Decimal Offset",maxRawVol:99,newNoteVol:0,forSong:!1,convertRealFactor:0,invertSliderIndicator:!0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Decimal Offset",promptDesc:["This setting controls the decimal offset that is subtracted from the pulse width; use this for creating values like 12.5 or 6.25.","[$LO - $HI]"]},{name:"envelope speed",pianoName:"EnvelopeSpd",maxRawVol:50,newNoteVol:12,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Envelope Speed",promptDesc:["This setting controls how fast all of the envelopes for the instrument play.","At $LO, your instrument's envelopes will be frozen, and at values near there they will change very slowly. At 12, the envelopes will work as usual, performing at normal speed. This increases up to $HI, where the envelopes will change very quickly. The speeds are given below:","[0-4]: x0, x1/16, x\u215B, x\u2155, x\xBC,","[5-9]: x\u2153, x\u2156, x\xBD, x\u2154, x\xBE,","[10-14]: x\u2158, x0.9, x1, x1.1, x1.2,","[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,","[20-24]: x1.8, x1.9, x2, x2.1, x2.2,","[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,","[30-34]: x2.8, x2.9, x3, x3.1, x3.2,","[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,","[40-44]: x3.8, x3.9, x4, x4.15, x4.3,","[45-50]: x4.5, x4.8, x5, x5.5, x6, x8","[OVERWRITING] [$LO - $HI]"]},{name:"dynamism",pianoName:"Dynamism",maxRawVol:o.supersawDynamismMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Supersaw Dynamism",promptDesc:["This setting controls the supersaw dynamism of your instrument, just like the dynamism slider.","At $LO, your instrument will have only a single pulse contributing. Increasing this will raise the contribution of other waves which is similar to a chorus effect. The effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"spread",pianoName:"Spread",maxRawVol:o.supersawSpreadMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Supersaw Spread",promptDesc:["This setting controls the supersaw spread of your instrument, just like the spread slider.","At $LO, all the pulses in your supersaw will be at the same frequency. Increasing this value raises the frequency spread of the contributing waves, up to a dissonant spread at the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"saw shape",pianoName:"Saw Shape",maxRawVol:o.supersawShapeMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Supersaw Shape",promptDesc:["This setting controls the supersaw shape of your instrument, just like the Saw\u2194Pulse slider.","As the slider's name implies, this effect will give you a sawtooth wave at $LO, and a full pulse width wave at $HI. Values in between will be a blend of the two.","[OVERWRITING] [$LO - $HI] [%]"]},{name:"individual envelope speed",pianoName:"IndvEnvSpd",maxRawVol:63,newNoteVol:23,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:this.maxEnvelopeCount-1,promptName:"Individual Envelope Speed",promptDesc:["This setting controls how fast the specified envelope of the instrument will play.","At $LO, your the envelope will be frozen, and at values near there they will change very slowly. At 23, the envelope will work as usual, performing at normal speed. This increases up to $HI, where the envelope will change very quickly. The speeds are given below:","[0-4]: x0, x0.01, x0.02, x0.03, x0.04,","[5-9]: x0.05, x0.06, x0.07, x0.08, x0.09,","[10-14]: x0.1, x0.2, x0.25, x0.3, x0.33,","[15-19]: x0.4, x0.5, x0.6, x0.6667, x0.7,","[20-24]: x0.75, x0.8, x0.9, x1, x1.25,","[25-29]: x1.3333, x1.5, x1.6667, x1.75, x2,","[30-34]: x2.25, x2.5, x2.75, x3, x3.5,","[35-39]: x4, x4.5, x5, x5.5, x6,","[40-44]: x6.5, x7, x7.5, x8, x8.5,","[45-49]: x9, x9.5, x10, x11, x12","[50-54]: x13, x14, x15, x16, x17","[55-59]: x18, x19, x20, x24, x32","[60-63]: x40, x64, x128, x256","[OVERWRITING] [$LO - $HI]"]},{name:"song eq",pianoName:"Song EQ",maxRawVol:10,newNoteVol:0,forSong:!0,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Song EQ Filter",promptDesc:["This setting overwrites every instrument's eq filter. You can do this in a few separate ways, similar to the per instrument eq filter modulator.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"reset envelope",pianoName:"ResetEnv",maxRawVol:1,newNoteVol:1,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:this.maxEnvelopeCount-1,promptName:"Reset Envelope",promptDesc:["This setting functions a lot like the reset arp modulator. Wherever a note is placed, the envelope of this instrument at the specified index will reset at the very start of that note. ","[$LO - $HI]"]},{name:"ring modulation",pianoName:"Ring Mod",maxRawVol:o.ringModRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:7,associatedMDEffect:6,maxIndex:0,promptName:"Ring Modulation",promptDesc:["This setting controls the Ring Modulation effect in your instrument.","[OVERWRITING] [$LO - $HI]"]},{name:"ring mod hertz",pianoName:"Ring Mod(Hz)",maxRawVol:o.ringModHzRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:7,associatedMDEffect:6,maxIndex:0,promptName:"Ring Modulation (Hertz)",promptDesc:["This setting controls the Hertz (Hz) used in the Ring Modulation effect in your instrument.","[OVERWRITING] [$LO - $HI]"]},{name:"granular",pianoName:"Granular",maxRawVol:o.granularRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:8,associatedMDEffect:6,maxIndex:0,promptName:"Granular",promptDesc:["This setting controls the granular effect in your instrument.","[OVERWRITING] [$LO - $HI]"]},{name:"grain freq",pianoName:"Grain #",maxRawVol:o.grainAmountsMax,newNoteVol:8,forSong:!1,convertRealFactor:0,associatedEffect:8,associatedMDEffect:6,maxIndex:0,promptName:"Grain Count",promptDesc:["This setting controls the density of grains for the granular effect on your instrument.","[OVERWRITING] [$LO - $HI]"]},{name:"grain size",pianoName:"Grain Size",maxRawVol:o.grainSizeMax/o.grainSizeStep,newNoteVol:o.grainSizeMin/o.grainSizeStep,forSong:!1,convertRealFactor:0,associatedEffect:8,associatedMDEffect:6,maxIndex:0,promptName:"Grain Size",promptDesc:["This setting controls the grain size of the granular effect in your instrument.","The number shown in the mod channel is multiplied by "+o.grainSizeStep+" to get the actual grain size.","[OVERWRITING] [$LO - $HI]"]},{name:"grain range",pianoName:"Grain Range",maxRawVol:o.grainRangeMax/o.grainSizeStep,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:8,associatedMDEffect:6,maxIndex:0,promptName:"Grain Range",promptDesc:["This setting controls the range of values for your grain size of the granular effect in your instrument, from no variation to a lot","The number shown in the mod channel is multiplied by "+o.grainSizeStep+" to get the actual grain size.","[OVERWRITING] [$LO - $HI]"]},{name:"individual envelope lower bound",pianoName:"IndvEnvLow",maxRawVol:o.perEnvelopeBoundMax*10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:this.maxEnvelopeCount-1,promptName:"Individual Envelope Lower Bound",promptDesc:["This setting controls the envelope lower bound","At $LO, your the envelope will output an upper envelope bound to 0, and at $HI your envelope will output an upper envelope bound to 2.","This settings will not work if your lower envelope bound is higher than your upper envelope bound"]},{name:"individual envelope upper bound",pianoName:"IndvEnvUp",maxRawVol:o.perEnvelopeBoundMax*10,newNoteVol:10,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:this.maxEnvelopeCount-1,promptName:"Individual Envelope Upper Bound",promptDesc:["This setting controls the envelope upper bound","At $LO, your the envelope will output a 0 to lower envelope bound, and at $HI your envelope will output a 2 to lower envelope bound.","This settings will not work if your lower envelope bound is higher than your upper envelope bound"]}])};function J(o){let e=0;for(let n=0;n<o.length;n++)e+=o[n];let i=e/o.length;for(let n=0;n<o.length;n++)o[n]-=i;return Mt(o),o.push(0),new Float32Array(o)}function ne(o){let e=0;J(o);for(let n=0;n<o.length-1;n++)e+=Math.abs(o[n]);let i=e/(o.length-1);for(let n=0;n<o.length-1;n++)o[n]=o[n]/i;return new Float32Array(o)}function Mt(o){let e=0,i=new Float32Array(o.length);for(let n=0;n<o.length;n++)i[n]=e,e+=o[n];return i}function qa(o){let e=0;for(let i=0;i<o.length;i++){let n=o[i];o[i]=e,e+=n}}function Gn(o){return o/(t.pulseWidthRange*2)}function ln(o,e,i){let n=t.chipNoises[o].samples;if(n==null){if(n=new Float32Array(t.chipNoiseLength+1),t.chipNoises[o].samples=n,o==0){let S=1;for(let x=0;x<t.chipNoiseLength;x++){n[x]=(S&1)*2-1;let w=S>>1;(S+w&1)==1&&(w+=16384),S=w}}else if(o==1)for(let S=0;S<t.chipNoiseLength;S++)n[S]=Math.random()*2-1;else if(o==2){let S=1;for(let x=0;x<t.chipNoiseLength;x++){n[x]=(S&1)*2-1;let w=S>>1;(S+w&1)==1&&(w+=32768),S=w}}else if(o==3){let S=1;for(let x=0;x<t.chipNoiseLength;x++){n[x]=(S&1)*2-1;let w=S>>1;(S+w&1)==1&&(w+=40),S=w}}else if(o==4)Pt(n,t.chipNoiseLength,10,11,1,1,0),Pt(n,t.chipNoiseLength,11,14,.6578,.6578,0),e(n,t.chipNoiseLength),i(n,1/Math.sqrt(t.chipNoiseLength));else if(o==5)for(var a=1,s=0;s<t.chipNoiseLength;s++){n[s]=(a&1)*2-1;var r=a>>1;(a+r&1)==1&&(r+=40),a=r}else if(o==6)Pt(n,t.chipNoiseLength,1,10,1,1,0),Pt(n,t.chipNoiseLength,20,14,-2,-2,0),e(n,t.chipNoiseLength),i(n,1/Math.sqrt(t.chipNoiseLength));else if(o==7)for(var a=1,s=0;s<t.chipNoiseLength;s++){n[s]=(a&1)*4*(Math.random()*14+1)-8;var r=a>>1;(a+r&1)==1&&(r+=60),a=r}else if(o==8)for(var a=1,s=0;s<t.chipNoiseLength;s++){n[s]=(a&1)/2-.5;var r=a>>1;(a+r&1)==1&&(r-=40),a=r}else if(o==9){let S=1;for(let x=0;x<t.chipNoiseLength;x++){n[x]=(S&1)*2-1.1;let w=S>>1;(S+w&1)==1&&(w+=8^2<<16),S=w}}else if(o==10)for(let S=0;S<t.chipNoiseLength;S++)n[S]=Math.round(Math.random());else if(o==11)for(var a=1,s=0;s<t.chipNoiseLength;s++){n[s]=Math.round(a&1);var r=a>>1;(a+r&1)==1&&(r-=40),a=r}else if(o==12)for(let S=0;S<t.chipNoiseLength;S++){var c=Math.random();n[S]=Math.pow(c,Math.clz32(c))}else if(o==13){var d=0,y=0,l=0,v,h,g,f;d=y=l=v=h=g=f=0;for(let S=0;S<t.chipNoiseLength;S++){var m=Math.random()*2-1;d=.99886*d+m*.0555179,y=.99332*y+m*.0750759,l=.969*l+m*.153852,v=.8665*v+m*.3104856,h=.55*h+m*.5329522,g=-.7616*g-m*.016898,n[S]=d+y+l+v+h+g+f+m*.5362,n[S]*=.44,f=m*.115926}}else if(o==14){var p=0;for(let S=0;S<t.chipNoiseLength;S++){var m=Math.random()*2-1;n[S]=(p+.02*m)/1.02,p=n[S],n[S]*=14}}else throw new Error("Unrecognized drum index: "+o);n[t.chipNoiseLength]=n[0]}return n}function Pt(o,e,i,n,a,s,r){let y=Math.pow(2,i)|0,l=Math.min(e>>1,Math.pow(2,n)|0),v=ln(0,null,null),h=0;for(let g=y;g<l;g++){let f=a+(s-a)*(Math.log2(g)-i)/(n-i),m=Math.pow(2,(f-1)*7+1)*f;m*=Math.pow(g/2048,r),h+=m,m*=v[g];let p=.61803398875*g*g*Math.PI*2;o[g]=Math.cos(p)*m,o[e-g]=Math.sin(p)*m}return h}function Ht(o,e,i){let n=t.arpeggioPatterns[o-1];return n!=null?(o==2&&e==!1&&(n=[0,0,1,1]),n[i%n.length]):i%o}function fe(o){let e={};for(let n=0;n<o.length;n++){let a=o[n];a.index=n,e[a.name]=a}let i=o;return i.dictionary=e,i}function Gt(o){return(o&8)!=0}function Ut(o){return(o&16)!=0}function Dt(o){return(o&1)!=0}function Tt(o){return(o&2)!=0}function At(o){return(o&4)!=0}function Un(o,e=0){return o==0?0:(o>0&&(o-=1/t.ringModHzRange),o>1/t.ringModHzRange&&(o+=1/t.ringModHzRange),Math.floor(t.ringModMinHz*Math.pow(t.ringModMaxHz/t.ringModMinHz,o)))}function Co(o){let e=new Array(o.length),i={};for(let a=0;a<e.length;a++){e[a]=Object.assign([],o[a]);let s=e[a];s.index=a,i[s.name]=s}for(let a in i)i[a].samples=Mt(i[a].samples);let n=e;return n.dictionary=i,n}var Ra=`:root {
    --page-margin: #1e0915;
    --editor-background: #1e0915;
    --playhead: rgba(255, 255, 255, 0.9);
    --secondary-text: #ffcedd;
    --box-selection-fill: #1e0915;
    --loop-accent: #873a51;
    --link-accent: #df88ff;
    --ui-widget-background: #581b3e;
    --ui-widget-focus: #762b4c;
    --pitch-background: #381d24;
    --tonic: #873a51;
    --fifth-note: #75001e;
    --white-piano-key: #cca5c7;
    --black-piano-key: #402f2f;
    --use-color-formula: true;
    --track-editor-bg-pitch: #571c40;
    --track-editor-bg-pitch-dim: #290d0d;
    --track-editor-bg-noise: #571131;
    --track-editor-bg-noise-dim: #330a28;
    --track-editor-bg-mod: #54083c;
    --track-editor-bg-mod-dim: #360426;
    --multiplicative-mod-slider: #9f6082;
    --overwriting-mod-slider: #9e3470;
    --indicator-primary: #b3498f;
    --indicator-secondary: #541d40;
    --select2-opt-group: #4f191e;
    --input-box-outline: #18041a;
    --mute-button-normal: #dd5d94;
    --mute-button-mod: #ba364c;
    --mod-label-primary: #541625;
    --mod-label-secondary-text: rgb(120, 87, 86);
    --mod-label-primary-text: gray;

    --pitch-secondary-channel-hue: -80;
    --pitch-secondary-channel-hue-scale 0;
    --pitch-secondary-channel-sat: 43;
    --pitch-secondary-channel-sat-scale: 0.1;
    --pitch-secondary-channel-lum: 40;
    --pitch-secondary-channel-lum-scale: 0.05;

    --pitch-primary-channel-hue: -53;
    --pitch-primary-channel-hue-scale: 6.1;
    --pitch-primary-channel-sat: 75;
    --pitch-primary-channel-sat-scale: 0.1;
    --pitch-primary-channel-lum: 67.5;
    --pitch-primary-channel-lum-scale: 0.05;

    --pitch-secondary-note-hue: -34;
    --pitch-secondary-note-hue-scale: 6.1;
    --pitch-secondary-note-sat: 93.9;
    --pitch-secondary-note-sat-scale: 0.1;
    --pitch-secondary-note-lum: 25;
    --pitch-secondary-note-lum-scale: 0.05;

    --pitch-primary-note-hue: -53;
    --pitch-primary-note-hue-scale: 6.1;
    --pitch-primary-note-sat: 100;
    --pitch-primary-note-sat-scale: 0.05;
    --pitch-primary-note-lum: 85.6;
    --pitch-primary-note-lum-scale: 0.025;

    --noise-secondary-channel-hue: 0;
    --noise-secondary-channel-hue-scale: 2;
    --noise-secondary-channel-sat: 65;
    --noise-secondary-channel-sat-scale: 0;
    --noise-secondary-channel-lum: 42;
    --noise-secondary-channel-lum-scale: 0;

    --noise-primary-channel-hue: 0;
    --noise-primary-channel-hue-scale: 1;
    --noise-primary-channel-sat: 100;
    --noise-primary-channel-sat-scale: 1;
    --noise-primary-channel-lum: 63.5;
    --noise-primary-channel-lum-scale: 0;

    --noise-secondary-note-hue: 24;
    --noise-secondary-note-hue-scale: 2;
    --noise-secondary-note-sat: 100;
    --noise-secondary-note-sat-scale: 0;
    --noise-secondary-note-lum: 35;
    --noise-secondary-note-lum-scale: 0;

    --noise-primary-note-hue: 24;
    --noise-primary-note-hue-scale: 2;
    --noise-primary-note-sat: 100;
    --noise-primary-note-sat-scale: 1;
    --noise-primary-note-lum: 60;
    --noise-primary-note-lum-scale: 1;

    --mod-secondary-channel-hue: 55;
    --mod-secondary-channel-hue-scale: 1.5;
    --mod-secondary-channel-sat: 100;
    --mod-secondary-channel-sat-scale: 0;
    --mod-secondary-channel-lum: 20;
    --mod-secondary-channel-lum-scale: 0;

    --mod-primary-channel-hue: 55;
    --mod-primary-channel-hue-scale: 1.5;
    --mod-primary-channel-sat: 96;
    --mod-primary-channel-sat-scale: 0;
    --mod-primary-channel-lum: 50;
    --mod-primary-channel-lum-scale: 0;

    --mod-secondary-note-hue: 55;
    --mod-secondary-note-hue-scale: 1.5;
    --mod-secondary-note-sat: 92;
    --mod-secondary-note-sat-scale: 0;
    --mod-secondary-note-lum: 45;
    --mod-secondary-note-lum-scale: 0;

    --mod-primary-note-hue: 55;
    --mod-primary-note-hue-scale: 1.5;
    --mod-primary-note-sat: 96;
    --mod-primary-note-sat-scale: 0;
    --mod-primary-note-lum: 85;
    --mod-primary-note-lum-scale: 0;

    --note-flash: #ffffff;
    --note-flash-secondary: #ffffff77;

    --oscilloscope-line-R: var(--ui-widget-background);
    --oscilloscope-line-L: var(--secondary-text);
    --text-spacing-icon: >;
    --scrollbar-color: #bf2c5d;

    --file-page-symbol: url("theme_resources/icon-file.png");
    --edit-pencil-symbol: url("theme_resources/icon-edit.png");
    --preferences-gear-symbol: url("theme_resources/icon-preferences.png");
    --instrument-copy-symbol: url("theme_resources/icon-copy.png");
    --instrument-paste-symbol: url("theme_resources/icon-paste.png");
    --play-symbol: url("theme_resources/icon-play.png");
    --pause-symbol: url("theme_resources/icon-pause.png");
    --record-symbol: url("theme_resources/icon-record.png");
    --stop-symbol: url("theme_resources/icon-stop.png");
    --prev-bar-symbol: url("theme_resources/icon-prev.png");
    --next-bar-symbol: url("theme_resources/icon-next.png");
    --muted-symbol: url("theme_resources/icon-speakerMuted.png");
    --unmuted-symbol: url("theme_resources/icon-speaker.png");
    --volume-symbol: url("theme_resources/icon-speaker.png");
    --zoom-in-symbol: url("theme_resources/icon-zoomIn.png");
    --zoom-out-symbol: url("theme_resources/icon-zoomOut.png");
    --export-symbol: url("theme_resources/icon-export.png");
}

* {
    cursor: url("theme_resources/abyssbox_cursor.png"), auto;
}

@font-face {
    font-family: "AbyssType";
    src:
        url("theme_resources/abysstype.otf") format("opentype") tech(color-COLRv1),
}

/* sets background image */
body {
    background-image: url("theme_resources/stripesbg.gif") !important;
    background-position: center;
    background-repeat: repeat;

    image-rendering: -moz-crisp-edges !important;
    /* Firefox */
    image-rendering: -webkit-optimize-contrast !important;
    /* Webkit (Chrome/Safari) */
    image-rendering: -o-crisp-edges !important;
    /* Opera */
    image-rendering: pixelated !important;
    /* Future browsers */
    image-rendering: optimizeSpeed !important;
    /* IE */
}

#text-content {
    border-image-source: url("theme_resources/abyssbox_border.png");
    border-image-slice: 4 fill;
    border-image-width: 8px;
    border-image-repeat: stretch;
    padding: 12px;

    image-rendering: -moz-crisp-edges !important;
    /* Firefox */
    image-rendering: -webkit-optimize-contrast !important;
    /* Webkit (Chrome/Safari) */
    image-rendering: -o-crisp-edges !important;
    /* Opera */
    image-rendering: pixelated !important;
    /* Future browsers */
    image-rendering: optimizeSpeed !important;
    /* IE */
}

#beepboxEditorContainer {
    border-image-source: url("theme_resources/abyssbox_border.png");
    border-image-slice: 4 fill;
    border-image-width: 8px;
    border-image-repeat: stretch;
    padding: 12px;

    image-rendering: -moz-crisp-edges !important;
    /* Firefox */
    image-rendering: -webkit-optimize-contrast !important;
    /* Webkit (Chrome/Safari) */
    image-rendering: -o-crisp-edges !important;
    /* Opera */
    image-rendering: pixelated !important;
    /* Future browsers */
    image-rendering: optimizeSpeed !important;
    /* IE */
}

.beepboxEditor button,
button.playButton,
button.pauseButton,
button.recordButton,
button.stopButton,
button.nextBarButton,
button.prevBarButton,
button.copyButton,
button.pasteButton,
button.exportInstrumentButton,
button.importInstrumentButton,
.beepboxEditor select,
.beepboxEditor .select2-selection__rendered {
    border-image-source: url("theme_resources/abyssbox_border.png") !important;
    border-image-slice: 4 fill !important;
    border-image-width: 4px !important;
    border-image-repeat: stretch !important;
    padding: 4px !important;

    image-rendering: -moz-crisp-edges !important;
    /* Firefox */
    image-rendering: -webkit-optimize-contrast !important;
    /* Webkit (Chrome/Safari) */
    image-rendering: -o-crisp-edges !important;
    /* Opera */
    image-rendering: pixelated !important;
    /* Future browsers */
    image-rendering: optimizeSpeed !important;
    /* IE */

    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

div.selectRow button:not(.copyButton, .pasteButton, .exportInstrumentButton, .importInstrumentButton) {
    --ui-widget-background: #1e0915 !important;
    border-image-source: none !important;
}

select.trackSelectBox {
    border-image: none !important;
}

@font-face {
    font-family: "AbyssType_small";
    src:
        url("theme_resources/abysstype_small.otf") format("opentype") tech(color-COLRv1),
}

html {
    font-family: 'AbyssType';
}

div.channelBoxLabel {
    font-family: 'AbyssType_small' !important;
}

.beepboxEditor input[type="range"]::-webkit-slider-thumb {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="range"]::-webkit-slider-runnable-track {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="range"]:focus::-webkit-slider-runnable-track {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="range"]::-ms-thumb {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="range"]::-ms-track {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="range"]:focus::-ms-track {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="range"]::-moz-range-thumb {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="range"]::-moz-range-track {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="range"]:focus::-moz-range-track {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="text"],
.beepboxEditor input[type="number"] {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="checkbox"] {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="checkbox"]:checked {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="checkbox"]:checked:after {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

div.selectRow span {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}`;var Ba=`:root {
    --page-margin: #e0adbc;
    --editor-background: #e0adbc;
    --playhead: rgba(255, 255, 255, 0.9);
    --primary-text: #6110d9;
    --secondary-text: #cc1338;
    --inverted-text: #e8bcc9;
    --box-selection-fill: #bf2c5d;
    --loop-accent: #8c346a;
    --link-accent: #8c346a;
    --ui-widget-background: #f5e9f0;
    --ui-widget-focus: #f5e9f0;
    --pitch-background: #eddadf;
    --tonic: #f5f0f1;
    --fifth-note: #ffb5c9;
    --white-piano-key: #cca5c7;
    --black-piano-key: #402f2f;
    --use-color-formula: true;
    --track-editor-bg-pitch: #edbecc;
    --track-editor-bg-pitch-dim: #e0adbc;
    --track-editor-bg-noise: #edbecc;
    --track-editor-bg-noise-dim: #e0adbc;
    --track-editor-bg-mod: #edbecc;
    --track-editor-bg-mod-dim: #e0adbc;
    --multiplicative-mod-slider: #9f6082;
    --overwriting-mod-slider: #9e3470;
    --indicator-primary: #b3498f;
    --indicator-secondary: #541d40;
    --select2-opt-group: #4f191e;
    --input-box-outline: #18041a;
    --mute-button-normal: #dd5d94;
    --mute-button-mod: #ba364c;
    --mod-label-primary: #541625;
    --mod-label-secondary-text: rgb(120, 87, 86);
    --mod-label-primary-text: gray;
    --mod-title: #cc1338;

    --pitch-secondary-channel-hue: -80;
    --pitch-secondary-channel-hue-scale: 0;
    --pitch-secondary-channel-sat: 255;
    --pitch-secondary-channel-sat-scale: 0.1;
    --pitch-secondary-channel-lum: 30;
    --pitch-secondary-channel-lum-scale: 0.05;

    --pitch-primary-channel-hue: -53;
    --pitch-primary-channel-hue-scale: 6.1;
    --pitch-primary-channel-sat: 255;
    --pitch-primary-channel-sat-scale: 0.1;
    --pitch-primary-channel-lum: 60;
    --pitch-primary-channel-lum-scale: 0.05;

    --pitch-secondary-note-hue: -34;
    --pitch-secondary-note-hue-scale: 6.1;
    --pitch-secondary-note-sat: 255;
    --pitch-secondary-note-sat-scale: 0.1;
    --pitch-secondary-note-lum: 30;
    --pitch-secondary-note-lum-scale: 0.05;

    --pitch-primary-note-hue: -53;
    --pitch-primary-note-hue-scale: 6.1;
    --pitch-primary-note-sat: 255;
    --pitch-primary-note-sat-scale: 0.05;
    --pitch-primary-note-lum: 60;
    --pitch-primary-note-lum-scale: 0.025;

    --noise-secondary-channel-hue: 0;
    --noise-secondary-channel-hue-scale: 2;
    --noise-secondary-channel-sat: 255;
    --noise-secondary-channel-sat-scale: 0;
    --noise-secondary-channel-lum: 30;
    --noise-secondary-channel-lum-scale: 0;

    --noise-primary-channel-hue: 0;
    --noise-primary-channel-hue-scale: 1;
    --noise-primary-channel-sat: 255;
    --noise-primary-channel-sat-scale: 1;
    --noise-primary-channel-lum: 60;
    --noise-primary-channel-lum-scale: 0;

    --noise-secondary-note-hue: 24;
    --noise-secondary-note-hue-scale: 2;
    --noise-secondary-note-sat: 255;
    --noise-secondary-note-sat-scale: 0;
    --noise-secondary-note-lum: 30;
    --noise-secondary-note-lum-scale: 0;

    --noise-primary-note-hue: 24;
    --noise-primary-note-hue-scale: 2;
    --noise-primary-note-sat: 255;
    --noise-primary-note-sat-scale: 1;
    --noise-primary-note-lum: 60;
    --noise-primary-note-lum-scale: 1;

    --mod-secondary-channel-hue: 55;
    --mod-secondary-channel-hue-scale: 1.5;
    --mod-secondary-channel-sat: 255;
    --mod-secondary-channel-sat-scale: 0;
    --mod-secondary-channel-lum: 30;
    --mod-secondary-channel-lum-scale: 0;

    --mod-primary-channel-hue: 55;
    --mod-primary-channel-hue-scale: 1.5;
    --mod-primary-channel-sat: 255;
    --mod-primary-channel-sat-scale: 0;
    --mod-primary-channel-lum: 60;
    --mod-primary-channel-lum-scale: 0;

    --mod-secondary-note-hue: 55;
    --mod-secondary-note-hue-scale: 1.5;
    --mod-secondary-note-sat: 255;
    --mod-secondary-note-sat-scale: 0;
    --mod-secondary-note-lum: 30;
    --mod-secondary-note-lum-scale: 0;

    --mod-primary-note-hue: 55;
    --mod-primary-note-hue-scale: 1.5;
    --mod-primary-note-sat: 255;
    --mod-primary-note-sat-scale: 0;
    --mod-primary-note-lum: 60;
    --mod-primary-note-lum-scale: 0;

    --note-flash: #ffffff;
    --note-flash-secondary: #ffffff77;

    --oscilloscope-line-R: var(--ui-widget-background);
    --oscilloscope-line-L: var(--secondary-text);
    --text-spacing-icon: >;
    --scrollbar-color: #bf2c5d;

    --file-page-symbol: url("theme_resources/icon-file.png");
    --edit-pencil-symbol: url("theme_resources/icon-edit.png");
    --preferences-gear-symbol: url("theme_resources/icon-preferences.png");
    --instrument-copy-symbol: url("theme_resources/icon-copy.png");
    --instrument-paste-symbol: url("theme_resources/icon-paste.png");
    --play-symbol: url("theme_resources/icon-play.png");
    --pause-symbol: url("theme_resources/icon-pause.png");
    --record-symbol: url("theme_resources/icon-record.png");
    --stop-symbol: url("theme_resources/icon-stop.png");
    --prev-bar-symbol: url("theme_resources/icon-prev.png");
    --next-bar-symbol: url("theme_resources/icon-next.png");
    --muted-symbol: url("theme_resources/icon-speakerMuted.png");
    --unmuted-symbol: url("theme_resources/icon-speaker.png");
    --volume-symbol: url("theme_resources/icon-speaker.png");
    --zoom-in-symbol: url("theme_resources/icon-zoomIn.png");
    --zoom-out-symbol: url("theme_resources/icon-zoomOut.png");
    --export-symbol: url("theme_resources/icon-export.png");
}

/* sets background image */
body {
    background-image: url("theme_resources/stripesbg_light.gif") !important;
    background-position: center;
    background-repeat: repeat;

    image-rendering: -moz-crisp-edges !important;
    /* Firefox */
    image-rendering: -webkit-optimize-contrast !important;
    /* Webkit (Chrome/Safari) */
    image-rendering: -o-crisp-edges !important;
    /* Opera */
    image-rendering: pixelated !important;
    /* Future browsers */
    image-rendering: optimizeSpeed !important;
    /* IE */
}

#text-content {
    border-image-source: url("theme_resources/abyssbox_border_light.png");
    border-image-slice: 4 fill;
    border-image-width: 8px;
    border-image-repeat: stretch;
    padding: 12px;

    image-rendering: -moz-crisp-edges !important;
    /* Firefox */
    image-rendering: -webkit-optimize-contrast !important;
    /* Webkit (Chrome/Safari) */
    image-rendering: -o-crisp-edges !important;
    /* Opera */
    image-rendering: pixelated !important;
    /* Future browsers */
    image-rendering: optimizeSpeed !important;
    /* IE */
}

#beepboxEditorContainer {
    border-image-source: url("theme_resources/abyssbox_border_light.png");
    border-image-slice: 4 fill;
    border-image-width: 8px;
    border-image-repeat: stretch;
    padding: 12px;

    image-rendering: -moz-crisp-edges !important;
    /* Firefox */
    image-rendering: -webkit-optimize-contrast !important;
    /* Webkit (Chrome/Safari) */
    image-rendering: -o-crisp-edges !important;
    /* Opera */
    image-rendering: pixelated !important;
    /* Future browsers */
    image-rendering: optimizeSpeed !important;
    /* IE */
}

.beepboxEditor button,
button.playButton,
button.pauseButton,
button.recordButton,
button.stopButton,
button.nextBarButton,
button.prevBarButton,
button.copyButton,
button.pasteButton,
button.exportInstrumentButton,
button.importInstrumentButton,
.beepboxEditor select,
.beepboxEditor .select2-selection__rendered {
    border-image-source: url("theme_resources/abyssbox_border_light.png") !important;
    border-image-slice: 4 fill !important;
    border-image-width: 4px !important;
    border-image-repeat: stretch !important;
    padding: 4px !important;

    image-rendering: -moz-crisp-edges !important;
    /* Firefox */
    image-rendering: -webkit-optimize-contrast !important;
    /* Webkit (Chrome/Safari) */
    image-rendering: -o-crisp-edges !important;
    /* Opera */
    image-rendering: pixelated !important;
    /* Future browsers */
    image-rendering: optimizeSpeed !important;
    /* IE */

    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

div.selectRow button:not(.copyButton, .pasteButton, .exportInstrumentButton, .importInstrumentButton) {
    --ui-widget-background: var(--editor-background) !important;
    border-image-source: none !important;
}

select.trackSelectBox {
    border-image: none !important;
}

/* sets cursor */
* {
    cursor: url("theme_resources/abyssbox_cursor.png"), auto !important;
}

@font-face {
    font-family: "AbyssType";
    src:
        url("theme_resources/abysstype.otf") format("opentype") tech(color-COLRv1),
}

@font-face {
    font-family: "AbyssType_small";
    src:
        url("theme_resources/abysstype_small.otf") format("opentype") tech(color-COLRv1),
}

html {
    font-family: 'AbyssType';
}

div.channelBoxLabel {
    font-family: 'AbyssType_small' !important;
}

.beepboxEditor input[type="range"]::-webkit-slider-thumb {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="range"]::-webkit-slider-runnable-track {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="range"]:focus::-webkit-slider-runnable-track {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="range"]::-ms-thumb {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="range"]::-ms-track {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="range"]:focus::-ms-track {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="range"]::-moz-range-thumb {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="range"]::-moz-range-track {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="range"]:focus::-moz-range-track {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="text"],
.beepboxEditor input[type="number"] {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="checkbox"] {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="checkbox"]:checked {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

.beepboxEditor input[type="checkbox"]:checked:after {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}

div.selectRow span {
    cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
}`;var Na=`:root {
    --page-margin: #000;
    --editor-background: #020406;
    --playhead: rgba(255, 255, 255, 0.9);
    --secondary-text: #8e88ce;
    --box-selection-fill: #044b94;
    --loop-accent: #ad38f9;
    --link-accent: #bd25ff;
    --ui-widget-background: #080d1f;
    --ui-widget-focus: #060f2d;
    --pitch-background: #02060b;
    --tonic: #00113a;
    --fifth-note: #1b0019;
    --white-piano-key: #02040c;
    --black-piano-key: #02040c;
    --white-piano-key-text: #fff;
    --use-color-formula: true;
    --track-editor-bg-pitch: #050829;
    --track-editor-bg-pitch-dim: #010213;
    --track-editor-bg-noise: #051529;
    --track-editor-bg-noise-dim: #010b13;
    --track-editor-bg-mod: #150529;
    --track-editor-bg-mod-dim: #0a0113;
    --multiplicative-mod-slider: #2b409c;
    --overwriting-mod-slider: #6850b5;
    --indicator-primary: #7f3bec;
    --indicator-secondary: #213888;
    --select2-opt-group: #1d123c;
    --input-box-outline: #1b1e48;
    --mute-button-normal: #d234b0;
    --mute-button-mod: #263d98;
    --mod-label-primary: #090910;
    --mod-label-secondary-text: rgb(73, 69, 214);
    --mod-label-primary-text: white;
    --pitch-secondary-channel-hue: 183;
    --pitch-secondary-channel-hue-scale: 158.7;
    --pitch-secondary-channel-sat: 83.3;
    --pitch-secondary-channel-sat-scale: 0.1;
    --pitch-secondary-channel-lum: 40;
    --pitch-secondary-channel-lum-scale: 0.05;
    --pitch-primary-channel-hue: 183;
    --pitch-primary-channel-hue-scale: 158.7;
    --pitch-primary-channel-sat: 100;
    --pitch-primary-channel-sat-scale: 0.1;
    --pitch-primary-channel-lum: 67.5;
    --pitch-primary-channel-lum-scale: 0.05;
    --pitch-secondary-note-hue: 183;
    --pitch-secondary-note-hue-scale: 158.7;
    --pitch-secondary-note-sat: 93.9;
    --pitch-secondary-note-sat-scale: 0.1;
    --pitch-secondary-note-lum: 25;
    --pitch-secondary-note-lum-scale: 0.05;
    --pitch-primary-note-hue: 183;
    --pitch-primary-note-hue-scale: 158.7;
    --pitch-primary-note-sat: 100;
    --pitch-primary-note-sat-scale: 0.05;
    --pitch-primary-note-lum: 85.6;
    --pitch-primary-note-lum-scale: 0.025;
    --noise-secondary-channel-hue: 30;
    --noise-secondary-channel-hue-scale: 2;
    --noise-secondary-channel-sat: 25;
    --noise-secondary-channel-sat-scale: 0;
    --noise-secondary-channel-lum: 42;
    --noise-secondary-channel-lum-scale: 0;
    --noise-primary-channel-hue: 30;
    --noise-primary-channel-hue-scale: 2;
    --noise-primary-channel-sat: 33;
    --noise-primary-channel-sat-scale: 0;
    --noise-primary-channel-lum: 63.5;
    --noise-primary-channel-lum-scale: 0;
    --noise-secondary-note-hue: 30;
    --noise-secondary-note-hue-scale: 2;
    --noise-secondary-note-sat: 33.5;
    --noise-secondary-note-sat-scale: 0;
    --noise-secondary-note-lum: 55;
    --noise-secondary-note-lum-scale: 0;
    --noise-primary-note-hue: 30;
    --noise-primary-note-hue-scale: 2;
    --noise-primary-note-sat: 46.5;
    --noise-primary-note-sat-scale: 0;
    --noise-primary-note-lum: 74;
    --noise-primary-note-lum-scale: 0;
    --mod-secondary-channel-hue: 0;
    --mod-secondary-channel-hue-scale: 1.5;
    --mod-secondary-channel-sat: 88;
    --mod-secondary-channel-sat-scale: 0;
    --mod-secondary-channel-lum: 50;
    --mod-secondary-channel-lum-scale: 0;
    --mod-primary-channel-hue: 0;
    --mod-primary-channel-hue-scale: 1.5;
    --mod-primary-channel-sat: 96;
    --mod-primary-channel-sat-scale: 0;
    --mod-primary-channel-lum: 80;
    --mod-primary-channel-lum-scale: 0;
    --mod-secondary-note-hue: 0;
    --mod-secondary-note-hue-scale: 1.5;
    --mod-secondary-note-sat: 92;
    --mod-secondary-note-sat-scale: 0;
    --mod-secondary-note-lum: 45;
    --mod-secondary-note-lum-scale: 0;
    --mod-primary-note-hue: 0;
    --mod-primary-note-hue-scale: 1.5;
    --mod-primary-note-sat: 96;
    --mod-primary-note-sat-scale: 0;
    --mod-primary-note-lum: 85;
    --mod-primary-note-lum-scale: 0;
    --disabled-note-primary: #91879f;
    --disabled-note-secondary: #6a677a;
}`;var za=`:root {
    --page-margin: #060304;
    --editor-background: #060304;
    --text-selection: rgb(115 80 76);
    --box-selection-fill: rgb(174 73 81 / 45%);
    --loop-accent: #834A69;
    --ui-widget-background: #2a2523;
    --ui-widget-focus: #4e4c44;
    --pitch-background: #121212;
    --tonic: #4f4f4f;
    --fifth-note: #222;
    --white-piano-key: #b59b9b;
    --black-piano-key: #231e1e;
    --track-editor-bg-pitch: #352f38;
    --track-editor-bg-pitch-dim: #232025;
    --track-editor-bg-noise: #3c3029;
    --track-editor-bg-noise-dim: #251d19;
    --track-editor-bg-mod: #202623;
    --track-editor-bg-mod-dim: #131715;
    --multiplicative-mod-slider: #D9D16E;
    --overwriting-mod-slider: #2D826F;
    --indicator-primary: #D9D16E;
    --indicator-secondary: #444226;
    --select2-opt-group: #20191c;
    --input-box-outline: #20191c;
    --mute-button-normal: var(--pitch2-primary-channel);
    --mute-button-mod: var(--pitch4-primary-channel);
    --pitch1-secondary-channel: #704a34;
    --pitch1-primary-channel: #D9895A;
    --pitch1-secondary-note: #704a34;
    --pitch1-primary-note: #D9895A;
    --pitch2-secondary-channel: #5f3538;
    --pitch2-primary-channel: #AE4951;
    --pitch2-secondary-note: #5f3538;
    --pitch2-primary-note: #AE4951;
    --pitch3-secondary-channel: #5c4336;
    --pitch3-primary-channel: #CA9A81;
    --pitch3-secondary-note: #5c4336;
    --pitch3-primary-note: #CA9A81;
    --pitch4-secondary-channel: #1d3143;
    --pitch4-primary-channel: #386995;
    --pitch4-secondary-note: #1d3143;
    --pitch4-primary-note: #386995;
    --pitch5-secondary-channel: #9c8a58;
    --pitch5-primary-channel: #D9D16E;
    --pitch5-secondary-note: #7c783f;
    --pitch5-primary-note: #D9D16E;
    --pitch6-secondary-channel: #886562;
    --pitch6-primary-channel: #D3A9A5;
    --pitch6-secondary-note: #886562;
    --pitch6-primary-note: #D3A9A5;
    --pitch7-secondary-channel: #1c3f37;
    --pitch7-primary-channel: #2D826F;
    --pitch7-secondary-note: #1c3f37;
    --pitch7-primary-note: #2D826F;
    --pitch8-secondary-channel: #442e2d;
    --pitch8-primary-channel: #815150;
    --pitch8-secondary-note: #442e2d;
    --pitch8-primary-note: #815150;
    --pitch9-secondary-channel: #8e6f60;
    --pitch9-primary-channel: #E5B8A1;
    --pitch9-secondary-note: #8e6f60;
    --pitch9-primary-note: #E5B8A1;
    --pitch10-secondary-channel: #4f3142;
    --pitch10-primary-channel: #834A69;
    --pitch10-secondary-note: #4f3142;
    --pitch10-primary-note: #834A69;
    --noise1-secondary-channel: #6b5346;
    --noise1-primary-channel: #b99c89;
    --noise1-secondary-note: #6b5346;
    --noise1-primary-note: #F0D0BB;
    --noise2-secondary-channel: #4a3839;
    --noise2-primary-channel: #9c6b6e;
    --noise2-secondary-note: #4a3839;
    --noise2-primary-note: #c18b8f;
    --noise3-secondary-channel: #2d3c4a;
    --noise3-primary-channel: #536e86;
    --noise3-secondary-note: #2d3c4a;
    --noise3-primary-note: #8fa8c0;
    --noise4-secondary-channel: #273f3a;
    --noise4-primary-channel: #4e8377;
    --noise4-secondary-note: #273f3a;
    --noise4-primary-note: #87baae;
    --noise5-secondary-channel: #372730;
    --noise5-primary-channel: #7f5e70;
    --noise5-secondary-note: #372730;
    --noise5-primary-note: #cc96b3;
    --mod1-secondary-channel: #783f1f;
    --mod1-primary-channel: #dc6d2c;
    --mod1-secondary-note: #783f1f;
    --mod1-primary-note: #dc6d2c;
    --mod2-secondary-channel: #0b3153;
    --mod2-primary-channel: #1464ac;
    --mod2-secondary-note: #0b3153;
    --mod2-primary-note: #1464ac;
    --mod3-secondary-channel: #075040;
    --mod3-primary-channel: #08a17f;
    --mod3-secondary-note: #075040;
    --mod3-primary-note: #08a17f;
    --mod4-secondary-channel: #631640;
    --mod4-primary-channel: #b4186d;
    --mod4-secondary-note: #631640;
    --mod4-primary-note: #b4186d;
    --mod-label-primary: #000;
    --mod-label-secondary-text: #707070;
    --mod-label-primary-text: white;
    --disabled-note-primary: #5d5d5d;
    --disabled-note-secondary: #292929;
}`;var Wa=`:root {
    --page-margin: #19337e;
    --editor-background: #000333cf;
    --playhead: rgba(255, 255, 255, 0.9);
    --primary-text: #9af9ff;
    --secondary-text: #4072dd;
    --box-selection-fill: #044b94;
    --loop-accent: #950d0d;
    --link-accent: #0072ff;
    --ui-widget-background: #255bb3;
    --ui-widget-focus: #757575;
    --pitch-background: #20468b73;
    --tonic: #c9c9c9;
    --fifth-note: #731d1d;
    --white-piano-key: #eee;
    --black-piano-key: #000;
    --track-editor-bg-pitch: #535a73;
    --track-editor-bg-pitch-dim: #353643;
    --track-editor-bg-noise: #770000;
    --track-editor-bg-noise-dim: #430000;
    --track-editor-bg-mod: #5d1d06;
    --track-editor-bg-mod-dim: #270000;
    --multiplicative-mod-slider: #bb0000;
    --overwriting-mod-slider: #ad0000;
    --indicator-primary: #9c64f7;
    --indicator-secondary: #393e4f;
    --select2-opt-group: #5d576f;
    --input-box-outline: #002957;
    --mute-button-normal: #ffffff;
    --mute-button-mod: #4f4f4f;
    --mod-label-primary: #531313;
    --pitch1-secondary-channel: #80858d;
    --pitch1-primary-channel: #f2f7ff;
    --pitch1-secondary-note: #80858d;
    --pitch1-primary-note: #f2f7ff;
    --pitch2-secondary-channel: #7392ad;
    --pitch2-primary-channel: #a8d6ff;
    --pitch2-secondary-note: #7392ad;
    --pitch2-primary-note: #a8d6ff;
    --pitch3-secondary-channel: #4b7eaa;
    --pitch3-primary-channel: #71bdff;
    --pitch3-secondary-note: #4b7eaa;
    --pitch3-primary-note: #71bdff;
    --pitch4-secondary-channel: #3594b1;
    --pitch4-primary-channel: #48d4ff;
    --pitch4-secondary-note: #3594b1;
    --pitch4-primary-note: #48d4ff;
    --pitch5-secondary-channel: #1b98b1;
    --pitch5-primary-channel: #30f1ff;
    --pitch5-secondary-note: #1b98b1;
    --pitch5-primary-note: #30f1ff;
    --pitch6-secondary-channel: #9e0000;
    --pitch6-primary-channel: #db0000;
    --pitch6-secondary-note: #9e0000;
    --pitch6-primary-note: #db0000;
    --pitch7-secondary-channel: #7c1717;
    --pitch7-primary-channel: #9e0000;
    --pitch7-secondary-note: #7c1717;
    --pitch7-primary-note: #9e0000;
    --pitch8-secondary-channel: #5c1f1f;
    --pitch8-primary-channel: #7c1717;
    --pitch8-secondary-note: #5c1f1f;
    --pitch8-primary-note: #7c1717;
    --pitch9-secondary-channel: #3e2020;
    --pitch9-primary-channel: #5c1f1f;
    --pitch9-secondary-note: #3e2020;
    --pitch9-primary-note: #5c1f1f;
    --pitch10-secondary-channel: #2f1c1c;
    --pitch10-primary-channel: #5c1f1f;
    --pitch10-secondary-note: #2f1c1c;
    --pitch10-primary-note: #5c1f1f;
    --noise1-secondary-channel: #828282;
    --noise1-primary-channel: #cacaca;
    --noise1-secondary-note: #828282;
    --noise1-primary-note: #cacaca;
    --noise2-secondary-channel: #2f8baf;
    --noise2-primary-channel: #3de2ff;
    --noise2-secondary-note: #2f8baf;
    --noise2-primary-note: #3de2ff;
    --noise3-secondary-channel: #6f50b1;
    --noise3-primary-channel: #8567ff;
    --noise3-secondary-note: #6f50b1;
    --noise3-primary-note: #8567ff;
    --noise4-secondary-channel: #d38900;
    --noise4-primary-channel: #ffb500;
    --noise4-secondary-note: #d38900;
    --noise4-primary-note: #ffb500;
    --noise5-secondary-channel: #af0008;
    --noise5-primary-channel: #00d70e;
    --noise5-secondary-note: #29b700;
    --noise5-primary-note: #00f7ff;
    --mod1-secondary-channel: #9d5bb9;
    --mod1-primary-channel: #e16bff;
    --mod1-secondary-note: #3a3ea4;
    --mod1-primary-note: #fff;
    --mod2-secondary-channel: #3a8d58;
    --mod2-primary-channel: #42ffff;
    --mod2-secondary-note: #3a8d58;
    --mod2-primary-note: #42ffff;
    --mod3-secondary-channel: #af6c00;
    --mod3-primary-channel: #fa0;
    --mod3-secondary-note: #0001a2;
    --mod3-primary-note: #970000;
    --mod4-secondary-channel: #d3d3d3;
    --mod4-primary-channel: #759bff;
    --mod4-secondary-note: #a00000;
    --mod4-primary-note: #fff;
    --disabled-note-primary: #3a3a3a;
    --disabled-note-secondary: #000;
}

/* replaces hotdog with an image of the girls using the same scratch sprites from the 404 page*/
#Hotdog {
    display: inline !important;
    content: url("theme_resources/AzurLaneThemeStarterSquad.png") !important;
    width: 75%;
    height: 75%;
    text-align: center;
    margin-top: 25px;
}

/* sets cursor */
* {
    cursor: url("theme_resources/AzurLaneThemeMouse.png"), auto !important;
}

/* sets background image */
body {
    background-image: url("theme_resources/AzurLaneThemeMemoryTaskBackground.png") !important;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}

/* make editor background transparent */
#beepboxEditorContainer,
.beepboxEditor,
#text-content {
    background: #0400257d !important;
}

#text-content>section>h1>font {
    display: none;
}

#text-content>section>h1 {
    margin: auto;
    content: url("theme_resources/AzurLaneThemeLogo.png");
}

.promptContainerBG::before {
    box-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);
}`;var Oa=`:root {
    --page-margin: #010121;
    --editor-background: #020222;
    --hover-preview: #f3ffff;
    --playhead: #fff;
    --primary-text: #c1f1ff;
    --secondary-text: #546775;
    --box-selection-fill: #3e0028;
    --loop-accent: #5e68fffc;
    --link-accent: #ff3ad5fc;
    --ui-widget-background: #1f2b52;
    --ui-widget-focus: #384e91;
    --pitch-background: #2c3155;
    --tonic: #935175;
    --fifth-note: #1f569f;
    --white-piano-key: #f3f2ff;
    --black-piano-key: #4b4471;
    --white-piano-key-text: #4b4471;
    --track-editor-bg-pitch: #34406c;
    --track-editor-bg-pitch-dim: #121931;
    --track-editor-bg-noise: #562e3b;
    --track-editor-bg-noise-dim: #161313;
    --track-editor-bg-mod: #372e66;
    --track-editor-bg-mod-dim: #2a1640;
    --multiplicative-mod-slider: #606c9f;
    --overwriting-mod-slider: #6850b5;
    --indicator-primary: #ff8bd1;
    --indicator-secondary: #393e4f;
    --select2-opt-group: #5d576f;
    --input-box-outline: #222;
    --mute-button-normal: #7ce1ff;
    --mute-button-mod: #db519d;
    --pitch1-secondary-channel: #329b70;
    --pitch1-primary-channel: #53ffb8;
    --pitch1-secondary-note: #4cb98c;
    --pitch1-primary-note: #98ffd4;
    --pitch2-secondary-channel: #b08e4d;
    --pitch2-primary-channel: #ffe185;
    --pitch2-secondary-note: #91782e;
    --pitch2-primary-note: #ffd968;
    --pitch3-secondary-channel: #018e8e;
    --pitch3-primary-channel: #3de4ff;
    --pitch3-secondary-note: #24b7b7;
    --pitch3-primary-note: #a7ffff;
    --pitch4-secondary-channel: #792354;
    --pitch4-primary-channel: #ff68bd;
    --pitch4-secondary-note: #a73c78;
    --pitch4-primary-note: #ff98d2;
    --pitch5-secondary-channel: #185aab;
    --pitch5-primary-channel: #6493ff;
    --pitch5-secondary-note: #3e99d9;
    --pitch5-primary-note: #b3e3ff;
    --pitch6-secondary-channel: #953C47;
    --pitch6-primary-channel: #FF7888;
    --pitch6-secondary-note: #DF4F60;
    --pitch6-primary-note: #FFB2BB;
    --pitch7-secondary-channel: #4f007d;
    --pitch7-primary-channel: #a54cd9;
    --pitch7-secondary-note: #732b9d;
    --pitch7-primary-note: #d386ff;
    --pitch8-secondary-channel: #323c99;
    --pitch8-primary-channel: #1b61ff;
    --pitch8-secondary-note: #1848b3;
    --pitch8-primary-note: #6f9bff;
    --pitch9-secondary-channel: #1F605A;
    --pitch9-primary-channel: #69FFEA;
    --pitch9-secondary-note: #178076;
    --pitch10-secondary-channel: #6D438C;
    --pitch10-secondary-note: #8040B0;
    --noise1-secondary-channel: #635070;
    --noise1-primary-channel: #9071db;
    --noise1-secondary-note: #915dc1;
    --noise1-primary-note: #c5a5ff;
    --noise2-secondary-channel: #993367;
    --noise2-primary-channel: #dd777c;
    --noise2-secondary-note: #cc6695;
    --noise2-primary-note: #f0bbd1;
    --noise3-secondary-channel: #4a8c8f;
    --noise3-primary-channel: #77c5dd;
    --noise3-secondary-note: #6fb4cf;
    --noise3-primary-note: #bbf2ff;
    --noise4-secondary-channel: #8e3e7d;
    --noise4-primary-channel: #c682d2;
    --noise4-secondary-note: #b871c1;
    --noise4-primary-note: #ffb8f0;
    --noise5-secondary-channel: #785e37;
    --noise5-primary-channel: #bb9d77;
    --noise5-secondary-note: #aa8c66;
    --noise5-primary-note: #e2d1b2;
    --mod1-secondary-channel: #4e8397;
    --mod1-primary-channel: #92e6f3;
    --mod1-secondary-note: #76b9d9;
    --mod1-primary-note: #cde3ff;
    --mod2-secondary-channel: #ad5774;
    --mod2-primary-channel: #eba4ae;
    --mod2-secondary-note: #c9719b;
    --mod2-primary-note: #fdcee7;
    --mod3-secondary-channel: #6f579f;
    --mod3-primary-channel: #b192f7;
    --mod3-secondary-note: #7c3fc8;
    --mod4-secondary-channel: #a88a36;
    --mod4-primary-channel: #bec825;
    --mod4-secondary-note: #aecb57;
    --mod4-primary-note: #dee9bd;
    --mod-label-primary: #2c2c56;
    --mod-label-secondary-text: rgb(71, 69, 147);
    --mod-label-primary-text: white;
    --disabled-note-primary: #91879f;
    --disabled-note-secondary: #6a677a;


}`;var Va=`:root {
    --page-margin: #040410;
    --editor-background: #040410;
    --secondary-text: #84859a;
    --box-selection-fill: #044b94;
    --link-accent: #024ACA;
    --ui-widget-background: #393e4f;
    --ui-widget-focus: #6d6886;
    --pitch-background: #393e4f;
    --tonic: #725491;
    --fifth-note: #54547a;
    --track-editor-bg-pitch: #393e4f;
    --track-editor-bg-pitch-dim: #1c1d28;
    --track-editor-bg-noise: #3d3535;
    --track-editor-bg-noise-dim: #161313;
    --track-editor-bg-mod: #283560;
    --track-editor-bg-mod-dim: #0a101f;
    --multiplicative-mod-slider: #606c9f;
    --overwriting-mod-slider: #6850b5;
    --indicator-primary: #9c64f7;
    --indicator-secondary: #393e4f;
    --select2-opt-group: #5d576f;
    --input-box-outline: #222;
    --mute-button-normal: #886eae;
    --pitch1-secondary-channel: #0A89FF;
    --pitch1-primary-channel: #024ACA;
    --pitch1-secondary-note: #0A89FF;
    --pitch1-primary-note: #024ACA;
    --pitch2-secondary-channel: #0A89FF;
    --pitch2-primary-channel: #024ACA;
    --pitch2-secondary-note: #0A89FF;
    --pitch2-primary-note: #024ACA;
    --pitch3-secondary-channel: #0A89FF;
    --pitch3-primary-channel: #024ACA;
    --pitch3-secondary-note: #0A89FF;
    --pitch3-primary-note: #024ACA;
    --pitch4-secondary-channel: #0A89FF;
    --pitch4-primary-channel: #024ACA;
    --pitch4-secondary-note: #0A89FF;
    --pitch4-primary-note: #024ACA;
    --pitch5-secondary-channel: #0A89FF;
    --pitch5-primary-channel: #024ACA;
    --pitch5-secondary-note: #0A89FF;
    --pitch5-primary-note: #024ACA;
    --pitch6-secondary-channel: #0A89FF;
    --pitch6-primary-channel: #024ACA;
    --pitch6-secondary-note: #0A89FF;
    --pitch6-primary-note: #024ACA;
    --pitch7-secondary-channel: #0A89FF;
    --pitch7-primary-channel: #024ACA;
    --pitch7-secondary-note: #0A89FF;
    --pitch7-primary-note: #024ACA;
    --pitch8-secondary-channel: #0A89FF;
    --pitch8-primary-channel: #024ACA;
    --pitch8-secondary-note: #0A89FF;
    --pitch8-primary-note: #024ACA;
    --pitch9-secondary-channel: #0A89FF;
    --pitch9-primary-channel: #024ACA;
    --pitch9-secondary-note: #0A89FF;
    --pitch9-primary-note: #024ACA;
    --pitch10-secondary-channel: #0A89FF;
    --pitch10-primary-channel: #024ACA;
    --pitch10-secondary-note: #0A89FF;
    --pitch10-primary-note: #024ACA;
    --noise1-secondary-channel: #0A89FF;
    --noise1-primary-channel: #024ACA;
    --noise1-secondary-note: #0A89FF;
    --noise1-primary-note: #024ACA;
    --noise2-secondary-channel: #0A89FF;
    --noise2-primary-channel: #024ACA;
    --noise2-secondary-note: #0A89FF;
    --noise2-primary-note: #024ACA;
    --noise3-secondary-channel: #0A89FF;
    --noise3-primary-channel: #024ACA;
    --noise3-secondary-note: #0A89FF;
    --noise3-primary-note: #024ACA;
    --noise4-secondary-channel: #0A89FF;
    --noise4-primary-channel: #024ACA;
    --noise4-secondary-note: #0A89FF;
    --noise4-primary-note: #024ACA;
    --mod1-secondary-channel: #0A89FF;
    --mod1-primary-channel: #024ACA;
    --mod1-secondary-note: #0A89FF;
    --mod1-primary-note: #024ACA;
    --mod2-secondary-channel: #0A89FF;
    --mod2-primary-channel: #024ACA;
    --mod2-secondary-note: #0A89FF;
    --mod2-primary-note: #024ACA;
    --mod3-secondary-channel: #0A89FF;
    --mod3-primary-channel: #024ACA;
    --mod3-secondary-note: #0A89FF;
    --mod3-primary-note: #024ACA;
    --mod4-secondary-channel: #0A89FF;
    --mod4-primary-channel: #024ACA;
    --mod4-secondary-note: #0A89FF;
    --mod4-primary-note: #024ACA;
    --mod-label-primary: #282840;
    --mod-label-secondary-text: rgb(87, 86, 120);
    --mod-label-primary-text: white;
}`;var Ha=`:root {
    --page-margin: #02070D;
    --editor-background: #02070D;
    --primary-text: #9bd1ee;
    --secondary-text: #5a6da8;
    --text-selection: rgb(68 68 255 / 99%);
    --box-selection-fill: rgb(0 0 255 / 30%);
    --loop-accent: #024aca;
    --link-accent: #024aca;
    --ui-widget-background: #161c2e;
    --ui-widget-focus: #262c3e;
    --pitch-background: #22272D;
    --tonic: #1b3056;
    --fifth-note: #344051;
    --white-piano-key: #a6c6ed;
    --black-piano-key: #2f4687;
    --track-editor-bg-pitch: #25284c;
    --track-editor-bg-pitch-dim: #211c26;
    --track-editor-bg-noise: #261f42;
    --track-editor-bg-noise-dim: #1a152d;
    --track-editor-bg-mod: #183049;
    --track-editor-bg-mod-dim: #102132;
    --multiplicative-mod-slider: #344a7f;
    --overwriting-mod-slider: #344a7f;
    --indicator-primary: #024aca;
    --indicator-secondary: #00177d;
    --select2-opt-group: #141e34;
    --input-box-outline: #141e34;
    --mute-button-normal: #273b9d;
    --mute-button-mod: #27989d;
    --pitch1-secondary-channel: hsl(200, 100%, 40%);
    --pitch1-primary-channel: #99ddff;
    --pitch1-secondary-note: hsl(200, 100%, 40%);
    --pitch1-primary-note: #99ddff;
    --pitch2-secondary-channel: hsl(212, 100%, 34%);
    --pitch2-primary-channel: #5BA8FF;
    --pitch2-secondary-note: hsl(212, 100%, 34%);
    --pitch2-primary-note: #5BA8FF;
    --pitch3-secondary-channel: #024ACA;
    --pitch3-primary-channel: #0A89FF;
    --pitch3-secondary-note: #024ACA;
    --pitch3-primary-note: #0A89FF;
    --pitch4-secondary-channel: #00177D;
    --pitch4-primary-channel: #024ACA;
    --pitch4-secondary-note: #00177D;
    --pitch4-primary-note: #024ACA;
    --pitch5-secondary-channel: #000e4e;
    --pitch5-primary-channel: #0023bf;
    --pitch5-secondary-note: #000e4e;
    --pitch5-primary-note: #0023bf;
    --pitch6-secondary-channel: #8990FE;
    --pitch6-primary-channel: #C2C6FF;
    --pitch6-secondary-note: #8990FE;
    --pitch6-primary-note: #C2C6FF;
    --pitch7-secondary-channel: #5E65D3;
    --pitch7-primary-channel: #8990FE;
    --pitch7-secondary-note: #5E65D3;
    --pitch7-primary-note: #8990FE;
    --pitch8-secondary-channel: #3138A6;
    --pitch8-primary-channel: #5E65D3;
    --pitch8-secondary-note: #3138A6;
    --pitch8-primary-note: #5E65D3;
    --pitch9-secondary-channel: #1B0B7F;
    --pitch9-primary-channel: #3138A6;
    --pitch9-secondary-note: #1B0B7F;
    --pitch9-primary-note: #3138A6;
    --pitch10-secondary-channel: #13015D;
    --pitch10-primary-channel: #1c02bd;
    --pitch10-secondary-note: #13015D;
    --pitch10-primary-note: #1c02bd;
    --noise1-secondary-channel: #A675FE;
    --noise1-primary-channel: #E2C9FF;
    --noise1-secondary-note: #A675FE;
    --noise1-primary-note: #E2C9FF;
    --noise2-secondary-channel: #6A31CA;
    --noise2-primary-channel: #A675FE;
    --noise2-secondary-note: #6A31CA;
    --noise2-primary-note: #A675FE;
    --noise3-secondary-channel: #5A1991;
    --noise3-primary-channel: #6A31CA;
    --noise3-secondary-note: #5A1991;
    --noise3-primary-note: #6A31CA;
    --noise4-secondary-channel: #2f1a68;
    --noise4-primary-channel: #5A1991;
    --noise4-secondary-note: #2f1a68;
    --noise4-primary-note: #5A1991;
    --noise5-secondary-channel: #211640;
    --noise5-primary-channel: #391b8d;
    --noise5-secondary-note: #211640;
    --noise5-primary-note: #391b8d;
    --mod1-secondary-channel: #25E2CD;
    --mod1-primary-channel: #BDFFCA;
    --mod1-secondary-note: #25E2CD;
    --mod1-primary-note: #BDFFCA;
    --mod2-secondary-channel: #0A98AC;
    --mod2-primary-channel: #25E2CD;
    --mod2-secondary-note: #0A98AC;
    --mod2-primary-note: #25E2CC;
    --mod3-secondary-channel: #005280;
    --mod3-primary-channel: #0A98AC;
    --mod3-secondary-note: #005280;
    --mod3-primary-note: #0A98AC;
    --mod4-secondary-channel: #0f3670;
    --mod4-primary-channel: #1369c1;
    --mod4-secondary-note: #0f3670;
    --mod4-primary-note: #1369c1;
    --mod-label-primary: #191d26;
    --mod-label-secondary-text: #024aca;
    --mod-label-primary-text: #ffffffa6;
    --disabled-note-primary: #c9c9c9;
    --disabled-note-secondary: #616161;
}`;var Ga=`:root {
    font: 16px/2 cursive;
    --page-margin: #4667CE;
    --editor-background: #4667CE;
    --track-editor-bg-pitch-dim: #444;
    --track-editor-bg-noise-dim: #444;
    --pitch-channel-limit: 3;
    --noise-channel-limit: 1;
    --pitch1-secondary-channel: #bda822;
    --pitch1-primary-channel: #fcdb00;
    --pitch1-secondary-note: #bda822;
    --pitch1-primary-note: #fcdb00;
    --pitch2-secondary-channel: #612278;
    --pitch2-primary-channel: #bb00ff;
    --pitch2-secondary-note: #612278;
    --pitch2-primary-note: #bb00ff;
    --pitch3-secondary-channel: #8b4343;
    --pitch3-primary-channel: #ff8844;
    --pitch3-secondary-note: #8b4343;
    --pitch3-primary-note: #ff8844;
    --pitch4-secondary-channel: #bda822;
    --pitch4-primary-channel: #fcdb00;
    --pitch4-secondary-note: #bda822;
    --pitch4-primary-note: #fcdb00;
    --pitch5-secondary-channel: #612278;
    --pitch5-primary-channel: #bb00ff;
    --pitch5-secondary-note: #612278;
    --pitch5-primary-note: #bb00ff;
    --pitch6-secondary-channel: #8b4343;
    --pitch6-primary-channel: #ff8844;
    --pitch6-secondary-note: #8b4343;
    --pitch6-primary-note: #ff8844;
    --pitch7-secondary-channel: #bda822;
    --pitch7-primary-channel: #fcdb00;
    --pitch7-secondary-note: #bda822;
    --pitch7-primary-note: #fcdb00;
    --pitch8-secondary-channel: #612278;
    --pitch8-primary-channel: #bb00ff;
    --pitch8-secondary-note: #612278;
    --pitch8-primary-note: #bb00ff;
    --pitch9-secondary-channel: #8b4343;
    --pitch9-primary-channel: #ff8844;
    --pitch9-secondary-note: #8b4343;
    --pitch9-primary-note: #ff8844;
    --pitch10-secondary-channel: #bda822;
    --pitch10-primary-channel: #fcdb00;
    --pitch10-secondary-note: #bda822;
    --pitch10-primary-note: #fcdb00;
    --noise1-secondary-channel: #991010;
}

.trackContainer .noSelection {
    background: black !important;
}

span input,
div.harmonics svg,
div.spectrum svg,
div.filterEditor svg,
div.fadeInOut svg,
div.loopEditor svg,
svg#firstImage,
div.trackContainer div.noSelection {
    background: black !important;
}

input,
textarea {
    background-color: black !important;
}

#text-content>section>h1 {
    color: white;
}`;var Ua=`:root {
    --page-margin: #0a0000;
    --editor-background: #0a0000;
    --playhead: rgba(247, 172, 196, 0.9);
    --primary-text: #f5d6bf;
    --secondary-text: #934050;
    --inverted-text: #290505;
    --text-selection: rgba(255, 208, 68, 0.99);
    --box-selection-fill: #94044870;
    --loop-accent: #ff1e1e;
    --link-accent: #da7b76;
    --ui-widget-background: #533137;
    --ui-widget-focus: #743e4b;
    --pitch-background: #4f3939;
    --tonic: #9e4145;
    --fifth-note: #5b3e6b;
    --white-piano-key: #d89898;
    --black-piano-key: #572b29;
    --black-piano-key-text: #ffffff;
    --use-color-formula: true;
    --track-editor-bg-pitch: #5e3a41;
    --track-editor-bg-pitch-dim: #281d1c;
    --track-editor-bg-noise: #3a3551;
    --track-editor-bg-noise-dim: #272732;
    --track-editor-bg-mod: #552045;
    --track-editor-bg-mod-dim: #3e1442;
    --multiplicative-mod-slider: #9f6095;
    --overwriting-mod-slider: #b55050;
    --indicator-primary: #f2f764;
    --indicator-secondary: #4f3939;
    --select2-opt-group: #673030;
    --input-box-outline: #443131;
    --mute-button-normal: #d81833;
    --mute-button-mod: #9e2691;
    --mod-label-primary: #5f2b39;
    --mod-label-secondary-text: rgb(158, 66, 122);
    --mod-label-primary-text: #e6caed;
    --pitch-secondary-channel-hue: 0;
    --pitch-secondary-channel-hue-scale: 11.8;
    --pitch-secondary-channel-sat: 73.3;
    --pitch-secondary-channel-sat-scale: 0.1;
    --pitch-secondary-channel-lum: 40;
    --pitch-secondary-channel-lum-scale: 0.05;
    --pitch-primary-channel-hue: 0;
    --pitch-primary-channel-hue-scale: 11.8;
    --pitch-primary-channel-sat: 90;
    --pitch-primary-channel-sat-scale: 0.1;
    --pitch-primary-channel-lum: 67.5;
    --pitch-primary-channel-lum-scale: 0.05;
    --pitch-secondary-note-hue: 0;
    --pitch-secondary-note-hue-scale: 11.8;
    --pitch-secondary-note-sat: 83.9;
    --pitch-secondary-note-sat-scale: 0.1;
    --pitch-secondary-note-lum: 35;
    --pitch-secondary-note-lum-scale: 0.05;
    --pitch-primary-note-hue: 0;
    --pitch-primary-note-hue-scale: 11.8;
    --pitch-primary-note-sat: 100;
    --pitch-primary-note-sat-scale: 0.05;
    --pitch-primary-note-lum: 85.6;
    --pitch-primary-note-lum-scale: 0.025;
    --noise-secondary-channel-hue: 60;
    --noise-secondary-channel-hue-scale: 2;
    --noise-secondary-channel-sat: 25;
    --noise-secondary-channel-sat-scale: 0;
    --noise-secondary-channel-lum: 42;
    --noise-secondary-channel-lum-scale: 0;
    --noise-primary-channel-hue: 60;
    --noise-primary-channel-hue-scale: 2;
    --noise-primary-channel-sat: 33;
    --noise-primary-channel-sat-scale: 0;
    --noise-primary-channel-lum: 63.5;
    --noise-primary-channel-lum-scale: 0;
    --noise-secondary-note-hue: 60;
    --noise-secondary-note-hue-scale: 2;
    --noise-secondary-note-sat: 33.5;
    --noise-secondary-note-sat-scale: 0;
    --noise-secondary-note-lum: 55;
    --noise-secondary-note-lum-scale: 0;
    --noise-primary-note-hue: 60;
    --noise-primary-note-hue-scale: 2;
    --noise-primary-note-sat: 46.5;
    --noise-primary-note-sat-scale: 0;
    --noise-primary-note-lum: 74;
    --noise-primary-note-lum-scale: 0;
    --mod-secondary-channel-hue: 222;
    --mod-secondary-channel-hue-scale: 1.5;
    --mod-secondary-channel-sat: 88;
    --mod-secondary-channel-sat-scale: 0;
    --mod-secondary-channel-lum: 50;
    --mod-secondary-channel-lum-scale: 0;
    --mod-primary-channel-hue: 222;
    --mod-primary-channel-hue-scale: 1.5;
    --mod-primary-channel-sat: 96;
    --mod-primary-channel-sat-scale: 0;
    --mod-primary-channel-lum: 80;
    --mod-primary-channel-lum-scale: 0;
    --mod-secondary-note-hue: 222;
    --mod-secondary-note-hue-scale: 1.5;
    --mod-secondary-note-sat: 92;
    --mod-secondary-note-sat-scale: 0;
    --mod-secondary-note-lum: 54;
    --mod-secondary-note-lum-scale: 0;
    --mod-primary-note-hue: 222;
    --mod-primary-note-hue-scale: 1.5;
    --mod-primary-note-sat: 96;
    --mod-primary-note-sat-scale: 0;
    --mod-primary-note-lum: 75;
    --mod-primary-note-lum-scale: 0;
    --disabled-note-primary: #515164;
    --disabled-note-secondary: #2a2a3a;
}`;var $a=`:root {
    --page-margin: #0f0700;
    --editor-background: #0f0700;
    --hover-preview: #75461d;
    --playhead: #75461d;
    --primary-text: #ddd;
    --secondary-text: #8e695b;
    --text-selection: #75461d;
    --box-selection-fill: rgba(117, 70, 29, 0.5);
    --loop-accent: #75461d;
    --link-accent: #75461d;
    --ui-widget-background: #574a3e;
    --ui-widget-focus: #756453;
    --pitch-background: #361900;
    --tonic: #fdba9a;
    --fifth-note: #7f78d2;
    --pitch1-secondary-channel: #798566;
    --pitch1-primary-channel: #9dab86;
    --pitch1-secondary-note: #798566;
    --pitch1-primary-note: #9dab86;
    --pitch2-secondary-channel: #a6733d;
    --pitch2-primary-channel: #e6a157;
    --pitch2-secondary-note: #a6733d;
    --pitch2-primary-note: #e6a157;
    --pitch3-secondary-channel: #874c27;
    --pitch3-primary-channel: #eb8242;
    --pitch3-secondary-note: #874c27;
    --pitch3-primary-note: #eb8242;
    --pitch4-secondary-channel: #395866;
    --pitch4-primary-channel: #537d91;
    --pitch4-secondary-note: #395866;
    --pitch4-primary-note: #537d91;
    --pitch5-secondary-channel: #779992;
    --pitch5-primary-channel: #a4d1c8;
    --pitch5-secondary-note: #779992;
    --pitch5-primary-note: #a4d1c8;
    --pitch7-secondary-channel: #300707;
    --pitch7-primary-channel: #560d0d;
    --pitch7-secondary-note: #300707;
    --pitch7-primary-note: #560d0d;
    --pitch8-secondary-channel: #486312;
    --pitch8-primary-channel: #76a21e;
    --pitch8-secondary-note: #486312;
    --pitch8-primary-note: #76a21e;
    --pitch9-secondary-channel: #4a1242;
    --pitch9-primary-channel: #721b65;
    --pitch9-secondary-note: #4a1242;
    --pitch9-primary-note: #721b65;
    --pitch10-secondary-channel: #7a312d;
    --pitch10-primary-channel: #f8615a;
    --pitch10-secondary-note: #7a312d;
    --pitch10-primary-note: #f8615a;
    --noise1-secondary-channel: #5f6582;
    --noise1-primary-channel: #a6b1e1;
    --noise1-secondary-note: #5f6582;
    --noise1-primary-note: #a6b1e1;
    --noise4-secondary-channel: #6B3E8E;
    --noise5-secondary-channel: #996633;
    --noise5-primary-channel: #ddaa77;
    --noise5-secondary-note: #cc9966;
    --noise5-primary-note: #f0d0bb;
    --mod1-secondary-channel: #339955;
}`;var _a=`:root {
    --hover-preview: #ddd;
    --playhead: #ddd;
    --primary-text: #ddd;
    --secondary-text: #8e695b;
    --text-selection: rgba(169, 0, 255, 0.99);
    --box-selection-fill: rgba(221, 221, 221, 0.2);
    --loop-accent: #bf15ba;
    --link-accent: #f888ff;
    --ui-widget-background: #443a3a;
    --pitch-background: #353333;
    --tonic: #884a44;
    --fifth-note: #415498;
    --noise4-secondary-channel: #6B3E8E;
}`;var Qa=`:root {
    --page-margin: #000015;
    --editor-background: #000015;
    --hover-preview: #00ffff;
    --playhead: #00ffff;
    --text-selection: rgba(255, 127, 80, 0.99);
    --box-selection-fill: rgba(255, 255, 255, 0.2);
    --loop-accent: #ff00ff;
    --link-accent: #00ffff;
    --ui-widget-background: #222222;
    --ui-widget-focus: #444444;
    --pitch-background: #222222;
    --tonic: #ab382c;
    --fifth-note: #2a76a8;
    --white-piano-key: #ffffff;
    --black-piano-key: #222222;
    --white-piano-key-text: #000000;
    --track-editor-bg-pitch: #222222;
    --track-editor-bg-pitch-dim: #111111;
    --track-editor-bg-noise: #222222;
    --track-editor-bg-noise-dim: #111111;
    --track-editor-bg-mod: #333333;
    --track-editor-bg-mod-dim: #111111;
    --multiplicative-mod-slider: #666666;
    --overwriting-mod-slider: #666666;
    --indicator-primary: #ff00ff;
    --indicator-secondary: #00ffff;
    --select2-opt-group: #333333;
    --input-box-outline: #444444;
    --mute-button-normal: #ff00ff;
    --mute-button-mod: #00ffff;
    --mod-label-primary: #282840;
    --mod-label-secondary-text: rgb(87, 86, 120);
    --mod-label-primary-text: white;
    --pitch1-secondary-channel: #bd9909;
    --pitch1-primary-channel: #fbff8e;
    --pitch1-secondary-note: #c79d3a;
    --pitch1-primary-note: #fdffb2;
    --pitch2-secondary-channel: #b86e0d;
    --pitch2-primary-channel: #ffb28e;
    --pitch2-secondary-note: #ba643a;
    --pitch2-primary-note: #fbac92;
    --pitch3-secondary-channel: #a81b08;
    --pitch3-primary-channel: #f56c67;
    --pitch3-secondary-note: #94352b;
    --pitch3-primary-note: #f56147;
    --pitch4-secondary-channel: #2a7722;
    --pitch4-primary-channel: #6ebf5e;
    --pitch4-secondary-note: #1c5c18;
    --pitch4-primary-note: #88cf82;
    --pitch5-secondary-channel: #8c8b3c;
    --pitch5-primary-channel: #c3c168;
    --pitch5-secondary-note: #747330;
    --pitch5-primary-note: #d4d394;
    --pitch6-secondary-channel: #3f9577;
    --pitch6-primary-channel: #6fc4b4;
    --pitch6-secondary-note: #2c6a5c;
    --pitch6-primary-note: #8fdad0;
    --pitch7-secondary-channel: #204a80;
    --pitch7-primary-channel: #6d9fc2;
    --pitch7-secondary-note: #132f5a;
    --pitch7-primary-note: #9dbed8;
    --pitch8-secondary-channel: #a531ad;
    --pitch8-primary-channel: #db68e3;
    --pitch8-secondary-note: #8d2f94;
    --pitch8-primary-note: #e66cbf;
    --pitch9-secondary-channel: #03a1a1;
    --pitch9-primary-channel: #52fffb;
    --pitch9-secondary-note: #34baba;
    --pitch9-primary-note: #60fbfb;
    --pitch10-secondary-channel: #4208a1;
    --pitch10-primary-channel: #9282ff;
    --pitch10-secondary-note: #5735b5;
    --pitch10-primary-note: #ab52fb;
    --noise1-secondary-channel: #2a5555;
    --noise1-primary-channel: #4c7878;
    --noise1-secondary-note: #6e9a9a;
    --noise1-primary-note: #90bcbc;
    --noise2-secondary-channel: #553355;
    --noise2-primary-channel: #775577;
    --noise2-secondary-note: #997799;
    --noise2-primary-note: #bbaa99;
    --noise3-secondary-channel: #2a6622;
    --noise3-primary-channel: #4c8844;
    --noise3-secondary-note: #6eaa66;
    --noise3-primary-note: #90cc88;
    --noise4-secondary-channel: #664400;
    --noise4-primary-channel: #886600;
    --noise4-secondary-note: #aa8800;
    --noise4-primary-note: #cccc00;
    --noise5-secondary-channel: #006633;
    --noise5-primary-channel: #008855;
    --noise5-secondary-note: #00aa77;
    --noise5-primary-note: #00cc99;
    --mod1-secondary-channel: #fe00ff;
    --mod1-primary-channel: #ff72ff;
    --mod1-secondary-note: #ff92ff;
    --mod1-primary-note: #ffb2fb;
    --mod2-secondary-channel: #00fe00;
    --mod2-primary-channel: #8eff8e;
    --mod2-secondary-note: #92ff92;
    --mod2-primary-note: #b2ffb2;
    --mod3-secondary-channel: #feff00;
    --mod3-primary-channel: #fffb8e;
    --mod3-secondary-note: #fffd92;
    --mod3-primary-note: #fffe92;
    --mod4-secondary-channel: #00fffe;
    --mod4-primary-channel: #82fffb;
    --mod4-secondary-note: #92ffff;
    --mod4-primary-note: #b2fffb;
    --disabled-note-primary: #c6c6c6;
    --disabled-note-secondary: #8c8c8c;
    --note-flash: #ffffff;
    --note-flash-secondary: #ffffff77;
}`;var Ja=`:root {
    --page-margin: #0d0063;
    --editor-background: #0D0063;
    --pitch-background: #322c59;
    --tonic: #1c1933;
    --fifth-note: #7b74ad;
    --pitch-channel-limit: 6;
    --noise-channel-limit: 3;
    --pitch1-secondary-channel: #c7ac00;
    --pitch1-primary-channel: #fcf403;
    --pitch1-secondary-note: #c7c700;
    --pitch1-primary-note: #fcf403;
    --pitch2-secondary-channel: #9400b5;
    --pitch2-primary-channel: #ff00ee;
    --pitch2-secondary-note: #9400b5;
    --pitch2-primary-note: #ff00ee;
    --pitch3-secondary-channel: #b37466;
    --pitch3-primary-channel: #ffc6a1;
    --pitch3-secondary-note: #b37466;
    --pitch3-primary-note: #ffc6a1;
    --pitch7-secondary-channel: #c7ac00;
    --pitch7-primary-channel: #fcf403;
    --pitch7-secondary-note: #c7c700;
    --pitch7-primary-note: #fcf403;
    --pitch8-secondary-channel: #9400b5;
    --pitch8-primary-channel: #ff00ee;
    --pitch8-secondary-note: #9400b5;
    --pitch8-primary-note: #ff00ee;
    --pitch9-secondary-channel: #b37466;
    --pitch9-primary-channel: #ffc6a1;
    --pitch9-secondary-note: #b37466;
    --pitch9-primary-note: #ffc6a1;
    --pitch10-secondary-channel: #00a100;
    --pitch10-primary-channel: #50ff50;
    --pitch10-secondary-note: #00c700;
    --pitch10-primary-note: #a0ffa0;
    --noise1-secondary-channel: #95acad;
    --noise1-primary-channel: #cee9eb;
    --noise1-secondary-note: #95acad;
    --noise1-primary-note: #cee9eb;
    --noise4-secondary-channel: #7c9b42;
    --noise4-primary-channel: #a5ff00;
    --noise4-secondary-note: #7c9b42;
    --noise4-primary-note: #a5ff00;
    --noise5-secondary-channel: #7c9b42;
    --mod1-secondary-channel: #c7ac00;
    --mod1-primary-channel: #fcf403;
    --mod1-secondary-note: #c7c700;
    --mod1-primary-note: #fcf403;
    --mod2-secondary-channel: #9400b5;
    --mod2-primary-channel: #ff00ee;
    --mod2-secondary-note: #9400b5;
    --mod2-primary-note: #ff00ee;
    --mod3-secondary-channel: #b37466;
    --mod3-primary-channel: #ffc6a1;
    --mod3-secondary-note: #b37466;
    --mod3-primary-note: #ffc6a1;
    --mod4-secondary-channel: #00a100;
    --mod4-primary-channel: #50ff50;
    --mod4-secondary-note: #00c700;
    --mod4-primary-note: #a0ffa0;
}`;var Ka=`:root {
    --page-margin: #0d0063;
    --editor-background: #0D0063;
    --pitch-background: #322c59;
    --tonic: #1c1933;
    --fifth-note: #7b74ad;
    --pitch1-secondary-channel: #c7ac00;
    --pitch1-primary-channel: #fcf403;
    --pitch1-secondary-note: #c7c700;
    --pitch1-primary-note: #fcf403;
    --pitch2-secondary-channel: #9400b5;
    --pitch2-primary-channel: #ff00ee;
    --pitch2-secondary-note: #9400b5;
    --pitch2-primary-note: #ff00ee;
    --pitch3-secondary-channel: #b37466;
    --pitch3-primary-channel: #ffc6a1;
    --pitch3-secondary-note: #b37466;
    --pitch3-primary-note: #ffc6a1;
    --noise1-secondary-channel: #95acad;
    --noise1-primary-channel: #cee9eb;
    --noise1-secondary-note: #95acad;
    --noise1-primary-note: #cee9eb;
}`;var Za=`:root {
    --page-margin: #000a08;
    --editor-background: #000a08;
    --hover-preview: #ffffcc;
    --playhead: #ccfff5;
    --secondary-text: #d9d98c;
    --text-selection: #ffff6659;
    --box-selection-fill: #ffffff33;
    --loop-accent: #ffff00;
    --link-accent: #00ffcc;
    --ui-widget-background: #141f1d;
    --ui-widget-focus: #24423d;
    --pitch-background: #001410;
    --tonic: #00241d;
    --fifth-note: #ffff6633;
    --white-piano-key: #66998f;
    --black-piano-key: #141f1d;
    --track-editor-bg-pitch: #66998f40;
    --track-editor-bg-pitch-dim: #293d3940;
    --track-editor-bg-noise: #66998f40;
    --track-editor-bg-noise-dim: #293d3940;
    --track-editor-bg-mod: #99996640;
    --track-editor-bg-mod-dim: #3d3d2940;
    --multiplicative-mod-slider: #ffff00;
    --overwriting-mod-slider: #00ffcc;
    --indicator-primary: #ffff00;
    --indicator-secondary: #141f1d;
    --select2-opt-group: #1b312e;
    --input-box-outline: #141f1d;
    --mute-button-normal: #00ffcc;
    --mute-button-mod: #00997a;
    --pitch1-secondary-channel: #bfbf40;
    --pitch1-primary-channel: #ffff64;
    --pitch1-secondary-note: #bfbf40;
    --pitch1-primary-note: #ffff64;
    --pitch2-secondary-channel: #a2bf40;
    --pitch2-primary-channel: #e0ff7d;
    --pitch2-secondary-note: #a2bf40;
    --pitch2-primary-note: #e0ff7d;
    --pitch3-secondary-channel: #75bf40;
    --pitch3-primary-channel: #c1ff96;
    --pitch3-secondary-note: #75bf40;
    --pitch3-primary-note: #c1ff96;
    --pitch4-secondary-channel: #40bf51;
    --pitch4-primary-channel: #a2ffaf;
    --pitch4-secondary-note: #40bf51;
    --pitch4-primary-note: #a2ffaf;
    --pitch5-secondary-channel: #40bf86;
    --pitch5-primary-channel: #83ffc8;
    --pitch5-secondary-note: #40bf86;
    --pitch5-primary-note: #83ffc8;
    --pitch6-secondary-channel: #40bfa6;
    --pitch6-primary-channel: #64ffe1;
    --pitch6-secondary-note: #40bfa6;
    --pitch6-primary-note: #64ffe1;
    --pitch7-secondary-channel: #40bf86;
    --pitch7-primary-channel: #83ffc8;
    --pitch7-secondary-note: #40bf86;
    --pitch7-primary-note: #83ffc8;
    --pitch8-secondary-channel: #40bf51;
    --pitch8-primary-channel: #a2ffaf;
    --pitch8-secondary-note: #40bf51;
    --pitch8-primary-note: #a2ffaf;
    --pitch9-secondary-channel: #75bf40;
    --pitch9-primary-channel: #c1ff96;
    --pitch9-secondary-note: #75bf40;
    --pitch9-primary-note: #c1ff96;
    --pitch10-secondary-channel: #a2bf40;
    --pitch10-primary-channel: #e0ff7d;
    --pitch10-secondary-note: #a2bf40;
    --pitch10-primary-note: #e0ff7d;
    --noise1-secondary-channel: #a6a659;
    --noise1-primary-channel: #ffffcc;
    --noise1-secondary-note: #a6a659;
    --noise1-primary-note: #ffffcc;
    --noise2-secondary-channel: #94a659;
    --noise2-primary-channel: #f3ffcc;
    --noise2-secondary-note: #94a659;
    --noise2-primary-note: #f3ffcc;
    --noise3-secondary-channel: #79a659;
    --noise3-primary-channel: #e1ffcc;
    --noise3-secondary-note: #79a659;
    --noise3-primary-note: #e1ffcc;
    --noise4-secondary-channel: #94a659;
    --noise4-primary-channel: #f3ffcc;
    --noise4-secondary-note: #94a659;
    --noise4-primary-note: #f3ffcc;
    --noise5-secondary-channel: #a6a659;
    --noise5-primary-channel: #ffffcc;
    --noise5-secondary-note: #a6a659;
    --noise5-primary-note: #ffffcc;
    --mod1-secondary-channel: #a3a329;
    --mod1-primary-channel: #ffff00;
    --mod1-secondary-note: #a3a329;
    --mod1-primary-note: #ffff00;
    --mod2-secondary-channel: #a38529;
    --mod2-primary-channel: #ffbf00;
    --mod2-secondary-note: #a38529;
    --mod2-primary-note: #ffbf00;
    --mod3-secondary-channel: #a36629;
    --mod3-primary-channel: #ff7f00;
    --mod3-secondary-note: #a36629;
    --mod3-primary-note: #ff7f00;
    --mod4-secondary-channel: #a38529;
    --mod4-primary-channel: #ffbf00;
    --mod4-secondary-note: #a38529;
    --mod4-primary-note: #ffbf00;
    --mod-label-primary: #141f1d;
    --mod-label-secondary-text: #d9d98c;
    --mod-label-primary-text: white;
    --disabled-note-primary: #808080;
    --disabled-note-secondary: #666666;
}`;var Ya=`:root {
    --page-margin: #252525;
    --editor-background: #252525;
    --hover-preview: white;
    --playhead: white;
    --primary-text: white;
    --secondary-text: #999;
    --inverted-text: black;
    --text-selection: rgba(119, 68, 255, 0.99);
    --box-selection-fill: rgba(255, 255, 255, 0.2);
    --loop-accent: #74f;
    --link-accent: #98f;
    --ui-widget-background: #444;
    --ui-widget-focus: #777;
    --pitch-background: #444;
    --tonic: #864;
    --fifth-note: #468;
    --white-piano-key: #bbb;
    --black-piano-key: #444;
    --white-piano-key-text: #131200;
    --black-piano-key-text: #fff;
    --use-color-formula: false;
    --track-editor-bg-pitch: #444;
    --track-editor-bg-pitch-dim: #333;
    --track-editor-bg-noise: #444;
    --track-editor-bg-noise-dim: #333;
    --track-editor-bg-mod: #234;
    --track-editor-bg-mod-dim: #123;
    --multiplicative-mod-slider: #456;
    --overwriting-mod-slider: #654;
    --indicator-primary: #74f;
    --indicator-secondary: #444;
    --select2-opt-group: #585858;
    --input-box-outline: #333;
    --mute-button-normal: #ffa033;
    --mute-button-mod: #9a6bff;
    --pitch1-secondary-channel: #0099A1;
    --pitch1-primary-channel: #25F3FF;
    --pitch1-secondary-note: #00BDC7;
    --pitch1-primary-note: #92F9FF;
    --pitch2-secondary-channel: #A1A100;
    --pitch2-primary-channel: #FFFF25;
    --pitch2-secondary-note: #C7C700;
    --pitch2-primary-note: #FFFF92;
    --pitch3-secondary-channel: #C75000;
    --pitch3-primary-channel: #FF9752;
    --pitch3-secondary-note: #FF771C;
    --pitch3-primary-note: #FFCDAB;
    --pitch4-secondary-channel: #00A100;
    --pitch4-primary-channel: #50FF50;
    --pitch4-secondary-note: #00C700;
    --pitch4-primary-note: #A0FFA0;
    --pitch5-secondary-channel: #D020D0;
    --pitch5-primary-channel: #FF90FF;
    --pitch5-secondary-note: #E040E0;
    --pitch5-primary-note: #FFC0FF;
    --pitch6-secondary-channel: #7777B0;
    --pitch6-primary-channel: #A0A0FF;
    --pitch6-secondary-note: #8888D0;
    --pitch6-primary-note: #D0D0FF;
    --pitch7-secondary-channel: #8AA100;
    --pitch7-primary-channel: #DEFF25;
    --pitch7-secondary-note: #AAC700;
    --pitch7-primary-note: #E6FF92;
    --pitch8-secondary-channel: #DF0019;
    --pitch8-primary-channel: #FF98A4;
    --pitch8-secondary-note: #FF4E63;
    --pitch8-primary-note: #FFB2BB;
    --pitch9-secondary-channel: #00A170;
    --pitch9-primary-channel: #50FFC9;
    --pitch9-secondary-note: #00C78A;
    --pitch9-primary-note: #83FFD9;
    --pitch10-secondary-channel: #A11FFF;
    --pitch10-primary-channel: #CE8BFF;
    --pitch10-secondary-note: #B757FF;
    --pitch10-primary-note: #DFACFF;
    --noise1-secondary-channel: #6F6F6F;
    --noise1-primary-channel: #AAAAAA;
    --noise1-secondary-note: #A7A7A7;
    --noise1-primary-note: #E0E0E0;
    --noise2-secondary-channel: #996633;
    --noise2-primary-channel: #DDAA77;
    --noise2-secondary-note: #CC9966;
    --noise2-primary-note: #F0D0BB;
    --noise3-secondary-channel: #4A6D8F;
    --noise3-primary-channel: #77AADD;
    --noise3-secondary-note: #6F9FCF;
    --noise3-primary-note: #BBD7FF;
    --noise4-secondary-channel: #7A4F9A;
    --noise4-primary-channel: #AF82D2;
    --noise4-secondary-note: #9E71C1;
    --noise4-primary-note: #D4C1EA;
    --noise5-secondary-channel: #607837;
    --noise5-primary-channel: #A2BB77;
    --noise5-secondary-note: #91AA66;
    --noise5-primary-note: #C5E2B2;
    --mod1-secondary-channel: #339955;
    --mod1-primary-channel: #77fc55;
    --mod1-secondary-note: #77ff8a;
    --mod1-primary-note: #cdffee;
    --mod2-secondary-channel: #993355;
    --mod2-primary-channel: #f04960;
    --mod2-secondary-note: #f057a0;
    --mod2-primary-note: #ffb8de;
    --mod3-secondary-channel: #553399;
    --mod3-primary-channel: #8855fc;
    --mod3-secondary-note: #aa64ff;
    --mod3-primary-note: #f8ddff;
    --mod4-secondary-channel: #a86436;
    --mod4-primary-channel: #c8a825;
    --mod4-secondary-note: #e8ba46;
    --mod4-primary-note: #fff6d3;
    --mod-label-primary: #999;
    --mod-label-secondary-text: #333;
    --mod-label-primary-text: black;
    --disabled-note-primary: #999;
    --disabled-note-secondary: #666;
}`;var Xa=`:root {
    --page-margin: #010c03;
    --editor-background: #010c03;
    --hover-preview: #efe;
    --playhead: rgba(232, 255, 232, 0.9);
    --primary-text: #efe;
    --secondary-text: #70A070;
    --inverted-text: #280228;
    --text-selection: rgba(255, 68, 199, 0.99);
    --box-selection-fill: #267aa3;
    --loop-accent: #ffe845;
    --link-accent: #9f8;
    --ui-widget-background: #203829;
    --ui-widget-focus: #487860;
    --pitch-background: #203829;
    --tonic: #2b8d20;
    --fifth-note: #385840;
    --white-piano-key: #bda;
    --black-piano-key: #573;
    --black-piano-key-text: #ffffff;
    --use-color-formula: true;
    --track-editor-bg-pitch: #254820;
    --track-editor-bg-pitch-dim: #102819;
    --track-editor-bg-noise: #304050;
    --track-editor-bg-noise-dim: #102030;
    --track-editor-bg-mod: #506030;
    --track-editor-bg-mod-dim: #2a300a;
    --multiplicative-mod-slider: #205c8f;
    --overwriting-mod-slider: #20ac6f;
    --indicator-primary: #dcd866;
    --indicator-secondary: #203829;
    --select2-opt-group: #1a6f5a;
    --input-box-outline: #242;
    --mute-button-normal: #49e980;
    --mute-button-mod: #c2e502;
    --mod-label-primary: #133613;
    --mod-label-secondary-text: rgb(27, 126, 40);
    --mod-label-primary-text: #efe;
    --pitch-secondary-channel-hue: 120;
    --pitch-secondary-channel-hue-scale: 8.1;
    --pitch-secondary-channel-sat: 59;
    --pitch-secondary-channel-sat-scale: 0.1;
    --pitch-secondary-channel-lum: 50;
    --pitch-secondary-channel-lum-scale: 0.04;
    --pitch-primary-channel-hue: 120;
    --pitch-primary-channel-hue-scale: 8.1;
    --pitch-primary-channel-sat: 86;
    --pitch-primary-channel-sat-scale: 0.1;
    --pitch-primary-channel-lum: 70;
    --pitch-primary-channel-lum-scale: 0.04;
    --pitch-secondary-note-hue: 120;
    --pitch-secondary-note-hue-scale: 8.1;
    --pitch-secondary-note-sat: 85;
    --pitch-secondary-note-sat-scale: 0.1;
    --pitch-secondary-note-lum: 30;
    --pitch-secondary-note-lum-scale: 0.04;
    --pitch-primary-note-hue: 120;
    --pitch-primary-note-hue-scale: 8.1;
    --pitch-primary-note-sat: 90;
    --pitch-primary-note-sat-scale: 0.05;
    --pitch-primary-note-lum: 80;
    --pitch-primary-note-lum-scale: 0.025;
    --noise-secondary-channel-hue: 200;
    --noise-secondary-channel-hue-scale: 1.1;
    --noise-secondary-channel-sat: 25;
    --noise-secondary-channel-sat-scale: 0;
    --noise-secondary-channel-lum: 22;
    --noise-secondary-channel-lum-scale: 0;
    --noise-primary-channel-hue: 200;
    --noise-primary-channel-hue-scale: 1.1;
    --noise-primary-channel-sat: 48;
    --noise-primary-channel-sat-scale: 0;
    --noise-primary-channel-lum: 65;
    --noise-primary-channel-lum-scale: 0;
    --noise-secondary-note-hue: 200;
    --noise-secondary-note-hue-scale: 1.1;
    --noise-secondary-note-sat: 33.5;
    --noise-secondary-note-sat-scale: 0;
    --noise-secondary-note-lum: 33;
    --noise-secondary-note-lum-scale: 0;
    --noise-primary-note-hue: 200;
    --noise-primary-note-hue-scale: 1.1;
    --noise-primary-note-sat: 46.5;
    --noise-primary-note-sat-scale: 0;
    --noise-primary-note-lum: 64;
    --noise-primary-note-lum-scale: 0;
    --mod-secondary-channel-hue: 40;
    --mod-secondary-channel-hue-scale: 1.8;
    --mod-secondary-channel-sat: 44;
    --mod-secondary-channel-sat-scale: 0;
    --mod-secondary-channel-lum: 50;
    --mod-secondary-channel-lum-scale: 0;
    --mod-primary-channel-hue: 40;
    --mod-primary-channel-hue-scale: 1.8;
    --mod-primary-channel-sat: 60;
    --mod-primary-channel-sat-scale: 0;
    --mod-primary-channel-lum: 80;
    --mod-primary-channel-lum-scale: 0;
    --mod-secondary-note-hue: 40;
    --mod-secondary-note-hue-scale: 1.8;
    --mod-secondary-note-sat: 62;
    --mod-secondary-note-sat-scale: 0;
    --mod-secondary-note-lum: 55;
    --mod-secondary-note-lum-scale: 0;
    --mod-primary-note-hue: 40;
    --mod-primary-note-hue-scale: 1.8;
    --mod-primary-note-sat: 66;
    --mod-primary-note-sat-scale: 0;
    --mod-primary-note-lum: 85;
    --mod-primary-note-lum-scale: 0;
    --disabled-note-primary: #536e5c;
    --disabled-note-secondary: #395440;
}`;var ja=`:root {
    --page-margin: #ADD8E6;
}`;var ei=`:root {
    --page-margin: #040507;
    --editor-background: #040507;
    --text-selection: rgb(115 103 76);
    --box-selection-fill: rgb(174 109 73 / 45%);
    --loop-accent: #EC897D;
    --link-accent: #FDE484;
    --ui-widget-background: #22222c;
    --ui-widget-focus: #39394c;
    --pitch-background: #101010;
    --tonic: #2c2d34;
    --fifth-note: #191a20;
    --white-piano-key: #bbbaba;
    --black-piano-key: #2d2d2d;
    --track-editor-bg-pitch: #2b2d40;
    --track-editor-bg-pitch-dim: #191a25;
    --track-editor-bg-noise: #3c3644;
    --track-editor-bg-noise-dim: #26222b;
    --track-editor-bg-mod: #322a2a;
    --track-editor-bg-mod-dim: #191515;
    --multiplicative-mod-slider: #977da9;
    --overwriting-mod-slider: #798FA7;
    --indicator-primary: #EAAC9D;
    --indicator-secondary: #5e413a;
    --select2-opt-group: #191920;
    --input-box-outline: #191920;
    --mute-button-normal: #798FA7;
    --mute-button-mod: #354457;
    --pitch1-secondary-channel: #91655a;
    --pitch1-primary-channel: #EAAC9D;
    --pitch1-secondary-note: #91655a;
    --pitch1-primary-note: #EAAC9D;
    --pitch2-secondary-channel: #8f6513;
    --pitch2-primary-channel: #FFAF12;
    --pitch2-secondary-note: #8f6513;
    --pitch2-primary-note: #FFAF12;
    --pitch3-secondary-channel: #212f46;
    --pitch3-primary-channel: #34558B;
    --pitch3-secondary-note: #212f46;
    --pitch3-primary-note: #34558B;
    --pitch4-secondary-channel: #2e6b5b;
    --pitch4-primary-channel: #4EC5A7;
    --pitch4-secondary-note: #2e6b5b;
    --pitch4-primary-note: #4EC5A7;
    --pitch5-secondary-channel: #555D46;
    --pitch5-primary-channel: #aabf84;
    --pitch5-secondary-note: #555D46;
    --pitch5-primary-note: #aabf84;
    --pitch6-secondary-channel: #A2553B;
    --pitch6-primary-channel: #e59a81;
    --pitch6-secondary-note: #A2553B;
    --pitch6-primary-note: #e59a81;
    --pitch7-secondary-channel: #7b4021;
    --pitch7-primary-channel: #FE813E;
    --pitch7-secondary-note: #7b4021;
    --pitch7-primary-note: #FE813E;
    --pitch8-secondary-channel: #847753;
    --pitch8-primary-channel: #EFDAA3;
    --pitch8-secondary-note: #847753;
    --pitch8-primary-note: #EFDAA3;
    --pitch9-secondary-channel: #2c3642;
    --pitch9-primary-channel: #798FA7;
    --pitch9-secondary-note: #2c3642;
    --pitch9-primary-note: #798FA7;
    --pitch10-secondary-channel: #0d4453;
    --pitch10-primary-channel: #107895;
    --pitch10-secondary-note: #0d4453;
    --pitch10-primary-note: #107895;
    --noise1-secondary-channel: #71617C;
    --noise1-primary-channel: #977da9;
    --noise1-secondary-note: #71617C;
    --noise1-primary-note: #977da9;
    --noise2-secondary-channel: #3B3D4A;
    --noise2-primary-channel: #707591;
    --noise2-secondary-note: #3B3D4A;
    --noise2-primary-note: #707591;
    --noise3-secondary-channel: #625f5e;
    --noise3-primary-channel: #A19D9C;
    --noise3-secondary-note: #625f5e;
    --noise3-primary-note: #A19D9C;
    --noise4-secondary-channel: #ab847b;
    --noise4-primary-channel: #EAAC9D;
    --noise4-secondary-note: #ab847b;
    --noise4-primary-note: #EAAC9D;
    --noise5-secondary-channel: #B49D74;
    --noise5-primary-channel: #dec69b;
    --noise5-secondary-note: #B49D74;
    --noise5-primary-note: #dec69b;
    --mod1-secondary-channel: #722124;
    --mod1-primary-channel: #D13A41;
    --mod1-secondary-note: #722124;
    --mod1-primary-note: #D13A41;
    --mod2-secondary-channel: #213657;
    --mod2-primary-channel: #34558B;
    --mod2-secondary-note: #213657;
    --mod2-primary-note: #34558B;
    --mod3-secondary-channel: #555D46;
    --mod3-primary-channel: #848f6d;
    --mod3-secondary-note: #555D46;
    --mod3-primary-note: #848f6d;
    --mod4-secondary-channel: #71617C;
    --mod4-primary-channel: #a68ab9;
    --mod4-secondary-note: #71617C;
    --mod4-primary-note: #a68ab9;
    --mod-label-primary: #282828;
    --mod-label-secondary-text: #707070;
    --mod-label-primary-text: white;
    --disabled-note-primary: #5d5d5d;
    --disabled-note-secondary: #292929;
}`;var ti=`:root {
    --page-margin: #0c0306;
    --editor-background: #0c0306;
    --primary-text: #26d9cd;
    --secondary-text: #ff6666;
    --inverted-text: white;
    --text-selection: #ffffff;
    --box-selection-fill: #ff00004d;
    --loop-accent: #ff6666;
    --link-accent: white;
    --ui-widget-background: #232323;
    --ui-widget-focus: #303030;
    --pitch-background: hsl(61deg 100% 70% / 25%);
    --tonic: #66a3ff40;
    --fifth-note: #ff666640;
    --white-piano-key: #cdcdcd;
    --black-piano-key: #232323;
    --track-editor-bg-pitch: #404040bf;
    --track-editor-bg-pitch-dim: #151515;
    --track-editor-bg-noise: #404040bf;
    --track-editor-bg-noise-dim: #151515;
    --track-editor-bg-mod: #404040bf;
    --track-editor-bg-mod-dim: #151515;
    --multiplicative-mod-slider: #ef7692;
    --overwriting-mod-slider: #f43e69;
    --indicator-primary: #26d9cd;
    --indicator-secondary: hsl(176deg 70% 25%);
    --select2-opt-group: #232323;
    --input-box-outline: #141e34;
    --mute-button-normal: #26d9cd;
    --mute-button-mod: hsl(346deg 70% 50%);
    --pitch1-secondary-channel: #bf4040;
    --pitch1-primary-channel: #ff6666;
    --pitch1-secondary-note: #bf4040;
    --pitch1-primary-note: #ff6666;
    --pitch2-secondary-channel: #bf5b40;
    --pitch2-primary-channel: #ff8766;
    --pitch2-secondary-note: #bf5b40;
    --pitch2-primary-note: #ff8766;
    --pitch3-secondary-channel: #bf7940;
    --pitch3-primary-channel: #ffab66;
    --pitch3-secondary-note: #bf7940;
    --pitch3-primary-note: #ffab66;
    --pitch4-secondary-channel: #bf9b40;
    --pitch4-primary-channel: #ffd466;
    --pitch4-secondary-note: #bf9b40;
    --pitch4-primary-note: #ffd466;
    --pitch5-secondary-channel: #bdbf40;
    --pitch5-primary-channel: #fcff66;
    --pitch5-secondary-note: #bdbf40;
    --pitch5-primary-note: #fcff66;
    --pitch6-secondary-channel: #9dbf40;
    --pitch6-primary-channel: #d6ff66;
    --pitch6-secondary-note: #9dbf40;
    --pitch6-primary-note: #d6ff66;
    --pitch7-secondary-channel: #9dbf40;
    --pitch7-primary-channel: #fcff66;
    --pitch7-secondary-note: #9dbf40;
    --pitch7-primary-note: #fcff66;
    --pitch8-secondary-channel: #bf9b40;
    --pitch8-primary-channel: #ffd466;
    --pitch8-secondary-note: #bf9b40;
    --pitch8-primary-note: #ffd466;
    --pitch9-secondary-channel: #bf5b40;
    --pitch9-primary-channel: #ffab66;
    --pitch9-secondary-note: #bf5b40;
    --pitch9-primary-note: #ffab66;
    --pitch10-secondary-channel: #d15a1f;
    --pitch10-primary-channel: #ff8766;
    --pitch10-secondary-note: #d15a1f;
    --pitch10-primary-note: #ff8766;
    --noise1-secondary-channel: #4073bf;
    --noise1-primary-channel: #66a3ff;
    --noise1-secondary-note: #4073bf;
    --noise1-primary-note: #66a3ff;
    --noise2-secondary-channel: #405dbf;
    --noise2-primary-channel: #668aff;
    --noise2-secondary-note: #405dbf;
    --noise2-primary-note: #668aff;
    --noise3-secondary-channel: #4f40bf;
    --noise3-primary-channel: #7866ff;
    --noise3-secondary-note: #4f40bf;
    --noise3-primary-note: #7866ff;
    --noise4-secondary-channel: #8840bf;
    --noise4-primary-channel: #bd66ff;
    --noise4-secondary-note: #8840bf;
    --noise4-primary-note: #bd66ff;
    --noise5-secondary-channel: #bf40b5;
    --noise5-primary-channel: #ff66f2;
    --noise5-secondary-note: #bf40b5;
    --noise5-primary-note: #ff66f2;
    --mod1-secondary-channel: #cc6666;
    --mod1-primary-channel: #ff9999;
    --mod1-secondary-note: #cc6666;
    --mod1-primary-note: #ff9999;
    --mod2-secondary-channel: #cc7766;
    --mod2-primary-channel: #ffaa99;
    --mod2-secondary-note: #bf5540;
    --mod2-primary-note: #ffaa99;
    --mod3-secondary-channel: #cc8866;
    --mod3-primary-channel: #ffbb99;
    --mod3-secondary-note: #cc8866;
    --mod3-primary-note: #ffbb99;
    --mod4-secondary-channel: #cc9966;
    --mod4-primary-channel: #ffcc99;
    --mod4-secondary-note: #cc9966;
    --mod4-primary-note: #ffcc99;
    --disabled-note-primary: #696969;
    --disabled-note-secondary: #232323;
}`;var ni=`:root {
    --page-margin: #000;
    --editor-background: #000;
    --hover-preview: #808080;
    --playhead: #808080;
    --primary-text: white;
    --secondary-text: #cccccc;
    --inverted-text: black;
    --text-selection: #696969;
    --box-selection-fill: #cccccc40;
    --loop-accent: #808080;
    --link-accent: white;
    --ui-widget-background: #232323;
    --ui-widget-focus: #303030;
    --pitch-background: #1a1a1a;
    --tonic: #262626;
    --fifth-note: #0d0d0d;
    --white-piano-key: #808080;
    --black-piano-key: #232323;
    --use-color-formula: true;
    --track-editor-bg-pitch: #262626;
    --track-editor-bg-pitch-dim: #1a1a1a;
    --track-editor-bg-noise: #262626;
    --track-editor-bg-noise-dim: #1a1a1a;
    --track-editor-bg-mod: #262626;
    --track-editor-bg-mod-dim: #1a1a1a;
    --multiplicative-mod-slider: #808080;
    --overwriting-mod-slider: #808080;
    --indicator-primary: #808080;
    --indicator-secondary: #333333;
    --select2-opt-group: #232323;
    --input-box-outline: #222;
    --mute-button-normal: #808080;
    --mute-button-mod: #808080;
    --mod-label-primary: #232323;
    --mod-label-secondary-text: #696969;
    --mod-label-primary-text: #cdcdcd;
    --pitch-secondary-channel-hue: 0;
    --pitch-secondary-channel-hue-scale: 25;
    --pitch-secondary-channel-sat: 10;
    --pitch-secondary-channel-sat-scale: 0.1;
    --pitch-secondary-channel-lum: 70;
    --pitch-secondary-channel-lum-scale: 0;
    --pitch-primary-channel-hue: 0;
    --pitch-primary-channel-hue-scale: 25;
    --pitch-primary-channel-sat: 50;
    --pitch-primary-channel-sat-scale: 0.1;
    --pitch-primary-channel-lum: 95;
    --pitch-primary-channel-lum-scale: 0;
    --pitch-secondary-note-hue: 0;
    --pitch-secondary-note-hue-scale: 25;
    --pitch-secondary-note-sat: 10;
    --pitch-secondary-note-sat-scale: 0.1;
    --pitch-secondary-note-lum: 70;
    --pitch-secondary-note-lum-scale: 0;
    --pitch-primary-note-hue: 0;
    --pitch-primary-note-hue-scale: 25;
    --pitch-primary-note-sat: 50;
    --pitch-primary-note-sat-scale: 0.1;
    --pitch-primary-note-lum: 95;
    --pitch-primary-note-lum-scale: 0;
    --noise-secondary-channel-hue: 125;
    --noise-secondary-channel-hue-scale: 50;
    --noise-secondary-channel-sat: 10;
    --noise-secondary-channel-sat-scale: 0.1;
    --noise-secondary-channel-lum: 70;
    --noise-secondary-channel-lum-scale: 0;
    --noise-primary-channel-hue: 125;
    --noise-primary-channel-hue-scale: 50;
    --noise-primary-channel-sat: 50;
    --noise-primary-channel-sat-scale: 0.1;
    --noise-primary-channel-lum: 95;
    --noise-primary-channel-lum-scale: 0;
    --noise-secondary-note-hue: 125;
    --noise-secondary-note-hue-scale: 50;
    --noise-secondary-note-sat: 10;
    --noise-secondary-note-sat-scale: 0.1;
    --noise-secondary-note-lum: 70;
    --noise-secondary-note-lum-scale: 0;
    --noise-primary-note-hue: 125;
    --noise-primary-note-hue-scale: 50;
    --noise-primary-note-sat: 50;
    --noise-primary-note-sat-scale: 0.1;
    --noise-primary-note-lum: 95;
    --noise-primary-note-lum-scale: 0;
    --mod-secondary-channel-hue: 255;
    --mod-secondary-channel-hue-scale: 75;
    --mod-secondary-channel-sat: 10;
    --mod-secondary-channel-sat-scale: 0;
    --mod-secondary-channel-lum: 70;
    --mod-secondary-channel-lum-scale: 0;
    --mod-primary-channel-hue: 255;
    --mod-primary-channel-hue-scale: 75;
    --mod-primary-channel-sat: 50;
    --mod-primary-channel-sat-scale: 0;
    --mod-primary-channel-lum: 95;
    --mod-primary-channel-lum-scale: 0;
    --mod-secondary-note-hue: 255;
    --mod-secondary-note-hue-scale: 75;
    --mod-secondary-note-sat: 10;
    --mod-secondary-note-sat-scale: 0;
    --mod-secondary-note-lum: 70;
    --mod-secondary-note-lum-scale: 0;
    --mod-primary-note-hue: 255;
    --mod-primary-note-hue-scale: 75;
    --mod-primary-note-sat: 50;
    --mod-primary-note-sat-scale: 0;
    --mod-primary-note-lum: 95;
    --mod-primary-note-lum-scale: 0;
    --disabled-note-primary: #c6c6c6;
    --disabled-note-secondary: #8c8c8c;
}`;var ai=`:root {
    --loop-accent: #9900cc;
    --noise-channel-limit: 2;
    --pitch1-secondary-channel: #00ffff;
    --pitch1-primary-channel: #00ffff;
    --pitch1-secondary-note: #00ffff;
    --pitch1-primary-note: #00ffff;
    --pitch2-secondary-channel: #00d8d8;
    --pitch2-primary-channel: #00d8d8;
    --pitch2-secondary-note: #00d8d8;
    --pitch2-primary-note: #00d8d8;
    --pitch3-secondary-channel: #00adad;
    --pitch3-primary-channel: #00adad;
    --pitch3-secondary-note: #00adad;
    --pitch3-primary-note: #00adad;
    --pitch4-secondary-channel: #008c8c;
    --pitch4-primary-channel: #008c8c;
    --pitch4-secondary-note: #008c8c;
    --pitch4-primary-note: #008c8c;
    --pitch5-secondary-channel: #005b5b;
    --pitch5-primary-channel: #005b5b;
    --pitch5-secondary-note: #005b5b;
    --pitch5-primary-note: #005b5b;
    --pitch6-secondary-channel: #003333;
    --pitch6-primary-channel: #003333;
    --pitch6-secondary-note: #003333;
    --pitch6-primary-note: #003333;
    --pitch7-secondary-channel: #00ffff;
    --pitch7-primary-channel: #00ffff;
    --pitch7-secondary-note: #00ffff;
    --pitch7-primary-note: #00ffff;
    --pitch8-secondary-channel: #00ffff;
    --pitch8-primary-channel: #00ffff;
    --pitch8-secondary-note: #00ffff;
    --pitch8-primary-note: #00ffff;
    --pitch9-secondary-channel: #00ffff;
    --pitch9-primary-channel: #00ffff;
    --pitch9-secondary-note: #00ffff;
    --pitch9-primary-note: #00ffff;
    --pitch10-secondary-channel: #00ffff;
    --pitch10-primary-channel: #00ffff;
    --pitch10-secondary-note: #00ffff;
    --pitch10-primary-note: #00ffff;
    --noise1-secondary-channel: #991010;
    --noise1-primary-channel: #ff1616;
    --noise1-secondary-note: #991010;
    --noise1-primary-note: #ff1616;
    --noise2-secondary-channel: #aaaaaa;
    --noise2-primary-channel: #ffffff;
    --noise2-secondary-note: #aaaaaa;
    --noise2-primary-note: #ffffff;
    --noise3-secondary-channel: #991010;
    --noise3-primary-channel: #ff1616;
    --noise3-secondary-note: #991010;
    --noise3-primary-note: #ff1616;
    --noise4-secondary-channel: #aaaaaa;
    --noise4-primary-channel: #ffffff;
    --noise4-secondary-note: #aaaaaa;
    --noise4-primary-note: #ffffff;
    --noise5-secondary-channel: #991010;
    --noise5-primary-channel: #ff1616;
    --noise5-secondary-note: #991010;
    --noise5-primary-note: #ff1616;
    --mod1-secondary-channel: #00ffff;
    --mod1-primary-channel: #00ffff;
    --mod1-secondary-note: #00ffff;
    --mod1-primary-note: #00ffff;
    --mod2-secondary-channel: #00d8d8;
    --mod2-primary-channel: #00d8d8;
    --mod2-secondary-note: #00d8d8;
    --mod2-primary-note: #00d8d8;
    --mod3-secondary-channel: #00adad;
    --mod3-primary-channel: #00adad;
    --mod3-secondary-note: #00adad;
    --mod3-primary-note: #00adad;
    -mod4-secondary-channel: #008c8c;
    --mod4-primary-channel: #008c8c;
    --mod4-secondary-note: #008c8c;
    --mod4-primary-note: #008c8c;
}`;var ii=`:root {
    --page-margin: #c4c8e3;
    --editor-background: #c4c8e3;
    --hover-preview: #000000;
    --playhead: #243953;
    --primary-text: black;
    --secondary-text: #855b95;
    --text-selection: rgb(132 125 255);
    --box-selection-fill: rgb(174 109 73 / 65%);
    --loop-accent: #EC897D;
    --link-accent: #4e00c8;
    --ui-widget-background: #e7e7ff;
    --ui-widget-focus: #d0d3e9;
    --pitch-background: #ffffff;
    --tonic: #bbbbbb;
    --fifth-note: #dcdcdc;
    --white-piano-key: #ffffff;
    --black-piano-key: #615f66;
    --track-editor-bg-pitch: #e9ebff;
    --track-editor-bg-pitch-dim: #e9ebff;
    --track-editor-bg-noise: #fdf2fe;
    --track-editor-bg-noise-dim: #fdf2fe;
    --track-editor-bg-mod: #dbdefe;
    --track-editor-bg-mod-dim: #dbdefe;
    --multiplicative-mod-slider: #6900b3;
    --overwriting-mod-slider: #004b9d;
    --indicator-primary: #ff633d;
    --indicator-secondary: #933822;
    --select2-opt-group: #e7e7ff;
    --input-box-outline: #e7e7ff;
    --mute-button-normal: #0072ef;
    --mute-button-mod: #002e67;
    --pitch1-secondary-channel: #b77d6e;
    --pitch1-primary-channel: #ff9d85;
    --pitch1-secondary-note: #b77d6e;
    --pitch1-primary-note: #ff9d85;
    --pitch2-secondary-channel: #be8821;
    --pitch2-primary-channel: #FFAF12;
    --pitch2-secondary-note: #be8821;
    --pitch2-primary-note: #FFAF12;
    --pitch3-secondary-channel: #3a62a4;
    --pitch3-primary-channel: #528ae6;
    --pitch3-secondary-note: #3a62a4;
    --pitch3-primary-note: #528ae6;
    --pitch4-secondary-channel: #3e8d78;
    --pitch4-primary-channel: #4EC5A7;
    --pitch4-secondary-note: #3e8d78;
    --pitch4-primary-note: #4EC5A7;
    --pitch5-secondary-channel: #84906d;
    --pitch5-primary-channel: #aabf84;
    --pitch5-secondary-note: #84906d;
    --pitch5-primary-note: #aabf84;
    --pitch6-secondary-channel: #bd6345;
    --pitch6-primary-channel: #e59a81;
    --pitch6-secondary-note: #bd6345;
    --pitch6-primary-note: #e59a81;
    --pitch7-secondary-channel: #aa592f;
    --pitch7-primary-channel: #FE813E;
    --pitch7-secondary-note: #aa592f;
    --pitch7-primary-note: #FE813E;
    --pitch8-secondary-channel: #b2a171;
    --pitch8-primary-channel: #ffd76d;
    --pitch8-secondary-note: #b2a171;
    --pitch8-primary-note: #ffd76d;
    --pitch9-secondary-channel: #4f6177;
    --pitch9-primary-channel: #798FA7;
    --pitch9-secondary-note: #4f6177;
    --pitch9-primary-note: #798FA7;
    --pitch10-secondary-channel: #165162;
    --pitch10-primary-channel: #107895;
    --pitch10-secondary-note: #165162;
    --pitch10-primary-note: #107895;
    --noise1-secondary-channel: #71617C;
    --noise1-primary-channel: #977da9;
    --noise1-secondary-note: #71617C;
    --noise1-primary-note: #977da9;
    --noise2-secondary-channel: #4a4c5b;
    --noise2-primary-channel: #707591;
    --noise2-secondary-note: #4a4c5b;
    --noise2-primary-note: #707591;
    --noise3-secondary-channel: #817c7b;
    --noise3-primary-channel: #A19D9C;
    --noise3-secondary-note: #817c7b;
    --noise3-primary-note: #A19D9C;
    --noise4-secondary-channel: #ab847b;
    --noise4-primary-channel: #EAAC9D;
    --noise4-secondary-note: #ab847b;
    --noise4-primary-note: #EAAC9D;
    --noise5-secondary-channel: #B49D74;
    --noise5-primary-channel: #dec69b;
    --noise5-secondary-note: #B49D74;
    --noise5-primary-note: #dec69b;
    --mod1-secondary-channel: #722124;
    --mod1-primary-channel: #D13A41;
    --mod1-secondary-note: #722124;
    --mod1-primary-note: #D13A41;
    --mod2-secondary-channel: #213657;
    --mod2-primary-channel: #34558B;
    --mod2-secondary-note: #213657;
    --mod2-primary-note: #34558B;
    --mod3-secondary-channel: #555D46;
    --mod3-primary-channel: #848f6d;
    --mod3-secondary-note: #555D46;
    --mod3-primary-note: #848f6d;
    --mod4-secondary-channel: #71617C;
    --mod4-primary-channel: #a68ab9;
    --mod4-secondary-note: #71617C;
    --mod4-primary-note: #a68ab9;
    --mod-label-primary: #e9e9e9;
    --mod-label-secondary-text: #707070;
    --disabled-note-primary: #959595;
    --disabled-note-secondary: #6e6e6e;
}`;var oi=`:root {
    --page-margin: #040410;
    --editor-background: #040410;
    --playhead: rgba(255, 255, 255, 0.9);
    --secondary-text: #84859a;
    --box-selection-fill: #044b94;
    --ui-widget-background: #393e4f;
    --ui-widget-focus: #6d6886;
    --pitch-background: #393e4f;
    --tonic: #725491;
    --fifth-note: #54547a;
    --white-piano-key: #eee;
    --black-piano-key: #666;
    --use-color-formula: true;
    --track-editor-bg-pitch: #393e4f;
    --track-editor-bg-pitch-dim: #1c1d28;
    --track-editor-bg-noise: #3d3535;
    --track-editor-bg-noise-dim: #161313;
    --track-editor-bg-mod: #283560;
    --track-editor-bg-mod-dim: #0a101f;
    --multiplicative-mod-slider: #606c9f;
    --overwriting-mod-slider: #6850b5;
    --indicator-primary: #9c64f7;
    --indicator-secondary: #393e4f;
    --select2-opt-group: #5d576f;
    --input-box-outline: #222;
    --mute-button-normal: #dda85d;
    --mute-button-mod: #886eae;
    --mod-label-primary: #282840;
    --mod-label-secondary-text: rgb(87, 86, 120);
    --mod-label-primary-text: white;
    --pitch-secondary-channel-hue: 0;
    --pitch-secondary-channel-hue-scale: 6.5;
    --pitch-secondary-channel-sat: 83.3;
    --pitch-secondary-channel-sat-scale: 0.1;
    --pitch-secondary-channel-lum: 40;
    --pitch-secondary-channel-lum-scale: 0.05;
    --pitch-primary-channel-hue: 0;
    --pitch-primary-channel-hue-scale: 6.5;
    --pitch-primary-channel-sat: 100;
    --pitch-primary-channel-sat-scale: 0.1;
    --pitch-primary-channel-lum: 67.5;
    --pitch-primary-channel-lum-scale: 0.05;
    --pitch-secondary-note-hue: 0;
    --pitch-secondary-note-hue-scale: 6.5;
    --pitch-secondary-note-sat: 93.9;
    --pitch-secondary-note-sat-scale: 0.1;
    --pitch-secondary-note-lum: 25;
    --pitch-secondary-note-lum-scale: 0.05;
    --pitch-primary-note-hue: 0;
    --pitch-primary-note-hue-scale: 6.5;
    --pitch-primary-note-sat: 100;
    --pitch-primary-note-sat-scale: 0.05;
    --pitch-primary-note-lum: 85.6;
    --pitch-primary-note-lum-scale: 0.025;
    --noise-secondary-channel-hue: 0;
    --noise-secondary-channel-hue-scale: 2;
    --noise-secondary-channel-sat: 25;
    --noise-secondary-channel-sat-scale: 0;
    --noise-secondary-channel-lum: 42;
    --noise-secondary-channel-lum-scale: 0;
    --noise-primary-channel-hue: 0;
    --noise-primary-channel-hue-scale: 2;
    --noise-primary-channel-sat: 33;
    --noise-primary-channel-sat-scale: 0;
    --noise-primary-channel-lum: 63.5;
    --noise-primary-channel-lum-scale: 0;
    --noise-secondary-note-hue: 0;
    --noise-secondary-note-hue-scale: 2;
    --noise-secondary-note-sat: 33.5;
    --noise-secondary-note-sat-scale: 0;
    --noise-secondary-note-lum: 55;
    --noise-secondary-note-lum-scale: 0;
    --noise-primary-note-hue: 0;
    --noise-primary-note-hue-scale: 2;
    --noise-primary-note-sat: 46.5;
    --noise-primary-note-sat-scale: 0;
    --noise-primary-note-lum: 74;
    --noise-primary-note-lum-scale: 0;
    --mod-secondary-channel-hue: 192;
    --mod-secondary-channel-hue-scale: 1.5;
    --mod-secondary-channel-sat: 88;
    --mod-secondary-channel-sat-scale: 0;
    --mod-secondary-channel-lum: 50;
    --mod-secondary-channel-lum-scale: 0;
    --mod-primary-channel-hue: 192;
    --mod-primary-channel-hue-scale: 1.5;
    --mod-primary-channel-sat: 96;
    --mod-primary-channel-sat-scale: 0;
    --mod-primary-channel-lum: 80;
    --mod-primary-channel-lum-scale: 0;
    --mod-secondary-note-hue: 192;
    --mod-secondary-note-hue-scale: 1.5;
    --mod-secondary-note-sat: 92;
    --mod-secondary-note-sat-scale: 0;
    --mod-secondary-note-lum: 45;
    --mod-secondary-note-lum-scale: 0;
    --mod-primary-note-hue: 192;
    --mod-primary-note-hue-scale: 1.5;
    --mod-primary-note-sat: 96;
    --mod-primary-note-sat-scale: 0;
    --mod-primary-note-lum: 85;
    --mod-primary-note-lum-scale: 0;
    --disabled-note-primary: #91879f;
    --disabled-note-secondary: #6a677a;
}`;var ri=`:root {
    -webkit-text-stroke-width: 0.5px;
    --page-margin: #cab1d3;
    --editor-background: #f4f4f4;
    --hover-preview: #2d26a2;
    --playhead: rgb(20 25 153 / 90%);
    --primary-text: #b686c3;
    --secondary-text: #970f38;
    --inverted-text: #fefdff;
    --text-selection: rgb(56 21 8 / 99%);
    --box-selection-fill: rgb(20 203 160 / 61%);
    --loop-accent: #09dc0e;
    --link-accent: #3ee669;
    --ui-widget-background: #0e0a42;
    --ui-widget-focus: #380c42;
    --pitch-background: #8daf96;
    --tonic: #a16fb1;
    --fifth-note: #d08c8c;
    --white-piano-key: #fbffee;
    --black-piano-key: #c9d8e5;
    --white-piano-key-text: #101160;
    --black-piano-key-text: #231b03;
    --use-color-formula: true;
    --track-editor-bg-pitch: #34456a;
    --track-editor-bg-pitch-dim: #88afad;
    --track-editor-bg-noise: #564566;
    --track-editor-bg-noise-dim: #aaa;
    --track-editor-bg-mod: #7f779d;
    --track-editor-bg-mod-dim: #aaa;
    --multiplicative-mod-slider: #807caf;
    --overwriting-mod-slider: #909cdf;
    --indicator-primary: #ae38ff;
    --indicator-secondary: #5c8dbb;
    --select2-opt-group: #581b50;
    --input-box-outline: #6f7074;
    --mute-button-normal: #db1e00;
    --mute-button-mod: #883bf9;
    --mod-label-primary: #525297;
    --mod-label-secondary-text: rgb(197 147 245);
    --mod-label-primary-text: #a3aae9;
    --pitch-secondary-channel-hue: 26;
    --pitch-secondary-channel-hue-scale: 214.5;
    --pitch-secondary-channel-sat: 74.3;
    --pitch-secondary-channel-sat-scale: -0.1;
    --pitch-secondary-channel-lum: 55;
    --pitch-secondary-channel-lum-scale: -0.05;
    --pitch-primary-channel-hue: 26;
    --pitch-primary-channel-hue-scale: 214.5;
    --pitch-primary-channel-sat: 74;
    --pitch-primary-channel-sat-scale: -0.1;
    --pitch-primary-channel-lum: 65.5;
    --pitch-primary-channel-lum-scale: -0.05;
    --pitch-secondary-note-hue: 26;
    --pitch-secondary-note-hue-scale: 214.5;
    --pitch-secondary-note-sat: 74.9;
    --pitch-secondary-note-sat-scale: -0.1;
    --pitch-secondary-note-lum: 70;
    --pitch-secondary-note-lum-scale: -0.05;
    --pitch-primary-note-hue: 26;
    --pitch-primary-note-hue-scale: 214.5;
    --pitch-primary-note-sat: 85;
    --pitch-primary-note-sat-scale: 0.05;
    --pitch-primary-note-lum: 64.6;
    --pitch-primary-note-lum-scale: -0.025;
    --noise-secondary-channel-hue: 220;
    --noise-secondary-channel-hue-scale: 2;
    --noise-secondary-channel-sat: 25;
    --noise-secondary-channel-sat-scale: 0;
    --noise-secondary-channel-lum: 62;
    --noise-secondary-channel-lum-scale: -0.1;
    --noise-primary-channel-hue: 220;
    --noise-primary-channel-hue-scale: 2;
    --noise-primary-channel-sat: 53;
    --noise-primary-channel-sat-scale: 0;
    --noise-primary-channel-lum: 53.5;
    --noise-primary-channel-lum-scale: -0.1;
    --noise-secondary-note-hue: 220;
    --noise-secondary-note-hue-scale: 2;
    --noise-secondary-note-sat: 58.5;
    --noise-secondary-note-sat-scale: 0;
    --noise-secondary-note-lum: 85;
    --noise-secondary-note-lum-scale: -1;
    --noise-primary-note-hue: 220;
    --noise-primary-note-hue-scale: 2;
    --noise-primary-note-sat: 56.5;
    --noise-primary-note-sat-scale: 0;
    --noise-primary-note-lum: 54;
    --noise-primary-note-lum-scale: -1;
    --mod-secondary-channel-hue: 90;
    --mod-secondary-channel-hue-scale: 1.5;
    --mod-secondary-channel-sat: 88;
    --mod-secondary-channel-sat-scale: 0;
    --mod-secondary-channel-lum: 60;
    --mod-secondary-channel-lum-scale: 0;
    --mod-primary-channel-hue: 90;
    --mod-primary-channel-hue-scale: 1.5;
    --mod-primary-channel-sat: 89;
    --mod-primary-channel-sat-scale: 0;
    --mod-primary-channel-lum: 65;
    --mod-primary-channel-lum-scale: 0;
    --mod-secondary-note-hue: 90;
    --mod-secondary-note-hue-scale: 1.5;
    --mod-secondary-note-sat: 79;
    --mod-secondary-note-sat-scale: 0;
    --mod-secondary-note-lum: 95;
    --mod-secondary-note-lum-scale: 0;
    --mod-primary-note-hue: 90;
    --mod-primary-note-hue-scale: 1.5;
    --mod-primary-note-sat: 79;
    --mod-primary-note-sat-scale: 0;
    --mod-primary-note-lum: 55;
    --mod-primary-note-lum-scale: 0;
    --disabled-note-primary: #868;
    --disabled-note-secondary: #767;
}

.beepboxEditor button,
.beepboxEditor select {
    background-color: var(--secondary-text);
}

.select2-selection__rendered {
    background-color: var(--secondary-text);
}

.beepboxEditor .piano-button::before {
    display: none;
}

.promptContainerBG::before {
    box-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);
}`;var si=`:root {
    -webkit-text-stroke-width: 0.5px;
    --page-margin: #685d88;
    --editor-background: white;
    --hover-preview: black;
    --playhead: rgba(0, 0, 0, 0.5);
    --primary-text: black;
    --secondary-text: #777;
    --inverted-text: white;
    --text-selection: rgba(200, 170, 255, 0.99);
    --box-selection-fill: rgba(0, 0, 0, 0.1);
    --loop-accent: #98f;
    --link-accent: #74f;
    --ui-widget-background: #ececec;
    --ui-widget-focus: #eee;
    --pitch-background: #ececec;
    --tonic: #f0d6b6;
    --fifth-note: #bbddf0;
    --white-piano-key: #eee;
    --black-piano-key: #666;
    --track-editor-bg-pitch: #ececec;
    --track-editor-bg-pitch-dim: #fdfdfd;
    --track-editor-bg-noise: #ececec;
    --track-editor-bg-noise-dim: #fdfdfd;
    --track-editor-bg-mod: #dbecfd;
    --track-editor-bg-mod-dim: #ecfdff;
    --multiplicative-mod-slider: #789;
    --overwriting-mod-slider: #987;
    --indicator-primary: #98f;
    --indicator-secondary: #cde;
    --select2-opt-group: #cecece;
    --input-box-outline: #ddd;
    --mute-button-normal: #c0b47f;
    --mute-button-mod: #bd7fc0;
    --pitch1-secondary-channel: #6CD9ED;
    --pitch1-primary-channel: #00A0BD;
    --pitch1-secondary-note: #34C2DC;
    --pitch1-primary-note: #00758A;
    --pitch2-secondary-channel: #E3C941;
    --pitch2-primary-channel: #B49700;
    --pitch2-secondary-note: #D1B628;
    --pitch2-primary-note: #836E00;
    --pitch3-secondary-channel: #FF9D61;
    --pitch3-primary-channel: #E14E00;
    --pitch3-secondary-note: #F67D3C;
    --pitch3-primary-note: #B64000;
    --pitch4-secondary-channel: #4BE24B;
    --pitch4-primary-channel: #00A800;
    --pitch4-secondary-note: #2DC82D;
    --pitch4-primary-note: #008000;
    --pitch5-secondary-channel: #FF90FF;
    --pitch5-primary-channel: #E12EDF;
    --pitch5-secondary-note: #EC6EEC;
    --pitch5-primary-note: #A600A5;
    --pitch6-secondary-channel: #B5B5FE;
    --pitch6-primary-channel: #6969FD;
    --pitch6-secondary-note: #9393FE;
    --pitch6-primary-note: #4A4AD7;
    --pitch7-secondary-channel: #C2D848;
    --pitch7-primary-channel: #8EA800;
    --pitch7-secondary-note: #B0C82D;
    --pitch7-primary-note: #6C8000;
    --pitch8-secondary-channel: #FF90A4;
    --pitch8-primary-channel: #E12E4D;
    --pitch8-secondary-note: #EC6E85;
    --pitch8-primary-note: #A6001D;
    --pitch9-secondary-channel: #41E3B5;
    --pitch9-primary-channel: #00B481;
    --pitch9-secondary-note: #28D1A1;
    --pitch9-primary-note: #00835E;
    --pitch10-secondary-channel: #CA77FF;
    --pitch10-primary-channel: #9609FF;
    --pitch10-secondary-note: #B54FFF;
    --pitch10-primary-note: #8400E3;
    --noise1-secondary-channel: #C1C1C1;
    --noise1-primary-channel: #898989;
    --noise1-secondary-note: #ADADAD;
    --noise1-primary-note: #6C6C6C;
    --noise2-secondary-channel: #E8BB8C;
    --noise2-primary-channel: #BD7D3A;
    --noise2-secondary-note: #D1A374;
    --noise2-primary-note: #836342;
    --noise3-secondary-channel: #9BC4EB;
    --noise3-primary-channel: #4481BE;
    --noise3-secondary-note: #7CA7D3;
    --noise3-primary-note: #476685;
    --noise4-secondary-channel: #C5A5E0;
    --noise4-primary-channel: #8553AE;
    --noise4-secondary-note: #B290CC;
    --noise4-primary-note: #684F7D;
    --noise5-secondary-channel: #B8CE93;
    --noise5-primary-channel: #87A74F;
    --noise5-secondary-note: #ABC183;
    --noise5-primary-note: #68784C;
    --mod1-secondary-channel: #339955;
    --mod1-primary-channel: #77dd55;
    --mod1-primary-note: #2ad84a;
    --mod2-primary-note: #ba124a;
    --mod3-primary-note: #7a1caa;
    --mod4-primary-note: #a86810;
    --mod-label-primary: #dddddd;
    --mod-label-secondary-text: #777;
    --disabled-note-primary: #666;
    --disabled-note-secondary: #aaa;
}

.beepboxEditor button,
.beepboxEditor select {
    box-shadow: inset 0 0 0 1px var(--secondary-text);
}

.select2-selection__rendered {
    box-shadow: inset 0 0 0 1px var(--secondary-text);
}

.promptContainerBG::before {
    box-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);
}`;var li=`:root {
    --loop-accent: #2F1C40;
    --link-accent: #543873;
    --ui-widget-background: #2F1C40;
    --ui-widget-focus: #543873;
    --pitch-background: #2F1C40;
    --tonic: #42286D;
    --fifth-note: #37416B;
    --white-piano-key: #156CB6;
    --black-piano-key: #130D14;
    --pitch-channel-limit: 6;
    --noise-channel-limit: 3;
    --pitch1-secondary-channel: #156C99;
    --pitch1-primary-channel: #00CFDF;
    --pitch1-secondary-note: #0080A8;
    --pitch1-primary-note: #009FC6;
    --pitch2-secondary-channel: #AD923A;
    --pitch2-primary-channel: #FFD552;
    --pitch2-secondary-note: #C49736;
    --pitch2-primary-note: #EFC742;
    --pitch3-secondary-channel: #7A401E;
    --pitch3-primary-channel: #C14E30;
    --pitch3-secondary-note: #89381B;
    --pitch3-primary-note: #E15427;
    --pitch4-secondary-channel: #0B6030;
    --pitch4-primary-channel: #00915C;
    --pitch4-secondary-note: #004337;
    --pitch4-primary-note: #00915E;
    --pitch5-secondary-channel: #543873;
    --pitch5-primary-channel: #695B95;
    --pitch5-secondary-note: #8188BE;
    --pitch5-primary-note: #848ED8;
    --pitch6-secondary-channel: #585882;
    --pitch6-primary-channel: #5A72DD;
    --pitch7-secondary-channel: #7D7C2E;
    --pitch7-primary-channel: #B0C952;
    --pitch7-secondary-note: #7D7C2E;
    --pitch7-primary-note: #B0C952;
    --pitch8-secondary-channel: #7F426A;
    --pitch8-primary-channel: #B75297;
    --pitch8-secondary-note: #7F426A;
    --pitch8-primary-note: #B75297;
    --pitch9-secondary-channel: #2A6B65;
    --pitch9-primary-channel: #3BA590;
    --pitch9-secondary-note: #2A6B65;
    --pitch9-primary-note: #3BA590;
    --pitch10-secondary-channel: #713EA0;
    --pitch10-primary-channel: #925EC9;
    --pitch10-secondary-note: #713EA0;
    --pitch10-primary-note: #925EC9;
    --noise1-secondary-channel: #6C6C8E;
    --noise1-primary-channel: #8A7F96;
    --noise1-secondary-note: #A1A3B7;
    --noise1-primary-note: #DDBADD;
    --noise2-secondary-channel: #865E40;
    --noise2-secondary-note: #C7B47A;
    --noise2-primary-note: #CFC587;
    --noise3-secondary-channel: #7E7068;
    --noise3-primary-channel: #B19998;
    --noise3-secondary-note: #BAA6BC;
    --noise3-primary-note: #EDDCEC;
    --mod1-secondary-channel: #156C99;
    --mod1-primary-channel: #00CFDF;
    --mod1-secondary-note: #0080A8;
    --mod1-primary-note: #009FC6;
    --mod2-secondary-channel: #AD923A;
    --mod2-primary-channel: #FFD552;
    --mod2-secondary-note: #C49736;
    --mod2-primary-note: #EFC742;
    --mod3-secondary-channel: #7A401E;
    --mod3-primary-channel: #C14E30;
    --mod3-secondary-note: #89381B;
    --mod3-primary-note: #E15427;
    --mod4-secondary-channel: #0B6030;
    --mod4-primary-channel: #00915C;
    --mod4-secondary-note: #004337;
    --mod4-primary-note: #00915E;
}`;var ci=`:root {
    --page-margin: #000000;
    --editor-background: #000000;
    --playhead: rgba(255, 255, 255, 0.9);
    --secondary-text: #93B6AD;
    --text-selection: rgba(47, 255, 250, 0.99);
    --box-selection-fill: #03B068;
    --loop-accent: #FF0061;
    --link-accent: #FFC800;
    --ui-widget-background: #38554E;
    --ui-widget-focus: #2A7E69;
    --pitch-background: #281F23;
    --tonic: #004634;
    --fifth-note: #463400;
    --white-piano-key: #edc;
    --black-piano-key: #456;
    --use-color-formula: true;
    --track-editor-bg-pitch: #333333;
    --track-editor-bg-pitch-dim: #000000;
    --track-editor-bg-noise: #463400;
    --track-editor-bg-noise-dim: #000000;
    --track-editor-bg-mod: #004634;
    --track-editor-bg-mod-dim: #000000;
    --multiplicative-mod-slider: #FFC800;
    --overwriting-mod-slider: #00ffc0;
    --indicator-primary: #00ffc0;
    --indicator-secondary: #333333;
    --select2-opt-group: #2B2B2B;
    --input-box-outline: #69BFC6;
    --mute-button-normal: #00ffc0;
    --mute-button-mod: #FFC800;
    --mod-label-primary: #38554E;
    --mod-label-secondary-text: rgb(0, 43, 45);
    --mod-label-primary-text: white;
    --pitch-secondary-channel-hue: 0;
    --pitch-secondary-channel-hue-scale: 6.1;
    --pitch-secondary-channel-sat: 83.3;
    --pitch-secondary-channel-sat-scale: 0.1;
    --pitch-secondary-channel-lum: 40;
    --pitch-secondary-channel-lum-scale: 0.05;
    --pitch-primary-channel-hue: 0;
    --pitch-primary-channel-hue-scale: 6.1;
    --pitch-primary-channel-sat: 100;
    --pitch-primary-channel-sat-scale: 0.1;
    --pitch-primary-channel-lum: 67.5;
    --pitch-primary-channel-lum-scale: 0.05;
    --pitch-secondary-note-hue: 0;
    --pitch-secondary-note-hue-scale: 6.1;
    --pitch-secondary-note-sat: 93.9;
    --pitch-secondary-note-sat-scale: 0.1;
    --pitch-secondary-note-lum: 25;
    --pitch-secondary-note-lum-scale: 0.05;
    --pitch-primary-note-hue: 0;
    --pitch-primary-note-hue-scale: 6.1;
    --pitch-primary-note-sat: 100;
    --pitch-primary-note-sat-scale: 0.05;
    --pitch-primary-note-lum: 85.6;
    --pitch-primary-note-lum-scale: 0.025;
    --noise-secondary-channel-hue: 0;
    --noise-secondary-channel-hue-scale: 2;
    --noise-secondary-channel-sat: 25;
    --noise-secondary-channel-sat-scale: 0;
    --noise-secondary-channel-lum: 42;
    --noise-secondary-channel-lum-scale: 0;
    --noise-primary-channel-hue: 0;
    --noise-primary-channel-hue-scale: 2;
    --noise-primary-channel-sat: 33;
    --noise-primary-channel-sat-scale: 0;
    --noise-primary-channel-lum: 63.5;
    --noise-primary-channel-lum-scale: 0;
    --noise-secondary-note-hue: 0;
    --noise-secondary-note-hue-scale: 2;
    --noise-secondary-note-sat: 33.5;
    --noise-secondary-note-sat-scale: 0;
    --noise-secondary-note-lum: 55;
    --noise-secondary-note-lum-scale: 0;
    --noise-primary-note-hue: 0;
    --noise-primary-note-hue-scale: 2;
    --noise-primary-note-sat: 46.5;
    --noise-primary-note-sat-scale: 0;
    --noise-primary-note-lum: 74;
    --noise-primary-note-lum-scale: 0;
    --mod-secondary-channel-hue: 192;
    --mod-secondary-channel-hue-scale: 1.5;
    --mod-secondary-channel-sat: 88;
    --mod-secondary-channel-sat-scale: 0;
    --mod-secondary-channel-lum: 50;
    --mod-secondary-channel-lum-scale: 0;
    --mod-primary-channel-hue: 192;
    --mod-primary-channel-hue-scale: 1.5;
    --mod-primary-channel-sat: 96;
    --mod-primary-channel-sat-scale: 0;
    --mod-primary-channel-lum: 80;
    --mod-primary-channel-lum-scale: 0;
    --mod-secondary-note-hue: 192;
    --mod-secondary-note-hue-scale: 1.5;
    --mod-secondary-note-sat: 92;
    --mod-secondary-note-sat-scale: 0;
    --mod-secondary-note-lum: 45;
    --mod-secondary-note-lum-scale: 0;
    --mod-primary-note-hue: 192;
    --mod-primary-note-hue-scale: 1.5;
    --mod-primary-note-sat: 96;
    --mod-primary-note-sat-scale: 0;
    --mod-primary-note-lum: 85;
    --mod-primary-note-lum-scale: 0;
}`;var pi=`:root {
    --page-margin: #010a1e;
    --editor-background: #010a1e;
    --hover-preview: #dfe9fe;
    --playhead: #e7f5f6;
    --primary-text: #f0fdff;
    --secondary-text: #c4c7d7;
    --inverted-text: #0f0623;
    --text-selection: #3f0ab4;
    --box-selection-fill: #32afb3;
    --loop-accent: #1719ff;
    --link-accent: #83a6ed;
    --ui-widget-background: #222856;
    --ui-widget-focus: #21417c;
    --pitch-background: #10264a;
    --tonic: #0797ce;
    --fifth-note: #3e2fb5;
    --white-piano-key: #ebf3f4;
    --black-piano-key: #253353;
    --white-piano-key-text: black;
    --black-piano-key-text: white;
    --oscilloscope-line-L: #72dcfc;
    --oscilloscope-line-R: #304eff;
    --mod-title: #1b2fff;
    --use-color-formula: true;
    --track-editor-bg-pitch: #183b65;
    --track-editor-bg-pitch-dim: #1f2c3d;
    --track-editor-bg-noise: #2e196d;
    --track-editor-bg-noise-dim: #212038;
    --track-editor-bg-mod: #066433;
    --track-editor-bg-mod-dim: #152b1f;
    --multiplicative-mod-slider: #1242a4;
    --overwriting-mod-slider: #2218db;
    --indicator-primary: #1698d3;
    --indicator-secondary: #1b478e;
    --select2-opt-group: #312f6d;
    --input-box-outline: #788b96;
    --mute-button-normal: #1d34f2;
    --mute-button-mod: #06bad6;
    --mod-label-primary: #14383f;
    --mod-label-secondary-text: #1d7080;
    --mod-label-primary-text: #b7e9f2;
    --pitch-secondary-channel-hue: 190;
    --pitch-secondary-channel-hue-scale: 2.5;
    --pitch-secondary-channel-sat: 80;
    --pitch-secondary-channel-sat-scale: 0.1;
    --pitch-secondary-channel-lum: 50;
    --pitch-secondary-channel-lum-scale: 0.05;
    --pitch-primary-channel-hue: 190;
    --pitch-primary-channel-hue-scale: 2.5;
    --pitch-primary-channel-sat: 100;
    --pitch-primary-channel-sat-scale: 0.1;
    --pitch-primary-channel-lum: 76.5;
    --pitch-primary-channel-lum-scale: 0.05;
    --pitch-secondary-note-hue: 190;
    --pitch-secondary-note-hue-scale: 2.5;
    --pitch-secondary-note-sat: 90;
    --pitch-secondary-note-sat-scale: 0.1;
    --pitch-secondary-note-lum: 30;
    --pitch-secondary-note-lum-scale: 0.05;
    --pitch-primary-note-hue: 190;
    --pitch-primary-note-hue-scale: 2.5;
    --pitch-primary-note-sat: 100;
    --pitch-primary-note-sat-scale: 0.05;
    --pitch-primary-note-lum: 85;
    --pitch-primary-note-lum-scale: 0.025;
    --noise-secondary-channel-hue: 200;
    --noise-secondary-channel-hue-scale: 2.5;
    --noise-secondary-channel-sat: 25;
    --noise-secondary-channel-sat-scale: 0;
    --noise-secondary-channel-lum: 42;
    --noise-secondary-channel-lum-scale: 0;
    --noise-primary-channel-hue: 200;
    --noise-primary-channel-hue-scale: 2.5;
    --noise-primary-channel-sat: 33;
    --noise-primary-channel-sat-scale: 0;
    --noise-primary-channel-lum: 63.5;
    --noise-primary-channel-lum-scale: 0;
    --noise-secondary-note-hue: 200;
    --noise-secondary-note-hue-scale: 2.5;
    --noise-secondary-note-sat: 33.5;
    --noise-secondary-note-sat-scale: 0;
    --noise-secondary-note-lum: 55;
    --noise-secondary-note-lum-scale: 0;
    --noise-primary-note-hue: 200;
    --noise-primary-note-hue-scale: 2.5;
    --noise-primary-note-sat: 46.5;
    --noise-primary-note-sat-scale: 0;
    --noise-primary-note-lum: 74;
    --noise-primary-note-lum-scale: 0;
    --mod-secondary-channel-hue: 140;
    --mod-secondary-channel-hue-scale: 1.5;
    --mod-secondary-channel-sat: 90;
    --mod-secondary-channel-sat-scale: 0;
    --mod-secondary-channel-lum: 55;
    --mod-secondary-channel-lum-scale: 0;
    --mod-primary-channel-hue: 140;
    --mod-primary-channel-hue-scale: 1.5;
    --mod-primary-channel-sat: 100;
    --mod-primary-channel-sat-scale: 0;
    --mod-primary-channel-lum: 85;
    --mod-primary-channel-lum-scale: 0;
    --mod-secondary-note-hue: 140;
    --mod-secondary-note-hue-scale: 1.5;
    --mod-secondary-note-sat: 95;
    --mod-secondary-note-sat-scale: 0;
    --mod-secondary-note-lum: 50;
    --mod-secondary-note-lum-scale: 0;
    --mod-primary-note-hue: 140;
    --mod-primary-note-hue-scale: 1.5;
    --mod-primary-note-sat: 100;
    --mod-primary-note-sat-scale: 0;
    --mod-primary-note-lum: 90;
    --mod-primary-note-lum-scale: 0;
    --disabled-note-primary: #53527b;
    --disabled-note-secondary: #1c1b30;
}`;var di=`:root {
    --page-margin: #000;
    --editor-background: #000;
    --hover-preview: #757575;
    --playhead: #fff;
    --primary-text: #fff;
    --secondary-text: #acacac;
    --inverted-text: #290505;
    --text-selection: rgba(155, 155, 155, 0.99);
    --box-selection-fill: #79797970;
    --loop-accent: #646464;
    --link-accent: #707070;
    --ui-widget-background: #353535;
    --ui-widget-focus: #464646;
    --pitch-background: #222121;
    --tonic: #555955;
    --fifth-note: #1a1818;
    --white-piano-key: #a89e9e;
    --black-piano-key: #2d2424;
    --black-piano-key-text: #ffffff;
    --use-color-formula: true;
    --track-editor-bg-pitch: #373737;
    --track-editor-bg-pitch-dim: #131313;
    --track-editor-bg-noise: #484848;
    --track-editor-bg-noise-dim: #131313;
    --track-editor-bg-mod: #373737;
    --track-editor-bg-mod-dim: #131313;
    --multiplicative-mod-slider: #555;
    --overwriting-mod-slider: #464545;
    --indicator-primary: #e0e0e0;
    --indicator-secondary: #404040;
    --select2-opt-group: #3c3b3b;
    --input-box-outline: #757575;
    --mute-button-normal: #8e8d8d;
    --mute-button-mod: #ddd;
    --mod-label-primary: #262526;
    --mod-label-secondary-text: rgb(227, 222, 225);
    --mod-label-primary-text: #b9b9b9;
    --pitch-secondary-channel-hue: 240;
    --pitch-secondary-channel-hue-scale: 228;
    --pitch-secondary-channel-sat: 73.3;
    --pitch-secondary-channel-sat-scale: 0.1;
    --pitch-secondary-channel-lum: 25;
    --pitch-secondary-channel-lum-scale: 0.05;
    --pitch-primary-channel-hue: 240;
    --pitch-primary-channel-hue-scale: 228;
    --pitch-primary-channel-sat: 80;
    --pitch-primary-channel-sat-scale: 0.1;
    --pitch-primary-channel-lum: 60.5;
    --pitch-primary-channel-lum-scale: 0.05;
    --pitch-secondary-note-hue: 240;
    --pitch-secondary-note-hue-scale: 228;
    --pitch-secondary-note-sat: 73.9;
    --pitch-secondary-note-sat-scale: 0.1;
    --pitch-secondary-note-lum: 32;
    --pitch-secondary-note-lum-scale: 0.05;
    --pitch-primary-note-hue: 240;
    --pitch-primary-note-hue-scale: 228;
    --pitch-primary-note-sat: 90;
    --pitch-primary-note-sat-scale: 0.05;
    --pitch-primary-note-lum: 80.6;
    --pitch-primary-note-lum-scale: 0.025;
    --noise-secondary-channel-hue: 160;
    --noise-secondary-channel-hue-scale: 2;
    --noise-secondary-channel-sat: 25;
    --noise-secondary-channel-sat-scale: 0;
    --noise-secondary-channel-lum: 42;
    --noise-secondary-channel-lum-scale: 0;
    --noise-primary-channel-hue: 160;
    --noise-primary-channel-hue-scale: 2;
    --noise-primary-channel-sat: 33;
    --noise-primary-channel-sat-scale: 0;
    --noise-primary-channel-lum: 63.5;
    --noise-primary-channel-lum-scale: 0;
    --noise-secondary-note-hue: 160;
    --noise-secondary-note-hue-scale: 2;
    --noise-secondary-note-sat: 33.5;
    --noise-secondary-note-sat-scale: 0;
    --noise-secondary-note-lum: 55;
    --noise-secondary-note-lum-scale: 0;
    --noise-primary-note-hue: 160;
    --noise-primary-note-hue-scale: 2;
    --noise-primary-note-sat: 46.5;
    --noise-primary-note-sat-scale: 0;
    --noise-primary-note-lum: 74;
    --noise-primary-note-lum-scale: 0;
    --mod-secondary-channel-hue: 62;
    --mod-secondary-channel-hue-scale: 1.5;
    --mod-secondary-channel-sat: 88;
    --mod-secondary-channel-sat-scale: 0;
    --mod-secondary-channel-lum: 30;
    --mod-secondary-channel-lum-scale: 0;
    --mod-primary-channel-hue: 62;
    --mod-primary-channel-hue-scale: 1.5;
    --mod-primary-channel-sat: 96;
    --mod-primary-channel-sat-scale: 0;
    --mod-primary-channel-lum: 80;
    --mod-primary-channel-lum-scale: 0;
    --mod-secondary-note-hue: 62;
    --mod-secondary-note-hue-scale: 1.5;
    --mod-secondary-note-sat: 92;
    --mod-secondary-note-sat-scale: 0;
    --mod-secondary-note-lum: 34;
    --mod-secondary-note-lum-scale: 0;
    --mod-primary-note-hue: 62;
    --mod-primary-note-hue-scale: 1.5;
    --mod-primary-note-sat: 96;
    --mod-primary-note-sat-scale: 0;
    --mod-primary-note-lum: 75;
    --mod-primary-note-lum-scale: 0;
    --disabled-note-primary: #66a;
    --disabled-note-secondary: #447;
}`;var ui=`:root {
    --loop-accent: #9900cc;
    --pitch-channel-limit: 6;
    --noise-channel-limit: 4;
    --pitch1-secondary-note: #0099a1;
    --pitch1-primary-note: #25f3ff;
    --pitch2-secondary-channel: #439143;
    --pitch2-primary-channel: #44ff44;
    --pitch2-secondary-note: #439143;
    --pitch2-primary-note: #44ff44;
    --pitch3-secondary-channel: #a1a100;
    --pitch3-primary-channel: #ffff25;
    --pitch3-secondary-note: #a1a100;
    --pitch3-primary-note: #ffff25;
    --pitch4-secondary-channel: #c75000;
    --pitch4-primary-channel: #ff9752;
    --pitch4-secondary-note: #c75000;
    --pitch4-primary-note: #ff9752;
    --pitch5-secondary-note: #d020d0;
    --pitch5-primary-note: #ff90ff;
    --pitch6-secondary-channel: #552377;
    --pitch6-primary-channel: #9f31ea;
    --pitch6-secondary-note: #552377;
    --pitch6-primary-note: #9f31ea;
    --pitch7-secondary-channel: #221b89;
    --pitch7-primary-channel: #2b6aff;
    --pitch7-secondary-note: #221b89;
    --pitch7-primary-note: #2b6aff;
    --pitch8-secondary-channel: #00995f;
    --pitch8-primary-channel: #00ff9f;
    --pitch8-secondary-note: #00995f;
    --pitch8-primary-note: #00ff9f;
    --pitch9-secondary-channel: #d6b03e;
    --pitch9-primary-channel: #ffbf00;
    --pitch9-secondary-note: #d6b03e;
    --pitch9-primary-note: #ffbf00;
    --pitch10-secondary-channel: #b25915;
    --pitch10-primary-channel: #d85d00;
    --pitch10-secondary-note: #b25915;
    --pitch10-primary-note: #d85d00;
    --noise1-secondary-channel: #991010;
    --noise1-primary-channel: #ff1616;
    --noise1-secondary-note: #991010;
    --noise1-primary-note: #ff1616;
    --noise2-secondary-channel: #aaaaaa;
    --noise2-primary-channel: #ffffff;
    --noise2-secondary-note: #aaaaaa;
    --noise2-primary-note: #ffffff;
    --noise3-secondary-channel: #5869BD;
    --noise3-primary-channel: #768dfc;
    --noise3-secondary-note: #5869BD;
    --noise3-primary-note: #768dfc;
    --noise4-secondary-channel: #7c9b42;
    --noise4-primary-channel: #a5ff00;
    --noise4-secondary-note: #7c9b42;
    --noise4-primary-note: #a5ff00;
    --noise5-secondary-channel: #7c9b42;
    --mod1-secondary-channel: #0099a1;
    --mod1-primary-channel: #25f3ff;
    --mod1-secondary-note: #0099a1;
    --mod1-primary-note: #25f3ff;
    --mod2-secondary-channel: #439143;
    --mod2-primary-channel: #44ff44;
    --mod2-secondary-note: #439143;
    --mod2-primary-note: #44ff44;
    --mod3-secondary-channel: #a1a100;
    --mod3-primary-channel: #ffff25;
    --mod3-secondary-note: #a1a100;
    --mod3-primary-note: #ffff25;
    --mod4-secondary-channel: #c75000;
    --mod4-primary-channel: #ff9752;
    --mod4-secondary-note: #c75000;
    --mod4-primary-note: #ff9752;
    --text-disabled-icon: \u2717;
}`;var hi=`:root {
    --page-margin: #020514;
    --editor-background: #020514;
    --primary-text: #D4DCE9;
    --secondary-text: #3E87DA;
    --text-selection: #03599bd9;
    --box-selection-fill: hsl(206deg 66% 41% / 85%);
    --loop-accent: #639BD6;
    --link-accent: #A8C6E8;
    --ui-widget-background: #1e2940;
    --ui-widget-focus: #324b81;
    --pitch-background: #223849;
    --tonic: #33536c;
    --fifth-note: hsl(206deg 36% 16%);
    --white-piano-key: #c1bfe9;
    --black-piano-key: #454354;
    --track-editor-bg-pitch: #25568d80;
    --track-editor-bg-pitch-dim: #10253c80;
    --track-editor-bg-noise: #25568d80;
    --track-editor-bg-noise-dim: #10253c80;
    --track-editor-bg-mod: #25568d80;
    --track-editor-bg-mod-dim: #10253c80;
    --multiplicative-mod-slider: #0476cd;
    --overwriting-mod-slider: #035899;
    --indicator-primary: #57a1f4;
    --indicator-secondary: #2e5684;
    --select2-opt-group: #24355c;
    --input-box-outline: #141e34;
    --mute-button-normal: #6ebffc;
    --mute-button-mod: #0a92fa;
    --pitch1-secondary-channel: #47425c;
    --pitch1-primary-channel: #918bac;
    --pitch1-secondary-note: #6b6489;
    --pitch1-primary-note: #a8a3bf;
    --pitch2-secondary-channel: #626493;
    --pitch2-primary-channel: #bdbed3;
    --pitch2-secondary-note: #626493;
    --pitch2-primary-note: #bdbed3;
    --pitch3-secondary-channel: #6e89b4;
    --pitch3-primary-channel: #d4dce9;
    --pitch3-secondary-note: #6e89b4;
    --pitch3-primary-note: #d4dce9;
    --pitch4-secondary-channel: #4c77a9;
    --pitch4-primary-channel: #a8c6e8;
    --pitch4-secondary-note: #4c77a9;
    --pitch4-primary-note: #a8c6e8;
    --pitch5-secondary-channel: #314e6d;
    --pitch5-primary-channel: #639bd6;
    --pitch5-secondary-note: #46698f;
    --pitch5-primary-note: #639bd6;
    --pitch6-secondary-channel: #143d6b;
    --pitch6-primary-channel: #3e87da;
    --pitch6-secondary-note: #143d6b;
    --pitch6-primary-note: #3e87da;
    --pitch7-secondary-channel: #314e6d;
    --pitch7-primary-channel: #639bd6;
    --pitch7-secondary-note: #314e6d;
    --pitch7-primary-note: #639bd6;
    --pitch8-secondary-channel: #4c77a9;
    --pitch8-primary-channel: #a8c6e8;
    --pitch8-secondary-note: #4c77a9;
    --pitch8-primary-note: #a8c6e8;
    --pitch9-secondary-channel: #6e89b4;
    --pitch9-primary-channel: #d4dce9;
    --pitch9-secondary-note: #6e89b4;
    --pitch9-primary-note: #d4dce9;
    --pitch10-secondary-channel: #626493;
    --pitch10-primary-channel: #bdbed3;
    --pitch10-secondary-note: #626493;
    --pitch10-primary-note: #bdbed3;
    --noise1-secondary-channel: #4b4a55;
    --noise1-primary-channel: #9795a3;
    --noise1-secondary-note: #4b4a55;
    --noise1-primary-note: #9795a3;
    --noise2-secondary-channel: #858e9d;
    --noise2-primary-channel: #d7dce5;
    --noise2-secondary-note: #858e9d;
    --noise2-primary-note: #d7dce5;
    --noise3-secondary-channel: #394e65;
    --noise3-primary-channel: #809bb7;
    --noise3-secondary-note: #394e65;
    --noise3-primary-note: #809bb7;
    --noise4-secondary-channel: #37577b;
    --noise4-primary-channel: #6189b8;
    --noise4-secondary-note: #37577b;
    --noise4-primary-note: #6189b8;
    --noise5-secondary-channel: #223849;
    --noise5-primary-channel: #5588af;
    --noise5-secondary-note: #223849;
    --noise5-primary-note: #5588af;
    --mod1-secondary-channel: #3e336c;
    --mod1-primary-channel: #6d60a4;
    --mod1-secondary-note: #3e336c;
    --mod1-primary-note: #6d60a4;
    --mod2-secondary-channel: #716791;
    --mod2-primary-channel: #bdbed3;
    --mod2-secondary-note: #716791;
    --mod2-primary-note: #bdbed3;
    --mod3-secondary-channel: #6b91bd;
    --mod3-primary-channel: #4b8fdd;
    --mod3-secondary-note: #597ca7;
    --mod3-primary-note: #7eade3;
    --mod4-secondary-channel: #14559f;
    --mod4-primary-channel: #3386e6;
    --mod4-secondary-note: #14559f;
    --mod4-primary-note: #3386e6;
    --mod-label-primary: #1e2940;
    --mod-label-secondary-text: #748ebe;
    --mod-label-primary-text: white;
    --disabled-note-primary: #828282;
    --disabled-note-secondary: #4f4f4f;
}`;var fi=`:root {
    --page-margin: #120807;
    --editor-background: #120807;
    --hover-preview: #e79a82;
    --playhead: #e79a82;
    --primary-text: #decdbf;
    --secondary-text: #fa99bb;
    --text-selection: #990036;
    --loop-accent: #f6377a;
    --link-accent: #f6377a;
    --ui-widget-background: #24160f;
    --ui-widget-focus: #362217;
    --pitch-background: #1e1106;
    --tonic: #382414;
    --fifth-note: #41240c;
    --white-piano-key: #e1c5b7;
    --black-piano-key: #482c1e;
    --white-piano-key-text: black;
    --black-piano-key-text: white;
    --track-editor-bg-pitch: #4d2a19;
    --track-editor-bg-pitch-dim: #27150c;
    --track-editor-bg-noise: #4d2a19;
    --track-editor-bg-noise-dim: #27150c;
    --track-editor-bg-mod: #4d2a19;
    --track-editor-bg-mod-dim: #27150c;
    --multiplicative-mod-slider: #decdbf;
    --overwriting-mod-slider: #decdbf;
    --indicator-primary: #decdbf;
    --indicator-secondary: #362217;
    --select2-opt-group: #24160f;
    --input-box-outline: #24160f;
    --mute-button-normal: #ff66a1;
    --mute-button-mod: #e61968;
    --pitch1-secondary-channel: #680029;
    --pitch1-primary-channel: #cc0052;
    --pitch1-secondary-note: #660029;
    --pitch1-primary-note: #cc0052;
    --pitch2-secondary-channel: #7e1b43;
    --pitch2-primary-channel: #d32e71;
    --pitch2-secondary-note: #7e1b43;
    --pitch2-primary-note: #d32e71;
    --pitch3-secondary-channel: #aa275e;
    --pitch3-primary-channel: #da5d91;
    --pitch3-secondary-note: #aa275e;
    --pitch3-primary-note: #da5d91;
    --pitch4-secondary-channel: #cc3878;
    --pitch4-primary-channel: #e18bb0;
    --pitch4-secondary-note: #cc3878;
    --pitch4-primary-note: #e18bb0;
    --pitch5-secondary-channel: #d06c9b;
    --pitch5-primary-channel: #e9bad0;
    --pitch5-secondary-note: #d06c9b;
    --pitch5-primary-note: #e9bad0;
    --pitch6-secondary-channel: #c9acc5;
    --pitch6-primary-channel: #f0e8ef;
    --pitch6-secondary-note: #c9acc5;
    --pitch6-primary-note: #f0e8ef;
    --pitch7-secondary-channel: #d06c9b;
    --pitch7-primary-channel: #e9bad0;
    --pitch7-secondary-note: #d06c9b;
    --pitch7-primary-note: #e9bad0;
    --pitch8-secondary-channel: #cc3878;
    --pitch8-primary-channel: #e18bb0;
    --pitch8-secondary-note: #cc3878;
    --pitch8-primary-note: #e18bb0;
    --pitch9-secondary-channel: #aa275e;
    --pitch9-primary-channel: #da5d91;
    --pitch9-secondary-note: #aa275e;
    --pitch9-primary-note: #da5d91;
    --pitch10-secondary-channel: #7e1b43;
    --pitch10-primary-channel: #d32e71;
    --pitch10-secondary-note: #7e1b43;
    --pitch10-primary-note: #d32e71;
    --noise1-secondary-channel: #683a37;
    --noise1-primary-channel: #A85F5A;
    --noise1-secondary-note: #683a37;
    --noise1-primary-note: #A85F5A;
    --noise2-secondary-channel: #7c4a41;
    --noise2-primary-channel: #B47A70;
    --noise2-secondary-note: #7c4a41;
    --noise2-primary-note: #B47A70;
    --noise3-secondary-channel: #935f4d;
    --noise3-primary-channel: #c09587;
    --noise3-secondary-note: #935f4d;
    --noise3-primary-note: #C09587;
    --noise4-secondary-channel: #aa795a;
    --noise4-primary-channel: #cdb09d;
    --noise4-secondary-note: #aa795a;
    --noise4-primary-note: #CDAF9D;
    --noise5-secondary-channel: #bb987c;
    --noise5-primary-channel: #decdbf;
    --noise5-secondary-note: #bb987c;
    --noise5-primary-note: #decdbf;
    --mod1-secondary-channel: #6ca784;
    --mod1-primary-channel: #accdb9;
    --mod1-secondary-note: #6ca784;
    --mod1-primary-note: #accdb9;
    --mod2-secondary-channel: #7daa9f;
    --mod2-primary-channel: #bbd3cd;
    --mod2-secondary-note: #7daa9f;
    --mod2-primary-note: #bbd3cd;
    --mod3-secondary-channel: #70a3a9;
    --mod3-primary-channel: #afcccf;
    --mod3-secondary-note: #70a3a9;
    --mod3-primary-note: #afcccf;
    --mod4-secondary-channel: #5698b8;
    --mod4-primary-channel: #9ec3d6;
    --mod4-secondary-note: #5698b8;
    --mod4-primary-note: #9ec3d6;
    --mod-label-primary: #24160f;
    --mod-label-secondary-text: #E5AFC2;
    --mod-label-primary-text: #decdbf;
    --disabled-note-primary: #bababa;
    --disabled-note-secondary: #878787;
}`;var mi=`:root {
    --page-margin: #040410;
    --editor-background: #150e1f;
    --playhead: rgba(255, 255, 255, 0.9);
    --secondary-text: #8C849A;
    --text-selection: rgba(141, 79, 201, 0.99);
    --box-selection-fill: #311E44;
    --loop-accent: #CC688C;
    --link-accent: #817DC9;
    --ui-widget-background: #44394F;
    --ui-widget-focus: #7A6386;
    --pitch-background: #393e4f40;
    --tonic: #7D5C9EC0;
    --fifth-note: #ab77bd50;
    --white-piano-key: #EEEEEE;
    --black-piano-key: #5F5566;
    --use-color-formula: true;
    --track-editor-bg-pitch: #46374C;
    --track-editor-bg-pitch-dim: #1F1C2850;
    --track-editor-bg-noise: #3D353B;
    --track-editor-bg-noise-dim: #16131550;
    --track-editor-bg-mod: #623F4C;
    --track-editor-bg-mod-dim: #361A2450;
    --multiplicative-mod-slider: #9F6E6A;
    --overwriting-mod-slider: #A664B5;
    --indicator-primary: #CC6B8E;
    --indicator-secondary: #44394F;
    --select2-opt-group: #6A576F;
    --input-box-outline: #222;
    --mute-button-normal: #BF91DC;
    --mute-button-mod: #DC8C9A;
    --mod-label-primary: #3A2840;
    --mod-label-secondary-text: #62485E;
    --mod-label-primary-text: white;
    --pitch-secondary-channel-hue: -96;
    --pitch-secondary-channel-hue-scale: 4.2;
    --pitch-secondary-channel-sat: 50.3;
    --pitch-secondary-channel-sat-scale: 0.1;
    --pitch-secondary-channel-lum: 40;
    --pitch-secondary-channel-lum-scale: 0.05;
    --pitch-primary-channel-hue: -96;
    --pitch-primary-channel-hue-scale: 4.2;
    --pitch-primary-channel-sat: 70;
    --pitch-primary-channel-sat-scale: 0.1;
    --pitch-primary-channel-lum: 67.5;
    --pitch-primary-channel-lum-scale: 0.05;
    --pitch-secondary-note-hue: -96;
    --pitch-secondary-note-hue-scale: 4.2;
    --pitch-secondary-note-sat: 70.9;
    --pitch-secondary-note-sat-scale: 0.1;
    --pitch-secondary-note-lum: 25;
    --pitch-secondary-note-lum-scale: 0.05;
    --pitch-primary-note-hue: -96;
    --pitch-primary-note-hue-scale: 4.2;
    --pitch-primary-note-sat: 90;
    --pitch-primary-note-sat-scale: 0.05;
    --pitch-primary-note-lum: 85.6;
    --pitch-primary-note-lum-scale: 0.025;
    --noise-secondary-channel-hue: 16;
    --noise-secondary-channel-hue-scale: -1.33;
    --noise-secondary-channel-sat: 25;
    --noise-secondary-channel-sat-scale: 0;
    --noise-secondary-channel-lum: 42;
    --noise-secondary-channel-lum-scale: 0;
    --noise-primary-channel-hue: 16;
    --noise-primary-channel-hue-scale: -1.33;
    --noise-primary-channel-sat: 33;
    --noise-primary-channel-sat-scale: 0;
    --noise-primary-channel-lum: 63.5;
    --noise-primary-channel-lum-scale: 0;
    --noise-secondary-note-hue: 12;
    --noise-secondary-note-hue-scale: -1.33;
    --noise-secondary-note-sat: 33.5;
    --noise-secondary-note-sat-scale: 0;
    --noise-secondary-note-lum: 55;
    --noise-secondary-note-lum-scale: 0;
    --noise-primary-note-hue: 12;
    --noise-primary-note-hue-scale: -1.33;
    --noise-primary-note-sat: 46.5;
    --noise-primary-note-sat-scale: 0;
    --noise-primary-note-lum: 74;
    --noise-primary-note-lum-scale: 0;
    --mod-secondary-channel-hue: 12;
    --mod-secondary-channel-hue-scale: -.75;
    --mod-secondary-channel-sat: 50;
    --mod-secondary-channel-sat-scale: 0;
    --mod-secondary-channel-lum: 50;
    --mod-secondary-channel-lum-scale: 0;
    --mod-primary-channel-hue: 12;
    --mod-primary-channel-hue-scale: -.75;
    --mod-primary-channel-sat: 70;
    --mod-primary-channel-sat-scale: 0;
    --mod-primary-channel-lum: 80;
    --mod-primary-channel-lum-scale: 0;
    --mod-secondary-note-hue: 12;
    --mod-secondary-note-hue-scale: -.75;
    --mod-secondary-note-sat: 75;
    --mod-secondary-note-sat-scale: 0;
    --mod-secondary-note-lum: 45;
    --mod-secondary-note-lum-scale: 0;
    --mod-primary-note-hue: 12;
    --mod-primary-note-hue-scale: -.75;
    --mod-primary-note-sat: 85;
    --mod-primary-note-sat-scale: 0;
    --mod-primary-note-lum: 85;
    --mod-primary-note-lum-scale: 0;
    --disabled-note-primary: #aaa;
}`;var yi=`:root {
    --page-margin: #000;
    --editor-background: #060606;
    --hover-preview: #fff;
    --playhead: rgb(0, 242, 255);
    --primary-text: #00fff5;
    --secondary-text: #a82f2f;
    --inverted-text: #000;
    --text-selection: rgba(98, 46, 164, .99);
    --box-selection-fill: #b74a4a;
    --loop-accent: #7744FF;
    --link-accent: #ff00e1;
    --ui-widget-background: #484848;
    --ui-widget-focus: #3e3e3e;
    --pitch-background: #0a2d44;
    --tonic: #9150ff;
    --fifth-note: #900;
    --white-piano-key: #353535;
    --black-piano-key: #fff;
    --white-piano-key-text: #fff;
    --black-piano-key-text: #000;
    --track-editor-bg-pitch: #424242;
    --track-editor-bg-pitch-dim: #000;
    --track-editor-bg-noise: #424242;
    --track-editor-bg-noise-dim: #000;
    --track-editor-bg-mod: #3c3c3c;
    --track-editor-bg-mod-dim: #000;
    --multiplicative-mod-slider: #fff;
    --overwriting-mod-slider: #9d9d9d;
    --indicator-primary: #f00;
    --indicator-secondary: #919191;
    --select2-opt-group: #5d576f;
    --input-box-outline: #626262;
    --mute-button-normal: #9a00ff;
    --mute-button-mod: #00fff7;
    --mod-label-primary: #2b2b2b;
    --pitch-channel-limit: 4;
    --noise-channel-limit: 2;

    --pitch1-secondary-channel: #c13cbf;
    --pitch1-primary-channel: #f75dff;
    --pitch1-secondary-note: #b930a2;
    --pitch1-primary-note: #fca5ff;
    --pitch2-secondary-channel: #800000;
    --pitch2-primary-channel: #f00;
    --pitch2-secondary-note: #8c2121;
    --pitch2-primary-note: #ff5252;
    --pitch3-secondary-channel: #004bb3;
    --pitch3-primary-channel: #1792ff;
    --pitch3-secondary-note: #005cb3;
    --pitch3-primary-note: #00ffe9;
    --pitch4-secondary-channel: #a48800;
    --pitch4-primary-channel: #fb0;
    --pitch4-secondary-note: #9c4100;
    --pitch4-primary-note: #ffd84e;
    --noise1-secondary-channel: #868686;
    --noise1-primary-channel: #fff;
    --noise1-secondary-note: #868686;
    --noise1-primary-note: #fff;
    --noise2-secondary-channel: #805300;
    --noise2-primary-channel: #ff8c00;
    --noise2-secondary-note: #6a3500;
    --noise2-primary-note: #a85400;
    --mod1-secondary-channel: #6c0000;
    --mod1-primary-channel: #ff3e3e;
    --mod1-secondary-note: #6c0000;
    --mod1-primary-note: #ff3e3e;
    --mod2-secondary-channel: #d25a00;
    --mod2-primary-channel: #fdff00;
    --mod2-secondary-note: #d25a00;
    --mod2-primary-note: #fdff00;
    --mod3-secondary-channel: #046000;
    --mod3-primary-channel: #23ff1b;
    --mod3-secondary-note: #046000;
    --mod3-primary-note: #23ff1b;
    --mod4-secondary-channel: #3b2bae;
    --mod4-primary-channel: #0c79ff;
    --mod4-secondary-note: #3b2bae;
    --mod4-primary-note: #0c79ff;
    --disabled-note-secondary: #696969;
}`;var gi=`:root {
    --pitch-channel-limit: 9;
    --noise-channel-limit: 3;
    --pitch1-secondary-channel: #139620;
    --pitch1-primary-channel: #25ff3a;
    --pitch1-secondary-note: #139620;
    --pitch1-primary-note: #25ff3a;
    --pitch2-secondary-channel: #109986;
    --pitch2-primary-channel: #1cffe0;
    --pitch2-secondary-note: #109986;
    --pitch2-primary-note: #1cffe0;
    --pitch3-secondary-channel: #127296;
    --pitch3-primary-channel: #21c3ff;
    --pitch3-secondary-note: #127296;
    --pitch3-primary-note: #21c3ff;
    --pitch4-secondary-channel: #6038a5;
    --pitch4-primary-channel: #9456ff;
    --pitch4-secondary-note: #6038a5;
    --pitch4-primary-note: #ff35e0;
    --pitch5-secondary-channel: #a52491;
    --pitch5-primary-channel: #ff35e0;
    --pitch5-secondary-note: #a52491;
    --pitch5-primary-note: #af3221;
    --pitch6-secondary-channel: #af3221;
    --pitch6-primary-channel: #ff4a32;
    --pitch6-secondary-note: #af3221;
    --pitch6-primary-note: #ff4a32;
    --pitch7-secondary-channel: #ad6e0f;
    --pitch7-primary-channel: #ffa216;
    --pitch7-secondary-note: #ad6e0f;
    --pitch7-primary-note: #ffa216;
    --pitch8-secondary-channel: #ad6e0f;
    --pitch8-primary-channel: #ffa216;
    --pitch8-secondary-note: #ad6e0f;
    --pitch8-primary-note: #ffa216;
    --pitch9-secondary-channel: #a7b512;
    --pitch9-primary-channel: #ebff19;
    --pitch9-secondary-note: #a7b512;
    --pitch9-primary-note: #ebff19;
    --pitch10-secondary-channel: #70ad1b;
    --pitch10-primary-channel: #a4ff26;
    --pitch10-secondary-note: #70ad1b;
    --pitch10-primary-note: #a4ff26;
    --noise1-secondary-channel: #68706f;
    --noise1-primary-channel: #a6b2b1;
    --noise1-secondary-note: #68706f;
    --noise1-primary-note: #a6b2b1;
    --noise2-secondary-channel: #665c64;
    --noise2-primary-channel: #a396a1;
    --noise2-secondary-note: #665c64;
    --noise2-primary-note: #a396a1;
    --noise3-secondary-channel: #60605a;
    --noise3-primary-channel: #afaea3;
    --noise3-secondary-note: #60605a;
    --noise3-primary-note: #afaea3;
    --noise4-secondary-channel: #665c64;
    --noise4-primary-channel: #a396a1;
    --noise4-secondary-note: #665c64;
    --noise4-primary-note: #a396a1;
    --noise5-secondary-channel: #60605a;
    --noise5-primary-channel: #afaea3;
    --noise5-secondary-note: #60605a;
    --noise5-primary-note: #afaea3;
    --mod1-secondary-channel: #139620;
    --mod1-primary-channel: #25ff3a;
    --mod1-secondary-note: #139620;
    --mod1-primary-note: #25ff3a;
    --mod2-secondary-channel: #109986;
    --mod2-primary-channel: #1cffe0;
    --mod2-secondary-note: #109986;
    --mod2-primary-note: #1cffe0;
    --mod3-secondary-channel: #127296;
    --mod3-primary-channel: #21c3ff;
    --mod3-secondary-note: #127296;
    --mod3-primary-note: #21c3ff;
    --mod4-secondary-channel: #6038a5;
    --mod4-primary-channel: #9456ff;
    --mod4-secondary-note: #6038a5;
    --mod4-primary-note: #ff35e0;
}`;var vi=`:root {
    --page-margin: #200000;
    --editor-background: #200000;
    --text-selection: #FF5100;
    --loop-accent: #FF5100;
    --link-accent: #0F0;
    --ui-widget-background: #562334;
    --ui-widget-focus: #6D1B36;
    --pitch-background: #6D1B36;
    --tonic: #FF5100;
    --fifth-note: #00B6FF;
    --track-editor-bg-pitch: #380C14;
    --track-editor-bg-pitch-dim: #200000;
    --track-editor-bg-noise: #233323;
    --track-editor-bg-noise-dim: #101A0F;
    --track-editor-bg-mod: #234C82;
    --track-editor-bg-mod-dim: #0D1D33;
    --indicator-primary: #FF5100;
    --pitch1-secondary-channel: #00B200;
    --pitch1-primary-channel: #0F0;
    --pitch1-secondary-note: #00B200;
    --pitch1-primary-note: #0F0;
    --pitch2-secondary-channel: #00B282;
    --pitch2-primary-channel: #00FFBF;
    --pitch2-secondary-note: #00B282;
    --pitch2-primary-note: #00FFBF;
    --pitch3-secondary-channel: #00B2B2;
    --pitch3-primary-channel: #0FF;
    --pitch3-secondary-note: #00B2B2;
    --pitch3-primary-note: #0FF;
    --pitch4-secondary-channel: #2623B2;
    --pitch4-primary-channel: #3631FF;
    --pitch4-secondary-note: #2623B2;
    --pitch4-primary-note: #3631FF;
    --pitch5-secondary-channel: #7700B2;
    --pitch5-primary-channel: #A0F;
    --pitch5-secondary-note: #7700B2;
    --pitch5-primary-note: #A0F;
    --pitch6-secondary-channel: #B200B2;
    --pitch6-primary-channel: #F0F;
    --pitch6-secondary-note: #B200B2;
    --pitch6-primary-note: #F0F;
    --pitch7-secondary-channel: #B20000;
    --pitch7-primary-channel: #F00;
    --pitch7-secondary-note: #B20000;
    --pitch7-primary-note: #F00;
    --pitch8-secondary-channel: #00B200;
    --pitch8-primary-channel: #0F0;
    --pitch8-secondary-note: #00B200;
    --pitch8-primary-note: #0F0;
    --pitch9-secondary-channel: #00B282;
    --pitch9-primary-channel: #0FF;
    --pitch9-secondary-note: #00B282;
    --pitch9-primary-note: #0FF;
    --pitch10-secondary-channel: #0071B2;
    --pitch10-primary-channel: #009EFF;
    --pitch10-secondary-note: #0071B2;
    --pitch10-primary-note: #009EFF;
    --noise1-secondary-channel: #32B221;
    --noise1-primary-channel: #44FF2F;
    --noise1-secondary-note: #32B221;
    --noise1-primary-note: #44FF2F;
    --noise2-secondary-channel: #216FB2;
    --noise2-primary-channel: #2F9DFF;
    --noise2-secondary-note: #216FB2;
    --noise2-primary-note: #2F9DFF;
    --noise3-secondary-channel: #2623B2;
    --noise3-primary-channel: #3631FF;
    --noise3-secondary-note: #2623B2;
    --noise3-primary-note: #3631FF;
    --noise4-secondary-channel: #7223B2;
    --noise4-primary-channel: #A531FF;
    --noise4-secondary-note: #7223B2;
    --noise4-primary-note: #A531FF;
    --noise5-secondary-channel: #B2235A;
    --noise5-primary-channel: #FF317E;
    --noise5-secondary-note: #B2235A;
    --noise5-primary-note: #FF317E;
    --mod1-secondary-channel: #17B274;
    --mod1-primary-channel: #21FFA8;
    --mod1-secondary-note: #17B274;
    --mod1-primary-note: #21FFA8;
    --mod2-secondary-channel: #1783B2;
    --mod2-primary-channel: #1FBAFF;
    --mod2-secondary-note: #1783B2;
    --mod2-primary-note: #1FBAFF;
    --mod4-secondary-channel: #B20E6B;
    --mod4-primary-channel: #FF1291;
    --mod4-secondary-note: #B20E6B;
    --mod4-primary-note: #FF1291;
    --mod-label-primary: #994038;
    --mod-label-secondary-text: #331512;
    --mod-label-primary-text: #331512;
    --disabled-note-primary: #994038;
    --disabled-note-secondary: #331512;
}`;var bi=`:root {
    --page-margin: #000;
    --editor-background: #000;
    --hover-preview: #808080;
    --playhead: #808080;
    --secondary-text: #cccccc;
    --text-selection: #696969;
    --box-selection-fill: #cccccc40;
    --loop-accent: #808080;
    --link-accent: white;
    --ui-widget-background: #232323;
    --ui-widget-focus: #303030;
    --pitch-background: #1a1a1a;
    --tonic: #262626;
    --fifth-note: #0d0d0d;
    --white-piano-key: #808080;
    --black-piano-key: #232323;
    --use-color-formula: true;
    --track-editor-bg-pitch: #262626;
    --track-editor-bg-pitch-dim: #1a1a1a;
    --track-editor-bg-noise: #262626;
    --track-editor-bg-noise-dim: #1a1a1a;
    --track-editor-bg-mod: #262626;
    --track-editor-bg-mod-dim: #1a1a1a;
    --multiplicative-mod-slider: #808080;
    --overwriting-mod-slider: #808080;
    --indicator-primary: #808080;
    --indicator-secondary: #333333;
    --select2-opt-group: #232323;
    --input-box-outline: #222;
    --mute-button-normal: #808080;
    --mute-button-mod: #808080;
    --mod-label-primary: #232323;
    --mod-label-secondary-text: #696969;
    --mod-label-primary-text: #cdcdcd;
    --pitch-secondary-channel-hue: 208;
    --pitch-secondary-channel-hue-scale: 10;
    --pitch-secondary-channel-sat: 100;
    --pitch-secondary-channel-sat-scale: 0;
    --pitch-secondary-channel-lum: 88;
    --pitch-secondary-channel-lum-scale: 0;
    --pitch-primary-channel-hue: 207;
    --pitch-primary-channel-hue-scale: 10;
    --pitch-primary-channel-sat: 100;
    --pitch-primary-channel-sat-scale: 0;
    --pitch-primary-channel-lum: 910;
    --pitch-primary-channel-lum-scale: 0;
    --pitch-secondary-note-hue: 208;
    --pitch-secondary-note-hue-scale: 10;
    --pitch-secondary-note-sat: 100;
    --pitch-secondary-note-sat-scale: 0;
    --pitch-secondary-note-lum: 88;
    --pitch-secondary-note-lum-scale: 0;
    --pitch-primary-note-hue: 208;
    --pitch-primary-note-hue-scale: 10;
    --pitch-primary-note-sat: 100;
    --pitch-primary-note-sat-scale: 0;
    --pitch-primary-note-lum: 910;
    --pitch-primary-note-lum-scale: 0;
    --noise-secondary-channel-hue: 328;
    --noise-secondary-channel-hue-scale: 10;
    --noise-secondary-channel-sat: 100;
    --noise-secondary-channel-sat-scale: 0;
    --noise-secondary-channel-lum: 88;
    --noise-secondary-channel-lum-scale: 0;
    --noise-primary-channel-hue: 327;
    --noise-primary-channel-hue-scale: 10;
    --noise-primary-channel-sat: 100;
    --noise-primary-channel-sat-scale: 0;
    --noise-primary-channel-lum: 910;
    --noise-primary-channel-lum-scale: 0;
    --noise-secondary-note-hue: 328;
    --noise-secondary-note-hue-scale: 10;
    --noise-secondary-note-sat: 100;
    --noise-secondary-note-sat-scale: 0;
    --noise-secondary-note-lum: 88;
    --noise-secondary-note-lum-scale: 0;
    --noise-primary-note-hue: 327;
    --noise-primary-note-hue-scale: 10;
    --noise-primary-note-sat: 100;
    --noise-primary-note-sat-scale: 0;
    --noise-primary-note-lum: 910;
    --noise-primary-note-lum-scale: 0;
    --mod-secondary-channel-hue: 87;
    --mod-secondary-channel-hue-scale: 10;
    --mod-secondary-channel-sat: 100;
    --mod-secondary-channel-sat-scale: 0;
    --mod-secondary-channel-lum: 88;
    --mod-secondary-channel-lum-scale: 0;
    --mod-primary-channel-hue: 88;
    --mod-primary-channel-hue-scale: 10;
    --mod-primary-channel-sat: 100;
    --mod-primary-channel-sat-scale: 0;
    --mod-primary-channel-lum: 910;
    --mod-primary-channel-lum-scale: 0;
    --mod-secondary-note-hue: 87;
    --mod-secondary-note-hue-scale: 10;
    --mod-secondary-note-sat: 100;
    --mod-secondary-note-sat-scale: 0;
    --mod-secondary-note-lum: 88;
    --mod-secondary-note-lum-scale: 0;
    --mod-primary-note-hue: 88;
    --mod-primary-note-hue-scale: 10;
    --mod-primary-note-sat: 100;
    --mod-primary-note-sat-scale: 0;
    --mod-primary-note-lum: 910;
    --mod-primary-note-lum-scale: 0;
    --disabled-note-primary: #c6c6c6;
    --disabled-note-secondary: #8c8c8c;
}`;var Si=`:root {
    --page-margin: #04081a;
    --editor-background: #04081a;
    --box-selection-fill: rgb(0 72 181);
    --loop-accent: #44d4ff;
    --link-accent: #ffa500;
    --ui-widget-background: #212c4a;
    --ui-widget-focus: #121f42;
    --pitch-background: #1b263e;
    --tonic: #995d00;
    --fifth-note: #0898a1;
    --white-piano-key: #ffffff;
    --black-piano-key: #516d7a;
    --track-editor-bg-pitch: #213352;
    --track-editor-bg-pitch-dim: #152032;
    --track-editor-bg-noise: #403524;
    --track-editor-bg-noise-dim: #2a1f0e;
    --indicator-primary: #5490ff;
    --mute-button-normal: #3372ff;
    --mute-button-mod: #dd872f;
    --pitch1-primary-channel: #77f7ff;
    --pitch2-secondary-channel: #0083a1;
    --pitch2-primary-channel: #35d9ff;
    --pitch2-secondary-note: #0083a1;
    --pitch2-primary-note: #a4eeff;
    --pitch3-secondary-channel: #0074c7;
    --pitch3-primary-channel: #3caeff;
    --pitch3-secondary-note: #00477a;
    --pitch3-primary-note: #aadcff;
    --pitch4-secondary-channel: #0039a1;
    --pitch4-primary-channel: #2673ff;
    --pitch4-secondary-note: #001f56;
    --pitch4-primary-note: #9bbeff;
    --pitch5-secondary-channel: #31148b;
    --pitch5-primary-channel: #7042ff;
    --pitch5-secondary-note: #190656;
    --pitch5-primary-note: #b79fff;
    --pitch6-secondary-channel: #979934;
    --pitch6-primary-channel: #fbff2f;
    --pitch6-secondary-note: #5d5e0a;
    --pitch6-primary-note: #fdff9a;
    --pitch7-secondary-channel: #b78f00;
    --pitch7-primary-channel: #ffd747;
    --pitch7-secondary-note: #5e3d00;
    --pitch7-primary-note: #ffe381;
    --pitch8-secondary-channel: #9d6500;
    --pitch8-primary-channel: #ffa400;
    --pitch8-secondary-note: #583900;
    --pitch8-primary-note: #ffd07c;
    --pitch9-secondary-channel: #744203;
    --pitch9-primary-channel: #ff8e00;
    --pitch9-secondary-note: #502d00;
    --pitch9-primary-note: #ffcb89;
    --pitch10-secondary-channel: #a32d00;
    --pitch10-primary-channel: #ff885b;
    --pitch10-secondary-note: #521700;
    --pitch10-primary-note: #ffb397;
    --noise1-secondary-channel: #6e2210;
    --noise1-primary-channel: #ff4600;
    --noise1-secondary-note: #4c1a08;
    --noise1-primary-note: #ffc9b4;
    --noise2-secondary-channel: #6a3110;
    --noise2-primary-channel: #ff782a;
    --noise2-secondary-note: #4c1f05;
    --noise2-primary-note: #ffb488;
    --noise3-secondary-channel: #72460e;
    --noise3-primary-channel: #d9871f;
    --noise3-secondary-note: #442905;
    --noise3-primary-note: #ffdcae;
    --noise4-secondary-channel: #837a0f;
    --noise4-primary-channel: #f7ea55;
    --noise4-secondary-note: #605906;
    --noise4-primary-note: #fff9ab;
    --noise5-secondary-channel: #8c8f00;
    --noise5-primary-channel: #fdff90;
    --noise5-secondary-note: #606200;
    --noise5-primary-note: #feffbc;
    --mod1-secondary-channel: #561b97;
    --mod1-primary-channel: #aa66f5;
    --mod1-secondary-note: #30075c;
    --mod1-primary-note: #cd9fff;
    --mod2-secondary-channel: #5116df;
    --mod2-primary-channel: #6b2dff;
    --mod2-secondary-note: #36138b;
    --mod2-primary-note: #bea3ff;
    --mod3-secondary-channel: #2535a1;
    --mod3-primary-channel: #3f57ff;
    --mod3-secondary-note: #0e185c;
    --mod3-primary-note: #8494ff;
    --mod4-secondary-channel: #1b5883;
    --mod4-primary-channel: #5eb7f5;
    --mod4-secondary-note: #072f4a;
    --mod4-primary-note: #63beff;
    --mod-label-primary: #24293a;
    --mod-label-secondary-text: #454d4e;
    --mod-label-primary-text: #7bd4ff;
    --disabled-note-primary: #072f4a;
    --disabled-note-secondary: #6585a7;
}`;var xi=`:root {
    --page-margin: #050000;
    --editor-background: #050000;
    --primary-text: #b8cee0;
    --secondary-text: #cb3434;
    --text-selection: rgb(255 68 68 / 99%);
    --box-selection-fill: rgb(255 0 0 / 30%);
    --loop-accent: #7744FF;
    --link-accent: #FF2A2A;
    --ui-widget-background: #1a2642;
    --ui-widget-focus: #2c3f6d;
    --pitch-background: #15111a;
    --tonic: #1b3041;
    --fifth-note: #381818;
    --white-piano-key: #cdcdcd;
    --black-piano-key: #232323;
    --track-editor-bg-pitch: #302938;
    --track-editor-bg-pitch-dim: #211c26;
    --track-editor-bg-noise: #261f42;
    --track-editor-bg-noise-dim: #1a152d;
    --track-editor-bg-mod: #183049;
    --track-editor-bg-mod-dim: #102132;
    --multiplicative-mod-slider: #344a7f;
    --overwriting-mod-slider: #344a7f;
    --indicator-primary: #FF2A2A;
    --indicator-secondary: #800000;
    --select2-opt-group: #141e34;
    --input-box-outline: #141e34;
    --mute-button-normal: #299eff;
    --mute-button-mod: #165a93;
    --pitch1-secondary-channel: #273c90;
    --pitch1-primary-channel: #476BFF;
    --pitch1-secondary-note: #273c90;
    --pitch1-primary-note: #476BFF;
    --pitch2-secondary-channel: #3a3898;
    --pitch2-primary-channel: #625FFB;
    --pitch2-secondary-note: #3a3898;
    --pitch2-primary-note: #625FFB;
    --pitch3-secondary-channel: #542780;
    --pitch3-primary-channel: #9C49EC;
    --pitch3-secondary-note: #542780;
    --pitch3-primary-note: #9C49EC;
    --pitch4-secondary-channel: #84225d;
    --pitch4-primary-channel: #fd3fb1;
    --pitch4-secondary-note: #84225d;
    --pitch4-primary-note: #fd3fb1;
    --pitch5-secondary-channel: #8d2323;
    --pitch5-primary-channel: #ff3f3f;
    --pitch5-secondary-note: #8d2323;
    --pitch5-primary-note: #ff3f3f;
    --pitch6-secondary-channel: #84225d;
    --pitch6-primary-channel: #fd3fb1;
    --pitch6-secondary-note: #84225d;
    --pitch6-primary-note: #fd3fb1;
    --pitch7-secondary-channel: #542780;
    --pitch7-primary-channel: #9C49EC;
    --pitch7-secondary-note: #542780;
    --pitch7-primary-note: #9C49EC;
    --pitch8-secondary-channel: #3a3898;
    --pitch8-primary-channel: #625FFB;
    --pitch8-secondary-note: #3a3898;
    --pitch8-primary-note: #625FFB;
    --pitch9-secondary-channel: #273c90;
    --pitch9-primary-channel: #476BFF;
    --pitch9-secondary-note: #273c90;
    --pitch9-primary-note: #476BFF;
    --pitch10-secondary-channel: #165a93;
    --pitch10-primary-channel: #299EFF;
    --pitch10-secondary-note: #165a93;
    --pitch10-primary-note: #299EFF;
    --noise1-secondary-channel: #4281FF;
    --noise1-primary-channel: #96b9ff;
    --noise1-secondary-note: #4281FF;
    --noise1-primary-note: #96b9ff;
    --noise2-secondary-channel: #7347FF;
    --noise2-primary-channel: #c3b0ff;
    --noise2-secondary-note: #7347FF;
    --noise2-primary-note: #c3b0ff;
    --noise3-secondary-channel: #9F3CBF;
    --noise3-primary-channel: #e29cf9;
    --noise3-secondary-note: #9F3CBF;
    --noise3-primary-note: #e29cf9;
    --noise4-secondary-channel: #D3326F;
    --noise4-primary-channel: #fb9bbf;
    --noise4-secondary-note: #D3326F;
    --noise4-primary-note: #fb9bbf;
    --noise5-secondary-channel: #FF2A2A;
    --noise5-primary-channel: #ffa2a2;
    --noise5-secondary-note: #FF2A2A;
    --noise5-primary-note: #ffa2a2;
    --mod1-secondary-channel: #47587a;
    --mod1-primary-channel: #96b9ff;
    --mod1-secondary-note: #47587a;
    --mod1-primary-note: #96b9ff;
    --mod2-secondary-channel: #716791;
    --mod2-primary-channel: #c3b0ff;
    --mod2-secondary-note: #716791;
    --mod2-primary-note: #c3b0ff;
    --mod3-secondary-channel: #6f4c7b;
    --mod3-primary-channel: #e29cf9;
    --mod3-secondary-note: #6f4c7b;
    --mod3-primary-note: #e29cf9;
    --mod4-secondary-channel: #9e6279;
    --mod4-primary-channel: #fb9bbf;
    --mod4-secondary-note: #9e6279;
    --mod4-primary-note: #fb9bbf;
    --mod-label-primary: #15111a;
    --mod-label-secondary-text: #cb3434;
    --mod-label-primary-text: white;
    --disabled-note-primary: #c9c9c9;
    --disabled-note-secondary: #616161;
}`;var Fi=`:root {
    --page-margin: #fff5f5;
    --editor-background: #fff5f5;
    --hover-preview: #0e8bf1;
    --playhead: 000;
    --primary-text: #0e8bf1;
    --secondary-text: #f10e0e;
    --inverted-text: white;
    --text-selection: #ff4444fc;
    --box-selection-fill: #ff00004d;
    --loop-accent: #9a75ff;
    --link-accent: #ff7070;
    --ui-widget-background: #bdc9e5;
    --ui-widget-focus: #a3b7e5;
    --pitch-background: #d0c7db;
    --tonic: #bed3e4;
    --fifth-note: #e7c6c6;
    --white-piano-key: #cdcdcd;
    --black-piano-key: #232323;
    --track-editor-bg-pitch: #e5e1ea;
    --track-editor-bg-pitch-dim: #cbc4d4;
    --track-editor-bg-noise: #e0ddee;
    --track-editor-bg-noise-dim: #c1bade;
    --track-editor-bg-mod: #d8e6f3;
    --track-editor-bg-mod-dim: #b1cce7;
    --multiplicative-mod-slider: #8097cb;
    --overwriting-mod-slider: #8097cb;
    --indicator-primary: #FF2A2A;
    --indicator-secondary: #92a6d3;
    --select2-opt-group: #b6c4e2;
    --input-box-outline: #bdc9e5;
    --mute-button-normal: #66baff;
    --mute-button-mod: #1a98ff;
    --pitch1-secondary-channel: #273c90;
    --pitch1-primary-channel: #476BFF;
    --pitch1-secondary-note: #273c90;
    --pitch1-primary-note: #476BFF;
    --pitch2-secondary-channel: #3a3898;
    --pitch2-primary-channel: #625FFB;
    --pitch2-secondary-note: #3a3898;
    --pitch2-primary-note: #625FFB;
    --pitch3-secondary-channel: #542780;
    --pitch3-primary-channel: #9C49EC;
    --pitch3-secondary-note: #542780;
    --pitch3-primary-note: #9C49EC;
    --pitch4-secondary-channel: #84225d;
    --pitch4-primary-channel: #fd3fb1;
    --pitch4-secondary-note: #84225d;
    --pitch4-primary-note: #fd3fb1;
    --pitch5-secondary-channel: #8d2323;
    --pitch5-primary-channel: #ff3f3f;
    --pitch5-secondary-note: #8d2323;
    --pitch5-primary-note: #ff3f3f;
    --pitch6-secondary-channel: #84225d;
    --pitch6-primary-channel: #fd3fb1;
    --pitch6-secondary-note: #84225d;
    --pitch6-primary-note: #fd3fb1;
    --pitch7-secondary-channel: #542780;
    --pitch7-primary-channel: #9C49EC;
    --pitch7-secondary-note: #542780;
    --pitch7-primary-note: #9C49EC;
    --pitch8-secondary-channel: #3a3898;
    --pitch8-primary-channel: #625FFB;
    --pitch8-secondary-note: #3a3898;
    --pitch8-primary-note: #625FFB;
    --pitch9-secondary-channel: #273c90;
    --pitch9-primary-channel: #476BFF;
    --pitch9-secondary-note: #273c90;
    --pitch9-primary-note: #476BFF;
    --pitch10-secondary-channel: #165a93;
    --pitch10-primary-channel: #299EFF;
    --pitch10-secondary-note: #165a93;
    --pitch10-primary-note: #299EFF;
    --noise1-secondary-channel: #336bdb;
    --noise1-primary-channel: #4281FF;
    --noise1-secondary-note: #336bdb;
    --noise1-primary-note: #4281FF;
    --noise2-secondary-channel: #5e38dc;
    --noise2-primary-channel: #7347FF;
    --noise2-secondary-note: #5e38dc;
    --noise2-primary-note: #7347FF;
    --noise3-secondary-channel: #7d3097;
    --noise3-primary-channel: #9F3CBF;
    --noise3-secondary-note: #7d3097;
    --noise3-primary-note: #9F3CBF;
    --noise4-secondary-channel: #ad2559;
    --noise4-primary-channel: #D3326F;
    --noise4-secondary-note: #ad2559;
    --noise4-primary-note: #D3326F;
    --noise5-secondary-channel: #d02525;
    --noise5-primary-channel: #FF2A2A;
    --noise5-secondary-note: #d02525;
    --noise5-primary-note: #FF2A2A;
    --mod1-secondary-channel: #35415a;
    --mod1-primary-channel: #47587a;
    --mod1-secondary-note: #35415a;
    --mod1-primary-note: #47587a;
    --mod2-secondary-channel: #5a5374;
    --mod2-primary-channel: #716791;
    --mod2-secondary-note: #5a5374;
    --mod2-primary-note: #716791;
    --mod3-secondary-channel: #53385c;
    --mod3-primary-channel: #6f4c7b;
    --mod3-secondary-note: #53385c;
    --mod3-primary-note: #6f4c7b;
    --mod4-secondary-channel: #7e4e60;
    --mod4-primary-channel: #9e6279;
    --mod4-secondary-note: #7e4e60;
    --mod4-primary-note: #9e6279;
    --mod-label-primary: #d0c7db;
    --mod-label-secondary-text: #cb3434;
    --disabled-note-primary: #616161;
    --disabled-note-secondary: #474747;
}

.promptContainerBG::before {
    box-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);
}`;var Ci=`:root {
    --loop-accent: #198195;
    --pitch-channel-limit: 6;
    --noise-channel-limit: 4;
    --pitch1-secondary-channel: #539999;
    --pitch1-primary-channel: #5EB1B1;
    --pitch1-secondary-note: #539999;
    --pitch1-primary-note: #5EB1B1;
    --pitch2-secondary-channel: #95933C;
    --pitch2-primary-channel: #B0AD44;
    --pitch2-secondary-note: #95933C;
    --pitch2-primary-note: #B0AD44;
    --pitch3-secondary-channel: #E75566;
    --pitch3-primary-channel: #FF9AA6;
    --pitch3-secondary-note: #E75566;
    --pitch3-primary-note: #FF9AA6;
    --pitch4-secondary-channel: #8B4343;
    --pitch4-primary-channel: #FF8844;
    --pitch4-secondary-note: #8B4343;
    --pitch4-primary-note: #FF8844;
    --pitch5-secondary-channel: #888888;
    --pitch5-primary-channel: #BBBBBB;
    --pitch5-secondary-note: #888888;
    --pitch5-primary-note: #BBBBBB;
    --pitch6-secondary-channel: #BB6906;
    --pitch6-primary-channel: #FE8D00;
    --pitch6-secondary-note: #BB6906;
    --pitch6-primary-note: #FE8D00;
    --pitch7-secondary-channel: #539999;
    --pitch7-primary-channel: #5EB1B1;
    --pitch7-secondary-note: #539999;
    --pitch7-primary-note: #5EB1B1;
    --pitch8-secondary-channel: #95933C;
    --pitch8-primary-channel: #B0AD44;
    --pitch8-secondary-note: #95933C;
    --pitch8-primary-note: #B0AD44;
    --pitch9-secondary-channel: #E75566;
    --pitch9-primary-channel: #FF9AA6;
    --pitch9-secondary-note: #E75566;
    --pitch9-primary-note: #FF9AA6;
    --pitch10-secondary-channel: #8B4343;
    --pitch10-primary-channel: #FF8844;
    --pitch10-secondary-note: #8B4343;
    --pitch10-primary-note: #FF8844;
    --noise1-secondary-channel: #ABABAB;
    --noise1-primary-channel: #D6D6D6;
    --noise1-secondary-note: #ABABAB;
    --noise1-primary-note: #D6D6D6;
    --noise2-secondary-channel: #A18F51;
    --noise2-primary-channel: #F6BB6A;
    --noise2-secondary-note: #A18F51;
    --noise2-primary-note: #F6BB6A;
    --noise3-secondary-channel: #5869BD;
    --noise3-primary-channel: #768DFC;
    --noise3-secondary-note: #5869BD;
    --noise3-primary-note: #768DFC;
    --noise4-secondary-channel: #8888D0;
    --noise4-primary-channel: #D0D0FF;
    --noise4-secondary-note: #8888D0;
    --noise4-primary-note: #D0D0FF;
    --noise5-secondary-channel: #A18F51;
    --noise5-primary-channel: #F6BB6A;
    --noise5-secondary-note: #A18F51;
    --noise5-primary-note: #F6BB6A;
    --mod1-secondary-channel: #539999;
    --mod1-primary-channel: #5EB1B1;
    --mod1-secondary-note: #539999;
    --mod1-primary-note: #5EB1B1;
    --mod2-secondary-channel: #95933C;
    --mod2-primary-channel: #B0AD44;
    --mod2-secondary-note: #95933C;
    --mod2-primary-note: #B0AD44;
    --mod3-secondary-channel: #E75566;
    --mod3-primary-channel: #FF9AA6;
    --mod3-secondary-note: #E75566;
    --mod3-primary-note: #FF9AA6;
    --mod4-secondary-channel: #8B4343;
    --mod4-primary-channel: #FF8844;
    --mod4-secondary-note: #8B4343;
    --mod4-primary-note: #FF8844;
}`;var Ii=`:root {
    --page-margin: maroon;
    --playhead: firebrick;
    --primary-text: silver;
    --text-selection: rgba(139, 69, 19, 0.99);
    --box-selection-fill: rgba(220, 20, 60, 0.2);
    --loop-accent: #841;
    --link-accent: #841;
    --ui-widget-background: #800;
    --ui-widget-focus: #a00;
    --pitch-background: #700;
    --tonic: #522;
    --fifth-note: #f75;
    --pitch-channel-limit: 6;
    --noise-channel-limit: 3;
    --pitch1-secondary-channel: #7e4a35;
    --pitch1-primary-channel: #c27251;
    --pitch1-secondary-note: #7e4a35;
    --pitch1-primary-note: #f09571;
    --pitch2-secondary-channel: #998a5c;
    --pitch2-primary-channel: #d9c27c;
    --pitch2-secondary-note: #998a5c;
    --pitch2-primary-note: #fae196;
    --pitch3-secondary-channel: #9c927c;
    --pitch3-primary-channel: #dbceb0;
    --pitch3-secondary-note: #9c927c;
    --pitch3-primary-note: #eddebb;
    --pitch4-secondary-channel: #838060;
    --pitch4-primary-channel: #ccc795;
    --pitch4-secondary-note: #838060;
    --pitch4-primary-note: #f2ecb1;
    --pitch5-secondary-channel: #8b6f47;
    --pitch5-primary-channel: #d1a76b;
    --pitch5-secondary-note: #8b6f47;
    --pitch5-primary-note: #ffcc82;
    --pitch6-secondary-channel: #a96e5b;
    --pitch6-primary-channel: #e3967d;
    --pitch6-secondary-note: #a96e5b;
    --pitch6-primary-note: #ffa68a;
    --pitch7-secondary-channel: #7e4a35;
    --pitch7-primary-channel: #c27251;
    --pitch7-secondary-note: #7e4a35;
    --pitch7-primary-note: #f09571;
    --pitch8-secondary-channel: #998a5c;
    --pitch8-primary-channel: #d9c27c;
    --pitch8-secondary-note: #998a5c;
    --pitch8-primary-note: #fae196;
    --pitch9-secondary-channel: #9c927c;
    --pitch9-primary-channel: #dbceb0;
    --pitch9-secondary-note: #9c927c;
    --pitch9-primary-note: #eddebb;
    --pitch10-secondary-channel: #838060;
    --pitch10-primary-channel: #ccc795;
    --pitch10-secondary-note: #838060;
    --pitch10-primary-note: #f2ecb1;
    --noise4-secondary-channel: #6f6f6f;
    --noise4-primary-channel: #aaaaaa;
    --noise4-secondary-note: #a7a7a7;
    --noise4-primary-note: #e0e0e0;
    --noise5-secondary-channel: #996633;
    --noise5-primary-channel: #ddaa77;
    --noise5-secondary-note: #cc9966;
    --noise5-primary-note: #f0d0bb;
    --mod1-secondary-channel: #7e4a35;
    --mod1-primary-channel: #c27251;
    --mod1-secondary-note: #7e4a35;
    --mod1-primary-note: #f09571;
    --mod2-secondary-channel: #998a5c;
    --mod2-primary-channel: #d9c27c;
    --mod2-secondary-note: #998a5c;
    --mod2-primary-note: #fae196;
    --mod3-secondary-channel: #9c927c;
    --mod3-primary-channel: #dbceb0;
    --mod3-secondary-note: #9c927c;
    --mod3-primary-note: #eddebb;
    --mod4-secondary-channel: #838060;
    --mod4-primary-channel: #ccc795;
    --mod4-secondary-note: #838060;
    --mod4-primary-note: #f2ecb1;
    --note-flash: firebrick;
    --note-flash-secondary: firebrick;
}`;var wi=`:root {
    font: 20px/2 monospace;
    --page-margin: #252525;
    --editor-background: #252525;
    --primary-text: #C8C8C8;
    --link-accent: #945800;
    --track-editor-bg-pitch-dim: #444;
    --track-editor-bg-noise-dim: #444;
    --pitch-channel-limit: 6;
    --noise-channel-limit: 3;
    --text-disabled-icon: \u2717;
}

.beepboxEditor input[type="range"]::-moz-range-thumb {
    width: 8px !important;
}

button.playButton {
    width: 80px;
}

button.prevBarButton {
    width: 40px;
    left: -5px;
}

button.nextBarButton {
    width: 40px;
}

.trackContainer .noSelection {
    background: black !important;
}

span input,
div.harmonics svg,
div.spectrum svg,
div.filterEditor svg,
div.fadeInOut svg,
div.loopEditor svg,
svg#firstImage {
    background: black !important;
}

.beepboxEditor {
    line-height: 1.25;
}

#text-content {
    font-size: 32px;
    line-height: 40px;
}

#text-content>section>h1 {
    color: #C8C8C8;
}`;var ki=`:root {
    --page-margin: #14051a;
    --editor-background: #14051a;
    --playhead: rgba(255, 255, 255, 0.9);
    --primary-text: #71eee5;
    --secondary-text: #3abbb2;
    --inverted-text: #13695e;
    --box-selection-fill: #36c71c;
    --loop-accent: #36c71c;
    --link-accent: white;
    --ui-widget-background: #183d05;
    --ui-widget-focus: #247d0d;
    --pitch-background: #2e0e51;
    --tonic: #247d0d;
    --fifth-note: #3abbb2;
    --white-piano-key: #ffffff;
    --black-piano-key: #061705;
    --white-piano-key-text: #061705;
    --use-color-formula: true;
    --track-editor-bg-pitch: #09382b;
    --track-editor-bg-pitch-dim: #14051a;
    --track-editor-bg-noise: #40400b;
    --track-editor-bg-noise-dim: #14051a;
    --track-editor-bg-mod: #0a2c08;
    --track-editor-bg-mod-dim: #14051a;
    --multiplicative-mod-slider: #3abb22;
    --overwriting-mod-slider: #71eee5;
    --indicator-primary: #a773e5;
    --indicator-secondary: #4c1c89;
    --select2-opt-group: #183d05;
    --input-box-outline: #18040a;
    --mute-button-normal: #36c71c;
    --mute-button-mod: #a773e5;
    --mod-label-primary: #a773e5;
    --mod-label-secondary-text: #6b29bf;
    --mod-label-primary-text: #14051a;
    --mod-title: #247d1d;
    --pitch-secondary-channel-hue: 100;
    --pitch-secondary-channel-hue-scale: 6.1;
    --pitch-secondary-channel-sat: 100.0;
    --pitch-secondary-channel-sat-scale: 0.15;
    --pitch-secondary-channel-lum: 60.0;
    --pitch-secondary-channel-lum-scale: 0.05;
    --pitch-primary-channel-hue: 100;
    --pitch-primary-channel-hue-scale: 6.1;
    --pitch-primary-channel-sat: 100;
    --pitch-primary-channel-sat-scale: 0.15;
    --pitch-primary-channel-lum: 75.0;
    --pitch-primary-channel-lum-scale: 0.05;
    --pitch-secondary-note-hue: 100;
    --pitch-secondary-note-hue-scale: 6.1;
    --pitch-secondary-note-sat: 95.0;
    --pitch-secondary-note-sat-scale: 0.15;
    --pitch-secondary-note-lum: 40;
    --pitch-secondary-note-lum-scale: 0.05;
    --pitch-primary-note-hue: 100;
    --pitch-primary-note-hue-scale: 6.1;
    --pitch-primary-note-sat: 100;
    --pitch-primary-note-sat-scale: 0.15;
    --pitch-primary-note-lum: 85.6;
    --pitch-primary-note-lum-scale: 0.025;
    --noise-secondary-channel-hue: 65;
    --noise-secondary-channel-hue-scale: 2;
    --noise-secondary-channel-sat: 55;
    --noise-secondary-channel-sat-scale: 0;
    --noise-secondary-channel-lum: 42;
    --noise-secondary-channel-lum-scale: 0;
    --noise-primary-channel-hue: 65;
    --noise-primary-channel-hue-scale: 2;
    --noise-primary-channel-sat: 66;
    --noise-primary-channel-sat-scale: 0;
    --noise-primary-channel-lum: 63.5;
    --noise-primary-channel-lum-scale: 0;
    --noise-secondary-note-hue: 65;
    --noise-secondary-note-hue-scale: 2;
    --noise-secondary-note-sat: 66;
    --noise-secondary-note-sat-scale: 0;
    --noise-secondary-note-lum: 55;
    --noise-secondary-note-lum-scale: 0;
    --noise-primary-note-hue: 65;
    --noise-primary-note-hue-scale: 2;
    --noise-primary-note-sat: 70;
    --noise-primary-note-sat-scale: 0;
    --noise-primary-note-lum: 74;
    --noise-primary-note-lum-scale: 0;
    --mod-secondary-channel-hue: 192;
    --mod-secondary-channel-hue-scale: 1.5;
    --mod-secondary-channel-sat: 88;
    --mod-secondary-channel-sat-scale: 0;
    --mod-secondary-channel-lum: 50;
    --mod-secondary-channel-lum-scale: 0;
    --mod-primary-channel-hue: 192;
    --mod-primary-channel-hue-scale: 1.5;
    --mod-primary-channel-sat: 96;
    --mod-primary-channel-sat-scale: 0;
    --mod-primary-channel-lum: 80;
    --mod-primary-channel-lum-scale: 0;
    --mod-secondary-note-hue: 192;
    --mod-secondary-note-hue-scale: 1.5;
    --mod-secondary-note-sat: 92;
    --mod-secondary-note-sat-scale: 0;
    --mod-secondary-note-lum: 45;
    --mod-secondary-note-lum-scale: 0;
    --mod-primary-note-hue: 192;
    --mod-primary-note-hue-scale: 1.5;
    --mod-primary-note-sat: 96;
    --mod-primary-note-sat-scale: 0;
    --mod-primary-note-lum: 85;
    --mod-primary-note-lum-scale: 0;
    --oscilloscope-line-R: white;
    --oscilloscope-line-L: var(--secondary-text);
}`;var Pi=`:root {
    --page-margin: #040814;
    --editor-background: #040814;
    --hover-preview: #c6f7ff;
    --primary-text: #d3f3ff;
    --secondary-text: #6f72b5;
    --inverted-text: black;
    --box-selection-fill: rgb(43 70 171 / 62%);
    --loop-accent: #573ebb;
    --ui-widget-background: #2e2f44;
    --ui-widget-focus: #2b2c46;
    --pitch-background: #353654;
    --tonic: #716fe3;
    --fifth-note: #76469b;
    --white-piano-key: #abbce3;
    --black-piano-key: #2f235e;
    --track-editor-bg-pitch: #3a3b5c;
    --track-editor-bg-pitch-dim: #1f2036;
    --track-editor-bg-noise: #3c3554;
    --track-editor-bg-noise-dim: #1e1834;
    --track-editor-bg-mod: #30335e;
    --track-editor-bg-mod-dim: #161938;
    --multiplicative-mod-slider: #e29cff;
    --overwriting-mod-slider: #495789;
    --indicator-primary: #e1a6ff;
    --indicator-secondary: #415187;
    --select2-opt-group: #22223a;
    --input-box-outline: #2d2648;
    --mute-button-normal: #7aceff;
    --pitch1-secondary-channel: #5f3ea5;
    --pitch1-primary-channel: #c1a4ff;
    --pitch1-secondary-note: #794fd3;
    --pitch1-primary-note: #d8c6ff;
    --pitch2-secondary-channel: #4f44bf;
    --pitch2-primary-channel: #9287ff;
    --pitch2-secondary-note: #5e51d9;
    --pitch2-primary-note: #b6afff;
    --pitch3-secondary-channel: #374eb9;
    --pitch3-primary-channel: #8097ff;
    --pitch3-secondary-note: #445cc9;
    --pitch3-primary-note: #a0b2ff;
    --pitch4-secondary-channel: #2867cf;
    --pitch4-primary-channel: #6fa5ff;
    --pitch4-secondary-note: #2e6ed7;
    --pitch4-primary-note: #a6c7ff;
    --pitch5-secondary-channel: #3175a7;
    --pitch5-primary-channel: #7ec9ff;
    --pitch5-secondary-note: #367eb3;
    --pitch5-primary-note: #9fd7ff;
    --pitch6-secondary-channel: #3993a9;
    --pitch6-primary-channel: #8ce9ff;
    --pitch6-secondary-note: #386da3;
    --pitch6-primary-note: #9eecff;
    --pitch7-secondary-channel: #369d8a;
    --pitch7-primary-channel: #8bfce7;
    --pitch7-secondary-note: #1c93a7;
    --pitch7-primary-note: #abffef;
    --pitch8-secondary-channel: #00A170;
    --pitch8-primary-channel: #50FFC9;
    --pitch8-secondary-note: #00C78A;
    --pitch8-primary-note: #83FFD9;
    --pitch9-secondary-channel: #49b374;
    --pitch9-primary-channel: #8affa9;
    --pitch9-secondary-note: #26815f;
    --pitch9-primary-note: #c8ffde;
    --pitch10-secondary-channel: #58a747;
    --pitch10-primary-channel: #bbffaa;
    --pitch10-secondary-note: #1d7c48;
    --pitch10-primary-note: #c7ffbc;
    --noise1-secondary-channel: #42829b;
    --noise1-primary-channel: #97d3fc;
    --noise1-secondary-note: #3f53b3;
    --noise1-primary-note: #97d3fc;
    --noise2-secondary-channel: #6354bb;
    --noise2-primary-channel: #9a89ff;
    --noise2-secondary-note: #5f4dcd;
    --noise2-primary-note: #c6bcff;
    --noise3-secondary-channel: #704a95;
    --noise3-primary-channel: #c285ff;
    --noise3-secondary-note: #ad5aff;
    --noise3-primary-note: #d3a6ff;
    --noise4-secondary-channel: #a53c65;
    --noise4-primary-channel: #f794bb;
    --noise4-secondary-note: #cb5080;
    --noise4-primary-note: #f794bb;
    --noise5-secondary-channel: #9b2d2d;
    --noise5-primary-channel: #ff7676;
    --noise5-secondary-note: #cb4444;
    --noise5-primary-note: #ff9999;
    --mod1-secondary-channel: #b7613c;
    --mod1-primary-channel: #ff9f76;
    --mod1-secondary-note: #e77e52;
    --mod1-primary-note: #ffb99b;
    --mod2-secondary-channel: #916d34;
    --mod2-primary-channel: #fece80;
    --mod2-secondary-note: #c58b35;
    --mod2-primary-note: #ffdda5;
    --mod3-secondary-channel: #83761a;
    --mod3-primary-channel: #fdf68c;
    --mod3-secondary-note: #c18e00;
    --mod3-primary-note: #fdf68c;
    --mod4-secondary-channel: #a86436;
    --mod4-primary-channel: #c8a825;
    --mod4-secondary-note: #e8ba46;
    --mod4-primary-note: #c8a825;
    --mod-label-primary: #37325e;
    --mod-label-secondary-text: #6e8aa7;
    --mod-label-primary-text: #c1ffff;
}`;var Ei=`:root {
    --page-margin: #040300;
    --editor-background: #040300;
    --text-selection: rgb(94 0 157);
    --box-selection-fill: rgb(174 173 73 / 45%);
    --loop-accent: #EC897D;
    --link-accent: #FDE484;
    --ui-widget-background: #241b24;
    --ui-widget-focus: #3a2e39;
    --pitch-background: #141414;
    --tonic: #2C212B;
    --fifth-note: #2E2A15;
    --white-piano-key: #bbbaba;
    --black-piano-key: #2d2d2d;
    --track-editor-bg-pitch: #2d2e42;
    --track-editor-bg-pitch-dim: #191a25;
    --track-editor-bg-noise: #393340;
    --track-editor-bg-noise-dim: #26222b;
    --track-editor-bg-mod: #232a2c;
    --track-editor-bg-mod-dim: #151819;
    --multiplicative-mod-slider: #977da9;
    --overwriting-mod-slider: #798FA7;
    --indicator-primary: #F28891;
    --indicator-secondary: #601d23;
    --select2-opt-group: #151015;
    --input-box-outline: #151015;
    --mute-button-normal: #E4739D;
    --mute-button-mod: #9650A6;
    --pitch1-secondary-channel: #7F7721;
    --pitch1-primary-channel: #F3E79A;
    --pitch1-secondary-note: #7F7721;
    --pitch1-primary-note: #F3E79A;
    --pitch2-secondary-channel: #785E20;
    --pitch2-primary-channel: #F7D086;
    --pitch2-secondary-note: #785E20;
    --pitch2-primary-note: #F7D086;
    --pitch3-secondary-channel: #6E4219;
    --pitch3-primary-channel: #F9B881;
    --pitch3-secondary-note: #6E4219;
    --pitch3-primary-note: #F9B881;
    --pitch4-secondary-channel: #79351F;
    --pitch4-primary-channel: #F7A086;
    --pitch4-secondary-note: #79351F;
    --pitch4-primary-note: #F7A086;
    --pitch5-secondary-channel: #81272F;
    --pitch5-primary-channel: #F28891;
    --pitch5-secondary-note: #81272F;
    --pitch5-primary-note: #F28891;
    --pitch6-secondary-channel: #8F224D;
    --pitch6-primary-channel: #E4739D;
    --pitch6-secondary-note: #8F224D;
    --pitch6-primary-note: #E4739D;
    --pitch7-secondary-channel: #611548;
    --pitch7-primary-channel: #CF63A6;
    --pitch7-secondary-note: #611548;
    --pitch7-primary-note: #CF63A6;
    --pitch8-secondary-channel: #561253;
    --pitch8-primary-channel: #B557A9;
    --pitch8-secondary-note: #4D104A;
    --pitch8-primary-note: #B557A9;
    --pitch9-secondary-channel: #4c1260;
    --pitch9-primary-channel: #9650A6;
    --pitch9-secondary-note: #3C0F4C;
    --pitch9-primary-note: #9650A6;
    --pitch10-secondary-channel: #3e1d78;
    --pitch10-primary-channel: #704D9E;
    --pitch10-secondary-note: #27124C;
    --pitch10-primary-note: #704D9E;
    --noise1-secondary-channel: #A7A578;
    --noise1-primary-channel: #EFE9AC;
    --noise1-secondary-note: #A7A578;
    --noise1-primary-note: #EFE9AC;
    --noise2-secondary-channel: #947A5F;
    --noise2-primary-channel: #FBCEA8;
    --noise2-secondary-note: #947A5F;
    --noise2-primary-note: #FBCEA8;
    --noise3-secondary-channel: #A3635D;
    --noise3-primary-channel: #F4A5AB;
    --noise3-secondary-note: #A3635D;
    --noise3-primary-note: #F4A5AB;
    --noise4-secondary-channel: #724D60;
    --noise4-primary-channel: #CD90B6;
    --noise4-secondary-note: #724D60;
    --noise4-primary-note: #CD90B6;
    --noise5-secondary-channel: #503F5C;
    --noise5-primary-channel: #7C6A9E;
    --noise5-secondary-note: #503F5C;
    --noise5-primary-note: #7C6A9E;
    --mod1-secondary-channel: #371883;
    --mod1-primary-channel: #6416C6;
    --mod1-secondary-note: #1F0A52;
    --mod1-primary-note: #6416C6;
    --mod2-secondary-channel: #690645;
    --mod2-primary-channel: #E52FA2;
    --mod2-secondary-note: #690645;
    --mod2-primary-note: #E52FA2;
    --mod3-secondary-channel: #943618;
    --mod3-primary-channel: #eb5b2c;
    --mod3-secondary-note: #943618;
    --mod3-primary-note: #eb5b2c;
    --mod4-secondary-channel: #928409;
    --mod4-primary-channel: #ecd50e;
    --mod4-secondary-note: #928409;
    --mod4-primary-note: #ecd50e;
    --mod-label-primary: #282828;
    --mod-label-secondary-text: #707070;
    --mod-label-primary-text: white;
    --disabled-note-primary: #5d5d5d;
    --disabled-note-secondary: #292929;
}`;var Mi=`:root {
    -webkit-text-stroke-width: 0.5px;
    --hover-preview: #999999;
    --playhead: #999999;
    --primary-text: #999999;
    --secondary-text: #444444;
    --text-selection: #999999;
    --box-selection-fill: #999999;
    --loop-accent: #999999;
    --link-accent: #999999;
    --ui-widget-background: #222222;
    --ui-widget-focus: #444444;
    --pitch-background: #101010;
    --tonic: #404040;
    --fifth-note: #202020;
    --white-piano-key: #999999;
    --black-piano-key: #101010;
    --pitch-channel-limit: 6;
    --noise-channel-limit: 3;
    --pitch1-secondary-channel: #004444;
    --pitch1-primary-channel: #009999;
    --pitch1-secondary-note: #004444;
    --pitch1-primary-note: #009999;
    --pitch2-secondary-channel: #444400;
    --pitch2-primary-channel: #999900;
    --pitch2-secondary-note: #444400;
    --pitch2-primary-note: #999900;
    --pitch3-secondary-channel: #443300;
    --pitch3-primary-channel: #996600;
    --pitch3-secondary-note: #443300;
    --pitch3-primary-note: #996600;
    --pitch4-secondary-channel: #004400;
    --pitch4-primary-channel: #009900;
    --pitch4-secondary-note: #004400;
    --pitch4-primary-note: #009900;
    --pitch5-secondary-channel: #440044;
    --pitch5-primary-channel: #990099;
    --pitch5-secondary-note: #440044;
    --pitch5-primary-note: #990099;
    --pitch6-secondary-channel: #333344;
    --pitch6-primary-channel: #666699;
    --pitch6-secondary-note: #333344;
    --pitch6-primary-note: #666699;
    --pitch7-secondary-channel: #444400;
    --pitch7-primary-channel: #999900;
    --pitch7-secondary-note: #444400;
    --pitch7-primary-note: #999900;
    --pitch8-secondary-channel: #824E54;
    --pitch8-primary-channel: #C4757E;
    --pitch8-secondary-note: #824E54;
    --pitch8-primary-note: #C4757E;
    --pitch9-secondary-channel: #006342;
    --pitch9-primary-channel: #008E5F;
    --pitch9-secondary-note: #006342;
    --pitch9-primary-note: #008E5F;
    --pitch10-secondary-channel: #561291;
    --pitch10-primary-channel: #7819C1;
    --pitch10-secondary-note: #561291;
    --pitch10-primary-note: #7819C1;
    --noise1-secondary-channel: #444444;
    --noise1-primary-channel: #999999;
    --noise1-secondary-note: #444444;
    --noise1-primary-note: #999999;
    --noise2-secondary-channel: #443311;
    --noise2-primary-channel: #996633;
    --noise2-secondary-note: #443311;
    --noise2-primary-note: #996633;
    --noise3-secondary-channel: #113344;
    --noise3-primary-channel: #336699;
    --noise3-secondary-note: #113344;
    --noise3-primary-note: #336699;
    --noise4-secondary-channel: #444444;
    --noise4-primary-channel: #999999;
    --noise4-secondary-note: #444444;
    --noise4-primary-note: #999999;
    --noise5-secondary-channel: #443311;
    --noise5-primary-channel: #996633;
    --noise5-secondary-note: #443311;
    --noise5-primary-note: #996633;
    --mod1-secondary-channel: #004444;
    --mod1-primary-channel: #009999;
    --mod1-secondary-note: #004444;
    --mod1-primary-note: #009999;
    --mod2-secondary-channel: #444400;
    --mod2-primary-channel: #999900;
    --mod2-secondary-note: #444400;
    --mod2-primary-note: #999900;
    --mod3-secondary-channel: #443300;
    --mod3-primary-channel: #996600;
    --mod3-secondary-note: #443300;
    --mod3-primary-note: #996600;
    --mod4-secondary-channel: #004400;
    --mod4-primary-channel: #009900;
    --mod4-secondary-note: #004400;
    --mod4-primary-note: #009900;
}

.beepboxEditor button,
.beepboxEditor select {
    box-shadow: inset 0 0 0 1px var(--secondary-text);
}`;var Di=`:root {
    --page-margin: #010003;
    --editor-background: #010003;
    --text-selection: rgb(147 195 0);
    --box-selection-fill: rgb(145 174 73 / 49%);
    --loop-accent: #BCDE2C;
    --link-accent: #edff9f;
    --ui-widget-background: #261e2e;
    --ui-widget-focus: #322042;
    --pitch-background: #141c15;
    --tonic: #282c21;
    --fifth-note: #18221a;
    --white-piano-key: #e3e3e3;
    --black-piano-key: #2d2d2d;
    --track-editor-bg-pitch: #38293e;
    --track-editor-bg-pitch-dim: #251c29;
    --track-editor-bg-noise: #2c304c;
    --track-editor-bg-noise-dim: #191b2b;
    --track-editor-bg-mod: #311b32;
    --track-editor-bg-mod-dim: #1d101e;
    --multiplicative-mod-slider: #977da9;
    --overwriting-mod-slider: #798FA7;
    --indicator-primary: #aae9ff;
    --indicator-secondary: #253e46;
    --select2-opt-group: #110d15;
    --input-box-outline: #110d15;
    --mute-button-normal: #8f5ad1;
    --mute-button-mod: #482574;
    --pitch1-secondary-channel: #6b7f19;
    --pitch1-primary-channel: #BCDE2C;
    --pitch1-secondary-note: #6b7f19;
    --pitch1-primary-note: #BCDE2C;
    --pitch2-secondary-channel: #497a31;
    --pitch2-primary-channel: #7BD152;
    --pitch2-secondary-note: #497a31;
    --pitch2-primary-note: #7BD152;
    --pitch3-secondary-channel: #286b40;
    --pitch3-primary-channel: #45BE71;
    --pitch3-secondary-note: #286b40;
    --pitch3-primary-note: #45BE71;
    --pitch4-secondary-channel: #125140;
    --pitch4-primary-channel: #25A884;
    --pitch4-secondary-note: #125140;
    --pitch4-primary-note: #25A884;
    --pitch5-secondary-channel: #114c49;
    --pitch5-primary-channel: #21908C;
    --pitch5-secondary-note: #114c49;
    --pitch5-primary-note: #21908C;
    --pitch6-secondary-channel: #143843;
    --pitch6-primary-channel: #2B788E;
    --pitch6-secondary-note: #143843;
    --pitch6-primary-note: #2B788E;
    --pitch7-secondary-channel: #1d354e;
    --pitch7-primary-channel: #355F8D;
    --pitch7-secondary-note: #1a2f46;
    --pitch7-primary-note: #355F8D;
    --pitch8-secondary-channel: #2c2e5a;
    --pitch8-primary-channel: #414486;
    --pitch8-secondary-note: #1e1f3d;
    --pitch8-primary-note: #414486;
    --pitch9-secondary-channel: #3c1f5e;
    --pitch9-primary-channel: #5e3b89;
    --pitch9-secondary-note: #25133b;
    --pitch9-primary-note: #5e3b89;
    --pitch10-secondary-channel: #510264;
    --pitch10-primary-channel: #720d8a;
    --pitch10-secondary-note: #440154;
    --pitch10-primary-note: #720d8a;
    --noise1-secondary-channel: #BCDE2C;
    --noise1-primary-channel: #edff9f;
    --noise1-secondary-note: #BCDE2C;
    --noise1-primary-note: #edff9f;
    --noise2-secondary-channel: #45BE71;
    --noise2-primary-channel: #89ffb4;
    --noise2-secondary-note: #45BE71;
    --noise2-primary-note: #89ffb4;
    --noise3-secondary-channel: #21908C;
    --noise3-primary-channel: #72fffa;
    --noise3-secondary-note: #21908C;
    --noise3-primary-note: #72fffa;
    --noise4-secondary-channel: #355F8D;
    --noise4-primary-channel: #7cb6f5;
    --noise4-secondary-note: #355F8D;
    --noise4-primary-note: #7cb6f5;
    --noise5-secondary-channel: #482574;
    --noise5-primary-channel: #8f5ad1;
    --noise5-secondary-note: #48257A;
    --noise5-primary-note: #8f5ad1;
    --mod1-secondary-channel: #815a16;
    --mod1-primary-channel: #F5AB29;
    --mod1-secondary-note: #815a16;
    --mod1-primary-note: #F5AB29;
    --mod2-secondary-channel: #4d341a;
    --mod2-primary-channel: #C98540;
    --mod2-secondary-note: #4d341a;
    --mod2-primary-note: #C98540;
    --mod3-secondary-channel: #643734;
    --mod3-primary-channel: #A75D58;
    --mod3-secondary-note: #643734;
    --mod3-primary-note: #A75D58;
    --mod4-secondary-channel: #461430;
    --mod4-primary-channel: #812359;
    --mod4-secondary-note: #3f112b;
    --mod4-primary-note: #812359;
    --mod-label-primary: #282828;
    --mod-label-secondary-text: #707070;
    --mod-label-primary-text: white;
    --disabled-note-primary: #5d5d5d;
    --disabled-note-secondary: #292929;
}`;var Ti=`:root {
    /*--mod-title: #CCCCCC;*/
    --loop-accent: #CCCCCC;
    --playhead: #CCCCCC;
    /*--primary-text: #CCCCCC;*/
    /*--hover-preview: #CCCCCC;*/
    --link-accent: #FF8EC5;
    --indicator-primary: #FF8EC5;
    /*--indicator-primary: #CCCCCC;*/
    /*--indicator-secondary: #E856B2;*/
    --white-piano-key: #CCCCCC;
    /*--black-piano-key: #444;*/
    --text-selection: #932253;
    --oscilloscope-line-L: #CCCCCC;
    --oscilloscope-line-R: #932253;
    --pitch-channel-limit: 8;
    --pitch1-secondary-channel: #A83030;
    --pitch1-primary-channel: #FF7C7C;
    --pitch1-secondary-note: #B51532;
    --pitch1-primary-note: #FFA3A3;

    --pitch2-secondary-channel: #C75000;
    --pitch2-primary-channel: #FF9752;
    --pitch2-secondary-note: #FF771C;
    --pitch2-primary-note: #FFCDAB;

    --pitch3-secondary-channel: #A1A100;
    --pitch3-primary-channel: #FFFF25;
    --pitch3-secondary-note: #C7C700;
    --pitch3-primary-note: #FFFF92;

    --pitch4-secondary-channel: #139620;
    --pitch4-primary-channel: #25ff3a;
    --pitch4-secondary-note: #21FF33;
    --pitch4-primary-note: #C0FFB5;

    --pitch5-secondary-channel: #0099A1;
    --pitch5-primary-channel: #25F3FF;
    --pitch5-secondary-note: #00BDC7;
    --pitch5-primary-note: #92F9FF;

    --pitch6-secondary-channel: #58599E;
    --pitch6-primary-channel: #5EA3FF;
    --pitch6-secondary-note: #183AC7;
    --pitch6-primary-note: #9EC8FF;

    --pitch7-secondary-channel: #6038a5;
    --pitch7-primary-channel: #C760FF;
    --pitch7-secondary-note: #5433A0;
    --pitch7-primary-note: #D99EFF;

    --pitch8-secondary-channel: #932253;
    --pitch8-primary-channel: #FF60A5;
    --pitch8-secondary-note: #8E1C4E;
    --pitch8-primary-note: #FF8EC5;

    /*--track-editor-bg-mod: #632D45;*/
    /*--track-editor-bg-mod-dim: #3F1D2C;*/
}`;var Ai=`:root {
    --page-margin: #0e031a;
    --editor-background: #0e031a;
    --hover-preview: #e5ffea;
    --playhead: rgba(255, 255, 255, 0.9);
    --primary-text: #f0e0ff;
    --secondary-text: #706087;
    --box-selection-fill: #225835;
    --loop-accent: #8f00fb;
    --link-accent: #82dd5d;
    --ui-widget-background: #303c66;
    --ui-widget-focus: #62559b;
    --pitch-background: #293b52;
    --tonic: #5b46ad;
    --fifth-note: #42604d;
    --white-piano-key: #f6e8ff;
    --black-piano-key: #5a4972;
    --use-color-formula: true;
    --track-editor-bg-pitch: #392a46;
    --track-editor-bg-pitch-dim: #1c1d28;
    --track-editor-bg-noise: #403150;
    --track-editor-bg-noise-dim: #161313;
    --track-editor-bg-mod: #253c25;
    --track-editor-bg-mod-dim: #0c1811;
    --multiplicative-mod-slider: #606c9f;
    --overwriting-mod-slider: #6850b5;
    --indicator-primary: #9c64f7;
    --indicator-secondary: #393e4f;
    --select2-opt-group: #5d576f;
    --input-box-outline: #403150;
    --mute-button-normal: #82dd5d;
    --mute-button-mod: #945de5;
    --mod-label-primary: #312840;
    --mod-label-secondary-text: rgb(88 70 104);
    --mod-label-primary-text: #82dd5d;
    --pitch-secondary-channel-hue: 64;
    --pitch-secondary-channel-hue-scale: 6.1;
    --pitch-secondary-channel-sat: 63.3;
    --pitch-secondary-channel-sat-scale: 0.1;
    --pitch-secondary-channel-lum: 40;
    --pitch-secondary-channel-lum-scale: 0.05;
    --pitch-primary-channel-hue: 64;
    --pitch-primary-channel-hue-scale: 6.1;
    --pitch-primary-channel-sat: 90;
    --pitch-primary-channel-sat-scale: 0.1;
    --pitch-primary-channel-lum: 67.5;
    --pitch-primary-channel-lum-scale: 0.05;
    --pitch-secondary-note-hue: 32;
    --pitch-secondary-note-hue-scale: 6.1;
    --pitch-secondary-note-sat: 87.9;
    --pitch-secondary-note-sat-scale: 0.1;
    --pitch-secondary-note-lum: 25;
    --pitch-secondary-note-lum-scale: 0.05;
    --pitch-primary-note-hue: 64;
    --pitch-primary-note-hue-scale: 6.1;
    --pitch-primary-note-sat: 90;
    --pitch-primary-note-sat-scale: 0.05;
    --pitch-primary-note-lum: 85.6;
    --pitch-primary-note-lum-scale: 0.025;
    --noise-secondary-channel-hue: 192;
    --noise-secondary-channel-hue-scale: 2;
    --noise-secondary-channel-sat: 45;
    --noise-secondary-channel-sat-scale: 0;
    --noise-secondary-channel-lum: 32;
    --noise-secondary-channel-lum-scale: 0;
    --noise-primary-channel-hue: 192;
    --noise-primary-channel-hue-scale: 2;
    --noise-primary-channel-sat: 33;
    --noise-primary-channel-sat-scale: 0;
    --noise-primary-channel-lum: 43.5;
    --noise-primary-channel-lum-scale: 0;
    --noise-secondary-note-hue: 160;
    --noise-secondary-note-hue-scale: 2;
    --noise-secondary-note-sat: 33.5;
    --noise-secondary-note-sat-scale: 0;
    --noise-secondary-note-lum: 45;
    --noise-secondary-note-lum-scale: 0;
    --noise-primary-note-hue: 192;
    --noise-primary-note-hue-scale: 2;
    --noise-primary-note-sat: 46.5;
    --noise-primary-note-sat-scale: 0;
    --noise-primary-note-lum: 74;
    --noise-primary-note-lum-scale: 0;
    --mod-secondary-channel-hue: 132;
    --mod-secondary-channel-hue-scale: 1.5;
    --mod-secondary-channel-sat: 88;
    --mod-secondary-channel-sat-scale: 0;
    --mod-secondary-channel-lum: 50;
    --mod-secondary-channel-lum-scale: 0;
    --mod-primary-channel-hue: 132;
    --mod-primary-channel-hue-scale: 1.5;
    --mod-primary-channel-sat: 96;
    --mod-primary-channel-sat-scale: 0;
    --mod-primary-channel-lum: 80;
    --mod-primary-channel-lum-scale: 0;
    --mod-secondary-note-hue: 100;
    --mod-secondary-note-hue-scale: 1.5;
    --mod-secondary-note-sat: 92;
    --mod-secondary-note-sat-scale: 0;
    --mod-secondary-note-lum: 45;
    --mod-secondary-note-lum-scale: 0;
    --mod-primary-note-hue: 132;
    --mod-primary-note-hue-scale: 1.5;
    --mod-primary-note-sat: 96;
    --mod-primary-note-sat-scale: 0;
    --mod-primary-note-lum: 85;
    --mod-primary-note-lum-scale: 0;
    --disabled-note-primary: #91879f;
    --disabled-note-secondary: #6a677a;
}`;var Li=`:root {
    --page-margin: #050000;
    --editor-background: #050000;
    --pitch-channel-limit: 6;
    --noise-channel-limit: 3;
}

* {
    cursor: url("theme_resources/wackybox_cursor.png"), auto !important;
}`;var qi=`:root {
    --loop-accent: #C3593D;
    --pitch1-secondary-channel: #06c400;
    --pitch1-primary-channel: #08ff00;
    --pitch1-secondary-note: #06c400;
    --pitch1-primary-note: #06e000;
    --pitch2-secondary-channel: #00bf97;
    --pitch2-primary-channel: #00ffcb;
    --pitch2-secondary-note: #00bf97;
    --pitch2-primary-note: #00edbc;
    --pitch3-secondary-channel: #b5b000;
    --pitch3-primary-channel: #fffa00;
    --pitch3-secondary-note: #b5b000;
    --pitch3-primary-note: #e0db00;
    --pitch4-secondary-channel: #c90000;
    --pitch4-primary-channel: #e20000;
    --pitch4-secondary-note: #c90000;
    --pitch4-primary-note: #e20000;
    --pitch5-secondary-channel: #d17d12;
    --pitch5-primary-channel: #ff9e21;
    --pitch5-secondary-note: #d17d12;
    --pitch5-primary-note: #ef9017;
    --pitch6-secondary-channel: #d35bc8;
    --pitch6-primary-channel: #ffa5f7;
    --pitch6-secondary-note: #d35bc8;
    --pitch6-primary-note: #fc64ee;
    --pitch7-secondary-channel: #D00000;
    --pitch7-primary-channel: #FF4444;
    --pitch7-secondary-note: #D00000;
    --pitch7-primary-note: #FF4444;
    --pitch8-secondary-channel: #00C700;
    --pitch8-primary-channel: #A0FFA0;
    --pitch8-secondary-note: #00C700;
    --pitch8-primary-note: #A0FFA0;
    --pitch9-secondary-channel: #A88981;
    --pitch9-primary-channel: #F1C3B7;
    --pitch9-secondary-note: #A88981;
    --pitch9-primary-note: #F1C3B7;
    --pitch10-secondary-channel: #0C0A99;
    --pitch10-primary-channel: #0000EE;
    --pitch10-secondary-note: #0C0A99;
    --pitch10-primary-note: #0000EE;
    --noise1-secondary-channel: #ABABAB;
    --noise1-primary-channel: #D6D6D6;
    --noise1-secondary-note: #ABABAB;
    --noise1-primary-note: #D6D6D6;
    --noise2-secondary-channel: #A18F51;
    --noise2-primary-channel: #F6BB6A;
    --noise2-secondary-note: #A18F51;
    --noise2-primary-note: #F6BB6A;
    --noise3-secondary-channel: #5869BD;
    --noise3-primary-channel: #768DFC;
    --noise3-secondary-note: #5869BD;
    --noise3-primary-note: #768DFC;
    --noise4-secondary-channel: #8888D0;
    --noise4-primary-channel: #D0D0FF;
    --noise4-secondary-note: #8888D0;
    --noise4-primary-note: #D0D0FF;
    --noise5-secondary-channel: #B7148E;
    --noise5-primary-channel: #E819B4;
    --noise5-secondary-note: #B7148E;
    --noise5-primary-note: #E819B4;
    --mod1-secondary-channel: #06c400;
    --mod1-primary-channel: #08ff00;
    --mod1-secondary-note: #06c400;
    --mod1-primary-note: #06e000;
    --mod2-secondary-channel: #00bf97;
    --mod2-primary-channel: #00ffcb;
    --mod2-secondary-note: #00bf97;
    --mod2-primary-note: #00edbc;
    --mod3-secondary-channel: #b5b000;
    --mod3-primary-channel: #fffa00;
    --mod3-secondary-note: #b5b000;
    --mod3-primary-note: #e0db00;
    --mod4-secondary-channel: #c90000;
    --mod4-primary-channel: #e20000;
    --mod4-secondary-note: #c90000;
    --mod4-primary-note: #e20000;
}`;var xe=class o{static colorLookup=new Map;static usesColorFormula=!1;static defaultTheme="dark classic";static themes={"dark classic":"","dark competition":_a,"light classic":si,"jummbox classic":oi,forest:Xa,canyon:Ua,midnight:di,"jummbox light":ri,"amoled dark":Na,beachcombing:Oa,roe:xi,moonlight:hi,autumn:za,fruit:ei,sunset:Ei,toxic:Di,"violet verdant":Ai,portal:Si,fusion:ti,inverse:ii,nebula:mi,"roe light":Fi,energized:Za,neapolitan:fi,poly:bi,greyscale:ni,blutonium:Ha,slushie:Pi,"ultrabox dark":Ti,"modbox classic":ui,zefbox:qi,"sandbox classic":Ci,harrybox:ai,brucebox:Ga,"shitbox 2.0":Ii,"shitbox 3.0":wi,nerdbox:gi,nepbox:yi,"cardboardbox classic":$a,"blubox classic":Va,"dogebox classic":Ja,"dogebox dark":Ka,"todbox dark mode":Mi,"mainbox 1.0":li,fogbox:Ya,foxbox:ja,wackybox:Li,microbox:ci,paandorasbox:vi,midbox:pi,dogebox2:Qa,"abyssbox classic":Ra,"abyssbox light":Ba,slarmoosbox:ki,"azur lane":Wa,custom:`${Vt("customColors")||":root {  }"}`};static pageMargin="var(--page-margin, black)";static editorBackground="var(--editor-background, black)";static hoverPreview="var(--hover-preview, white)";static playhead="var(--playhead, white)";static primaryText="var(--primary-text, white)";static secondaryText="var(--secondary-text, #999)";static invertedText="var(--inverted-text, black)";static textSelection="var(--text-selection, rgba(119,68,255,0.99))";static boxSelectionFill="var(--box-selection-fill, rgba(255,255,255,0.2))";static loopAccent="var(--loop-accent, #74f)";static linkAccent="var(--link-accent, #98f)";static uiWidgetBackground="var(--ui-widget-background, #444)";static uiWidgetFocus="var(--ui-widget-focus, #777)";static pitchBackground="var(--pitch-background, #444)";static tonic="var(--tonic, #864)";static fifthNote="var(--fifth-note, #468)";static whitePianoKey="var(--white-piano-key, #bbb)";static blackPianoKey="var(--black-piano-key, #444)";static whitePianoKeyText="var(--white-piano-key-text, #131200)";static blackPianoKeyText="var(--black-piano-key-text, #fff)";static useColorFormula="var(--use-color-formula, false)";static pitchSecondaryChannelHue="var(--pitch-secondary-channel-hue)";static pitchSecondaryChannelHueScale="var(--pitch-secondary-channel-hue-scale)";static pitchSecondaryChannelSat="var(--pitch-secondary-channel-sat)";static pitchSecondaryChannelSatScale="var(--pitch-secondary-channel-sat-scale)";static pitchSecondaryChannelLum="var(--pitch-secondary-channel-lum)";static pitchSecondaryChannelLumScale="var(--pitch-secondary-channel-lum-scale)";static pitchPrimaryChannelHue="var(--pitch-primary-channel-hue)";static pitchPrimaryChannelHueScale="var(--pitch-primary-channel-hue-scale)";static pitchPrimaryChannelSat="var(--pitch-primary-channel-sat)";static pitchPrimaryChannelSatScale="var(--pitch-primary-channel-sat-scale)";static pitchPrimaryChannelLum="var(--pitch-primary-channel-lum)";static pitchPrimaryChannelLumScale="var(--pitch-primary-channel-lum-scale)";static pitchSecondaryNoteHue="var(--pitch-secondary-note-hue)";static pitchSecondaryNoteHueScale="var(--pitch-secondary-note-hue-scale)";static pitchSecondaryNoteSat="var(--pitch-secondary-note-sat)";static pitchSecondaryNoteSatScale="var(--pitch-secondary-note-sat-scale)";static pitchSecondaryNoteLum="var(--pitch-secondary-note-lum)";static pitchSecondaryNoteLumScale="var(--pitch-secondary-note-lum-scale)";static pitchPrimaryNoteHue="var(--pitch-primary-note-hue)";static pitchPrimaryNoteHueScale="var(--pitch-primary-note-hue-scale)";static pitchPrimaryNoteSat="var(--pitch-primary-note-sat)";static pitchPrimaryNoteSatScale="var(--pitch-primary-note-sat-scale)";static pitchPrimaryNoteLum="var(--pitch-primary-note-lum)";static pitchPrimaryNoteLumScale="var(--pitch-primary-note-lum-scale)";static modSecondaryChannelHue="var(--mod-secondary-channel-hue)";static modSecondaryChannelHueScale="var(--mod-secondary-channel-hue-scale)";static modSecondaryChannelSat="var(--mod-secondary-channel-sat)";static modSecondaryChannelSatScale="var(--mod-secondary-channel-sat-scale)";static modSecondaryChannelLum="var(--mod-secondary-channel-lum)";static modSecondaryChannelLumScale="var(--mod-secondary-channel-lum-scale)";static modPrimaryChannelHue="var(--mod-primary-channel-hue)";static modPrimaryChannelHueScale="var(--mod-primary-channel-hue-scale)";static modPrimaryChannelSat="var(--mod-primary-channel-sat)";static modPrimaryChannelSatScale="var(--mod-primary-channel-sat-scale)";static modPrimaryChannelLum="var(--mod-primary-channel-lum)";static modPrimaryChannelLumScale="var(--mod-primary-channel-lum-scale)";static modSecondaryNoteHue="var(--mod-secondary-note-hue)";static modSecondaryNoteHueScale="var(--mod-secondary-note-hue-scale)";static modSecondaryNoteSat="var(--mod-secondary-note-sat)";static modSecondaryNoteSatScale="var(--mod-secondary-note-sat-scale)";static modSecondaryNoteLum="var(--mod-secondary-note-lum)";static modSecondaryNoteLumScale="var(--mod-secondary-note-lum-scale)";static modPrimaryNoteHue="var(--mod-primary-note-hue)";static modPrimaryNoteHueScale="var(--mod-primary-note-hue-scale)";static modPrimaryNoteSat="var(--mod-primary-note-sat)";static modPrimaryNoteSatScale="var(--mod-primary-note-sat-scale)";static modPrimaryNoteLum="var(--mod-primary-note-lum)";static modPrimaryNoteLumScale="var(--mod-primary-note-lum-scale)";static noiseSecondaryChannelHue="var(--noise-secondary-channel-hue)";static noiseSecondaryChannelHueScale="var(--noise-secondary-channel-hue-scale)";static noiseSecondaryChannelSat="var(--noise-secondary-channel-sat)";static noiseSecondaryChannelSatScale="var(--noise-secondary-channel-sat-scale)";static noiseSecondaryChannelLum="var(--noise-secondary-channel-lum)";static noiseSecondaryChannelLumScale="var(--noise-secondary-channel-lum-scale)";static noisePrimaryChannelHue="var(--noise-primary-channel-hue)";static noisePrimaryChannelHueScale="var(--noise-primary-channel-hue-scale)";static noisePrimaryChannelSat="var(--noise-primary-channel-sat)";static noisePrimaryChannelSatScale="var(--noise-primary-channel-sat-scale)";static noisePrimaryChannelLum="var(--noise-primary-channel-lum)";static noisePrimaryChannelLumScale="var(--noise-primary-channel-lum-scale)";static noiseSecondaryNoteHue="var(--noise-secondary-note-hue)";static noiseSecondaryNoteHueScale="var(--noise-secondary-note-hue-scale)";static noiseSecondaryNoteSat="var(--noise-secondary-note-sat)";static noiseSecondaryNoteSatScale="var(--noise-secondary-note-sat-scale)";static noiseSecondaryNoteLum="var(--noise-secondary-note-lum)";static noiseSecondaryNoteLumScale="var(--noise-secondary-note-lum-scale)";static noisePrimaryNoteHue="var(--noise-primary-note-hue)";static noisePrimaryNoteHueScale="var(--noise-primary-note-hue-scale)";static noisePrimaryNoteSat="var(--noise-primary-note-sat)";static noisePrimaryNoteSatScale="var(--noise-primary-note-sat-scale)";static noisePrimaryNoteLum="var(--noise-primary-note-lum)";static noisePrimaryNoteLumScale="var(--noise-primary-note-lum-scale)";static trackEditorBgPitch="var(--track-editor-bg-pitch, #444)";static trackEditorBgPitchDim="var(--track-editor-bg-pitch-dim, #333)";static trackEditorBgNoise="var(--track-editor-bg-noise, #444)";static trackEditorBgNoiseDim="var(--track-editor-bg-noise-dim, #333)";static trackEditorBgMod="var(--track-editor-bg-mod, #234)";static trackEditorBgModDim="var(--track-editor-bg-mod-dim, #123)";static multiplicativeModSlider="var(--multiplicative-mod-slider, #456;)";static overwritingModSlider="var(--overwriting-mod-slider, #654)";static indicatorPrimary="var(--indicator-primary, #74f)";static indicatorSecondary="var(--indicator-secondary, #444)";static select2OptGroup="var(--select2-opt-group, #585858)";static inputBoxOutline="var(--input-box-outline, #333)";static muteButtonNormal="var(--mute-button-normal, #ffa033)";static muteButtonMod="var(--mute-button-mod, #9a6bff)";static modLabelPrimary="var(--mod-label-primary, #999)";static modLabelSecondaryText="var(--mod-label-secondary-text, #333)";static modLabelPrimaryText="var(--mod-label-primary-text, black)";static disabledNotePrimary="var(--disabled-note-primary, #999)";static disabledNoteSecondary="var(--disabled-note-secondary, #666)";static c_pitchSecondaryChannelHue=0;static c_pitchSecondaryChannelHueScale=0;static c_pitchSecondaryChannelSat=0;static c_pitchSecondaryChannelSatScale=0;static c_pitchSecondaryChannelLum=0;static c_pitchSecondaryChannelLumScale=0;static c_pitchPrimaryChannelHue=0;static c_pitchPrimaryChannelHueScale=0;static c_pitchPrimaryChannelSat=0;static c_pitchPrimaryChannelSatScale=0;static c_pitchPrimaryChannelLum=0;static c_pitchPrimaryChannelLumScale=0;static c_pitchSecondaryNoteHue=0;static c_pitchSecondaryNoteHueScale=0;static c_pitchSecondaryNoteSat=0;static c_pitchSecondaryNoteSatScale=0;static c_pitchSecondaryNoteLum=0;static c_pitchSecondaryNoteLumScale=0;static c_pitchPrimaryNoteHue=0;static c_pitchPrimaryNoteHueScale=0;static c_pitchPrimaryNoteSat=0;static c_pitchPrimaryNoteSatScale=0;static c_pitchPrimaryNoteLum=0;static c_pitchPrimaryNoteLumScale=0;static c_modSecondaryChannelHue=0;static c_modSecondaryChannelHueScale=0;static c_modSecondaryChannelSat=0;static c_modSecondaryChannelSatScale=0;static c_modSecondaryChannelLum=0;static c_modSecondaryChannelLumScale=0;static c_modPrimaryChannelHue=0;static c_modPrimaryChannelHueScale=0;static c_modPrimaryChannelSat=0;static c_modPrimaryChannelSatScale=0;static c_modPrimaryChannelLum=0;static c_modPrimaryChannelLumScale=0;static c_modSecondaryNoteHue=0;static c_modSecondaryNoteHueScale=0;static c_modSecondaryNoteSat=0;static c_modSecondaryNoteSatScale=0;static c_modSecondaryNoteLum=0;static c_modSecondaryNoteLumScale=0;static c_modPrimaryNoteHue=0;static c_modPrimaryNoteHueScale=0;static c_modPrimaryNoteSat=0;static c_modPrimaryNoteSatScale=0;static c_modPrimaryNoteLum=0;static c_modPrimaryNoteLumScale=0;static c_noiseSecondaryChannelHue=0;static c_noiseSecondaryChannelHueScale=0;static c_noiseSecondaryChannelSat=0;static c_noiseSecondaryChannelSatScale=0;static c_noiseSecondaryChannelLum=0;static c_noiseSecondaryChannelLumScale=0;static c_noisePrimaryChannelHue=0;static c_noisePrimaryChannelHueScale=0;static c_noisePrimaryChannelSat=0;static c_noisePrimaryChannelSatScale=0;static c_noisePrimaryChannelLum=0;static c_noisePrimaryChannelLumScale=0;static c_noiseSecondaryNoteHue=0;static c_noiseSecondaryNoteHueScale=0;static c_noiseSecondaryNoteSat=0;static c_noiseSecondaryNoteSatScale=0;static c_noiseSecondaryNoteLum=0;static c_noiseSecondaryNoteLumScale=0;static c_noisePrimaryNoteHue=0;static c_noisePrimaryNoteHueScale=0;static c_noisePrimaryNoteSat=0;static c_noisePrimaryNoteSatScale=0;static c_noisePrimaryNoteLum=0;static c_noisePrimaryNoteLumScale=0;static c_pitchChannelCountOverride=40;static c_noiseChannelCountOverride=16;static c_modChannelCountOverride=12;static c_pitchLimit=1;static c_noiseLimit=1;static c_modLimit=1;static c_colorFormulaPitchLimit=1;static c_colorFormulaNoiseLimit=1;static c_colorFormulaModLimit=1;static c_invertedText="";static c_trackEditorBgNoiseDim="";static c_trackEditorBgNoise="";static c_trackEditorBgModDim="";static c_trackEditorBgMod="";static c_trackEditorBgPitchDim="";static c_trackEditorBgPitch="";static pitchChannels=fe([{name:"pitch1",secondaryChannel:"var(--pitch1-secondary-channel, #0099A1)",primaryChannel:"var(--pitch1-primary-channel, #25F3FF)",secondaryNote:"var(--pitch1-secondary-note, #00BDC7)",primaryNote:"var(--pitch1-primary-note, #92F9FF)"},{name:"pitch2",secondaryChannel:"var(--pitch2-secondary-channel, #A1A100)",primaryChannel:"var(--pitch2-primary-channel, #FFFF25)",secondaryNote:"var(--pitch2-secondary-note, #C7C700)",primaryNote:"var(--pitch2-primary-note, #FFFF92)"},{name:"pitch3",secondaryChannel:"var(--pitch3-secondary-channel, #C75000)",primaryChannel:"var(--pitch3-primary-channel, #FF9752)",secondaryNote:"var(--pitch3-secondary-note, #FF771C)",primaryNote:"var(--pitch3-primary-note, #FFCDAB)"},{name:"pitch4",secondaryChannel:"var(--pitch4-secondary-channel, #00A100)",primaryChannel:"var(--pitch4-primary-channel, #50FF50)",secondaryNote:"var(--pitch4-secondary-note, #00C700)",primaryNote:"var(--pitch4-primary-note, #A0FFA0)"},{name:"pitch5",secondaryChannel:"var(--pitch5-secondary-channel, #D020D0)",primaryChannel:"var(--pitch5-primary-channel, #FF90FF)",secondaryNote:"var(--pitch5-secondary-note, #E040E0)",primaryNote:"var(--pitch5-primary-note, #FFC0FF)"},{name:"pitch6",secondaryChannel:"var(--pitch6-secondary-channel, #7777B0)",primaryChannel:"var(--pitch6-primary-channel, #A0A0FF)",secondaryNote:"var(--pitch6-secondary-note, #8888D0)",primaryNote:"var(--pitch6-primary-note, #D0D0FF)"},{name:"pitch7",secondaryChannel:"var(--pitch7-secondary-channel, #8AA100)",primaryChannel:"var(--pitch7-primary-channel, #DEFF25)",secondaryNote:"var(--pitch7-secondary-note, #AAC700)",primaryNote:"var(--pitch7-primary-note, #E6FF92)"},{name:"pitch8",secondaryChannel:"var(--pitch8-secondary-channel, #DF0019)",primaryChannel:"var(--pitch8-primary-channel, #FF98A4)",secondaryNote:"var(--pitch8-secondary-note, #FF4E63)",primaryNote:"var(--pitch8-primary-note, #FFB2BB)"},{name:"pitch9",secondaryChannel:"var(--pitch9-secondary-channel, #00A170)",primaryChannel:"var(--pitch9-primary-channel, #50FFC9)",secondaryNote:"var(--pitch9-secondary-note, #00C78A)",primaryNote:"var(--pitch9-primary-note, #83FFD9)"},{name:"pitch10",secondaryChannel:"var(--pitch10-secondary-channel, #A11FFF)",primaryChannel:"var(--pitch10-primary-channel, #CE8BFF)",secondaryNote:"var(--pitch10-secondary-note, #B757FF)",primaryNote:"var(--pitch10-primary-note, #DFACFF)"}]);static noiseChannels=fe([{name:"noise1",secondaryChannel:"var(--noise1-secondary-channel, #6F6F6F)",primaryChannel:"var(--noise1-primary-channel, #AAAAAA)",secondaryNote:"var(--noise1-secondary-note, #A7A7A7)",primaryNote:"var(--noise1-primary-note, #E0E0E0)"},{name:"noise2",secondaryChannel:"var(--noise2-secondary-channel, #996633)",primaryChannel:"var(--noise2-primary-channel, #DDAA77)",secondaryNote:"var(--noise2-secondary-note, #CC9966)",primaryNote:"var(--noise2-primary-note, #F0D0BB)"},{name:"noise3",secondaryChannel:"var(--noise3-secondary-channel, #4A6D8F)",primaryChannel:"var(--noise3-primary-channel, #77AADD)",secondaryNote:"var(--noise3-secondary-note, #6F9FCF)",primaryNote:"var(--noise3-primary-note, #BBD7FF)"},{name:"noise4",secondaryChannel:"var(--noise4-secondary-channel, #7A4F9A)",primaryChannel:"var(--noise4-primary-channel, #AF82D2)",secondaryNote:"var(--noise4-secondary-note, #9E71C1)",primaryNote:"var(--noise4-primary-note, #D4C1EA)"},{name:"noise5",secondaryChannel:"var(--noise5-secondary-channel, #607837)",primaryChannel:"var(--noise5-primary-channel, #A2BB77)",secondaryNote:"var(--noise5-secondary-note, #91AA66)",primaryNote:"var(--noise5-primary-note, #C5E2B2)"}]);static modChannels=fe([{name:"mod1",secondaryChannel:"var(--mod1-secondary-channel, #339955)",primaryChannel:"var(--mod1-primary-channel, #77fc55)",secondaryNote:"var(--mod1-secondary-note, #77ff8a)",primaryNote:"var(--mod1-primary-note, #cdffee)"},{name:"mod2",secondaryChannel:"var(--mod2-secondary-channel, #993355)",primaryChannel:"var(--mod2-primary-channel, #f04960)",secondaryNote:"var(--mod2-secondary-note, #f057a0)",primaryNote:"var(--mod2-primary-note, #ffb8de)"},{name:"mod3",secondaryChannel:"var(--mod3-secondary-channel, #553399)",primaryChannel:"var(--mod3-primary-channel, #8855fc)",secondaryNote:"var(--mod3-secondary-note, #aa64ff)",primaryNote:"var(--mod3-primary-note, #f8ddff)"},{name:"mod4",secondaryChannel:"var(--mod4-secondary-channel, #a86436)",primaryChannel:"var(--mod4-primary-channel, #c8a825)",secondaryNote:"var(--mod4-secondary-note, #e8ba46)",primaryNote:"var(--mod4-primary-note, #fff6d3)"}]);static resetColors(){this.colorLookup.clear()}static getArbitaryChannelColor(e,i){if(!this.usesColorFormula){let c;switch(e){case"noise":{c=o.noiseChannels[i%this.c_noiseLimit%o.noiseChannels.length];break}case"mod":{c=o.modChannels[i%this.c_modLimit%o.modChannels.length];break}case"pitch":default:{c=o.pitchChannels[i%this.c_pitchLimit%o.pitchChannels.length];break}}var n=/\(([^\,)]+)/;let d=o.getComputed(n.exec(c.secondaryChannel)[1]),y=o.getComputed(n.exec(c.primaryChannel)[1]),l=o.getComputed(n.exec(c.secondaryNote)[1]),v=o.getComputed(n.exec(c.primaryNote)[1]);return{secondaryChannel:d,primaryChannel:y,secondaryNote:l,primaryNote:v}}let a=this.c_colorFormulaPitchLimit,s=this.c_colorFormulaNoiseLimit,r=this.c_colorFormulaModLimit;switch(e){case"noise":{let c="hsl("+(this.c_noiseSecondaryChannelHue+i*this.c_noiseSecondaryChannelHueScale/this.c_noiseChannelCountOverride*256)%s+","+(this.c_noiseSecondaryChannelSat+i*this.c_noiseSecondaryChannelSatScale)+"%,"+(this.c_noiseSecondaryChannelLum+i*this.c_noiseSecondaryChannelLumScale)+"%)",d="hsl("+(this.c_noisePrimaryChannelHue+i*this.c_noisePrimaryChannelHueScale/this.c_noiseChannelCountOverride*256)%s+","+(this.c_noisePrimaryChannelSat+i*this.c_noisePrimaryChannelSatScale)+"%,"+(this.c_noisePrimaryChannelLum+i*this.c_noisePrimaryChannelLumScale)+"%)",y="hsl("+(this.c_noiseSecondaryNoteHue+i*this.c_noiseSecondaryNoteHueScale/this.c_noiseChannelCountOverride*256)%s+","+(this.c_noiseSecondaryNoteSat+i*this.c_noiseSecondaryNoteSatScale)+"%,"+(this.c_noiseSecondaryNoteLum+i*this.c_noiseSecondaryNoteLumScale)+"%)",l="hsl("+(this.c_noisePrimaryNoteHue+i*this.c_noisePrimaryNoteHueScale/this.c_noiseChannelCountOverride*256)%s+","+(this.c_noisePrimaryNoteSat+i*this.c_noisePrimaryNoteSatScale)+"%,"+(this.c_noisePrimaryNoteLum+i*this.c_noisePrimaryNoteLumScale)+"%)";return{secondaryChannel:c,primaryChannel:d,secondaryNote:y,primaryNote:l}}case"mod":{let c="hsl("+(this.c_modSecondaryChannelHue+i*this.c_modSecondaryChannelHueScale/this.c_modChannelCountOverride*256)%r+","+(this.c_modSecondaryChannelSat+i*this.c_modSecondaryChannelSatScale)+"%,"+(this.c_modSecondaryChannelLum+i*this.c_modSecondaryChannelLumScale)+"%)",d="hsl("+(this.c_modPrimaryChannelHue+i*this.c_modPrimaryChannelHueScale/this.c_modChannelCountOverride*256)%r+","+(this.c_modPrimaryChannelSat+i*this.c_modPrimaryChannelSatScale)+"%,"+(this.c_modPrimaryChannelLum+i*this.c_modPrimaryChannelLumScale)+"%)",y="hsl("+(this.c_modSecondaryNoteHue+i*this.c_modSecondaryNoteHueScale/this.c_modChannelCountOverride*256)%r+","+(this.c_modSecondaryNoteSat+i*this.c_modSecondaryNoteSatScale)+"%,"+(this.c_modSecondaryNoteLum+i*this.c_modSecondaryNoteLumScale)+"%)",l="hsl("+(this.c_modPrimaryNoteHue+i*this.c_modPrimaryNoteHueScale/this.c_modChannelCountOverride*256)%r+","+(this.c_modPrimaryNoteSat+i*this.c_modPrimaryNoteSatScale)+"%,"+(this.c_modPrimaryNoteLum+i*this.c_modPrimaryNoteLumScale)+"%)";return{secondaryChannel:c,primaryChannel:d,secondaryNote:y,primaryNote:l}}case"pitch":default:{let c="hsl("+(this.c_pitchSecondaryChannelHue+i*this.c_pitchSecondaryChannelHueScale/this.c_pitchChannelCountOverride*256)%a+","+this.c_pitchSecondaryChannelSat*(1-this.c_pitchSecondaryChannelSatScale*Math.floor(i/7))+"%,"+this.c_pitchSecondaryChannelLum*(1-this.c_pitchSecondaryChannelLumScale*Math.floor(i/7))+"%)",d="hsl("+(this.c_pitchPrimaryChannelHue+i*this.c_pitchPrimaryChannelHueScale/this.c_pitchChannelCountOverride*256)%a+","+this.c_pitchPrimaryChannelSat*(1-this.c_pitchPrimaryChannelSatScale*Math.floor(i/7))+"%,"+this.c_pitchPrimaryChannelLum*(1-this.c_pitchPrimaryChannelLumScale*Math.floor(i/7))+"%)",y="hsl("+(this.c_pitchSecondaryNoteHue+i*this.c_pitchSecondaryNoteHueScale/this.c_pitchChannelCountOverride*256)%a+","+this.c_pitchSecondaryNoteSat*(1-this.c_pitchSecondaryNoteSatScale*Math.floor(i/7))+"%,"+this.c_pitchSecondaryNoteLum*(1-this.c_pitchSecondaryNoteLumScale*Math.floor(i/7))+"%)",l="hsl("+(this.c_pitchPrimaryNoteHue+i*this.c_pitchPrimaryNoteHueScale/this.c_pitchChannelCountOverride*256)%a+","+this.c_pitchPrimaryNoteSat*(1-this.c_pitchPrimaryNoteSatScale*Math.floor(i/7))+"%,"+this.c_pitchPrimaryNoteLum*(1-this.c_pitchPrimaryNoteLumScale*Math.floor(i/7))+"%)";return{secondaryChannel:c,primaryChannel:d,secondaryNote:y,primaryNote:l}}}}static getComputedChannelColor(e,i,n,a){if(this.usesColorFormula)return o.getChannelColor(e,i,n,a);{let r=o.getChannelColor(e,i,n,a);var s=/\(([^\,)]+)/;let c=o.getComputed(s.exec(r.secondaryChannel)[1]),d=o.getComputed(s.exec(r.primaryChannel)[1]),y=o.getComputed(s.exec(r.secondaryNote)[1]),l=o.getComputed(s.exec(r.primaryNote)[1]);return{secondaryChannel:c,primaryChannel:d,secondaryNote:y,primaryNote:l}}}static getChannelColor(e,i,n,a){if(this.usesColorFormula){if(a&&(i=n),o.colorLookup.has(i))return o.colorLookup.get(i);{let s=this.c_colorFormulaPitchLimit,r=this.c_colorFormulaNoiseLimit,c=this.c_colorFormulaModLimit;if(n<e.pitchChannelCount){let d="hsl("+(this.c_pitchSecondaryChannelHue+i*this.c_pitchSecondaryChannelHueScale/this.c_pitchChannelCountOverride*256)%s+","+this.c_pitchSecondaryChannelSat*(1-this.c_pitchSecondaryChannelSatScale*Math.floor(i/9))+"%,"+this.c_pitchSecondaryChannelLum*(1-this.c_pitchSecondaryChannelLumScale*Math.floor(i/9))+"%)",y="hsl("+(this.c_pitchPrimaryChannelHue+i*this.c_pitchPrimaryChannelHueScale/this.c_pitchChannelCountOverride*256)%s+","+this.c_pitchPrimaryChannelSat*(1-this.c_pitchPrimaryChannelSatScale*Math.floor(i/9))+"%,"+this.c_pitchPrimaryChannelLum*(1-this.c_pitchPrimaryChannelLumScale*Math.floor(i/9))+"%)",l="hsl("+(this.c_pitchSecondaryNoteHue+i*this.c_pitchSecondaryNoteHueScale/this.c_pitchChannelCountOverride*256)%s+","+this.c_pitchSecondaryNoteSat*(1-this.c_pitchSecondaryNoteSatScale*Math.floor(i/9))+"%,"+this.c_pitchSecondaryNoteLum*(1-this.c_pitchSecondaryNoteLumScale*Math.floor(i/9))+"%)",v="hsl("+(this.c_pitchPrimaryNoteHue+i*this.c_pitchPrimaryNoteHueScale/this.c_pitchChannelCountOverride*256)%s+","+this.c_pitchPrimaryNoteSat*(1-this.c_pitchPrimaryNoteSatScale*Math.floor(i/9))+"%,"+this.c_pitchPrimaryNoteLum*(1-this.c_pitchPrimaryNoteLumScale*Math.floor(i/9))+"%)",h={secondaryChannel:d,primaryChannel:y,secondaryNote:l,primaryNote:v};return o.colorLookup.set(i,h),h}else if(n<e.pitchChannelCount+e.noiseChannelCount){let d="hsl("+(this.c_noiseSecondaryChannelHue+(i-e.pitchChannelCount)*this.c_noiseSecondaryChannelHueScale/this.c_noiseChannelCountOverride*256)%r+","+(this.c_noiseSecondaryChannelSat+i*this.c_noiseSecondaryChannelSatScale)+"%,"+(this.c_noiseSecondaryChannelLum+i*this.c_noiseSecondaryChannelLumScale)+"%)",y="hsl("+(this.c_noisePrimaryChannelHue+(i-e.pitchChannelCount)*this.c_noisePrimaryChannelHueScale/this.c_noiseChannelCountOverride*256)%r+","+(this.c_noisePrimaryChannelSat+i*this.c_noisePrimaryChannelSatScale)+"%,"+(this.c_noisePrimaryChannelLum+i*this.c_noisePrimaryChannelLumScale)+"%)",l="hsl("+(this.c_noiseSecondaryNoteHue+(i-e.pitchChannelCount)*this.c_noiseSecondaryNoteHueScale/this.c_noiseChannelCountOverride*256)%r+","+(this.c_noiseSecondaryNoteSat+i*this.c_noiseSecondaryNoteSatScale)+"%,"+(this.c_noiseSecondaryNoteLum+i*this.c_noiseSecondaryNoteLumScale)+"%)",v="hsl("+(this.c_noisePrimaryNoteHue+(i-e.pitchChannelCount)*this.c_noisePrimaryNoteHueScale/this.c_noiseChannelCountOverride*256)%r+","+(this.c_noisePrimaryNoteSat+i*this.c_noisePrimaryNoteSatScale)+"%,"+(this.c_noisePrimaryNoteLum+i*this.c_noisePrimaryNoteLumScale)+"%)",h={secondaryChannel:d,primaryChannel:y,secondaryNote:l,primaryNote:v};return o.colorLookup.set(i,h),h}else{let d="hsl("+(this.c_modSecondaryChannelHue+(i-e.pitchChannelCount-e.noiseChannelCount)*this.c_modSecondaryChannelHueScale/this.c_modChannelCountOverride*256)%c+","+(this.c_modSecondaryChannelSat+i*this.c_modSecondaryChannelSatScale)+"%,"+(this.c_modSecondaryChannelLum+i*this.c_modSecondaryChannelLumScale)+"%)",y="hsl("+(this.c_modPrimaryChannelHue+(i-e.pitchChannelCount-e.noiseChannelCount)*this.c_modPrimaryChannelHueScale/this.c_modChannelCountOverride*256)%c+","+(this.c_modPrimaryChannelSat+i*this.c_modPrimaryChannelSatScale)+"%,"+(this.c_modPrimaryChannelLum+i*this.c_modPrimaryChannelLumScale)+"%)",l="hsl("+(this.c_modSecondaryNoteHue+(i-e.pitchChannelCount-e.noiseChannelCount)*this.c_modSecondaryNoteHueScale/this.c_modChannelCountOverride*256)%c+","+(this.c_modSecondaryNoteSat+i*this.c_modSecondaryNoteSatScale)+"%,"+(this.c_modSecondaryNoteLum+i*this.c_modSecondaryNoteLumScale)+"%)",v="hsl("+(this.c_modPrimaryNoteHue+(i-e.pitchChannelCount-e.noiseChannelCount)*this.c_modPrimaryNoteHueScale/this.c_modChannelCountOverride*256)%c+","+(this.c_modPrimaryNoteSat+i*this.c_modPrimaryNoteSatScale)+"%,"+(this.c_modPrimaryNoteLum+i*this.c_modPrimaryNoteLumScale)+"%)",h={secondaryChannel:d,primaryChannel:y,secondaryNote:l,primaryNote:v};return o.colorLookup.set(i,h),h}}}else return a?n<e.pitchChannelCount?o.pitchChannels[n%this.c_pitchLimit%o.pitchChannels.length]:n<e.pitchChannelCount+e.noiseChannelCount?o.noiseChannels[(n-e.pitchChannelCount)%this.c_noiseLimit%o.noiseChannels.length]:o.modChannels[(n-e.pitchChannelCount-e.noiseChannelCount)%this.c_modLimit%o.modChannels.length]:n<e.pitchChannelCount?o.pitchChannels[i%this.c_pitchLimit%o.pitchChannels.length]:n<e.pitchChannelCount+e.noiseChannelCount?o.noiseChannels[i%this.c_noiseLimit%o.noiseChannels.length]:o.modChannels[i%this.c_modLimit%o.modChannels.length]}static $=document.head.appendChild(Ot.style({type:"text/css"}));static setTheme(e){let i=this.themes[e];i==null&&(i=o.defaultTheme),this.$.textContent=i;let n=":root{";getComputedStyle(this.$).getPropertyValue("--oscilloscope-line-L")==""&&(n+="--oscilloscope-line-L:var(--primary-text,white);"),getComputedStyle(this.$).getPropertyValue("--oscilloscope-line-R")==""&&(n+="--oscilloscope-line-R:var(--text-selection,rgba(119,68,255,0.99));"),getComputedStyle(this.$).getPropertyValue("--text-enabled-icon")==""&&(n+="--text-enabled-icon:\u2713 ;"),getComputedStyle(this.$).getPropertyValue("--text-disabled-icon")==""&&(n+="--text-disabled-icon:\u3000;"),getComputedStyle(this.$).getPropertyValue("--text-spacing-icon")==""&&(n+="--text-spacing-icon:\u3000;"),getComputedStyle(this.$).getPropertyValue("--note-flash")==""&&(n+="--note-flash:#ffffff;"),getComputedStyle(this.$).getPropertyValue("--note-flash-secondary")==""&&(n+="--note-flash-secondary:#ffffff77;"),getComputedStyle(this.$).getPropertyValue("--pitch-channel-limit")==""&&(n+="--pitch-channel-limit:"+t.pitchChannelCountMax+";"),getComputedStyle(this.$).getPropertyValue("--noise-channel-limit")==""&&(n+="--noise-channel-limit:"+t.noiseChannelCountMax+";"),getComputedStyle(this.$).getPropertyValue("--mod-channel-limit")==""&&(n+="--mod-channel-limit:"+t.modChannelCountMax+";"),getComputedStyle(this.$).getPropertyValue("--formula-pitch-channel-limit")==""&&(n+="--formula-pitch-channel-limit:360;"),getComputedStyle(this.$).getPropertyValue("--formula-noise-channel-limit")==""&&(n+="--formula-noise-channel-limit:360;"),getComputedStyle(this.$).getPropertyValue("--formula-mod-channel-limit")==""&&(n+="--formula-mod-channel-limit:360;"),getComputedStyle(this.$).getPropertyValue("--editor-background")==""&&(n+="--editor-background:black;"),getComputedStyle(this.$).getPropertyValue("--ui-widget-background")==""&&(n+="--ui-widget-background:#444;"),getComputedStyle(this.$).getPropertyValue("--loop-accent")==""&&(n+="--loop-accent:#74f;"),getComputedStyle(this.$).getPropertyValue("--box-selection-fill")==""&&(n+="--box-selection-fill:rgba(255,255,255,0.2);"),getComputedStyle(this.$).getPropertyValue("--primary-text")==""&&(n+="--primary-text:white;"),getComputedStyle(this.$).getPropertyValue("--inverted-text")==""&&(n+="--inverted-text:black;"),getComputedStyle(this.$).getPropertyValue("--track-editor-bg-pitch")==""&&(n+="--track-editor-bg-pitch:#444;"),getComputedStyle(this.$).getPropertyValue("--track-editor-bg-pitch-dim")==""&&(n+="--track-editor-bg-pitch-dim:#333;"),getComputedStyle(this.$).getPropertyValue("--track-editor-bg-noise")==""&&(n+="--track-editor-bg-noise:#444;"),getComputedStyle(this.$).getPropertyValue("--track-editor-bg-noise-dim")==""&&(n+="--track-editor-bg-noise-dim:#333;"),getComputedStyle(this.$).getPropertyValue("--track-editor-bg-mod")==""&&(n+="--track-editor-bg-mod:#234;"),getComputedStyle(this.$).getPropertyValue("--track-editor-bg-mod-dim")==""&&(n+="--track-editor-bg-mod-dim:#123;"),getComputedStyle(this.$).getPropertyValue("--mute-button-normal")==""&&(n+="--mute-button-normal:#ffa033;"),getComputedStyle(this.$).getPropertyValue("--mute-button-mod")==""&&(n+="--mute-button-mod:#9a6bff;"),getComputedStyle(this.$).getPropertyValue("--pitch1-secondary-channel")==""&&(n+="--pitch1-secondary-channel:#0099A1;"),getComputedStyle(this.$).getPropertyValue("--pitch1-primary-channel")==""&&(n+="--pitch1-primary-channel:#25F3FF;"),getComputedStyle(this.$).getPropertyValue("--pitch1-secondary-note")==""&&(n+="--pitch1-secondary-note:#00BDC7;"),getComputedStyle(this.$).getPropertyValue("--pitch1-primary-note")==""&&(n+="--pitch1-primary-note:#92F9FF;"),getComputedStyle(this.$).getPropertyValue("--pitch2-secondary-channel")==""&&(n+="--pitch2-secondary-channel:#A1A100;"),getComputedStyle(this.$).getPropertyValue("--pitch2-primary-channel")==""&&(n+="--pitch2-primary-channel:#FFFF25;"),getComputedStyle(this.$).getPropertyValue("--pitch2-secondary-note")==""&&(n+="--pitch2-secondary-note:#C7C700;"),getComputedStyle(this.$).getPropertyValue("--pitch2-primary-note")==""&&(n+="--pitch2-primary-note:#FFFF92;"),getComputedStyle(this.$).getPropertyValue("--pitch3-secondary-channel")==""&&(n+="--pitch3-secondary-channel:#C75000;"),getComputedStyle(this.$).getPropertyValue("--pitch3-primary-channel")==""&&(n+="--pitch3-primary-channel:#FF9752;"),getComputedStyle(this.$).getPropertyValue("--pitch3-secondary-note")==""&&(n+="--pitch3-secondary-note:#FF771C;"),getComputedStyle(this.$).getPropertyValue("--pitch3-primary-note")==""&&(n+="--pitch3-primary-note:#FFCDAB;"),getComputedStyle(this.$).getPropertyValue("--pitch4-secondary-channel")==""&&(n+="--pitch4-secondary-channel:#00A100;"),getComputedStyle(this.$).getPropertyValue("--pitch4-primary-channel")==""&&(n+="--pitch4-primary-channel:#50FF50;"),getComputedStyle(this.$).getPropertyValue("--pitch4-secondary-note")==""&&(n+="--pitch4-secondary-note:#00C700;"),getComputedStyle(this.$).getPropertyValue("--pitch4-primary-note")==""&&(n+="--pitch4-primary-note:#A0FFA0;"),getComputedStyle(this.$).getPropertyValue("--pitch5-secondary-channel")==""&&(n+="--pitch5-secondary-channel:#D020D0;"),getComputedStyle(this.$).getPropertyValue("--pitch5-primary-channel")==""&&(n+="--pitch5-primary-channel:#FF90FF;"),getComputedStyle(this.$).getPropertyValue("--pitch5-secondary-note")==""&&(n+="--pitch5-secondary-note:#E040E0;"),getComputedStyle(this.$).getPropertyValue("--pitch5-primary-note")==""&&(n+="--pitch5-primary-note:#FFC0FF;"),getComputedStyle(this.$).getPropertyValue("--pitch6-secondary-channel")==""&&(n+="--pitch6-secondary-channel:#7777B0;"),getComputedStyle(this.$).getPropertyValue("--pitch6-primary-channel")==""&&(n+="--pitch6-primary-channel:#A0A0FF;"),getComputedStyle(this.$).getPropertyValue("--pitch6-secondary-note")==""&&(n+="--pitch6-secondary-note:#8888D0;"),getComputedStyle(this.$).getPropertyValue("--pitch6-primary-note")==""&&(n+="--pitch6-primary-note:#D0D0FF;"),getComputedStyle(this.$).getPropertyValue("--pitch7-secondary-channel")==""&&(n+="--pitch7-secondary-channel:#8AA100;"),getComputedStyle(this.$).getPropertyValue("--pitch7-primary-channel")==""&&(n+="--pitch7-primary-channel:#DEFF25;"),getComputedStyle(this.$).getPropertyValue("--pitch7-secondary-note")==""&&(n+="--pitch7-secondary-note:#AAC700;"),getComputedStyle(this.$).getPropertyValue("--pitch7-primary-note")==""&&(n+="--pitch7-primary-note:#E6FF92;"),getComputedStyle(this.$).getPropertyValue("--pitch8-secondary-channel")==""&&(n+="--pitch8-secondary-channel:#DF0019;"),getComputedStyle(this.$).getPropertyValue("--pitch8-primary-channel")==""&&(n+="--pitch8-primary-channel:#FF98A4;"),getComputedStyle(this.$).getPropertyValue("--pitch8-secondary-note")==""&&(n+="--pitch8-secondary-note:#FF4E63;"),getComputedStyle(this.$).getPropertyValue("--pitch8-primary-note")==""&&(n+="--pitch8-primary-note:#FFB2BB;"),getComputedStyle(this.$).getPropertyValue("--pitch9-secondary-channel")==""&&(n+="--pitch9-secondary-channel:#00A170;"),getComputedStyle(this.$).getPropertyValue("--pitch9-primary-channel")==""&&(n+="--pitch9-primary-channel:#50FFC9;"),getComputedStyle(this.$).getPropertyValue("--pitch9-secondary-note")==""&&(n+="--pitch9-secondary-note:#00C78A;"),getComputedStyle(this.$).getPropertyValue("--pitch9-primary-note")==""&&(n+="--pitch9-primary-note:#83FFD9;"),getComputedStyle(this.$).getPropertyValue("--pitch10-secondary-channel")==""&&(n+="--pitch10-secondary-channel:#A11FFF;"),getComputedStyle(this.$).getPropertyValue("--pitch10-primary-channel")==""&&(n+="--pitch10-primary-channel:#CE8BFF;"),getComputedStyle(this.$).getPropertyValue("--pitch10-secondary-note")==""&&(n+="--pitch10-secondary-note:#B757FF;"),getComputedStyle(this.$).getPropertyValue("--pitch10-primary-note")==""&&(n+="--pitch10-primary-note:#DFACFF;"),getComputedStyle(this.$).getPropertyValue("--noise1-secondary-channel")==""&&(n+="--noise1-secondary-channel:#6F6F6F;"),getComputedStyle(this.$).getPropertyValue("--noise1-primary-channel")==""&&(n+="--noise1-primary-channel:#AAAAAA;"),getComputedStyle(this.$).getPropertyValue("--noise1-secondary-note")==""&&(n+="--noise1-secondary-note:#A7A7A7;"),getComputedStyle(this.$).getPropertyValue("--noise1-primary-note")==""&&(n+="--noise1-primary-note:#E0E0E0;"),getComputedStyle(this.$).getPropertyValue("--noise2-secondary-channel")==""&&(n+="--noise2-secondary-channel:#996633;"),getComputedStyle(this.$).getPropertyValue("--noise2-primary-channel")==""&&(n+="--noise2-primary-channel:#DDAA77;"),getComputedStyle(this.$).getPropertyValue("--noise2-secondary-note")==""&&(n+="--noise2-secondary-note:#CC9966;"),getComputedStyle(this.$).getPropertyValue("--noise2-primary-note")==""&&(n+="--noise2-primary-note:#F0D0BB;"),getComputedStyle(this.$).getPropertyValue("--noise3-secondary-channel")==""&&(n+="--noise3-secondary-channel:#4A6D8F;"),getComputedStyle(this.$).getPropertyValue("--noise3-primary-channel")==""&&(n+="--noise3-primary-channel:#77AADD;"),getComputedStyle(this.$).getPropertyValue("--noise3-secondary-note")==""&&(n+="--noise3-secondary-note:#6F9FCF;"),getComputedStyle(this.$).getPropertyValue("--noise3-primary-note")==""&&(n+="--noise3-primary-note:#BBD7FF;"),getComputedStyle(this.$).getPropertyValue("--noise4-secondary-channel")==""&&(n+="--noise4-secondary-channel:#7A4F9A;"),getComputedStyle(this.$).getPropertyValue("--noise4-primary-channel")==""&&(n+="--noise4-primary-channel:#AF82D2;"),getComputedStyle(this.$).getPropertyValue("--noise4-secondary-note")==""&&(n+="--noise4-secondary-note:#9E71C1;"),getComputedStyle(this.$).getPropertyValue("--noise4-primary-note")==""&&(n+="--noise4-primary-note:#D4C1EA;"),getComputedStyle(this.$).getPropertyValue("--noise5-secondary-channel")==""&&(n+="--noise5-secondary-channel:#607837;"),getComputedStyle(this.$).getPropertyValue("--noise5-primary-channel")==""&&(n+="--noise5-primary-channel:#A2BB77;"),getComputedStyle(this.$).getPropertyValue("--noise5-secondary-note")==""&&(n+="--noise5-secondary-note:#91AA66;"),getComputedStyle(this.$).getPropertyValue("--noise5-primary-note")==""&&(n+="--noise5-primary-note:#C5E2B2;"),getComputedStyle(this.$).getPropertyValue("--mod1-secondary-channel")==""&&(n+="--mod1-secondary-channel:#339955;"),getComputedStyle(this.$).getPropertyValue("--mod1-primary-channel")==""&&(n+="--mod1-primary-channel:#77fc55;"),getComputedStyle(this.$).getPropertyValue("--mod1-secondary-note")==""&&(n+="--mod1-secondary-note:#77ff8a;"),getComputedStyle(this.$).getPropertyValue("--mod1-primary-note")==""&&(n+="--mod1-primary-note:#cdffee;"),getComputedStyle(this.$).getPropertyValue("--mod2-secondary-channel")==""&&(n+="--mod2-secondary-channel:#993355;"),getComputedStyle(this.$).getPropertyValue("--mod2-primary-channel")==""&&(n+="--mod2-primary-channel:#f04960;"),getComputedStyle(this.$).getPropertyValue("--mod2-secondary-note")==""&&(n+="--mod2-secondary-note:#f057a0;"),getComputedStyle(this.$).getPropertyValue("--mod2-primary-note")==""&&(n+="--mod2-primary-note:#ffb8de;"),getComputedStyle(this.$).getPropertyValue("--mod3-secondary-channel")==""&&(n+="--mod3-secondary-channel:#553399;"),getComputedStyle(this.$).getPropertyValue("--mod3-primary-channel")==""&&(n+="--mod3-primary-channel:#8855fc;"),getComputedStyle(this.$).getPropertyValue("--mod3-secondary-note")==""&&(n+="--mod3-secondary-note:#aa64ff;"),getComputedStyle(this.$).getPropertyValue("--mod3-primary-note")==""&&(n+="--mod3-primary-note:#f8ddff;"),getComputedStyle(this.$).getPropertyValue("--mod4-secondary-channel")==""&&(n+="--mod4-secondary-channel:#a86436;"),getComputedStyle(this.$).getPropertyValue("--mod4-primary-channel")==""&&(n+="--mod4-primary-channel:#c8a825;"),getComputedStyle(this.$).getPropertyValue("--mod4-secondary-note")==""&&(n+="--mod4-secondary-note:#e8ba46;"),getComputedStyle(this.$).getPropertyValue("--mod4-primary-note")==""&&(n+="--mod4-primary-note:#fff6d3;"),n+="}",this.$.textContent=n+this.$.textContent;let a=document.querySelector("meta[name='theme-color']");a?.setAttribute("content",getComputedStyle(document.documentElement).getPropertyValue("--ui-widget-background")),this.resetColors(),this.usesColorFormula=getComputedStyle(this.$).getPropertyValue("--use-color-formula").trim()=="true",this.c_pitchLimit=+getComputedStyle(this.$).getPropertyValue("--pitch-channel-limit"),this.c_noiseLimit=+getComputedStyle(this.$).getPropertyValue("--noise-channel-limit"),this.c_modLimit=+getComputedStyle(this.$).getPropertyValue("--mod-channel-limit"),this.c_colorFormulaPitchLimit=+getComputedStyle(this.$).getPropertyValue("--formula-pitch-channel-limit"),this.c_colorFormulaNoiseLimit=+getComputedStyle(this.$).getPropertyValue("--formula-noise-channel-limit"),this.c_colorFormulaModLimit=+getComputedStyle(this.$).getPropertyValue("--formula-mod-channel-limit"),this.c_invertedText=getComputedStyle(this.$).getPropertyValue("--inverted-text"),this.c_trackEditorBgNoiseDim=getComputedStyle(this.$).getPropertyValue("--track-editor-bg-noise-dim"),this.c_trackEditorBgNoise=getComputedStyle(this.$).getPropertyValue("--track-editor-bg-noise"),this.c_trackEditorBgModDim=getComputedStyle(this.$).getPropertyValue("--track-editor-bg-mod-dim"),this.c_trackEditorBgMod=getComputedStyle(this.$).getPropertyValue("--track-editor-bg-mod"),this.c_trackEditorBgPitchDim=getComputedStyle(this.$).getPropertyValue("--track-editor-bg-pitch-dim"),this.c_trackEditorBgPitch=getComputedStyle(this.$).getPropertyValue("--track-editor-bg-pitch"),this.usesColorFormula&&(this.c_pitchSecondaryChannelHue=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-channel-hue"),this.c_pitchSecondaryChannelHueScale=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-channel-hue-scale"),this.c_pitchSecondaryChannelSat=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-channel-sat"),this.c_pitchSecondaryChannelSatScale=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-channel-sat-scale"),this.c_pitchSecondaryChannelLum=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-channel-lum"),this.c_pitchSecondaryChannelLumScale=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-channel-lum-scale"),this.c_pitchPrimaryChannelHue=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-channel-hue"),this.c_pitchPrimaryChannelHueScale=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-channel-hue-scale"),this.c_pitchPrimaryChannelSat=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-channel-sat"),this.c_pitchPrimaryChannelSatScale=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-channel-sat-scale"),this.c_pitchPrimaryChannelLum=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-channel-lum"),this.c_pitchPrimaryChannelLumScale=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-channel-lum-scale"),this.c_pitchSecondaryNoteHue=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-note-hue"),this.c_pitchSecondaryNoteHueScale=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-note-hue-scale"),this.c_pitchSecondaryNoteSat=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-note-sat"),this.c_pitchSecondaryNoteSatScale=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-note-sat-scale"),this.c_pitchSecondaryNoteLum=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-note-lum"),this.c_pitchSecondaryNoteLumScale=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-note-lum-scale"),this.c_pitchPrimaryNoteHue=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-note-hue"),this.c_pitchPrimaryNoteHueScale=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-note-hue-scale"),this.c_pitchPrimaryNoteSat=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-note-sat"),this.c_pitchPrimaryNoteSatScale=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-note-sat-scale"),this.c_pitchPrimaryNoteLum=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-note-lum"),this.c_pitchPrimaryNoteLumScale=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-note-lum-scale"),this.c_noiseSecondaryChannelHue=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-channel-hue"),this.c_noiseSecondaryChannelHueScale=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-channel-hue-scale"),this.c_noiseSecondaryChannelSat=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-channel-sat"),this.c_noiseSecondaryChannelSatScale=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-channel-sat-scale"),this.c_noiseSecondaryChannelLum=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-channel-lum"),this.c_noiseSecondaryChannelLumScale=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-channel-lum-scale"),this.c_noisePrimaryChannelHue=+getComputedStyle(this.$).getPropertyValue("--noise-primary-channel-hue"),this.c_noisePrimaryChannelHueScale=+getComputedStyle(this.$).getPropertyValue("--noise-primary-channel-hue-scale"),this.c_noisePrimaryChannelSat=+getComputedStyle(this.$).getPropertyValue("--noise-primary-channel-sat"),this.c_noisePrimaryChannelSatScale=+getComputedStyle(this.$).getPropertyValue("--noise-primary-channel-sat-scale"),this.c_noisePrimaryChannelLum=+getComputedStyle(this.$).getPropertyValue("--noise-primary-channel-lum"),this.c_noisePrimaryChannelLumScale=+getComputedStyle(this.$).getPropertyValue("--noise-primary-channel-lum-scale"),this.c_noiseSecondaryNoteHue=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-note-hue"),this.c_noiseSecondaryNoteHueScale=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-note-hue-scale"),this.c_noiseSecondaryNoteSat=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-note-sat"),this.c_noiseSecondaryNoteSatScale=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-note-sat-scale"),this.c_noiseSecondaryNoteLum=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-note-lum"),this.c_noiseSecondaryNoteLumScale=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-note-lum-scale"),this.c_noisePrimaryNoteHue=+getComputedStyle(this.$).getPropertyValue("--noise-primary-note-hue"),this.c_noisePrimaryNoteHueScale=+getComputedStyle(this.$).getPropertyValue("--noise-primary-note-hue-scale"),this.c_noisePrimaryNoteSat=+getComputedStyle(this.$).getPropertyValue("--noise-primary-note-sat"),this.c_noisePrimaryNoteSatScale=+getComputedStyle(this.$).getPropertyValue("--noise-primary-note-sat-scale"),this.c_noisePrimaryNoteLum=+getComputedStyle(this.$).getPropertyValue("--noise-primary-note-lum"),this.c_noisePrimaryNoteLumScale=+getComputedStyle(this.$).getPropertyValue("--noise-primary-note-lum-scale"),this.c_modSecondaryChannelHue=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-channel-hue"),this.c_modSecondaryChannelHueScale=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-channel-hue-scale"),this.c_modSecondaryChannelSat=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-channel-sat"),this.c_modSecondaryChannelSatScale=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-channel-sat-scale"),this.c_modSecondaryChannelLum=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-channel-lum"),this.c_modSecondaryChannelLumScale=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-channel-lum-scale"),this.c_modPrimaryChannelHue=+getComputedStyle(this.$).getPropertyValue("--mod-primary-channel-hue"),this.c_modPrimaryChannelHueScale=+getComputedStyle(this.$).getPropertyValue("--mod-primary-channel-hue-scale"),this.c_modPrimaryChannelSat=+getComputedStyle(this.$).getPropertyValue("--mod-primary-channel-sat"),this.c_modPrimaryChannelSatScale=+getComputedStyle(this.$).getPropertyValue("--mod-primary-channel-sat-scale"),this.c_modPrimaryChannelLum=+getComputedStyle(this.$).getPropertyValue("--mod-primary-channel-lum"),this.c_modPrimaryChannelLumScale=+getComputedStyle(this.$).getPropertyValue("--mod-primary-channel-lum-scale"),this.c_modSecondaryNoteHue=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-note-hue"),this.c_modSecondaryNoteHueScale=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-note-hue-scale"),this.c_modSecondaryNoteSat=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-note-sat"),this.c_modSecondaryNoteSatScale=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-note-sat-scale"),this.c_modSecondaryNoteLum=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-note-lum"),this.c_modSecondaryNoteLumScale=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-note-lum-scale"),this.c_modPrimaryNoteHue=+getComputedStyle(this.$).getPropertyValue("--mod-primary-note-hue"),this.c_modPrimaryNoteHueScale=+getComputedStyle(this.$).getPropertyValue("--mod-primary-note-hue-scale"),this.c_modPrimaryNoteSat=+getComputedStyle(this.$).getPropertyValue("--mod-primary-note-sat"),this.c_modPrimaryNoteSatScale=+getComputedStyle(this.$).getPropertyValue("--mod-primary-note-sat-scale"),this.c_modPrimaryNoteLum=+getComputedStyle(this.$).getPropertyValue("--mod-primary-note-lum"),this.c_modPrimaryNoteLumScale=+getComputedStyle(this.$).getPropertyValue("--mod-primary-note-lum-scale"),getComputedStyle(this.$).getPropertyValue("--formula-pitch-channel-count-override")!=""&&(this.c_pitchChannelCountOverride=+getComputedStyle(this.$).getPropertyValue("--formula-pitch-channel-count-override")),getComputedStyle(this.$).getPropertyValue("--formula-noise-channel-count-override")!=""&&(this.c_noiseChannelCountOverride=+getComputedStyle(this.$).getPropertyValue("--formula-noise-channel-count-override")),getComputedStyle(this.$).getPropertyValue("--formula-mod-channel-count-override")!=""&&(this.c_modChannelCountOverride=+getComputedStyle(this.$).getPropertyValue("--formula-mod-channel-count-override")))}static getComputed(e){return getComputedStyle(this.$).getPropertyValue(e)}};var $n=class{activeEvents;listeners;constructor(){this.activeEvents=[],this.listeners={}}raise(e,i,n){if(this.listeners[e]!=null){this.activeEvents.push(e);for(let a=0;a<this.listeners[e].length;a++)this.listeners[e][a](i,n);this.activeEvents.pop()}}listen(e,i){this.listeners[e]==null&&(this.listeners[e]=[]),this.listeners[e].push(i)}unlisten(e,i){if(this.listeners[e]==null)return;let n=this.listeners[e].indexOf(i);n!=-1&&this.listeners[e].splice(n,1)}unlistenAll(e){this.listeners[e]!=null&&(this.listeners[e]=[])}},cn=new $n;var pn=class{constructor(e,i=1){this.canvas=e;this.scale=i;this.pe=function(n,a){if(a){var s=e.getContext("2d");s.fillStyle=xe.getComputed("--editor-background"),s.fillRect(0,0,e.width,e.height),s.fillStyle=xe.getComputed("--oscilloscope-line-L");for(let r=n.length-1;r>=n.length-1-e.width/i;r--){let c=r-(n.length-1)+e.width/i,d=n[r]*(e.height/i/2)+e.height/i/2;if(s.fillRect((c-1)*i,(d-1)*i,1*i,1.5*i),c==0)break}s.fillStyle=xe.getComputed("--oscilloscope-line-R");for(let r=a.length-1;r>=a.length-1-e.width/i;r--){let c=r-(a.length-1)+e.width/i,d=a[r]*(e.height/i/2)+e.height/i/2;if(s.fillRect((c-1)*i,(d-1)*i,1*i,1.5*i),c==0)break}}},cn.listen("oscilloscopeUpdate",this.pe)}pe};var ft=class{octave=0;instruments=[];patterns=[];bars=[];muted=!1;visible=!0;name="";color=0};var nt=class{a=[1];b=[1];order=0;linearGain0thOrder(e){this.b[0]=e,this.order=0}lowPass1stOrderButterworth(e){let i=1/Math.tan(e*.5),n=1+i;this.a[1]=(1-i)/n,this.b[1]=this.b[0]=1/n,this.order=1}lowPass1stOrderSimplified(e){let i=2*Math.sin(e*.5);this.a[1]=i-1,this.b[0]=i,this.b[1]=0,this.order=1}highPass1stOrderButterworth(e){let i=1/Math.tan(e*.5),n=1+i;this.a[1]=(1-i)/n,this.b[0]=i/n,this.b[1]=-i/n,this.order=1}highShelf1stOrder(e,i){let n=Math.tan(e*.5),a=Math.sqrt(i),s=(n*a-1)/(n*a+1),r=1;this.a[1]=s/r,this.b[0]=(1+s+i*(1-s))/(2*r),this.b[1]=(1+s-i*(1-s))/(2*r),this.order=1}allPass1stOrderInvertPhaseAbove(e){let i=(Math.sin(e)-1)/Math.cos(e);this.a[1]=i,this.b[0]=i,this.b[1]=1,this.order=1}allPass1stOrderFractionalDelay(e){let i=(1-e)/(1+e);this.a[1]=i,this.b[0]=i,this.b[1]=1,this.order=1}lowPass2ndOrderButterworth(e,i){let n=Math.sin(e)/(2*i),a=Math.cos(e),s=1+n;this.a[1]=-2*a/s,this.a[2]=(1-n)/s,this.b[2]=this.b[0]=(1-a)/(2*s),this.b[1]=(1-a)/s,this.order=2}lowPass2ndOrderSimplified(e,i){let n=2*Math.sin(e/2),a=1-1/(2*i),s=a+a/(1-n);this.a[1]=2*n+(n-1)*n*s-2,this.a[2]=(n-1)*(n-n*s-1),this.b[0]=n*n,this.b[1]=0,this.b[2]=0,this.order=2}highPass2ndOrderButterworth(e,i){let n=Math.sin(e)/(2*i),a=Math.cos(e),s=1+n;this.a[1]=-2*a/s,this.a[2]=(1-n)/s,this.b[2]=this.b[0]=(1+a)/(2*s),this.b[1]=-(1+a)/s,this.order=2}highShelf2ndOrder(e,i,n){let a=Math.sqrt(i),s=Math.cos(e),r=a+1,c=a-1,d=Math.sin(e)*.5*Math.sqrt(r/a*(1/n-1)+2),y=2*Math.sqrt(a)*d,l=r-c*s+y;this.a[1]=2*(c-r*s)/l,this.a[2]=(r-c*s-y)/l,this.b[0]=a*(r+c*s+y)/l,this.b[1]=-2*a*(c+r*s)/l,this.b[2]=a*(r+c*s-y)/l,this.order=2}peak2ndOrder(e,i,n){let a=Math.sqrt(i),s=n*e/(a>=1?a:1/a),r=Math.tan(s*.5),c=1+r/a;this.b[0]=(1+r*a)/c,this.b[1]=this.a[1]=-2*Math.cos(e)/c,this.b[2]=(1-r*a)/c,this.a[2]=(1-r/a)/c,this.order=2}},st=class{real=0;imag=0;denom=1;analyze(e,i){this.analyzeComplex(e,Math.cos(i),Math.sin(i))}analyzeComplex(e,i,n){let a=e.a,s=e.b,r=i,c=-n,d=s[0]+s[1]*r,y=s[1]*c,l=1+a[1]*r,v=a[1]*c,h=r,g=c;for(let f=2;f<=e.order;f++){let m=h*r-g*c,p=h*c+g*r;h=m,g=p,d+=s[f]*h,y+=s[f]*g,l+=a[f]*h,v+=a[f]*g}this.denom=l*l+v*v,this.real=d*l+y*v,this.imag=y*l-d*v}magnitude(){return Math.sqrt(this.real*this.real+this.imag*this.imag)/this.denom}angle(){return Math.atan2(this.imag,this.real)}},Re=class{a1=0;a2=0;b0=1;b1=0;b2=0;a1Delta=0;a2Delta=0;b0Delta=0;b1Delta=0;b2Delta=0;output1=0;output2=0;useMultiplicativeInputCoefficients=!1;resetOutput(){this.output1=0,this.output2=0}loadCoefficientsWithGradient(e,i,n,a){if(e.order!=2||i.order!=2)throw new Error;this.a1=e.a[1],this.a2=e.a[2],this.b0=e.b[0],this.b1=e.b[1],this.b2=e.b[2],this.a1Delta=(i.a[1]-e.a[1])*n,this.a2Delta=(i.a[2]-e.a[2])*n,a?(this.b0Delta=Math.pow(i.b[0]/e.b[0],n),this.b1Delta=Math.pow(i.b[1]/e.b[1],n),this.b2Delta=Math.pow(i.b[2]/e.b[2],n)):(this.b0Delta=(i.b[0]-e.b[0])*n,this.b1Delta=(i.b[1]-e.b[1])*n,this.b2Delta=(i.b[2]-e.b[2])*n),this.useMultiplicativeInputCoefficients=a}};function _n(o){return 2*Math.atan(o*.5)}var Ee=class o{controlPoints=[];controlPointCount=0;constructor(){this.reset()}reset(){this.controlPointCount=0}addPoint(e,i,n){let a;this.controlPoints.length<=this.controlPointCount?(a=new Pe,this.controlPoints[this.controlPointCount]=a):a=this.controlPoints[this.controlPointCount],this.controlPointCount++,a.type=e,a.set(i,n)}toJsonObject(){let e=[];for(let i=0;i<this.controlPointCount;i++){let n=this.controlPoints[i];e.push({type:t.filterTypeNames[n.type],cutoffHz:Math.round(n.getHz()*100)/100,linearGain:Math.round(n.getLinearGain()*1e4)/1e4})}return e}fromJsonObject(e){if(this.controlPoints.length=0,e)for(let i of e){let n=new Pe;n.type=t.filterTypeNames.indexOf(i.type),n.type==-1&&(n.type=2),i.cutoffHz!=null?n.freq=Pe.getRoundedSettingValueFromHz(i.cutoffHz):n.freq=0,i.linearGain!=null?n.gain=Pe.getRoundedSettingValueFromLinearGain(i.linearGain):n.gain=t.filterGainCenter,this.controlPoints.push(n)}this.controlPointCount=this.controlPoints.length}static filtersCanMorph(e,i){if(e.controlPointCount!=i.controlPointCount)return!1;for(let n=0;n<e.controlPointCount;n++)if(e.controlPoints[n].type!=i.controlPoints[n].type)return!1;return!0}static lerpFilters(e,i,n){let a=new o;if(e==null)return e;if(i==null)return i;if(n=Math.max(0,Math.min(1,n)),this.filtersCanMorph(e,i)){for(let s=0;s<e.controlPointCount;s++)a.controlPoints[s]=new Pe,a.controlPoints[s].type=e.controlPoints[s].type,a.controlPoints[s].freq=e.controlPoints[s].freq+(i.controlPoints[s].freq-e.controlPoints[s].freq)*n,a.controlPoints[s].gain=e.controlPoints[s].gain+(i.controlPoints[s].gain-e.controlPoints[s].gain)*n;return a.controlPointCount=e.controlPointCount,a}else return n>=1?i:e}convertLegacySettings(e,i,n){this.reset();let a=8e3,r=Math.asin(.95/2)*2,c=.95,d=11,y=8,l=i>1,v=i==0,h=e==d-1,g=n.type==5||n.type==6||n.type==10||n.type==1,f=48e3,m=a*Math.pow(2,(e-(d-1))*.5),p=Math.min(r,2*Math.PI*m/f);if(!(n.type==0&&!l&&h))if(v){let x=p*Math.pow(2,3.5),w=x/(1+x/Math.PI),b=f*w/(2*Math.PI),P=Pe.getRoundedSettingValueFromHz(b),B=Pe.getHzFromSettingValue(P),L=2*Math.PI*B/f,E=new nt;E.lowPass1stOrderSimplified(p);let D=new st;D.analyze(E,L);let R=D.magnitude(),N=Math.log2(R);N=-3.5+(N+3.5)*.82,g&&(N=Math.min(N,-1));let z=Math.pow(2,N),W=Pe.getRoundedSettingValueFromLinearGain(z);this.addPoint(0,P,W)}else{let S=.5/(1-c*Math.sqrt(Math.max(0,i-1)/(y-2))),x=.5/S,w=2*Math.PI*a/f,b=p/w,P=p*(b*Math.pow(x,.9)+1),B=p+(P-p)*x,L;g?L=f*Math.min(B,p*Math.pow(2,.25))/(2*Math.PI):L=f*B/(2*Math.PI);let E=Pe.getRoundedSettingValueFromHz(L),D;if(g)D=S;else{let N=new nt;N.lowPass2ndOrderSimplified(p,S);let z=new st;z.analyze(N,B),D=z.magnitude()}l||(D=Math.min(D,Math.sqrt(.5)));let R=Pe.getRoundedSettingValueFromLinearGain(D);this.addPoint(0,E,R)}this.controlPoints.length=this.controlPointCount}convertLegacySettingsForSynth(e,i,n=!1){this.reset();let a=8e3,r=Math.asin(.95/2)*2,c=.95,d=11,y=8,l=i==0&&n,v=48e3,h=a*Math.pow(2,(e-(d-1))*.5),g=Math.min(r,2*Math.PI*h/v);if(l){let m=g*Math.pow(2,3.5),p=m/(1+m/Math.PI),S=v*p/(2*Math.PI),x=Pe.getRoundedSettingValueFromHz(S),w=Pe.getHzFromSettingValue(x),b=2*Math.PI*w/v,P=new nt;P.lowPass1stOrderSimplified(g);let B=new st;B.analyze(P,b);let L=B.magnitude(),E=Math.log2(L);E=-3.5+(E+3.5)*.82;let D=Math.pow(2,E),R=Pe.getRoundedSettingValueFromLinearGain(D);this.addPoint(0,x,R)}else{let f=.5/(1-c*Math.sqrt(Math.max(0,i-1)/(y-2))),m=.5/f,p=2*Math.PI*a/v,S=g/p,x=g*(S*Math.pow(m,.9)+1),w=g+(x-g)*m,b;b=v*w/(2*Math.PI);let P=Pe.getSettingValueFromHz(b),B,L=new nt;L.lowPass2ndOrderSimplified(g,f);let E=new st;E.analyze(L,w),B=E.magnitude();let D=Pe.getRoundedSettingValueFromLinearGain(B);this.addPoint(0,P,D)}}},Pe=class o{freq=0;gain=t.filterGainCenter;type=2;set(e,i){this.freq=e,this.gain=i}getHz(){return o.getHzFromSettingValue(this.freq)}static getHzFromSettingValue(e){return t.filterFreqReferenceHz*Math.pow(2,(e-t.filterFreqReferenceSetting)*t.filterFreqStep)}static getSettingValueFromHz(e){return Math.log2(e/t.filterFreqReferenceHz)/t.filterFreqStep+t.filterFreqReferenceSetting}static getRoundedSettingValueFromHz(e){return Math.max(0,Math.min(t.filterFreqRange-1,Math.round(o.getSettingValueFromHz(e))))}getLinearGain(e=1){let i=(this.gain-t.filterGainCenter)*t.filterGainStep,n=this.type==2?0:-.5,a=n+(i-n)*e;return Math.pow(2,a)}static getRoundedSettingValueFromLinearGain(e){return Math.max(0,Math.min(t.filterGainRange-1,Math.round(Math.log2(e)/t.filterGainStep+t.filterGainCenter)))}toCoefficients(e,i,n=1,a=1){let s=2*Math.PI*Math.max(t.filterFreqMinHz,Math.min(t.filterFreqMaxHz,n*this.getHz()))/i,r=this.getLinearGain(a);switch(this.type){case 0:e.lowPass2ndOrderButterworth(s,r);break;case 1:e.highPass2ndOrderButterworth(s,r);break;case 2:e.peak2ndOrder(s,r,1);break;default:throw new Error}}getVolumeCompensationMult(){let e=(this.freq-t.filterFreqReferenceSetting)*t.filterFreqStep,i=(this.gain-t.filterGainCenter)*t.filterGainStep;switch(this.type){case 0:let n=Math.pow(2,e)*t.filterFreqReferenceHz/8e3,a=(Math.sqrt(1+4*n)-1)/2,s=Math.log2(a);return Math.pow(.5,.2*Math.max(0,i+1)+Math.min(0,Math.max(-3,.595*s+.35*Math.min(0,i+1))));case 1:return Math.pow(.5,.125*Math.max(0,i+1)+Math.min(0,.3*(-e-Math.log2(t.filterFreqReferenceHz/125))+.2*Math.min(0,i+1)));case 2:let r=e+Math.log2(t.filterFreqReferenceHz/2e3),c=Math.pow(1/(1+Math.pow(r/3,2)),2);return Math.pow(.5,.125*Math.max(0,i)+.1*c*Math.min(0,i));default:throw new Error}}};var un=class{type=0;wetDryMix=.5;send=1;eqFilter=new Ee;eqFilterType=!1;eqFilterSimpleCut=t.filterSimpleCutRange-1;eqFilterSimplePeak=0;eqSubFilters=[];tmpEqFilterStart;tmpEqFilterEnd;gain=t.volumeRange/2;pan=t.panCenter;panDelay=0;panMode=0;aliases=!1;distortion=0;bitcrusherFreq=0;bitcrusherQuantization=0;ringModulation=Math.floor(t.ringModRange/2);ringModulationHz=Math.floor(t.ringModHzRange/2);ringModWaveformIndex=0;ringModPulseWidth=0;ringModHzOffset=200;granular=4;grainSize=(t.grainSizeMax-t.grainSizeMin)/t.grainSizeStep;grainAmounts=t.grainAmountsMax;grainRange=40;flanger=0;flangerSpeed=0;flangerDepth=0;flangerFeedback=0;chorus=0;reverb=0;echoSustain=0;echoDelay=0;echoPingPong=t.panCenter;constructor(e){this.type=e}};function A(o,e,i){return e=e-1,i<=e?i>=o?i:o:e}function ze(o,e,i){if(o<=i&&i<=e)return i;throw new Error(`Value ${i} not in range [${o}, ${e}]`)}function Jt(o,e){let i=parseFloat(o);return Number.isNaN(i)&&(i=e),i}function Kt(o,e){let i=parseInt(o);return Number.isNaN(i)&&(i=e),i}function Qn(o){return .0125*(.95*o+.05*o*o)}function mt(o){return A(0,t.fadeInRange,Math.round((-.95+Math.sqrt(.9025+.2*o/.0125))/.1))}function Jn(o){return t.fadeOutTicks[o]}function yt(o){let e=t.fadeOutTicks[0];if(o<=e)return 0;for(let i=1;i<t.fadeOutTicks.length;i++){let n=t.fadeOutTicks[i];if(o<=n)return o<(e+n)/2?i-1:i;e=n}return t.fadeOutTicks.length-1}function Zt(o){return o-t.detuneCenter}function Ri(o){return o+t.detuneCenter}function Je(o){return 1<<32-Math.clz32(Math.ceil(o)-1)}var Yt=class{constructor(e){this.isNoiseEnvelope=e;this.reset()}target=0;index=0;envelope=0;pitchEnvelopeStart;pitchEnvelopeEnd;inverse;perEnvelopeSpeed=t.envelopes[this.envelope].speed;perEnvelopeLowerBound=0;perEnvelopeUpperBound=1;tempEnvelopeSpeed=null;tempEnvelopeLowerBound=null;tempEnvelopeUpperBound=null;steps=2;seed=2;waveform=0;discrete=!1;reset(){this.target=0,this.index=0,this.envelope=0,this.pitchEnvelopeStart=0,this.pitchEnvelopeEnd=this.isNoiseEnvelope?t.drumCount-1:t.maxPitch,this.inverse=!1,this.isNoiseEnvelope=!1,this.perEnvelopeSpeed=t.envelopes[this.envelope].speed,this.perEnvelopeLowerBound=0,this.perEnvelopeUpperBound=1,this.tempEnvelopeSpeed=null,this.tempEnvelopeLowerBound=null,this.tempEnvelopeUpperBound=null,this.steps=2,this.seed=2,this.waveform=0,this.discrete=!1}toJsonObject(){let e={target:t.instrumentAutomationTargets[this.target].name,envelope:t.newEnvelopes[this.envelope].name,inverse:this.inverse,perEnvelopeSpeed:this.perEnvelopeSpeed,perEnvelopeLowerBound:this.perEnvelopeLowerBound,perEnvelopeUpperBound:this.perEnvelopeUpperBound,discrete:this.discrete};return t.instrumentAutomationTargets[this.target].maxCount>1&&(e.index=this.index),t.newEnvelopes[this.envelope].name=="pitch"?(e.pitchEnvelopeStart=this.pitchEnvelopeStart,e.pitchEnvelopeEnd=this.pitchEnvelopeEnd):t.newEnvelopes[this.envelope].name=="random"?(e.steps=this.steps,e.seed=this.seed,e.waveform=this.waveform):t.newEnvelopes[this.envelope].name=="lfo"&&(e.waveform=this.waveform,e.steps=this.steps),e}fromJsonObject(e,i){this.reset();let n=t.instrumentAutomationTargets.dictionary[e.target];n==null&&(n=t.instrumentAutomationTargets.dictionary.noteVolume),this.target=n.index;let a=t.envelopes.dictionary.none,s=!1;i=="slarmoosbox"?e.envelope=="tremolo2"?(a=t.newEnvelopes[8],s=!0):e.envelope=="tremolo"?(a=t.newEnvelopes[8],s=!1):a=t.newEnvelopes.dictionary[e.envelope]:t.envelopes.dictionary[e.envelope].type==9?(a=t.newEnvelopes[8],s=!0):t.newEnvelopes[Math.max(t.envelopes.dictionary[e.envelope].type-1,0)].index>8?a=t.newEnvelopes[t.envelopes.dictionary[e.envelope].type-1]:a=t.newEnvelopes[t.envelopes.dictionary[e.envelope].type],a==null&&(t.envelopes.dictionary[e.envelope].type==9?(a=t.newEnvelopes[8],s=!0):t.newEnvelopes[Math.max(t.envelopes.dictionary[e.envelope].type-1,0)].index>8?a=t.newEnvelopes[t.envelopes.dictionary[e.envelope].type-1]:a=t.newEnvelopes[t.envelopes.dictionary[e.envelope].type]),a==null&&(a=t.envelopes.dictionary.none),this.envelope=a.index,e.index!=null?this.index=A(0,t.instrumentAutomationTargets[this.target].maxCount,e.index|0):this.index=0,e.pitchEnvelopeStart!=null?this.pitchEnvelopeStart=A(0,this.isNoiseEnvelope?t.drumCount:t.maxPitch+1,e.pitchEnvelopeStart):this.pitchEnvelopeStart=0,e.pitchEnvelopeEnd!=null?this.pitchEnvelopeEnd=A(0,this.isNoiseEnvelope?t.drumCount:t.maxPitch+1,e.pitchEnvelopeEnd):this.pitchEnvelopeEnd=this.isNoiseEnvelope?t.drumCount:t.maxPitch,this.inverse=!!e.inverse,e.perEnvelopeSpeed!=null?this.perEnvelopeSpeed=e.perEnvelopeSpeed:this.perEnvelopeSpeed=t.envelopes.dictionary[e.envelope].speed,e.perEnvelopeLowerBound!=null?this.perEnvelopeLowerBound=A(t.perEnvelopeBoundMin,t.perEnvelopeBoundMax+1,e.perEnvelopeLowerBound):this.perEnvelopeLowerBound=0,e.perEnvelopeUpperBound!=null?this.perEnvelopeUpperBound=A(t.perEnvelopeBoundMin,t.perEnvelopeBoundMax+1,e.perEnvelopeUpperBound):this.perEnvelopeUpperBound=1,s&&(this.inverse?(this.perEnvelopeUpperBound=Math.floor(this.perEnvelopeUpperBound/2*10)/10,this.perEnvelopeLowerBound=Math.floor(this.perEnvelopeLowerBound/2*10)/10):(this.perEnvelopeUpperBound=Math.floor((.5+(this.perEnvelopeUpperBound-this.perEnvelopeLowerBound)/2)*10)/10,this.perEnvelopeLowerBound=.5)),e.steps!=null?this.steps=A(1,t.randomEnvelopeStepsMax+1,e.steps):this.steps=2,e.seed!=null?this.seed=A(1,t.randomEnvelopeSeedMax+1,e.seed):this.seed=2,e.waveform!=null?this.waveform=e.waveform:this.waveform=0,e.discrete!=null?this.discrete=e.discrete:this.discrete=!1}};var Zn=class{frequency=4;amplitude=0;waveform=0;pulseWidth=.5;constructor(e){this.reset(e)}reset(e){this.frequency=4,this.amplitude=e<=1?t.operatorAmplitudeMax:0,this.waveform=0,this.pulseWidth=5}copy(e){this.frequency=e.frequency,this.amplitude=e.amplitude,this.waveform=e.waveform,this.pulseWidth=e.pulseWidth}},Yn=class{name="";carrierCount=0;modulatedBy=[[],[],[],[],[],[]];associatedCarrier=[];constructor(){this.fromPreset(1)}set(e,i){this.reset(),this.carrierCount=e;for(let n=0;n<this.modulatedBy.length;n++){this.modulatedBy[n]=i[n],n<e&&(this.associatedCarrier[n]=n+1),this.name+=n+1;for(let a=0;a<i[n].length;a++)this.name+=i[n][a],i[n][a]>e-1&&(this.associatedCarrier[i[n][a]-1]=n+1),this.name+=",";n<e?this.name+="|":this.name+="."}}reset(){this.name="",this.carrierCount=1,this.modulatedBy=[[2,3,4,5,6],[],[],[],[],[]],this.associatedCarrier=[1,1,1,1,1,1]}copy(e){this.name=e.name,this.carrierCount=e.carrierCount,this.modulatedBy=e.modulatedBy,this.associatedCarrier=e.associatedCarrier}fromPreset(e){this.reset();let i=t.algorithms6Op[e];this.name=i.name,this.carrierCount=i.carrierCount;for(var n=0;n<i.modulatedBy.length;n++)this.modulatedBy[n]=Array.from(i.modulatedBy[n]),this.associatedCarrier[n]=i.associatedCarrier[n]}},Xn=class{name="";indices=[[],[],[],[],[],[]];constructor(){this.fromPreset(1)}set(e){this.reset();for(let i=0;i<this.indices.length;i++){this.indices[i]=e[i];for(let n=0;n<e[i].length;n++)this.name+=e[i][n],this.name+=",";this.name+="."}}reset(){this.reset,this.name="",this.indices=[[1],[],[],[],[],[]]}copy(e){this.name=e.name,this.indices=e.indices}fromPreset(e){this.reset();let i=t.feedbacks6Op[e];for(var n=0;n<i.indices.length;n++){this.indices[n]=Array.from(i.indices[n]);for(let a=0;a<i.indices[n].length;a++)this.name+=i.indices[n][a],this.name+=",";this.name+="."}}},Xt=class{spectrum=[];hash=-1;constructor(e){this.reset(e)}reset(e){for(let i=0;i<t.spectrumControlPoints;i++)if(e)this.spectrum[i]=Math.round(t.spectrumMax*(1/Math.sqrt(1+i/3)));else{let n=i==0||i==7||i==11||i==14||i==16||i==18||i==21||i==23||i>=25;this.spectrum[i]=n?Math.max(0,Math.round(t.spectrumMax*(1-i/30))):0}this.markCustomWaveDirty()}markCustomWaveDirty(){let e=Je(t.spectrumMax+2)-1,i=0;for(let n of this.spectrum)i=i*e+n>>>0;this.hash=i}},jn=class{harmonics=[];hash=-1;constructor(){this.reset()}reset(){for(let e=0;e<t.harmonicsControlPoints;e++)this.harmonics[e]=0;this.harmonics[0]=t.harmonicsMax,this.harmonics[3]=t.harmonicsMax,this.harmonics[6]=t.harmonicsMax,this.markCustomWaveDirty()}markCustomWaveDirty(){let e=Je(t.harmonicsMax+2)-1,i=0;for(let n of this.harmonics)i=i*e+n>>>0;this.hash=i}},Ne=class{type=0;preset=0;chipWave=2;isUsingAdvancedLoopControls=!1;chipWaveLoopStart=0;chipWaveLoopEnd=t.rawRawChipWaves[this.chipWave].samples.length-1;chipWaveLoopMode=0;chipWavePlayBackwards=!1;chipWaveStartOffset=0;chipWaveInStereo=!1;chipNoise=1;noteFilter=new Ee;noteFilterType=!1;noteFilterSimpleCut=t.filterSimpleCutRange-1;noteFilterSimplePeak=0;noteSubFilters=[];tmpNoteFilterStart;tmpNoteFilterEnd;envelopes=[];fadeIn=0;fadeOut=t.fadeOutNeutral;envelopeCount=0;transition=t.transitions.dictionary.normal.index;pitchShift=0;detune=0;vibrato=0;interval=0;vibratoDepth=0;vibratoSpeed=10;vibratoDelay=0;vibratoType=0;envelopeSpeed=12;unison=0;unisonVoices=1;unisonSpread=0;unisonOffset=0;unisonExpression=1.4;unisonSign=1;effects=[];effectCount=0;mdeffects=0;chord=1;volume=0;arpeggioSpeed=12;monoChordTone=0;fastTwoNoteArp=!1;legacyTieOver=!1;clicklessTransition=!1;aliases=!1;pulseWidth=t.pulseWidthRange;decimalOffset=0;supersawDynamism=t.supersawDynamismMax;supersawSpread=Math.ceil(t.supersawSpreadMax/2);supersawShape=0;stringSustain=10;stringSustainType=1;algorithm=0;feedbackType=0;algorithm6Op=1;feedbackType6Op=1;customAlgorithm=new Yn;customFeedbackType=new Xn;feedbackAmplitude=0;customChipWave=new Float32Array(64);customChipWaveIntegral=new Float32Array(65);operators=[];spectrumWave;harmonicsWave=new jn;drumsetEnvelopes=[];drumsetSpectrumWaves=[];modChannels=[];modInstruments=[];modulators=[];modFilterTypes=[];modEnvelopeNumbers=[];invalidModulators=[];isNoiseInstrument=!1;constructor(e,i){if(i)for(let c=0;c<t.modCount;c++)this.modChannels.push([-2]),this.modInstruments.push([0]),this.modulators.push(t.modulators.dictionary.none.index);this.spectrumWave=new Xt(e);for(let c=0;c<t.operatorCount+2;c++)this.operators[c]=new Zn(c);for(let c=0;c<t.drumCount;c++)this.drumsetEnvelopes[c]=t.envelopes.dictionary["twang 2"].index,this.drumsetSpectrumWaves[c]=new Xt(!0);for(let c=0;c<64;c++)this.customChipWave[c]=24-Math.floor(c*(48/64));let n=0;for(let c=0;c<this.customChipWave.length;c++)n+=this.customChipWave[c];let a=n/this.customChipWave.length,s=0,r=0;for(let c=0;c<this.customChipWave.length;c++)s+=r,r=this.customChipWave[c]-a,this.customChipWaveIntegral[c]=s;this.customChipWaveIntegral[64]=0,this.isNoiseInstrument=e}setTypeAndReset(e,i,n){n&&(e=10),this.type=e,this.preset=e,this.volume=0,this.effects=[],this.effectCount=0,this.mdeffects=0;for(let a=0;a<t.filterMorphCount;a++)this.noteSubFilters[a]=null;switch(this.noteFilter.reset(),this.noteFilterType=!1,this.noteFilterSimpleCut=t.filterSimpleCutRange-1,this.noteFilterSimplePeak=0,this.pitchShift=t.pitchShiftCenter,this.detune=t.detuneCenter,this.vibrato=0,this.unison=0,this.stringSustain=10,this.stringSustainType=t.enableAcousticSustain?1:0,this.clicklessTransition=!1,this.arpeggioSpeed=12,this.monoChordTone=1,this.envelopeSpeed=12,this.legacyTieOver=!1,this.aliases=!1,this.fadeIn=0,this.fadeOut=t.fadeOutNeutral,this.transition=t.transitions.dictionary.normal.index,this.envelopeCount=0,this.isNoiseInstrument=i,e){case 0:this.chipWave=2,this.chord=t.chords.dictionary.arpeggio.index,this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=t.rawRawChipWaves[this.chipWave].samples.length-1,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveInStereo=!1,this.chipWaveStartOffset=0;break;case 9:this.chipWave=2,this.chipWaveInStereo=!1,this.chord=t.chords.dictionary.arpeggio.index;for(let d=0;d<64;d++)this.customChipWave[d]=24-Math.floor(d*(48/64));let a=0;for(let d=0;d<this.customChipWave.length;d++)a+=this.customChipWave[d];let s=a/this.customChipWave.length,r=0,c=0;for(let d=0;d<this.customChipWave.length;d++)r+=c,c=this.customChipWave[d]-s,this.customChipWaveIntegral[d]=r;this.customChipWaveIntegral[64]=0;break;case 1:this.chord=t.chords.dictionary["custom interval"].index,this.algorithm=0,this.feedbackType=0,this.feedbackAmplitude=0;for(let d=0;d<this.operators.length;d++)this.operators[d].reset(d);break;case 11:this.transition=1,this.vibrato=0,this.chord=3,this.algorithm=0,this.feedbackType=0,this.algorithm6Op=1,this.feedbackType6Op=1,this.customAlgorithm.fromPreset(1),this.feedbackAmplitude=0;for(let d=0;d<this.operators.length;d++)this.operators[d].reset(d);break;case 2:this.chipNoise=1,this.chord=t.chords.dictionary.arpeggio.index;break;case 3:this.chord=t.chords.dictionary.simultaneous.index,this.spectrumWave.reset(i);break;case 4:this.chord=t.chords.dictionary.simultaneous.index;for(let d=0;d<t.drumCount;d++)this.drumsetEnvelopes[d]=t.envelopes.dictionary["twang 2"].index,this.drumsetSpectrumWaves[d]==null&&(this.drumsetSpectrumWaves[d]=new Xt(!0)),this.drumsetSpectrumWaves[d].reset(i);break;case 5:this.chord=t.chords.dictionary.simultaneous.index,this.harmonicsWave.reset();break;case 6:this.chord=t.chords.dictionary.arpeggio.index,this.pulseWidth=t.pulseWidthRange,this.decimalOffset=0;break;case 7:this.chord=t.chords.dictionary.strum.index,this.harmonicsWave.reset();break;case 10:this.transition=0,this.vibrato=0,this.interval=0,this.chord=0,this.modChannels=[],this.modInstruments=[],this.modulators=[];for(let d=0;d<t.modCount;d++)this.modChannels.push([-2]),this.modInstruments.push([0]),this.modulators.push(t.modulators.dictionary.none.index),this.invalidModulators[d]=!1,this.modFilterTypes[d]=0,this.modEnvelopeNumbers[d]=0;break;case 8:this.chord=t.chords.dictionary.arpeggio.index,this.supersawDynamism=t.supersawDynamismMax,this.supersawSpread=Math.ceil(t.supersawSpreadMax/2),this.supersawShape=0,this.pulseWidth=t.pulseWidthRange-1,this.decimalOffset=0;break;default:throw new Error("Unrecognized instrument type: "+e)}this.chord!=t.chords.dictionary.simultaneous.index&&(this.mdeffects=this.mdeffects|16)}convertLegacySettings(e,i){let n=e.filterCutoff,a=e.filterResonance,s=e.filterEnvelope,r=e.pulseEnvelope,c=e.operatorEnvelopes,d=e.feedbackEnvelope;n==null&&(n=this.type==0?6:10),a==null&&(a=0),s==null&&(s=t.envelopes.dictionary.none),r==null&&(r=t.envelopes.dictionary[this.type==6?"twang 2":"none"]),c==null&&(c=[t.envelopes.dictionary[this.type==1?"note size":"none"],t.envelopes.dictionary.none,t.envelopes.dictionary.none,t.envelopes.dictionary.none]),d==null&&(d=t.envelopes.dictionary.none),n==11-1&&s.type==4&&(s=t.envelopes.dictionary.none);let v=t.algorithms[this.algorithm].carrierCount,h=!0,g=!0,f=s.type==1||r.type==1;if(this.type==1||this.type==11){f=f||d.type==1;for(let m=0;m<c.length;m++)m<v?c[m].type!=1?g=!1:h=!1:f=f||c[m].type==1}this.envelopeCount=0,(this.type==1||this.type==11)&&(g&&f?this.addEnvelope(t.instrumentAutomationTargets.dictionary.noteVolume.index,0,t.envelopes.dictionary["note size"].index,!1):h&&!f&&this.addEnvelope(t.instrumentAutomationTargets.dictionary.none.index,0,t.envelopes.dictionary["note size"].index,!1)),r.type!=0&&this.addEnvelope(t.instrumentAutomationTargets.dictionary.pulseWidth.index,0,r.index,!1);for(let m=0;m<c.length;m++)m<v&&g||c[m].type!=0&&this.addEnvelope(t.instrumentAutomationTargets.dictionary.operatorAmplitude.index,m,c[m].index,!1);d.type!=0&&this.addEnvelope(t.instrumentAutomationTargets.dictionary.feedbackAmplitude.index,0,d.index,!1)}toJsonObject(){let e={type:t.instrumentTypeNames[this.type],volume:this.volume,noteFilter:this.noteFilter.toJsonObject(),noteFilterType:this.noteFilterType,noteSimpleCut:this.noteFilterSimpleCut,noteSimplePeak:this.noteFilterSimplePeak,envelopeSpeed:this.envelopeSpeed};this.preset!=this.type&&(e.preset=this.preset);for(let n=0;n<t.filterMorphCount;n++)this.noteSubFilters[n]!=null&&(e["noteSubFilters"+n]=this.noteSubFilters[n].toJsonObject());if(e.mdeffects=this.mdeffects,Gt(this.mdeffects)&&(e.transition=t.transitions[this.transition].name,e.clicklessTransition=this.clicklessTransition),Ut(this.mdeffects)&&(e.chord=this.getChord().name,e.fastTwoNoteArp=this.fastTwoNoteArp,e.arpeggioSpeed=this.arpeggioSpeed,e.monoChordTone=this.monoChordTone),Dt(this.mdeffects)&&(e.pitchShiftSemitones=this.pitchShift),Tt(this.mdeffects)&&(e.detuneCents=Zt(this.detune)),At(this.mdeffects)&&(this.vibrato==-1&&(this.vibrato=5),this.vibrato!=5?e.vibrato=t.vibratos[this.vibrato].name:e.vibrato="custom",e.vibratoDepth=this.vibratoDepth,e.vibratoDelay=this.vibratoDelay,e.vibratoSpeed=this.vibratoSpeed,e.vibratoType=this.vibratoType),this.type!=4&&(e.fadeInSeconds=Math.round(1e4*Qn(this.fadeIn))/1e4,e.fadeOutTicks=Jn(this.fadeOut)),this.type==5||this.type==7){e.harmonics=[];for(let n=0;n<t.harmonicsControlPoints;n++)e.harmonics[n]=Math.round(100*this.harmonicsWave.harmonics[n]/t.harmonicsMax)}if(this.type==2)e.wave=t.chipNoises[this.chipNoise].name,e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(this.type==3){e.spectrum=[];for(let n=0;n<t.spectrumControlPoints;n++)e.spectrum[n]=Math.round(100*this.spectrumWave.spectrum[n]/t.spectrumMax);e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign)}else if(this.type==4){e.drums=[],e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);for(let n=0;n<t.drumCount;n++){let a=[];for(let s=0;s<t.spectrumControlPoints;s++)a[s]=Math.round(100*this.drumsetSpectrumWaves[n].spectrum[s]/t.spectrumMax);e.drums[n]={filterEnvelope:this.getDrumsetEnvelope(n).name,spectrum:a}}}else if(this.type==0)e.wave=t.chipWaves[this.chipWave].name,e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign),e.isUsingAdvancedLoopControls=this.isUsingAdvancedLoopControls,e.chipWaveLoopStart=this.chipWaveLoopStart,e.chipWaveLoopEnd=this.chipWaveLoopEnd,e.chipWaveLoopMode=this.chipWaveLoopMode,e.chipWavePlayBackwards=this.chipWavePlayBackwards,e.chipWaveStartOffset=this.chipWaveStartOffset,e.chipWaveInStereo=this.chipWaveInStereo;else if(this.type==6)e.pulseWidth=this.pulseWidth,e.decimalOffset=this.decimalOffset,e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(this.type==8)e.pulseWidth=this.pulseWidth,e.decimalOffset=this.decimalOffset,e.dynamism=Math.round(100*this.supersawDynamism/t.supersawDynamismMax),e.spread=Math.round(100*this.supersawSpread/t.supersawSpreadMax),e.shape=Math.round(100*this.supersawShape/t.supersawShapeMax);else if(this.type==7)e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign),e.stringSustain=Math.round(100*this.stringSustain/(t.stringSustainRange-1)),t.enableAcousticSustain&&(e.stringSustainType=t.sustainTypeNames[this.stringSustainType]);else if(this.type==5)e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(this.type==1||this.type==11){let n=[];for(let a of this.operators)n.push({frequency:t.operatorFrequencies[a.frequency].name,amplitude:a.amplitude,waveform:t.operatorWaves[a.waveform].name,pulseWidth:a.pulseWidth});if(this.type==1)e.algorithm=t.algorithms[this.algorithm].name,e.feedbackType=t.feedbacks[this.feedbackType].name,e.feedbackAmplitude=this.feedbackAmplitude,e.operators=n;else{if(e.algorithm=t.algorithms6Op[this.algorithm6Op].name,e.feedbackType=t.feedbacks6Op[this.feedbackType6Op].name,e.feedbackAmplitude=this.feedbackAmplitude,this.algorithm6Op==0){let a={};a.mods=this.customAlgorithm.modulatedBy,a.carrierCount=this.customAlgorithm.carrierCount,e.customAlgorithm=a}if(this.feedbackType6Op==0){let a={};a.mods=this.customFeedbackType.indices,e.customFeedback=a}e.operators=n}}else if(this.type==9){e.wave=t.chipWaves[this.chipWave].name,e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign),e.customChipWave=new Float64Array(64),e.customChipWaveIntegral=new Float64Array(65);for(let n=0;n<this.customChipWave.length;n++)e.customChipWave[n]=this.customChipWave[n]}else if(this.type==10){e.modChannels=[],e.modInstruments=[],e.modSettings=[],e.modFilterTypes=[],e.modEnvelopeNumbers=[];for(let n=0;n<t.modCount;n++)e.modChannels[n]=this.modChannels[n],e.modInstruments[n]=this.modInstruments[n],e.modSettings[n]=this.modulators[n],e.modFilterTypes[n]=this.modFilterTypes[n],e.modEnvelopeNumbers[n]=this.modEnvelopeNumbers[n]}else throw new Error("Unrecognized instrument type");let i=[];for(let n=0;n<this.envelopeCount;n++)i.push(this.envelopes[n].toJsonObject());return e.envelopes=i,e}fromJsonObject(e,i,n,a,s,r=0,c=t.jsonFormat){e==null&&(e={});let d=c.toLowerCase(),y=t.instrumentTypeNames.indexOf(e.type);d=="synthbox"&&e.type=="FM"&&(y=t.instrumentTypeNames.indexOf("FM6op")),y==-1&&(y=n?10:i?2:0),this.setTypeAndReset(y,i,n),e.preset!=null&&(this.preset=e.preset>>>0),e.volume!=null?d=="jummbox"||d=="midbox"||d=="synthbox"||d=="goldbox"||d=="paandorasbox"||d=="ultrabox"||d=="slarmoosbox"||d=="Theepbox"?this.volume=A(-t.volumeRange/2,t.volumeRange/2+1,e.volume|0):this.volume=Math.round(-A(0,8,Math.round(5-(e.volume|0)/20))*25/7):this.volume=0,this.envelopeSpeed=e.envelopeSpeed!=null?A(0,t.modulators.dictionary["envelope speed"].maxRawVol+1,e.envelopeSpeed|0):12,Array.isArray(e.effects),e.mdeffects!=null?this.mdeffects=e.mdeffects:this.mdeffects=0,this.transition=t.transitions.dictionary.normal.index;let l=e.transition||e.envelope;if(l!=null){let m=t.transitions.dictionary[l];if(e.fadeInSeconds==null||e.fadeOutTicks==null){let p={binary:{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},seamless:{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},sudden:{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},hard:{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},smooth:{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},soft:{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},slide:{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3},"cross fade":{transition:"normal",fadeInSeconds:.04,fadeOutTicks:6},"hard fade":{transition:"normal",fadeInSeconds:0,fadeOutTicks:48},"medium fade":{transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72},"soft fade":{transition:"normal",fadeInSeconds:.06,fadeOutTicks:96}}[l];p!=null&&(m=t.transitions.dictionary[p.transition],this.fadeIn=mt(p.fadeInSeconds),this.fadeOut=yt(p.fadeOutTicks))}m!=null&&(this.transition=m.index),this.transition!=t.transitions.dictionary.normal.index&&(this.mdeffects=this.mdeffects|8)}e.fadeInSeconds!=null&&(this.fadeIn=mt(+e.fadeInSeconds)),e.fadeOutTicks!=null&&(this.fadeOut=yt(+e.fadeOutTicks));{let m=e.chord,p={harmony:"simultaneous"},S=t.chords.dictionary[p[m]]||t.chords.dictionary[m];S!=null?this.chord=S.index:this.type==2?this.chord=t.chords.dictionary.arpeggio.index:this.type==7?this.chord=t.chords.dictionary.strum.index:this.type==0?this.chord=t.chords.dictionary.arpeggio.index:this.type==1||this.type==11?this.chord=t.chords.dictionary["custom interval"].index:this.chord=t.chords.dictionary.simultaneous.index}this.unison=t.unisons.dictionary.none.index;let v=e.unison||e.interval||e.chorus;if(v!=null){let m={union:"none",fifths:"fifth",octaves:"octave",error:"voiced"},p=t.unisons.dictionary[m[v]]||t.unisons.dictionary[v];p!=null&&(this.unison=p.index),v=="custom"&&(this.unison=t.unisons.length)}if(this.unisonVoices=e.unisonVoices==null?t.unisons[this.unison].voices:e.unisonVoices,this.unisonSpread=e.unisonSpread==null?t.unisons[this.unison].spread:e.unisonSpread,this.unisonOffset=e.unisonOffset==null?t.unisons[this.unison].offset:e.unisonOffset,this.unisonExpression=e.unisonExpression==null?t.unisons[this.unison].expression:e.unisonExpression,this.unisonSign=e.unisonSign==null?t.unisons[this.unison].sign:e.unisonSign,e.chorus=="custom harmony"&&(this.unison=t.unisons.dictionary.hum.index,this.chord=t.chords.dictionary["custom interval"].index),this.chord!=t.chords.dictionary.simultaneous.index&&!Array.isArray(e.mdeffects)&&(this.mdeffects=this.mdeffects|16),e.pitchShiftSemitones!=null&&(this.pitchShift=A(0,t.pitchShiftRange,Math.round(+e.pitchShiftSemitones))),e.octoff!=null){let m=e.octoff;this.mdeffects=this.mdeffects|1,m=="+1 (octave)"||m=="+2 (2 octaves)"?this.pitchShift=24:m=="+1/2 (fifth)"||m=="+1 1/2 (octave and fifth)"?this.pitchShift=18:m=="-1 (octave)"||m=="-2 (2 octaves"?this.pitchShift=0:m=="-1/2 (fifth)"||m=="-1 1/2 (octave and fifth)"?this.pitchShift=6:this.pitchShift=12}e.detuneCents!=null&&(this.detune=A(t.detuneMin,t.detuneMax+1,Math.round(Ri(+e.detuneCents)))),this.vibrato=t.vibratos.dictionary.none.index;let h=e.vibrato||e.effect;if(h!=null){let m={"vibrato light":"light","vibrato delayed":"delayed","vibrato heavy":"heavy"},p=t.vibratos.dictionary[m[v]]||t.vibratos.dictionary[h];p!=null?this.vibrato=p.index:h=="custom"&&(this.vibrato=t.vibratos.length),this.vibrato==t.vibratos.length?(this.vibratoDepth=e.vibratoDepth,this.vibratoSpeed=e.vibratoSpeed,this.vibratoDelay=e.vibratoDelay,this.vibratoType=e.vibratoType):(this.vibratoDepth=t.vibratos[this.vibrato].amplitude,this.vibratoDelay=t.vibratos[this.vibrato].delayTicks/2,this.vibratoSpeed=10,this.vibratoType=t.vibratos[this.vibrato].type),p!=t.vibratos.dictionary.none&&(this.mdeffects=this.mdeffects|4)}if(e.detune!=null?this.detune=A(t.detuneMin,t.detuneMax+1,e.detune|0):e.detuneCents==null&&(this.detune=t.detuneCenter),e.pulseWidth!=null?this.pulseWidth=A(1,t.pulseWidthRange+1,Math.round(e.pulseWidth)):this.pulseWidth=t.pulseWidthRange,e.decimalOffset!=null?this.decimalOffset=A(0,100,Math.round(e.decimalOffset)):this.decimalOffset=0,e.dynamism!=null?this.supersawDynamism=A(0,t.supersawDynamismMax+1,Math.round(t.supersawDynamismMax*(e.dynamism|0)/100)):this.supersawDynamism=t.supersawDynamismMax,e.spread!=null?this.supersawSpread=A(0,t.supersawSpreadMax+1,Math.round(t.supersawSpreadMax*(e.spread|0)/100)):this.supersawSpread=Math.ceil(t.supersawSpreadMax/2),e.shape!=null?this.supersawShape=A(0,t.supersawShapeMax+1,Math.round(t.supersawShapeMax*(e.shape|0)/100)):this.supersawShape=0,e.harmonics!=null){for(let m=0;m<t.harmonicsControlPoints;m++)this.harmonicsWave.harmonics[m]=Math.max(0,Math.min(t.harmonicsMax,Math.round(t.harmonicsMax*+e.harmonics[m]/100)));this.harmonicsWave.markCustomWaveDirty()}else this.harmonicsWave.reset();if(e.spectrum!=null)for(let m=0;m<t.spectrumControlPoints;m++)this.spectrumWave.spectrum[m]=Math.max(0,Math.min(t.spectrumMax,Math.round(t.spectrumMax*+e.spectrum[m]/100))),this.spectrumWave.markCustomWaveDirty();else this.spectrumWave.reset(i);e.stringSustain!=null?this.stringSustain=A(0,t.stringSustainRange,Math.round((t.stringSustainRange-1)*(e.stringSustain|0)/100)):this.stringSustain=10,this.stringSustainType=t.enableAcousticSustain?t.sustainTypeNames.indexOf(e.stringSustainType):0,this.stringSustainType==-1&&(this.stringSustainType=0),this.type==2&&(this.chipNoise=t.chipNoises.findIndex(m=>m.name==e.wave),e.wave=="pink noise"&&(this.chipNoise=t.chipNoises.findIndex(m=>m.name=="pink")),e.wave=="brownian noise"&&(this.chipNoise=t.chipNoises.findIndex(m=>m.name=="brownian")),this.chipNoise==-1&&(this.chipNoise=1));let g={custom:"note size",steady:"none","pluck 1":"twang 1","pluck 2":"twang 2","pluck 3":"twang 3"},f=m=>g[m]!=null?t.envelopes.dictionary[g[m]]:t.envelopes.dictionary[m];if(this.type==4&&e.drums!=null)for(let m=0;m<t.drumCount;m++){let p=e.drums[m];if(p!=null){if(this.drumsetEnvelopes[m]=t.envelopes.dictionary["twang 2"].index,p.filterEnvelope!=null){let S=f(p.filterEnvelope);S!=null&&(this.drumsetEnvelopes[m]=S.index)}if(p.spectrum!=null)for(let S=0;S<t.spectrumControlPoints;S++)this.drumsetSpectrumWaves[m].spectrum[S]=Math.max(0,Math.min(t.spectrumMax,Math.round(t.spectrumMax*+p.spectrum[S]/100)));this.drumsetSpectrumWaves[m].markCustomWaveDirty()}}if(this.type==0){let m={triangle:1,square:2,"pulse wide":3,"pulse narrow":4,sawtooth:5,"double saw":6,"double pulse":7,spiky:8,plateau:0},p={"10% pulse":22,"sunsoft bass":23,"loud pulse":24,sax:25,guitar:26,"atari bass":28,"atari pulse":29,"1% pulse":30,"curved sawtooth":31,viola:32,brass:33,"acoustic bass":34,lyre:35,"ramp pulse":36,piccolo:37,squaretooth:38,flatline:39,"pnryshk a (u5)":40,"pnryshk b (riff)":41},S={"shrill lute":42,"shrill bass":44,"nes pulse":45,"saw bass":46,euphonium:47,"shrill pulse":48,"r-sawtooth":49,recorder:50,"narrow saw":51,"deep square":52,"ring pulse":53,"double sine":54,contrabass:55,"double bass":56},x={"semi-square":63,"deep square":64,squaretal:40,"saw wide":65,"saw narrow ":66,"deep sawtooth":67,sawtal:68,pulse:69,"triple pulse":70,"high pulse":71,"deep pulse":72},w={test1:56,"pokey 4bit lfsr":57,"pokey 5step bass":58,"isolated spiky":59,"unnamed 1":60,"unnamed 2":61,"guitar string":75,intense:76,"buzz wave":77,"pokey square":57,"pokey bass":58,"banana wave":83,"test 1":84,"test 2":84,"real snare":85,"earthbound o. guitar":86},b={kick:87,snare:88,piano1:89,WOW:90,overdrive:91,trumpet:92,saxophone:93,orchestrahit:94,"detached violin":95,synth:96,sonic3snare:97,"come on":98,choir:99,overdriveguitar:100,flute:101,"legato violin":102,"tremolo violin":103,"amen break":104,"pizzicato violin":105,"tim allen grunt":106,tuba:107,loopingcymbal:108,standardkick:109,standardsnare:110,closedhihat:111,foothihat:112,openhihat:113,crashcymbal:114,pianoC4:115,"liver pad":116,marimba:117,susdotwav:118,wackyboxtts:119};this.chipWave=-1;let P=e.wave;for(let B of[m,p,S,x,w,b])if(this.chipWave==-1&&B[P]!=null&&t.chipWaves[B[P]]!=null){this.chipWave=B[P];break}if(this.chipWave==-1){let B=t.chipWaves.findIndex(L=>L.name==P);B!=-1&&(this.chipWave=B)}this.chipWave==-1&&(this.chipWave=1)}if(this.type==1||this.type==11){if(this.type==1)this.algorithm=t.algorithms.findIndex(m=>m.name==e.algorithm),this.algorithm==-1&&(this.algorithm=0),this.feedbackType=t.feedbacks.findIndex(m=>m.name==e.feedbackType),this.feedbackType==-1&&(this.feedbackType=0);else{if(this.algorithm6Op=t.algorithms6Op.findIndex(m=>m.name==e.algorithm),this.algorithm6Op==-1&&(this.algorithm6Op=1),this.algorithm6Op==0?this.customAlgorithm.set(e.customAlgorithm.carrierCount,e.customAlgorithm.mods):this.customAlgorithm.fromPreset(this.algorithm6Op),this.feedbackType6Op=t.feedbacks6Op.findIndex(m=>m.name==e.feedbackType),this.feedbackType6Op==-1){let m=fe([{name:"2\u27F2 3\u27F2",indices:[[],[2],[3],[],[],[]]},{name:"3\u27F2 4\u27F2",indices:[[],[],[3],[4],[],[]]},{name:"4\u27F2 5\u27F2",indices:[[],[],[],[4],[5],[]]},{name:"5\u27F2 6\u27F2",indices:[[],[],[],[],[5],[6]]},{name:"1\u27F2 6\u27F2",indices:[[1],[],[],[],[],[6]]},{name:"1\u27F2 3\u27F2",indices:[[1],[],[3],[],[],[]]},{name:"1\u27F2 4\u27F2",indices:[[1],[],[],[4],[],[]]},{name:"1\u27F2 5\u27F2",indices:[[1],[],[],[],[5],[]]},{name:"4\u27F2 6\u27F2",indices:[[],[],[],[4],[],[6]]},{name:"2\u27F2 6\u27F2",indices:[[],[2],[],[],[],[6]]},{name:"3\u27F2 6\u27F2",indices:[[],[],[3],[],[],[6]]},{name:"4\u27F2 5\u27F2 6\u27F2",indices:[[],[],[],[4],[5],[6]]},{name:"1\u27F2 3\u27F2 6\u27F2",indices:[[1],[],[3],[],[],[6]]},{name:"2\u21925",indices:[[],[],[],[],[2],[]]},{name:"2\u21926",indices:[[],[],[],[],[],[2]]},{name:"3\u21925",indices:[[],[],[],[],[3],[]]},{name:"3\u21926",indices:[[],[],[],[],[],[3]]},{name:"4\u21926",indices:[[],[],[],[],[],[4]]},{name:"5\u21926",indices:[[],[],[],[],[],[5]]},{name:"1\u21923\u21924",indices:[[],[],[1],[],[3],[]]},{name:"2\u21925\u21926",indices:[[],[],[],[],[2],[5]]},{name:"2\u21924\u21926",indices:[[],[],[],[2],[],[4]]},{name:"4\u21925\u21926",indices:[[],[],[],[],[4],[5]]},{name:"3\u21924\u21925\u21926",indices:[[],[],[],[3],[4],[5]]},{name:"2\u21923\u21924\u21925\u21926",indices:[[],[1],[2],[3],[4],[5]]},{name:"1\u21922\u21923\u21924\u21925\u21926",indices:[[],[1],[2],[3],[4],[5]]}]),p=m[m.findIndex(S=>S.name==e.feedbackType)].indices;p!=null?(this.feedbackType6Op=0,this.customFeedbackType.set(p)):this.feedbackType6Op=1}this.feedbackType6Op==0&&e.customFeedback!=null?this.customFeedbackType.set(e.customFeedback.mods):this.customFeedbackType.fromPreset(this.feedbackType6Op)}e.feedbackAmplitude!=null?this.feedbackAmplitude=A(0,t.operatorAmplitudeMax+1,e.feedbackAmplitude|0):this.feedbackAmplitude=0;for(let m=0;m<t.operatorCount+(this.type==11?2:0);m++){let p=this.operators[m],S;if(e.operators!=null&&(S=e.operators[m]),S==null&&(S={}),p.frequency=t.operatorFrequencies.findIndex(x=>x.name==S.frequency),p.frequency==-1&&(p.frequency=0),S.amplitude!=null?p.amplitude=A(0,t.operatorAmplitudeMax+1,S.amplitude|0):p.amplitude=0,S.waveform!=null){if(d=="goldbox"&&m>3){p.waveform=0;continue}p.waveform=t.operatorWaves.findIndex(x=>x.name==S.waveform),p.waveform==-1&&(S.waveform=="square"?(p.waveform=t.operatorWaves.dictionary["pulse width"].index,p.pulseWidth=5):S.waveform=="rounded"?p.waveform=t.operatorWaves.dictionary["quasi-sine"].index:p.waveform=0)}else p.waveform=0;S.pulseWidth!=null?p.pulseWidth=S.pulseWidth|0:p.pulseWidth=5}}else if(this.type==9){if(e.customChipWave){for(let w=0;w<64;w++)this.customChipWave[w]=e.customChipWave[w];let m=0;for(let w=0;w<this.customChipWave.length;w++)m+=this.customChipWave[w];let p=m/this.customChipWave.length,S=0,x=0;for(let w=0;w<this.customChipWave.length;w++)S+=x,x=this.customChipWave[w]-p,this.customChipWaveIntegral[w]=S;this.customChipWaveIntegral[64]=0}}else if(this.type==10&&e.modChannels!=null)for(let m=0;m<t.modCount;m++)this.modChannels[m]=e.modChannels[m],this.modInstruments[m]=e.modInstruments[m],this.modulators[m]=e.modSettings[m],e.modFilterTypes!=null&&(this.modFilterTypes[m]=e.modFilterTypes[m]),e.modEnvelopeNumbers!=null&&(this.modEnvelopeNumbers[m]=e.modEnvelopeNumbers[m]);if(this.type!=10){if(this.chord==t.chords.dictionary.arpeggio.index&&e.arpeggioSpeed!=null?this.arpeggioSpeed=e.arpeggioSpeed:this.arpeggioSpeed=a?9:12,this.chord==t.chords.dictionary.monophonic.index&&e.monoChordTone!=null&&(this.monoChordTone=e.monoChordTone),e.fastTwoNoteArp!=null?this.fastTwoNoteArp=e.fastTwoNoteArp:this.fastTwoNoteArp=s,e.clicklessTransition!=null?this.clicklessTransition=e.clicklessTransition:this.clicklessTransition=!1,e.aliases!=null)this.aliases=e.aliases;else if(d=="modbox"){let m=this.addEffect(3);this.aliases=!0,m.distortion=0}else this.aliases=!1;e.noteFilterType!=null&&(this.noteFilterType=e.noteFilterType),e.noteSimpleCut!=null&&(this.noteFilterSimpleCut=e.noteSimpleCut),e.noteSimplePeak!=null&&(this.noteFilterSimplePeak=e.noteSimplePeak),e.noteFilter!=null?this.noteFilter.fromJsonObject(e.noteFilter):this.noteFilter.reset();for(let m=0;m<t.filterMorphCount;m++)Array.isArray(e["noteSubFilters"+m])&&(this.noteSubFilters[m]=new Ee,this.noteSubFilters[m].fromJsonObject(e["noteSubFilters"+m]));if(!Array.isArray(e.eqFilter)){let m={};if(e.filterCutoffHz!=null?m.filterCutoff=A(0,11,Math.round(10+2*Math.log((e.filterCutoffHz|0)/8e3)/Math.LN2)):m.filterCutoff=this.type==0?6:10,e.filterResonance!=null?m.filterResonance=A(0,8,Math.round(7*(e.filterResonance|0)/100)):m.filterResonance=0,m.filterEnvelope=f(e.filterEnvelope),m.pulseEnvelope=f(e.pulseEnvelope),m.feedbackEnvelope=f(e.feedbackEnvelope),Array.isArray(e.operators)){m.operatorEnvelopes=[];for(let w=0;w<t.operatorCount+(this.type==11?2:0);w++){let b;e.operators[w]!=null&&(b=f(e.operators[w].envelope)),m.operatorEnvelopes[w]=b??t.envelopes.dictionary.none}}if(e.filter!=null){let w=[10,6,3,0,8,5,2],b=["none","none","none","none","decay 1","decay 2","decay 3"],P=["none","bright","medium","soft","decay bright","decay medium","decay soft"],B={"sustain sharp":1,"sustain medium":2,"sustain soft":3,"decay sharp":4},L=B[e.filter]!=null?B[e.filter]:P.indexOf(e.filter);L==-1&&(L=0),m.filterCutoff=w[L],m.filterEnvelope=f(b[L]),m.filterResonance=0}this.convertLegacySettings(m,!0)}if(Array.isArray(e.envelopes)){let m=e.envelopes;for(let p=0;p<m.length&&!(this.envelopeCount>=t.maxEnvelopeCount);p++){let S=new Yt(this.isNoiseInstrument);S.fromJsonObject(m[p],d);let x;e.pitchEnvelopeStart!=null&&e.pitchEnvelopeStart!=null?x=e.pitchEnvelopeStart:e["pitchEnvelopeStart"+p]!=null&&e["pitchEnvelopeStart"+p]!=null?x=e["pitchEnvelopeStart"+p]:x=S.pitchEnvelopeStart;let w;e.pitchEnvelopeEnd!=null&&e.pitchEnvelopeEnd!=null?w=e.pitchEnvelopeEnd:e["pitchEnvelopeEnd"+p]!=null&&e["pitchEnvelopeEnd"+p]!=null?w=e["pitchEnvelopeEnd"+p]:w=S.pitchEnvelopeEnd;let b;e["envelopeInverse"+p]!=null&&e["envelopeInverse"+p]!=null?b=e["envelopeInverse"+p]:e.pitchEnvelopeInverse!=null&&e.pitchEnvelopeInverse!=null&&t.envelopes[S.envelope].name=="pitch"?b=e.pitchEnvelopeInverse:b=S.inverse;let P;e.discreteEnvelope!=null?P=e.discreteEnvelope:P=S.discrete,this.addEnvelope(S.target,S.index,S.envelope,!0,x,w,b,S.perEnvelopeSpeed,S.perEnvelopeLowerBound,S.perEnvelopeUpperBound,S.steps,S.seed,S.waveform,P)}}}y===0&&(e.isUsingAdvancedLoopControls!=null?(this.isUsingAdvancedLoopControls=e.isUsingAdvancedLoopControls,this.chipWaveLoopStart=e.chipWaveLoopStart,this.chipWaveLoopEnd=e.chipWaveLoopEnd,this.chipWaveLoopMode=e.chipWaveLoopMode,this.chipWavePlayBackwards=e.chipWavePlayBackwards,this.chipWaveStartOffset=e.chipWaveStartOffset):(this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=t.rawRawChipWaves[this.chipWave].samples.length-1,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0),this.chipWaveInStereo=e.chipWaveInStereo)}getLargestControlPointCount(e){let i;if(e){i=this.noteFilter.controlPointCount;for(let n=0;n<t.filterMorphCount;n++)this.noteSubFilters[n]!=null&&this.noteSubFilters[n].controlPointCount>i&&(i=this.noteSubFilters[n].controlPointCount)}else{i=this.effects[0].eqFilter.controlPointCount;for(let n=0;n<this.effectCount;n++)if(this.effects[n]!=null&&this.effects[n].type==5)for(let a=0;a<t.filterMorphCount;a++)this.effects[n].eqSubFilters[a]!=null&&this.effects[n].eqSubFilters[a].controlPointCount>i&&(i=this.effects[n].eqSubFilters[a].controlPointCount)}return i}static frequencyFromPitch(e){return 440*Math.pow(2,(e-69)/12)}addEffect(e){let i=new un(e);return this.effects.push(i),this.effectCount++,i}removeEffect(e){for(let i=0;i<this.effectCount;i++)if(this.effects[i]!=null&&this.effects[i].type==e){this.effects.splice(i,1);break}this.effectCount--}effectsIncludeType(e){for(let i=0;i<this.effects.length;i++)if(this.effects[i]!=null&&this.effects[i].type==e)return!0;return!1}addEnvelope(e,i,n,a,s=0,r=-1,c=!1,d=-1,y=0,l=1,v=2,h=2,g=0,f=!1){r=r!=-1?r:this.isNoiseInstrument?t.drumCount-1:t.maxPitch,d=d!=-1?d:a?1:t.envelopes[n].speed;let m=!1;if(this.supportsEnvelopeTarget(e,i)||(m=!0),this.envelopeCount>=t.maxEnvelopeCount)throw new Error;for(;this.envelopes.length<=this.envelopeCount;)this.envelopes[this.envelopes.length]=new Yt(this.isNoiseInstrument);let p=this.envelopes[this.envelopeCount];p.target=m?t.instrumentAutomationTargets.dictionary.none.index:e,p.index=m?0:i,a?p.envelope=n:p.envelope=A(0,t.newEnvelopes.length,t.envelopes[n].type),p.pitchEnvelopeStart=s,p.pitchEnvelopeEnd=r,p.inverse=c,p.perEnvelopeSpeed=d,p.perEnvelopeLowerBound=y,p.perEnvelopeUpperBound=l,p.steps=v,p.seed=h,p.waveform=g,p.discrete=f,this.envelopeCount++}supportsEnvelopeTarget(e,i){let n=t.instrumentAutomationTargets[e];if(n.computeIndex==null&&n.name!="none"||i>=n.maxCount||n.compatibleInstruments!=null&&n.compatibleInstruments.indexOf(this.type)==-1||n.effect!=null&&!this.effectsIncludeType(n.effect)||n.mdeffect!=null&&(this.mdeffects&1<<n.mdeffect)==0)return!1;if(n.isFilter){let a=this.noteFilter.controlPointCount;if(this.noteFilterType&&(a=1),i>=a)return!1}return!((n.name=="operatorFrequency"||n.name=="operatorAmplitude")&&i>=4+(this.type==11?2:0))}clearInvalidEnvelopeTargets(){for(let e=0;e<this.envelopeCount;e++){let i=this.envelopes[e].target,n=this.envelopes[e].index;this.supportsEnvelopeTarget(i,n)||(this.envelopes[e].target=t.instrumentAutomationTargets.dictionary.none.index,this.envelopes[e].index=0)}}getTransition(){return Gt(this.mdeffects)?t.transitions[this.transition]:this.type==10?t.transitions.dictionary.interrupt:t.transitions.dictionary.normal}getFadeInSeconds(){return this.type==4?0:Qn(this.fadeIn)}getFadeOutTicks(){return this.type==4?t.drumsetFadeOutTicks:Jn(this.fadeOut)}getChord(){return Ut(this.mdeffects)?t.chords[this.chord]:t.chords.dictionary.simultaneous}getDrumsetEnvelope(e){if(this.type!=4)throw new Error("Can't getDrumsetEnvelope() for non-drumset.");return t.envelopes[this.drumsetEnvelopes[e]]}};function Lt(o,e,i){return{interval:o,time:e,size:i}}var lt=class o{pitches;pins;start;end;continuesLastPattern;chipWaveStartOffset;constructor(e,i,n,a,s=!1,r=0){this.pitches=[e],this.pins=[Lt(0,0,a),Lt(0,n-i,s?0:a)],this.start=i,this.end=n,this.continuesLastPattern=!1,this.chipWaveStartOffset=r}pickMainInterval(){let e=0,i=0;for(let n=1;n<this.pins.length;n++){let a=this.pins[n-1],s=this.pins[n];if(a.interval==s.interval){let r=s.time-a.time;e<r&&(e=r,i=a.interval)}}if(e==0){let n=0;for(let a=0;a<this.pins.length;a++){let s=this.pins[a];n<s.size&&(n=s.size,i=s.interval)}}return i}clone(){let e=new o(-1,this.start,this.end,3);e.pitches=this.pitches.concat(),e.pins=[];for(let i of this.pins)e.pins.push(Lt(i.interval,i.time,i.size));return e.continuesLastPattern=this.continuesLastPattern,e}getEndPinIndex(e){let i;for(i=1;i<this.pins.length-1&&!(this.pins[i].time+this.start>e);i++);return i}},at=class{notes=[];instruments=[0];cloneNotes(){let e=[];for(let i of this.notes)e.push(i.clone());return e}reset(){this.notes.length=0,this.instruments[0]=0,this.instruments.length=1}toJsonObject(e,i,n){let a=[];for(let r of this.notes){let c=i.instruments[this.instruments[0]],d=Math.max(0,t.modCount-r.pitches[0]-1),y=e.getVolumeCapForSetting(n,c.modulators[d],c.modFilterTypes[d]),l=[];for(let h of r.pins){let g=Math.round(n?h.size:h.size*100/y);l.push({tick:(h.time+r.start)*t.rhythms[e.rhythm].stepsPerBeat/t.partsPerBeat,pitchBend:h.interval,volume:g,forMod:n})}let v={pitches:r.pitches,points:l};r.start==0&&(v.continuesLastPattern=r.continuesLastPattern),a.push(v)}let s={notes:a};return e.patternInstruments&&(s.instruments=this.instruments.map(r=>r+1)),s}fromJsonObject(e,i,n,a,s,r,c="auto"){let d=c.toLowerCase();if(i.patternInstruments)if(Array.isArray(e.instruments)){let y=e.instruments,l=A(t.instrumentCountMin,i.getMaxInstrumentsPerPatternForChannel(n)+1,y.length);for(let v=0;v<l;v++)this.instruments[v]=A(0,n.instruments.length,(y[v]|0)-1);this.instruments.length=l}else this.instruments[0]=A(0,n.instruments.length,(e.instrument|0)-1),this.instruments.length=1;if(e.notes&&e.notes.length>0){let y=Math.min(i.beatsPerBar*t.partsPerBeat*(r?t.modCount:1),e.notes.length>>>0);for(let l=0;l<e.notes.length&&!(l>=y);l++){let v=e.notes[l];if(!v||!v.pitches||!(v.pitches.length>=1)||!v.points||!(v.points.length>=2))continue;let h=new lt(0,0,0,0);h.pitches=[],h.pins=[];for(let w=0;w<v.pitches.length;w++){let b=v.pitches[w]|0;if(h.pitches.indexOf(b)==-1&&(h.pitches.push(b),h.pitches.length>=t.maxChordSize))break}if(h.pitches.length<1)continue;let g=0,f=n.instruments[this.instruments[0]],m=Math.max(0,t.modCount-h.pitches[0]-1);for(let w=0;w<v.points.length;w++){let b=v.points[w];if(b==null||b.tick==null)continue;let P=b.pitchBend==null?0:b.pitchBend|0,B=Math.round(+b.tick*t.partsPerBeat/a),L=i.getVolumeCapForSetting(r,f.modulators[m],f.modFilterTypes[m]),E;b.volume==null?E=L:b.forMod==null?E=Math.max(0,Math.min(L,Math.round((b.volume|0)*L/100))):E=(b.forMod|0)>0?Math.round(b.volume|0):Math.max(0,Math.min(L,Math.round((b.volume|0)*L/100))),!(B>i.beatsPerBar*t.partsPerBeat)&&(h.pins.length==0&&(h.start=B,g=P),h.pins.push(Lt(P-g,B-h.start,E)))}if(h.pins.length<2)continue;h.end=h.pins[h.pins.length-1].time+h.start;let p=s?t.drumCount-1:t.maxPitch,S=p,x=0;for(let w=0;w<h.pitches.length;w++)h.pitches[w]+=g,(h.pitches[w]<0||h.pitches[w]>p)&&(h.pitches.splice(w,1),w--),h.pitches[w]<S&&(S=h.pitches[w]),h.pitches[w]>x&&(x=h.pitches[w]);if(!(h.pitches.length<1)){for(let w=0;w<h.pins.length;w++){let b=h.pins[w];b.interval+S<0&&(b.interval=-S),b.interval+x>p&&(b.interval=p-x),w>=2&&b.interval==h.pins[w-1].interval&&b.interval==h.pins[w-2].interval&&b.size==h.pins[w-1].size&&b.size==h.pins[w-2].size&&(h.pins.splice(w-1,1),w--)}if(h.start==0?h.continuesLastPattern=v.continuesLastPattern===!0:h.continuesLastPattern=!1,d!="ultrabox"&&d!="slarmoosbox"&&f.modulators[m]==t.modulators.dictionary.tempo.index)for(let w of h.pins){let B=w.size+30;w.size=B-1}this.notes.push(h)}}}}};var fn=class{instruments=[];muted=!1;singleSeamlessInstrument=null};var ct=class{Y=1;Z=[void 0];ee=0;K=0;J=0;pushFront(e){this.J>=this.Y&&this.de(),this.K=this.K-1&this.ee,this.Z[this.K]=e,this.J++}pushBack(e){this.J>=this.Y&&this.de(),this.Z[this.K+this.J&this.ee]=e,this.J++}popFront(){if(this.J<=0)throw new Error("No elements left to pop.");let e=this.Z[this.K];return this.Z[this.K]=void 0,this.K=this.K+1&this.ee,this.J--,e}popBack(){if(this.J<=0)throw new Error("No elements left to pop.");this.J--;let e=this.K+this.J&this.ee,i=this.Z[e];return this.Z[e]=void 0,i}peakFront(){if(this.J<=0)throw new Error("No elements left to pop.");return this.Z[this.K]}peakBack(){if(this.J<=0)throw new Error("No elements left to pop.");return this.Z[this.K+this.J-1&this.ee]}count(){return this.J}set(e,i){if(e<0||e>=this.J)throw new Error("Invalid index");this.Z[this.K+e&this.ee]=i}get(e){if(e<0||e>=this.J)throw new Error("Invalid index");return this.Z[this.K+e&this.ee]}remove(e){if(e<0||e>=this.J)throw new Error("Invalid index");if(e<=this.J>>1){for(;e>0;)this.set(e,this.get(e-1)),e--;this.popFront()}else{for(e++;e<this.J;)this.set(e-1,this.get(e)),e++;this.popBack()}}de(){if(this.Y>=1073741824)throw new Error(`wtf?? requested more than ${this.Y} elements in deque`);this.Y=this.Y<<1;let e=this.Z,i=new Array(this.Y),n=this.J|0,a=this.K|0;for(let s=0;s<n;s++)i[s]=e[a+s&this.ee];for(let s=n;s<this.Y;s++)i[s]=void 0;this.K=0,this.Z=i,this.ee=this.Y-1}};var Ir;function gt(o,e=0){let i=typeof o=="string"?(Ir??=new TextEncoder).encode(o):o,n=i,a=e+374761393&4294967295,s=0;if(n.length>=16){let c=[e+2654435761+2246822519&4294967295,e+2246822519&4294967295,e+0&4294967295,e-2654435761&4294967295],d=i,y=d.length-16,l=0;for(s=0;(s&4294967280)<=y;s+=4){let v=s,h=d[v+0]+(d[v+1]<<8),g=d[v+2]+(d[v+3]<<8),f=h*2246822519+(g*2246822519<<16),m=c[l]+f&4294967295;m=m<<13|m>>>19;let p=m&65535,S=m>>>16;c[l]=p*2654435761+(S*2654435761<<16)&4294967295,l=l+1&3}a=(c[0]<<1|c[0]>>>31)+(c[1]<<7|c[1]>>>25)+(c[2]<<12|c[2]>>>20)+(c[3]<<18|c[3]>>>14)&4294967295}a=a+i.length&4294967295;let r=i.length-4;for(;s<=r;s+=4){let c=s,d=n[c+0]+(n[c+1]<<8),y=n[c+2]+(n[c+3]<<8),l=d*3266489917+(y*3266489917<<16);a=a+l&4294967295,a=a<<17|a>>>15,a=(a&65535)*668265263+((a>>>16)*668265263<<16)&4294967295}for(;s<n.length;++s){let c=n[s];a=a+c*374761393,a=a<<11|a>>>21,a=(a&65535)*2654435761+((a>>>16)*2654435761<<16)&4294967295}return a=a^a>>>15,a=((a&65535)*2246822519&4294967295)+((a>>>16)*2246822519<<16),a=a^a>>>13,a=((a&65535)*3266489917&4294967295)+((a>>>16)*3266489917<<16),a=a^a>>>16,a<0?a+4294967296:a}var vt=class o{noteSecondsStart=[];noteSecondsStartUnscaled=0;noteSecondsEnd=[];noteSecondsEndUnscaled=0;noteTicksStart=0;noteTicksEnd=0;noteSizeStart=t.noteSizeMax;noteSizeEnd=t.noteSizeMax;prevNoteSize=t.noteSizeMax;nextNoteSize=t.noteSizeMax;ne=t.noteSizeMax;prevNoteSecondsStart=[];prevNoteSecondsStartUnscaled=0;prevNoteSecondsEnd=[];prevNoteSecondsEndUnscaled=0;prevNoteTicksStart=0;prevNoteTicksEnd=0;se=t.noteSizeMax;tickTimeEnd=[];drumsetFilterEnvelopeStart=0;drumsetFilterEnvelopeEnd=0;prevSlideStart=!1;prevSlideEnd=!1;nextSlideStart=!1;nextSlideEnd=!1;prevSlideRatioStart=0;prevSlideRatioEnd=0;nextSlideRatioStart=0;nextSlideRatioEnd=0;startPinTickAbsolute=null;startPinTickDefaultPitch=null;startPinTickPitch=null;envelopeStarts=[];envelopeEnds=[];ue=[];oe=0;lowpassCutoffDecayVolumeCompensation=1;constructor(){let e=62;for(let i=0;i<e;i++)this.envelopeStarts[i]=1,this.envelopeEnds[i]=1;this.reset()}reset(){for(let e=0;e<t.maxEnvelopeCount+1;e++)this.noteSecondsEnd[e]=0,this.prevNoteSecondsEnd[e]=0;this.noteSecondsEndUnscaled=0,this.noteTicksEnd=0,this.ne=t.noteSizeMax,this.prevNoteSecondsEndUnscaled=0,this.prevNoteTicksEnd=0,this.se=t.noteSizeMax,this.oe=0,this.drumsetFilterEnvelopeStart=0,this.drumsetFilterEnvelopeEnd=0,this.startPinTickAbsolute=null,this.startPinTickDefaultPitch=null,this.startPinTickPitch=null}computeEnvelopes(e,i,n,a,s,r,c,d,y,l,v){let h=s,g=e.getTransition();if(r!=null&&r.atNoteStart&&!g.continues&&!r.forceContinueAtStart){this.prevNoteSecondsEndUnscaled=this.noteSecondsEndUnscaled,this.prevNoteTicksEnd=this.noteTicksEnd,this.se=this.ne,this.noteSecondsEndUnscaled=0,this.noteTicksEnd=0;for(let _=0;_<t.maxEnvelopeCount+1;_++)this.prevNoteSecondsEnd[_]=this.noteSecondsEnd[_],this.noteSecondsEnd[_]=0}r!=null&&(r.note!=null?this.ne=r.note.pins[r.note.pins.length-1].size:this.ne=t.noteSizeMax);let f=[],m=a+1,p=[],S=this.noteSecondsEndUnscaled,x=[],w=S+h,b=this.noteTicksEnd,P=b+1,B=[],L=[],E=this.prevNoteSecondsEndUnscaled,D=E+h,R=this.prevNoteTicksEnd,N=R+1,z=1/(t.ticksPerPart*t.partsPerBeat),W=[],H=[],U=this.ne,G=this.ne,u=this.se,F=0,C=!1,I=!1,M=!1,q=!1,O=0,j=0,te=0,ee=0;if(r==null&&(this.startPinTickAbsolute=null,this.startPinTickDefaultPitch=null),r!=null&&r.note!=null&&!r.passedEndOfNote){let _=r.note.getEndPinIndex(i),V=r.note.pins[_-1],K=r.note.pins[_],Q=(r.note.start+V.time)*t.ticksPerPart;(this.startPinTickAbsolute==null||!(g.continues||g.slides)&&r.passedEndOfNote)&&(this.startPinTickAbsolute=Q+y.computeTicksSinceStart(!0)),(this.startPinTickDefaultPitch==null||r.passedEndOfNote)&&(this.startPinTickDefaultPitch=this.getPitchValue(e,r,d,!1)),r.passedEndOfNote||(this.startPinTickPitch=this.getPitchValue(e,r,d,!0));let Z=(r.note.start+K.time)*t.ticksPerPart,ae=(a-Q)/(Z-Q),me=(m-Q)/(Z-Q);if(U=V.size+(K.size-V.size)*ae,G=V.size+(K.size-V.size)*me,g.slides){let oe=r.noteStartPart*t.ticksPerPart,ye=r.noteEndPart*t.ticksPerPart,de=(ye-oe)*.5,le=Math.min(de,g.slideTicks);r.prevNote!=null&&!r.forceContinueAtStart&&(a-oe<le&&(C=!0,O=.5*(1-(a-oe)/le)),m-oe<le&&(I=!0,j=.5*(1-(m-oe)/le))),r.nextNote!=null&&!r.forceContinueAtEnd&&(F=r.nextNote.pins[0].size,ye-a<le&&(M=!0,te=.5*(1-(ye-a)/le)),ye-m<le&&(q=!0,ee=.5*(1-(ye-m)/le)))}}let ge=1,Ie=!1;for(let _=0;_<=e.envelopeCount;_++){let V,K,Q,Z=!1,ae=!1,me=1,oe=1,ye=me*oe,ie=0,de=1,le=0,re=2,ce=2,X=0,$=this.startPinTickAbsolute||0,ue=this.startPinTickDefaultPitch||0;if(_==e.envelopeCount){if(Ie)break;V=t.instrumentAutomationTargets.dictionary.noteVolume,K=0,Q=t.newEnvelopes.dictionary["note size"]}else{let Fe=e.envelopes[_];V=t.instrumentAutomationTargets[Fe.target],K=Fe.index,Q=t.newEnvelopes[Fe.envelope],Z=e.envelopes[_].inverse,ae=e.envelopes[_].discrete,me=e.envelopes[_].perEnvelopeSpeed,oe=Math.pow(e.envelopeSpeed,2)/144,ye=me*oe,ie=e.envelopes[_].perEnvelopeLowerBound,de=e.envelopes[_].perEnvelopeUpperBound,y.isModActive(t.modulators.dictionary["individual envelope lower bound"].index,l,v)&&e.envelopes[_].tempEnvelopeLowerBound!=null&&(ie=e.envelopes[_].tempEnvelopeLowerBound),y.isModActive(t.modulators.dictionary["individual envelope upper bound"].index,l,v)&&e.envelopes[_].tempEnvelopeUpperBound!=null&&(de=e.envelopes[_].tempEnvelopeUpperBound),ie<=de||(ie=0,de=1),le=y.computeTicksSinceStart(),re=e.envelopes[_].steps,ce=e.envelopes[_].seed,e.envelopes[_].waveform>=(Q.name=="lfo"?7:4)&&(e.envelopes[_].waveform=0),X=e.envelopes[_].waveform,c[_]||(c[_]=0);let Y=s*c[_];n[_]||(n[_]=0),f[_]=n[_]?n[_]+c[_]:c[_],p[_]=this.noteSecondsEnd[_]?this.noteSecondsEnd[_]:0,B[_]=this.prevNoteSecondsEnd[_]?this.prevNoteSecondsEnd[_]:0,x[_]=p[_]?p[_]+Y:Y,L[_]=B[_]?B[_]+Y:Y,W[_]=n[_]?z*n[_]:z,H[_]=f[_]?z*f[_]:z,Q.type==1&&(Ie=!0)}let ve=Q.type==2?this.computePitchEnvelope(e,_,this.startPinTickPitch||this.getPitchValue(e,r,d,!0)):0;if(V.computeIndex!=null){let Fe=V.computeIndex+K,Y=o.computeEnvelope(Q,ye,oe,S,p[_],W[_],le,U,ve,Z,ie,de,!1,re,ce,X,ue,$);if(C){let Se=o.computeEnvelope(Q,ye,oe,E,B[_],W[_],le,u,ve,Z,ie,de,!1,re,ce,X,ue,$);Y+=(Se-Y)*O}if(M){let Se=o.computeEnvelope(Q,ye,oe,0,0,W[_],le,F,ve,Z,ie,de,!1,re,ce,X,ue,$);Y+=(Se-Y)*te}let he=Y;if(ae==!1){if(he=o.computeEnvelope(Q,ye,oe,w,x[_],H[_],le,G,ve,Z,ie,de,!1,re,ce,X,ue,$),I){let Se=o.computeEnvelope(Q,ye,oe,D,L[_],H[_],le,u,ve,Z,ie,de,!1,re,ce,X,ue,$);he+=(Se-he)*j}if(q){let Se=o.computeEnvelope(Q,ye,oe,0,0,H[_],le,F,ve,Z,ie,de,!1,re,ce,X,ue,$);he+=(Se-he)*ee}}if(this.envelopeStarts[Fe]*=Y,this.envelopeEnds[Fe]*=he,this.ue[this.oe++]=Fe,V.isFilter){let Se=e.tmpNoteFilterStart!=null?e.tmpNoteFilterStart:e.noteFilter;Se.controlPointCount>K&&Se.controlPoints[K].type==0&&(ge=Math.max(ge,o.getLowpassCutoffDecayVolumeCompensation(Q,me)))}}}this.noteSecondsStartUnscaled=S,this.noteSecondsEndUnscaled=w,this.noteTicksStart=b,this.noteTicksEnd=P,this.prevNoteSecondsStartUnscaled=E,this.prevNoteSecondsEndUnscaled=D,this.prevNoteTicksStart=R,this.prevNoteTicksEnd=N;for(let _=0;_<t.maxEnvelopeCount+1;_++)this.noteSecondsStart[_]=p[_],this.noteSecondsEnd[_]=x[_],this.prevNoteSecondsStart[_]=B[_],this.prevNoteSecondsEnd[_]=L[_];this.prevNoteSize=u,this.nextNoteSize=F,this.noteSizeStart=U,this.noteSizeEnd=G,this.prevSlideStart=C,this.prevSlideEnd=I,this.nextSlideStart=M,this.nextSlideEnd=q,this.prevSlideRatioStart=O,this.prevSlideRatioEnd=j,this.nextSlideRatioStart=te,this.nextSlideRatioEnd=ee,this.lowpassCutoffDecayVolumeCompensation=ge}clearEnvelopes(){for(let e=0;e<this.oe;e++){let i=this.ue[e];this.envelopeStarts[i]=1,this.envelopeEnds[i]=1}this.oe=0}static computeEnvelope(e,i,n,a,s,r,c,d,y,l,v,h,g=!1,f,m,p,S,x){let w=g?e.speed:1,b=h-v;switch(e.type){case 0:return h;case 1:return l?h-pe.noteSizeToVolumeMult(d)*b:pe.noteSizeToVolumeMult(d)*b+v;case 2:return y;case 3:let P=4294967295,B=f;switch(p){case 0:if(B<=1)return 1;let D=gt((i==0?0:Math.floor(c*i/256))+"",m);return l?h-b*(B/(B-1))*Math.floor(D*B/(P+1))/B:b*(B/(B-1))*Math.floor(D*B/(P+1))/B+v;case 1:let R=gt(S+"",m);return l?h-b*R/(P+1):b*R/(P+1)+v;case 2:if(B<=1)return 1;let N=gt(x+"",m);return l?h-b*(B/(B-1))*Math.floor(N*B/(P+1))/B:b*(B/(B-1))*Math.floor(N*B/(P+1))/B+v;case 3:let z=gt((i==0?0:Math.floor(c*i/256))+"",m),W=gt((i==0?0:Math.floor((c*i+256)/256))+"",m),H=z*(1-c*i/256%1)+W*(c*i/256%1);return l?h-b*H/(P+1):b*H/(P+1)+v;default:throw new Error("Unrecognized operator envelope waveform type: "+p)}case 6:return l?h-b*(1/(1+s*w)):b/(1+s*w)+v;case 7:return l?b/(1+s*w)+v:h-b/(1+s*w);case 8:switch(p){case 0:return l?h/2+b*Math.cos(r*2*Math.PI*w)*.5+v/2:h/2-b*Math.cos(r*2*Math.PI*w)*.5+v/2;case 1:return l?Math.cos(r*2*Math.PI*w+3*Math.PI/2)<0?h:v:Math.cos(r*2*Math.PI*w+3*Math.PI/2)<0?v:h;case 2:return l?h/2-b/Math.PI*Math.asin(Math.sin(Math.PI/2+r*Math.PI*2*w))+v/2:h/2+b/Math.PI*Math.asin(Math.sin(Math.PI/2+r*Math.PI*2*w))+v/2;case 3:return l?h-r*w%1*b:r*w%1*b+v;case 4:let D=0;return l?D=h/2-b*2/Math.PI*Math.asin(Math.sin(Math.PI/2+r*Math.PI*2*w))+v/2:D=h/2+b*2/Math.PI*Math.asin(Math.sin(Math.PI/2+r*Math.PI*2*w))+v/2,Math.max(v,Math.min(h,D));case 5:if(f<=1)return 1;let R=r*w%1;return l?h-Math.floor(R*f)*b/(f-1):Math.floor(R*f)*b/(f-1)+v;case 6:if(f<=1)return 1;let N=.5+(l?-1:1)*(1/Math.PI)*Math.asin(Math.sin(Math.PI/2+r*Math.PI*2*w));return Math.round(N*(f-1))*b/(f-1)+v;default:throw new Error("Unrecognized operator envelope waveform type: "+p)}case 9:return l?h/4+b*Math.cos(r*2*Math.PI*w)*.25+v/4:.5+h/4-b*Math.cos(r*2*Math.PI*w)*.25-v/4;case 4:return l?Math.max(0,h+1-Math.max(1-v,1-h-a*n*10)):Math.max(1+v,1+h-a*n*10);case 5:let L=.25/Math.sqrt(w*i);return l?h-b*(a<L?a/L:1/(1+(a-L)*w*i)):b*(a<L?a/L:1/(1+(a-L)*w*i))+v;case 10:return l?h-b*Math.pow(2,-w*s):b*Math.pow(2,-w*s)+v;case 14:return l?h-b*+(a<.25/Math.sqrt(w*i)):b*+(a<.25/Math.sqrt(w*i))+v;case 11:let E=.5-Math.cos(r*w)*.5;return E=1/(1+s*(w-E/(1.5/w))),E=E>0?E:0,l?h-b*E:b*E+v;case 12:{let D=1-s/(16/w);return D=D>0?D:0,l?h-b*D:b*D+v}case 13:{let D=s/(16/w);return D=D<1?D:1,l?h-b*D:b*D+v}case 15:return l?Math.min(Math.max(v,h-b*Math.sqrt(Math.max(1-w*s/2,0))),h):Math.max(v,b*Math.sqrt(Math.max(1-w*s/2,0))+v);default:throw new Error("Unrecognized operator envelope type.")}}getPitchValue(e,i,n,a=!0){if(i&&i.pitchCount>=1){let s=e.getChord(),r=s.arpeggiates,c=s.name=="monophonic",d=Math.floor(n.arpTime/t.ticksPerArpeggio),y=i.pitches[r?Ht(i.pitchCount,e.fastTwoNoteArp,d):c?e.monoChordTone:0];return a&&i.lastInterval!=y?y+i.lastInterval:y}return 0}computePitchEnvelope(e,i,n=0){let a=0,s=t.maxPitch,r=!1,c=0,d=1;e.isNoiseInstrument&&(s=t.drumCount-1),i<e.envelopeCount&&i!==-2&&(a=e.envelopes[i].pitchEnvelopeStart,s=e.envelopes[i].pitchEnvelopeEnd,r=e.envelopes[i].inverse,c=e.envelopes[i].perEnvelopeLowerBound,d=e.envelopes[i].perEnvelopeUpperBound),a>s&&(a=0,s=e.isNoiseInstrument?t.drumCount-1:t.maxPitch);let y=s-a+1;return r?n<=a?d:n>=s?c:d-(n-a)*(d-c)/y:n<=a?c:n>=s?d:(n-a)*(d-c)/y+c}static getLowpassCutoffDecayVolumeCompensation(e,i=1){return e.type==10?1.25+.025*i:e.type==6?1+.02*i:1}computeDrumsetEnvelopes(e,i,n,a,s){function c(l,v,h,g){return o.computeEnvelope(i,1,1,l,v,h,0,g,1,!1,0,1,!0,2,2,0,1,0)}let d=c(this.noteSecondsStartUnscaled,this.noteSecondsStartUnscaled,n*a,this.noteSizeStart);if(this.prevSlideStart){let l=c(this.prevNoteSecondsStartUnscaled,this.prevNoteSecondsStartUnscaled,n*a,this.prevNoteSize);d+=(l-d)*this.prevSlideRatioStart}if(this.nextSlideStart){let l=c(0,0,n*a,this.nextNoteSize);d+=(l-d)*this.nextSlideRatioStart}let y=d;if(y=c(this.noteSecondsEndUnscaled,this.noteSecondsEndUnscaled,n*s,this.noteSizeEnd),this.prevSlideEnd){let l=c(this.prevNoteSecondsEndUnscaled,this.prevNoteSecondsEndUnscaled,n*s,this.prevNoteSize);y+=(l-y)*this.prevSlideRatioEnd}if(this.nextSlideEnd){let l=c(0,0,n*s,this.nextNoteSize);y+=(l-y)*this.nextSlideRatioEnd}this.drumsetFilterEnvelopeStart=d,this.drumsetFilterEnvelopeEnd=y}};var mn=class{delayLinePosition;ageInSamples;maxAgeInSamples;delay;parabolicEnvelopeAmplitude;parabolicEnvelopeSlope;parabolicEnvelopeCurve;rcbEnvelopeAmplitude;rcbEnvelopeAttackIndex;rcbEnvelopeReleaseIndex;rcbEnvelopeSustain;constructor(){this.delayLinePosition=0,this.ageInSamples=0,this.maxAgeInSamples=0,this.delay=0,this.parabolicEnvelopeAmplitude=0,this.parabolicEnvelopeSlope=0,this.parabolicEnvelopeCurve=0,this.rcbEnvelopeAmplitude=0,this.rcbEnvelopeAttackIndex=0,this.rcbEnvelopeReleaseIndex=0,this.rcbEnvelopeSustain=0}initializeParabolicEnvelope(e,i){this.parabolicEnvelopeAmplitude=0;let n=1/e,a=n*n;this.parabolicEnvelopeSlope=4*i*(n-a),this.parabolicEnvelopeCurve=-8*i*a}updateParabolicEnvelope(){this.parabolicEnvelopeAmplitude+=this.parabolicEnvelopeSlope,this.parabolicEnvelopeSlope+=this.parabolicEnvelopeCurve}initializeRCBEnvelope(e,i){this.rcbEnvelopeAttackIndex=Math.floor(e/6),this.rcbEnvelopeSustain=i,this.rcbEnvelopeReleaseIndex=Math.floor(e*5/6)}updateRCBEnvelope(){this.ageInSamples<this.rcbEnvelopeAttackIndex?this.rcbEnvelopeAmplitude=1+Math.cos(Math.PI+Math.PI*(this.ageInSamples/this.rcbEnvelopeAttackIndex)*(this.rcbEnvelopeSustain/2)):this.ageInSamples>this.rcbEnvelopeReleaseIndex&&(this.rcbEnvelopeAmplitude=1+Math.cos(Math.PI*((this.ageInSamples-this.rcbEnvelopeReleaseIndex)/this.rcbEnvelopeAttackIndex))*(this.rcbEnvelopeSustain/2))}addDelay(e){this.delay=e}},yn=class{type=0;eqFilterVolume=1;eqFilterVolumeDelta=0;granularMix=1;granularMixDelta=0;granularDelayLineL=null;granularDelayLineR=null;granularDelayLineIndex=0;granularMaximumDelayTimeInSeconds=1;granularGrains;granularGrainsLength;granularMaximumGrains;usesRandomGrainLocation=!0;granularDelayLineDirty=!1;computeGrains=!0;ringModMix=0;ringModMixDelta=0;ringModPhase=0;ringModPhaseDelta=0;ringModPhaseDeltaScale=1;ringModWaveformIndex=0;ringModPulseWidth=0;ringModHzOffset=0;ringModMixFade=1;ringModMixFadeDelta=0;distortion=0;distortionDelta=0;distortionDrive=0;distortionDriveDelta=0;distortionFractionalInputL1=0;distortionFractionalInputL2=0;distortionFractionalInputL3=0;distortionFractionalInputR1=0;distortionFractionalInputR2=0;distortionFractionalInputR3=0;distortionPrevInputL=0;distortionPrevInputR=0;distortionNextOutputL=0;distortionNextOutputR=0;bitcrusherPrevInputL=0;bitcrusherPrevInputR=0;bitcrusherCurrentOutputL=0;bitcrusherCurrentOutputR=0;bitcrusherPhase=1;bitcrusherPhaseDelta=0;bitcrusherPhaseDeltaScale=1;bitcrusherScale=1;bitcrusherScaleScale=1;bitcrusherFoldLevel=1;bitcrusherFoldLevelScale=1;eqFiltersL=[];eqFiltersR=[];eqFilterCount=0;initialEqFilterInputL1=0;initialEqFilterInputR1=0;initialEqFilterInputL2=0;initialEqFilterInputR2=0;gain=1;gainDelta=0;panningDelayLineL=null;panningDelayLineR=null;panningDelayPos=0;panningVolumeL=0;panningVolumeR=0;panningVolumeDeltaL=0;panningVolumeDeltaR=0;panningOffsetL=0;panningOffsetR=0;panningOffsetDeltaL=0;panningOffsetDeltaR=0;panningMode=0;flangerDelayLineL=null;flangerDelayLineR=null;flangerDelayLineDirty=!1;flangerDelayPos=0;flanger=0;flangerDelta=0;flangerSpeed=0;flangerSpeedDelta=0;flangerDepth=0;flangerDepthDelta=0;flangerFeedback=0;flangerFeedbackDelta=0;flangerPhase=0;chorusDelayLineL=null;chorusDelayLineR=null;chorusDelayLineDirty=!1;chorusDelayPos=0;chorusPhase=0;chorusVoiceMult=0;chorusVoiceMultDelta=0;chorusCombinedMult=0;chorusCombinedMultDelta=0;echoDelayLineL=null;echoDelayLineR=null;echoDelayLineDirty=!1;echoDelayPosL=0;echoDelayPosR=0;echoDelayOffsetStart=0;echoDelayOffsetEnd=null;echoDelayOffsetRatio=0;echoDelayOffsetRatioDelta=0;echoMult=0;echoMultDelta=0;echoPingPong=0;echoShelfA1=0;echoShelfB0=0;echoShelfB1=0;echoShelfSampleL=0;echoShelfSampleR=0;echoShelfPrevInputL=0;echoShelfPrevInputR=0;reverbDelayLine=null;reverbDelayLineDirty=!1;reverbDelayPos=0;reverbMult=0;reverbMultDelta=0;reverbShelfA1=0;reverbShelfB0=0;reverbShelfB1=0;reverbShelfSample0=0;reverbShelfSample1=0;reverbShelfSample2=0;reverbShelfSample3=0;reverbShelfPrevInput0=0;reverbShelfPrevInput1=0;reverbShelfPrevInput2=0;reverbShelfPrevInput3=0;constructor(e){this.type=e,this.granularGrains=[],this.granularMaximumGrains=256;for(let i=0;i<this.granularMaximumGrains;i++)this.granularGrains.push(new mn);this.granularGrainsLength=0}reset(){if(this.chorusDelayLineDirty){for(let e=0;e<this.chorusDelayLineL.length;e++)this.chorusDelayLineL[e]=0;for(let e=0;e<this.chorusDelayLineR.length;e++)this.chorusDelayLineR[e]=0}if(this.flangerDelayLineDirty){for(let e=0;e<this.flangerDelayLineL.length;e++)this.flangerDelayLineL[e]=0;for(let e=0;e<this.flangerDelayLineR.length;e++)this.flangerDelayLineR[e]=0}if(this.echoDelayLineDirty){for(let e=0;e<this.echoDelayLineL.length;e++)this.echoDelayLineL[e]=0;for(let e=0;e<this.echoDelayLineR.length;e++)this.echoDelayLineR[e]=0}if(this.reverbDelayLineDirty)for(let e=0;e<this.reverbDelayLine.length;e++)this.reverbDelayLine[e]=0;if(this.granularDelayLineDirty){for(let e=0;e<this.granularDelayLineL.length;e++)this.granularDelayLineL[e]=0;for(let e=0;e<this.granularDelayLineR.length;e++)this.granularDelayLineR[e]=0}this.flangerPhase=0,this.chorusPhase=0,this.ringModPhase=0,this.ringModMixFade=1}allocateNecessaryBuffers(e,i,n,a){if(n.type==2&&(this.panningDelayLineL==null||this.panningDelayLineR==null||this.panningDelayLineL.length<e.panningDelayBufferSize||this.panningDelayLineR.length<e.panningDelayBufferSize)&&(this.panningDelayLineL=new Float32Array(e.panningDelayBufferSize),this.panningDelayLineR=new Float32Array(e.panningDelayBufferSize)),n.type==1&&((this.chorusDelayLineL==null||this.chorusDelayLineL.length<e.chorusDelayBufferSize)&&(this.chorusDelayLineL=new Float32Array(e.chorusDelayBufferSize)),(this.chorusDelayLineR==null||this.chorusDelayLineR.length<e.chorusDelayBufferSize)&&(this.chorusDelayLineR=new Float32Array(e.chorusDelayBufferSize))),n.type==10&&((this.flangerDelayLineL==null||this.flangerDelayLineL.length<e.flangerDelayBufferSize)&&(this.flangerDelayLineL=new Float32Array(e.flangerDelayBufferSize)),(this.flangerDelayLineR==null||this.flangerDelayLineR.length<e.flangerDelayBufferSize)&&(this.flangerDelayLineR=new Float32Array(e.flangerDelayBufferSize))),n.type==6&&this.allocateEchoBuffers(a,n.echoDelay),n.type==0&&this.reverbDelayLine==null&&(this.reverbDelayLine=new Float32Array(t.reverbDelayBufferSize)),n.type==8){this.granularMaximumDelayTimeInSeconds=2.5;let c=Je(Math.floor(2.5*e.samplesPerSecond));(this.granularDelayLineL==null||this.granularDelayLineR==null||this.granularDelayLineL.length!=c||this.granularDelayLineR.length!=c)&&(this.granularDelayLineL=new Float32Array(c),this.granularDelayLineR=new Float32Array(c),this.granularDelayLineIndex=0);let d=this.granularGrains.length;if(this.granularMaximumGrains>d)for(let y=d;y<this.granularMaximumGrains+1;y++)this.granularGrains.push(new mn);this.granularMaximumGrains<this.granularGrainsLength&&(this.granularGrainsLength=Math.round(this.granularMaximumGrains))}}allocateEchoBuffers(e,i){let n=Math.max(t.echoDelayRange>>1,i+1),s=Je(n*t.echoDelayStepTicks*e)*2;if(this.echoDelayLineL==null||this.echoDelayLineR==null)this.echoDelayLineL=new Float32Array(s),this.echoDelayLineR=new Float32Array(s);else if(this.echoDelayLineL.length<s||this.echoDelayLineR.length<s){let r=new Float32Array(s),c=new Float32Array(s),d=this.echoDelayLineL.length-1;for(let y=0;y<this.echoDelayLineL.length;y++)r[y]=this.echoDelayLineL[this.echoDelayPosL+y&d],c[y]=this.echoDelayLineR[this.echoDelayPosR+y&d];this.echoDelayPosL=this.echoDelayLineL.length,this.echoDelayPosR=this.echoDelayLineR.length,this.echoDelayLineL=r,this.echoDelayLineR=c}}deactivate(){this.bitcrusherPrevInputL=0,this.bitcrusherPrevInputR=0,this.bitcrusherCurrentOutputL=0,this.bitcrusherCurrentOutputR=0,this.bitcrusherPhase=1;for(let e=0;e<this.eqFilterCount;e++)this.eqFiltersL[e].resetOutput(),this.eqFiltersR[e].resetOutput();if(this.eqFilterCount=0,this.initialEqFilterInputL1=0,this.initialEqFilterInputR1=0,this.initialEqFilterInputL2=0,this.initialEqFilterInputR2=0,this.distortionFractionalInputL1=0,this.distortionFractionalInputL2=0,this.distortionFractionalInputL3=0,this.distortionFractionalInputR1=0,this.distortionFractionalInputR2=0,this.distortionFractionalInputR3=0,this.distortionPrevInputL=0,this.distortionPrevInputR=0,this.distortionNextOutputL=0,this.distortionNextOutputR=0,this.flangerDelayPos=0,this.panningDelayPos=0,this.panningDelayLineL!=null)for(let e=0;e<this.panningDelayLineL.length;e++)this.panningDelayLineL[e]=0;if(this.panningDelayLineR!=null)for(let e=0;e<this.panningDelayLineR.length;e++)this.panningDelayLineR[e]=0;this.echoDelayOffsetEnd=null,this.echoShelfSampleL=0,this.echoShelfSampleR=0,this.echoShelfPrevInputL=0,this.echoShelfPrevInputR=0,this.reverbShelfSample0=0,this.reverbShelfSample1=0,this.reverbShelfSample2=0,this.reverbShelfSample3=0,this.reverbShelfPrevInput0=0,this.reverbShelfPrevInput1=0,this.reverbShelfPrevInput2=0,this.reverbShelfPrevInput3=0}compute(e,i,n,a,s,r,c,d,y,l,v){let h=e.samplesPerSecond;this.type=n.type;let g=n.type==8,f=n.type==7,m=n.type==3,p=n.type==4,S=n.type==9,x=n.type==2,w=n.type==10,b=n.type==1,P=n.type==6,B=n.type==0,L=n.type==5;if(g&&(this.granularMaximumGrains=Math.pow(2,n.grainAmounts*l[53]),e.isModActive(t.modulators.dictionary["grain freq"].index,d,y)&&(this.granularMaximumGrains=Math.pow(2,e.getModValue(t.modulators.dictionary["grain freq"].index,d,y,!1)*l[53])),this.granularMaximumGrains==Math.floor(this.granularMaximumGrains)),this.allocateNecessaryBuffers(e,i,n,s),g){this.granularMix=n.granular/t.granularRange,this.computeGrains=!0;let N=this.granularMix;e.isModActive(t.modulators.dictionary.granular.index,d,y)&&(this.granularMix=e.getModValue(t.modulators.dictionary.granular.index,d,y,!1)/t.granularRange,N=e.getModValue(t.modulators.dictionary.granular.index,d,y,!0)/t.granularRange),this.granularMix*=l[52],N*=v[52],this.granularMixDelta=(N-this.granularMix)/r;for(let z=0;z<Math.ceil(Math.random()*Math.random()*10);z++)if(this.granularGrainsLength<this.granularMaximumGrains){let W=n.grainSize;e.isModActive(t.modulators.dictionary["grain size"].index,d,y)&&(W=e.getModValue(t.modulators.dictionary["grain size"].index,d,y,!1)),W*=l[54];let H=n.grainRange;e.isModActive(t.modulators.dictionary["grain range"].index,d,y)&&(H=e.getModValue(t.modulators.dictionary["grain range"].index,d,y,!1)),H*=l[55];let U=W+H,u=(W+(U-W)*Math.random())/1e3,F=Math.floor(u*h),C=this.granularDelayLineL.length,I=this.granularGrainsLength;this.granularGrainsLength++;let M=this.granularGrains[I];M.ageInSamples=0,M.maxAgeInSamples=F;let q=.02,O=2.4;M.delayLinePosition=this.usesRandomGrainLocation?(q+(O-q)*Math.random()*Math.random()*h)%(C-1):q,t.granularEnvelopeType==0?M.initializeParabolicEnvelope(M.maxAgeInSamples,1):t.granularEnvelopeType==1&&M.initializeRCBEnvelope(M.maxAgeInSamples,1),M.addDelay(Math.random()*s*4)}}if(m){let N=n.distortion,z=n.distortion;e.isModActive(t.modulators.dictionary.distortion.index,d,y)&&(N=e.getModValue(t.modulators.dictionary.distortion.index,d,y,!1),z=e.getModValue(t.modulators.dictionary.distortion.index,d,y,!0));let W=Math.min(1,l[43]*N/(t.distortionRange-1)),H=Math.min(1,v[43]*z/(t.distortionRange-1)),U=Math.pow(1-.895*(Math.pow(20,W)-1)/19,2),G=Math.pow(1-.895*(Math.pow(20,H)-1)/19,2),u=(1+2*W)/t.distortionBaseVolume,F=(1+2*H)/t.distortionBaseVolume;this.distortion=U,this.distortionDelta=(G-U)/r,this.distortionDrive=u,this.distortionDriveDelta=(F-u)/r}if(p){let N=n.bitcrusherFreq*Math.sqrt(l[45]),z=n.bitcrusherFreq*Math.sqrt(v[45]);e.isModActive(t.modulators.dictionary["freq crush"].index,d,y)&&(N=e.getModValue(t.modulators.dictionary["freq crush"].index,d,y,!1)*Math.sqrt(l[45]),z=e.getModValue(t.modulators.dictionary["freq crush"].index,d,y,!0)*Math.sqrt(v[45]));let W=n.bitcrusherQuantization*Math.sqrt(l[44]),H=n.bitcrusherQuantization*Math.sqrt(v[44]);e.isModActive(t.modulators.dictionary["bit crush"].index,d,y)&&(W=e.getModValue(t.modulators.dictionary["bit crush"].index,d,y,!1)*Math.sqrt(l[44]),H=e.getModValue(t.modulators.dictionary["bit crush"].index,d,y,!0)*Math.sqrt(v[44]));let U=t.keys[e.song.key].basePitch+t.pitchesPerOctave*e.song.octave,G=Ne.frequencyFromPitch(U+60)*Math.pow(2,(t.bitcrusherFreqRange-1-N)*t.bitcrusherOctaveStep),u=Ne.frequencyFromPitch(U+60)*Math.pow(2,(t.bitcrusherFreqRange-1-z)*t.bitcrusherOctaveStep),F=Math.min(1,G/h),C=Math.min(1,u/h);this.bitcrusherPhaseDelta=F,this.bitcrusherPhaseDeltaScale=Math.pow(C/F,1/r);let I=2*t.bitcrusherBaseVolume*Math.pow(2,1-Math.pow(2,(t.bitcrusherQuantizationRange-1-W)*.5)),M=2*t.bitcrusherBaseVolume*Math.pow(2,1-Math.pow(2,(t.bitcrusherQuantizationRange-1-H)*.5));this.bitcrusherScale=I,this.bitcrusherScaleScale=Math.pow(M/I,1/r);let q=2*t.bitcrusherBaseVolume*Math.pow(1.5,t.bitcrusherQuantizationRange-1-W),O=2*t.bitcrusherBaseVolume*Math.pow(1.5,t.bitcrusherQuantizationRange-1-H);this.bitcrusherFoldLevel=q,this.bitcrusherFoldLevelScale=Math.pow(O/q,1/r)}if(L){let N=1;if(n.eqFilterType){let H=n.eqFilter;n.eqSubFilters[1]==null&&(n.eqSubFilters[1]=new Ee);let U=n.eqSubFilters[1],G=n.eqFilterSimpleCut,u=n.eqFilterSimplePeak,F=n.eqFilterSimpleCut,C=n.eqFilterSimplePeak,I=!1;e.isModActive(t.modulators.dictionary["eq filt cut"].index,d,y)&&(G=e.getModValue(t.modulators.dictionary["eq filt cut"].index,d,y,!1),F=e.getModValue(t.modulators.dictionary["eq filt cut"].index,d,y,!0),I=!0),e.isModActive(t.modulators.dictionary["eq filt peak"].index,d,y)&&(u=e.getModValue(t.modulators.dictionary["eq filt peak"].index,d,y,!1),C=e.getModValue(t.modulators.dictionary["eq filt peak"].index,d,y,!0),I=!0);let M;if(I){H.convertLegacySettingsForSynth(G,u),U.convertLegacySettingsForSynth(F,C),M=H.controlPoints[0];let q=U.controlPoints[0];M.toCoefficients(pe.tempFilterStartCoefficients,h,1,1),q.toCoefficients(pe.tempFilterEndCoefficients,h,1,1),this.eqFiltersL.length<1&&(this.eqFiltersL[0]=new Re),this.eqFiltersR.length<1&&(this.eqFiltersR[0]=new Re),this.eqFiltersL[0].loadCoefficientsWithGradient(pe.tempFilterStartCoefficients,pe.tempFilterEndCoefficients,1/r,M.type==0),this.eqFiltersR[0].loadCoefficientsWithGradient(pe.tempFilterStartCoefficients,pe.tempFilterEndCoefficients,1/r,M.type==0)}else H.convertLegacySettingsForSynth(G,u,!0),M=H.controlPoints[0],M.toCoefficients(pe.tempFilterStartCoefficients,h,1,1),this.eqFiltersL.length<1&&(this.eqFiltersL[0]=new Re),this.eqFiltersR.length<1&&(this.eqFiltersR[0]=new Re),this.eqFiltersL[0].loadCoefficientsWithGradient(pe.tempFilterStartCoefficients,pe.tempFilterStartCoefficients,1/r,M.type==0),this.eqFiltersR[0].loadCoefficientsWithGradient(pe.tempFilterStartCoefficients,pe.tempFilterStartCoefficients,1/r,M.type==0);this.eqFilterCount=1,N*=M.getVolumeCompensationMult()}else{let H=n.tmpEqFilterStart!=null?n.tmpEqFilterStart:n.eqFilter;for(let U=0;U<H.controlPointCount;U++){let G=H.controlPoints[U],u=n.tmpEqFilterEnd!=null&&n.tmpEqFilterEnd.controlPoints[U]!=null?n.tmpEqFilterEnd.controlPoints[U]:H.controlPoints[U];G.type!=u.type&&(G=u),G.toCoefficients(pe.tempFilterStartCoefficients,h,1,1),u.toCoefficients(pe.tempFilterEndCoefficients,h,1,1),this.eqFiltersL.length<=U&&(this.eqFiltersL[U]=new Re),this.eqFiltersR.length<=U&&(this.eqFiltersR[U]=new Re),this.eqFiltersL[U].loadCoefficientsWithGradient(pe.tempFilterStartCoefficients,pe.tempFilterEndCoefficients,1/r,G.type==0),this.eqFiltersR[U].loadCoefficientsWithGradient(pe.tempFilterStartCoefficients,pe.tempFilterEndCoefficients,1/r,G.type==0),N*=G.getVolumeCompensationMult()}this.eqFilterCount=H.controlPointCount}N=Math.min(3,N);let z=N,W=N;this.eqFilterVolume=z,this.eqFilterVolumeDelta=(W-z)/r}if(x){this.panningMode=n.panMode;let N=l[42]*2-1,z=v[42]*2-1,W=n.pan,H=n.pan;e.isModActive(t.modulators.dictionary.pan.index,d,y)&&(W=e.getModValue(t.modulators.dictionary.pan.index,d,y,!1),H=e.getModValue(t.modulators.dictionary.pan.index,d,y,!0));let U=Math.max(-1,Math.min(1,(W-t.panCenter)/t.panCenter*N)),G=Math.max(-1,Math.min(1,(H-t.panCenter)/t.panCenter*z)),u=Math.cos((1+U)*Math.PI*.25)*1.414,F=Math.cos((1-U)*Math.PI*.25)*1.414,C=Math.cos((1+G)*Math.PI*.25)*1.414,I=Math.cos((1-G)*Math.PI*.25)*1.414,M=h*t.panDelaySecondsMax,q=n.panDelay,O=n.panDelay;e.isModActive(t.modulators.dictionary["pan delay"].index,d,y)&&(q=e.getModValue(t.modulators.dictionary["pan delay"].index,d,y,!1),O=e.getModValue(t.modulators.dictionary["pan delay"].index,d,y,!0));let j=U*q*M/10,te=G*O*M/10,ee=Math.max(0,j),ge=Math.max(0,-j),Ie=Math.max(0,te),_=Math.max(0,-te);this.panningVolumeL=u,this.panningVolumeR=F,this.panningVolumeDeltaL=(C-u)/r,this.panningVolumeDeltaR=(I-F)/r,this.panningOffsetL=this.panningDelayPos-ee+e.panningDelayBufferSize,this.panningOffsetR=this.panningDelayPos-ge+e.panningDelayBufferSize,this.panningOffsetDeltaL=(Ie-ee)/r,this.panningOffsetDeltaR=(_-ge)/r}if(S){let N=l[57],z=v[57],W=n.gain,H=n.gain;e.isModActive(t.modulators.dictionary.gain.index,d,y)&&(W=e.getModValue(t.modulators.dictionary.gain.index,d,y,!1),H=e.getModValue(t.modulators.dictionary.gain.index,d,y,!0));let U=Math.min(t.gainRangeMult,N*W/(t.volumeRange/2*t.gainRangeMult))*t.gainRangeMult,G=Math.min(t.gainRangeMult,z*H/(t.volumeRange/2*t.gainRangeMult))*t.gainRangeMult;this.gain=U,this.gainDelta=(G-U)/r}if(b){let N=l[46],z=v[46],W=n.chorus,H=n.chorus;e.isModActive(t.modulators.dictionary.chorus.index,d,y)&&(W=e.getModValue(t.modulators.dictionary.chorus.index,d,y,!1),H=e.getModValue(t.modulators.dictionary.chorus.index,d,y,!0));let U=Math.min(1,N*W/(t.chorusRange-1)),G=Math.min(1,z*H/(t.chorusRange-1));U=U*.6+Math.pow(U,6)*.4,G=G*.6+Math.pow(G,6)*.4;let u=1/Math.sqrt(3*U*U+1),F=1/Math.sqrt(3*G*G+1);this.chorusVoiceMult=U,this.chorusVoiceMultDelta=(G-U)/r,this.chorusCombinedMult=u,this.chorusCombinedMultDelta=(F-u)/r}if(w){let N=l[58],z=v[58],W=n.flanger,H=n.flanger;e.isModActive(t.modulators.dictionary.flanger.index,d,y)&&(W=e.getModValue(t.modulators.dictionary.flanger.index,d,y,!1),H=e.getModValue(t.modulators.dictionary.flanger.index,d,y,!0));let U=Math.min(1,N*W/(t.flangerRange-1)),G=Math.min(1,z*H/(t.flangerRange-1)),u=l[59],F=v[59],C=n.flangerSpeed,I=n.flangerSpeed;e.isModActive(t.modulators.dictionary["flanger speed"].index,d,y)&&(C=e.getModValue(t.modulators.dictionary["flanger speed"].index,d,y,!1),I=e.getModValue(t.modulators.dictionary["flanger speed"].index,d,y,!0));let M=u*C+2,q=F*I+2,O=l[60],j=v[60],te=n.flangerDepth,ee=n.flangerDepth;e.isModActive(t.modulators.dictionary["flanger depth"].index,d,y)&&(te=e.getModValue(t.modulators.dictionary["flanger depth"].index,d,y,!1),ee=e.getModValue(t.modulators.dictionary["flanger depth"].index,d,y,!0));let ge=O*te*2+2,Ie=j*ee*2+2,_=l[61],V=v[61],K=n.flangerFeedback,Q=n.flangerFeedback;e.isModActive(t.modulators.dictionary["flanger feedback"].index,d,y)&&(K=e.getModValue(t.modulators.dictionary["flanger feedback"].index,d,y,!1),Q=e.getModValue(t.modulators.dictionary["flanger feedback"].index,d,y,!0));let Z=_*K*1.5,ae=V*Q*1.5;this.flanger=U,this.flangerDelta=(G-U)/r,this.flangerSpeed=M,this.flangerSpeedDelta=(q-M)/r,this.flangerDepth=ge,this.flangerDepthDelta=(Ie-ge)/r,this.flangerFeedback=Math.sqrt(Z)/Math.sqrt(t.flangerFeedbackRange),this.flangerFeedbackDelta=(Math.sqrt(ae)/Math.sqrt(t.flangerFeedbackRange)-Math.sqrt(Z)/Math.sqrt(t.flangerFeedbackRange))/r}if(f){let N=n.ringModulation,z=n.ringModulation,W=l[50],H=v[50],U=Math.min(1,n.ringModulationHz/(t.ringModHzRange-1)),G=Math.min(1,n.ringModulationHz/(t.ringModHzRange-1)),u=l[51],F=v[51];e.isModActive(t.modulators.dictionary["ring modulation"].index,d,y)&&(N=e.getModValue(t.modulators.dictionary["ring modulation"].index,d,y,!1),z=e.getModValue(t.modulators.dictionary["ring modulation"].index,d,y,!0)),e.isModActive(t.modulators.dictionary["ring mod hertz"].index,d,y)&&(U=Math.min(1,Math.max(0,e.getModValue(t.modulators.dictionary["ring mod hertz"].index,d,y,!1)/(t.ringModHzRange-1))),G=Math.min(1,Math.max(0,e.getModValue(t.modulators.dictionary["ring mod hertz"].index,d,y,!1)/(t.ringModHzRange-1)))),U*=u,G*=F;let C=Math.min(1,N*W/(t.ringModRange-1)),I=Math.min(1,z*H/(t.ringModRange-1));this.ringModMix=C,this.ringModMixDelta=(I-C)/r,this.ringModHzOffset=n.ringModHzOffset;let M=Math.max(0,Un(U))/e.samplesPerSecond,q=Math.max(0,Un(G))/e.samplesPerSecond;this.ringModMixFadeDelta=0,this.ringModMixFade<0&&(this.ringModMixFade=0),M<=0&&q<=0&&this.ringModMixFade!=0?this.ringModMixFadeDelta=this.ringModMixFade/-10:M>0&&q>0&&(this.ringModMixFade=1),this.ringModPhaseDelta=M,this.ringModPhaseDeltaScale=M==0?1:Math.pow(q/M,1/r),this.ringModWaveformIndex=n.ringModWaveformIndex,this.ringModPulseWidth=n.ringModPulseWidth}let E=0,D=0;if(P){let N=l[47],z=v[47],W=n.echoSustain,H=n.echoSustain;e.isModActive(t.modulators.dictionary.echo.index,d,y)&&(W=Math.max(0,e.getModValue(t.modulators.dictionary.echo.index,d,y,!1)),H=Math.max(0,e.getModValue(t.modulators.dictionary.echo.index,d,y,!0)));let U=Math.min(1,Math.pow(N*W/t.echoSustainRange,1.1))*.9,G=Math.min(1,Math.pow(z*H/t.echoSustainRange,1.1))*.9;this.echoMult=U,this.echoMultDelta=Math.max(0,(G-U)/r),E=Math.max(U,G);let u=l[56],F=v[56],C=n.echoDelay*u,I=n.echoDelay*F;e.isModActive(t.modulators.dictionary["echo delay"].index,d,y)&&(C=e.getModValue(t.modulators.dictionary["echo delay"].index,d,y,!1)*u,I=e.getModValue(t.modulators.dictionary["echo delay"].index,d,y,!0)*F);let M=Math.round((C+1)*t.echoDelayStepTicks*s),q=Math.round((I+1)*t.echoDelayStepTicks*s);this.echoDelayOffsetEnd!=null?this.echoDelayOffsetStart=this.echoDelayOffsetEnd:this.echoDelayOffsetStart=M,this.echoDelayOffsetEnd=q,D=(this.echoDelayOffsetStart+this.echoDelayOffsetEnd)*.5/h,this.echoDelayOffsetRatio=0,this.echoDelayOffsetRatioDelta=1/r,this.echoPingPong=(n.echoPingPong/t.panMax-.5)*2;let O=2*Math.PI*t.echoShelfHz/e.samplesPerSecond;pe.tempFilterStartCoefficients.highShelf1stOrder(O,t.echoShelfGain),this.echoShelfA1=pe.tempFilterStartCoefficients.a[1],this.echoShelfB0=pe.tempFilterStartCoefficients.b[0],this.echoShelfB1=pe.tempFilterStartCoefficients.b[1]}let R=0;if(B){let N=l[48],z=v[48],W=n.reverb,H=n.reverb;e.isModActive(t.modulators.dictionary.reverb.index,d,y)&&(W=e.getModValue(t.modulators.dictionary.reverb.index,d,y,!1),H=e.getModValue(t.modulators.dictionary.reverb.index,d,y,!0)),e.isModActive(t.modulators.dictionary["song reverb"].index,d,y)&&(W*=(e.getModValue(t.modulators.dictionary["song reverb"].index,void 0,void 0,!1)-t.modulators.dictionary["song reverb"].convertRealFactor)/t.reverbRange,H*=(e.getModValue(t.modulators.dictionary["song reverb"].index,void 0,void 0,!0)-t.modulators.dictionary["song reverb"].convertRealFactor)/t.reverbRange);let U=Math.min(1,Math.pow(N*W/t.reverbRange,.667))*.425,G=Math.min(1,Math.pow(z*H/t.reverbRange,.667))*.425;this.reverbMult=U,this.reverbMultDelta=(G-U)/r,R=Math.max(U,G);let u=2*Math.PI*t.reverbShelfHz/e.samplesPerSecond;pe.tempFilterStartCoefficients.highShelf1stOrder(u,t.reverbShelfGain),this.reverbShelfA1=pe.tempFilterStartCoefficients.a[1],this.reverbShelfB0=pe.tempFilterStartCoefficients.b[0],this.reverbShelfB1=pe.tempFilterStartCoefficients.b[1]}if(!a.tonesAddedInThisTick&&!a.flushingDelayLines){let z=-Math.log2(.00390625);if(b&&(a.delayDuration+=t.chorusMaxDelay),w&&(a.delayDuration+=t.flangerMaxDelay),P){let W=Math.pow(E,1/D),U=-1/Math.log2(W)*z;a.delayDuration+=U}if(B){let W=R*2,H=t.reverbDelayBufferSize/4/h,U=Math.pow(W,1/H),u=-1/Math.log2(U)*z;a.delayDuration+=u}g&&(this.computeGrains=!1)}else b&&(a.totalDelaySamples+=e.chorusDelayBufferSize),w&&(a.totalDelaySamples+=e.flangerDelayBufferSize),P&&(a.totalDelaySamples+=this.echoDelayLineL.length),B&&(a.totalDelaySamples+=t.reverbDelayBufferSize),g&&(a.totalDelaySamples+=this.granularMaximumDelayTimeInSeconds)}};function ta(o,e){for(let i=0;i<o.length;i++)o[i]*=e}function Pr(o){return!!o&&!(o&o-1)}function zi(o){if(!Pr(o))throw new Error("FFT array length must be a power of 2.");return Math.round(Math.log(o)/Math.log(2))}function Er(o,e){let i=zi(e);if(i>16)throw new Error("FFT array length must not be greater than 2^16.");let n=16-i;for(let a=0;a<e;a++){let s;if(s=(a&43690)>>1|(a&21845)<<1,s=(s&52428)>>2|(s&13107)<<2,s=(s&61680)>>4|(s&3855)<<4,s=(s>>8|(s&255)<<8)>>n,s>a){let r=o[a];o[a]=o[s],o[s]=r}}}function gn(o,e){let i=zi(e);if(e<4)throw new Error("FFT array length must be at least 4.");for(let n=i-1;n>=2;n--){let a=1<<n,s=a>>1,r=a<<1,c=Math.PI*2/r,d=Math.cos(c),y=Math.sin(c),l=2*d;for(let v=0;v<e;v+=r){let h=v,g=h+s,f=h+a,m=f+s,p=f+a,S=o[h],x=o[f];o[h]=S+x,o[g]*=2,o[f]=S-x,o[m]*=2;let w=d,b=-y,P=1,B=0;for(let L=1;L<s;L++){let E=h+L,D=f-L,R=f+L,N=p-L,z=o[E],W=o[D],H=o[R],U=o[N],G=z-W,u=H+U;o[E]=z+W,o[D]=U-H,o[R]=G*w-u*b,o[N]=u*w+G*b;let F=l*w-P,C=l*b-B;P=w,B=b,w=F,b=C}}}for(let n=0;n<e;n+=4){let a=n+1,s=n+2,r=n+3,c=o[n],d=o[a]*2,y=o[s],l=o[r]*2,v=c+y,h=c-y;o[n]=v+d,o[a]=v-d,o[s]=h+l,o[r]=h-l}Er(o,e)}var vn=class{wave=null;ae=-1;getCustomWave(e,i){if(this.ae==e.hash)return this.wave;this.ae=e.hash;let n=t.spectrumNoiseLength;(this.wave==null||this.wave.length!=n+1)&&(this.wave=new Float32Array(n+1));let a=this.wave;for(let l=0;l<n;l++)a[l]=0;let s=14,r=.25,c=[0,1/7,Math.log2(5/4),3/7,Math.log2(3/2),5/7,6/7];function d(l){return i+Math.floor(l/t.spectrumControlPointsPerOctave)+c[(l+t.spectrumControlPointsPerOctave)%t.spectrumControlPointsPerOctave]}let y=1;for(let l=0;l<t.spectrumControlPoints+1;l++){let v=l<=0?0:e.spectrum[l-1],h=l>=t.spectrumControlPoints?e.spectrum[t.spectrumControlPoints-1]:e.spectrum[l],g=d(l-1),f=d(l);l>=t.spectrumControlPoints&&(f=s+(f-s)*r),!(v==0&&h==0)&&(y+=.02*Pt(a,n,g,f,v/t.spectrumMax,h/t.spectrumMax,-.5))}return e.spectrum[t.spectrumControlPoints-1]>0&&(y+=.02*Pt(a,n,s+(d(t.spectrumControlPoints)-s)*r,s,e.spectrum[t.spectrumControlPoints-1]/t.spectrumMax,0,-.5)),gn(a,n),ta(a,5/(Math.sqrt(n)*Math.pow(y,.75))),a[n]=a[0],a}},na=class{wave=null;ae=-1;he;getCustomWave(e,i){if(this.ae==e.hash&&this.he==i)return this.wave;this.ae=e.hash,this.he=i;let n=i==7?t.harmonicsRenderedForPickedString:t.harmonicsRendered,a=t.harmonicsWavelength,s=ln(0,null,null);(this.wave==null||this.wave.length!=a+1)&&(this.wave=new Float32Array(a+1));let r=this.wave;for(let l=0;l<a;l++)r[l]=0;let c=-.25,d=1;for(let l=0;l<n;l++){let v=l+1,h=l<t.harmonicsControlPoints?e.harmonics[l]:e.harmonics[t.harmonicsControlPoints-1];l>=t.harmonicsControlPoints&&(h*=1-(l-t.harmonicsControlPoints)/(n-t.harmonicsControlPoints));let g=h/t.harmonicsMax,f=Math.pow(2,h-t.harmonicsMax+1)*Math.sqrt(g);l<t.harmonicsControlPoints&&(d+=f),f*=Math.pow(v,c),f*=s[l+589],r[a-v]=f}gn(r,a);let y=1/Math.pow(d,.7);for(let l=0;l<r.length;l++)r[l]*=y;return qa(r),r[a]=r[0],r}},bn=class{delayLine=null;delayIndex;allPassSample;allPassPrevInput;sustainFilterSample;sustainFilterPrevOutput2;sustainFilterPrevInput1;sustainFilterPrevInput2;fractionalDelaySample;prevDelayLength;delayLengthDelta;delayResetOffset;allPassG=0;allPassGDelta=0;sustainFilterA1=0;sustainFilterA1Delta=0;sustainFilterA2=0;sustainFilterA2Delta=0;sustainFilterB0=0;sustainFilterB0Delta=0;sustainFilterB1=0;sustainFilterB1Delta=0;sustainFilterB2=0;sustainFilterB2Delta=0;constructor(){this.reset()}reset(){this.delayIndex=-1,this.allPassSample=0,this.allPassPrevInput=0,this.sustainFilterSample=0,this.sustainFilterPrevOutput2=0,this.sustainFilterPrevInput1=0,this.sustainFilterPrevInput2=0,this.fractionalDelaySample=0,this.prevDelayLength=-1,this.delayResetOffset=0}update(e,i,n,a,s,r,c,d){let y=2*Math.PI*t.pickedStringDispersionCenterFreq/e.samplesPerSecond,l=this.prevDelayLength,v=n.phaseDeltas[a],h=n.phaseDeltaScales[a],g=v*Math.pow(h,s),f=Math.PI*2*v,m=Math.PI*2*g,p=f*2,S=m*2,x=Math.min(Math.PI,f*t.pickedStringDispersionFreqMult*Math.pow(y/f,t.pickedStringDispersionFreqScale)),w=Math.min(Math.PI,m*t.pickedStringDispersionFreqMult*Math.pow(y/m,t.pickedStringDispersionFreqScale)),b=2*Math.PI*t.pickedStringShelfHz/e.samplesPerSecond,P=(Math.pow(100,r)-1)/99,B=(Math.pow(100,c)-1)/99,L=d==1?.25:0,E=15.6,D=3*e.samplesPerSecond/48e3,R=Math.pow(.5,P*Math.pow(b/(f*E),1+2*L)*E),N=Math.pow(.5,B*Math.pow(b/(m*E),1+2*L)*E),z=Math.pow(R,.002),W=Math.pow(N,.002);pe.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(x),e.tempFrequencyResponse.analyze(pe.tempFilterStartCoefficients,p);let H=pe.tempFilterStartCoefficients.b[0],U=-e.tempFrequencyResponse.angle()/p;pe.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(w),e.tempFrequencyResponse.analyze(pe.tempFilterEndCoefficients,S);let G=pe.tempFilterEndCoefficients.b[0],u=-e.tempFrequencyResponse.angle()/S,F;($=>($[$.bright=0]="bright",$[$.normal=1]="normal",$[$.resonant=2]="resonant"))(F||={});let C=d==0?0:1;if(C==0){let re=Math.pow(R,t.stringDecayRate),ce=Math.pow(N,t.stringDecayRate);pe.tempFilterStartCoefficients.highShelf2ndOrder(b,re,.5),pe.tempFilterEndCoefficients.highShelf2ndOrder(b,ce,.5)}else{let re=Math.pow(C==1?0:1,.25),ce=Math.pow(D*D*f*3.3*48e3/e.samplesPerSecond,.5+L)/D/Math.pow(P,.5),X=Math.pow(D*D*m*3.3*48e3/e.samplesPerSecond,.5+L)/D/Math.pow(B,.5),$=ce*Math.pow(2,.5-1.75*(1-Math.pow(1-re,.85))),ue=X*Math.pow(2,.5-1.75*(1-Math.pow(1-re,.85))),ve=Math.pow(2,-Math.pow(2,-Math.pow(re,.9))),Fe=Math.pow(2,-Math.pow(2,-Math.pow(re,.9)));pe.tempFilterStartCoefficients.lowPass2ndOrderButterworth(_n($),ve),pe.tempFilterEndCoefficients.lowPass2ndOrderButterworth(_n(ue),Fe)}e.tempFrequencyResponse.analyze(pe.tempFilterStartCoefficients,p);let I=pe.tempFilterStartCoefficients.a[1],M=pe.tempFilterStartCoefficients.a[2],q=pe.tempFilterStartCoefficients.b[0]*z,O=pe.tempFilterStartCoefficients.b[1]*z,j=pe.tempFilterStartCoefficients.b[2]*z,te=-e.tempFrequencyResponse.angle()/p;e.tempFrequencyResponse.analyze(pe.tempFilterEndCoefficients,S);let ee=pe.tempFilterEndCoefficients.a[1],ge=pe.tempFilterEndCoefficients.a[2],Ie=pe.tempFilterEndCoefficients.b[0]*W,_=pe.tempFilterEndCoefficients.b[1]*W,V=pe.tempFilterEndCoefficients.b[2]*W,K=-e.tempFrequencyResponse.angle()/S,Q=1/v,Z=1/g,ae=Math.ceil(Math.max(Q,Z)*2),me=Q-U-te,oe=Z-u-K;this.prevDelayLength=me,this.delayLengthDelta=(oe-me)/s,this.allPassG=H,this.sustainFilterA1=I,this.sustainFilterA2=M,this.sustainFilterB0=q,this.sustainFilterB1=O,this.sustainFilterB2=j,this.allPassGDelta=(G-H)/s,this.sustainFilterA1Delta=(ee-I)/s,this.sustainFilterA2Delta=(ge-M)/s,this.sustainFilterB0Delta=(Ie-q)/s,this.sustainFilterB1Delta=(_-O)/s,this.sustainFilterB2Delta=(V-j)/s;let ye=Math.abs(Math.log2(me/l))>.01,ie=this.delayIndex==-1||ye;if(this.delayLine==null||this.delayLine.length<=ae){let re=Math.ceil(2*e.samplesPerSecond/Ne.frequencyFromPitch(12)),ce=new Float32Array(Je(Math.max(re,ae)));if(!ie&&this.delayLine!=null){let X=this.delayLine.length-1>>0,$=this.delayIndex+this.delayResetOffset;this.delayIndex=this.delayLine.length-this.delayResetOffset;for(let ue=0;ue<this.delayLine.length;ue++)ce[ue]=this.delayLine[$+ue&X]}this.delayLine=ce}let de=this.delayLine,le=de.length-1>>0;if(ie){this.delayIndex=0,this.allPassSample=0,this.allPassPrevInput=0,this.sustainFilterSample=0,this.sustainFilterPrevOutput2=0,this.sustainFilterPrevInput1=0,this.sustainFilterPrevInput2=0,this.fractionalDelaySample=0;let re=-me,ce=Math.floor(re-Q/2),X=Math.ceil(ce+Q*2);this.delayResetOffset=X;for(let De=ce;De<=X;De++)de[De&le]=0;let $=i.waveL,ue=$.length-1,ve=ue/Q,Fe=Math.min(Q*.2,e.samplesPerSecond*.003),Y=Math.ceil(re),he=re+Q+Fe,Se=he,Me=(Y-re)*ve,Ae=0;for(let De=Y;De<=Se;De++){let ke=Me|0,Le=ke%ue,Ce=$[Le],qe=Me-ke;Ce+=($[Le+1]-Ce)*qe;let Be=(Ce-Ae)/ve,We=Math.min(1,(De-re)/Fe),Xe=Math.min(1,(he-De)/Fe),Oe=We*Xe,Ze=Oe*Oe*(3-2*Oe);de[De&le]+=Be*Ze,Ae=Ce,Me+=ve}}}},jt=class o{awake=!1;computed=!1;tonesAddedInThisTick=!1;flushingDelayLines=!1;deactivateAfterThisTick=!1;attentuationProgress=0;flushedSamples=0;activeTones=new ct;activeModTones=new ct;releasedTones=new ct;liveInputTones=new ct;type=0;synthesizer=null;waveL=null;waveR=null;isStereo=!1;isUsingAdvancedLoopControls=!1;chipWaveLoopStart=0;chipWaveLoopEnd=0;chipWaveLoopMode=0;chipWavePlayBackwards=!1;chipWaveStartOffset=0;chipWaveInStereo=!1;noisePitchFilterMult=1;unison=null;unisonVoices=1;unisonSpread=0;unisonOffset=0;unisonExpression=1.4;unisonSign=1;chord=null;effects=[];volumeScale=0;aliases=!1;arpTime=0;vibratoTime=0;nextVibratoTime=0;envelopeTime=[];mixVolume=1;mixVolumeDelta=0;delayDuration=0;totalDelaySamples=0;delayInputMult=0;delayInputMultDelta=0;spectrumWave=new vn;harmonicsWave=new na;drumsetSpectrumWaves=[];constructor(){for(let e=0;e<t.drumCount;e++)this.drumsetSpectrumWaves[e]=new vn}envelopeComputer=new vt;allocateNecessaryBuffers(e,i,n){for(let a=0;a<i.effects.length;a++)if(this.effects[a]!=null){let s=i.effects[a];this.effects[a].allocateNecessaryBuffers(e,i,s,n)}}deactivate(){for(let e=0;e<this.effects.length;e++)this.effects[e]!=null&&this.effects[e].deactivate();this.volumeScale=1,this.aliases=!1,this.awake=!1,this.flushingDelayLines=!1,this.deactivateAfterThisTick=!1,this.attentuationProgress=0,this.flushedSamples=0}resetAllEffects(){this.deactivate(),this.vibratoTime=0,this.nextVibratoTime=0,this.arpTime=0;for(let e=0;e<t.maxEnvelopeCount+1;e++)this.envelopeTime[e]=0;this.envelopeComputer.reset();for(let e=0;e<this.effects.length;e++)this.effects[e]!=null&&this.effects[e].reset()}compute(e,i,n,a,s,r,c){this.computed=!0,this.type=i.type,this.synthesizer=pe.getInstrumentSynthFunction(i),this.unison=t.unisons[i.unison],this.chord=i.getChord(),this.noisePitchFilterMult=t.chipNoises[i.chipNoise].pitchFilterMult,this.aliases=i.aliases,this.volumeScale=1,this.delayDuration=0,this.totalDelaySamples=0;for(let b=0;b<i.effects.length;b++)this.effects[b]==null&&(this.effects[b]=new yn(i.effects[b].type));this.effects.length=i.effects.length,this.allocateNecessaryBuffers(e,i,n);let d=e.samplesPerSecond;this.updateWaves(i,d);let l=e.getTicksIntoBar(),v=n/e.samplesPerSecond,h=e.getCurrentPart(),g=[];for(let b=0;b<t.maxEnvelopeCount;b++)g[b]=0;let f=t.arpSpeedScale[i.envelopeSpeed];e.isModActive(t.modulators.dictionary["envelope speed"].index,r,c)&&(f=Math.max(0,Math.min(t.arpSpeedScale.length-1,e.getModValue(t.modulators.dictionary["envelope speed"].index,r,c,!1))),Number.isInteger(f)?f=t.arpSpeedScale[f]:f=(1-f%1)*t.arpSpeedScale[Math.floor(f)]+f%1*t.arpSpeedScale[Math.ceil(f)]);for(let b=0;b<i.envelopeCount;b++){let P=i.envelopes[b].perEnvelopeSpeed;e.isModActive(t.modulators.dictionary["individual envelope speed"].index,r,c)&&i.envelopes[b].tempEnvelopeSpeed!=null&&(P=i.envelopes[b].tempEnvelopeSpeed),g[b]=f*P}this.envelopeComputer.computeEnvelopes(i,h,this.envelopeTime,l,v,s,g,this,e,r,c);let m=this.envelopeComputer.envelopeStarts,p=this.envelopeComputer.envelopeEnds;for(let b=0;b<i.effects.length;b++)if(this.effects[b]!=null){let P=i.effects[b];this.effects[b].compute(e,i,P,this,n,a,s,r,c,m,p)}this.mixVolume=m[1]*pe.instrumentVolumeToVolumeMult(i.volume);let S=p[1]*pe.instrumentVolumeToVolumeMult(i.volume);if(e.isModActive(t.modulators.dictionary["post volume"].index,r,c)){let b=e.getModValue(t.modulators.dictionary["post volume"].index,r,c,!1),P=e.getModValue(t.modulators.dictionary["post volume"].index,r,c,!0);this.mixVolume*=b<=0?(b+t.volumeRange/2)/(t.volumeRange/2):pe.instrumentVolumeToVolumeMult(b),S*=P<=0?(P+t.volumeRange/2)/(t.volumeRange/2):pe.instrumentVolumeToVolumeMult(P)}e.isModActive(t.modulators.dictionary["song volume"].index)&&(this.mixVolume*=e.getModValue(t.modulators.dictionary["song volume"].index,void 0,void 0,!1)/100,S*=e.getModValue(t.modulators.dictionary["song volume"].index,void 0,void 0,!0)/100),this.mixVolumeDelta=(S-this.mixVolume)/a;let x=1,w=1;if(this.tonesAddedInThisTick)this.attentuationProgress=0,this.flushedSamples=0,this.flushingDelayLines=!1;else if(this.flushingDelayLines)x=0,w=0,this.flushedSamples+=a,this.flushedSamples>=this.totalDelaySamples&&(this.deactivateAfterThisTick=!0);else{this.attentuationProgress==0;let P=n/d/this.delayDuration,B=this.attentuationProgress+P;B>=1&&(w=0),this.attentuationProgress=B,this.attentuationProgress>=1&&(this.flushingDelayLines=!0)}this.delayInputMult=x,this.delayInputMultDelta=(w-x)/a,this.envelopeComputer.clearEnvelopes()}updateWaves(e,i){if(this.volumeScale=1,e.type==0)this.waveL=this.aliases?t.rawChipWaves[e.chipWave].samples:t.chipWaves[e.chipWave].samples,this.waveR=this.aliases?t.rawChipWaves[e.chipWave].samplesR||t.rawChipWaves[e.chipWave].samples:t.chipWaves[e.chipWave].samplesR||t.chipWaves[e.chipWave].samples,this.isUsingAdvancedLoopControls=e.isUsingAdvancedLoopControls,this.chipWaveLoopStart=e.chipWaveLoopStart,this.chipWaveLoopEnd=e.chipWaveLoopEnd,this.chipWaveLoopMode=e.chipWaveLoopMode,this.chipWavePlayBackwards=e.chipWavePlayBackwards,this.chipWaveStartOffset=e.chipWaveStartOffset,this.chipWaveInStereo=e.chipWaveInStereo,this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==6)this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==9)this.waveL=this.aliases?e.customChipWave:e.customChipWaveIntegral,this.waveR=this.aliases?e.customChipWave:e.customChipWaveIntegral,this.volumeScale=.05,this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==2)this.waveL=ln(e.chipNoise,gn,ta),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==5)this.waveL=this.harmonicsWave.getCustomWave(e.harmonicsWave,e.type),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==7)this.waveL=this.harmonicsWave.getCustomWave(e.harmonicsWave,e.type),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==3)this.waveL=this.spectrumWave.getCustomWave(e.spectrumWave,8),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==4){for(let n=0;n<t.drumCount;n++)this.drumsetSpectrumWaves[n].getCustomWave(e.drumsetSpectrumWaves[n],o.ye(n));this.waveL=null,this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign}else this.waveL=null}getDrumsetWave(e){if(this.type==4)return this.drumsetSpectrumWaves[e].wave;throw new Error("Unhandled instrument type in getDrumsetWave")}static drumsetIndexReferenceDelta(e){return Ne.frequencyFromPitch(t.spectrumBasePitch+e*6)/44100}static ye(e){return 15+Math.log2(o.drumsetIndexReferenceDelta(e))}effectsIncludeType(e){for(let i=0;i<this.effects.length;i++)if(this.effects[i]!=null&&this.effects[i].type==e)return!0;return!1}};var Np=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);var we=class o{static version="v1";static versionDisplayName="DragonBox";static releaseNotesURL="./patch_notes.html";static isOnMac=/^Mac/i.test(navigator.platform)||/Mac OS X/i.test(navigator.userAgent)||/^(iPhone|iPad|iPod)/i.test(navigator.platform)||/(iPhone|iPad|iPod)/i.test(navigator.userAgent);static ctrlSymbol=o.isOnMac?"\u2318":"Ctrl+";static ctrlName=o.isOnMac?"command":"control";static customSamples;static presetCategories=fe([{name:"Custom Instruments",presets:fe([{name:Qe[0],customType:0},{name:Qe[1],customType:1},{name:Qe[2],customType:2},{name:Qe[3],customType:3},{name:Qe[4],customType:4},{name:Qe[5],customType:5},{name:Qe[6],customType:6},{name:Qe[7],customType:7},{name:Qe[8],customType:8},{name:Qe[9],customType:9},{name:Qe[11],customType:11}])},{name:"Retro Presets",presets:fe([{name:"square wave",midiProgram:80,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"square",unison:"none",envelopes:[]}},{name:"triangle wave",midiProgram:71,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"triangle",unison:"none",envelopes:[]}},{name:"square lead",midiProgram:80,generalMidi:!0,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",wave:"square",unison:"hum",envelopes:[]}},{name:"sawtooth lead 1",midiProgram:81,generalMidi:!0,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",wave:"sawtooth",unison:"shimmer",envelopes:[]}},{name:"sawtooth lead 2",midiProgram:81,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1}],effects:["vibrato","aliasing"],vibrato:"light",transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"hum",envelopes:[]}},{name:"chip noise",midiProgram:116,isNoise:!0,settings:{type:"noise",transition:"hard",effects:["aliasing"],chord:"arpeggio",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"steady",wave:"retro"}},{name:"supersaw lead",midiProgram:81,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:2}],effects:["reverb"],reverb:67,fadeInSeconds:0,fadeOutTicks:-6,pulseWidth:50,dynamism:100,spread:58,shape:0,envelopes:[]}},{name:"FM twang",midiProgram:32,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:0},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1}]}},{name:"FM bass",midiProgram:36,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"custom interval",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"2\xD7",amplitude:11},{frequency:"1\xD7",amplitude:7},{frequency:"1\xD7",amplitude:9},{frequency:"20\xD7",amplitude:3}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 2",index:3}]}},{name:"FM flute",midiProgram:73,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:6},{frequency:"1\xD7",amplitude:0},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1}]}},{name:"FM organ",midiProgram:16,settings:{type:"FM",eqFilter:[],effects:["vibrato"],vibrato:"delayed",transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"custom interval",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:14},{frequency:"2\xD7",amplitude:14},{frequency:"1\xD7",amplitude:11},{frequency:"2\xD7",amplitude:11}],envelopes:[]}},{name:"FM sine",midiProgram:55,settings:{type:"FM",eqFilter:[],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,effects:[],panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine"},{frequency:"1\xD7",amplitude:0,waveform:"sine"},{frequency:"1\xD7",amplitude:0,waveform:"sine"},{frequency:"1\xD7",amplitude:0,waveform:"sine"}],envelopes:[]}},{name:"NES Pulse",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",vibrato:"none",envelopes:[],customChipWave:[-24,-24,-24,-24,-23,-23,-23,-23,-22,-22,-22,-22,-21,-21,-21,-21,-20,-20,-20,-20,-19,-19,-19,-19,-18,-18,-18,-18,-17,-17,-17,-17,24,24,24,24,23,23,23,23,22,22,22,22,21,21,21,21,20,20,20,20,19,19,19,19,18,18,18,18,17,17,17,17]}},{name:"Gameboy Pulse",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-20,-17,-15,-13,-13,-11,-11,-11,-9,-9,-9,-9,-7,-7,-7,-7,-7,-5,-5,-5,-5,-5,-5,-3,-3,-3,-3,-3,-3,-3,-3,24,20,17,15,13,13,11,11,11,9,9,9,9,7,7,7,7,7,5,5,5,5,5,5,3,3,3,3,3,3,3,3]}},{name:"VRC6 Sawtooth",midiProgram:81,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-20,-16,-13,-10,-8,-6,-5,-4,-4,0,0,0,0,4,4,4,4,4,4,8,8,8,8,8,8,8,8,12,12,12,12,12,12,12,12,16,16,16,16,16,16,16,16,20,20,20,20,20,20,20,20,24,24,24,24,24,24,24,24,24,24,24,24]}},{name:"Atari Square",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-24,-24,-23,-23,-23,-22,-22,-22,-21,-21,-21,-20,-20,-20,-19,-19,-19,-18,-18,-18,-17,-17,-17,-16,-16,-16,-15,-15,-15,-14,-14,-14,-13,-13,-13,24,24,24,23,23,23,22,22,22,21,21,21,20,20,20,19,19,19,18,18,18,17,17,17,16,16,15,15]}},{name:"Atari Bass",midiProgram:36,settings:{type:"custom chip",effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,-24,-24,-24,24,24,24,-24,-24,-24,24,24,24,-24,-24,-24,24,24,-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,-24,-24,24,24,24,24,24,-24,-24,-24,-24,24,24,-24,-24,24,24]}},{name:"Sunsoft Bass",midiProgram:36,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[24,24,15,15,9,9,-4,-4,0,0,-13,-13,-19,-19,-24,-24,-24,-24,-10,-10,0,0,-7,-7,-7,-7,0,0,6,6,-4,-4,3,3,-4,-4,3,3,3,3,9,9,15,15,15,15,6,6,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,3,3,12,12,24,24]}}])},{name:"Keyboard Presets",presets:fe([{name:"grand piano 1",midiProgram:0,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:2e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.125}],reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,100,86,86,86,71,71,71,0,86,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],unison:"piano",stringSustain:79,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}},{name:"bright piano",midiProgram:1,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.7071},{type:"high-pass",cutoffHz:148.65,linearGain:.5},{type:"peak",cutoffHz:3363.59,linearGain:1.4142}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",harmonics:[100,100,86,86,71,71,0,71,71,71,71,71,71,14,57,57,57,57,57,57,29,57,57,57,57,57,57,57],unison:"piano",stringSustain:86,envelopes:[]}},{name:"electric grand",midiProgram:2,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"1/8 pulse",unison:"shimmer",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"honky-tonk piano",midiProgram:3,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,100,86,71,86,71,43,71,43,43,57,57,57,29,57,57,57,57,57,57,43,57,57,57,43,43,43,43],unison:"honky tonk",stringSustain:71,envelopes:[]}},{name:"electric piano 1",midiProgram:4,generalMidi:!0,settings:{type:"harmonics",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:.5}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",harmonics:[86,100,100,71,71,57,57,43,43,43,29,29,29,14,14,14,0,0,0,0,0,57,0,0,0,0,0,0],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"electric piano 2",midiProgram:5,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:12},{frequency:"1\xD7",amplitude:6},{frequency:"1\xD7",amplitude:9},{frequency:"16\xD7",amplitude:6}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:3}]}},{name:"harpsichord",midiProgram:6,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:250,linearGain:.3536},{type:"peak",cutoffHz:11313.71,linearGain:2.8284}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",harmonics:[100,100,100,86,57,86,86,86,86,57,57,71,71,86,86,71,71,86,86,71,71,71,71,71,71,71,71,71],unison:"none",stringSustain:79,envelopes:[]}},{name:"clavinet",midiProgram:7,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.3536}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"3\u27F2",feedbackAmplitude:6,operators:[{frequency:"3\xD7",amplitude:15},{frequency:"~1\xD7",amplitude:6},{frequency:"8\xD7",amplitude:4},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"feedbackAmplitude",envelope:"twang 2"}]}},{name:"dulcimer",midiProgram:15,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,100,100,86,100,86,57,100,100,86,100,86,100,86,100,71,57,71,71,100,86,71,86,86,100,86,86,86],unison:"piano",stringSustain:79,envelopes:[]}},{name:"grand piano 2",midiProgram:0,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:2e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.125}],reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,86,86,86,86,71,71,57,0,57,29,43,57,57,57,43,43,0,29,43,43,43,43,43,43,29,0,29],unison:"piano",stringSustain:79,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}},{name:"grand piano 3",midiProgram:0,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:1681.79,linearGain:4},{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"peak",cutoffHz:3363.59,linearGain:4},{type:"peak",cutoffHz:2378.41,linearGain:.25}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:125,linearGain:.0884}],reverb:67,fadeInSeconds:0,fadeOutTicks:48,harmonics:[100,100,86,86,86,71,71,71,0,71,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],unison:"piano",stringSustain:86,stringSustainType:"acoustic",envelopes:[{target:"noteFilterFreq",envelope:"note size",index:0},{target:"noteFilterFreq",envelope:"twang 1",index:1},{target:"noteFilterFreq",envelope:"twang 1",index:1}]}}])},{name:"Idiophone Presets",presets:fe([{name:"celesta",midiProgram:8,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~1\xD7",amplitude:11,envelope:"custom"},{frequency:"8\xD7",amplitude:6,envelope:"custom"},{frequency:"20\xD7",amplitude:3,envelope:"twang 1"},{frequency:"3\xD7",amplitude:1,envelope:"twang 2"}]}},{name:"glockenspiel",midiProgram:9,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:193,effects:["panning","chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:2,operators:[{frequency:"1\xD7",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"5\xD7",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"8\xD7",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"20\xD7",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"feedbackAmplitude",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"music box 1",midiProgram:10,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,0,0,100,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,71,0],unison:"none",stringSustain:64,envelopes:[]}},{name:"music box 2",midiProgram:10,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:.7071}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,57,57,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0],unison:"none",stringSustain:29,envelopes:[]}},{name:"vibraphone",midiProgram:11,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u21922\u21923\u21924",feedbackAmplitude:3,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:9,envelope:"custom"},{frequency:"~1\xD7",amplitude:9,envelope:"custom"},{frequency:"9\xD7",amplitude:3,envelope:"custom"},{frequency:"4\xD7",amplitude:9,envelope:"custom"}]}},{name:"marimba",midiProgram:12,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:197,effects:["panning","chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:6,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1\u20032\u2190(3\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"4\xD7",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"13\xD7",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2}],isDrum:!1}},{name:"kalimba",midiProgram:108,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:198,effects:["panning","chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:7,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:.5}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"5\xD7",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"20\xD7",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2}],isDrum:!1}},{name:"xylophone",midiProgram:13,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1\xD7",amplitude:9,envelope:"custom"},{frequency:"6\xD7",amplitude:9,envelope:"custom"},{frequency:"11\xD7",amplitude:9,envelope:"custom"},{frequency:"20\xD7",amplitude:6,envelope:"twang 1"}]}},{name:"tubular bell",midiProgram:14,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:96,chord:"strum",harmonics:[43,71,0,100,0,100,0,86,0,0,86,0,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,14],unison:"shimmer",stringSustain:86,envelopes:[]}},{name:"bell synth",midiProgram:14,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~2\xD7",amplitude:10,envelope:"custom"},{frequency:"7\xD7",amplitude:6,envelope:"twang 3"},{frequency:"20\xD7",amplitude:1,envelope:"twang 1"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"rain drop",midiProgram:96,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1\xD7",amplitude:12,envelope:"custom"},{frequency:"6\xD7",amplitude:4,envelope:"custom"},{frequency:"20\xD7",amplitude:3,envelope:"twang 1"},{frequency:"1\xD7",amplitude:6,envelope:"tremolo1"}]}},{name:"crystal",midiProgram:98,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"delayed",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:4,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:10,envelope:"custom"},{frequency:"3\xD7",amplitude:7,envelope:"custom"},{frequency:"6\xD7",amplitude:4,envelope:"custom"},{frequency:"13\xD7",amplitude:4,envelope:"custom"}]}},{name:"tinkle bell",midiProgram:112,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u21922\u21923\u21924",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"~2\xD7",amplitude:7,envelope:"custom"},{frequency:"5\xD7",amplitude:7,envelope:"custom"},{frequency:"7\xD7",amplitude:7,envelope:"custom"},{frequency:"16\xD7",amplitude:7,envelope:"custom"}]}},{name:"agogo",midiProgram:113,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:205,effects:["panning","chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:8,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u21924",feedbackAmplitude:15,operators:[{frequency:"2\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"5\xD7",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"8\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"13\xD7",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"feedbackAmplitude",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}}])},{name:"Guitar Presets",presets:fe([{name:"nylon guitar",midiProgram:24,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u21902\u21903\u21904",feedbackType:"3\u27F2",feedbackAmplitude:6,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:6,envelope:"steady"},{frequency:"5\xD7",amplitude:2,envelope:"steady"},{frequency:"7\xD7",amplitude:4,envelope:"steady"}]}},{name:"steel guitar",midiProgram:25,generalMidi:!0,settings:{type:"Picked String",eqFilter:[],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,100,86,71,71,71,86,86,71,57,43,43,43,57,57,57,57,57,43,43,43,43,43,43,43,43,43,43],unison:"none",stringSustain:71,envelopes:[]}},{name:"jazz guitar",midiProgram:26,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,57,71,71,43,57,71,57,43,29,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},{name:"clean guitar",midiProgram:27,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[86,100,100,100,86,57,86,100,100,100,71,57,43,71,86,71,57,57,71,71,71,71,57,57,57,57,57,43]}},{name:"muted guitar",midiProgram:28,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:7,feedbackEnvelope:"twang 2",operators:[{frequency:"1\xD7",amplitude:13,envelope:"custom"},{frequency:"1\xD7",amplitude:4,envelope:"twang 3"},{frequency:"4\xD7",amplitude:4,envelope:"twang 2"},{frequency:"16\xD7",amplitude:4,envelope:"twang 1"}]}}])},{name:"Picked Bass Presets",presets:fe([{name:"acoustic bass",midiProgram:32,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,86,71,71,71,71,57,57,57,57,43,43,43,43,43,29,29,29,29,29,29,14,14,14,14,14,14,14]}},{name:"fingered bass",midiProgram:33,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,86,71,57,71,43,57,29,29,29,29,29,29,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0]}},{name:"picked bass",midiProgram:34,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"3\u27F2",feedbackAmplitude:4,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:5,envelope:"steady"},{frequency:"11\xD7",amplitude:1,envelope:"twang 3"},{frequency:"1\xD7",amplitude:9,envelope:"steady"}]}},{name:"fretless bass",midiProgram:35,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:1e3,filterResonance:14,filterEnvelope:"flare 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,71,57,57,71,71,71,57,57,57,57,57,57,57,43,43,43,43,43,43,43,43,29,29,14]}},{name:"slap bass 1",midiProgram:36,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,100,100,100,86,71,57,29,29,43,43,57,71,57,29,29,43,57,57,57,43,43,43,57,71,71,71,71]}},{name:"slap bass 2",midiProgram:37,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u21902\u21903\u21904",feedbackType:"3\u27F2",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"3\xD7",amplitude:13,envelope:"custom"},{frequency:"1\xD7",amplitude:7,envelope:"steady"},{frequency:"13\xD7",amplitude:3,envelope:"steady"},{frequency:"1\xD7",amplitude:11,envelope:"steady"}]}},{name:"bass synth 1",midiProgram:38,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"3\u27F2\u20034\u27F2",feedbackAmplitude:9,feedbackEnvelope:"twang 2",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"custom"},{frequency:"1\xD7",amplitude:14,envelope:"twang 1"},{frequency:"~1\xD7",amplitude:13,envelope:"twang 2"}]}},{name:"bass synth 2",midiProgram:39,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:1e3,filterResonance:57,filterEnvelope:"punch",vibrato:"none",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u21922",feedbackAmplitude:4,feedbackEnvelope:"twang 3",operators:[{frequency:"1\xD7",amplitude:9,envelope:"custom"},{frequency:"1\xD7",amplitude:9,envelope:"steady"},{frequency:"3\xD7",amplitude:0,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"bass & lead",midiProgram:87,generalMidi:!0,settings:{type:"chip",transition:"hard",effects:"reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:86,filterEnvelope:"twang 2",wave:"sawtooth",interval:"shimmer",vibrato:"none"}},{name:"dubstep yoi yoi",midiProgram:87,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],effects:["note filter","bitcrusher"],noteFilter:[{type:"low-pass",cutoffHz:594.6,linearGain:11.3137}],bitcrusherOctave:1.5,bitcrusherQuantization:0,transition:"slide",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"arpeggio",wave:"sawtooth",unison:"none",envelopes:[{target:"noteFilterFreq",envelope:"flare 2",index:0}]}}])},{name:"Picked String Presets",presets:fe([{name:"pizzicato strings",midiProgram:45,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:1e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:7,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"3\xD7",amplitude:11,envelope:"custom"},{frequency:"6\xD7",amplitude:9,envelope:"custom"},{frequency:"~1\xD7",amplitude:10,envelope:"steady"}]}},{name:"harp",midiProgram:46,generalMidi:!0,settings:{type:"FM",transition:"hard fade",effects:"reverb",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"3\u27F2",feedbackAmplitude:6,feedbackEnvelope:"twang 2",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"4\xD7",amplitude:6,envelope:"custom"},{frequency:"~2\xD7",amplitude:3,envelope:"steady"},{frequency:"1\xD7",amplitude:6,envelope:"steady"}]}},{name:"sitar",midiProgram:104,generalMidi:!0,settings:{type:"FM",transition:"hard fade",effects:"reverb",chord:"strum",filterCutoffHz:8e3,filterResonance:57,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:14,envelope:"twang 3"},{frequency:"9\xD7",amplitude:3,envelope:"twang 3"},{frequency:"16\xD7",amplitude:9,envelope:"swell 3"}]}},{name:"banjo",midiProgram:105,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"2\u27F2",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"4\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"steady"},{frequency:"11\xD7",amplitude:3,envelope:"twang 3"},{frequency:"1\xD7",amplitude:11,envelope:"steady"}]}},{name:"ukulele",midiProgram:105,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"3\u27F2",feedbackAmplitude:5,feedbackEnvelope:"twang 1",operators:[{frequency:"2\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:6,envelope:"steady"},{frequency:"9\xD7",amplitude:4,envelope:"twang 2"},{frequency:"1\xD7",amplitude:11,envelope:"steady"}]}},{name:"shamisen",midiProgram:106,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"3\u27F2",feedbackAmplitude:9,feedbackEnvelope:"twang 3",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:12,envelope:"steady"},{frequency:"16\xD7",amplitude:4,envelope:"twang 3"},{frequency:"1\xD7",amplitude:7,envelope:"steady"}]}},{name:"koto",midiProgram:107,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:5,feedbackEnvelope:"twang 2",operators:[{frequency:"~1\xD7",amplitude:12,envelope:"custom"},{frequency:"6\xD7",amplitude:10,envelope:"custom"},{frequency:"4\xD7",amplitude:8,envelope:"twang 3"},{frequency:"~2\xD7",amplitude:8,envelope:"twang 3"}]}}])},{name:"Distortion Presets",presets:fe([{name:"overdrive guitar",midiProgram:29,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"peak",cutoffHz:840.9,linearGain:.5}],effects:["note filter","distortion"],noteFilter:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],distortion:71,transition:"normal",fadeInSeconds:0,fadeOutTicks:12,chord:"strum",harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"distortion guitar",midiProgram:30,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"peak",cutoffHz:1e3,linearGain:.25}],effects:["note filter","distortion","reverb"],noteFilter:[{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"low-pass",cutoffHz:2e3,linearGain:1}],distortion:86,reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:12,chord:"strum",harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"charango synth",midiProgram:84,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:1}],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u21922\u21923\u21924",feedbackAmplitude:8,operators:[{frequency:"3\xD7",amplitude:13},{frequency:"~1\xD7",amplitude:5},{frequency:"4\xD7",amplitude:6},{frequency:"3\xD7",amplitude:7}],envelopes:[{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"guitar harmonics",midiProgram:31,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:2}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1\u2190(2\u20023)\u21904",feedbackType:"1\u27F2",feedbackAmplitude:2,operators:[{frequency:"4\xD7",amplitude:12},{frequency:"16\xD7",amplitude:5},{frequency:"1\xD7",amplitude:2},{frequency:"~1\xD7",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:1},{target:"operatorAmplitude",envelope:"punch",index:2},{target:"operatorAmplitude",envelope:"twang 1",index:3}]}},{name:"PWM overdrive",midiProgram:29,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",pulseWidth:17.67767,envelopes:[{target:"pulseWidth",envelope:"punch"}]}},{name:"PWM distortion",midiProgram:30,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:2}],effects:["vibrato"],vibrato:"delayed",transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",pulseWidth:50,envelopes:[{target:"pulseWidth",envelope:"swell 1"}]}},{name:"FM overdrive",midiProgram:29,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u21922",feedbackAmplitude:2,operators:[{frequency:"~1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:12},{frequency:"~2\xD7",amplitude:6},{frequency:"1\xD7",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"twang 1",index:2},{target:"operatorAmplitude",envelope:"swell 3",index:3},{target:"feedbackAmplitude",envelope:"punch"}]}},{name:"FM distortion",midiProgram:30,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:2}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u21922",feedbackAmplitude:4,operators:[{frequency:"~1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:11},{frequency:"1\xD7",amplitude:9},{frequency:"~2\xD7",amplitude:4}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:2},{target:"operatorAmplitude",envelope:"swell 3",index:3}]}}])},{name:"Bellows Presets",presets:fe([{name:"drawbar organ 1",midiProgram:16,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[86,86,0,86,0,0,0,86,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"drawbar organ 2",midiProgram:16,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[86,29,71,86,71,14,0,100,0,0,0,86,0,0,0,71,0,0,0,57,0,0,0,29,0,0,0,0]}},{name:"percussive organ",midiProgram:17,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:515,effects:["panning","vibrato","note filter","chorus","reverb"],vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!0,noteSimpleCut:8,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.5}],pan:0,panDelay:10,chorus:100,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:2,operators:[{frequency:"1\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"4\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"6\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"punch",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"feedbackAmplitude",envelope:"flare",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"rock organ",midiProgram:18,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"hard",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"punch",vibrato:"delayed",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:2,feedbackEnvelope:"flare 1",operators:[{frequency:"1\xD7",amplitude:9,envelope:"custom"},{frequency:"4\xD7",amplitude:9,envelope:"custom"},{frequency:"6\xD7",amplitude:9,envelope:"custom"},{frequency:"2\xD7",amplitude:5,envelope:"steady"}]}},{name:"pipe organ",midiProgram:19,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",transition:"cross fade",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:5,feedbackEnvelope:"steady",operators:[{frequency:"1\xD7",amplitude:8,envelope:"custom"},{frequency:"2\xD7",amplitude:9,envelope:"custom"},{frequency:"4\xD7",amplitude:9,envelope:"custom"},{frequency:"8\xD7",amplitude:8,envelope:"custom"}]}},{name:"reed organ",midiProgram:20,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[71,86,100,86,71,100,57,71,71,71,43,43,43,71,43,71,57,57,57,57,57,57,57,29,43,29,29,14]}},{name:"accordion",midiProgram:21,generalMidi:!0,settings:{type:"chip",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"swell 1",wave:"double saw",interval:"honky tonk",vibrato:"none"}},{name:"bandoneon",midiProgram:23,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",interval:"hum",vibrato:"none",harmonics:[86,86,86,57,71,86,57,71,71,71,57,43,57,43,71,43,71,57,57,43,43,43,57,43,43,29,29,29]}},{name:"bagpipe",midiProgram:109,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"punch",interval:"hum",vibrato:"none",harmonics:[71,86,86,100,100,86,57,100,86,71,71,71,57,57,57,71,57,71,57,71,43,57,57,43,43,43,43,43]}}])},{name:"String Presets",presets:fe([{name:"violin 1",midiProgram:40,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["vibrato","reverb"],vibrato:"delayed",reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:6,chord:"simultaneous",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"1\u21922",feedbackAmplitude:5,operators:[{frequency:"4\xD7",amplitude:9},{frequency:"3\xD7",amplitude:9},{frequency:"2\xD7",amplitude:7},{frequency:"7\xD7",amplitude:5}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:3},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"viola",midiProgram:41,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:8,feedbackEnvelope:"swell 1",operators:[{frequency:"2\xD7",amplitude:11,envelope:"custom"},{frequency:"7\xD7",amplitude:7,envelope:"custom"},{frequency:"13\xD7",amplitude:4,envelope:"custom"},{frequency:"1\xD7",amplitude:5,envelope:"steady"}]}},{name:"cello",midiProgram:42,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.1768},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"peak",cutoffHz:4756.83,linearGain:5.6569}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.0884}],reverb:67,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:12,chord:"simultaneous",algorithm:"(1\u20022)\u21903\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:3,operators:[{frequency:"16\xD7",amplitude:5},{frequency:"~1\xD7",amplitude:10},{frequency:"1\xD7",amplitude:9},{frequency:"6\xD7",amplitude:3}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"operatorAmplitude",envelope:"swell 1",index:3}]}},{name:"contrabass",midiProgram:43,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1\u20022)\u21903\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"16\xD7",amplitude:5,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"steady"},{frequency:"6\xD7",amplitude:3,envelope:"swell 1"}]}},{name:"fiddle",midiProgram:110,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"3\u27F2\u20034\u27F2",feedbackAmplitude:5,feedbackEnvelope:"twang 1",operators:[{frequency:"2\xD7",amplitude:10,envelope:"custom"},{frequency:"8\xD7",amplitude:8,envelope:"custom"},{frequency:"1\xD7",amplitude:8,envelope:"steady"},{frequency:"16\xD7",amplitude:3,envelope:"steady"}]}},{name:"tremolo strings",midiProgram:44,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,effects:["panning","note filter","chorus","reverb"],noteFilterType:!0,noteSimpleCut:6,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.1768}],pan:0,panDelay:10,chorus:100,reverb:0,fadeInSeconds:.0125,fadeOutTicks:72,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u21922\u21923\u21924",feedbackAmplitude:12,operators:[{frequency:"1\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"4\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"7\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:4,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"strings",midiProgram:48,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"4\u27F2",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4\xD7",amplitude:9,envelope:"custom"},{frequency:"3\xD7",amplitude:9,envelope:"custom"},{frequency:"2\xD7",amplitude:7,envelope:"steady"},{frequency:"7\xD7",amplitude:3,envelope:"swell 1"}]}},{name:"slow strings",midiProgram:49,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:1414,filterResonance:0,filterEnvelope:"swell 2",vibrato:"none",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"4\u27F2",feedbackAmplitude:6,feedbackEnvelope:"flare 3",operators:[{frequency:"4\xD7",amplitude:10,envelope:"custom"},{frequency:"3\xD7",amplitude:10,envelope:"custom"},{frequency:"2\xD7",amplitude:7,envelope:"steady"},{frequency:"7\xD7",amplitude:4,envelope:"swell 1"}]}},{name:"strings synth 1",midiProgram:50,generalMidi:!0,settings:{type:"chip",transition:"soft fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:1414,filterResonance:43,filterEnvelope:"steady",wave:"sawtooth",interval:"hum",vibrato:"delayed"}},{name:"strings synth 2",midiProgram:51,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:12,feedbackEnvelope:"swell 1",operators:[{frequency:"3\xD7",amplitude:6,envelope:"custom"},{frequency:"2\xD7",amplitude:7,envelope:"custom"},{frequency:"1\xD7",amplitude:8,envelope:"custom"},{frequency:"1\xD7",amplitude:9,envelope:"custom"}]}},{name:"orchestra hit 1",midiProgram:55,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"custom",vibrato:"none",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:14,feedbackEnvelope:"twang 3",operators:[{frequency:"1\xD7",amplitude:15,envelope:"twang 3"},{frequency:"2\xD7",amplitude:15,envelope:"flare 3"},{frequency:"4\xD7",amplitude:15,envelope:"flare 2"},{frequency:"8\xD7",amplitude:15,envelope:"flare 1"}]}},{name:"violin 2",midiProgram:40,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:2828,linearGain:1.4142},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["vibrato","reverb"],vibrato:"light",reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:6,chord:"simultaneous",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"4\u27F2",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4\xD7",amplitude:15,envelope:"custom"},{frequency:"3\xD7",amplitude:13,envelope:"custom"},{frequency:"2\xD7",amplitude:7,envelope:"steady"},{frequency:"7\xD7",amplitude:8,envelope:"swell 1"}]}},{name:"orchestra hit 2",midiProgram:55,midiSubharmonicOctaves:1,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:588,effects:["panning","vibrato","note filter","chorus","reverb"],vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.5}],pan:0,panDelay:10,chorus:100,reverb:0,fadeInSeconds:.0125,fadeOutTicks:72,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:14,operators:[{frequency:"1\xD7",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:14,waveform:"sine",pulseWidth:5},{frequency:"3\xD7",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"4\xD7",amplitude:14,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"supersaw string",midiProgram:41,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1.4142},{type:"low-pass",cutoffHz:3363.59,linearGain:.1768}],effects:["note filter","reverb"],noteFilter:[{type:"high-pass",cutoffHz:500,linearGain:.1768}],reverb:33,fadeInSeconds:.0263,fadeOutTicks:6,pulseWidth:35.35534,dynamism:83,spread:8,shape:50,envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0}]}},{name:"supersaw string 2",midiProgram:41,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5},{type:"high-pass",cutoffHz:594.6,linearGain:.25},{type:"peak",cutoffHz:2e3,linearGain:2.8284},{type:"peak",cutoffHz:4756.83,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5},{type:"high-pass",cutoffHz:594.6,linearGain:.25},{type:"peak",cutoffHz:2e3,linearGain:2.8284},{type:"peak",cutoffHz:4756.83,linearGain:2}],effects:["note filter","chorus","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:1}],chorus:57,reverb:42,fadeInSeconds:.0575,fadeOutTicks:-6,pulseWidth:50,dynamism:67,spread:58,shape:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"pulseWidth",envelope:"flare 2"}]}}])},{name:"Vocal Presets",presets:fe([{name:"choir soprano",midiProgram:94,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2},{type:"peak",cutoffHz:1189.21,linearGain:5.6569},{type:"high-pass",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:.25},{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:33,fadeInSeconds:.0413,fadeOutTicks:24,harmonics:[100,100,86,57,29,29,57,71,57,29,14,14,14,29,43,57,43,29,14,14,14,14,14,14,0,0,0,0],unison:"none",envelopes:[]}},{name:"choir tenor",midiProgram:52,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:707.11,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:48,chord:"simultaneous",harmonics:[86,100,100,86,71,57,43,29,29,29,29,43,43,43,29,29,29,29,29,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"choir bass",midiProgram:52,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:11.3137},{type:"peak",cutoffHz:594.6,linearGain:5.6569},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:48,chord:"simultaneous",harmonics:[71,86,100,100,86,86,57,43,29,29,29,29,29,29,43,43,43,43,43,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"solo soprano",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2},{type:"peak",cutoffHz:1189.21,linearGain:5.6569},{type:"high-pass",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:.25}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,harmonics:[86,100,86,43,14,14,57,71,57,14,14,14,14,14,43,57,43,14,14,14,14,14,14,14,0,0,0,0],unison:"none",envelopes:[]}},{name:"solo tenor",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:707.11,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,harmonics:[86,100,100,86,71,57,43,29,29,29,29,43,43,43,29,29,29,29,29,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"solo bass",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:5.6569},{type:"peak",cutoffHz:594.6,linearGain:8},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:8},{type:"high-pass",cutoffHz:210.22,linearGain:1.4142}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,transition:"normal",fadeInSeconds:.0263,fadeOutTicks:12,chord:"simultaneous",harmonics:[71,86,100,100,86,86,57,43,29,29,29,29,29,29,43,43,43,43,43,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"voice ooh",midiProgram:53,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:1414,filterResonance:57,filterEnvelope:"steady",interval:"union",vibrato:"shaky",harmonics:[100,57,43,43,14,14,0,0,0,14,29,29,14,0,14,29,29,14,0,0,0,0,0,0,0,0,0,0]}},{name:"voice synth",midiProgram:54,generalMidi:!0,settings:{type:"chip",transition:"medium fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:57,filterEnvelope:"steady",wave:"rounded",interval:"union",vibrato:"light"}},{name:"vox synth lead",midiProgram:85,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",vibrato:"light",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u21922\u21923\u21924",feedbackAmplitude:2,feedbackEnvelope:"punch",operators:[{frequency:"2\xD7",amplitude:10,envelope:"custom"},{frequency:"9\xD7",amplitude:5,envelope:"custom"},{frequency:"20\xD7",amplitude:1,envelope:"custom"},{frequency:"~1\xD7",amplitude:4,envelope:"steady"}]}},{name:"tiny robot",midiProgram:85,settings:{type:"FM",eqFilter:[],effects:["vibrato","reverb"],vibrato:"delayed",reverb:33,transition:"slide",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:2,operators:[{frequency:"2\xD7",amplitude:15},{frequency:"1\xD7",amplitude:7},{frequency:"~1\xD7",amplitude:7},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:1},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"yowie",midiProgram:85,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,effects:["panning","note filter","reverb"],noteFilterType:!0,noteSimpleCut:6,noteSimplePeak:6,noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:4}],pan:0,panDelay:10,reverb:0,fadeInSeconds:.0413,fadeOutTicks:6,algorithm:"1\u21902\u2190(3\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:12,operators:[{frequency:"2\xD7",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"16\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:1},{target:"feedbackAmplitude",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"mouse",midiProgram:85,settings:{type:"FM",eqFilter:[],effects:["vibrato","reverb"],vibrato:"light",reverb:33,transition:"slide in pattern",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:5,operators:[{frequency:"2\xD7",amplitude:13},{frequency:"5\xD7",amplitude:12},{frequency:"1\xD7",amplitude:0},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"noteVolume",envelope:"note size"},{target:"feedbackAmplitude",envelope:"flare 2"}]}},{name:"gumdrop",midiProgram:85,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"2\xD7",amplitude:15,envelope:"punch"},{frequency:"4\xD7",amplitude:15,envelope:"punch"},{frequency:"7\xD7",amplitude:15,envelope:"punch"},{frequency:"1\xD7",amplitude:10,envelope:"twang 1"}]}},{name:"echo drop",midiProgram:102,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"~2\xD7",amplitude:11,envelope:"custom"},{frequency:"~1\xD7",amplitude:5,envelope:"steady"},{frequency:"11\xD7",amplitude:2,envelope:"steady"},{frequency:"16\xD7",amplitude:5,envelope:"swell 3"}]}},{name:"dark choir",midiProgram:85,settings:{type:"spectrum",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",spectrum:[43,14,14,14,14,14,14,100,14,14,14,57,14,14,100,14,43,14,43,14,14,43,14,29,14,29,14,14,29,0]}}])},{name:"Brass Presets",presets:fe([{name:"trumpet",midiProgram:56,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:9,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:8,envelope:"steady"},{frequency:"1\xD7",amplitude:5,envelope:"flare 2"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"trombone",midiProgram:57,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"2\u27F2",feedbackAmplitude:7,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:8,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"tuba",midiProgram:58,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"2\u27F2",feedbackAmplitude:8,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:6,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"muted trumpet",midiProgram:59,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2.8284},{type:"peak",cutoffHz:4e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1}],reverb:33,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:5,operators:[{frequency:"1\xD7",amplitude:13},{frequency:"1\xD7",amplitude:5},{frequency:"9\xD7",amplitude:5},{frequency:"13\xD7",amplitude:7}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"operatorAmplitude",envelope:"swell 1",index:3},{target:"feedbackAmplitude",envelope:"flare 2"}]}},{name:"french horn",midiProgram:60,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1},{type:"peak",cutoffHz:2378.41,linearGain:2.8284}],effects:["reverb"],reverb:33,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:3,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:12},{frequency:"1\xD7",amplitude:10},{frequency:"~1\xD7",amplitude:8}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:2},{target:"operatorAmplitude",envelope:"flare 2",index:3},{target:"feedbackAmplitude",envelope:"swell 1"}]}},{name:"brass section",midiProgram:61,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:12,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"swell 1"},{frequency:"~1\xD7",amplitude:10,envelope:"swell 1"}]}},{name:"brass synth 1",midiProgram:62,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:11,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:12,envelope:"flare 1"},{frequency:"~1\xD7",amplitude:8,envelope:"flare 2"}]}},{name:"brass synth 2",midiProgram:63,generalMidi:!0,settings:{type:"FM",transition:"soft",effects:"reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:9,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"flare 1"},{frequency:"~1\xD7",amplitude:7,envelope:"flare 1"}]}},{name:"pulse brass",midiProgram:62,settings:{type:"PWM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",pulseWidth:50,pulseEnvelope:"flare 3",vibrato:"none"}}])},{name:"Reed Presets",presets:fe([{name:"soprano sax",midiProgram:64,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u21902\u21903\u21904",feedbackType:"4\u27F2",feedbackAmplitude:5,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:13,envelope:"custom"},{frequency:"4\xD7",amplitude:4,envelope:"swell 1"},{frequency:"1\xD7",amplitude:7,envelope:"steady"},{frequency:"5\xD7",amplitude:4,envelope:"punch"}]}},{name:"alto sax",midiProgram:65,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:4,feedbackEnvelope:"punch",operators:[{frequency:"1\xD7",amplitude:13,envelope:"custom"},{frequency:"1\xD7",amplitude:6,envelope:"steady"},{frequency:"4\xD7",amplitude:6,envelope:"swell 1"},{frequency:"1\xD7",amplitude:12,envelope:"steady"}]}},{name:"tenor sax",midiProgram:66,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u21902\u21903\u21904",feedbackType:"1\u27F2",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"2\xD7",amplitude:12,envelope:"custom"},{frequency:"3\xD7",amplitude:7,envelope:"steady"},{frequency:"1\xD7",amplitude:3,envelope:"steady"},{frequency:"8\xD7",amplitude:3,envelope:"steady"}]}},{name:"baritone sax",midiProgram:67,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:2,feedbackEnvelope:"swell 2",operators:[{frequency:"1\xD7",amplitude:12,envelope:"custom"},{frequency:"8\xD7",amplitude:4,envelope:"steady"},{frequency:"4\xD7",amplitude:5,envelope:"steady"},{frequency:"1\xD7",amplitude:4,envelope:"punch"}]}},{name:"sax synth",midiProgram:64,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"4\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:15,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"shehnai",midiProgram:111,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:3,feedbackEnvelope:"steady",operators:[{frequency:"4\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:8,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"oboe",midiProgram:68,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"swell 1",vibrato:"none",algorithm:"1\u20032\u2190(3\u20024)",feedbackType:"2\u27F2",feedbackAmplitude:2,feedbackEnvelope:"tremolo5",operators:[{frequency:"1\xD7",amplitude:7,envelope:"custom"},{frequency:"4\xD7",amplitude:12,envelope:"custom"},{frequency:"1\xD7",amplitude:6,envelope:"steady"},{frequency:"6\xD7",amplitude:2,envelope:"steady"}]}},{name:"english horn",midiProgram:69,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u20032\u2190(3\u20024)",feedbackType:"2\u27F2",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"4\xD7",amplitude:12,envelope:"custom"},{frequency:"2\xD7",amplitude:10,envelope:"custom"},{frequency:"1\xD7",amplitude:8,envelope:"punch"},{frequency:"8\xD7",amplitude:4,envelope:"steady"}]}},{name:"bassoon",midiProgram:70,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:707,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"2\xD7",amplitude:11,envelope:"custom"},{frequency:"1\xD7",amplitude:6,envelope:"steady"},{frequency:"6\xD7",amplitude:6,envelope:"swell 1"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"clarinet",midiProgram:71,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}},{name:"harmonica",midiProgram:22,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:778,effects:["panning","note filter","reverb"],noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],pan:0,panDelay:10,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:9,operators:[{frequency:"2\xD7",amplitude:14,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2},{target:"feedbackAmplitude",envelope:"tremolo2",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}}])},{name:"Flute Presets",presets:fe([{name:"flute 1",midiProgram:73,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:9656.85,linearGain:.5}],eqFilterType:!0,eqSimpleCut:9,eqSimplePeak:1,envelopeSpeed:12,discreteEnvelope:!1,preset:832,eqSubFilters1:[],effects:["panning","reverb"],pan:0,panDelay:10,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"4\u27F2",feedbackAmplitude:7,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"~1\xD7",amplitude:1,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"punch",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"feedbackAmplitude",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:7,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"recorder",midiProgram:74,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 2",interval:"union",vibrato:"none",harmonics:[100,43,57,43,57,43,43,43,43,43,43,43,43,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},{name:"whistle",midiProgram:78,generalMidi:!0,settings:{type:"harmonics",effects:"chorus & reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",interval:"union",vibrato:"delayed",harmonics:[100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"ocarina",midiProgram:79,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,14,57,14,29,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"piccolo",midiProgram:72,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"4\u27F2",feedbackAmplitude:15,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"custom"},{frequency:"~2\xD7",amplitude:3,envelope:"punch"},{frequency:"~1\xD7",amplitude:5,envelope:"punch"}]}},{name:"shakuhachi",midiProgram:77,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"steady",vibrato:"delayed",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"3\u21924",feedbackAmplitude:15,feedbackEnvelope:"steady",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"2\xD7",amplitude:3,envelope:"punch"},{frequency:"~1\xD7",amplitude:4,envelope:"twang 1"},{frequency:"20\xD7",amplitude:15,envelope:"steady"}]}},{name:"pan flute",midiProgram:75,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:5.6569}],effects:["note filter","reverb"],noteFilter:[{type:"high-pass",cutoffHz:4756.83,linearGain:.7071}],reverb:33,fadeInSeconds:.0125,fadeOutTicks:-3,spectrum:[100,0,0,0,0,0,0,14,0,0,0,71,0,0,14,0,57,0,29,14,29,14,14,29,14,29,14,14,29,14],envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"punch"}]}},{name:"blown bottle",midiProgram:76,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:7,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"3\xD7",amplitude:4,envelope:"custom"},{frequency:"6\xD7",amplitude:2,envelope:"custom"},{frequency:"11\xD7",amplitude:2,envelope:"custom"}]}},{name:"calliope",midiProgram:82,generalMidi:!0,settings:{type:"spectrum",transition:"cross fade",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"steady",spectrum:[100,0,0,0,0,0,0,86,0,0,0,71,0,0,57,0,43,0,29,14,14,29,14,14,14,14,14,14,14,14]}},{name:"chiffer",midiProgram:83,generalMidi:!0,settings:{type:"spectrum",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"punch",spectrum:[86,0,0,0,0,0,0,71,0,0,0,71,0,0,57,0,57,0,43,14,14,43,14,29,14,29,29,29,29,14]}},{name:"breath noise",midiProgram:121,generalMidi:!0,settings:{type:"spectrum",eqFilter:[],effects:["chord type","note filter","reverb"],chord:"strum",noteFilter:[{type:"high-pass",cutoffHz:840.9,linearGain:.3536},{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,spectrum:[71,0,0,0,0,0,0,29,0,0,0,71,0,0,29,0,100,29,14,29,100,29,100,14,14,71,0,29,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"}]}},{name:"flute 2",midiProgram:73,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"seamless",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"delayed",harmonics:[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}}])},{name:"Pad Presets",presets:fe([{name:"new age pad",midiProgram:88,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:3,operators:[{frequency:"2\xD7",amplitude:14},{frequency:"~1\xD7",amplitude:4},{frequency:"6\xD7",amplitude:3},{frequency:"13\xD7",amplitude:3}],envelopes:[{target:"operatorAmplitude",envelope:"swell 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"feedbackAmplitude",envelope:"swell 3"}]}},{name:"warm pad",midiProgram:89,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:7,operators:[{frequency:"1\xD7",amplitude:14},{frequency:"1\xD7",amplitude:6},{frequency:"1\xD7",amplitude:0},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 3"},{target:"operatorAmplitude",envelope:"swell 1",index:1}]}},{name:"polysynth pad",midiProgram:90,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["vibrato","note filter","chorus"],vibrato:"delayed",noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1}],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"sawtooth",unison:"honky tonk",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"space voice pad",midiProgram:91,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:5.6569},{type:"peak",cutoffHz:1414.21,linearGain:.1768}],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:5,operators:[{frequency:"1\xD7",amplitude:10},{frequency:"2\xD7",amplitude:8},{frequency:"3\xD7",amplitude:7},{frequency:"11\xD7",amplitude:2}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:3},{target:"feedbackAmplitude",envelope:"swell 2"}]}},{name:"bowed glass pad",midiProgram:92,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:10},{frequency:"2\xD7",amplitude:12},{frequency:"3\xD7",amplitude:7},{frequency:"7\xD7",amplitude:4}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"flare 3",index:3}]}},{name:"metallic pad",midiProgram:93,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:13,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"~1\xD7",amplitude:9},{frequency:"1\xD7",amplitude:7},{frequency:"11\xD7",amplitude:7}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"swell 2",index:2},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"sweep pad",midiProgram:95,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:4}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",wave:"sawtooth",unison:"hum",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 3"}]}},{name:"atmosphere",midiProgram:99,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],effects:["chorus","reverb"],chorus:100,reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"3\u27F2\u20034\u27F2",feedbackAmplitude:3,operators:[{frequency:"1\xD7",amplitude:14},{frequency:"~1\xD7",amplitude:10},{frequency:"3\xD7",amplitude:7},{frequency:"1\xD7",amplitude:7}],envelopes:[{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"operatorAmplitude",envelope:"twang 2",index:2},{target:"operatorAmplitude",envelope:"twang 3",index:3}]}},{name:"brightness",midiProgram:100,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:2}],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",harmonics:[100,86,86,86,43,57,43,71,43,43,43,57,43,43,57,71,57,43,29,43,57,57,43,29,29,29,29,14],unison:"octave",stringSustain:86,envelopes:[]}},{name:"goblins",midiProgram:101,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:2828.43,linearGain:11.3137}],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1\u21902\u21903\u21904",feedbackType:"1\u27F2",feedbackAmplitude:10,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"4\xD7",amplitude:5},{frequency:"1\xD7",amplitude:10},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 2"},{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"operatorAmplitude",envelope:"tremolo1",index:2},{target:"feedbackAmplitude",envelope:"flare 3"}]}},{name:"sci-fi",midiProgram:103,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:9513.66,linearGain:2.8284}],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:48,chord:"simultaneous",algorithm:"(1\u20022)\u21903\u21904",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:8,operators:[{frequency:"~1\xD7",amplitude:13},{frequency:"2\xD7",amplitude:10},{frequency:"5\xD7",amplitude:5},{frequency:"11\xD7",amplitude:8}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"tremolo5",index:3},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"flutter pad",midiProgram:90,settings:{type:"FM",eqFilter:[],effects:["vibrato","note filter","chorus"],vibrato:"delayed",noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:4}],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:9,operators:[{frequency:"1\xD7",amplitude:13},{frequency:"5\xD7",amplitude:7},{frequency:"7\xD7",amplitude:5},{frequency:"~1\xD7",amplitude:6}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"tremolo1",index:2},{target:"operatorAmplitude",envelope:"punch",index:3}]}},{name:"feedback pad",midiProgram:89,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:2378.41,linearGain:8}],effects:[],transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"custom interval",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:8,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:15},{frequency:"~1\xD7",amplitude:15}],envelopes:[{target:"feedbackAmplitude",envelope:"swell 2"}]}},{name:"supersaw pad",midiProgram:93,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768}],effects:["reverb"],reverb:100,fadeInSeconds:.0263,fadeOutTicks:24,pulseWidth:50,dynamism:100,spread:58,shape:0,envelopes:[]}}])},{name:"Drum Presets",presets:fe([{name:"standard drumset",midiProgram:116,isNoise:!0,settings:{type:"drumset",effects:"reverb",drums:[{filterEnvelope:"twang 1",spectrum:[57,71,71,86,86,86,71,71,71,71,57,57,57,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29,29]},{filterEnvelope:"twang 1",spectrum:[0,0,0,100,71,71,57,86,57,57,57,71,43,43,57,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43]},{filterEnvelope:"twang 1",spectrum:[0,0,0,0,100,57,43,43,29,57,43,29,71,43,43,43,43,57,43,43,43,43,43,43,43,43,29,43,43,43]},{filterEnvelope:"twang 1",spectrum:[0,0,0,0,0,71,57,43,43,43,57,57,43,29,57,43,43,43,29,43,57,43,43,43,43,43,43,29,43,43]},{filterEnvelope:"decay 2",spectrum:[0,14,29,43,86,71,29,43,43,43,43,29,71,29,71,29,43,43,43,43,57,43,43,57,43,43,43,57,57,57]},{filterEnvelope:"decay 1",spectrum:[0,0,14,14,14,14,29,29,29,43,43,43,57,57,57,71,71,71,71,71,71,71,71,57,57,57,57,43,43,43]},{filterEnvelope:"twang 3",spectrum:[43,43,43,71,29,29,43,43,43,29,43,43,43,29,29,43,43,29,29,29,57,14,57,43,43,57,43,43,57,57]},{filterEnvelope:"decay 3",spectrum:[29,43,43,43,43,29,29,43,29,29,43,29,14,29,43,29,43,29,57,29,43,57,43,71,43,71,57,57,71,71]},{filterEnvelope:"twang 3",spectrum:[43,29,29,43,29,29,29,57,29,29,29,57,43,43,29,29,57,43,43,43,71,43,43,71,57,71,71,71,71,71]},{filterEnvelope:"decay 3",spectrum:[57,57,57,43,57,57,43,43,57,43,43,43,71,57,43,57,86,71,57,86,71,57,86,100,71,86,86,86,86,86]},{filterEnvelope:"flare 1",spectrum:[0,0,14,14,14,14,29,29,29,43,43,43,57,57,71,71,86,86,100,100,100,100,100,100,100,100,86,57,29,0]},{filterEnvelope:"decay 2",spectrum:[14,14,14,14,29,14,14,29,14,43,14,43,57,86,57,57,100,57,43,43,57,100,57,43,29,14,0,0,0,0]}]}},{name:"steel pan",midiProgram:114,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:62.5,linearGain:.1768}],effects:["note filter","chorus","reverb"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],chorus:67,reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"~1\xD7",amplitude:14},{frequency:"7\xD7",amplitude:3},{frequency:"3\xD7",amplitude:5},{frequency:"4\xD7",amplitude:4}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay 2"},{target:"operatorAmplitude",envelope:"flare 1",index:1},{target:"operatorAmplitude",envelope:"flare 2",index:2},{target:"operatorAmplitude",envelope:"swell 2",index:3}]}},{name:"steel pan synth",midiProgram:114,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1\u20032\u20033\u21904",feedbackType:"1\u27F2",feedbackAmplitude:5,operators:[{frequency:"~1\xD7",amplitude:12},{frequency:"2\xD7",amplitude:15},{frequency:"4\xD7",amplitude:14},{frequency:"~1\xD7",amplitude:3}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"},{target:"operatorAmplitude",envelope:"note size",index:0},{target:"operatorAmplitude",envelope:"note size",index:1},{target:"operatorAmplitude",envelope:"flare 1",index:2},{target:"operatorAmplitude",envelope:"flare 2",index:3},{target:"feedbackAmplitude",envelope:"flare 1"}]}},{name:"timpani",midiProgram:47,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"peak",cutoffHz:6727.17,linearGain:5.6569}],effects:["pitch shift","note filter","reverb"],pitchShiftSemitones:15,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.5}],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",spectrum:[100,0,0,0,86,0,0,71,0,14,43,14,43,43,0,29,43,29,29,29,43,29,43,29,43,43,43,43,43,43],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"}]}},{name:"dark strike",midiProgram:47,settings:{type:"spectrum",eqFilter:[],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071}],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",spectrum:[0,0,14,14,14,29,29,43,43,86,43,43,43,29,86,29,29,29,86,29,14,14,14,14,0,0,0,0,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"woodblock",midiProgram:115,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",spectrum:[0,14,29,43,43,57,86,86,71,57,57,43,43,57,86,86,43,43,71,57,57,57,57,57,86,86,71,71,71,71]}},{name:"taiko drum",midiProgram:116,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"twang 1",spectrum:[71,100,100,43,43,71,71,43,43,43,43,43,43,57,29,57,43,57,43,43,57,43,43,43,43,43,43,43,43,43]}},{name:"melodic drum",midiProgram:117,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-1.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"twang 1",spectrum:[100,71,71,57,57,43,43,71,43,43,43,57,43,43,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29]}},{name:"drum synth",midiProgram:118,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"decay 1",spectrum:[100,86,71,57,43,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29]}},{name:"tom-tom",midiProgram:116,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",spectrum:[100,29,14,0,0,86,14,43,29,86,29,14,29,57,43,43,43,43,57,43,43,43,29,57,43,43,43,43,43,43]}},{name:"metal pipe",midiProgram:117,isNoise:!0,midiSubharmonicOctaves:-1.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"twang 2",spectrum:[29,43,86,43,43,43,43,43,100,29,14,14,100,14,14,0,0,0,0,0,14,29,29,14,0,0,14,29,0,0]}},{name:"synth kick",midiProgram:47,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-6,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"8\xD7",amplitude:15},{frequency:"1\xD7",amplitude:0},{frequency:"1\xD7",amplitude:0},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"twang 2"}]}}])},{name:"Novelty Presets",presets:fe([{name:"guitar fret noise",midiProgram:120,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"high-pass",cutoffHz:1e3,linearGain:.1768}],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:5.6569}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"simultaneous",spectrum:[0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,29,14,0,0,43,0,43,0,71,43,0,57,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 1"},{target:"noteVolume",envelope:"twang 2"}]}},{name:"fifth saw lead",midiProgram:86,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1.4142}],chorus:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"fifth swell",midiProgram:86,midiSubharmonicOctaves:1,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:2}],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 3"}]}},{name:"soundtrack",midiProgram:97,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],chorus:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 3"}]}},{name:"reverse cymbal",midiProgram:119,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",effects:"none",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"swell 3",spectrum:[29,57,57,29,57,57,29,29,43,29,29,43,29,29,57,57,14,57,14,57,71,71,57,86,57,100,86,86,86,86]}},{name:"seashore",midiProgram:122,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",transition:"soft fade",effects:"reverb",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"swell 3",spectrum:[14,14,29,29,43,43,43,57,57,57,57,57,57,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,57]}},{name:"bird tweet",midiProgram:123,generalMidi:!0,settings:{type:"harmonics",eqFilter:[],effects:["chord type","vibrato","reverb"],chord:"strum",vibrato:"heavy",reverb:67,fadeInSeconds:.0575,fadeOutTicks:-6,harmonics:[0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"hum",envelopes:[{target:"noteVolume",envelope:"decay 1"}]}},{name:"telephone ring",midiProgram:124,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:1}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"arpeggio",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"2\xD7",amplitude:12},{frequency:"1\xD7",amplitude:4},{frequency:"20\xD7",amplitude:1},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo4"},{target:"operatorAmplitude",envelope:"tremolo1",index:1}]}},{name:"helicopter",midiProgram:125,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-.5,settings:{type:"spectrum",effects:"reverb",transition:"seamless",chord:"arpeggio",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"tremolo4",spectrum:[14,43,43,57,57,57,71,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,71,71,71,57,57]}},{name:"applause",midiProgram:126,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",effects:"reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"swell 3",spectrum:[14,14,29,29,29,43,43,57,71,71,86,86,86,71,71,57,57,57,71,86,86,86,86,86,71,71,57,57,57,57]}},{name:"gunshot",midiProgram:127,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:1414,filterResonance:29,filterEnvelope:"twang 1",spectrum:[14,29,43,43,57,57,57,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,57,57,57,57,43]}},{name:"scoot",midiProgram:92,settings:{type:"chip",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:707.11,linearGain:4}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"simultaneous",wave:"double saw",unison:"shimmer",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 1"}]}},{name:"buzz saw",midiProgram:30,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],effects:[],transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"custom interval",algorithm:"1\u21902\u21903\u21904",feedbackType:"1\u27F2",feedbackAmplitude:4,operators:[{frequency:"5\xD7",amplitude:13},{frequency:"1\xD7",amplitude:10},{frequency:"~1\xD7",amplitude:6},{frequency:"11\xD7",amplitude:12}],envelopes:[]}},{name:"mosquito",midiProgram:93,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2}],effects:["vibrato"],vibrato:"shaky",transition:"normal",fadeInSeconds:.0575,fadeOutTicks:-6,chord:"simultaneous",pulseWidth:4.41942,envelopes:[{target:"pulseWidth",envelope:"tremolo6"}]}},{name:"breathing",midiProgram:126,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"swell 2",spectrum:[14,14,14,29,29,29,29,29,43,29,29,43,43,43,29,29,71,43,86,86,57,100,86,86,86,86,71,86,71,57]}},{name:"klaxon synth",midiProgram:125,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"noise",effects:"reverb",transition:"slide",chord:"harmony",filterCutoffHz:2e3,filterResonance:86,filterEnvelope:"steady",wave:"buzz"}},{name:"theremin",midiProgram:40,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.7071}],effects:["vibrato","reverb"],vibrato:"heavy",reverb:33,transition:"slide in pattern",fadeInSeconds:.0263,fadeOutTicks:-6,chord:"simultaneous",harmonics:[100,71,57,43,29,29,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",envelopes:[]}},{name:"sonar ping",midiProgram:121,settings:{type:"spectrum",eqFilter:[],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],reverb:33,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",spectrum:[100,43,29,29,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}}])},{name:"UltraBox Presets",presets:fe([{name:"nes white",midiProgram:116,generalMidi:!0,isNoise:!0,settings:{type:"noise",eqFilter:[],eqFilterType:!1,eqSimpleCut:8,eqSimplePeak:0,eqSubFilters1:[],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:0,wave:"1-bit white",envelopes:[]}},{name:"nes ping",midiProgram:116,generalMidi:!0,isNoise:!0,settings:{type:"noise",eqFilter:[],eqFilterType:!1,eqSimpleCut:8,eqSimplePeak:0,eqSubFilters1:[],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:0,wave:"1-bit metallic",envelopes:[]}},{name:"distorted pulse vocal",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884}],effects:["panning","transition type","pitch shift","vibrato","note filter","bitcrusher","echo","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:0,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:840.9,linearGain:11.3137},{type:"low-pass",cutoffHz:297.3,linearGain:8},{type:"peak",cutoffHz:500,linearGain:11.3137},{type:"high-pass",cutoffHz:62.5,linearGain:1.4142},{type:"peak",cutoffHz:176.78,linearGain:11.3137},{type:"high-pass",cutoffHz:250,linearGain:11.3137}],noteSubFilters0:[{type:"high-pass",cutoffHz:840.9,linearGain:11.3137},{type:"low-pass",cutoffHz:297.3,linearGain:8},{type:"peak",cutoffHz:500,linearGain:11.3137},{type:"high-pass",cutoffHz:62.5,linearGain:1.4142},{type:"peak",cutoffHz:176.78,linearGain:11.3137},{type:"high-pass",cutoffHz:250,linearGain:11.3137}],bitcrusherOctave:6.5,bitcrusherQuantization:71,pan:0,panDelay:10,echoSustain:14,echoDelayBeats:.167,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,wave:"1/8 pulse",unison:"none",envelopes:[]}},{name:"dubsteb bwah",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","chord type"],transition:"interrupt",clicklessTransition:!1,chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:10,operators:[{frequency:"2\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"4\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:13,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"note size"},{target:"operatorAmplitude",envelope:"swell 2",index:1},{target:"operatorAmplitude",envelope:"punch",index:2},{target:"operatorAmplitude",envelope:"note size",index:3}]}},{name:"FM cool bass",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:1},{type:"peak",cutoffHz:1e3,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:1},{type:"peak",cutoffHz:1e3,linearGain:.7071}],effects:["panning","transition type","note filter","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"2\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"13\xD7",amplitude:11,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"operatorAmplitude",envelope:"twang 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 2",index:3}]}},{name:"FM funky bass",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.1768}],eqFilterType:!0,eqSimpleCut:5,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","reverb"],transition:"normal",clicklessTransition:!1,pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~1\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"punch"},{target:"noteVolume",envelope:"note size"}]}},{name:"talking bass",generalMidi:!1,settings:{type:"FM",eqFilter:[],effects:["chord type"],chord:"custom interval",fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1\u2190(2\u20023)\u21904",feedbackType:"1\u27F2",feedbackAmplitude:15,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"2\xD7",amplitude:8},{frequency:"2\xD7",amplitude:5},{frequency:"1\xD7",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"note size",index:2},{target:"operatorAmplitude",envelope:"note size",index:3},{target:"feedbackAmplitude",envelope:"note size"}]}},{name:"synth marimba",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:176.78,linearGain:1},{type:"peak",cutoffHz:4e3,linearGain:.5}],effects:["note filter","echo"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142}],echoSustain:71,echoDelayBeats:.5,fadeInSeconds:0,fadeOutTicks:-1,harmonics:[86,100,29,29,0,0,0,100,0,0,0,86,29,0,14,100,0,0,0,0,0,14,0,0,14,0,0,86],unison:"fifth",stringSustain:7,envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"}]}},{name:"italian accordian",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"low-pass",cutoffHz:6e3,linearGain:.5}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:1,eqSubFilters1:[],effects:["panning","chorus","reverb"],pan:0,panDelay:10,chorus:71,reverb:45,fadeInSeconds:.0263,fadeOutTicks:-3,wave:"square",unison:"honky tonk",customChipWave:{0:-24,1:-24,2:-24,3:-24,4:-24,5:-24,6:-24,7:-24,8:-24,9:-24,10:-24,11:-24,12:-24,13:-24,14:-24,15:-24,16:24,17:24,18:24,19:24,20:24,21:24,22:24,23:24,24:-24,25:-24,26:-24,27:-24,28:-24,29:-24,30:-24,31:-24,32:-24,33:-24,34:-24,35:-24,36:-24,37:-24,38:-24,39:-24,40:24,41:24,42:24,43:24,44:24,45:24,46:24,47:24,48:-24,49:-24,50:-24,51:-24,52:-24,53:-24,54:-24,55:-24,56:-24,57:-24,58:-24,59:-24,60:-24,61:-24,62:-24,63:-24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"chip supersaw",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","vibrato","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,chorus:29,reverb:29,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"dissonant",customChipWave:{0:22,1:22,2:16,3:6,4:0,5:-3,6:-8,7:-10,8:-13,9:-16,10:-19,11:-19,12:-20,13:-22,14:-22,15:-24,16:-24,17:-24,18:-24,19:-24,20:-24,21:-24,22:-24,23:-24,24:-24,25:-24,26:-24,27:-24,28:-24,29:-24,30:-24,31:24,32:24,33:16,34:9,35:6,36:4,37:2,38:0,39:-1,40:-3,41:-4,42:-4,43:-6,44:-6,45:-6,46:-6,47:-5,48:-5,49:-4,50:-2,51:-2,52:1,53:4,54:6,55:8,56:10,57:12,58:14,59:16,60:18,61:19,62:22,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"fm supersaw",generalMidi:!1,settings:{type:"FM6op",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:1.4142},{type:"high-pass",cutoffHz:148.65,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:19027.31,linearGain:1.4142},{type:"high-pass",cutoffHz:148.65,linearGain:.7071}],effects:["panning","transition type","pitch shift","note filter","chorus","reverb"],transition:"continue",clicklessTransition:!1,pitchShiftSemitones:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],noteSubFilters1:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],pan:0,panDelay:10,chorus:71,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u20032\u20033\u20034\u20035\u20036",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:13,waveform:"sawtooth",pulseWidth:5},{frequency:"~1\xD7",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"2\xD7",amplitude:10,waveform:"sawtooth",pulseWidth:5},{frequency:"3\xD7",amplitude:7,waveform:"sawtooth",pulseWidth:5},{frequency:"4\xD7",amplitude:9,waveform:"sawtooth",pulseWidth:5},{frequency:"8\xD7",amplitude:6,waveform:"sawtooth",pulseWidth:5}],envelopes:[]}},{name:"wind",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:250.03,linearGain:11.3137}],eqFilterType:!0,eqSimpleCut:0,eqSimplePeak:7,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["transition type","reverb"],transition:"continue",clicklessTransition:!1,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u21923\u20032\u21924",feedbackAmplitude:15,operators:[{frequency:"16\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"16\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"16\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"16\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[]}},{name:"mrow",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[],effects:["panning","chord type","reverb"],chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,pan:0,panDelay:10,reverb:35,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:5,operators:[{frequency:"4\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:9,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"flare 1",index:0},{target:"operatorAmplitude",envelope:"note size",index:1},{target:"operatorAmplitude",envelope:"note size",index:2},{target:"operatorAmplitude",envelope:"flare 3",index:3},{target:"feedbackAmplitude",envelope:"flare 1"}]}},{name:"vocal why",generalMidi:!1,settings:{type:"harmonics",eqFilter:[],effects:["note filter","panning","reverb"],noteFilter:[{type:"low-pass",cutoffHz:840.9,linearGain:11.3137}],pan:0,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,harmonics:[100,86,29,29,14,14,0,14,14,43,71,100,100,86,71,71,57,57,43,43,43,43,43,0,0,0,0,0],unison:"octave",envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}}])},{name:"Slarmoo's Box Presets",presets:fe([{name:"radio fm",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:1189.21,linearGain:1.4142},{type:"high-pass",cutoffHz:74.33,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1189.21,linearGain:1.4142},{type:"high-pass",cutoffHz:74.33,linearGain:.3536}],effects:["panning","detune","vibrato","bitcrusher","reverb"],detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,bitcrusherOctave:6.5,bitcrusherQuantization:43,pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:6,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:4,operators:[{frequency:"1\xD7",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"0.12\xD7",amplitude:7,waveform:"trapezoid",pulseWidth:5},{frequency:"0.5\xD7",amplitude:10,waveform:"triangle",pulseWidth:5},{frequency:"~1\xD7",amplitude:5,waveform:"triangle",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"anguished underworld",generalMidi:!1,settings:{type:"FM6op",eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.0884},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.0884},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],effects:["panning","note filter","distortion","bitcrusher","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2}],noteSubFilters0:[{type:"low-pass",cutoffHz:2828.43,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2}],noteSubFilters1:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],distortion:43,aliases:!1,bitcrusherOctave:4.5,bitcrusherQuantization:43,pan:0,panDelay:10,reverb:0,fadeInSeconds:.075,fadeOutTicks:6,algorithm:"1\u20032\u21904\u20033\u2190(5\u20036)",feedbackType:"1\u21925\u20022\u21926 3\u21924",feedbackAmplitude:4,operators:[{frequency:"0.25\xD7",amplitude:14,waveform:"triangle",pulseWidth:5},{frequency:"0.5\xD7",amplitude:13,waveform:"sawtooth",pulseWidth:5},{frequency:"1\xD7",amplitude:12,waveform:"trapezoid",pulseWidth:5},{frequency:"8\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"0.75\xD7",amplitude:3,waveform:"ramp",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"operatorAmplitude",envelope:"decay -1",index:5},{target:"feedbackAmplitude",envelope:"wibble 3"}],isDrum:!1}},{name:"faint sorrow",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4240.89,linearGain:2}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:4,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","detune","vibrato","echo","reverb"],detuneCents:22,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,echoSustain:100,echoDelayBeats:.667,reverb:87,fadeInSeconds:.075,fadeOutTicks:48,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2",feedbackAmplitude:3,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"bright sorrow fm",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["panning","chord type","note filter","echo","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:2e3,linearGain:2.8284}],noteSubFilters1:[{type:"low-pass",cutoffHz:1414.21,linearGain:1.4142}],pan:0,panDelay:10,echoSustain:71,echoDelayBeats:1.333,reverb:61,fadeInSeconds:0,fadeOutTicks:48,algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:2,operators:[{frequency:"1\xD7",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"5\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"5\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"wet sorrow fm",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","vibrato","reverb"],vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,reverb:23,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:4,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"decay 3",index:2}],isDrum:!1}},{name:"scream fm",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2},{type:"high-pass",cutoffHz:250,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:.125},{type:"peak",cutoffHz:353.55,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:2},{type:"high-pass",cutoffHz:250,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:.125},{type:"peak",cutoffHz:353.55,linearGain:.7071}],effects:["panning","detune","note filter","distortion","reverb"],detuneCents:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:1681.79,linearGain:.125},{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:11.3137}],noteSubFilters0:[{type:"high-pass",cutoffHz:1681.79,linearGain:.125},{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:11.3137}],distortion:0,aliases:!1,pan:0,panDelay:10,reverb:87,fadeInSeconds:.135,fadeOutTicks:-3,algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:11,operators:[{frequency:"4\xD7",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"7\xD7",amplitude:5,waveform:"triangle",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"detune",envelope:"swell 1"},{target:"feedbackAmplitude",envelope:"tremolo4"}],isDrum:!1}},{name:"anguished radio fm pad",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:9513.66,linearGain:4},{type:"peak",cutoffHz:353.55,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:62.5,linearGain:.0884},{type:"peak",cutoffHz:9513.66,linearGain:4},{type:"peak",cutoffHz:353.55,linearGain:.0884}],eqSubFilters4:[],effects:["panning","detune","note filter","bitcrusher","chorus","echo","reverb"],detuneCents:-16,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:11313.71,linearGain:11.3137}],noteSubFilters2:[{type:"low-pass",cutoffHz:105.11,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:11313.71,linearGain:11.3137}],noteSubFilters4:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:11313.71,linearGain:11.3137}],bitcrusherOctave:5.5,bitcrusherQuantization:43,pan:0,panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:1,reverb:58,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u21923",feedbackAmplitude:3,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"juicy kick",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:62.5,linearGain:11.3137},{type:"low-pass",cutoffHz:5656.85,linearGain:.3536},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.0884},{type:"peak",cutoffHz:594.6,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:62.5,linearGain:11.3137},{type:"low-pass",cutoffHz:5656.85,linearGain:.3536},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.0884},{type:"peak",cutoffHz:594.6,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884}],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-6,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"20\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"twang 2"}],isDrum:!1}},{name:"good vibes supersaw",generalMidi:!1,settings:{type:"supersaw",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:6,discreteEnvelope:!1,pitchEnvelopeStart:37,pitchEnvelopeEnd:96,pitchEnvelopeInverse:!0,eqSubFilters0:[],effects:["panning","transition type","detune","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,detuneCents:30,pan:0,panDelay:10,chorus:14,reverb:23,fadeInSeconds:.0263,fadeOutTicks:12,pulseWidth:26,decimalOffset:0,dynamism:33,spread:33,shape:17,envelopes:[{target:"supersawShape",envelope:"pitch"},{target:"detune",envelope:"tremolo2"}],isDrum:!1}},{name:"ethereal",generalMidi:!1,isNoise:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"peak",cutoffHz:4e3,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:88.39,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:4,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:4e3,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:88.39,linearGain:1.4142}],eqSubFilters1:[],effects:["panning","transition type","chord type","pitch shift","detune","vibrato","note filter","bitcrusher","chorus","reverb"],transition:"continue",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:36,vibrato:"custom",vibratoDepth:.12,vibratoDelay:36,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:2828.43,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.7071}],noteSubFilters0:[{type:"peak",cutoffHz:2828.43,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.7071}],bitcrusherOctave:4.5,bitcrusherQuantization:43,pan:0,panDelay:10,chorus:71,reverb:100,fadeInSeconds:0,fadeOutTicks:-1,spectrum:[43,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,0],unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,pitchEnvelopeStart2:0,pitchEnvelopeEnd2:96,envelopeInverse2:!1,envelopes:[{target:"noteVolume",envelope:"note size"},{target:"detune",envelope:"tremolo3"},{target:"bitcrusherQuantization",envelope:"note size"}],isDrum:!1}},{name:"walrus wuh",generalMidi:!1,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25},{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"peak",cutoffHz:3363.59,linearGain:.0884},{type:"peak",cutoffHz:74.33,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,pitchEnvelopeStart:0,pitchEnvelopeEnd:96,pitchEnvelopeInverse:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25},{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"peak",cutoffHz:3363.59,linearGain:.0884},{type:"peak",cutoffHz:74.33,linearGain:2.8284}],effects:["panning","note filter","bitcrusher","chorus","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.125}],noteSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.125}],bitcrusherOctave:4,bitcrusherQuantization:71,pan:0,panDelay:10,chorus:86,reverb:32,fadeInSeconds:.0263,fadeOutTicks:48,pulseWidth:50,decimalOffset:0,dynamism:100,spread:50,shape:0,envelopes:[{target:"noteVolume",envelope:"punch"},{target:"bitcrusherQuantization",envelope:"decay 3"}],isDrum:!1}},{name:"saturnic",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4240.89,linearGain:2}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:4,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","vibrato","chorus","echo","reverb"],vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,chorus:100,echoSustain:71,echoDelayBeats:.5,reverb:45,fadeInSeconds:.0125,fadeOutTicks:72,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:15,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"glassy harmonics",generalMidi:!1,settings:{type:"harmonics",volume:0,eqFilter:[{type:"low-pass",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:840.9,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:840.9,linearGain:.5}],effects:["panning","detune","note filter","chorus","reverb"],detuneCents:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],pan:0,panDelay:10,chorus:14,reverb:29,fadeInSeconds:0,fadeOutTicks:-3,harmonics:[100,0,43,29,0,100,0,0,0,0,0,0,0,0,14,29,14,0,14,0,0,0,0,100,0,0,14,0],unison:"none",envelopes:[],isDrum:!1}},{name:"plucked",generalMidi:!1,settings:{type:"Picked String",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.0884}],effects:["panning","transition type","echo","reverb"],transition:"interrupt",clicklessTransition:!1,pan:0,panDelay:10,echoSustain:100,echoDelayBeats:1.333,reverb:26,fadeInSeconds:0,fadeOutTicks:24,harmonics:[100,86,57,0,0,57,57,57,86,57,57,43,43,43,29,29,14,14,29,14,14,14,29,100,57,43,14,14],unison:"none",stringSustain:14,envelopes:[],isDrum:!1}},{name:"spectrum wind",generalMidi:!1,isNoise:!0,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","note filter","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:1.4142}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:1.4142}],pan:0,panDelay:10,reverb:87,fadeInSeconds:0,fadeOutTicks:12,spectrum:[29,0,0,0,0,0,0,71,0,0,0,14,57,14,0,57,57,0,0,57,0,71,14,29,100,71,0,100,14,86],unison:"none",envelopes:[],isDrum:!0}},{name:"hi-hat",generalMidi:!1,isNoise:!0,settings:{type:"noise",volume:0,eqFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqSubFilters1:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqSubFilters2:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqSubFilters3:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,wave:"white",unison:"none",envelopes:[],isDrum:!0}},{name:"jungle bass",generalMidi:!1,isNoise:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884},{type:"peak",cutoffHz:148.65,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884},{type:"peak",cutoffHz:148.65,linearGain:.0884}],effects:["panning","vibrato","note filter","chorus","reverb"],vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:74.33,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:74.33,linearGain:.0884}],pan:0,panDelay:10,chorus:14,reverb:3,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u21942 3\u21944",feedbackAmplitude:3,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"8\xD7",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,pitchEnvelopeStart2:12,pitchEnvelopeEnd2:28,envelopeInverse2:!1,envelopes:[{target:"operatorFrequency",envelope:"swell 3",index:0},{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"noteFilterFreq",envelope:"pitch",index:0}],isDrum:!1}},{name:"beach tide",generalMidi:!1,isNoise:!1,settings:{type:"harmonics",volume:0,eqFilter:[{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:13454.34,linearGain:.1768},{type:"peak",cutoffHz:8e3,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:13454.34,linearGain:.1768},{type:"peak",cutoffHz:8e3,linearGain:.0884}],effects:["panning","transition type","chord type","note filter","chorus","reverb"],transition:"continue",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:1},{type:"peak",cutoffHz:5656.85,linearGain:.1768}],noteSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:1},{type:"peak",cutoffHz:5656.85,linearGain:.1768}],pan:0,panDelay:10,chorus:14,reverb:32,fadeInSeconds:.0938,fadeOutTicks:72,harmonics:[86,86,71,57,57,43,43,43,29,29,14,14,14,0,0,57,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,envelopes:[{target:"noteFilterAllFreqs",envelope:"pitch"}],isDrum:!1}},{name:"starlight",generalMidi:!1,isNoise:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884}],effects:["panning","transition type","vibrato","bitcrusher","echo","reverb"],transition:"continue",clicklessTransition:!1,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,bitcrusherOctave:5.5,bitcrusherQuantization:29,pan:0,panDelay:10,echoSustain:29,echoDelayBeats:1,reverb:13,fadeInSeconds:0,fadeOutTicks:24,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"distant monument",generalMidi:!1,isNoise:!1,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1},{type:"peak",cutoffHz:11313.71,linearGain:.25},{type:"peak",cutoffHz:500,linearGain:.125},{type:"peak",cutoffHz:210.22,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:5.6569}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:1},{type:"peak",cutoffHz:11313.71,linearGain:.25},{type:"peak",cutoffHz:500,linearGain:.125},{type:"peak",cutoffHz:210.22,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:5.6569}],effects:["panning","transition type","chord type","detune","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:24,bitcrusherOctave:2.5,bitcrusherQuantization:14,pan:0,panDelay:10,chorus:86,echoSustain:71,echoDelayBeats:1,reverb:35,fadeInSeconds:.0413,fadeOutTicks:12,wave:"modbox pnryshk a (u5)",unison:"detune",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:11,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,envelopes:[{target:"noteVolume",envelope:"punch"},{target:"noteVolume",envelope:"twang 1"}],isDrum:!1}},{name:"mercurial",generalMidi:!1,isNoise:!1,settings:{type:"FM6op",volume:0,eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.5},{type:"peak",cutoffHz:88.39,linearGain:2.8284},{type:"peak",cutoffHz:1189.21,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.5},{type:"peak",cutoffHz:88.39,linearGain:2.8284},{type:"peak",cutoffHz:1189.21,linearGain:.1768}],eqSubFilters1:[],effects:["panning","distortion","chorus"],distortion:43,aliases:!1,pan:0,panDelay:10,chorus:43,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"Custom",feedbackType:"1\u27F2",feedbackAmplitude:8,customAlgorithm:{mods:[[3],[5],[4],[],[6],[]],carrierCount:2},operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"0.5\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:2,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorFrequency",envelope:"linear",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"distortion",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:20,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"air hiss",generalMidi:!1,isNoise:!0,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],eqFilterType:!0,eqSimpleCut:7,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","note filter","distortion","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"high-pass",cutoffHz:2828.43,linearGain:.3536}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"high-pass",cutoffHz:2828.43,linearGain:.3536}],distortion:71,aliases:!1,pan:0,panDelay:10,reverb:6,fadeInSeconds:0,fadeOutTicks:-24,spectrum:[57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,57,71,86,100,100,100,100,86,71,71,43],unison:"none",envelopes:[],isDrum:!0}},{name:"spectral phaser",generalMidi:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536},{type:"high-pass",cutoffHz:74.33,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:10,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["panning","note filter","distortion","bitcrusher","chorus","echo","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:9513.66,linearGain:5.6569},{type:"peak",cutoffHz:5656.85,linearGain:.0884},{type:"peak",cutoffHz:2828.43,linearGain:4},{type:"peak",cutoffHz:1414.21,linearGain:.125},{type:"peak",cutoffHz:707.11,linearGain:4},{type:"peak",cutoffHz:353.55,linearGain:.1768},{type:"peak",cutoffHz:148.65,linearGain:4},{type:"peak",cutoffHz:88.39,linearGain:.1768}],noteSubFilters0:[{type:"peak",cutoffHz:9513.66,linearGain:5.6569},{type:"peak",cutoffHz:5656.85,linearGain:.0884},{type:"peak",cutoffHz:2828.43,linearGain:4},{type:"peak",cutoffHz:1414.21,linearGain:.125},{type:"peak",cutoffHz:707.11,linearGain:4},{type:"peak",cutoffHz:353.55,linearGain:.1768},{type:"peak",cutoffHz:148.65,linearGain:4},{type:"peak",cutoffHz:88.39,linearGain:.1768}],distortion:14,aliases:!1,bitcrusherOctave:6,bitcrusherQuantization:14,pan:0,panDelay:10,chorus:100,echoSustain:86,echoDelayBeats:1,reverb:32,fadeInSeconds:0,fadeOutTicks:48,spectrum:[86,0,0,0,57,0,0,71,0,0,0,86,0,0,57,0,43,0,43,0,0,43,0,29,0,29,14,14,29,14],unison:"piano",envelopes:[{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.07,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:0},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.06,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:1},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.05,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.04,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.09,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:4},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.08,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:5},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:6},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.03,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:7},{target:"distortion",envelope:"none",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:.3}],isDrum:!1}},{name:"shaker",generalMidi:!1,isNoise:!0,settings:{type:"noise",volume:0,eqFilter:[{type:"high-pass",cutoffHz:4e3,linearGain:5.6569},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"low-pass",cutoffHz:11313.71,linearGain:8},{type:"peak",cutoffHz:2378.41,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:6,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:4e3,linearGain:5.6569},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"low-pass",cutoffHz:11313.71,linearGain:8},{type:"peak",cutoffHz:2378.41,linearGain:.25}],effects:["panning","transition type","detune","distortion","bitcrusher","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,detuneCents:30,distortion:43,aliases:!1,bitcrusherOctave:2.5,bitcrusherQuantization:43,pan:0,panDelay:10,chorus:43,echoSustain:29,echoDelayBeats:1,reverb:23,fadeInSeconds:.0263,fadeOutTicks:96,wave:"deep",unison:"none",envelopes:[{target:"detune",envelope:"tremolo2",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"bitcrusherQuantization",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteVolume",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteVolume",envelope:"flare",pitchEnvelopeStart:0,pitchEnvelopeEnd:12,inverse:!1,perEnvelopeSpeed:64,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!0}},{name:"distant sorrow",generalMidi:!1,settings:{type:"harmonics",volume:0,eqFilter:[{type:"high-pass",cutoffHz:707.11,linearGain:4},{type:"peak",cutoffHz:5656.85,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:707.11,linearGain:4},{type:"peak",cutoffHz:5656.85,linearGain:.5}],effects:["panning","transition type","detune","vibrato","note filter","echo","reverb"],transition:"interrupt",clicklessTransition:!1,detuneCents:0,vibrato:"custom",vibratoDepth:.2,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25}],pan:0,panDelay:10,echoSustain:100,echoDelayBeats:1,reverb:74,fadeInSeconds:0,fadeOutTicks:24,harmonics:[86,71,57,43,43,29,57,0,14,0,29,29,29,29,29,43,43,43,43,43,57,57,57,0,57,57,0,0],unison:"none",envelopes:[{target:"noteVolume",envelope:"fall",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteFilterAllFreqs",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2.5,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:2}],isDrum:!1}},{name:"metallic kick",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:28,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],effects:["panning"],pan:0,panDelay:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u21922\u21923\u21924",feedbackAmplitude:15,operators:[{frequency:"8\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"256x",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"128x",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"256x",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorFrequency",envelope:"twang",inverse:!1,perEnvelopeSpeed:16,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:0},{target:"noteVolume",envelope:"twang",inverse:!1,perEnvelopeSpeed:3.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"feedbackAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:256,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:256,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:1},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:256,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:256,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2}],isDrum:!1}},{name:"chimes",generalMidi:!1,settings:{type:"Picked String",volume:0,eqFilter:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:5656.85,linearGain:.0884},{type:"peak",cutoffHz:8e3,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:5656.85,linearGain:.0884},{type:"peak",cutoffHz:8e3,linearGain:2.8284}],effects:["panning","chord type","detune","note filter","bitcrusher","chorus","echo","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:24,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],noteSubFilters1:[{type:"low-pass",cutoffHz:2378.41,linearGain:1}],bitcrusherOctave:4,bitcrusherQuantization:29,pan:0,panDelay:0,chorus:29,echoSustain:86,echoDelayBeats:.667,reverb:84,fadeInSeconds:0,fadeOutTicks:48,harmonics:[0,100,71,71,29,0,57,86,0,0,0,0,71,29,0,0,57,0,0,86,0,0,0,100,0,100,0,57],unison:"none",stringSustain:36,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang",inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"bitcrusherQuantization",envelope:"swell",inverse:!1,perEnvelopeSpeed:4.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"bitcrusherQuantization",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"stringSustain",envelope:"random",inverse:!1,perEnvelopeSpeed:16,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:1,steps:14,seed:2,waveform:0},{target:"detune",envelope:"pitch",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,pitchEnvelopeStart:0,pitchEnvelopeEnd:96}],isDrum:!1}},{name:"supersaw bass",generalMidi:!1,settings:{type:"supersaw",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],effects:["panning","note filter","distortion","chorus","reverb"],noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],distortion:14,aliases:!1,pan:0,panDelay:10,chorus:29,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,pulseWidth:50,decimalOffset:0,dynamism:100,spread:67,shape:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"swell",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"ascension",generalMidi:!1,isNoise:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:420.45,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:420.45,linearGain:.25}],eqSubFilters1:[],effects:["panning","granular","chorus","reverb"],granular:7,grainSize:44,grainAmounts:9,grainRange:37,pan:0,panDelay:10,chorus:71,reverb:19,fadeInSeconds:0,fadeOutTicks:24,spectrum:[43,0,0,57,0,0,14,100,29,0,0,100,29,0,100,0,57,29,86,14,14,100,14,0,14,14,0,0,43,0],unison:"voiced",envelopes:[{target:"noteVolume",envelope:"swell",inverse:!1,perEnvelopeSpeed:.7,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"panning",envelope:"lfo",inverse:!1,perEnvelopeSpeed:.3,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,waveform:2,steps:6}],isDrum:!1}},{name:"liminal",generalMidi:!1,isNoise:!1,settings:{type:"supersaw",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142},{type:"high-pass",cutoffHz:840.9,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142},{type:"high-pass",cutoffHz:840.9,linearGain:.25}],effects:["panning","detune","vibrato","note filter","granular","distortion","bitcrusher","chorus","reverb"],detuneCents:8,vibrato:"custom",vibratoDepth:.48,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!0,noteSimpleCut:6,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:2196.8,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:2196.8,linearGain:1}],granular:6,grainSize:49,grainAmounts:10,grainRange:40,distortion:57,aliases:!1,bitcrusherOctave:5,bitcrusherQuantization:0,pan:38,panDelay:10,chorus:29,reverb:48,fadeInSeconds:0,fadeOutTicks:72,pulseWidth:30,decimalOffset:0,dynamism:17,spread:83,shape:67,envelopes:[{target:"noteVolume",envelope:"twang",inverse:!1,perEnvelopeSpeed:17,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"pulseWidth",envelope:"twang",inverse:!1,perEnvelopeSpeed:1.3333,perEnvelopeLowerBound:.1,perEnvelopeUpperBound:1,discrete:!1},{target:"distortion",envelope:"random",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:.2,perEnvelopeUpperBound:1,discrete:!0,steps:8,seed:2,waveform:2},{target:"panning",envelope:"lfo",inverse:!1,perEnvelopeSpeed:.3333,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,waveform:2,steps:2},{target:"noteVolume",envelope:"swell",inverse:!1,perEnvelopeSpeed:18,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"granular",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}}])},{name:"Slarmoo's Box Chip Presets",presets:fe([{name:"Slarmoo's Pulse",midiProgram:80,settings:{type:"PWM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["panning","transition type","chord type","detune"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:8,detuneCents:24,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,pulseWidth:50,decimalOffset:0,unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,envelopes:[{target:"detune",envelope:"pitch"}],isDrum:!1}},{name:"discovery square",midiProgram:80,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["panning","bitcrusher"],bitcrusherOctave:5.5,bitcrusherQuantization:57,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,wave:"square",unison:"octave",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:2,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[],isDrum:!1}},{name:"VRC6 Sawtooth alt",midiProgram:81,settings:{type:"custom chip",volume:0,eqFilter:[{type:"high-pass",cutoffHz:62.5,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:62.5,linearGain:.5}],effects:["panning","transition type","chord type","pitch shift","detune","vibrato","distortion"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,distortion:0,aliases:!1,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"none",customChipWave:{0:-1,1:-1,2:-1,3:-1,4:-1,5:-1,6:-1,7:-1,8:-1,9:-5,10:-5,11:-5,12:-4,13:-4,14:-4,15:-3,16:-3,17:-3,18:-7,19:-7,20:-6,21:-6,22:-5,23:-5,24:-4,25:-4,26:-4,27:-7,28:-7,29:-6,30:-6,31:-5,32:-5,33:-4,34:-4,35:-4,36:-8,37:-8,38:-7,39:-7,40:-6,41:-6,42:-5,43:-5,44:-4,45:-4,46:21,47:20,48:18,49:17,50:16,51:14,52:13,53:12,54:11,55:7,56:6,57:6,58:5,59:5,60:5,61:4,62:4,63:4},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[],isDrum:!1}},{name:"pulse arps",midiProgram:80,settings:{type:"PWM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.125},{type:"high-pass",cutoffHz:840.9,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:7,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.125},{type:"high-pass",cutoffHz:840.9,linearGain:2}],effects:["panning","transition type","chord type","detune","chorus","echo"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:8,detuneCents:64,pan:58,panDelay:10,chorus:43,echoSustain:71,echoDelayBeats:.333,fadeInSeconds:0,fadeOutTicks:-1,pulseWidth:50,decimalOffset:0,unison:"none",envelopes:[{target:"detune",envelope:"pitch",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,pitchEnvelopeStart:0,pitchEnvelopeEnd:96},{target:"pulseWidth",envelope:"pitch",inverse:!0,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,pitchEnvelopeStart:24,pitchEnvelopeEnd:83},{target:"panning",envelope:"lfo",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,waveform:0,steps:2},{target:"noteVolume",envelope:"twang",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"chorus",envelope:"twang",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}}])},{name:"Slarmoo's Box Instrumental Presets",presets:fe([{name:"rusty flute",midiProgram:73,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:13454.34,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:13454.34,linearGain:2.8284}],effects:["panning","transition type","detune","distortion","reverb"],transition:"normal",clicklessTransition:!1,detuneCents:-7,distortion:14,aliases:!1,pan:0,panDelay:10,reverb:100,fadeInSeconds:0,fadeOutTicks:96,algorithm:"1\u21902\u21903\u21904",feedbackType:"3\u21924",feedbackAmplitude:8,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"20\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"bitcrushed piano",midiProgram:4,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2.8284},{type:"high-pass",cutoffHz:74.33,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2.8284},{type:"high-pass",cutoffHz:74.33,linearGain:.5}],effects:["panning","transition type","detune","distortion","bitcrusher","reverb"],transition:"continue",clicklessTransition:!1,detuneCents:0,distortion:29,aliases:!0,bitcrusherOctave:4,bitcrusherQuantization:43,pan:0,panDelay:0,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,wave:"triangle",unison:"none",isUsingAdvancedLoopControls:!0,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"bitcrusherQuantization",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:.6,perEnvelopeUpperBound:1,discrete:!1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"detuned piano",midiProgram:3,settings:{type:"Picked String",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2.8284}],effects:["panning","transition type","detune","vibrato","note filter","bitcrusher"],transition:"continue",clicklessTransition:!1,detuneCents:44,vibrato:"custom",vibratoDepth:.04,vibratoDelay:13,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:1}],noteSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:1}],bitcrusherOctave:4,bitcrusherQuantization:14,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,harmonics:[86,86,71,71,57,57,43,29,14,29,29,29,29,29,29,29,29,43,43,43,43,43,29,14,14,0,0,0],unison:"custom",unisonVoices:2,unisonSpread:.26,unisonOffset:0,unisonExpression:1,unisonSign:1,stringSustain:79,envelopes:[{target:"detune",envelope:"random",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:49,waveform:1},{target:"noteVolume",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1.6667,perEnvelopeLowerBound:.4,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0},{target:"unison",envelope:"random",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:20,waveform:1},{target:"noteFilterAllFreqs",envelope:"pitch",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!0,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0}],isDrum:!1}},{name:"pan flute 2",midiProgram:75,isNoise:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"peak",cutoffHz:2828.43,linearGain:2},{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:8e3,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:2828.43,linearGain:2},{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:8e3,linearGain:.5}],effects:["panning","transition type","note filter","bitcrusher","reverb"],transition:"continue",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],noteSubFilters1:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],bitcrusherOctave:6,bitcrusherQuantization:57,pan:0,panDelay:10,reverb:16,fadeInSeconds:.0125,fadeOutTicks:-6,spectrum:[100,29,14,14,57,0,0,71,0,86,57,43,57,71,14,29,14,14,14,100,71,14,14,14,14,86,43,14,0,0],unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,pitchEnvelopeStart2:0,pitchEnvelopeEnd2:96,envelopeInverse2:!1,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"},{target:"bitcrusherQuantization",envelope:"note size"},{target:"noteVolume",envelope:"note size"}],isDrum:!1}},{name:"trumpet 2",midiProgram:56,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:3049.17,linearGain:1.4142}],eqFilterType:!0,eqSimpleCut:7,eqSimplePeak:3,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","detune","vibrato","note filter","distortion","chorus","reverb"],detuneCents:-64,vibrato:"custom",vibratoDepth:.68,vibratoDelay:17,vibratoSpeed:12,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.5},{type:"peak",cutoffHz:3363.59,linearGain:.1768},{type:"high-pass",cutoffHz:1e3,linearGain:.1768}],noteSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.5},{type:"peak",cutoffHz:3363.59,linearGain:.1768},{type:"high-pass",cutoffHz:1e3,linearGain:.1768}],distortion:29,aliases:!1,pan:0,panDelay:10,chorus:14,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u20032\u2190(3\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:9,operators:[{frequency:"0.75\xD7",amplitude:14,waveform:"pulse width",pulseWidth:2},{frequency:"1\xD7",amplitude:14,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"flare",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"feedbackAmplitude",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorFrequency",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:128,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:0},{target:"noteFilterFreq",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2},{target:"noteVolume",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"detune",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!0,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"harp 2",midiProgram:46,settings:{type:"FM6op",volume:0,eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.0884},{type:"peak",cutoffHz:1e3,linearGain:2.8284},{type:"high-pass",cutoffHz:62.5,linearGain:.25},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.0884},{type:"peak",cutoffHz:1e3,linearGain:2.8284},{type:"high-pass",cutoffHz:62.5,linearGain:.25},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqSubFilters1:[],effects:["panning","detune","note filter","echo","reverb"],detuneCents:-23,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:105.11,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:105.11,linearGain:2.8284}],pan:0,panDelay:10,echoSustain:29,echoDelayBeats:1.083,reverb:74,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u21904\u20032\u21905\u20033\u21906",feedbackType:"1\u27F2",feedbackAmplitude:5,operators:[{frequency:"1\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"4\xD7",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"6\xD7",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:2,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:4,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorFrequency",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:1},{target:"detune",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:7,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteFilterFreq",envelope:"tremolo2",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:0},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:4},{target:"operatorAmplitude",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!0,perEnvelopeSpeed:8,perEnvelopeLowerBound:.4,perEnvelopeUpperBound:1,index:0},{target:"noteVolume",envelope:"punch",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"electric guitar 1",midiProgram:30,settings:{type:"FM",volume:0,eqFilter:[{type:"high-pass",cutoffHz:1189.21,linearGain:2},{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"high-pass",cutoffHz:1189.21,linearGain:2},{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884}],effects:["panning","chord type","vibrato","note filter","distortion","reverb"],chord:"monophonic",fastTwoNoteArp:!1,arpeggioSpeed:12,monoChordTone:0,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1414.21,linearGain:4},{type:"high-pass",cutoffHz:594.6,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:1414.21,linearGain:4},{type:"high-pass",cutoffHz:594.6,linearGain:1}],distortion:100,aliases:!1,pan:0,panDelay:0,reverb:6,fadeInSeconds:0,fadeOutTicks:24,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"2\xD7",amplitude:0,waveform:"sawtooth",pulseWidth:5},{frequency:"4\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"0.25\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"punch",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"vibratoDepth",envelope:"rise",inverse:!1,perEnvelopeSpeed:9,perEnvelopeLowerBound:1,perEnvelopeUpperBound:2,discrete:!1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"distortion",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"electric guitar 2",midiProgram:30,settings:{type:"PWM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:5.6569},{type:"high-pass",cutoffHz:1681.79,linearGain:.25},{type:"peak",cutoffHz:5656.85,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:5.6569},{type:"high-pass",cutoffHz:1681.79,linearGain:.25},{type:"peak",cutoffHz:5656.85,linearGain:2}],effects:["panning","chord type","vibrato","note filter","distortion","bitcrusher","chorus","reverb"],chord:"monophonic",fastTwoNoteArp:!1,arpeggioSpeed:12,monoChordTone:0,vibrato:"custom",vibratoDepth:.68,vibratoDelay:22,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1e3,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:1e3,linearGain:2.8284}],distortion:43,aliases:!1,bitcrusherOctave:6.5,bitcrusherQuantization:71,pan:0,panDelay:0,chorus:14,reverb:13,fadeInSeconds:0,fadeOutTicks:24,pulseWidth:50,decimalOffset:0,unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"rise",inverse:!1,perEnvelopeSpeed:.3333,perEnvelopeLowerBound:.8,perEnvelopeUpperBound:1,discrete:!1},{target:"pulseWidth",envelope:"twang",inverse:!0,perEnvelopeSpeed:2.25,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:.9,discrete:!1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"bitcrusherQuantization",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}}])},{name:"Slarmoo's Box Novelty Presets",presets:fe([{name:"bitcrushed artifacts",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:9656.85,linearGain:.5}],eqFilterType:!0,eqSimpleCut:9,eqSimplePeak:1,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","distortion","bitcrusher","echo"],distortion:71,aliases:!1,bitcrusherOctave:2,bitcrusherQuantization:86,pan:0,panDelay:10,echoSustain:0,echoDelayBeats:1,fadeInSeconds:0,fadeOutTicks:-6,harmonics:[0,0,0,0,0,0,0,57,0,0,0,0,0,0,100,43,0,0,14,86,0,14,0,0,0,0,0,86],unison:"none",stringSustain:14,envelopes:[],isDrum:!1}},{name:"whistle 2",midiProgram:78,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2110.37,linearGain:1.4142}],eqFilterType:!0,eqSimpleCut:6,eqSimplePeak:3,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","transition type","pitch shift","note filter","distortion","echo","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:11,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1414.21,linearGain:2},{type:"high-pass",cutoffHz:88.39,linearGain:2},{type:"peak",cutoffHz:1681.79,linearGain:4}],noteSubFilters0:[{type:"low-pass",cutoffHz:1414.21,linearGain:2},{type:"high-pass",cutoffHz:88.39,linearGain:2},{type:"peak",cutoffHz:1681.79,linearGain:4}],distortion:43,aliases:!1,pan:0,panDelay:10,echoSustain:57,echoDelayBeats:1.083,reverb:87,fadeInSeconds:.0575,fadeOutTicks:-1,harmonics:[57,0,0,0,0,0,0,0,0,86,57,0,0,0,0,0,0,0,86,0,0,0,57,29,0,29,100,0],unison:"none",envelopes:[{target:"pitchShift",envelope:"decay 1"}],isDrum:!1}},{name:"frog wuh",generalMidi:!1,settings:{type:"spectrum",eqFilter:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:6727.17,linearGain:8},{type:"low-pass",cutoffHz:13454.34,linearGain:.125}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:6727.17,linearGain:8},{type:"low-pass",cutoffHz:13454.34,linearGain:.125}],eqSubFilters1:[],effects:["panning","pitch shift","note filter"],pitchShiftSemitones:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1e3,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:1e3,linearGain:1}],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,spectrum:[100,29,14,29,0,14,0,71,0,43,14,71,0,0,71,14,100,0,71,0,43,86,43,0,43,0,0,43,29,29],envelopes:[{target:"pitchShift",envelope:"twang 1"},{target:"noteFilterAllFreqs",envelope:"twang 1"}],isDrum:!1}},{name:"stationary harmonics",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.5}],effects:["panning","transition type","chord type","vibrato"],transition:"continue",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,vibrato:"shaky",vibratoDepth:.1,vibratoDelay:0,vibratoSpeed:10,vibratoType:1,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:12,harmonics:[100,0,57,29,14,57,29,29,14,14,29,43,14,14,14,0,14,29,29,14,0,0,14,0,0,29,14,14],unison:"stationary",envelopes:[],isDrum:!1}},{name:"dead souls",generalMidi:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"high-pass",cutoffHz:353.55,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!0,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"high-pass",cutoffHz:353.55,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:1.4142}],effects:["panning","transition type","chord type","pitch shift","detune","distortion","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:24,detuneCents:-200,distortion:100,aliases:!1,pan:0,panDelay:10,chorus:14,reverb:35,fadeInSeconds:0,fadeOutTicks:-1,spectrum:[100,71,43,43,29,29,29,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,14,14,0,0],unison:"none",envelopes:[{target:"pitchShift",envelope:"random",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:24,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1.2,steps:16,seed:37,waveform:0},{target:"noteVolume",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0},{target:"detune",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!0,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0},{target:"distortion",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0}],isDrum:!1}},{name:"flutter",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"high-pass",cutoffHz:707.11,linearGain:1},{type:"peak",cutoffHz:6727.17,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:707.11,linearGain:1},{type:"peak",cutoffHz:6727.17,linearGain:2.8284}],effects:["panning","transition type","chorus","reverb","ring mod"],transition:"interrupt",clicklessTransition:!1,ringMod:100,ringModHz:100,ringModWaveformIndex:0,pan:0,panDelay:0,chorus:14,reverb:10,fadeInSeconds:0,fadeOutTicks:12,algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2",feedbackAmplitude:3,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"ringModulationHz",envelope:"fall",inverse:!1,perEnvelopeSpeed:1.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1.9},{target:"noteVolume",envelope:"blip",inverse:!1,perEnvelopeSpeed:.25,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"vinyl",generalMidi:!1,settings:{type:"noise",volume:0,eqFilter:[{type:"high-pass",cutoffHz:1414.21,linearGain:.3536},{type:"low-pass",cutoffHz:1189.21,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:1414.21,linearGain:.3536},{type:"low-pass",cutoffHz:1189.21,linearGain:.25}],effects:["panning","transition type","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:250,linearGain:.5},{type:"low-pass",cutoffHz:8e3,linearGain:1}],noteSubFilters0:[{type:"high-pass",cutoffHz:250,linearGain:.5},{type:"low-pass",cutoffHz:8e3,linearGain:1}],distortion:14,aliases:!1,bitcrusherOctave:5.5,bitcrusherQuantization:14,pan:0,panDelay:10,chorus:29,echoSustain:14,echoDelayBeats:.083,reverb:32,fadeInSeconds:0,fadeOutTicks:24,wave:"crackling",unison:"none",envelopes:[],isDrum:!1}}])}]);static valueToPreset(e){let i=e>>6,n=e&63;return o.presetCategories[i]?.presets[n]}static midiProgramToPresetValue(e){for(let i=0;i<o.presetCategories.length;i++){let n=o.presetCategories[i];for(let a=0;a<n.presets.length;a++){let s=n.presets[a];if(s.generalMidi&&s.midiProgram==e)return(i<<6)+a}}return null}static nameToPresetValue(e){for(let i=0;i<o.presetCategories.length;i++){let n=o.presetCategories[i];for(let a=0;a<n.presets.length;a++)if(n.presets[a].name==e)return(i<<6)+a}return null}static instrumentToPreset(e){return o.presetCategories[0].presets.dictionary?.[Qe?.[e]]}};function aa(o,e){o.push(T[e>>>6*5&3]),o.push(T[e>>>6*4&63]),o.push(T[e>>>6*3&63]),o.push(T[e>>>6*2&63]),o.push(T[e>>>6*1&63]),o.push(T[e>>>6*0&63])}function Sn(o,e){let i=0;return i|=k[o.charCodeAt(e++)]<<6*5,i|=k[o.charCodeAt(e++)]<<6*4,i|=k[o.charCodeAt(e++)]<<6*3,i|=k[o.charCodeAt(e++)]<<6*2,i|=k[o.charCodeAt(e++)]<<6*1,i|=k[o.charCodeAt(e++)]<<6*0,i}function bt(o,e,i,n,a,s){o.push(T[e]),o.push(T[+(i>0)]);let r=Math.round(Math.abs(i)*1e3),c=Math.floor(r/63);o.push(T[r%63],T[c%63],T[Math.floor(c/63)]),o.push(T[+(n>0)]);let d=Math.round(Math.abs(n)*1e3),y=Math.floor(d/63);o.push(T[d%63],T[y%63],T[Math.floor(y/63)]),o.push(T[+(a>0)]);let l=Math.round(Math.abs(a)*1e3);o.push(T[l%63],T[Math.floor(l/63)]),o.push(T[+(s>0)]);let v=Math.round(Math.abs(s)*1e3);o.push(T[v%63],T[Math.floor(v/63)])}function Mr(o){let e=A(0,t.keys.length,o),i=0;return o===12?(e=0,i=1):o===13?(e=6,i=-1):o===14?(e=0,i=-1):o===15&&(e=5,i=-1),[e,i]}var T=[48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,45,95],k=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,0,0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0,0,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,0,0,0,0,63,0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,0,0,0,0],Ye=class{_=[];le=0;constructor(e,i,n){for(let a=i;a<n;a++){let s=k[e.charCodeAt(a)];this._.push(s>>5&1),this._.push(s>>4&1),this._.push(s>>3&1),this._.push(s>>2&1),this._.push(s>>1&1),this._.push(s&1)}}read(e){let i=0;for(;e>0;)i=i<<1,i+=this._[this.le++],e--;return i}readLongTail(e,i){let n=e,a=i;for(;this._[this.le++];)n+=1<<a,a++;for(;a>0;)a--,this._[this.le++]&&(n+=1<<a);return n}readPartDuration(){return this.readLongTail(1,3)}readLegacyPartDuration(){return this.readLongTail(1,2)}readPinCount(){return this.readLongTail(1,0)}readPitchInterval(){return this.read(1)?-this.readLongTail(1,3):this.readLongTail(1,3)}},St=class{te=0;_=[];clear(){this.te=0}write(e,i){for(e--;e>=0;)this._[this.te++]=i>>>e&1,e--}writeLongTail(e,i,n){if(n<e)throw new Error("value out of bounds");n-=e;let a=i;for(;n>=1<<a;)this._[this.te++]=1,n-=1<<a,a++;for(this._[this.te++]=0;a>0;)a--,this._[this.te++]=n>>>a&1}writePartDuration(e){this.writeLongTail(1,3,e)}writePinCount(e){this.writeLongTail(1,0,e)}writePitchInterval(e){e<0?(this.write(1,1),this.writeLongTail(1,3,-e)):(this.write(1,0),this.writeLongTail(1,3,e))}concat(e){for(let i=0;i<e.te;i++)this._[this.te++]=e._[i]}encodeBase64(e){for(let i=0;i<this.te;i+=6){let n=this._[i]<<5|this._[i+1]<<4|this._[i+2]<<3|this._[i+3]<<2|this._[i+4]<<1|this._[i+5];e.push(T[n])}return e}lengthBase64(){return Math.ceil(this.te/6)}},en=class o{static ge=t.jsonFormat;static ve=2;static be=9;static Se=1;static xe=6;static Fe=1;static Ce=4;static Ie=1;static we=5;static ke=1;static ce=5;static Pe=100;title;scale;scaleCustom=[];key;octave;tempo;reverb;beatsPerBar;barCount;patternsPerChannel;rhythm;layeredInstruments;patternInstruments;loopStart;loopLength;pitchChannelCount;noiseChannelCount;modChannelCount;channels=[];limitDecay=4;limitRise=4e3;compressionThreshold=1;limitThreshold=1;compressionRatio=1;limitRatio=1;masterGain=1;inVolumeCap=0;outVolumeCap=0;outVolumeCapL=0;outVolumeCapR=0;eqFilter=new Ee;eqFilterType=!1;eqFilterSimpleCut=t.filterSimpleCutRange-1;eqFilterSimplePeak=0;eqSubFilters=[];tmpEqFilterStart;tmpEqFilterEnd;constructor(e){e!=null?this.fromBase64String(e):this.initToDefault(!0)}getNewNoteVolume=(e,i,n,a)=>{if(!e||i==null||n==null||a==null)return t.noteSizeMax;{a=t.modCount-a-1;let s=this.channels[i].instruments[n],r=t.modulators[s.modulators[a]].newNoteVol,c=s.modulators[a],d=t.modulators.dictionary.tempo.index;if(c==d&&(r=this.tempo-t.modulators[d].convertRealFactor),!t.modulators[c].forSong&&s.modInstruments[a][0]<this.channels[s.modChannels[a][0]].instruments.length){let y=t.modulators.dictionary.chorus.index,l=t.modulators.dictionary.reverb.index,v=t.modulators.dictionary.gain.index,h=t.modulators.dictionary.pan.index,g=t.modulators.dictionary["pan delay"].index,f=t.modulators.dictionary.distortion.index,m=t.modulators.dictionary.detune.index,p=t.modulators.dictionary["vibrato depth"].index,S=t.modulators.dictionary["vibrato speed"].index,x=t.modulators.dictionary["vibrato delay"].index,w=t.modulators.dictionary["arp speed"].index,b=t.modulators.dictionary["bit crush"].index,P=t.modulators.dictionary["freq crush"].index,B=t.modulators.dictionary.echo.index,L=t.modulators.dictionary["echo delay"].index,E=t.modulators.dictionary["echo ping pong"].index,D=t.modulators.dictionary["pitch shift"].index,R=t.modulators.dictionary["ring modulation"].index,N=t.modulators.dictionary["ring mod hertz"].index,z=t.modulators.dictionary.granular.index,W=t.modulators.dictionary["grain freq"].index,H=t.modulators.dictionary["grain size"].index,U=t.modulators.dictionary["grain range"].index,G=t.modulators.dictionary["envelope speed"].index,u=t.modulators.dictionary["individual envelope speed"].index,F=t.modulators.dictionary["individual envelope lower bound"].index,C=t.modulators.dictionary["individual envelope upper bound"].index,I=s.modInstruments[a][0],M=this.channels[s.modChannels[a][0]].instruments[I].effectCount;switch(c){case y:r=this.channels[s.modChannels[a][0]].instruments[I].effects[M].chorus-t.modulators[y].convertRealFactor;break;case l:r=this.channels[s.modChannels[a][0]].instruments[I].effects[M].reverb-t.modulators[l].convertRealFactor;break;case v:r=this.channels[s.modChannels[a][0]].instruments[I].effects[M].gain-t.modulators[v].convertRealFactor;break;case h:r=this.channels[s.modChannels[a][0]].instruments[I].effects[M].pan-t.modulators[h].convertRealFactor;break;case g:r=this.channels[s.modChannels[a][0]].instruments[I].effects[M].panDelay-t.modulators[g].convertRealFactor;break;case f:r=this.channels[s.modChannels[a][0]].instruments[I].effects[M].distortion-t.modulators[f].convertRealFactor;break;case m:r=this.channels[s.modChannels[a][0]].instruments[I].detune;break;case p:r=Math.round(this.channels[s.modChannels[a][0]].instruments[I].vibratoDepth*25-t.modulators[p].convertRealFactor);break;case S:r=this.channels[s.modChannels[a][0]].instruments[I].vibratoSpeed-t.modulators[S].convertRealFactor;break;case x:r=this.channels[s.modChannels[a][0]].instruments[I].vibratoDelay-t.modulators[x].convertRealFactor;break;case w:r=this.channels[s.modChannels[a][0]].instruments[I].arpeggioSpeed-t.modulators[w].convertRealFactor;break;case b:r=this.channels[s.modChannels[a][0]].instruments[I].effects[M].bitcrusherQuantization-t.modulators[b].convertRealFactor;break;case P:r=this.channels[s.modChannels[a][0]].instruments[I].effects[M].bitcrusherFreq-t.modulators[P].convertRealFactor;break;case B:r=this.channels[s.modChannels[a][0]].instruments[I].effects[M].echoSustain-t.modulators[B].convertRealFactor;break;case L:r=this.channels[s.modChannels[a][0]].instruments[I].effects[M].echoDelay-t.modulators[L].convertRealFactor;break;case E:r=this.channels[s.modChannels[a][0]].instruments[I].effects[M].echoPingPong-t.modulators[E].convertRealFactor;break;case D:r=this.channels[s.modChannels[a][0]].instruments[I].pitchShift;break;case R:r=this.channels[s.modChannels[a][0]].instruments[I].effects[M].ringModulation-t.modulators[R].convertRealFactor;break;case N:r=this.channels[s.modChannels[a][0]].instruments[I].effects[M].ringModulationHz-t.modulators[N].convertRealFactor;break;case z:r=this.channels[s.modChannels[a][0]].instruments[I].effects[M].granular-t.modulators[z].convertRealFactor;break;case W:r=this.channels[s.modChannels[a][0]].instruments[I].effects[M].grainAmounts-t.modulators[W].convertRealFactor;break;case H:r=this.channels[s.modChannels[a][0]].instruments[I].effects[M].grainSize-t.modulators[H].convertRealFactor;break;case U:r=this.channels[s.modChannels[a][0]].instruments[I].effects[M].grainRange-t.modulators[U].convertRealFactor;break;case G:r=this.channels[s.modChannels[a][0]].instruments[I].envelopeSpeed-t.modulators[G].convertRealFactor;break;case u:r=t.perEnvelopeSpeedToIndices[this.channels[s.modChannels[a][0]].instruments[I].envelopes[s.modEnvelopeNumbers[a]].perEnvelopeSpeed]-t.modulators[u].convertRealFactor;break;case F:r=this.channels[s.modChannels[a][0]].instruments[I].envelopes[s.modEnvelopeNumbers[a]].perEnvelopeLowerBound-t.modulators[F].convertRealFactor;break;case C:r=this.channels[s.modChannels[a][0]].instruments[I].envelopes[s.modEnvelopeNumbers[a]].perEnvelopeUpperBound-t.modulators[C].convertRealFactor;break}}return r??t.noteSizeMax}};getVolumeCap=(e,i,n,a)=>{if(!e||i==null||n==null||a==null)return t.noteSizeMax;{a=t.modCount-a-1;let s=this.channels[i].instruments[n],r=t.modulators[s.modulators[a]],c=r.maxRawVol;return c!=null?((r.name=="post eq"||r.name=="pre eq"||r.name=="song eq")&&(c=t.filterMorphCount-1,s.modFilterTypes[a]>0&&s.modFilterTypes[a]%2?c=t.filterFreqRange:s.modFilterTypes[a]>0&&(c=t.filterGainRange)),c):t.noteSizeMax}};getVolumeCapForSetting=(e,i,n)=>{if(e){let a=t.modulators[i].maxRawVol;return a!=null?(n!=null&&(t.modulators[i].name=="post eq"||t.modulators[i].name=="pre eq"||t.modulators[i].name=="song eq")&&(a=t.filterMorphCount-1,n>0&&n%2?a=t.filterFreqRange:n>0&&(a=t.filterGainRange)),a):t.noteSizeMax}else return t.noteSizeMax};getChannelCount(){return this.pitchChannelCount+this.noiseChannelCount+this.modChannelCount}getMaxInstrumentsPerChannel(){return Math.max(this.layeredInstruments?t.layeredInstrumentCountMax:t.instrumentCountMin,this.patternInstruments?t.patternInstrumentCountMax:t.instrumentCountMin)}getMaxInstrumentsPerPattern(e){return this.getMaxInstrumentsPerPatternForChannel(this.channels[e])}getMaxInstrumentsPerPatternForChannel(e){return this.layeredInstruments?Math.min(t.layeredInstrumentCountMax,e.instruments.length):1}getChannelIsNoise(e){return e>=this.pitchChannelCount&&e<this.pitchChannelCount+this.noiseChannelCount}getChannelIsMod(e){return e>=this.pitchChannelCount+this.noiseChannelCount}static secondsToFadeInSetting(e){return A(0,t.fadeInRange,Math.round((-.95+Math.sqrt(.9025+.2*e/.0125))/.1))}static ticksToFadeOutSetting(e){let i=t.fadeOutTicks[0];if(e<=i)return 0;for(let n=1;n<t.fadeOutTicks.length;n++){let a=t.fadeOutTicks[n];if(e<=a)return e<(i+a)/2?n-1:n;i=a}return t.fadeOutTicks.length-1}initToDefault(e=!0){this.scale=1,this.scaleCustom=[!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0],this.key=0,this.octave=0,this.loopStart=0,this.loopLength=4,this.tempo=151,this.reverb=0,this.beatsPerBar=8,this.barCount=16,this.patternsPerChannel=8,this.rhythm=1,this.layeredInstruments=!1,this.patternInstruments=!1,this.eqFilter.reset();for(let i=0;i<t.filterMorphCount-1;i++)this.eqSubFilters[i]=null;if(this.title="Untitled",document.title=this.title+" - "+we.versionDisplayName,e){this.pitchChannelCount=3,this.noiseChannelCount=1,this.modChannelCount=1;for(let i=0;i<this.getChannelCount();i++){let n=i>=this.pitchChannelCount&&i<this.pitchChannelCount+this.noiseChannelCount,a=i>=this.pitchChannelCount+this.noiseChannelCount;this.channels.length<=i&&(this.channels[i]=new ft,this.channels[i].color=i);let s=this.channels[i];s.octave=Math.max(4-i,0);for(let r=0;r<this.patternsPerChannel;r++)s.patterns.length<=r?s.patterns[r]=new at:s.patterns[r].reset();s.patterns.length=this.patternsPerChannel;for(let r=0;r<t.instrumentCountMin;r++)s.instruments.length<=r&&(s.instruments[r]=new Ne(n,a)),s.instruments[r].setTypeAndReset(a?10:n?2:0,n,a);s.instruments.length=t.instrumentCountMin;for(let r=0;r<this.barCount;r++)s.bars[r]=0;s.bars.length=this.barCount}this.channels.length=this.getChannelCount()}}toBase64String(){let e,i=[];i.push(o.Pe),i.push(T[o.ce]),i.push(78);var n=encodeURIComponent(this.title);i.push(T[n.length>>6],T[n.length&63]);for(let f=0;f<n.length;f++)i.push(n.charCodeAt(f));if(i.push(110,T[this.pitchChannelCount],T[this.noiseChannelCount],T[this.modChannelCount]),i.push(115,T[this.scale]),this.scale==t.scales.dictionary.Custom.index)for(var a=1;a<t.pitchesPerOctave;a++)i.push(T[this.scaleCustom[a]?1:0]);if(i.push(107,T[this.key],T[this.octave-t.octaveMin]),i.push(108,T[this.loopStart>>6],T[this.loopStart&63]),i.push(101,T[this.loopLength-1>>6],T[this.loopLength-1&63]),i.push(116,T[this.tempo>>6],T[this.tempo&63]),i.push(97,T[this.beatsPerBar-1]),i.push(103,T[this.barCount-1>>6],T[this.barCount-1&63]),i.push(106,T[this.patternsPerChannel-1>>6],T[this.patternsPerChannel-1&63]),i.push(114,T[this.rhythm]),i.push(79),this.compressionRatio!=1||this.limitRatio!=1||this.limitRise!=4e3||this.limitDecay!=4||this.limitThreshold!=1||this.compressionThreshold!=1||this.masterGain!=1?(i.push(T[Math.round(this.compressionRatio<1?this.compressionRatio*10:10+(this.compressionRatio-1)*60)]),i.push(T[Math.round(this.limitRatio<1?this.limitRatio*10:9+this.limitRatio)]),i.push(T[this.limitDecay]),i.push(T[Math.round((this.limitRise-2e3)/250)]),i.push(T[Math.round(this.compressionThreshold*20)]),i.push(T[Math.round(this.limitThreshold*20)]),i.push(T[Math.round(this.masterGain*50)>>6],T[Math.round(this.masterGain*50)&63])):i.push(T[63]),i.push(99),this.eqFilter==null)i.push(T[0]),console.log("Null post eq settings detected in toBase64String for song");else{i.push(T[this.eqFilter.controlPointCount]);for(let f=0;f<this.eqFilter.controlPointCount;f++){let m=this.eqFilter.controlPoints[f];i.push(T[m.type],T[Math.round(m.freq)],T[Math.round(m.gain)])}}let s=0;for(let f=0;f<t.filterMorphCount-1;f++)s|=+(this.eqSubFilters[f+1]!=null)<<f;i.push(T[s>>6],T[s&63]);for(let f=0;f<t.filterMorphCount-1;f++)if(s&1<<f){i.push(T[this.eqSubFilters[f+1].controlPointCount]);for(let m=0;m<this.eqSubFilters[f+1].controlPointCount;m++){let p=this.eqSubFilters[f+1].controlPoints[m];i.push(T[p.type],T[Math.round(p.freq)],T[Math.round(p.gain)])}}i.push(85);for(let f=0;f<this.getChannelCount();f++){var r=encodeURIComponent(this.channels[f].name);i.push(T[r.length>>6],T[r.length&63]);for(let m=0;m<r.length;m++)i.push(r.charCodeAt(m));i.push(T[this.channels[f].color%60])}if(i.push(105,T[this.layeredInstruments<<1|this.patternInstruments]),this.layeredInstruments||this.patternInstruments)for(let f=0;f<this.getChannelCount();f++)i.push(T[this.channels[f].instruments.length-t.instrumentCountMin]);i.push(111);for(let f=0;f<this.pitchChannelCount;f++)i.push(T[this.channels[f].octave]);for(let f=0;f<this.getChannelCount();f++)for(let m=0;m<this.channels[f].instruments.length;m++){let p=this.channels[f].instruments[m];if(i.push(84,T[p.type]),i.push(118,T[p.volume+t.volumeRange/2>>6],T[p.volume+t.volumeRange/2&63]),i.push(117,T[p.preset>>6],T[p.preset&63]),i.push(102),i.push(T[+p.noteFilterType]),p.noteFilterType)i.push(T[p.noteFilterSimpleCut]),i.push(T[p.noteFilterSimplePeak]);else{if(p.noteFilter==null)i.push(T[0]),console.log("Null pre eq settings detected in toBase64String for channelIndex "+f+", instrumentIndex "+m);else{i.push(T[p.noteFilter.controlPointCount]);for(let x=0;x<p.noteFilter.controlPointCount;x++){let w=p.noteFilter.controlPoints[x];i.push(T[w.type],T[Math.round(w.freq)],T[Math.round(w.gain)])}}let S=0;for(let x=0;x<t.filterMorphCount-1;x++)S|=+(p.noteSubFilters[x+1]!=null)<<x;i.push(T[S>>6],T[S&63]);for(let x=0;x<t.filterMorphCount-1;x++)if(S&1<<x){i.push(T[p.noteSubFilters[x+1].controlPointCount]);for(let w=0;w<p.noteSubFilters[x+1].controlPointCount;w++){let b=p.noteSubFilters[x+1].controlPoints[w];i.push(T[b.type],T[Math.round(b.freq)],T[Math.round(b.gain)])}}}i.push(113,T[p.effectCount]);for(let S=0;S<p.effectCount;S++){if(p.effects[S]!=null)i.push(T[p.effects[S].type&63]);else{i.push(T[0]);continue}let x=p.effects[S];if(x.type==5)if(i.push(T[+x.eqFilterType]),x.eqFilterType)i.push(T[x.eqFilterSimpleCut]),i.push(T[x.eqFilterSimplePeak]);else{if(x.eqFilter==null)i.push(T[0]),console.log("Null post eq settings detected in toBase64String for channelIndex "+f+", instrumentIndex "+m);else{i.push(T[x.eqFilter.controlPointCount]);for(let b=0;b<x.eqFilter.controlPointCount;b++){let P=x.eqFilter.controlPoints[b];i.push(T[P.type],T[Math.round(P.freq)],T[Math.round(P.gain)])}}let w=0;for(let b=0;b<t.filterMorphCount-1;b++)w|=+(x.eqSubFilters[b+1]!=null)<<b;i.push(T[w>>6],T[w&63]);for(let b=0;b<t.filterMorphCount-1;b++)if(w&1<<b){i.push(T[x.eqSubFilters[b+1].controlPointCount]);for(let P=0;P<x.eqSubFilters[b+1].controlPointCount;P++){let B=x.eqSubFilters[b+1].controlPoints[P];i.push(T[B.type],T[Math.round(B.freq)],T[Math.round(B.gain)])}}}else x.type==3?(i.push(T[x.distortion]),i.push(T[+p.aliases])):x.type==4?i.push(T[x.bitcrusherFreq],T[x.bitcrusherQuantization]):x.type==9?i.push(T[x.gain>>6],T[x.gain&63]):x.type==2?(i.push(T[x.pan>>6],T[x.pan&63]),i.push(T[x.panDelay]),i.push(T[x.panMode])):x.type==10?(i.push(T[x.flanger]),i.push(T[x.flangerSpeed]),i.push(T[x.flangerDepth]),i.push(T[x.flangerFeedback])):x.type==1?i.push(T[x.chorus]):x.type==6?i.push(T[x.echoSustain],T[x.echoDelay],T[x.echoPingPong>>6],T[x.echoPingPong&63]):x.type==0?i.push(T[x.reverb]):x.type==8?(i.push(T[x.granular]),i.push(T[x.grainSize]),i.push(T[x.grainAmounts]),i.push(T[x.grainRange])):x.type==7&&(i.push(T[x.ringModulation]),i.push(T[x.ringModulationHz]),i.push(T[x.ringModWaveformIndex]),i.push(T[x.ringModPulseWidth]),i.push(T[x.ringModHzOffset-t.rmHzOffsetMin>>6],T[x.ringModHzOffset-t.rmHzOffsetMin&63]))}if(i.push(T[p.mdeffects&63]),Gt(p.mdeffects)&&i.push(T[p.transition]),Ut(p.mdeffects)&&(i.push(T[p.chord]),p.chord==t.chords.dictionary.arpeggio.index&&(i.push(T[p.arpeggioSpeed]),i.push(T[+p.fastTwoNoteArp])),p.chord==t.chords.dictionary.monophonic.index&&i.push(T[p.monoChordTone])),Dt(p.mdeffects)&&i.push(T[p.pitchShift]),Tt(p.mdeffects)&&i.push(T[p.detune-t.detuneMin>>6],T[p.detune-t.detuneMin&63]),At(p.mdeffects)&&(i.push(T[p.vibrato]),p.vibrato==t.vibratos.length&&(i.push(T[Math.round(p.vibratoDepth*25)]),i.push(T[p.vibratoSpeed]),i.push(T[Math.round(p.vibratoDelay)]),i.push(T[p.vibratoType]))),p.type!=4&&(i.push(100,T[p.fadeIn],T[p.fadeOut]),i.push(T[+p.clicklessTransition])),p.type==5||p.type==7){i.push(72);let S=new St;for(let x=0;x<t.harmonicsControlPoints;x++)S.write(t.harmonicsControlPointBits,p.harmonicsWave.harmonics[x]);S.encodeBase64(i)}if(p.type==0){p.chipWave>186?(i.push(119,T[p.chipWave-186]),i.push(T[3])):p.chipWave>124?(i.push(119,T[p.chipWave-124]),i.push(T[2])):p.chipWave>62?(i.push(119,T[p.chipWave-62]),i.push(T[1])):(i.push(119,T[p.chipWave]),i.push(T[0])),i.push(104,T[p.unison]),p.unison==t.unisons.length&&bt(i,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign),i.push(121);let S=A(0,32,p.chipWaveLoopMode)<<1|(p.isUsingAdvancedLoopControls?1:0);i.push(T[S]);let x=A(0,32,0)<<2|(p.chipWaveInStereo?1:0)<<1|(p.chipWavePlayBackwards?1:0);i.push(T[x]),aa(i,p.chipWaveLoopStart),aa(i,p.chipWaveLoopEnd),aa(i,p.chipWaveStartOffset)}else if(p.type==1||p.type==11){if(p.type==1)i.push(65,T[p.algorithm]),i.push(70,T[p.feedbackType]);else{if(i.push(65,T[p.algorithm6Op]),p.algorithm6Op==0){i.push(67,T[p.customAlgorithm.carrierCount]),i.push(113);for(let S=0;S<p.customAlgorithm.modulatedBy.length;S++){for(let x=0;x<p.customAlgorithm.modulatedBy[S].length;x++)i.push(T[p.customAlgorithm.modulatedBy[S][x]]);i.push(82)}i.push(113)}if(i.push(70,T[p.feedbackType6Op]),p.feedbackType6Op==0){i.push(113);for(let S=0;S<p.customFeedbackType.indices.length;S++){for(let x=0;x<p.customFeedbackType.indices[S].length;x++)i.push(T[p.customFeedbackType.indices[S][x]]);i.push(82)}i.push(113)}}i.push(66,T[p.feedbackAmplitude]),i.push(81);for(let S=0;S<(p.type==11?6:t.operatorCount);S++)i.push(T[p.operators[S].frequency]);i.push(80);for(let S=0;S<(p.type==11?6:t.operatorCount);S++)i.push(T[p.operators[S].amplitude]);i.push(82);for(let S=0;S<(p.type==11?6:t.operatorCount);S++)i.push(T[p.operators[S].waveform]),p.operators[S].waveform==2&&i.push(T[p.operators[S].pulseWidth])}else if(p.type==9){p.chipWave>186?(i.push(119,T[p.chipWave-186]),i.push(T[3])):p.chipWave>124?(i.push(119,T[p.chipWave-124]),i.push(T[2])):p.chipWave>62?(i.push(119,T[p.chipWave-62]),i.push(T[1])):(i.push(119,T[p.chipWave]),i.push(T[0])),i.push(104,T[p.unison]),p.unison==t.unisons.length&&bt(i,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign),i.push(77);for(let S=0;S<64;S++)i.push(T[p.customChipWave[S]+24])}else if(p.type==2)i.push(119,T[p.chipNoise]),i.push(104,T[p.unison]),p.unison==t.unisons.length&&bt(i,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign);else if(p.type==3){i.push(83);let S=new St;for(let x=0;x<t.spectrumControlPoints;x++)S.write(t.spectrumControlPointBits,p.spectrumWave.spectrum[x]);S.encodeBase64(i),i.push(104,T[p.unison]),p.unison==t.unisons.length&&bt(i,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign)}else if(p.type==4){i.push(122);for(let x=0;x<t.drumCount;x++)i.push(T[p.drumsetEnvelopes[x]]);i.push(83);let S=new St;for(let x=0;x<t.drumCount;x++)for(let w=0;w<t.spectrumControlPoints;w++)S.write(t.spectrumControlPointBits,p.drumsetSpectrumWaves[x].spectrum[w]);S.encodeBase64(i),i.push(104,T[p.unison]),p.unison==t.unisons.length&&bt(i,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign)}else if(p.type==5)i.push(104,T[p.unison]),p.unison==t.unisons.length&&bt(i,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign);else if(p.type==6)i.push(87,T[p.pulseWidth]),i.push(T[p.decimalOffset>>6],T[p.decimalOffset&63]),i.push(104,T[p.unison]),p.unison==t.unisons.length&&bt(i,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign);else if(p.type==8)i.push(120,T[p.supersawDynamism],T[p.supersawSpread],T[p.supersawShape]),i.push(87,T[p.pulseWidth]),i.push(T[p.decimalOffset>>6],T[p.decimalOffset&63]);else if(p.type==7){if(t.stringSustainRange>32||!1)throw new Error("Not enough bits to represent sustain value and type in same base64 character.");i.push(104,T[p.unison]),p.unison==t.unisons.length&&bt(i,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign),i.push(73,T[p.stringSustain|p.stringSustainType<<5])}else if(p.type!=10)throw new Error("Unknown instrument type.");i.push(69,T[p.envelopeCount]),i.push(T[p.envelopeSpeed]);for(let S=0;S<p.envelopeCount;S++){i.push(T[p.envelopes[S].target]),t.instrumentAutomationTargets[p.envelopes[S].target].maxCount>1&&i.push(T[p.envelopes[S].index]),i.push(T[p.envelopes[S].envelope]),t.newEnvelopes[p.envelopes[S].envelope].name=="pitch"?p.isNoiseInstrument?(i.push(T[p.envelopes[S].pitchEnvelopeStart]),i.push(T[p.envelopes[S].pitchEnvelopeEnd])):(i.push(T[p.envelopes[S].pitchEnvelopeStart>>6],T[p.envelopes[S].pitchEnvelopeStart&63]),i.push(T[p.envelopes[S].pitchEnvelopeEnd>>6],T[p.envelopes[S].pitchEnvelopeEnd&63])):t.newEnvelopes[p.envelopes[S].envelope].name=="random"?(i.push(T[p.envelopes[S].steps]),i.push(T[p.envelopes[S].seed]),i.push(T[p.envelopes[S].waveform])):t.newEnvelopes[p.envelopes[S].envelope].name=="lfo"&&(i.push(T[p.envelopes[S].waveform]),(p.envelopes[S].waveform==5||p.envelopes[S].waveform==6)&&i.push(T[p.envelopes[S].steps]));let x=+p.envelopes[S].discrete;x=x<<1,x+=+p.envelopes[S].inverse,i.push(T[x]?T[x]:T[0]),t.newEnvelopes[p.envelopes[S].envelope].name!="pitch"&&t.newEnvelopes[p.envelopes[S].envelope].name!="note size"&&t.newEnvelopes[p.envelopes[S].envelope].name!="punch"&&t.newEnvelopes[p.envelopes[S].envelope].name!="none"&&i.push(T[t.perEnvelopeSpeedToIndices[p.envelopes[S].perEnvelopeSpeed]]),i.push(T[p.envelopes[S].perEnvelopeLowerBound*10]),i.push(T[p.envelopes[S].perEnvelopeUpperBound*10])}}i.push(98),e=new St;let c=0;for(;1<<c<this.patternsPerChannel+1;)c++;for(let f=0;f<this.getChannelCount();f++)for(let m=0;m<this.barCount;m++)e.write(c,this.channels[f].bars[m]);e.encodeBase64(i),i.push(112),e=new St;let d=new St,y=o.getNeededBits(t.noteSizeMax);for(let f=0;f<this.getChannelCount();f++){let m=this.channels[f],p=this.getMaxInstrumentsPerPattern(f),S=this.getChannelIsNoise(f),x=this.getChannelIsMod(f),w=o.getNeededBits(p-t.instrumentCountMin),b=o.getNeededBits(m.instruments.length-1);if(x){let D=o.getNeededBits(this.getMaxInstrumentsPerChannel()+2);for(let R=0;R<m.instruments.length;R++){let N=this.channels[f].instruments[R];for(let z=0;z<t.modCount;z++){let W=N.modChannels[z],H=N.modInstruments[z],U=N.modulators[z],G=N.modFilterTypes[z],u=N.modEnvelopeNumbers[z],F=t.modulators[U].forSong?2:0;if(U==t.modulators.dictionary.none.index&&(F=3),e.write(2,F),F==0||F==1){e.write(8,W.length);for(let C=0;C<W.length;C++)e.write(8,W[C]);e.write(8,H.length);for(let C=0;C<H.length;C++)e.write(D,H[C])}F!=3&&e.write(6,U),(t.modulators[N.modulators[z]].name=="post eq"||t.modulators[N.modulators[z]].name=="pre eq"||t.modulators[N.modulators[z]].name=="song eq")&&e.write(6,G),(t.modulators[N.modulators[z]].name=="individual envelope speed"||t.modulators[N.modulators[z]].name=="reset envelope"||t.modulators[N.modulators[z]].name=="individual envelope lower bound"||t.modulators[N.modulators[z]].name=="individual envelope upper bound")&&e.write(6,u)}}}let P=S||x?0:m.octave*t.pitchesPerOctave,B=S?4:P,L=x?[0,1,2,3,4,5]:S?[4,6,7,2,3,8,0,10]:[0,7,12,19,24,-5,-12],E=[];for(let D=0;D<L.length;D++)L[D]+=P;for(let D of m.patterns){if(this.patternInstruments){let R=ze(t.instrumentCountMin,p,D.instruments.length);e.write(w,R-t.instrumentCountMin);for(let N=0;N<R;N++)e.write(b,D.instruments[N])}if(D.notes.length>0){e.write(1,1);let R=0;for(let N of D.notes){N.start<R&&x&&(e.write(2,0),e.write(1,1),e.writePartDuration(R-N.start)),N.start>R&&(e.write(2,0),x&&e.write(1,0),e.writePartDuration(N.start-R)),d.clear(),N.pitches.length==1?d.write(1,0):(d.write(1,1),d.write(3,N.pitches.length-2)),N.chipWaveStartOffset==0?d.write(1,0):(d.write(1,1),d.write(31,N.chipWaveStartOffset)),d.writePinCount(N.pins.length-1),x?d.write(11,N.pins[0].size):d.write(y,N.pins[0].size);let z=0,W=N.pitches[0],H=W,U=[];for(let C=1;C<N.pins.length;C++){let I=N.pins[C],M=W+I.interval;H!=M?(d.write(1,1),U.push(M),H=M):d.write(1,0),d.writePartDuration(I.time-z),z=I.time,x?d.write(11,I.size):d.write(y,I.size)}let G=String.fromCharCode.apply(null,d.encodeBase64([])),u=E.indexOf(G);u==-1?(e.write(2,1),e.concat(d)):(e.write(1,1),e.writeLongTail(0,0,u),E.splice(u,1)),E.unshift(G),E.length>10&&E.pop();let F=N.pitches.concat(U);for(let C=0;C<F.length;C++){let I=F[C],M=L.indexOf(I);if(M==-1){let q=0,O=B;if(O<I)for(;O!=I;)O++,L.indexOf(O)==-1&&q++;else for(;O!=I;)O--,L.indexOf(O)==-1&&q--;e.write(1,0),e.writePitchInterval(q)}else e.write(1,1),e.write(4,M),L.splice(M,1);L.unshift(I),L.length>16&&L.pop(),C==N.pitches.length-1?B=N.pitches[0]:B=I}N.start==0&&e.write(1,N.continuesLastPattern?1:0),R=N.end}R<this.beatsPerBar*t.partsPerBeat+ +x&&(e.write(2,0),x&&e.write(1,0),e.writePartDuration(this.beatsPerBar*t.partsPerBeat+ +x-R))}else e.write(1,0)}}let l=e.lengthBase64(),v=[];for(;l>0;)v.unshift(T[l&63]),l=l>>6;i.push(T[v.length]),Array.prototype.push.apply(i,v),e.encodeBase64(i);let h=64e3,g="";if(we.customSamples!=null&&we.customSamples.length>0&&(g="|"+we.customSamples.join("|")),i.length<h)return String.fromCharCode.apply(null,i)+g;{let f="";for(let m=0;m<i.length;m+=h)f+=String.fromCharCode.apply(null,i.slice(m,m+h));return f+g}}static ie(e){return e==0?e=1:e==1&&(e=0),t.envelopes[A(0,t.envelopes.length,e)]}fromBase64String(e,i="auto"){if(e==null||e==""){o.fe(),this.initToDefault(!0);return}let n=0;for(;e.charCodeAt(n)<=32;)n++;if(e.charCodeAt(n)==35&&n++,e.charCodeAt(n)==123){this.fromJsonObject(JSON.parse(n==0?e:e.substring(n)),i);return}let a=e.charCodeAt(n),s=!1,r=!1,c=!1,d=!1,y=!1,l=!1;a==100||a==116?(l=!0,y=!0,n++):a==106?(r=!0,n++):a==103?(c=!0,n++):a==117?(d=!0,n++):a==100?(r=!0,n++):a==97?(d=!0,n++):a==115?(y=!0,n++):s=!0;let v=k[e.charCodeAt(n++)];if(s&&(v==-1||v>o.be||v<o.ve)||r&&(v==-1||v>o.xe||v<o.Se)||c&&(v==-1||v>o.Ce||v<o.Fe)||d&&(v==-1||v>o.we||v<o.Ie)||(y||l)&&(v==-1||v>o.ce||v<o.ke))return;let h=v<2,g=v<3,f=v<4,m=v<5,p=v<6,S=v<7,x=v<8,w=v<9;this.initToDefault(s&&w||r&&m||f&&c);let b=s&&w||r&&m,P=!1;if(y||d||c){e=e.replaceAll("%7C","|");var B=e.split("|");if(e=B.shift(),we.customSamples==null||we.customSamples.join(", ")!=B.join(", ")){o.re();let u=!1,F=!1,C=!1,I=[],M=[];be.statusTable={},be.urlTable={},be.totalSamples=0,be.samplesLoaded=0,Et.dispatchEvent(new ot(be.totalSamples,be.samplesLoaded));for(let q of B)if(q.toLowerCase()==="legacysamples")u||(u=!0,I.push(q),tt(0));else if(q.toLowerCase()==="nintariboxsamples")F||(F=!0,I.push(q),tt(1));else if(q.toLowerCase()==="mariopaintboxsamples")C||(C=!0,I.push(q),tt(2));else{let O=g;if(!o.me(q,I,M,be,O))continue}if(I.length>0&&(we.customSamples=I),M.length>0){let q=fe(M);we.presetCategories[we.presetCategories.length]={name:"Custom Sample Presets",presets:q,index:we.presetCategories.length}}}}if(g&&s){for(let u of this.channels)u.instruments[0].transition=t.transitions.dictionary.interrupt.index,u.instruments[0].mdeffects|=8;this.channels[3].instruments[0].chipNoise=0}let L=null;if(s&&w||r&&m||f&&c){L=[];for(let u=L.length;u<this.getChannelCount();u++){L[u]=[];for(let F=0;F<t.instrumentCountMin;F++)L[u][F]={}}}let E=0,D=0,R=-1,N,z=!1,W=!1;for(;n<e.length;)switch(N=e.charCodeAt(n++)){case 78:{var H=(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)];this.title=decodeURIComponent(e.substring(n,n+H)),document.title=this.title+" - "+we.versionDisplayName,n+=H}break;case 110:{this.pitchChannelCount=k[e.charCodeAt(n++)],this.noiseChannelCount=k[e.charCodeAt(n++)],s||r&&h?this.modChannelCount=0:this.modChannelCount=k[e.charCodeAt(n++)],this.pitchChannelCount=ze(t.pitchChannelCountMin,t.pitchChannelCountMax,this.pitchChannelCount),this.noiseChannelCount=ze(t.noiseChannelCountMin,t.noiseChannelCountMax,this.noiseChannelCount),this.modChannelCount=ze(t.modChannelCountMin,t.modChannelCountMax,this.modChannelCount);for(let u=this.channels.length;u<this.getChannelCount();u++)this.channels[u]=new ft;if(this.channels.length=this.getChannelCount(),s&&w||r&&m||f&&c)for(let u=L.length;u<this.getChannelCount();u++){L[u]=[];for(let F=0;F<t.instrumentCountMin;F++)L[u][F]={}}}break;case 115:{if(this.scale=A(0,t.scales.length,k[e.charCodeAt(n++)]),this.scale==t.scales.dictionary.Custom.index)for(var U=1;U<t.pitchesPerOctave;U++)this.scaleCustom[U]=k[e.charCodeAt(n++)]==1;s&&(this.scale=0)}break;case 107:if(S&&s)this.key=A(0,t.keys.length,11-k[e.charCodeAt(n++)]),this.octave=0;else if(s||r)this.key=A(0,t.keys.length,k[e.charCodeAt(n++)]),this.octave=0;else if(c||g&&d){let u=k[e.charCodeAt(n++)],[F,C]=Mr(u);this.key=F,this.octave=C}else this.key=A(0,t.keys.length,k[e.charCodeAt(n++)]),this.octave=A(t.octaveMin,t.octaveMax+1,k[e.charCodeAt(n++)]+t.octaveMin);break;case 108:m&&s?this.loopStart=k[e.charCodeAt(n++)]:this.loopStart=(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)];break;case 101:m&&s?this.loopLength=k[e.charCodeAt(n++)]:this.loopLength=(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)]+1;break;case 116:f&&s?this.tempo=[95,120,151,190][k[e.charCodeAt(n++)]]:S&&s?this.tempo=[88,95,103,111,120,130,140,151,163,176,190,206,222,240,259][k[e.charCodeAt(n++)]]:this.tempo=k[e.charCodeAt(n++)]<<6|k[e.charCodeAt(n++)],this.tempo=A(t.tempoMin,t.tempoMax+1,this.tempo);break;case 109:w&&s?(E=k[e.charCodeAt(n++)]*12,E=A(0,t.reverbRange,E)):(r&&m||f&&c)&&(E=k[e.charCodeAt(n++)],E=A(0,t.reverbRange,E));break;case 97:g&&s?this.beatsPerBar=[6,7,8,9,10][k[e.charCodeAt(n++)]]:this.beatsPerBar=k[e.charCodeAt(n++)]+1,this.beatsPerBar=Math.max(t.beatsPerBarMin,Math.min(t.beatsPerBarMax,this.beatsPerBar));break;case 103:{let u=(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)]+1;this.barCount=ze(t.barCountMin,t.barCountMax,u);for(let F=0;F<this.getChannelCount();F++){for(let C=this.channels[F].bars.length;C<this.barCount;C++)this.channels[F].bars[C]=C<4?1:0;this.channels[F].bars.length=this.barCount}}break;case 106:{let u;x&&s?u=k[e.charCodeAt(n++)]+1:u=(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)]+1,this.patternsPerChannel=ze(1,t.barCountMax,u);let F=this.getChannelCount();for(let C=0;C<F;C++){let I=this.channels[C].patterns;for(let M=I.length;M<this.patternsPerChannel;M++)I[M]=new at;I.length=this.patternsPerChannel}}break;case 105:if(w&&s||r&&m||f&&c){let u=ze(t.instrumentCountMin,t.patternInstrumentCountMax,k[e.charCodeAt(n++)]+t.instrumentCountMin);this.layeredInstruments=!1,this.patternInstruments=u>1;for(let F=0;F<this.getChannelCount();F++){let C=F>=this.pitchChannelCount&&F<this.pitchChannelCount+this.noiseChannelCount,I=F>=this.pitchChannelCount+this.noiseChannelCount;for(let M=this.channels[F].instruments.length;M<u;M++)this.channels[F].instruments[M]=new Ne(C,I);if(this.channels[F].instruments.length=u,p&&s)for(let M=0;M<u;M++)this.channels[F].instruments[M].setTypeAndReset(C?2:0,C,I);for(let M=L[F].length;M<u;M++)L[F][M]={}}}else{let u=k[e.charCodeAt(n++)];this.layeredInstruments=(u&2)!=0,this.patternInstruments=(u&1)!=0;for(let F=0;F<this.getChannelCount();F++){let C=1;(this.layeredInstruments||this.patternInstruments)&&(C=ze(t.instrumentCountMin,this.getMaxInstrumentsPerChannel(),k[e.charCodeAt(n++)]+t.instrumentCountMin));let I=this.channels[F],M=this.getChannelIsNoise(F),q=this.getChannelIsMod(F);for(let O=I.instruments.length;O<C;O++)I.instruments[O]=new Ne(M,q);I.instruments.length=C}}break;case 114:if(!d&&!y){let u=k[e.charCodeAt(n++)];this.rhythm=A(0,t.rhythms.length,u),(r&&g||s)&&((this.rhythm==t.rhythms.dictionary["\xF73 (triplets)"].index||this.rhythm==t.rhythms.dictionary["\xF76"].index)&&(z=!0),this.rhythm>=t.rhythms.dictionary["\xF76"].index&&(W=!0))}else if(y&&f||d&&m){let u=[1,1,0,1,2,3,4,5];this.rhythm=A(0,t.rhythms.length,u[k[e.charCodeAt(n++)]])}else this.rhythm=A(0,t.rhythms.length,k[e.charCodeAt(n++)]);break;case 111:if(g&&s){let u=k[e.charCodeAt(n++)];this.channels[u].octave=A(0,t.pitchOctaves,k[e.charCodeAt(n++)]+1),u>=this.pitchChannelCount&&(this.channels[u].octave=0)}else if(w&&s||r&&m||f&&c)for(let u=0;u<this.getChannelCount();u++)this.channels[u].octave=A(0,t.pitchOctaves,k[e.charCodeAt(n++)]+1),u>=this.pitchChannelCount&&(this.channels[u].octave=0);else{for(let u=0;u<this.pitchChannelCount;u++)this.channels[u].octave=A(0,t.pitchOctaves,k[e.charCodeAt(n++)]);for(let u=this.pitchChannelCount;u<this.getChannelCount();u++)this.channels[u].octave=0}break;case 84:{R++,R>=this.channels[D].instruments.length&&(D++,R=0),ze(0,this.channels.length-1,D);let u=this.channels[D].instruments[R],F=ze(0,11,k[e.charCodeAt(n++)]);if(r&&m||f&&c?(F==7||F==8)&&(F+=2):(r&&p||c&&!f||d&&m)&&(F==8||F==9||F==10)&&(F+=1),u.setTypeAndReset(F,D>=this.pitchChannelCount&&D<this.pitchChannelCount+this.noiseChannelCount,D>=this.pitchChannelCount+this.noiseChannelCount),(S&&s||h&&r)&&(F==0||F==9||F==6)){u.aliases=!0;let C=u.addEffect(3);C.distortion=0}z&&(u.arpeggioSpeed=9),W&&(u.fastTwoNoteArp=!0),S&&s&&u.chord!=t.chords.dictionary.simultaneous.index&&(u.mdeffects|=16)}break;case 117:{let u=k[e.charCodeAt(n++)]<<6|k[e.charCodeAt(n++)];this.channels[D].instruments[R].preset=u,r&&m||f&&c?this.channels[D].instruments[R].preset==7&&(this.channels[D].instruments[R].preset=9,this.channels[D].instruments[R].type=9):(r&&p||d&&m)&&(this.channels[D].instruments[R].preset==8&&(this.channels[D].instruments[R].preset=9,this.channels[D].instruments[R].type=9),this.channels[D].instruments[R].preset==10&&(this.channels[D].instruments[R].preset=11,this.channels[D].instruments[R].type=11)),s&&u==we.nameToPresetValue("grand piano 1")&&(this.channels[D].instruments[R].preset=we.nameToPresetValue("grand piano 3"))}break;case 119:if(g&&s){let u=[1,2,3,4,5,6,7,8,0],F=k[e.charCodeAt(n++)],C=this.channels[F].instruments[0];C.chipWave=A(0,t.chipWaves.length,u[k[e.charCodeAt(n++)]]|0),C.convertLegacySettings(L[F][0],b)}else if(p&&s){let u=[1,2,3,4,5,6,7,8,0];for(let F=0;F<this.getChannelCount();F++)for(let C of this.channels[F].instruments)F>=this.pitchChannelCount?C.chipNoise=A(0,t.chipNoises.length,k[e.charCodeAt(n++)]):C.chipWave=A(0,t.chipWaves.length,u[k[e.charCodeAt(n++)]]|0)}else if(S&&s){let u=[1,2,3,4,5,6,7,8,0];D>=this.pitchChannelCount?this.channels[D].instruments[R].chipNoise=A(0,t.chipNoises.length,k[e.charCodeAt(n++)]):this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,u[k[e.charCodeAt(n++)]]|0)}else if(this.channels[D].instruments[R].type==2)this.channels[D].instruments[R].chipNoise=A(0,t.chipNoises.length,k[e.charCodeAt(n++)]);else if(y||d){let u=k[e.charCodeAt(n++)],F=k[e.charCodeAt(n++)];F==3?this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,u+186):F==2?this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,u+124):F==1?this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,u+62):this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,u)}else this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,k[e.charCodeAt(n++)]);break;case 102:if(w&&s||m&&r||f&&c)if(S&&s){let u=[10,6,3,0,8,5,2],F=["none","none","none","none","decay 1","decay 2","decay 3"];if(g&&s){let C=k[e.charCodeAt(n++)],I=this.channels[C].instruments[0],M=L[C][0],q=[1,3,4,5][A(0,u.length,k[e.charCodeAt(n++)])];M.filterCutoff=u[q],M.filterResonance=0,M.filterEnvelope=t.envelopes.dictionary[F[q]],I.convertLegacySettings(M,b)}else if(p&&s)for(let C=0;C<this.getChannelCount();C++)for(let I=0;I<this.channels[C].instruments.length;I++){let M=this.channels[C].instruments[I],q=L[C][I],O=A(0,u.length,k[e.charCodeAt(n++)]+1);C<this.pitchChannelCount?(q.filterCutoff=u[O],q.filterResonance=0,q.filterEnvelope=t.envelopes.dictionary[F[O]]):(q.filterCutoff=10,q.filterResonance=0,q.filterEnvelope=t.envelopes.dictionary.none),M.convertLegacySettings(q,b)}else{let C=A(0,u.length,k[e.charCodeAt(n++)]),I=this.channels[D].instruments[R],M=L[D][R];M.filterCutoff=u[C],M.filterResonance=0,M.filterEnvelope=t.envelopes.dictionary[F[C]],I.convertLegacySettings(M,b)}}else{let F=this.channels[D].instruments[R],C=L[D][R];C.filterCutoff=A(0,11,k[e.charCodeAt(n++)]),F.convertLegacySettings(C,b)}else{let u=this.channels[D].instruments[R],F=k[e.charCodeAt(n++)];if(l)if(F==0){u.noteFilterType=!1,F=k[e.charCodeAt(n++)];let C=F;u.noteFilter.controlPointCount=A(0,t.filterMaxPoints+1,C);for(let M=u.noteFilter.controlPoints.length;M<u.noteFilter.controlPointCount;M++)u.noteFilter.controlPoints[M]=new Pe;for(let M=0;M<u.noteFilter.controlPointCount;M++){let q=u.noteFilter.controlPoints[M];q.type=A(0,3,k[e.charCodeAt(n++)]),q.freq=A(0,t.filterFreqRange,k[e.charCodeAt(n++)]),q.gain=A(0,t.filterGainRange,k[e.charCodeAt(n++)])}for(let M=u.noteFilter.controlPointCount;M<C;M++)n+=3;u.noteSubFilters[0]=u.noteFilter;let I=k[e.charCodeAt(n++)]<<6|k[e.charCodeAt(n++)];for(let M=0;M<t.filterMorphCount-1;M++)if(I&1<<M){let q=k[e.charCodeAt(n++)];u.noteSubFilters[M+1]==null&&(u.noteSubFilters[M+1]=new Ee),u.noteSubFilters[M+1].controlPointCount=A(0,t.filterMaxPoints+1,q);for(let O=u.noteSubFilters[M+1].controlPoints.length;O<u.noteSubFilters[M+1].controlPointCount;O++)u.noteSubFilters[M+1].controlPoints[O]=new Pe;for(let O=0;O<u.noteSubFilters[M+1].controlPointCount;O++){let j=u.noteSubFilters[M+1].controlPoints[O];j.type=A(0,3,k[e.charCodeAt(n++)]),j.freq=A(0,t.filterFreqRange,k[e.charCodeAt(n++)]),j.gain=A(0,t.filterGainRange,k[e.charCodeAt(n++)])}for(let O=u.noteSubFilters[M+1].controlPointCount;O<q;O++)n+=3}}else u.noteFilterType=!0,u.noteFilterSimpleCut=A(0,t.filterSimpleCutRange,k[e.charCodeAt(n++)]),u.noteFilterSimplePeak=A(0,t.filterSimplePeakRange,k[e.charCodeAt(n++)]);else{let C=u.addEffect(5);if(s||F==0){C.eqFilterType=!1,(r||c||d||y)&&(F=k[e.charCodeAt(n++)]);let I=F;C.eqFilter.controlPointCount=A(0,t.filterMaxPoints+1,I);for(let M=C.eqFilter.controlPoints.length;M<C.eqFilter.controlPointCount;M++)C.eqFilter.controlPoints[M]=new Pe;for(let M=0;M<C.eqFilter.controlPointCount;M++){let q=C.eqFilter.controlPoints[M];q.type=A(0,3,k[e.charCodeAt(n++)]),q.freq=A(0,t.filterFreqRange,k[e.charCodeAt(n++)]),q.gain=A(0,t.filterGainRange,k[e.charCodeAt(n++)])}for(let M=C.eqFilter.controlPointCount;M<I;M++)n+=3;if(C.eqSubFilters[0]=C.eqFilter,r&&!m||c&&!f||d||y){let M=k[e.charCodeAt(n++)]<<6|k[e.charCodeAt(n++)];for(let q=0;q<t.filterMorphCount-1;q++)if(M&1<<q){let O=k[e.charCodeAt(n++)];C.eqSubFilters[q+1]==null&&(C.eqSubFilters[q+1]=new Ee),C.eqSubFilters[q+1].controlPointCount=A(0,t.filterMaxPoints+1,O);for(let j=C.eqSubFilters[q+1].controlPoints.length;j<C.eqSubFilters[q+1].controlPointCount;j++)C.eqSubFilters[q+1].controlPoints[j]=new Pe;for(let j=0;j<C.eqSubFilters[q+1].controlPointCount;j++){let te=C.eqSubFilters[q+1].controlPoints[j];te.type=A(0,3,k[e.charCodeAt(n++)]),te.freq=A(0,t.filterFreqRange,k[e.charCodeAt(n++)]),te.gain=A(0,t.filterGainRange,k[e.charCodeAt(n++)])}for(let j=C.eqSubFilters[q+1].controlPointCount;j<O;j++)n+=3}}}else C.eqFilterType=!0,C.eqFilterSimpleCut=A(0,t.filterSimpleCutRange,k[e.charCodeAt(n++)]),C.eqFilterSimplePeak=A(0,t.filterSimplePeakRange,k[e.charCodeAt(n++)])}}break;case 121:if(y||d)if(g&&d){let u=Sn(e,n);n+=6;let F=e.slice(n,n+u);n+=u;let C=JSON.parse(atob(F));for(let I of C){let M=I.channel,q=I.instrument,O=I.info,j=this.channels[M].instruments[q];j.isUsingAdvancedLoopControls=O.isUsingAdvancedLoopControls,j.chipWaveLoopStart=O.chipWaveLoopStart,j.chipWaveLoopEnd=O.chipWaveLoopEnd,j.chipWaveLoopMode=O.chipWaveLoopMode,j.chipWavePlayBackwards=O.chipWavePlayBackwards,j.chipWaveStartOffset=O.chipWaveStartOffset}}else{let u=k[e.charCodeAt(n++)],F=!!(u&1),C=u>>1,I=k[e.charCodeAt(n++)],M=!!(I&2),q=!!(I&1),O=Sn(e,n);n+=6;let j=Sn(e,n);n+=6;let te=Sn(e,n);n+=6;let ee=this.channels[D].instruments[R];ee.isUsingAdvancedLoopControls=F,ee.chipWaveLoopStart=O,ee.chipWaveLoopEnd=j,ee.chipWaveLoopMode=C,ee.chipWavePlayBackwards=q,ee.chipWaveStartOffset=te,ee.chipWaveInStereo=M}else if(c&&!f&&p)document.URL.substring(document.URL.length-13).toLowerCase()!="legacysamples"&&(P||(P=!0,t.willReloadForCustomSamples=!0,we.customSamples=["legacySamples"],tt(0))),this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,k[e.charCodeAt(n++)]+125);else if(w&&s||r&&m||f&&c){let F=this.channels[D].instruments[R],C=L[D][R];C.filterResonance=A(0,8,k[e.charCodeAt(n++)]),F.convertLegacySettings(C,b)}break;case 122:{let u=this.channels[D].instruments[R],F=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11];if(w&&s||m&&r||f&&c)if(u.type==4)for(let C=0;C<t.drumCount;C++){let I=k[e.charCodeAt(n++)];(h&&c||!c&&!d&&!y)&&(I=F[I]),u.drumsetEnvelopes[C]=o.ie(I).index}else{let C=L[D][R],I=k[e.charCodeAt(n++)];(h&&c||!c&&!d&&!y)&&(I=F[I]),C.filterEnvelope=o.ie(I),u.convertLegacySettings(C,b)}else for(let C=0;C<t.drumCount;C++){let I=k[e.charCodeAt(n++)];(h&&c||!c&&!d&&!y)&&(I=F[I]),!y&&I>=2&&I++,u.drumsetEnvelopes[C]=A(0,t.envelopes.length,I)}}break;case 87:{let u=this.channels[D].instruments[R];if(u.pulseWidth=A(0,t.pulseWidthRange+ +r+1,k[e.charCodeAt(n++)]),s&&(u.pulseWidth=Math.round(Math.pow(.5,(7-u.pulseWidth)*t.pulseWidthStepPower)*t.pulseWidthRange)),w&&s||m&&r||f&&c){let F=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],C=L[D][R],I=k[e.charCodeAt(n++)];(h&&c||!c&&!d&&!y)&&(I=F[I]),C.pulseEnvelope=o.ie(I),u.convertLegacySettings(C,b)}(d&&!f||y)&&(u.decimalOffset=A(0,100,(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)]))}break;case 73:{let u=this.channels[D].instruments[R],F=k[e.charCodeAt(n++)];u.stringSustain=A(0,t.stringSustainRange,F&31),u.stringSustainType=t.enableAcousticSustain?A(0,2,F>>5):0}break;case 100:if(w&&s||r&&m||f&&c){let u=[{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3},{transition:"normal",fadeInSeconds:.04,fadeOutTicks:6},{transition:"normal",fadeInSeconds:0,fadeOutTicks:48},{transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72},{transition:"normal",fadeInSeconds:.06,fadeOutTicks:96},{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3}];if(g&&s){let F=k[e.charCodeAt(n++)],C=u[A(0,u.length,k[e.charCodeAt(n++)])],I=this.channels[F].instruments[0];I.fadeIn=mt(C.fadeInSeconds),I.fadeOut=yt(C.fadeOutTicks),I.transition=t.transitions.dictionary[C.transition].index,I.transition!=t.transitions.dictionary.normal.index&&(I.mdeffects|=8)}else if(p&&s)for(let F=0;F<this.getChannelCount();F++)for(let C of this.channels[F].instruments){let I=u[A(0,u.length,k[e.charCodeAt(n++)])];C.fadeIn=mt(I.fadeInSeconds),C.fadeOut=yt(I.fadeOutTicks),C.transition=t.transitions.dictionary[I.transition].index,C.transition!=t.transitions.dictionary.normal.index&&(C.mdeffects|=8)}else if(f&&!c&&!d&&!y||s){let F=u[A(0,u.length,k[e.charCodeAt(n++)])],C=this.channels[D].instruments[R];C.fadeIn=mt(F.fadeInSeconds),C.fadeOut=yt(F.fadeOutTicks),C.transition=t.transitions.dictionary[F.transition].index,C.transition!=t.transitions.dictionary.normal.index&&(C.mdeffects|=8)}else{let F=u[A(0,u.length,k[e.charCodeAt(n++)])],C=this.channels[D].instruments[R];C.fadeIn=mt(F.fadeInSeconds),C.fadeOut=yt(F.fadeOutTicks),C.transition=t.transitions.dictionary[F.transition].index,k[e.charCodeAt(n++)]>0&&(C.legacyTieOver=!0),C.clicklessTransition=!!k[e.charCodeAt(n++)],(C.transition!=t.transitions.dictionary.normal.index||C.clicklessTransition)&&(C.mdeffects|=8)}}else{let u=this.channels[D].instruments[R];u.fadeIn=A(0,t.fadeInRange,k[e.charCodeAt(n++)]),u.fadeOut=A(0,t.fadeOutTicks.length,k[e.charCodeAt(n++)]),(r||c||d||y)&&(u.clicklessTransition=!!k[e.charCodeAt(n++)])}break;case 99:if(w&&s||r&&m||f&&c)if(S&&s)if(g&&s){let u=[0,3,2,0],F=["none","none","none","tremolo2"],C=k[e.charCodeAt(n++)],I=A(0,u.length,k[e.charCodeAt(n++)]),M=this.channels[C].instruments[0],q=L[C][0];M.vibrato=u[I],(q.filterEnvelope==null||q.filterEnvelope.type==0)&&(q.filterEnvelope=t.envelopes.dictionary[F[I]],M.convertLegacySettings(q,b)),M.vibrato!=t.vibratos.dictionary.none.index&&(M.mdeffects|=4)}else if(p&&s){let u=[0,1,2,3,0,0],F=["none","none","none","none","tremolo5","tremolo2"];for(let C=0;C<this.getChannelCount();C++)for(let I=0;I<this.channels[C].instruments.length;I++){let M=A(0,u.length,k[e.charCodeAt(n++)]),q=this.channels[C].instruments[I],O=L[C][I];if(q.vibrato=u[M],(O.filterEnvelope==null||O.filterEnvelope.type==0)&&(O.filterEnvelope=t.envelopes.dictionary[F[M]],q.convertLegacySettings(O,b)),q.vibrato!=t.vibratos.dictionary.none.index&&(q.mdeffects|=4),(E!=0||r&&m||f&&c)&&!this.getChannelIsNoise(C)){let j=q.addEffect(0);j.reverb=E}}}else{let u=[0,1,2,3,0,0],F=["none","none","none","none","tremolo5","tremolo2"],C=A(0,u.length,k[e.charCodeAt(n++)]),I=this.channels[D].instruments[R],M=L[D][R];if(I.vibrato=u[C],(M.filterEnvelope==null||M.filterEnvelope.type==0)&&(M.filterEnvelope=t.envelopes.dictionary[F[C]],I.convertLegacySettings(M,b)),I.vibrato!=t.vibratos.dictionary.none.index&&(I.mdeffects|=4),E!=0||r&&m||f&&c){let q=I.addEffect(0);q.reverb=E}}else{let u=this.channels[D].instruments[R],F=A(0,t.vibratos.length+1,k[e.charCodeAt(n++)]);u.vibrato=F,u.vibrato!=t.vibratos.dictionary.none.index&&(u.mdeffects|=4),F==t.vibratos.length?(u.vibratoDepth=A(0,t.modulators.dictionary["vibrato depth"].maxRawVol+1,k[e.charCodeAt(n++)])/50,u.vibratoSpeed=A(0,t.modulators.dictionary["vibrato speed"].maxRawVol+1,k[e.charCodeAt(n++)]),u.vibratoDelay=A(0,t.modulators.dictionary["vibrato delay"].maxRawVol+1,k[e.charCodeAt(n++)])/2,u.vibratoType=A(0,t.vibratoTypes.length,k[e.charCodeAt(n++)]),u.mdeffects|=4):(u.vibratoDepth=t.vibratos[u.vibrato].amplitude,u.vibratoSpeed=10,u.vibratoDelay=t.vibratos[u.vibrato].delayTicks/2,u.vibratoType=t.vibratos[u.vibrato].type)}else if(y&&!f){let u=k[e.charCodeAt(n++)];this.eqFilter.controlPointCount=A(0,t.filterMaxPoints+1,u);for(let C=this.eqFilter.controlPoints.length;C<this.eqFilter.controlPointCount;C++)this.eqFilter.controlPoints[C]=new Pe;for(let C=0;C<this.eqFilter.controlPointCount;C++){let I=this.eqFilter.controlPoints[C];I.type=A(0,3,k[e.charCodeAt(n++)]),I.freq=A(0,t.filterFreqRange,k[e.charCodeAt(n++)]),I.gain=A(0,t.filterGainRange,k[e.charCodeAt(n++)])}for(let C=this.eqFilter.controlPointCount;C<u;C++)n+=3;this.eqSubFilters[0]=this.eqFilter;let F=k[e.charCodeAt(n++)]<<6|k[e.charCodeAt(n++)];for(let C=0;C<t.filterMorphCount-1;C++)if(F&1<<C){let I=k[e.charCodeAt(n++)];this.eqSubFilters[C+1]==null&&(this.eqSubFilters[C+1]=new Ee),this.eqSubFilters[C+1].controlPointCount=A(0,t.filterMaxPoints+1,I);for(let M=this.eqSubFilters[C+1].controlPoints.length;M<this.eqSubFilters[C+1].controlPointCount;M++)this.eqSubFilters[C+1].controlPoints[M]=new Pe;for(let M=0;M<this.eqSubFilters[C+1].controlPointCount;M++){let q=this.eqSubFilters[C+1].controlPoints[M];q.type=A(0,3,k[e.charCodeAt(n++)]),q.freq=A(0,t.filterFreqRange,k[e.charCodeAt(n++)]),q.gain=A(0,t.filterGainRange,k[e.charCodeAt(n++)])}for(let M=this.eqSubFilters[C+1].controlPointCount;M<I;M++)n+=3}}break;case 71:if(r&&m||f&&c){let u=this.channels[D].instruments[R];u.arpeggioSpeed=A(0,t.modulators.dictionary["arp speed"].maxRawVol+1,k[e.charCodeAt(n++)]),u.fastTwoNoteArp=!!k[e.charCodeAt(n++)]}break;case 104:if(g&&s){let u=k[e.charCodeAt(n++)],F=this.channels[u].instruments[0];F.unison=A(0,t.unisons.length,k[e.charCodeAt(n++)]),F.unisonVoices=t.unisons[F.unison].voices,F.unisonSpread=t.unisons[F.unison].spread,F.unisonOffset=t.unisons[F.unison].offset,F.unisonExpression=t.unisons[F.unison].expression,F.unisonSign=t.unisons[F.unison].sign}else if(p&&s)for(let u=0;u<this.getChannelCount();u++)for(let F of this.channels[u].instruments){let C=k[e.charCodeAt(n++)],I=A(0,t.unisons.length,C);C==8&&(I=2,F.chord=3),F.unison=I,F.unisonVoices=t.unisons[F.unison].voices,F.unisonSpread=t.unisons[F.unison].spread,F.unisonOffset=t.unisons[F.unison].offset,F.unisonExpression=t.unisons[F.unison].expression,F.unisonSign=t.unisons[F.unison].sign}else if(S&&s){let u=k[e.charCodeAt(n++)],F=A(0,t.unisons.length,u),C=this.channels[D].instruments[R];u==8&&(F=2,C.chord=3),C.unison=F,C.unisonVoices=t.unisons[C.unison].voices,C.unisonSpread=t.unisons[C.unison].spread,C.unisonOffset=t.unisons[C.unison].offset,C.unisonExpression=t.unisons[C.unison].expression,C.unisonSign=t.unisons[C.unison].sign}else{let u=this.channels[D].instruments[R];u.unison=A(0,t.unisons.length+1,k[e.charCodeAt(n++)]);let F=m||!y?27:t.unisons.length;if((d&&!m||y)&&u.unison==F){u.unison=t.unisons.length,u.unisonVoices=k[e.charCodeAt(n++)];let C=k[e.charCodeAt(n++)],I=k[e.charCodeAt(n++)]+(k[e.charCodeAt(n++)]+k[e.charCodeAt(n++)]*63)*63,M=k[e.charCodeAt(n++)],q=k[e.charCodeAt(n++)]+(k[e.charCodeAt(n++)]+k[e.charCodeAt(n++)]*63)*63,O=k[e.charCodeAt(n++)],j=k[e.charCodeAt(n++)]+k[e.charCodeAt(n++)]*63,te=k[e.charCodeAt(n++)],ee=k[e.charCodeAt(n++)]+k[e.charCodeAt(n++)]*63;u.unisonSpread=I/1e3,C==0&&(u.unisonSpread*=-1),u.unisonOffset=q/1e3,M==0&&(u.unisonOffset*=-1),u.unisonExpression=j/1e3,O==0&&(u.unisonExpression*=-1),u.unisonSign=ee/1e3,te==0&&(u.unisonSign*=-1)}else u.unisonVoices=t.unisons[u.unison].voices,u.unisonSpread=t.unisons[u.unison].spread,u.unisonOffset=t.unisons[u.unison].offset,u.unisonExpression=t.unisons[u.unison].expression,u.unisonSign=t.unisons[u.unison].sign}break;case 67:if(w&&s||r&&m||f&&c){let u=this.channels[D].instruments[R];u.chord=A(0,t.chords.length,k[e.charCodeAt(n++)]),u.chord!=t.chords.dictionary.simultaneous.index&&(u.mdeffects|=16)}break;case 113:{let u=this.channels[D].instruments[R];if(w&&s||r&&m||f&&c){u.addEffect(k[e.charCodeAt(n++)]&2047);let F=L[D][R];u.convertLegacySettings(F,b)}else{let F=k[e.charCodeAt(n++)];if(l){u.effects=[];for(let C=0;C<F;C++){let I=u.addEffect(k[e.charCodeAt(n++)]);if(I.type==5){let M=k[e.charCodeAt(n++)];if(M==0){I.eqFilterType=!1,M=k[e.charCodeAt(n++)],I.eqFilter.controlPointCount=A(0,t.filterMaxPoints+1,M);for(let O=I.eqFilter.controlPoints.length;O<I.eqFilter.controlPointCount;O++)I.eqFilter.controlPoints[O]=new Pe;for(let O=0;O<I.eqFilter.controlPointCount;O++){let j=I.eqFilter.controlPoints[O];j.type=A(0,3,k[e.charCodeAt(n++)]),j.freq=A(0,t.filterFreqRange,k[e.charCodeAt(n++)]),j.gain=A(0,t.filterGainRange,k[e.charCodeAt(n++)])}for(let O=I.eqFilter.controlPointCount;O<M;O++)n+=3;I.eqSubFilters[0]=I.eqFilter;let q=k[e.charCodeAt(n++)]<<6|k[e.charCodeAt(n++)];for(let O=0;O<t.filterMorphCount-1;O++)if(q&1<<O){let j=k[e.charCodeAt(n++)];I.eqSubFilters[O+1]==null&&(I.eqSubFilters[O+1]=new Ee),I.eqSubFilters[O+1].controlPointCount=A(0,t.filterMaxPoints+1,j);for(let te=I.eqSubFilters[O+1].controlPoints.length;te<I.eqSubFilters[O+1].controlPointCount;te++)I.eqSubFilters[O+1].controlPoints[te]=new Pe;for(let te=0;te<I.eqSubFilters[O+1].controlPointCount;te++){let ee=I.eqSubFilters[O+1].controlPoints[te];ee.type=A(0,3,k[e.charCodeAt(n++)]),ee.freq=A(0,t.filterFreqRange,k[e.charCodeAt(n++)]),ee.gain=A(0,t.filterGainRange,k[e.charCodeAt(n++)])}for(let te=I.eqSubFilters[O+1].controlPointCount;te<j;te++)n+=3}}else I.eqFilterType=!0,I.eqFilter.reset(),I.eqFilterSimpleCut=A(0,t.filterSimpleCutRange,k[e.charCodeAt(n++)]),I.eqFilterSimplePeak=A(0,t.filterSimplePeakRange,k[e.charCodeAt(n++)])}I.type==3&&(l?I.distortion=A(0,t.distortionRange,k[e.charCodeAt(n++)]):I.distortion=A(0,t.distortionRange,k[e.charCodeAt(n++)])*2,(r&&!m||c||d||y)&&(u.aliases=!!k[e.charCodeAt(n++)])),I.type==4&&(I.bitcrusherFreq=A(0,t.bitcrusherFreqRange,k[e.charCodeAt(n++)]),I.bitcrusherQuantization=A(0,t.bitcrusherQuantizationRange,k[e.charCodeAt(n++)])),I.type==2&&(s?I.pan=A(0,t.panMax+1,Math.round(k[e.charCodeAt(n++)]*(t.panMax/8))):I.pan=A(0,t.panMax+1,(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)]),(r&&!h||c||d||y)&&(I.panDelay=k[e.charCodeAt(n++)]),l&&(I.panMode=k[e.charCodeAt(n++)])),I.type==10&&(I.flanger=A(0,t.flangerRange,k[e.charCodeAt(n++)]),I.flangerSpeed=A(0,t.flangerSpeedRange,k[e.charCodeAt(n++)]),I.flangerDepth=A(0,t.flangerDepthRange,k[e.charCodeAt(n++)]),I.flangerFeedback=A(0,t.flangerFeedbackRange,k[e.charCodeAt(n++)])),I.type==1&&(l?I.chorus=A(0,t.chorusRange/2+1,k[e.charCodeAt(n++)]):s?I.chorus=A(0,t.chorusRange/2+1,k[e.charCodeAt(n++)])*4:I.chorus=A(0,t.chorusRange,k[e.charCodeAt(n++)])*2),I.type==9&&(I.gain=A(0,t.volumeRange,(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)])),I.type==6&&(l?I.echoSustain=A(0,t.echoSustainRange,k[e.charCodeAt(n++)]):I.echoSustain=A(0,t.echoSustainRange/3,k[e.charCodeAt(n++)])*3,I.echoDelay=A(0,t.echoDelayRange,k[e.charCodeAt(n++)]),I.echoPingPong=A(0,t.panMax+1,(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)])),I.type==0&&(s?I.reverb=A(0,t.reverbRange,Math.round(k[e.charCodeAt(n++)]*t.reverbRange/3)):I.reverb=A(0,t.reverbRange,k[e.charCodeAt(n++)])),I.type==8&&(I.granular=k[e.charCodeAt(n++)],I.grainSize=k[e.charCodeAt(n++)],I.grainAmounts=k[e.charCodeAt(n++)],I.grainRange=k[e.charCodeAt(n++)]),I.type==7&&(I.ringModulation=A(0,t.ringModRange,k[e.charCodeAt(n++)]),I.ringModulationHz=A(0,t.ringModHzRange,k[e.charCodeAt(n++)]),I.ringModWaveformIndex=A(0,t.operatorWaves.length,k[e.charCodeAt(n++)]),I.ringModPulseWidth=A(0,t.pulseWidthRange,k[e.charCodeAt(n++)]),I.ringModHzOffset=A(t.rmHzOffsetMin,t.rmHzOffsetMax+1,(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)]))}u.mdeffects=k[e.charCodeAt(n++)]}else{let C=[0,1,2,3,4,5,6,0,1,2,3,4,5,7,8],I=0;if(y&&!m){let M=new Ye(e,n,n+18);for(let q=0;q<18;q++)I=M.read(1),q>6&&q<13?u.mdeffects&=C[I]:I==1&&u.addEffect(C[q])}else{let M=new Ye(e,n,n+12);for(let q=0;q<12;q++)I=M.read(1),q>6?u.mdeffects&=C[I]:I==1&&u.addEffect(C[q])}}Gt(u.mdeffects)&&(u.transition=A(0,t.transitions.length,k[e.charCodeAt(n++)])),Ut(u.mdeffects)&&(u.chord=A(0,t.chords.length,k[e.charCodeAt(n++)]),u.chord==t.chords.dictionary.arpeggio.index&&(r||c||d||y)&&(u.arpeggioSpeed=k[e.charCodeAt(n++)],u.fastTwoNoteArp=!!k[e.charCodeAt(n++)]),u.chord==t.chords.dictionary.monophonic.index&&y&&!m&&(u.monoChordTone=k[e.charCodeAt(n++)])),Dt(u.mdeffects)&&(u.pitchShift=A(0,t.pitchShiftRange,k[e.charCodeAt(n++)])),Tt(u.mdeffects)&&(s?(u.detune=A(t.detuneMin,t.detuneMax+1,k[e.charCodeAt(n++)]),u.detune=Math.round((u.detune-9)*(Math.abs(u.detune-9)+1)/2+t.detuneCenter)):u.detune=A(t.detuneMin,t.detuneMax+1,(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)])),At(u.mdeffects)&&(u.vibrato=A(0,t.vibratos.length+1,k[e.charCodeAt(n++)]),u.vibrato==t.vibratos.length&&(r||c||d||y)?(u.vibratoDepth=A(0,t.modulators.dictionary["vibrato depth"].maxRawVol+1,k[e.charCodeAt(n++)])/25,u.vibratoSpeed=A(0,t.modulators.dictionary["vibrato speed"].maxRawVol+1,k[e.charCodeAt(n++)]),u.vibratoDelay=A(0,t.modulators.dictionary["vibrato delay"].maxRawVol+1,k[e.charCodeAt(n++)]),u.vibratoType=A(0,t.vibratoTypes.length,k[e.charCodeAt(n++)])):(u.vibratoDepth=t.vibratos[u.vibrato].amplitude,u.vibratoSpeed=10,u.vibratoDelay=t.vibratos[u.vibrato].delayTicks/2,u.vibratoType=t.vibratos[u.vibrato].type))}}break;case 118:if(g&&s){let u=k[e.charCodeAt(n++)],F=this.channels[u].instruments[0];F.volume=Math.round(A(-t.volumeRange/2,1,-k[e.charCodeAt(n++)]*5))}else if(p&&s)for(let u=0;u<this.getChannelCount();u++)for(let F of this.channels[u].instruments)F.volume=Math.round(A(-t.volumeRange/2,1,-k[e.charCodeAt(n++)]*5));else if(S&&s){let u=this.channels[D].instruments[R];u.volume=Math.round(A(-t.volumeRange/2,1,-k[e.charCodeAt(n++)]*5))}else if(s){let u=this.channels[D].instruments[R];u.volume=Math.round(A(-t.volumeRange/2,1,-k[e.charCodeAt(n++)]*25/7))}else if(l){let u=this.channels[D].instruments[R];u.volume=Math.round(A(-t.volumeRange/2,t.volumeRange/2+1,(k[e.charCodeAt(n++)]<<6|k[e.charCodeAt(n++)])-t.volumeRange/2))}else{let u=this.channels[D].instruments[R];u.volume=Math.round(A(-t.volumeRange/2,t.volumeRange/2+1,(k[e.charCodeAt(n++)]<<6|k[e.charCodeAt(n++)])-t.volumeRange/2)*2)}break;case 76:break;case 68:{let u=this.channels[D].instruments[R];(r&&m||f&&c)&&(u.detune=A(t.detuneMin,t.detuneMax+1,((k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)])*4),u.mdeffects|=2)}break;case 77:{let u=this.channels[D].instruments[R];for(let q=0;q<64;q++)u.customChipWave[q]=A(-24,25,k[e.charCodeAt(n++)]-24);let F=0;for(let q=0;q<u.customChipWave.length;q++)F+=u.customChipWave[q];let C=F/u.customChipWave.length,I=0,M=0;for(let q=0;q<u.customChipWave.length;q++)I+=M,M=u.customChipWave[q]-C,u.customChipWaveIntegral[q]=I;u.customChipWaveIntegral[64]=0}break;case 79:{let u=k[e.charCodeAt(n++)];u==63?this.restoreLimiterDefaults():(this.compressionRatio=u<10?u/10:1+(u-10)/60,u=k[e.charCodeAt(n++)],this.limitRatio=u<10?u/10:u-9,this.limitDecay=k[e.charCodeAt(n++)],this.limitRise=k[e.charCodeAt(n++)]*250+2e3,this.compressionThreshold=k[e.charCodeAt(n++)]/20,this.limitThreshold=k[e.charCodeAt(n++)]/20,this.masterGain=((k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)])/50)}break;case 85:for(let u=0;u<this.getChannelCount();u++){var G;f&&!c&&!d&&!y?G=k[e.charCodeAt(n++)]:G=(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)],this.channels[u].name=decodeURIComponent(e.substring(n,n+G)),n+=G,l&&(this.channels[u].color=k[e.charCodeAt(n++)])}break;case 65:{let u=this.channels[D].instruments[R];if(u.type==1)u.algorithm=A(0,t.algorithms.length,k[e.charCodeAt(n++)]);else if(u.algorithm6Op=A(0,t.algorithms6Op.length,k[e.charCodeAt(n++)]),u.customAlgorithm.fromPreset(u.algorithm6Op),e.charCodeAt(n)==67){let F=A(1,t.operatorCount+2+1,k[e.charCodeAt(n+1)]);n++;let C=[];if(e.charCodeAt(n+1)==113){n++;let I=0;for(n++;e.charCodeAt(n)!=113;){C[I]=[];let M=0;for(;e.charCodeAt(n)!=82;)C[I][M]=A(1,t.operatorCount+3,k[e.charCodeAt(n)]),M++,n++;I++,n++}u.customAlgorithm.set(F,C),n++}}if(w&&s||m&&r||f&&c){let F=L[D][R];u.convertLegacySettings(F,b)}}break;case 120:if(c&&!f&&p){let u=k[e.charCodeAt(n++)];u+62>85&&document.URL.substring(document.URL.length-13).toLowerCase()!="legacysamples"&&(P||(P=!0,t.willReloadForCustomSamples=!0,we.customSamples=["legacySamples"],tt(0))),u+62>78?this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,u+63):u+62>67?this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,u+61):u+62==67?this.channels[D].instruments[R].chipWave=40:this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,u+62)}else{let u=this.channels[D].instruments[R];u.supersawDynamism=A(0,t.supersawDynamismMax+1,k[e.charCodeAt(n++)]),u.supersawSpread=A(0,t.supersawSpreadMax+1,k[e.charCodeAt(n++)]),u.supersawShape=A(0,t.supersawShapeMax+1,k[e.charCodeAt(n++)])}break;case 70:{let u=this.channels[D].instruments[R];if(u.type==1)u.feedbackType=A(0,t.feedbacks.length,k[e.charCodeAt(n++)]);else{u.feedbackType6Op=A(0,t.feedbacks6Op.length,k[e.charCodeAt(n++)]),u.customFeedbackType.fromPreset(u.feedbackType6Op);let F=[];if(e.charCodeAt(n)==113){let C=0;for(n++;e.charCodeAt(n)!=113;){F[C]=[];let I=0;for(;e.charCodeAt(n)!=82;)F[C][I]=A(1,t.operatorCount+2,k[e.charCodeAt(n)]),I++,n++;C++,n++}u.customFeedbackType.set(F),n++}}}break;case 66:this.channels[D].instruments[R].feedbackAmplitude=A(0,t.operatorAmplitudeMax+1,k[e.charCodeAt(n++)]);break;case 86:if(w&&s||m&&r||f&&c){let u=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],F=this.channels[D].instruments[R],C=L[D][R],I=k[e.charCodeAt(n++)];(h&&c||!c&&!d&&!y)&&(I=u[I]),C.feedbackEnvelope=o.ie(k[I]),F.convertLegacySettings(C,b)}break;case 81:{let u=this.channels[D].instruments[R];if(g&&c){let F=[4,5,6,7,8,10,12,13,14,15,16,18,20,22,24,2,1,9,17,19,21,23,0,3];for(let C=0;C<(u.type==11?6:t.operatorCount);C++)u.operators[C].frequency=F[A(0,F.length,k[e.charCodeAt(n++)])]}else if(!c&&!d&&!y){let F=[4,5,6,7,8,10,12,13,14,15,16,18,20,23,27,2,1,9,17,19,21,23,0,3];for(let C=0;C<(u.type==11?6:t.operatorCount);C++)u.operators[C].frequency=F[A(0,F.length,k[e.charCodeAt(n++)])]}else for(let F=0;F<(u.type==11?6:t.operatorCount);F++)u.operators[F].frequency=A(0,t.operatorFrequencies.length,k[e.charCodeAt(n++)])}break;case 80:{let u=this.channels[D].instruments[R];for(let F=0;F<(u.type==11?6:t.operatorCount);F++)u.operators[F].amplitude=A(0,t.operatorAmplitudeMax+1,k[e.charCodeAt(n++)])}break;case 69:{let u=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],F=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,58,59,60],C=[0,1,2,3,4,5,6,7,8,8,9,10,11,12,13,14],I=this.channels[D].instruments[R];if(w&&s||m&&r||f&&c){let M=L[D][R];M.operatorEnvelopes=[];for(let q=0;q<(I.type==11?6:t.operatorCount);q++){let O=k[e.charCodeAt(n++)];(h&&c||s)&&(O=u[O]),r&&(O=F[O]),M.operatorEnvelopes[q]=o.ie(O)}I.convertLegacySettings(M,b)}else{let M=A(0,t.maxEnvelopeCount+1,k[e.charCodeAt(n++)]),q=!1;(r&&!p||d&&!m||y)&&(I.envelopeSpeed=A(0,t.modulators.dictionary["envelope speed"].maxRawVol+1,k[e.charCodeAt(n++)]),(!y||m)&&(q=!!k[e.charCodeAt(n++)]));for(let ee=0;ee<M;ee++){let ge=A(0,t.instrumentAutomationTargets.length,k[e.charCodeAt(n++)]),Ie=0,_=t.instrumentAutomationTargets[ge].maxCount;_>1&&(Ie=A(0,_,k[e.charCodeAt(n++)]));let V=k[e.charCodeAt(n++)];(h&&c||s)&&(V=u[V]),r&&(V=F[V]),!y&&V>=2&&V++;let K=!1,Q=1;!y||g?(K=!0,Q=t.envelopes[V].speed,V=t.envelopes[V].type):f&&V>=3&&V++;let Z=!1;(y&&!g&&f||K)&&(V==9&&(Z=!0),V=C[V]);let ae=A(0,y&&!g||K?t.newEnvelopes.length:t.envelopes.length,V),me=0,oe=t.maxPitch,ye=!1;Q=y&&!g?t.newEnvelopes[ae].speed:Q;let ie=0,de=1,le=2,re=2,ce=0;if(y&&!f&&(t.newEnvelopes[ae].name=="lfo"?(ce=A(0,7,k[e.charCodeAt(n++)]),(ce==5||ce==6)&&(le=A(1,t.randomEnvelopeStepsMax+1,k[e.charCodeAt(n++)]))):t.newEnvelopes[ae].name=="random"&&(le=A(1,t.randomEnvelopeStepsMax+1,k[e.charCodeAt(n++)]),re=A(1,t.randomEnvelopeSeedMax+1,k[e.charCodeAt(n++)]),ce=A(0,4,k[e.charCodeAt(n++)]))),y&&!g){if(t.newEnvelopes[ae].name=="pitch")if(I.isNoiseInstrument)me=A(0,t.drumCount,k[e.charCodeAt(n++)]),oe=A(0,t.drumCount,k[e.charCodeAt(n++)]);else{let $=k[e.charCodeAt(n++)];me=A(0,t.maxPitch+1,$*64+k[e.charCodeAt(n++)]),$=k[e.charCodeAt(n++)],oe=A(0,t.maxPitch+1,$*64+k[e.charCodeAt(n++)])}let X=k[e.charCodeAt(n++)];y&&!m&&(q=X>>1==1),ye=(X&1)==1,t.newEnvelopes[ae].name!="pitch"&&t.newEnvelopes[ae].name!="note size"&&t.newEnvelopes[ae].name!="punch"&&t.newEnvelopes[ae].name!="none"&&(Q=t.perEnvelopeSpeedIndices[k[e.charCodeAt(n++)]]),ie=k[e.charCodeAt(n++)]/10,de=k[e.charCodeAt(n++)]/10}if((!y||f)&&Z&&(ce=0,ye?(de=Math.floor(de/2*10)/10,ie=Math.floor(ie/2*10)/10):(de=Math.floor((.5+(de-ie)/2)*10)/10,ie=.5)),I.addEnvelope(ge,Ie,ae,!0,me,oe,ye,Q,ie,de,le,re,ce,q),y&&g&&!h){let X=k[e.charCodeAt(n++)];I.envelopes[ee].pitchEnvelopeStart=X*64+k[e.charCodeAt(n++)],X=k[e.charCodeAt(n++)],I.envelopes[ee].pitchEnvelopeEnd=X*64+k[e.charCodeAt(n++)],I.envelopes[ee].inverse=k[e.charCodeAt(n++)]==1}}let O=0,j=t.maxPitch,te=!1;if(y&&h){let ee=k[e.charCodeAt(n++)];O=ee*64+k[e.charCodeAt(n++)],ee=k[e.charCodeAt(n++)],j=ee*64+k[e.charCodeAt(n++)],te=k[e.charCodeAt(n++)]===1;for(let ge=0;ge<M;ge++)I.envelopes[ge].pitchEnvelopeStart=O,I.envelopes[ge].pitchEnvelopeEnd=j,I.envelopes[ge].inverse=t.envelopes[I.envelopes[ge].envelope].name=="pitch"?te:!1}}}break;case 82:{let u=this.channels[D].instruments[R];if(g&&c)for(let F=0;F<t.operatorCount;F++){let C=[0,1,3,2,2,2,4,5],I=A(0,C.length,k[e.charCodeAt(n++)]);I==3?u.operators[F].pulseWidth=5:I==4?u.operators[F].pulseWidth=4:I==5&&(u.operators[F].pulseWidth=6),u.operators[F].waveform=C[I]}else for(let F=0;F<(u.type==11?6:t.operatorCount);F++){if(r){let C=[0,1,3,2,4,5];u.operators[F].waveform=C[A(0,t.operatorWaves.length,k[e.charCodeAt(n++)])]}else u.operators[F].waveform=A(0,t.operatorWaves.length,k[e.charCodeAt(n++)]);u.operators[F].waveform==2&&(u.operators[F].pulseWidth=A(0,t.pwmOperatorWaves.length,k[e.charCodeAt(n++)]))}}break;case 83:{let u=this.channels[D].instruments[R];if(u.type==3){let F=Math.ceil(t.spectrumControlPoints*t.spectrumControlPointBits/6),C=new Ye(e,n,n+F);for(let I=0;I<t.spectrumControlPoints;I++)u.spectrumWave.spectrum[I]=C.read(t.spectrumControlPointBits);u.spectrumWave.markCustomWaveDirty(),n+=F}else if(u.type==4){let F=Math.ceil(t.drumCount*t.spectrumControlPoints*t.spectrumControlPointBits/6),C=new Ye(e,n,n+F);for(let I=0;I<t.drumCount;I++){for(let M=0;M<t.spectrumControlPoints;M++)u.drumsetSpectrumWaves[I].spectrum[M]=C.read(t.spectrumControlPointBits);u.drumsetSpectrumWaves[I].markCustomWaveDirty()}n+=F}else throw new Error("Unhandled instrument type for spectrum song tag code.")}break;case 72:{let u=this.channels[D].instruments[R],F=Math.ceil(t.harmonicsControlPoints*t.harmonicsControlPointBits/6),C=new Ye(e,n,n+F);for(let I=0;I<t.harmonicsControlPoints;I++)u.harmonicsWave.harmonics[I]=C.read(t.harmonicsControlPointBits);u.harmonicsWave.markCustomWaveDirty(),n+=F}break;case 88:if(r&&m||c&&f){let u=this.channels[D].instruments[R];if(u.aliases=!!k[e.charCodeAt(n++)],u.aliases){let F=u.addEffect(3);F.distortion=0}}else if(d||y){let u=this.channels[D].instruments[R];u.decimalOffset=A(0,51,k[e.charCodeAt(n++)])}break;case 98:{let u;if(g&&s){let F=k[e.charCodeAt(n++)],C=k[e.charCodeAt(n++)];u=Math.ceil(C*.5);let I=new Ye(e,n,n+u);for(let M=0;M<C;M++)this.channels[F].bars[M]=I.read(3)+1}else if(m&&s){let F=0;for(;1<<F<this.patternsPerChannel;)F++;u=Math.ceil(this.getChannelCount()*this.barCount*F/6);let C=new Ye(e,n,n+u);for(let I=0;I<this.getChannelCount();I++)for(let M=0;M<this.barCount;M++)this.channels[I].bars[M]=C.read(F)+1}else{let F=0;for(;1<<F<this.patternsPerChannel+1;)F++;u=Math.ceil(this.getChannelCount()*this.barCount*F/6);let C=new Ye(e,n,n+u);for(let I=0;I<this.getChannelCount();I++)for(let M=0;M<this.barCount;M++)this.channels[I].bars[M]=C.read(F)}n+=u}break;case 112:{let u=0,F,C=!(f&&r||s),I=C?4:3,M=C?16:8;if(g&&s)F=k[e.charCodeAt(n++)],n++,u=k[e.charCodeAt(n++)],u=u<<6,u+=k[e.charCodeAt(n++)];else{F=0;let _=ze(1,4,k[e.charCodeAt(n++)]);for(;_>0;)u=u<<6,u+=k[e.charCodeAt(n++)],_--}let q=new Ye(e,n,n+u);n+=u;let O=o.getNeededBits(t.noteSizeMax),j=-1,te=-1,ee=-1,ge=r,Ie=30;for(;;){let _=this.channels[F],V=this.getChannelIsNoise(F),K=this.getChannelIsMod(F),Q=this.getMaxInstrumentsPerPattern(F),Z=o.getNeededBits(Q-t.instrumentCountMin),ae=o.getNeededBits(_.instruments.length-1);if(K){let le=m&&r||f&&c,re=le?ae:o.getNeededBits(this.getMaxInstrumentsPerChannel()+2);for(let ce=0;ce<_.instruments.length;ce++){let X=_.instruments[ce];for(let $=0;$<t.modCount;$++){let ue=q.read(2);switch(ue){case 0:let ve=q.read(8);for(let Y=0;Y<ve;Y++)X.modChannels[$][Y]=A(0,this.pitchChannelCount+this.noiseChannelCount+1,q.read(8));let Fe=q.read(8);for(let Y=0;Y<Fe;Y++)X.modInstruments[$][Y]=A(0,this.channels[X.modChannels[$][Y]].instruments.length+2,q.read(re));break;case 1:X.modChannels[$][0]=this.pitchChannelCount+A(0,this.noiseChannelCount+1,q.read(8)),X.modInstruments[$][0]=A(0,this.channels[X.modChannels[$][0]].instruments.length+2,q.read(ae));break;case 2:X.modChannels[$][0]=-1;break;case 3:X.modChannels[$][0]=-2;break}if(ue!=3&&(X.modulators[$]=q.read(6)),!le&&(t.modulators[X.modulators[$]].name=="post eq"||t.modulators[X.modulators[$]].name=="pre eq"||t.modulators[X.modulators[$]].name=="song eq")&&(X.modFilterTypes[$]=q.read(6)),(t.modulators[X.modulators[$]].name=="individual envelope speed"||t.modulators[X.modulators[$]].name=="reset envelope"||t.modulators[X.modulators[$]].name=="individual envelope lower bound"||t.modulators[X.modulators[$]].name=="individual envelope upper bound")&&(X.modEnvelopeNumbers[$]=q.read(6)),le&&X.modChannels[$][0]>=0){let ve=this.channels[X.modChannels[$][0]].instruments[X.modInstruments[$][0]].effectsIncludeType(5);X.modulators[$]==7?(ve?X.modulators[$]=t.modulators.dictionary["note filt cut"].index:X.modulators[$]=t.modulators.dictionary["eq filt cut"].index,X.modFilterTypes[$]=1):X.modulators[$]==8&&(ve?X.modulators[$]=t.modulators.dictionary["note filt peak"].index:X.modulators[$]=t.modulators.dictionary["eq filt peak"].index,X.modFilterTypes[$]=2)}else le&&X.modulators[$]==t.modulators.dictionary["song reverb"].index&&(j=F,te=ce,ee=$);le&&t.modulators[X.modulators[$]].associatedEffect!=11&&this.channels[X.modChannels[$][0]].instruments[X.modInstruments[$][0]].addEffect(t.modulators[X.modulators[$]].associatedEffect)}}}let me=[];for(let le=0;le<_.instruments.length;le++){me[le]=[];for(let re=0;re<t.modCount;re++)me[le][t.modCount-1-re]=1+3*+((m&&r||f&&c)&&K&&_.instruments[le].modulators[re]==t.modulators.dictionary.detune.index)}let oe=V||K?0:_.octave*12,ye=V||K?4:oe,ie=K?[0,1,2,3,4,5]:V?[4,6,7,2,3,8,0,10]:[0,7,12,19,24,-5,-12],de=[];for(let le=0;le<ie.length;le++)ie[le]+=oe;for(let le=0;le<this.patternsPerChannel;le++){let re=_.patterns[le];if(w&&s||m&&r||f&&c)re.instruments[0]=ze(0,_.instruments.length-1,q.read(ae)),re.instruments.length=1;else if(this.patternInstruments){let ue=ze(t.instrumentCountMin,Q,q.read(Z)+t.instrumentCountMin);for(let ve=0;ve<ue;ve++)re.instruments[ve]=ze(0,_.instruments.length-1+ +K*2,q.read(ae));re.instruments.length=ue}else re.instruments[0]=0,re.instruments.length=t.instrumentCountMin;if(!(s&&g)&&q.read(1)==0){re.notes.length=0;continue}let ce=0,X=re.notes,$=0;for(;ce<this.beatsPerBar*t.partsPerBeat+ +K;){let ue=q.read(1)==1,ve=!1,Fe=0;if(ue?Fe=ze(0,de.length-1,q.readLongTail(0,0)):ve=q.read(1)==1,!ue&&!ve)if(K){let Y=q.read(1)==1,he=q.readPartDuration();Y?ce-=he:ce+=he}else{let Y=S&&s?q.readLegacyPartDuration()*t.partsPerBeat/t.rhythms[this.rhythm].stepsPerBeat:q.readPartDuration();ce+=Y}else{let Y;if(ue)Y=de[Fe],de.splice(Fe,1);else{if(Y={},C)q.read(1)==1?Y.pitchCount=q.read(3)+2:Y.pitchCount=1;else for(Y.pitchCount=1;Y.pitchCount<4&&q.read(1)==1;)Y.pitchCount++;l?q.read(1)==1&&(Y.startOffset=q.read(31)):Y.startOffset=0,Y.pinCount=q.readPinCount(),s?Y.initialSize=q.read(2)*2:K?Y.initialSize=q.read(11):Y.initialSize=q.read(O),Y.pins=[],Y.length=0,Y.bendCount=0;for(let Ce=0;Ce<Y.pinCount;Ce++){let qe={};qe.pitchBend=q.read(1)==1,qe.pitchBend&&Y.bendCount++,Y.length+=S&&s?q.readLegacyPartDuration()*t.partsPerBeat/t.rhythms[this.rhythm].stepsPerBeat:q.readPartDuration(),qe.time=Y.length,s?qe.size=q.read(2)*2:K?qe.size=q.read(11):qe.size=q.read(O),Y.pins.push(qe)}}de.unshift(Y),de.length>10&&de.pop();let he;X.length<=$?(he=new lt(0,ce,ce+Y.length,Y.initialSize,!1,Y.startOffset),X[$++]=he):(he=X[$++],he.start=ce,he.end=ce+Y.length,he.pins[0].size=Y.initialSize);let Se,Me=0,Ae=[];for(let Ce=0;Ce<Y.pitchCount+Y.bendCount;Ce++){if(q.read(1)==1){let Be=ze(0,ie.length-1,q.read(I));Se=ie[Be],ie.splice(Be,1)}else{let Be=q.readPitchInterval();Se=ye;let We=Be;for(;We>0;){for(Se++;ie.indexOf(Se)!=-1;)Se++;We--}for(;We<0;){for(Se--;ie.indexOf(Se)!=-1;)Se--;We++}}ie.unshift(Se),ie.length>M&&ie.pop(),Ce<Y.pitchCount?he.pitches[Me++]=Se:Ae.push(Se),Ce==Y.pitchCount-1?ye=he.pitches[0]:ye=Se}he.pitches.length=Me,Ae.unshift(he.pitches[0]);let De=K&&_.instruments[re.instruments[0]].modulators[t.modCount-1-he.pitches[0]]===t.modulators.dictionary.tempo.index,ke=0;ge&&De&&(ke=Ie-t.tempoMin),K&&(he.pins[0].size+=ke,he.pins[0].size*=me[re.instruments[0]][he.pitches[0]]);let Le=1;for(let Ce of Y.pins){Ce.pitchBend&&Ae.shift();let qe=Ae[0]-he.pitches[0];if(he.pins.length<=Le)K?he.pins[Le++]=Lt(qe,Ce.time,Ce.size*me[re.instruments[0]][he.pitches[0]]+ke):he.pins[Le++]=Lt(qe,Ce.time,Ce.size);else{let Be=he.pins[Le++];Be.interval=qe,Be.time=Ce.time,K?Be.size=Ce.size*me[re.instruments[0]][he.pitches[0]]+ke:Be.size=Ce.size}}he.pins.length=Le,he.start==0&&(w&&s||m&&r||f&&c?f&&!d&&!y||s?he.continuesLastPattern=!1:he.continuesLastPattern=_.instruments[re.instruments[0]].legacyTieOver:he.continuesLastPattern=q.read(1)==1),ce=ze(0,this.beatsPerBar*t.partsPerBeat,he.end)}}X.length=$}if(g&&s)break;if(F++,F>=this.getChannelCount())break}if((r&&m||f&&c)&&ee>=0){for(let _=0;_<this.channels.length;_++)for(let V=0;V<this.channels[_].instruments.length;V++)if(this.channels[_].instruments[V].effectsIncludeType(0),j==_&&te==V){let Q=this.channels[_].bars[0];if(Q>0){let Z=this.channels[_].patterns[Q-1],ae=6;for(let me of Z.notes)me.pitches[0]==t.modCount-1-ee&&(ae=Math.min(ae,me.start));ae>0&&Z.notes.push(new lt(t.modCount-1-ee,0,ae,E))}else if(this.channels[_].patterns.length<t.barCountMax){let Z=new at;if(this.channels[_].patterns.push(Z),this.channels[_].bars[0]=this.channels[_].patterns.length,this.channels[_].patterns.length>this.patternsPerChannel){for(let ae=0;ae<this.channels.length;ae++)this.channels[ae].patterns.length<=this.patternsPerChannel&&this.channels[ae].patterns.push(new at);this.patternsPerChannel++}Z.instruments.length=1,Z.instruments[0]=te,Z.notes.length=0,Z.notes.push(new lt(t.modCount-1-ee,0,6,E))}}}}break;default:throw new Error("Unrecognized song tag code "+String.fromCharCode(N)+" at index "+(n-1)+" "+e.substring(0,n))}t.willReloadForCustomSamples&&(window.location.hash=this.toBase64String(),setTimeout(()=>{location.reload()},50))}static Ee(e){try{return!!new URL(e)}catch{return!1}}static me(e,i,n,a,s){let c=t.chipWaves[0].samples,d=t.chipWaves[0].samplesR||t.chipWaves[0].samples,y=t.rawRawChipWaves[0].samples,l=t.rawRawChipWaves[0].samplesR||t.chipWaves[0].samples,v=i.length;i.push(e);let h=t.chipWaves.length,g=e,f=44100,m=!1,p=60,S=!1,x=null,w=null,b=null,P=null,B=!1,L=!1,E=!1,D=e.indexOf("!"),R=-1;if(D===0&&(R=e.indexOf("!",D+1),R!==-1)){let z=e.slice(D+1,R).split(",");for(let W of z){let H=W.charAt(0),U=W.slice(1,W.length);H==="s"?f=A(8e3,96001,Jt(U,44100)):H==="r"?p=Jt(U,60):H==="p"?m=!0:H==="a"?(x=Kt(U,null),x!=null&&(S=!0)):H==="b"?(w=Kt(U,null),w!=null&&(S=!0)):H==="c"?(b=Kt(U,null),b!=null&&(S=!0)):H==="d"?(P=Kt(U,null),P!=null&&(P=A(0,4,P),S=!0)):H==="e"?(B=!0,S=!0):H==="f"&&(L=!0,S=!0)}g=e.slice(R+1,e.length),E=!0}let N=null;if(o.Ee(g))N=new URL(g);else return alert(e+" is not a valid url"),!1;if(s&&!E&&N!=null){let z=function(){g=e.slice(0,e.indexOf(",")),N=new URL(g),f=A(8e3,96001,Jt(e.slice(e.indexOf(",")+1),44100))},W=function(){g=e.slice(0,e.indexOf("!")),N=new URL(g),p=Jt(e.slice(e.indexOf("!")+1),60)};e.indexOf("@")!=-1&&(g=e.replaceAll("@",""),N=new URL(g),m=!0),e.indexOf(",")!=-1&&e.indexOf("!")!=-1?e.indexOf(",")<e.indexOf("!")?(W(),z()):(z(),W()):(e.indexOf(",")!=-1&&z(),e.indexOf("!")!=-1&&W())}if(N!=null){let z=g,W=[];f!==44100&&W.push("s"+f),p!==60&&W.push("r"+p),m&&W.push("p"),S&&(x!=null&&W.push("a"+x),w!=null&&W.push("b"+w),b!=null&&W.push("c"+b),P!=null&&W.push("d"+P),B&&W.push("e"),L&&W.push("f")),W.length>0&&(z="!"+W.join(",")+"!"+g),i[v]=z;let H;H=decodeURIComponent(N.pathname.replace(/^([^\/]*\/)+/,""));let U=1;t.chipWaves[h]={name:H,expression:U,isCustomSampled:!0,isPercussion:m,rootKey:p,sampleRate:f,samples:c,samplesR:d,index:h},t.rawChipWaves[h]={name:H,expression:U,isCustomSampled:!0,isPercussion:m,rootKey:p,sampleRate:f,samples:y,samplesR:l,index:h},t.rawRawChipWaves[h]={name:H,expression:U,isCustomSampled:!0,isPercussion:m,rootKey:p,sampleRate:f,samples:y,samplesR:l,index:h};let G={type:"chip",eqFilter:[],effects:[],mdeffects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"harmony",wave:H,unison:"none",envelopes:[],chipWaveInStereo:!0};S&&(G.isUsingAdvancedLoopControls=!0,G.chipWaveLoopStart=x??0,G.chipWaveLoopEnd=w??2,G.chipWaveLoopMode=P??0,G.chipWavePlayBackwards=B,G.chipWaveStartOffset=b??0);let u={index:0,name:H,midiProgram:80,settings:G};n.push(u),t.willReloadForCustomSamples||La(g,h,G,{isUsingAdvancedLoopControls:S,chipWaveLoopStart:x,chipWaveLoopEnd:w,chipWaveLoopMode:P,chipWavePlayBackwards:B,chipWaveStartOffset:b},f),a.statusTable[h]=0,a.urlTable[h]=g,a.totalSamples++}return!0}static re(){t.chipWaves=fe(t.chipWaves.slice(0,t.firstIndexForSamplesInChipWaveList)),t.rawChipWaves=fe(t.rawChipWaves.slice(0,t.firstIndexForSamplesInChipWaveList)),t.rawRawChipWaves=fe(t.rawRawChipWaves.slice(0,t.firstIndexForSamplesInChipWaveList))}static fe(){we.customSamples=null,o.re(),be.statusTable={},be.urlTable={},be.totalSamples=0,be.samplesLoaded=0,Et.dispatchEvent(new ot(be.totalSamples,be.samplesLoaded))}toJsonObject(e=!0,i=1,n=!0){let a=[];for(let r=0;r<this.getChannelCount();r++){let c=this.channels[r],d=[],y=this.getChannelIsNoise(r),l=this.getChannelIsMod(r);for(let f of c.instruments)d.push(f.toJsonObject());let v=[];for(let f of c.patterns)v.push(f.toJsonObject(this,c,l));let h=[];if(e)for(let f=0;f<this.loopStart;f++)h.push(c.bars[f]);for(let f=0;f<i;f++)for(let m=this.loopStart;m<this.loopStart+this.loopLength;m++)h.push(c.bars[m]);if(n)for(let f=this.loopStart+this.loopLength;f<this.barCount;f++)h.push(c.bars[f]);let g={type:l?"mod":y?"drum":"pitch",name:c.name,instruments:d,patterns:v,sequence:h};y||(g.octaveScrollBar=c.octave-1),a.push(g)}let s={name:this.title,format:o.ge,version:o.ce,scale:t.scales[this.scale].name,customScale:this.scaleCustom,key:t.keys[this.key].name,keyOctave:this.octave,introBars:this.loopStart,loopBars:this.loopLength,beatsPerBar:this.beatsPerBar,ticksPerBeat:t.rhythms[this.rhythm].stepsPerBeat,beatsPerMinute:this.tempo,reverb:this.reverb,masterGain:this.masterGain,compressionThreshold:this.compressionThreshold,limitThreshold:this.limitThreshold,limitDecay:this.limitDecay,limitRise:this.limitRise,limitRatio:this.limitRatio,compressionRatio:this.compressionRatio,songEq:this.eqFilter.toJsonObject(),layeredInstruments:this.layeredInstruments,patternInstruments:this.patternInstruments,channels:a};for(let r=0;r<t.filterMorphCount-1;r++)s["songEq"+r]=this.eqSubFilters[r];return we.customSamples!=null&&we.customSamples.length>0&&(s.customSamples=we.customSamples),s}fromJsonObject(e,i="auto"){if(this.initToDefault(!0),!e)return;i=="auto"&&e.format=="BeepBox"&&(e.riff!=null&&(i="modbox"),e.masterGain!=null&&(i="jummbox"));let n=(i=="auto"?e.format:i).toLowerCase();if(e.name!=null&&(this.title=e.name),e.customSamples!=null){let g=e.customSamples;if(we.customSamples==null||we.customSamples.join(", ")!=g.join(", ")){t.willReloadForCustomSamples=!0,o.re();let f=!1,m=!1,p=!1,S=[],x=[];for(let w of g)w.toLowerCase()==="legacysamples"?f||(f=!0,S.push(w),tt(0)):w.toLowerCase()==="nintariboxsamples"?m||(m=!0,S.push(w),tt(1)):w.toLowerCase()==="mariopaintboxsamples"?p||(p=!0,S.push(w),tt(2)):o.me(w,S,x,be,!1);if(S.length>0&&(we.customSamples=S),x.length>0){let w=fe(x);we.presetCategories[we.presetCategories.length]={name:"Custom Sample Presets",presets:w,index:we.presetCategories.length}}}}else{let g=!1;if(e.channels!=null)for(let f=0;f<e.channels.length;f++){let m=e.channels[f];if(m.type==="pitch"&&Array.isArray(m.instruments)){let p=m.instruments;for(let S=0;S<p.length;S++){let x=p[S];if(x.type!=="chip"||x.wave==null)continue;let w=x.wave,b=["paandorasbox kick","paandorasbox snare","paandorasbox piano1","paandorasbox WOW","paandorasbox overdrive","paandorasbox trumpet","paandorasbox saxophone","paandorasbox orchestrahit","paandorasbox detatched violin","paandorasbox synth","paandorasbox sonic3snare","paandorasbox come on","paandorasbox choir","paandorasbox overdriveguitar","paandorasbox flute","paandorasbox legato violin","paandorasbox tremolo violin","paandorasbox amen break","paandorasbox pizzicato violin","paandorasbox tim allen grunt","paandorasbox tuba","paandorasbox loopingcymbal","paandorasbox standardkick","paandorasbox standardsnare","paandorasbox closedhihat","paandorasbox foothihat","paandorasbox openhihat","paandorasbox crashcymbal","paandorasbox pianoC4","paandorasbox liver pad","paandorasbox marimba","paandorasbox susdotwav","paandorasbox wackyboxtts","paandorasbox peppersteak_1","paandorasbox peppersteak_2","paandorasbox vinyl_noise","paandorasbeta slap bass","paandorasbeta HD EB overdrive guitar","paandorasbeta sunsoft bass","paandorasbeta masculine choir","paandorasbeta feminine choir","paandorasbeta tololoche","paandorasbeta harp","paandorasbeta pan flute","paandorasbeta krumhorn","paandorasbeta timpani","paandorasbeta crowd hey","paandorasbeta wario land 4 brass","paandorasbeta wario land 4 rock organ","paandorasbeta wario land 4 DAOW","paandorasbeta wario land 4 hour chime","paandorasbeta wario land 4 tick","paandorasbeta kirby kick","paandorasbeta kirby snare","paandorasbeta kirby bongo","paandorasbeta kirby click","paandorasbeta sonor kick","paandorasbeta sonor snare","paandorasbeta sonor snare (left hand)","paandorasbeta sonor snare (right hand)","paandorasbeta sonor high tom","paandorasbeta sonor low tom","paandorasbeta sonor hihat (closed)","paandorasbeta sonor hihat (half opened)","paandorasbeta sonor hihat (open)","paandorasbeta sonor hihat (open tip)","paandorasbeta sonor hihat (pedal)","paandorasbeta sonor crash","paandorasbeta sonor crash (tip)","paandorasbeta sonor ride"],P=["pandoraasbox kick","pandoraasbox snare","pandoraasbox piano1","pandoraasbox WOW","pandoraasbox overdrive","pandoraasbox trumpet","pandoraasbox saxophone","pandoraasbox orchestrahit","pandoraasbox detatched violin","pandoraasbox synth","pandoraasbox sonic3snare","pandoraasbox come on","pandoraasbox choir","pandoraasbox overdriveguitar","pandoraasbox flute","pandoraasbox legato violin","pandoraasbox tremolo violin","pandoraasbox amen break","pandoraasbox pizzicato violin","pandoraasbox tim allen grunt","pandoraasbox tuba","pandoraasbox loopingcymbal","pandoraasbox standardkick","pandoraasbox standardsnare","pandoraasbox closedhihat","pandoraasbox foothihat","pandoraasbox openhihat","pandoraasbox crashcymbal","pandoraasbox pianoC4","pandoraasbox liver pad","pandoraasbox marimba","pandoraasbox susdotwav","pandoraasbox wackyboxtts","pandoraasbox peppersteak_1","pandoraasbox peppersteak_2","pandoraasbox vinyl_noise","pandoraasbeta slap bass","pandoraasbeta HD EB overdrive guitar","pandoraasbeta sunsoft bass","pandoraasbeta masculine choir","pandoraasbeta feminine choir","pandoraasbeta tololoche","pandoraasbeta harp","pandoraasbeta pan flute","pandoraasbeta krumhorn","pandoraasbeta timpani","pandoraasbeta crowd hey","pandoraasbeta wario land 4 brass","pandoraasbeta wario land 4 rock organ","pandoraasbeta wario land 4 DAOW","pandoraasbeta wario land 4 hour chime","pandoraasbeta wario land 4 tick","pandoraasbeta kirby kick","pandoraasbeta kirby snare","pandoraasbeta kirby bongo","pandoraasbeta kirby click","pandoraasbeta sonor kick","pandoraasbeta sonor snare","pandoraasbeta sonor snare (left hand)","pandoraasbeta sonor snare (right hand)","pandoraasbeta sonor high tom","pandoraasbeta sonor low tom","pandoraasbeta sonor hihat (closed)","pandoraasbeta sonor hihat (half opened)","pandoraasbeta sonor hihat (open)","pandoraasbeta sonor hihat (open tip)","pandoraasbeta sonor hihat (pedal)","pandoraasbeta sonor crash","pandoraasbeta sonor crash (tip)","pandoraasbeta sonor ride"],B=["kick","snare","piano1","WOW","overdrive","trumpet","saxophone","orchestrahit","detatched violin","synth","sonic3snare","come on","choir","overdriveguitar","flute","legato violin","tremolo violin","amen break","pizzicato violin","tim allen grunt","tuba","loopingcymbal","standardkick","standardsnare","closedhihat","foothihat","openhihat","crashcymbal","pianoC4","liver pad","marimba","susdotwav","wackyboxtts"];b.includes(w)?g=!0:P.includes(w)?(g=!0,x.wave=b[P.findIndex(L=>L===w)]):B.includes(w)&&((w==="trumpet"||w==="flute")&&n!="paandorasbox"||(g=!0,x.wave=b[B.findIndex(L=>L===w)]))}}}g?(t.willReloadForCustomSamples=!0,o.re(),tt(0),we.customSamples=["legacySamples"]):we.customSamples!=null&&we.customSamples.length>0&&(t.willReloadForCustomSamples=!0,o.fe())}if(this.scale=0,e.scale!=null){let g={"romani :)":"double harmonic :)","romani :(":"double harmonic :(","dbl harmonic :)":"double harmonic :)","dbl harmonic :(":"double harmonic :(",enigma:"strange"},f=g[e.scale]!=null?g[e.scale]:e.scale,m=t.scales.findIndex(p=>p.name==f);if(m!=-1&&(this.scale=m),this.scale==t.scales.dictionary.Custom.index&&e.customScale!=null)for(var a of e.customScale.keys())this.scaleCustom[a]=e.customScale[a]}if(e.key!=null){if(typeof e.key=="number")this.key=(e.key+1200>>>0)%t.keys.length;else if(typeof e.key=="string"){let g=e.key;if(g==="C+")this.key=0,this.octave=1;else if(g==="G- (actually F#-)")this.key=6,this.octave=-1;else if(g==="C-")this.key=0,this.octave=-1;else if(g==="oh no (F-)")this.key=5,this.octave=-1;else{let f=g.charAt(0).toUpperCase(),m=g.charAt(1).toLowerCase(),p={C:0,D:2,E:4,F:5,G:7,A:9,B:11},S={"#":1,"\u266F":1,b:-1,"\u266D":-1},x=p[f],w=S[m];x!=null&&(w!=null&&(x+=w),x<0&&(x+=12),x=x%12,this.key=x)}}}e.beatsPerMinute!=null&&(this.tempo=A(t.tempoMin,t.tempoMax+1,e.beatsPerMinute|0)),e.keyOctave!=null&&(this.octave=A(t.octaveMin,t.octaveMax+1,e.keyOctave|0));let s=0;e.reverb!=null&&(s=A(0,32,e.reverb|0)),e.beatsPerBar!=null&&(this.beatsPerBar=Math.max(t.beatsPerBarMin,Math.min(t.beatsPerBarMax,e.beatsPerBar|0)));let r=4;e.ticksPerBeat!=null&&(r=e.ticksPerBeat|0||4,this.rhythm=t.rhythms.findIndex(g=>g.stepsPerBeat==r),this.rhythm==-1&&(this.rhythm=1)),e.masterGain!=null?this.masterGain=Math.max(0,Math.min(5,e.masterGain||0)):this.masterGain=1,e.limitThreshold!=null?this.limitThreshold=Math.max(0,Math.min(2,e.limitThreshold||0)):this.limitThreshold=1,e.compressionThreshold!=null?this.compressionThreshold=Math.max(0,Math.min(1.1,e.compressionThreshold||0)):this.compressionThreshold=1,e.limitRise!=null?this.limitRise=Math.max(2e3,Math.min(1e4,e.limitRise||0)):this.limitRise=4e3,e.limitDecay!=null?this.limitDecay=Math.max(1,Math.min(30,e.limitDecay||0)):this.limitDecay=4,e.limitRatio!=null?this.limitRatio=Math.max(0,Math.min(11,e.limitRatio||0)):this.limitRatio=1,e.compressionRatio!=null?this.compressionRatio=Math.max(0,Math.min(1.168,e.compressionRatio||0)):this.compressionRatio=1,e.songEq!=null?this.eqFilter.fromJsonObject(e.songEq):this.eqFilter.reset();for(let g=0;g<t.filterMorphCount-1;g++)e["songEq"+g]?this.eqSubFilters[g]=e["songEq"+g]:this.eqSubFilters[g]=null;let c=1,d=1,y=1;if(e.channels!=null)for(let g of e.channels)g.instruments&&(c=Math.max(c,g.instruments.length|0)),g.patterns&&(d=Math.max(d,g.patterns.length|0)),g.sequence&&(y=Math.max(y,g.sequence.length|0));e.layeredInstruments!=null?this.layeredInstruments=!!e.layeredInstruments:this.layeredInstruments=!1,e.patternInstruments!=null?this.patternInstruments=!!e.patternInstruments:this.patternInstruments=c>1,this.patternsPerChannel=Math.min(d,t.barCountMax),this.barCount=Math.min(y,t.barCountMax),e.introBars!=null&&(this.loopStart=A(0,this.barCount,e.introBars|0)),e.loopBars!=null&&(this.loopLength=A(1,this.barCount-this.loopStart+1,e.loopBars|0));let l=[],v=[],h=[];if(e.channels!=null)for(let g=0;g<e.channels.length;g++){let f=e.channels[g],m=new ft,p=!1,S=!1;if(f.type!=null?(p=f.type=="drum",S=f.type=="mod"):p=g>=3,p?v.push(m):S?h.push(m):l.push(m),f.octaveScrollBar!=null&&(m.octave=A(0,t.pitchOctaves,(f.octaveScrollBar|0)+1),p&&(m.octave=0)),f.name!=null?m.name=f.name:m.name="",Array.isArray(f.instruments)){let x=f.instruments;for(let w=0;w<x.length&&!(w>=this.getMaxInstrumentsPerChannel());w++){let b=new Ne(p,S);m.instruments[w]=b,b.fromJsonObject(x[w],p,S,!1,!1,s,n)}}for(let x=0;x<this.patternsPerChannel;x++){let w=new at;m.patterns[x]=w;let b;f.patterns&&(b=f.patterns[x]),b!=null&&w.fromJsonObject(b,this,m,r,p,S,n)}m.patterns.length=this.patternsPerChannel;for(let x=0;x<this.barCount;x++)m.bars[x]=f.sequence!=null?Math.min(this.patternsPerChannel,f.sequence[x]>>>0):0;m.bars.length=this.barCount}l.length>t.pitchChannelCountMax&&(l.length=t.pitchChannelCountMax),v.length>t.noiseChannelCountMax&&(v.length=t.noiseChannelCountMax),h.length>t.modChannelCountMax&&(h.length=t.modChannelCountMax),this.pitchChannelCount=l.length,this.noiseChannelCount=v.length,this.modChannelCount=h.length,this.channels.length=0,Array.prototype.push.apply(this.channels,l),Array.prototype.push.apply(this.channels,v),Array.prototype.push.apply(this.channels,h),t.willReloadForCustomSamples&&(window.location.hash=this.toBase64String(),setTimeout(()=>{location.reload()},50))}getPattern(e,i){if(i<0||i>=this.barCount)return null;let n=this.channels[e].bars[i];return n==0?null:this.channels[e].patterns[n-1]}getBeatsPerMinute(){return this.tempo}static getNeededBits(e){return 32-Math.clz32(Math.ceil(e+1)-1)}restoreLimiterDefaults(){this.compressionRatio=1,this.limitRatio=1,this.limitRise=4e3,this.limitDecay=4,this.limitThreshold=1,this.compressionThreshold=1,this.masterGain=1}};var xn=class{instrumentIndex;pitches=Array(t.maxChordSize+2).fill(0);pitchCount=0;chordSize=0;drumsetPitch=null;note=null;prevNote=null;nextNote=null;prevNotePitchIndex=0;nextNotePitchIndex=0;freshlyAllocated=!0;atNoteStart=!1;isOnLastTick=!1;passedEndOfNote=!1;forceContinueAtStart=!1;forceContinueAtEnd=!1;noteStartPart=0;noteEndPart=0;ticksSinceReleased=0;liveInputSamplesHeld=0;lastInterval=0;chipWaveStartOffset=0;noiseSample=0;noiseSampleA=0;noiseSampleB=0;stringSustainStart=0;stringSustainEnd=0;noiseSamples=[];phases=[];operatorWaves=[];phaseDeltas=[];directions=[];chipWaveCompletions=[];chipWavePrevWavesL=[];chipWavePrevWavesR=[];chipWaveCompletionsLastWaveL=[];chipWaveCompletionsLastWaveR=[];phaseDeltaScales=[];expression=0;expressionDelta=0;operatorExpressions=[];operatorExpressionDeltas=[];prevPitchExpressions=Array(t.maxPitchOrOperatorCount).fill(null);prevVibrato=null;prevStringDecay=null;pulseWidth=0;pulseWidthDelta=0;decimalOffset=0;supersawDynamism=0;supersawDynamismDelta=0;supersawUnisonDetunes=[];supersawShape=0;supersawShapeDelta=0;supersawDelayLength=0;supersawDelayLengthDelta=0;supersawDelayLine=null;supersawDelayIndex=-1;supersawPrevPhaseDelta=null;pickedStrings=[];noteFiltersL=[];noteFiltersR=[];noteFilterCount=0;initialNoteFilterInputL1=0;initialNoteFilterInputR1=0;initialNoteFilterInputL2=0;initialNoteFilterInputR2=0;specialIntervalExpressionMult=1;feedbackOutputs=[];feedbackMult=0;feedbackDelta=0;stereoVolumeLStart=0;stereoVolumeRStart=0;stereoVolumeLDelta=0;stereoVolumeRDelta=0;stereoDelayStart=0;stereoDelayEnd=0;stereoDelayDelta=0;customVolumeStart=0;customVolumeEnd=0;filterResonanceStart=0;filterResonanceDelta=0;isFirstOrder=!1;envelopeComputer=new vt;constructor(){this.reset()}reset(){for(let e=0;e<t.unisonVoicesMax;e++)this.noiseSamples[e]=0;for(let e=0;e<t.maxPitchOrOperatorCount;e++)this.phases[e]=0,this.directions[e]=1,this.chipWaveCompletions[e]=0,this.chipWavePrevWavesL[e]=0,this.chipWavePrevWavesR[e]=0,this.chipWaveCompletionsLastWaveL[e]=0,this.chipWaveCompletionsLastWaveR[e]=0,this.operatorWaves[e]=t.operatorWaves[0],this.feedbackOutputs[e]=0,this.prevPitchExpressions[e]=null;for(let e=0;e<this.noteFilterCount;e++)this.noteFiltersL[e].resetOutput(),this.noteFiltersR[e].resetOutput();this.noteFilterCount=0,this.initialNoteFilterInputL1=0,this.initialNoteFilterInputR1=0,this.initialNoteFilterInputL2=0,this.initialNoteFilterInputR2=0,this.liveInputSamplesHeld=0,this.supersawDelayIndex=-1;for(let e of this.pickedStrings)e.reset();this.envelopeComputer.reset(),this.prevVibrato=null,this.prevStringDecay=null,this.supersawPrevPhaseDelta=null,this.drumsetPitch=null}};var xt=1e-24,pe=class o{syncSongState(){let e=this.song.getChannelCount();for(let i=this.channels.length;i<e;i++)this.channels[i]=new fn;this.channels.length=e;for(let i=0;i<e;i++){let n=this.song.channels[i],a=this.channels[i];for(let s=a.instruments.length;s<n.instruments.length;s++)a.instruments[s]=new jt;if(a.instruments.length=n.instruments.length,a.muted!=n.muted&&(a.muted=n.muted,a.muted))for(let s of a.instruments)s.resetAllEffects()}}initModFilters(e){if(e!=null){e.tmpEqFilterStart=e.eqFilter,e.tmpEqFilterEnd=null;for(let i=0;i<e.getChannelCount();i++)for(let n=0;n<e.channels[i].instruments.length;n++){let a=e.channels[i].instruments[n];for(let s=0;s<e.channels[i].instruments[n].effects.length;s++){let r=e.channels[i].instruments[n].effects[s];r.tmpEqFilterStart=r.eqFilter,r.tmpEqFilterEnd=null}a.tmpNoteFilterStart=a.noteFilter,a.tmpNoteFilterEnd=null}}}warmUpSynthesizer(e){if(e!=null){this.syncSongState();let n=this.getSamplesPerTick();for(let a=0;a<e.getChannelCount();a++)for(let s=0;s<e.channels[a].instruments.length;s++){let r=e.channels[a].instruments[s],c=this.channels[a].instruments[s];o.getInstrumentSynthFunction(r),c.vibratoTime=0,c.nextVibratoTime=0;for(let d=0;d<t.maxEnvelopeCount+1;d++)c.envelopeTime[d]=0;c.arpTime=0,c.updateWaves(r,this.samplesPerSecond),c.allocateNecessaryBuffers(this,r,n)}}var i=new Float32Array(1);this.isPlayingSong=!0,this.synthesize(i,i,1,!0),this.isPlayingSong=!1}computeLatestModValues(){if(this.song!=null&&this.song.modChannelCount>0){let e=[],i=[];this.modValues=[],this.nextModValues=[],this.modInsValues=[],this.nextModInsValues=[],this.heldMods=[];for(let a=0;a<this.song.pitchChannelCount+this.song.noiseChannelCount;a++){i[a]=[],this.modInsValues[a]=[],this.nextModInsValues[a]=[];for(let s=0;s<this.song.channels[a].instruments.length;s++)this.modInsValues[a][s]=[],this.nextModInsValues[a][s]=[],i[a][s]=[]}let n=this.beat*t.partsPerBeat+this.part;for(let a=this.song.pitchChannelCount+this.song.noiseChannelCount;a<this.song.getChannelCount();a++)if(!this.song.channels[a].muted){let s;for(let r=this.bar;r>=0;r--)if(s=this.song.getPattern(a,r),s!=null){let c=s.instruments[0],d=this.song.channels[a].instruments[c],y=[],l=[],v=r==this.bar?n:this.findPartsInBar(r);for(let h of s.notes)if(h.start<=v&&(y[t.modCount-1-h.pitches[0]]==null||h.end>y[t.modCount-1-h.pitches[0]]))if(h.start==v&&(y[t.modCount-1-h.pitches[0]]=h.start,l[t.modCount-1-h.pitches[0]]=h.pins[0].size),h.end<=v)y[t.modCount-1-h.pitches[0]]=h.end,l[t.modCount-1-h.pitches[0]]=h.pins[h.pins.length-1].size;else{y[t.modCount-1-h.pitches[0]]=v;for(let g=0;g<h.pins.length;g++)if(h.pins[g].time+h.start>v){let f=h.pins[g].time-h.pins[g-1].time,m=v-h.start-h.pins[g-1].time,p=h.pins[g].size-h.pins[g-1].size;l[t.modCount-1-h.pitches[0]]=Math.round(h.pins[g-1].size+p*m/f),g=h.pins.length}}for(let h=0;h<t.modCount;h++)if(y[h]!=null)if(t.modulators[d.modulators[h]].forSong){let g=d.modulators[h]==t.modulators.dictionary["song eq"].index;if(e[d.modulators[h]]==null||r*t.partsPerBeat*this.song.beatsPerBar+y[h]>e[d.modulators[h]]){if(g){let f=this.song;if(d.modFilterTypes[h]==0)f.tmpEqFilterStart=f.eqSubFilters[l[h]];else{for(let m=0;m<t.filterMorphCount;m++)f.tmpEqFilterStart!=null&&f.tmpEqFilterStart==f.eqSubFilters[m]&&(f.tmpEqFilterStart=new Ee,f.tmpEqFilterStart.fromJsonObject(f.eqSubFilters[m].toJsonObject()),m=t.filterMorphCount);f.tmpEqFilterStart!=null&&Math.floor((d.modFilterTypes[h]-1)/2)<f.tmpEqFilterStart.controlPointCount&&(d.modFilterTypes[h]%2?f.tmpEqFilterStart.controlPoints[Math.floor((d.modFilterTypes[h]-1)/2)].freq=l[h]:f.tmpEqFilterStart.controlPoints[Math.floor((d.modFilterTypes[h]-1)/2)].gain=l[h])}f.tmpEqFilterEnd=f.tmpEqFilterStart}for(let f=0;f<d.modChannels[h].length;f++)this.setModValue(l[h],l[h],d.modChannels[h][f],d.modInstruments[h][f],d.modulators[h]);e[d.modulators[h]]=r*t.partsPerBeat*this.song.beatsPerBar+y[h]}}else{let g=[],f=[];if(d.modInstruments[h][0]==this.song.channels[d.modChannels[h][0]].instruments.length)for(let m=0;m<this.song.channels[d.modChannels[h][0]].instruments.length;m++)g.push(d.modChannels[h][0]),f.push(m);else if(d.modInstruments[h][0]>this.song.channels[d.modChannels[h][0]].instruments.length){let m=this.song.getPattern(d.modChannels[h][0],r);m!=null&&(g.push(d.modChannels[h][0]),f=m.instruments)}else for(let m=0;m<d.modChannels[h].length;m++)g.push(d.modChannels[h][m]),f.push(d.modInstruments[h][m]);for(let m=0;m<f.length;m++){let p=d.modulators[h]==t.modulators.dictionary["post eq"].index,S=d.modulators[h]==t.modulators.dictionary["pre eq"].index,x=d.modulators[h];if(p?x=t.modulators.length+(d.modFilterTypes[h]|0):S&&(x=t.modulators.length+1+2*t.filterMaxPoints+(d.modFilterTypes[h]|0)),i[d.modChannels[h][m]][f[m]][x]==null||r*t.partsPerBeat*this.song.beatsPerBar+y[h]>i[d.modChannels[h][m]][f[m]][x]){if(p){let w=this.song.channels[d.modChannels[h][m]].instruments[f[m]];for(let b=0;b<w.effects.length;b++){let P=w.effects[b];if(d.modFilterTypes[h]==0)P.tmpEqFilterStart=P.eqSubFilters[l[h]];else{for(let B=0;B<t.filterMorphCount;B++)P.tmpEqFilterStart!=null&&P.tmpEqFilterStart==P.eqSubFilters[B]&&(P.tmpEqFilterStart=new Ee,P.tmpEqFilterStart.fromJsonObject(P.eqSubFilters[B].toJsonObject()),B=t.filterMorphCount);P.tmpEqFilterStart!=null&&Math.floor((d.modFilterTypes[h]-1)/2)<P.tmpEqFilterStart.controlPointCount&&(d.modFilterTypes[h]%2?P.tmpEqFilterStart.controlPoints[Math.floor((d.modFilterTypes[h]-1)/2)].freq=l[h]:P.tmpEqFilterStart.controlPoints[Math.floor((d.modFilterTypes[h]-1)/2)].gain=l[h])}P.tmpEqFilterEnd=P.tmpEqFilterStart}}else if(S){let w=this.song.channels[d.modChannels[h][m]].instruments[f[m]];if(d.modFilterTypes[h]==0)w.tmpNoteFilterStart=w.noteSubFilters[l[h]];else{for(let b=0;b<t.filterMorphCount;b++)w.tmpNoteFilterStart!=null&&w.tmpNoteFilterStart==w.noteSubFilters[b]&&(w.tmpNoteFilterStart=new Ee,w.tmpNoteFilterStart.fromJsonObject(w.noteSubFilters[b].toJsonObject()),b=t.filterMorphCount);w.tmpNoteFilterStart!=null&&Math.floor((d.modFilterTypes[h]-1)/2)<w.tmpNoteFilterStart.controlPointCount&&(d.modFilterTypes[h]%2?w.tmpNoteFilterStart.controlPoints[Math.floor((d.modFilterTypes[h]-1)/2)].freq=l[h]:w.tmpNoteFilterStart.controlPoints[Math.floor((d.modFilterTypes[h]-1)/2)].gain=l[h])}w.tmpNoteFilterEnd=w.tmpNoteFilterStart}else this.setModValue(l[h],l[h],d.modChannels[h][m],f[m],x);i[d.modChannels[h][m]][f[m]][x]=r*t.partsPerBeat*this.song.beatsPerBar+y[h]}}}}}}}determineInvalidModulators(e){if(this.song!=null)for(let i=0;i<t.modCount;i++){if(e.invalidModulators[i]=!0,e.modChannels[i][0]==-1){e.modulators[i]!=0&&(e.invalidModulators[i]=!1);continue}for(let n=0;n<e.modChannels[i].length;n++){let a=this.song.channels[e.modChannels[i][n]];if(a==null)continue;let s=[];e.modInstruments[i][n]>=a.instruments.length?s=a.instruments:s=[a.instruments[e.modInstruments[i][n]]];for(let r=0;r<s.length;r++){let c=s[r],d=c.effects[0];if(c==null)continue;let y=t.modulators[e.modulators[i]].name;(!(t.modulators[e.modulators[i]].associatedEffect!=11&&!c.effectsIncludeType(t.modulators[e.modulators[i]].associatedEffect))&&!(t.modulators[e.modulators[i]].associatedMDEffect!=6&&!(c.mdeffects&1<<t.modulators[e.modulators[i]].associatedMDEffect))||c.type!=1&&c.type!=11&&(y=="fm slider 1"||y=="fm slider 2"||y=="fm slider 3"||y=="fm slider 4"||y=="fm feedback")||c.type!=11&&(y=="fm slider 5"||y=="fm slider 6")||c.type!=6&&c.type!=8&&(y=="pulse width"||y=="decimal offset")||c.type!=8&&(y=="dynamism"||y=="spread"||y=="saw shape")||!c.getChord().arpeggiates&&(y=="arp speed"||y=="reset arp")||d.eqFilterType&&y=="post eq"||!d.eqFilterType&&(y=="post eq cut"||y=="post eq peak")||y=="post eq"&&Math.floor((e.modFilterTypes[i]+1)/2)>c.getLargestControlPointCount(!1)||c.noteFilterType&&y=="pre eq"||!c.noteFilterType&&(y=="pre eq cut"||y=="pre eq peak")||y=="pre eq"&&Math.floor((e.modFilterTypes[i]+1)/2)>c.getLargestControlPointCount(!0))&&(e.invalidModulators[i]=!1,r=s.length)}}}}static operatorAmplitudeCurve(e){return(Math.pow(16,e/15)-1)/15}samplesPerSecond=44100;panningDelayBufferSize;panningDelayBufferMask;flangerDelayBufferSize;flangerDelayBufferMask;chorusDelayBufferSize;chorusDelayBufferMask;song=null;preferLowerLatency=!1;anticipatePoorPerformance=!1;liveInputDuration=0;liveBassInputDuration=0;liveInputStarted=!1;liveBassInputStarted=!1;liveInputPitches=[];liveBassInputPitches=[];liveInputChannel=0;liveBassInputChannel=0;liveInputInstruments=[];liveBassInputInstruments=[];loopRepeatCount=-1;volume=1;oscRefreshEventTimer=0;oscEnabled=!0;enableMetronome=!1;countInMetronome=!1;renderingSong=!1;heldMods=[];wantToSkip=!1;playheadInternal=0;bar=0;prevBar=null;nextBar=null;beat=0;part=0;tick=0;isAtStartOfTick=!0;isAtEndOfTick=!0;tickSampleCountdown=0;modValues=[];modInsValues=[];nextModValues=[];nextModInsValues=[];isPlayingSong=!1;isRecording=!1;liveInputEndTime=0;browserAutomaticallyClearsAudioBuffer=!0;static tempFilterStartCoefficients=new nt;static tempFilterEndCoefficients=new nt;tempDrumSetControlPoint=new Pe;tempFrequencyResponse=new st;loopBarStart=-1;loopBarEnd=-1;static fmSynthFunctionCache={};static fm6SynthFunctionCache={};static effectsFunctionCache={};static pickedStringFunctionCache=Array(3).fill(void 0);channels=[];tonePool=new ct;tempMatchedPitchTones=Array(t.maxChordSize).fill(null);startedMetronome=!1;metronomeSamplesRemaining=-1;metronomeAmplitude=0;metronomePrevAmplitude=0;metronomeFilter=0;limit=0;songEqFilterVolume=1;songEqFilterVolumeDelta=0;songEqFiltersL=[];songEqFiltersR=[];songEqFilterCount=0;initialSongEqFilterInput1L=0;initialSongEqFilterInput2L=0;initialSongEqFilterInput1R=0;initialSongEqFilterInput2R=0;tempInstrumentSampleBufferL=null;tempInstrumentSampleBufferR=null;audioCtx=null;scriptNode=null;get playing(){return this.isPlayingSong}get recording(){return this.isRecording}get playhead(){return this.playheadInternal}set playhead(e){if(this.song!=null){this.playheadInternal=Math.max(0,Math.min(this.song.barCount,e));let i=this.playheadInternal;this.bar=Math.floor(i),i=this.song.beatsPerBar*(i-this.bar),this.beat=Math.floor(i),i=t.partsPerBeat*(i-this.beat),this.part=Math.floor(i),i=t.ticksPerPart*(i-this.part),this.tick=Math.floor(i),this.tickSampleCountdown=0,this.isAtStartOfTick=!0,this.prevBar=null}}getSamplesPerBar(){if(this.song==null)throw new Error;return this.getSamplesPerTick()*t.ticksPerPart*t.partsPerBeat*this.song.beatsPerBar}getTicksIntoBar(){return(this.beat*t.partsPerBeat+this.part)*t.ticksPerPart+this.tick}getCurrentPart(){return this.beat*t.partsPerBeat+this.part}findPartsInBar(e){if(this.song==null)return 0;let i=t.partsPerBeat*this.song.beatsPerBar;for(let n=this.song.pitchChannelCount+this.song.noiseChannelCount;n<this.song.getChannelCount();n++){let a=this.song.getPattern(n,e);if(a!=null){let s=this.song.channels[n].instruments[a.instruments[0]];for(let r=0;r<t.modCount;r++)if(s.modulators[r]==t.modulators.dictionary["next bar"].index)for(let c of a.notes)c.pitches[0]==t.modCount-1-r&&i>c.start&&(i=c.start)}}return i}getTotalSamples(e,i,n){if(this.song==null)return-1;let a=e?0:this.song.loopStart,s=i?this.song.barCount:this.song.loopStart+this.song.loopLength,r=!1,c=!1,d=this.song.tempo;for(let y=this.song.getChannelCount()-1;y>=this.song.pitchChannelCount+this.song.noiseChannelCount;y--)for(let l=a;l<s;l++){let v=this.song.getPattern(y,l);if(v!=null){let h=this.song.channels[y].instruments[v.instruments[0]];for(let g=0;g<t.modCount;g++)h.modulators[g]==t.modulators.dictionary.tempo.index&&(r=!0),h.modulators[g]==t.modulators.dictionary["next bar"].index&&(c=!0)}}if(a>0){let y=null,l=0;for(let v=a-1;v>=0;v--){for(let h=this.song.getChannelCount()-1;h>=this.song.pitchChannelCount+this.song.noiseChannelCount;h--){let g=this.song.getPattern(h,v);if(g!=null){let f=g.instruments[0],m=this.song.channels[h].instruments[f],p=this.findPartsInBar(v);for(let S of g.notes)if(m.modulators[t.modCount-1-S.pitches[0]]==t.modulators.dictionary.tempo.index&&S.start<p&&(y==null||S.end>y))if(S.end<=p)y=S.end,l=S.pins[S.pins.length-1].size;else{y=p;for(let x=0;x<S.pins.length;x++)if(S.pins[x].time+S.start>p){let w=S.pins[x].time-S.pins[x-1].time,b=p-S.start-S.pins[x-1].time,P=S.pins[x].size-S.pins[x-1].size;l=Math.round(S.pins[x-1].size+P*b/w),x=S.pins.length}}}}y!=null&&(d=l+t.modulators.dictionary.tempo.convertRealFactor,v=-1)}}if(r||c){let y=a,l=!1,v=0;for(;!l;){let h=t.partsPerBeat*this.song.beatsPerBar,g=0;if(c&&(h=this.findPartsInBar(y)),r){let f=!1;for(let m=this.song.getChannelCount()-1;m>=this.song.pitchChannelCount+this.song.noiseChannelCount;m--)if(f==!1){let p=this.song.getPattern(m,y);if(p!=null){let S=this.song.channels[m].instruments[p.instruments[0]];for(let x=0;x<t.modCount;x++)if(f==!1&&S.modulators[x]==t.modulators.dictionary.tempo.index&&p.notes.find(w=>w.pitches[0]==t.modCount-1-x)){f=!0,p.notes.sort(function(w,b){return w.start==b.start?w.pitches[0]-b.pitches[0]:w.start-b.start});for(let w of p.notes)if(w.pitches[0]==t.modCount-1-x&&(v+=Math.min(h-g,w.start-g)*t.ticksPerPart*this.getSamplesPerTickSpecificBPM(d),w.start<h))for(let b=1;b<w.pins.length;b++){if(w.pins[b-1].time+w.start<=h){let P=t.ticksPerPart*Math.min(h-(w.start+w.pins[b-1].time),w.pins[b].time-w.pins[b-1].time),B=w.pins[b-1].size+t.modulators.dictionary.tempo.convertRealFactor,L=w.pins[b].size+t.modulators.dictionary.tempo.convertRealFactor;w.pins[b].time+w.start>h&&(L=w.pins[b-1].size+(w.pins[b].size-w.pins[b-1].size)*(h-(w.start+w.pins[b-1].time))/(w.pins[b].time-w.pins[b-1].time)+t.modulators.dictionary.tempo.convertRealFactor);let E=t.partsPerBeat*t.ticksPerPart/60;L!=B?v+=-this.samplesPerSecond*P*(Math.log(E*L*P)-Math.log(E*B*P))/(E*(B-L)):v+=P*this.getSamplesPerTickSpecificBPM(L),d=L}g=Math.min(w.start+w.pins[b].time,h)}}}}}v+=(h-g)*t.ticksPerPart*this.getSamplesPerTickSpecificBPM(d),y++,n!=0&&y==this.song.loopStart+this.song.loopLength&&(y=this.song.loopStart,n>0&&n--),y>=s&&(l=!0)}return Math.ceil(v)}else return this.getSamplesPerBar()*this.getTotalBars(e,i,n)}getTotalBars(e,i,n=this.loopRepeatCount){if(this.song==null)throw new Error;let a=this.song.loopLength*(n+1);return e&&(a+=this.song.loopStart),i&&(a+=this.song.barCount-(this.song.loopStart+this.song.loopLength)),a}constructor(e=null){this.computeDelayBufferSizes(),e!=null&&this.setSong(e)}setSong(e){typeof e=="string"?this.song=new en(e):e instanceof en&&(this.song=e),this.prevBar=null}computeDelayBufferSizes(){this.panningDelayBufferSize=Je(this.samplesPerSecond*t.panDelaySecondsMax),this.panningDelayBufferMask=this.panningDelayBufferSize-1,this.flangerDelayBufferSize=Je(this.samplesPerSecond*t.flangerMaxDelay),this.flangerDelayBufferMask=this.flangerDelayBufferSize-1,this.chorusDelayBufferSize=Je(this.samplesPerSecond*t.chorusMaxDelay),this.chorusDelayBufferMask=this.chorusDelayBufferSize-1}activateAudio(){let e=this.anticipatePoorPerformance?this.preferLowerLatency?2048:4096:this.preferLowerLatency?512:2048;if(this.audioCtx==null||this.scriptNode==null||this.scriptNode.bufferSize!=e){this.scriptNode!=null&&this.deactivateAudio();let i=this.anticipatePoorPerformance?this.preferLowerLatency?"balanced":"playback":this.preferLowerLatency?"interactive":"balanced";this.audioCtx=this.audioCtx||new(window.AudioContext||window.webkitAudioContext)({latencyHint:i}),this.samplesPerSecond=this.audioCtx.sampleRate,this.scriptNode=this.audioCtx.createScriptProcessor?this.audioCtx.createScriptProcessor(e,0,2):this.audioCtx.createJavaScriptNode(e,0,2),this.scriptNode.onaudioprocess=this.audioProcessCallback,this.scriptNode.channelCountMode="explicit",this.scriptNode.channelInterpretation="speakers",this.scriptNode.connect(this.audioCtx.destination),this.computeDelayBufferSizes()}this.audioCtx.resume()}deactivateAudio(){this.audioCtx!=null&&this.scriptNode!=null&&(this.scriptNode.disconnect(this.audioCtx.destination),this.scriptNode=null,this.audioCtx.close&&this.audioCtx.close(),this.audioCtx=null)}maintainLiveInput(){this.activateAudio(),this.liveInputEndTime=performance.now()+1e4}play(){this.isPlayingSong||(this.initModFilters(this.song),this.computeLatestModValues(),this.activateAudio(),this.warmUpSynthesizer(this.song),this.isPlayingSong=!0)}pause(){if(this.isPlayingSong&&(this.isPlayingSong=!1,this.isRecording=!1,this.preferLowerLatency=!1,this.modValues=[],this.nextModValues=[],this.heldMods=[],this.song!=null)){this.song.inVolumeCap=0,this.song.outVolumeCap=0,this.song.outVolumeCapL=0,this.song.outVolumeCapR=0,this.song.tmpEqFilterStart=null,this.song.tmpEqFilterEnd=null;for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)this.modInsValues[e]=[],this.nextModInsValues[e]=[]}}startRecording(){this.preferLowerLatency=!0,this.isRecording=!0,this.play()}resetEffects(){if(this.limit=0,this.freeAllTones(),this.song!=null)for(let e of this.channels)for(let i of e.instruments)i.resetAllEffects()}setModValue(e,i,n,a,s){let r=e+t.modulators[s].convertRealFactor,c=i+t.modulators[s].convertRealFactor;return t.modulators[s].forSong?(this.modValues[s]==null||this.modValues[s]!=r||this.nextModValues[s]!=c)&&(this.modValues[s]=r,this.nextModValues[s]=c):(this.modInsValues[n][a][s]==null||this.modInsValues[n][a][s]!=r||this.nextModInsValues[n][a][s]!=c)&&(this.modInsValues[n][a][s]=r,this.nextModInsValues[n][a][s]=c),r}getModValue(e,i,n,a){if(t.modulators[e].forSong){if(this.modValues[e]!=null&&this.nextModValues[e]!=null)return a?this.nextModValues[e]:this.modValues[e]}else if(i!=null&&n!=null&&this.modInsValues[i][n][e]!=null&&this.nextModInsValues[i][n][e]!=null)return a?this.nextModInsValues[i][n][e]:this.modInsValues[i][n][e];return-1}isAnyModActive(e,i){for(let n=0;n<t.modulators.length;n++)if(this.modValues!=null&&this.modValues[n]!=null||this.modInsValues!=null&&this.modInsValues[e]!=null&&this.modInsValues[e][i]!=null&&this.modInsValues[e][i][n]!=null)return!0;return!1}unsetMod(e,i,n){if(this.isModActive(e)||i!=null&&n!=null&&this.isModActive(e,i,n)){this.modValues[e]=null,this.nextModValues[e]=null;for(let a=0;a<this.heldMods.length;a++)i!=null&&n!=null?this.heldMods[a].channelIndex==i&&this.heldMods[a].instrumentIndex==n&&this.heldMods[a].setting==e&&this.heldMods.splice(a,1):this.heldMods[a].setting==e&&this.heldMods.splice(a,1);i!=null&&n!=null&&(this.modInsValues[i][n][e]=null,this.nextModInsValues[i][n][e]=null)}}isFilterModActive(e,i,n,a){let s=this.song.channels[i].instruments[n];if(e){if(s.noteFilterType)return!1;if(s.tmpNoteFilterEnd!=null)return!0}else if(a){if(this?.song?.tmpEqFilterEnd!=null)return!0}else for(let r=0;r<s.effects.length;r++){let c=s.effects[r];if(c.eqFilterType)return!1;if(c.tmpEqFilterEnd!=null)return!0}return!1}isModActive(e,i,n){return t.modulators[e].forSong?this.modValues!=null&&this.modValues[e]!=null:i!=null&&n!=null&&this.modInsValues!=null&&this.modInsValues[i]!=null&&this.modInsValues[i][n]!=null?this.modInsValues[i][n][e]!=null:!1}forceHoldMods(e,i,n,a){let s=!1;for(let r=0;r<this.heldMods.length;r++)this.heldMods[r].channelIndex==i&&this.heldMods[r].instrumentIndex==n&&this.heldMods[r].setting==a&&(this.heldMods[r].volume=e,this.heldMods[r].holdFor=24,s=!0);s||this.heldMods.push({volume:e,channelIndex:i,instrumentIndex:n,setting:a,holdFor:24})}snapToStart(){this.bar=0,this.resetEffects(),this.snapToBar()}goToBar(e){this.bar=e,this.resetEffects(),this.playheadInternal=this.bar}snapToBar(){this.playheadInternal=this.bar,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=0}jumpIntoLoop(){if(this.song&&(this.bar<this.song.loopStart||this.bar>=this.song.loopStart+this.song.loopLength)){let e=this.bar;this.bar=this.song.loopStart,this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}}goToNextBar(){if(!this.song)return;this.prevBar=this.bar;let e=this.bar;this.bar++,this.bar>=this.song.barCount&&(this.bar=0),this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}goToPrevBar(){if(!this.song)return;this.prevBar=null;let e=this.bar;this.bar--,(this.bar<0||this.bar>=this.song.barCount)&&(this.bar=this.song.barCount-1),this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}getNextBar(){let e=this.bar+1;return this.isRecording?e>=this.song.barCount&&(e=this.song.barCount-1):this.bar==this.loopBarEnd&&!this.renderingSong?e=this.loopBarStart:this.loopRepeatCount!=0&&e==Math.max(this.loopBarEnd+1,this.song.loopStart+this.song.loopLength)&&(e=this.song.loopStart),e}skipBar(){if(!this.song)return;let e=this.getSamplesPerTick();this.prevBar=this.bar,this.loopBarEnd!=this.bar?this.bar++:this.bar=this.loopBarStart,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=e,this.isAtStartOfTick=!0,this.loopRepeatCount!=0&&this.bar==Math.max(this.song.loopStart+this.song.loopLength,this.loopBarEnd)&&(this.bar=this.song.loopStart,this.loopBarStart!=-1&&(this.bar=this.loopBarStart),this.loopRepeatCount>0&&this.loopRepeatCount--)}audioProcessCallback=e=>{let i=e.outputBuffer,n=i.getChannelData(0),a=i.getChannelData(1);if(this.browserAutomaticallyClearsAudioBuffer&&(n[0]!=0||a[0]!=0||n[i.length-1]!=0||a[i.length-1]!=0)&&(this.browserAutomaticallyClearsAudioBuffer=!1),!this.browserAutomaticallyClearsAudioBuffer){let s=i.length;for(let r=0;r<s;r++)n[r]=0,a[r]=0}!this.isPlayingSong&&performance.now()>=this.liveInputEndTime?this.deactivateAudio():(this.synthesize(n,a,i.length,this.isPlayingSong),this.oscEnabled&&(this.oscRefreshEventTimer<=0?(cn.raise("oscilloscopeUpdate",n,a),this.oscRefreshEventTimer=2):this.oscRefreshEventTimer--))};computeSongState(e){if(this.song==null)return;let i=Math.ceil(e),n=this.samplesPerSecond,a=1;if(this.song.eqFilterType){let c=this.song.eqFilter;this.song.eqSubFilters[1]==null&&(this.song.eqSubFilters[1]=new Ee);let d=this.song.eqSubFilters[1],y=this.song.eqFilterSimpleCut,l=this.song.eqFilterSimplePeak,v=this.song.eqFilterSimpleCut,h=this.song.eqFilterSimplePeak,g=!1,f;if(g){c.convertLegacySettingsForSynth(y,l),d.convertLegacySettingsForSynth(v,h),f=c.controlPoints[0];let m=d.controlPoints[0];f.toCoefficients(o.tempFilterStartCoefficients,n,1,1),m.toCoefficients(o.tempFilterEndCoefficients,n,1,1),this.songEqFiltersL.length<1&&(this.songEqFiltersL[0]=new Re),this.songEqFiltersL[0].loadCoefficientsWithGradient(o.tempFilterStartCoefficients,o.tempFilterEndCoefficients,1/i,f.type==0),this.songEqFiltersR.length<1&&(this.songEqFiltersR[0]=new Re),this.songEqFiltersR[0].loadCoefficientsWithGradient(o.tempFilterStartCoefficients,o.tempFilterEndCoefficients,1/i,f.type==0)}else c.convertLegacySettingsForSynth(y,l,!0),f=c.controlPoints[0],f.toCoefficients(o.tempFilterStartCoefficients,n,1,1),this.songEqFiltersL.length<1&&(this.songEqFiltersL[0]=new Re),this.songEqFiltersL[0].loadCoefficientsWithGradient(o.tempFilterStartCoefficients,o.tempFilterStartCoefficients,1/i,f.type==0),this.songEqFiltersR.length<1&&(this.songEqFiltersR[0]=new Re),this.songEqFiltersR[0].loadCoefficientsWithGradient(o.tempFilterStartCoefficients,o.tempFilterStartCoefficients,1/i,f.type==0);a*=f.getVolumeCompensationMult(),this.songEqFilterCount=1,a=Math.min(3,a)}else{let c=this.song.tmpEqFilterStart!=null?this.song.tmpEqFilterStart:this.song.eqFilter;for(let d=0;d<c.controlPointCount;d++){let y=c.controlPoints[d],l=this.song.tmpEqFilterEnd!=null&&this.song.tmpEqFilterEnd.controlPoints[d]!=null?this.song.tmpEqFilterEnd.controlPoints[d]:c.controlPoints[d];y.type!=l.type&&(y=l),y.toCoefficients(o.tempFilterStartCoefficients,n,1,1),l.toCoefficients(o.tempFilterEndCoefficients,n,1,1),this.songEqFiltersL.length<=d&&(this.songEqFiltersL[d]=new Re),this.songEqFiltersL[d].loadCoefficientsWithGradient(o.tempFilterStartCoefficients,o.tempFilterEndCoefficients,1/i,y.type==0),this.songEqFiltersR.length<=d&&(this.songEqFiltersR[d]=new Re),this.songEqFiltersR[d].loadCoefficientsWithGradient(o.tempFilterStartCoefficients,o.tempFilterEndCoefficients,1/i,y.type==0),a*=y.getVolumeCompensationMult()}this.songEqFilterCount=c.controlPointCount,a=Math.min(3,a)}let s=a,r=a;this.songEqFilterVolume=s,this.songEqFilterVolumeDelta=(r-s)/i}synthesize(e,i,n,a=!0){if(this.song==null){for(let m=0;m<n;m++)e[m]=0,i[m]=0;this.deactivateAudio();return}let s=this.song;this.song.inVolumeCap=0,this.song.outVolumeCap=0,this.song.outVolumeCapL=0,this.song.outVolumeCapR=0;let r=this.getSamplesPerTick(),c=!1;(this.tickSampleCountdown<=0||this.tickSampleCountdown>r)&&(this.tickSampleCountdown=r,this.isAtStartOfTick=!0),a&&(this.beat>=s.beatsPerBar&&(this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=r,this.isAtStartOfTick=!0,this.prevBar=this.bar,this.bar=this.getNextBar(),this.bar<=this.prevBar&&this.loopRepeatCount>0&&this.loopRepeatCount--),this.bar>=s.barCount&&(this.bar=0,this.loopRepeatCount!=-1&&(c=!0,this.pause()))),this.syncSongState(),(this.tempInstrumentSampleBufferL==null||this.tempInstrumentSampleBufferL.length<n||this.tempInstrumentSampleBufferR==null||this.tempInstrumentSampleBufferR.length<n)&&(this.tempInstrumentSampleBufferL=new Float32Array(n),this.tempInstrumentSampleBufferR=new Float32Array(n));let d=+this.volume,y=1-Math.pow(.5,this.song.limitDecay/this.samplesPerSecond),l=1-Math.pow(.5,this.song.limitRise/this.samplesPerSecond),v=+this.limit,h=[],g=-1,f=0;for(;f<n&&!c;){this.nextBar=this.getNextBar(),this.nextBar>=s.barCount&&(this.nextBar=null);let m=n-f,p=Math.ceil(this.tickSampleCountdown),S=Math.min(p,m),x=f+S;if(this.isPlayingSong||this.renderingSong){for(let b=s.pitchChannelCount+s.noiseChannelCount;b<s.getChannelCount();b++){let P=s.channels[b],B=this.channels[b];this.determineCurrentActiveTones(s,b,r,a);for(let L=0;L<P.instruments.length;L++){let E=B.instruments[L];for(let D=0;D<E.activeModTones.count();D++){let R=E.activeModTones.get(D),z=s.channels[b].instruments[R.instrumentIndex],W=t.modCount-1-R.pitches[0];(z.modulators[W]==t.modulators.dictionary["pre eq"].index||z.modulators[W]==t.modulators.dictionary["post eq"].index||z.modulators[W]==t.modulators.dictionary["song eq"].index)&&z.modFilterTypes[W]!=null&&z.modFilterTypes[W]>0||this.playModTone(s,b,r,f,S,R,!1,!1)}}}for(let b=s.pitchChannelCount+s.noiseChannelCount;b<s.getChannelCount();b++){let P=s.channels[b],B=this.channels[b];for(let L=0;L<P.instruments.length;L++){let E=B.instruments[L];for(let D=0;D<E.activeModTones.count();D++){let R=E.activeModTones.get(D),z=s.channels[b].instruments[R.instrumentIndex],W=t.modCount-1-R.pitches[0];(z.modulators[W]==t.modulators.dictionary["pre eq"].index||z.modulators[W]==t.modulators.dictionary["post eq"].index||z.modulators[W]==t.modulators.dictionary["song eq"].index)&&z.modFilterTypes[W]!=null&&z.modFilterTypes[W]>0&&this.playModTone(s,b,r,f,S,R,!1,!1)}}}}if(this.wantToSkip){let b=h.includes(this.bar);if(b&&f==g){this.pause();return}g==-1&&(g=f),b||h.push(this.bar),this.wantToSkip=!1,this.skipBar();continue}this.computeSongState(r);for(let b=0;b<s.pitchChannelCount+s.noiseChannelCount;b++){let P=s.channels[b],B=this.channels[b];this.isAtStartOfTick&&(this.determineCurrentActiveTones(s,b,r,a&&!this.countInMetronome),this.determineLiveInputTones(s,b,r));for(let L=0;L<P.instruments.length;L++){let E=P.instruments[L],D=B.instruments[L];if(this.isAtStartOfTick){let C=D.activeTones.count()+D.liveInputTones.count();for(let I=0;I<D.releasedTones.count();I++){let M=D.releasedTones.get(I);if(M.ticksSinceReleased>=Math.abs(E.getFadeOutTicks())){this.freeReleasedTone(D,I),I--;continue}let q=C>=t.maximumTonesPerChannel;this.computeTone(s,b,r,M,!0,q),C++}D.awake&&(D.computed||D.compute(this,E,r,Math.ceil(r),null,b,L),D.computed=!1,D.envelopeComputer.clearEnvelopes())}for(let C=0;C<D.activeTones.count();C++){let I=D.activeTones.get(C);this.playTone(b,f,S,I)}for(let C=0;C<D.liveInputTones.count();C++){let I=D.liveInputTones.get(C);this.playTone(b,f,S,I)}for(let C=0;C<D.releasedTones.count();C++){let I=D.releasedTones.get(C);this.playTone(b,f,S,I)}D.awake&&o.effectsSynth(this,e,i,f,S,D);let R=this.tickSampleCountdown,N=1-R/r,z=1-(R-S)/r,W=(this.beat*t.partsPerBeat+this.part)*t.ticksPerPart+this.tick,H=W/t.ticksPerPart,U=(W+1)/t.ticksPerPart,G=H+(U-H)*N,u=H+(U-H)*z,F=E.vibratoSpeed;D.vibratoTime=D.nextVibratoTime,this.isModActive(t.modulators.dictionary["vibrato speed"].index,b,L)&&(F=this.getModValue(t.modulators.dictionary["vibrato speed"].index,b,L)),F==0?(D.vibratoTime=0,D.nextVibratoTime=0):D.nextVibratoTime+=F*.1*(u-G)}}if(this.enableMetronome||this.countInMetronome)if(this.part==0){if(!this.startedMetronome){let b=s.beatsPerBar>4&&s.beatsPerBar%2==0&&this.beat==s.beatsPerBar/2,P=this.beat==0?8:b?6:4,B=this.beat==0?1600:b?1200:800,L=this.beat==0?.06:b?.05:.04,E=this.samplesPerSecond/B,D=Math.PI*2/E;this.metronomeSamplesRemaining=Math.floor(E*P),this.metronomeFilter=2*Math.cos(D),this.metronomeAmplitude=L*Math.sin(D),this.metronomePrevAmplitude=0,this.startedMetronome=!0}if(this.metronomeSamplesRemaining>0){let b=Math.min(x,f+this.metronomeSamplesRemaining);this.metronomeSamplesRemaining-=b-f;for(let P=f;P<b;P++){e[P]+=this.metronomeAmplitude,i[P]+=this.metronomeAmplitude;let B=this.metronomeFilter*this.metronomeAmplitude-this.metronomePrevAmplitude;this.metronomePrevAmplitude=this.metronomeAmplitude,this.metronomeAmplitude=B}}}else this.startedMetronome=!1;for(let b=f;b<x;b++){{let W=this.songEqFiltersL,H=this.songEqFiltersR,U=this.songEqFilterCount|0,G=+this.initialSongEqFilterInput1L,u=+this.initialSongEqFilterInput2L,F=+this.initialSongEqFilterInput1R,C=+this.initialSongEqFilterInput2R,I=o.applyFilters,M=+this.songEqFilterVolume,q=+this.songEqFilterVolumeDelta,O=e[b],j=O;j=I(j,G,u,U,W),u=G,G=O,j*=M,e[b]=j;let te=i[b],ee=te;ee=I(ee,F,C,U,H),C=F,F=te,ee*=M,i[b]=ee,M+=q,this.sanitizeFilters(W),(!(G<100)||!(u<100))&&(G=0,u=0),Math.abs(G)<xt&&(G=0),Math.abs(u)<xt&&(u=0),this.initialSongEqFilterInput1L=G,this.initialSongEqFilterInput2L=u,this.sanitizeFilters(H),(!(F<100)||!(C<100))&&(F=0,C=0),Math.abs(F)<xt&&(F=0),Math.abs(C)<xt&&(C=0),this.initialSongEqFilterInput1R=F,this.initialSongEqFilterInput2R=C}let P=e[b]*s.masterGain*s.masterGain,B=i[b]*s.masterGain*s.masterGain,L=P<0?-P:P,E=B<0?-B:B,D=L>E?L:E;this.song.inVolumeCap=this.song.inVolumeCap>D?this.song.inVolumeCap:D;let R=+(D>s.compressionThreshold)+ +(D>s.limitThreshold),N=+(R==0)*(((D+1-s.compressionThreshold)*.8+.25)*s.compressionRatio+1.05*(1-s.compressionRatio))+ +(R==1)*1.05+ +(R==2)*(1.05*((D+1-s.limitThreshold)*s.limitRatio+(1-s.limitThreshold)));v+=(N-v)*(v<N?l:y);let z=d/(v>=1?v*1.05:v*.8+.25);e[b]=P*z,i[b]=B*z,this.song.outVolumeCap=this.song.outVolumeCap>D*z?this.song.outVolumeCap:D*z,this.song.outVolumeCapL=this.song.outVolumeCapL>L*z?this.song.outVolumeCapL:L*z,this.song.outVolumeCapR=this.song.outVolumeCapR>E*z?this.song.outVolumeCapR:E*z}if(f+=S,this.isAtStartOfTick=!1,this.tickSampleCountdown-=S,this.tickSampleCountdown<=0){this.isAtStartOfTick=!0;for(let E of this.channels)for(let D of E.instruments){for(let R=0;R<D.releasedTones.count();R++){let N=D.releasedTones.get(R);N.isOnLastTick?(this.freeReleasedTone(D,R),R--):N.ticksSinceReleased++}D.deactivateAfterThisTick&&D.deactivate(),D.tonesAddedInThisTick=!1}let P=this.getTicksIntoBar(),B=r/this.samplesPerSecond,L=this.getCurrentPart();for(let E=0;E<this.song.pitchChannelCount+this.song.noiseChannelCount;E++)for(let D=0;D<this.song.channels[E].instruments.length;D++){let R=this.song.channels[E].instruments[D],N=this.channels[E].instruments[D],z=N.envelopeComputer,W=[];for(let u=0;u<t.maxEnvelopeCount;u++)W[u]=0;for(let u=0;u<R.envelopeCount;u++){let F=R.envelopeSpeed,C=R.envelopes[u].perEnvelopeSpeed;this.isModActive(t.modulators.dictionary["individual envelope speed"].index,E,D)&&R.envelopes[u].tempEnvelopeSpeed!=null&&(C=R.envelopes[u].tempEnvelopeSpeed),this.isModActive(t.modulators.dictionary["envelope speed"].index,E,D)?(F=Math.max(0,Math.min(t.arpSpeedScale.length-1,this.getModValue(t.modulators.dictionary["envelope speed"].index,E,D,!1))),Number.isInteger(F)?N.envelopeTime[u]+=t.arpSpeedScale[F]*C:N.envelopeTime[u]+=((1-F%1)*t.arpSpeedScale[Math.floor(F)]+F%1*t.arpSpeedScale[Math.ceil(F)])*C):N.envelopeTime[u]+=t.arpSpeedScale[F]*C}if(N.activeTones.count()>0){let u=N.activeTones.get(0);z.computeEnvelopes(R,L,N.envelopeTime,P,B,u,W,N,this,E,D)}let U=z.envelopeStarts[49],G=R.arpeggioSpeed;this.isModActive(t.modulators.dictionary["arp speed"].index,E,D)?(G=A(0,t.arpSpeedScale.length,U*this.getModValue(t.modulators.dictionary["arp speed"].index,E,D,!1)),Number.isInteger(G)?N.arpTime+=t.arpSpeedScale[G]:N.arpTime+=(1-G%1)*t.arpSpeedScale[Math.floor(G)]+G%1*t.arpSpeedScale[Math.ceil(G)]):(G=A(0,t.arpSpeedScale.length,U*G),Number.isInteger(G)?N.arpTime+=t.arpSpeedScale[G]:N.arpTime+=(1-G%1)*t.arpSpeedScale[Math.floor(G)]+G%1*t.arpSpeedScale[Math.ceil(G)]),z.clearEnvelopes()}for(let E=0;E<this.song.pitchChannelCount+this.song.noiseChannelCount;E++)for(let D=0;D<this.song.channels[E].instruments.length;D++){let R=this.song.channels[E].instruments[D];for(let N=0;N<R.effects.length;N++){let z=R.effects[N];z.tmpEqFilterEnd!=null?z.tmpEqFilterStart=z.tmpEqFilterEnd:z.tmpEqFilterStart=z.eqFilter}R.tmpNoteFilterEnd!=null?R.tmpNoteFilterStart=R.tmpNoteFilterEnd:R.tmpNoteFilterStart=R.noteFilter}if(s.tmpEqFilterEnd!=null?s.tmpEqFilterStart=s.tmpEqFilterEnd:s.tmpEqFilterStart=s.eqFilter,this.tick++,this.tickSampleCountdown+=r,this.tick==t.ticksPerPart){this.tick=0,this.part++,this.liveInputDuration--,this.liveBassInputDuration--;for(let E=0;E<this.heldMods.length;E++)this.heldMods[E].holdFor--,this.heldMods[E].holdFor<=0&&this.heldMods.splice(E,1);this.part==t.partsPerBeat&&(this.part=0,a&&(this.beat++,this.beat==s.beatsPerBar&&(this.beat=0,this.countInMetronome?this.countInMetronome=!1:(this.prevBar=this.bar,this.bar=this.getNextBar(),this.bar<=this.prevBar&&this.loopRepeatCount>0&&this.loopRepeatCount--,this.bar>=s.barCount&&(this.bar=0,this.loopRepeatCount!=-1&&(c=!0,this.resetEffects(),this.pause()))))))}}for(let b=0;b<t.modulators.length;b++)this.nextModValues!=null&&this.nextModValues[b]!=null&&(this.modValues[b]=this.nextModValues[b]);this.isModActive(t.modulators.dictionary.tempo.index)&&(r=this.getSamplesPerTick(),this.tickSampleCountdown=Math.min(this.tickSampleCountdown,r));for(let b=0;b<this.song.pitchChannelCount+this.song.noiseChannelCount;b++)for(let P=0;P<this.channels[b].instruments.length;P++){let B=this.channels[b].instruments[P],L=this.song.channels[b].instruments[P];B.nextVibratoTime=B.nextVibratoTime%(t.vibratoTypes[L.vibratoType].period/(t.ticksPerPart*r/this.samplesPerSecond)),B.arpTime=B.arpTime%(2520*t.ticksPerArpeggio);for(let E=0;E<L.envelopeCount;E++)B.envelopeTime[E]=B.envelopeTime[E]%(t.partsPerBeat*t.ticksPerPart*this.song.beatsPerBar)}let w=this.song.getMaxInstrumentsPerChannel();for(let b=0;b<t.modulators.length;b++)for(let P=0;P<this.song.pitchChannelCount+this.song.noiseChannelCount;P++)for(let B=0;B<w;B++)this.nextModInsValues!=null&&this.nextModInsValues[P]!=null&&this.nextModInsValues[P][B]!=null&&this.nextModInsValues[P][B][b]!=null&&(this.modInsValues[P][B][b]=this.nextModInsValues[P][B][b])}(!Number.isFinite(v)||Math.abs(v)<xt)&&(v=0),this.limit=v,a&&!this.countInMetronome&&(this.playheadInternal=(((this.tick+1-this.tickSampleCountdown/r)/2+this.part)/t.partsPerBeat+this.beat)/s.beatsPerBar+this.bar)}freeTone(e){this.tonePool.pushBack(e)}newTone(){if(this.tonePool.count()>0){let e=this.tonePool.popBack();return e.freshlyAllocated=!0,e}return new xn}releaseTone(e,i){e.releasedTones.pushFront(i),i.atNoteStart=!1,i.passedEndOfNote=!0}freeReleasedTone(e,i){this.freeTone(e.releasedTones.get(i)),e.releasedTones.remove(i)}freeAllTones(){for(let e of this.channels)for(let i of e.instruments){for(;i.activeTones.count()>0;)this.freeTone(i.activeTones.popBack());for(;i.activeModTones.count()>0;)this.freeTone(i.activeModTones.popBack());for(;i.releasedTones.count()>0;)this.freeTone(i.releasedTones.popBack());for(;i.liveInputTones.count()>0;)this.freeTone(i.liveInputTones.popBack())}}determineLiveInputTones(e,i,n){let a=e.channels[i],s=this.channels[i],r=this.liveInputPitches,c=this.liveBassInputPitches;(this.liveInputPitches.length>0||this.liveBassInputPitches.length>0)&&this.computeLatestModValues();for(let d=0;d<a.instruments.length;d++){let y=s.instruments[d],l=y.liveInputTones,v=0;if(this.liveInputDuration>0&&i==this.liveInputChannel&&r.length>0&&this.liveInputInstruments.indexOf(d)!=-1){let h=a.instruments[d];if(h.getChord().singleTone){let g;l.count()<=v?(g=this.newTone(),l.pushBack(g)):!h.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(y,l.get(v)),g=this.newTone(),l.set(v,g)):g=l.get(v),v++;for(let f=0;f<r.length;f++)g.pitches[f]=r[f];g.pitchCount=r.length,g.chordSize=1,g.instrumentIndex=d,g.note=g.prevNote=g.nextNote=null,g.atNoteStart=this.liveInputStarted,g.forceContinueAtStart=!1,g.forceContinueAtEnd=!1,this.computeTone(e,i,n,g,!1,!1)}else{this.moveTonesIntoOrderedTempMatchedList(l,r);for(let g=0;g<r.length;g++){let f;this.tempMatchedPitchTones[v]!=null?(f=this.tempMatchedPitchTones[v],this.tempMatchedPitchTones[v]=null,(f.pitchCount!=1||f.pitches[0]!=r[g])&&(this.releaseTone(y,f),f=this.newTone()),l.pushBack(f)):(f=this.newTone(),l.pushBack(f)),v++,f.pitches[0]=r[g],f.pitchCount=1,f.chordSize=r.length,f.instrumentIndex=d,f.note=f.prevNote=f.nextNote=null,f.atNoteStart=this.liveInputStarted,f.forceContinueAtStart=!1,f.forceContinueAtEnd=!1,this.computeTone(e,i,n,f,!1,!1)}}}if(this.liveBassInputDuration>0&&i==this.liveBassInputChannel&&c.length>0&&this.liveBassInputInstruments.indexOf(d)!=-1){let h=a.instruments[d];if(h.getChord().singleTone){let g;l.count()<=v?(g=this.newTone(),l.pushBack(g)):!h.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(y,l.get(v)),g=this.newTone(),l.set(v,g)):g=l.get(v),v++;for(let f=0;f<c.length;f++)g.pitches[f]=c[f];g.pitchCount=c.length,g.chordSize=1,g.instrumentIndex=d,g.note=g.prevNote=g.nextNote=null,g.atNoteStart=this.liveBassInputStarted,g.forceContinueAtStart=!1,g.forceContinueAtEnd=!1,this.computeTone(e,i,n,g,!1,!1)}else{this.moveTonesIntoOrderedTempMatchedList(l,c);for(let g=0;g<c.length;g++){let f;this.tempMatchedPitchTones[v]!=null?(f=this.tempMatchedPitchTones[v],this.tempMatchedPitchTones[v]=null,(f.pitchCount!=1||f.pitches[0]!=c[g])&&(this.releaseTone(y,f),f=this.newTone()),l.pushBack(f)):(f=this.newTone(),l.pushBack(f)),v++,f.pitches[0]=c[g],f.pitchCount=1,f.chordSize=c.length,f.instrumentIndex=d,f.note=f.prevNote=f.nextNote=null,f.atNoteStart=this.liveBassInputStarted,f.forceContinueAtStart=!1,f.forceContinueAtEnd=!1,this.computeTone(e,i,n,f,!1,!1)}}}for(;l.count()>v;)this.releaseTone(y,l.popBack());this.clearTempMatchedPitchTones(v,y)}this.liveInputStarted=!1,this.liveBassInputStarted=!1}adjacentPatternHasCompatibleInstrumentTransition(e,i,n,a,s,r,c,d,y,l){if(e.patternInstruments&&a.instruments.indexOf(s)==-1){if(n.instruments.length>1||a.instruments.length>1)return null;let v=i.instruments[a.instruments[0]];if(l)return v.getChord();let h=v.getTransition();return r.includeAdjacentPatterns&&h.includeAdjacentPatterns&&h.slides==r.slides?v.getChord():null}else return l||r.includeAdjacentPatterns?c:null}static adjacentNotesHaveMatchingPitches(e,i){if(e.pitches.length!=i.pitches.length)return!1;let n=e.pins[e.pins.length-1].interval;for(let a of e.pitches)if(i.pitches.indexOf(a+n)==-1)return!1;return!0}moveTonesIntoOrderedTempMatchedList(e,i){for(let n=0;n<e.count();n++){let a=e.get(n),s=a.pitches[0]+a.lastInterval;for(let r=0;r<i.length;r++)if(i[r]==s){this.tempMatchedPitchTones[r]=a,e.remove(n),n--;break}}for(;e.count()>0;){let n=e.popFront();for(let a=0;a<this.tempMatchedPitchTones.length;a++)if(this.tempMatchedPitchTones[a]==null){this.tempMatchedPitchTones[a]=n;break}}}determineCurrentActiveTones(e,i,n,a){let s=e.channels[i],r=this.channels[i],c=e.getPattern(i,this.bar),d=this.getCurrentPart(),y=this.tick+t.ticksPerPart*d;if(a&&e.getChannelIsMod(i)){let l=[],v=[],h=[],g=t.modCount;for(;g--;)l.push(null),v.push(null),h.push(null);if(c!=null&&!s.muted)for(let x=0;x<c.notes.length;x++)c.notes[x].end<=d?(v[c.notes[x].pitches[0]]==null||c.notes[x].end>v[c.notes[x].pitches[0]].start)&&(v[c.notes[x].pitches[0]]=c.notes[x]):c.notes[x].start<=d&&c.notes[x].end>d?l[c.notes[x].pitches[0]]=c.notes[x]:c.notes[x].start>d&&(h[c.notes[x].pitches[0]]==null||c.notes[x].start<h[c.notes[x].pitches[0]].start)&&(h[c.notes[x].pitches[0]]=c.notes[x]);let f=0,m=e.patternInstruments&&c!=null?c.instruments[0]:0,p=r.instruments[m],S=p.activeModTones;for(let x=0;x<t.modCount;x++){if(l[x]!=null&&(v[x]!=null&&v[x].end!=l[x].start&&(v[x]=null),h[x]!=null&&h[x].start!=l[x].end&&(h[x]=null)),r.singleSeamlessInstrument!=null&&r.singleSeamlessInstrument!=m&&r.singleSeamlessInstrument<r.instruments.length){let w=r.instruments[r.singleSeamlessInstrument],b=r.instruments[m];for(;w.activeModTones.count()>0;)b.activeModTones.pushFront(w.activeModTones.popBack())}if(r.singleSeamlessInstrument=m,l[x]!=null){let w=v[x],b=h[x],P=!1,B=!1,L=t.ticksPerPart*l[x].start==y&&this.isAtStartOfTick,E;if(S.count()<=f)E=this.newTone(),S.pushBack(E);else if(L&&w==null){let D=S.get(f);D.isOnLastTick?this.freeTone(D):this.releaseTone(p,D),E=this.newTone(),S.set(f,E)}else E=S.get(f);f++;for(let D=0;D<l[x].pitches.length;D++)E.pitches[D]=l[x].pitches[D];E.pitchCount=l[x].pitches.length,E.chordSize=1,E.instrumentIndex=m,E.note=l[x],E.noteStartPart=l[x].start,E.noteEndPart=l[x].end,E.prevNote=w,E.nextNote=b,E.prevNotePitchIndex=0,E.nextNotePitchIndex=0,E.atNoteStart=L,E.passedEndOfNote=!1,E.forceContinueAtStart=P,E.forceContinueAtEnd=B}}for(;S.count()>f;){let x=S.popBack(),w=e.channels[i];if(x.instrumentIndex<w.instruments.length&&!x.isOnLastTick){let b=this.channels[i].instruments[x.instrumentIndex];this.releaseTone(b,x)}else this.freeTone(x)}}else if(!e.getChannelIsMod(i)){let l=null,v=null,h=null;if(a&&c!=null&&!s.muted&&(!this.isRecording||this.liveInputChannel!=i)){for(let g=0;g<c.notes.length;g++)if(c.notes[g].end<=d)v=c.notes[g];else if(c.notes[g].start<=d&&c.notes[g].end>d)l=c.notes[g];else if(c.notes[g].start>d){h=c.notes[g];break}l!=null&&(v!=null&&v.end!=l.start&&(v=null),h!=null&&h.start!=l.end&&(h=null))}if(c!=null&&(!e.layeredInstruments||s.instruments.length==1||e.patternInstruments&&c.instruments.length==1)){let g=e.patternInstruments?c.instruments[0]:0;if(r.singleSeamlessInstrument!=null&&r.singleSeamlessInstrument!=g&&r.singleSeamlessInstrument<r.instruments.length){let f=r.instruments[r.singleSeamlessInstrument],m=r.instruments[g];for(;f.activeTones.count()>0;)m.activeTones.pushFront(f.activeTones.popBack())}r.singleSeamlessInstrument=g}else r.singleSeamlessInstrument=null;for(let g=0;g<s.instruments.length;g++){let f=r.instruments[g],m=f.activeTones,p=0;if(l!=null&&(!e.patternInstruments||c.instruments.indexOf(g)!=-1)){let S=s.instruments[g],x=v,w=h,b=t.partsPerBeat*e.beatsPerBar,P=S.getTransition(),B=S.getChord(),L=!1,E=!1,D=0,R=0;if(l.start==0){let N=this.prevBar==null?null:e.getPattern(i,this.prevBar);if(N!=null){let z=N.notes.length<=0?null:N.notes[N.notes.length-1];if(z!=null&&z.end==b){let W=l.continuesLastPattern&&o.adjacentNotesHaveMatchingPitches(z,l),H=this.adjacentPatternHasCompatibleInstrumentTransition(e,s,c,N,g,P,B,l,z,W);H!=null&&(x=z,D=H.singleTone?1:x.pitches.length,L=W)}}}else x!=null&&(D=B.singleTone?1:x.pitches.length);if(l.end==b){let N=this.nextBar==null?null:e.getPattern(i,this.nextBar);if(N!=null){let z=N.notes.length<=0?null:N.notes[0];if(z!=null&&z.start==0){let W=z.continuesLastPattern&&o.adjacentNotesHaveMatchingPitches(l,z),H=this.adjacentPatternHasCompatibleInstrumentTransition(e,s,c,N,g,P,B,l,z,W);H!=null&&(w=z,R=H.singleTone?1:w.pitches.length,E=W)}}}else w!=null&&(R=B.singleTone?1:w.pitches.length);if(B.singleTone){let N=t.ticksPerPart*l.start==y,z;if(m.count()<=p)z=this.newTone(),m.pushBack(z);else if(N&&(!(P.isSeamless||S.clicklessTransition)&&!L||x==null)){let W=m.get(p);W.isOnLastTick?this.freeTone(W):this.releaseTone(f,W),z=this.newTone(),m.set(p,z)}else z=m.get(p);p++;for(let W=0;W<l.pitches.length;W++)z.pitches[W]=l.pitches[W];z.pitchCount=l.pitches.length,z.chordSize=1,z.instrumentIndex=g,z.note=l,z.noteStartPart=l.start,z.noteEndPart=l.end,z.prevNote=x,z.nextNote=w,z.prevNotePitchIndex=0,z.nextNotePitchIndex=0,z.atNoteStart=N,z.passedEndOfNote=!1,z.forceContinueAtStart=L,z.forceContinueAtEnd=E,this.computeTone(e,i,n,z,!1,!1)}else{let N=S.getTransition();(N.isSeamless&&!N.slides&&B.strumParts==0||L)&&t.ticksPerPart*l.start==y&&x!=null&&this.moveTonesIntoOrderedTempMatchedList(m,l.pitches);let z=0;for(let W=0;W<l.pitches.length;W++){let H=D>W?x:null,U=l,G=R>W?w:null,u=U.start+z,F=!1;if(u>d)if(m.count()>W&&(N.isSeamless||L)&&H!=null)G=U,U=H,H=null,u=U.start+z,F=!0;else break;let C=U.end;(N.isSeamless||L)&&G!=null&&(C=Math.min(t.partsPerBeat*this.song.beatsPerBar,C+z)),(!N.continues&&!L||H==null)&&(z+=B.strumParts);let I=t.ticksPerPart*u==y,M;if(this.tempMatchedPitchTones[p]!=null)M=this.tempMatchedPitchTones[p],this.tempMatchedPitchTones[p]=null,m.pushBack(M);else if(m.count()<=p)M=this.newTone(),m.pushBack(M);else if(I&&(!N.isSeamless&&!L||H==null)){let q=m.get(p);q.isOnLastTick?this.freeTone(q):this.releaseTone(f,q),M=this.newTone(),m.set(p,M)}else M=m.get(p);p++,M.pitches[0]=U.pitches[W],M.pitchCount=1,M.chordSize=U.pitches.length,M.instrumentIndex=g,M.note=U,M.noteStartPart=u,M.noteEndPart=C,M.prevNote=H,M.nextNote=G,M.prevNotePitchIndex=W,M.nextNotePitchIndex=W,M.atNoteStart=I,M.passedEndOfNote=F,M.forceContinueAtStart=L&&H!=null,M.forceContinueAtEnd=E&&G!=null,this.computeTone(e,i,n,M,!1,!1)}}(P.continues&&m.count()<=0||l.pitches.length<=0)&&f.envelopeComputer.reset()}for(;m.count()>p;){let S=m.popBack(),x=e.channels[i];if(S.instrumentIndex<x.instruments.length&&!S.isOnLastTick){let w=r.instruments[S.instrumentIndex];this.releaseTone(w,S)}else this.freeTone(S)}this.clearTempMatchedPitchTones(p,f)}}}clearTempMatchedPitchTones(e,i){for(let n=e;n<this.tempMatchedPitchTones.length;n++){let a=this.tempMatchedPitchTones[n];a!=null&&(a.isOnLastTick?this.freeTone(a):this.releaseTone(i,a),this.tempMatchedPitchTones[n]=null)}}playTone(e,i,n,a){let r=this.channels[e].instruments[a.instrumentIndex];r.synthesizer!=null&&r.synthesizer(this,i,n,a,r),a.envelopeComputer.clearEnvelopes(),r.envelopeComputer.clearEnvelopes()}playModTone(e,i,n,a,s,r,c,d){let l=e.channels[i].instruments[r.instrumentIndex];if(r.note!=null){let v=this.getTicksIntoBar(),h=v/t.ticksPerPart,g=(v+1)/t.ticksPerPart,f=this.tickSampleCountdown,m=1-f/n,p=1-(f-s)/n,S=h+(g-h)*m,x=h+(g-h)*p,w=t.ticksPerPart*S,b=t.ticksPerPart*x,P=r.note.getEndPinIndex(this.getCurrentPart()),B=r.note.pins[P-1],L=r.note.pins[P],E=(r.note.start+B.time)*t.ticksPerPart,D=(r.note.start+L.time)*t.ticksPerPart,R=(w-E)/(D-E),N=(b-E)/(D-E);r.expression=B.size+(L.size-B.size)*R,r.expressionDelta=B.size+(L.size-B.size)*N-r.expression,o.modSynth(this,a,s,r,l)}}static computeChordExpression(e){return 1/((e-1)*.25+1)}computeTone(e,i,n,a,s,r){let c=Math.ceil(n),d=e.channels[i],y=this.channels[i],l=d.instruments[a.instrumentIndex],v=y.instruments[a.instrumentIndex];v.awake=!0,v.tonesAddedInThisTick=!0,v.computed||v.compute(this,l,n,c,a,i,a.instrumentIndex);let h=l.getTransition(),g=l.getChord(),f=g.singleTone?1:o.computeChordExpression(a.chordSize),m=e.getChannelIsNoise(i),p=m?t.noiseInterval:1,S=t.ticksPerPart*n/this.samplesPerSecond,x=1/this.samplesPerSecond,w=1/t.partsPerBeat,b=this.getTicksIntoBar(),P=b/t.ticksPerPart,B=(b+1)/t.ticksPerPart,L=this.getCurrentPart(),E=1;a.specialIntervalExpressionMult=1;let D=r,R=0,N=0,z=1,W=1,H=f,U=f,G=16,u=t.keys[e.key].basePitch+t.pitchesPerOctave*e.octave,F=1,C=48;if(l.type==3)F=t.spectrumBaseExpression,m&&(u=t.spectrumBasePitch,F*=2),G=t.spectrumBasePitch,C=28;else if(l.type==4)u=t.spectrumBasePitch,F=t.drumsetBaseExpression,G=u;else if(l.type==2)u=m?t.chipNoises[l.chipNoise].basePitch:u+t.chipNoises[l.chipNoise].basePitch-12,F=t.noiseBaseExpression,G=u,C=t.chipNoises[l.chipNoise].isSoft?24:60;else if(l.type==1||l.type==11)F=t.fmBaseExpression;else if(l.type==0)F=t.chipBaseExpression,t.chipWaves[l.chipWave].isCustomSampled?t.chipWaves[l.chipWave].isPercussion?u=-84.37+Math.log2(t.chipWaves[l.chipWave].samples.length/t.chipWaves[l.chipWave].sampleRate)*-12-(-60+t.chipWaves[l.chipWave].rootKey):u+=-96.37+Math.log2(t.chipWaves[l.chipWave].samples.length/t.chipWaves[l.chipWave].sampleRate)*-12-(-60+t.chipWaves[l.chipWave].rootKey):t.chipWaves[l.chipWave].isSampled&&!t.chipWaves[l.chipWave].isPercussion?u=u-63+t.chipWaves[l.chipWave].extraSampleDetune:t.chipWaves[l.chipWave].isSampled&&t.chipWaves[l.chipWave].isPercussion&&(u=-51+t.chipWaves[l.chipWave].extraSampleDetune);else if(l.type==9)F=t.chipBaseExpression;else if(l.type==5)F=t.harmonicsBaseExpression;else if(l.type==6)F=t.pwmBaseExpression;else if(l.type==8)F=t.supersawBaseExpression;else if(l.type==7)F=t.pickedStringBaseExpression;else if(l.type==10)F=1,G=0,C=1,u=0;else throw new Error("Unknown instrument type in computeTone.");if((a.atNoteStart&&!h.isSeamless&&!a.forceContinueAtStart||a.freshlyAllocated)&&(a.reset(),a.note!=null&&(a.chipWaveStartOffset=a.note.chipWaveStartOffset),v.envelopeComputer.reset(),l.type==0&&l.isUsingAdvancedLoopControls)){let V=t.rawRawChipWaves[l.chipWave].samples.length-1,K=(a.chipWaveStartOffset+l.chipWaveStartOffset)/V,Q=.999999999999999;for(let Z=0;Z<t.maxPitchOrOperatorCount;Z++)a.phases[Z]=l.chipWavePlayBackwards?Math.max(0,Math.min(Q,K)):Math.max(0,K),a.directions[Z]=l.chipWavePlayBackwards?-1:1,a.chipWaveCompletions[Z]=0,a.chipWavePrevWavesL[Z]=0,a.chipWavePrevWavesR[Z]=0,a.chipWaveCompletionsLastWaveL[Z]=0,a.chipWaveCompletionsLastWaveR[Z]=0}a.freshlyAllocated=!1;for(let V=0;V<t.maxPitchOrOperatorCount;V++)a.phaseDeltas[V]=0,a.phaseDeltaScales[V]=0,a.operatorExpressions[V]=0,a.operatorExpressionDeltas[V]=0;a.expression=0,a.expressionDelta=0;for(let V=0;V<(l.type==11?6:t.operatorCount);V++)a.operatorWaves[V]=o.getOperatorWave(l.operators[V].waveform,l.operators[V].pulseWidth);if(s){let V=a.ticksSinceReleased,K=a.ticksSinceReleased+1;R=N=a.lastInterval;let Q=Math.abs(l.getFadeOutTicks());z=o.noteSizeToVolumeMult((1-V/Q)*t.noteSizeMax),W=o.noteSizeToVolumeMult((1-K/Q)*t.noteSizeMax),r&&(W=0),a.ticksSinceReleased+1>=Q&&(D=!0)}else if(a.note==null)z=W=1,a.lastInterval=0,a.ticksSinceReleased=0,a.liveInputSamplesHeld+=c;else{let V=a.note,K=a.nextNote,Q=a.noteStartPart,Z=a.noteEndPart,ae=V.getEndPinIndex(L),me=V.pins[ae-1],oe=V.pins[ae],ye=Q*t.ticksPerPart,ie=Z*t.ticksPerPart,de=(V.start+me.time)*t.ticksPerPart,le=(V.start+oe.time)*t.ticksPerPart;a.ticksSinceReleased=0;let re=L*t.ticksPerPart+this.tick,ce=re+1,X=re-ye,$=ce-ye,ue=Math.min(1,(re-de)/(le-de)),ve=Math.min(1,(ce-de)/(le-de));if(z=1,W=1,R=me.interval+(oe.interval-me.interval)*ue,N=me.interval+(oe.interval-me.interval)*ve,a.lastInterval=N,!h.isSeamless&&!a.forceContinueAtEnd||K==null){let Fe=-l.getFadeOutTicks();if(Fe>0){let Y=ie-ye;z*=Math.min(1,(Y-X)/Fe),W*=Math.min(1,(Y-$)/Fe),ce>=ye+Y&&(D=!0)}}}a.isOnLastTick=D;let I=l.noteFilter,M,q;if(l.noteFilterType){let V=l.noteFilter;l.noteSubFilters[1]==null&&(l.noteSubFilters[1]=new Ee);let K=l.noteSubFilters[1],Q=l.noteFilterSimpleCut,Z=l.noteFilterSimplePeak,ae=l.noteFilterSimpleCut,me=l.noteFilterSimplePeak,oe=!1;this.isModActive(t.modulators.dictionary["note filt cut"].index,i,a.instrumentIndex)&&(Q=this.getModValue(t.modulators.dictionary["note filt cut"].index,i,a.instrumentIndex,!1),ae=this.getModValue(t.modulators.dictionary["note filt cut"].index,i,a.instrumentIndex,!0),oe=!0),this.isModActive(t.modulators.dictionary["note filt peak"].index,i,a.instrumentIndex)&&(Z=this.getModValue(t.modulators.dictionary["note filt peak"].index,i,a.instrumentIndex,!1),me=this.getModValue(t.modulators.dictionary["note filt peak"].index,i,a.instrumentIndex,!0),oe=!0),V.convertLegacySettingsForSynth(Q,Z,!oe),K.convertLegacySettingsForSynth(ae,me,!oe),M=V.controlPoints[0],q=K.controlPoints[0],l.noteFilter=V,l.tmpNoteFilterStart=V}let O=a.envelopeComputer,j=[];for(let V=0;V<t.maxEnvelopeCount;V++)j[V]=0;for(let V=0;V<l.envelopeCount;V++){let K=l.envelopes[V].perEnvelopeSpeed;this.isModActive(t.modulators.dictionary["individual envelope speed"].index,i,a.instrumentIndex)&&l.envelopes[V].tempEnvelopeSpeed!=null&&(K=l.envelopes[V].tempEnvelopeSpeed);let Q=t.arpSpeedScale[l.envelopeSpeed]*K;this.isModActive(t.modulators.dictionary["envelope speed"].index,i,a.instrumentIndex)&&(Q=Math.max(0,Math.min(t.arpSpeedScale.length-1,this.getModValue(t.modulators.dictionary["envelope speed"].index,i,a.instrumentIndex,!1))),Number.isInteger(Q)?Q=t.arpSpeedScale[Q]*K:Q=(1-Q%1)*t.arpSpeedScale[Math.floor(Q)]+Q%1*t.arpSpeedScale[Math.ceil(Q)]*K),j[V]=Q}O.computeEnvelopes(l,L,v.envelopeTime,t.ticksPerPart*P,n/this.samplesPerSecond,a,j,v,this,i,a.instrumentIndex);let te=a.envelopeComputer.envelopeStarts,ee=a.envelopeComputer.envelopeEnds;if(l.noteFilter=I,h.continues&&(a.prevNote==null||a.note==null)&&v.envelopeComputer.reset(),a.note!=null&&h.slides){let V=a.prevNote,K=a.nextNote;if(V!=null){let Q=V.pitches[a.prevNotePitchIndex]+V.pins[V.pins.length-1].interval-a.pitches[0];if(O.prevSlideStart&&(R+=Q*O.prevSlideRatioStart),O.prevSlideEnd&&(N+=Q*O.prevSlideRatioEnd),!g.singleTone){let Z=V.pitches.length-a.chordSize;O.prevSlideStart&&(H=o.computeChordExpression(a.chordSize+Z*O.prevSlideRatioStart)),O.prevSlideEnd&&(U=o.computeChordExpression(a.chordSize+Z*O.prevSlideRatioEnd))}}if(K!=null){let Q=K.pitches[a.nextNotePitchIndex]-(a.pitches[0]+a.note.pins[a.note.pins.length-1].interval);if(O.nextSlideStart&&(R+=Q*O.nextSlideRatioStart),O.nextSlideEnd&&(N+=Q*O.nextSlideRatioEnd),!g.singleTone){let Z=K.pitches.length-a.chordSize;O.nextSlideStart&&(H=o.computeChordExpression(a.chordSize+Z*O.nextSlideRatioStart)),O.nextSlideEnd&&(U=o.computeChordExpression(a.chordSize+Z*O.nextSlideRatioEnd))}}}if(Dt(l.mdeffects)){let V=t.justIntonationSemitones[l.pitchShift]/p,K=1,Q=1;this.isModActive(t.modulators.dictionary["pitch shift"].index,i,a.instrumentIndex)&&(V=t.justIntonationSemitones[t.justIntonationSemitones.length-1],K=this.getModValue(t.modulators.dictionary["pitch shift"].index,i,a.instrumentIndex,!1)/t.pitchShiftCenter,Q=this.getModValue(t.modulators.dictionary["pitch shift"].index,i,a.instrumentIndex,!0)/t.pitchShiftCenter);let Z=te[19],ae=ee[19];R+=V*Z*K,N+=V*ae*Q}if(Tt(l.mdeffects)||this.isModActive(t.modulators.dictionary["song detune"].index,i,a.instrumentIndex)){let V=te[20],K=ee[20],Q=l.detune,Z=l.detune;this.isModActive(t.modulators.dictionary.detune.index,i,a.instrumentIndex)&&(Q=this.getModValue(t.modulators.dictionary.detune.index,i,a.instrumentIndex,!1)+t.detuneCenter,Z=this.getModValue(t.modulators.dictionary.detune.index,i,a.instrumentIndex,!0)+t.detuneCenter),this.isModActive(t.modulators.dictionary["song detune"].index,i,a.instrumentIndex)&&(Q+=4*this.getModValue(t.modulators.dictionary["song detune"].index,i,a.instrumentIndex,!1),Z+=4*this.getModValue(t.modulators.dictionary["song detune"].index,i,a.instrumentIndex,!0)),R+=Zt(Q)*V*t.pitchesPerOctave/(12*100),N+=Zt(Z)*K*t.pitchesPerOctave/(12*100)}if(At(l.mdeffects)){let V,K,Q;l.vibrato==t.vibratos.length?(V=l.vibratoDelay*2,l.vibratoDelay==t.modulators.dictionary["vibrato delay"].maxRawVol&&(V=Number.POSITIVE_INFINITY),K=l.vibratoDepth,Q=K):(V=t.vibratos[l.vibrato].delayTicks,K=t.vibratos[l.vibrato].amplitude,Q=K),this.isModActive(t.modulators.dictionary["vibrato delay"].index,i,a.instrumentIndex)&&(V=this.getModValue(t.modulators.dictionary["vibrato delay"].index,i,a.instrumentIndex,!1)*2,V==t.modulators.dictionary["vibrato delay"].maxRawVol*2&&(V=Number.POSITIVE_INFINITY)),this.isModActive(t.modulators.dictionary["vibrato depth"].index,i,a.instrumentIndex)&&(K=this.getModValue(t.modulators.dictionary["vibrato depth"].index,i,a.instrumentIndex,!1)/25,Q=this.getModValue(t.modulators.dictionary["vibrato depth"].index,i,a.instrumentIndex,!0)/25);let Z;if(a.prevVibrato!=null)Z=a.prevVibrato;else{let oe=o.getLFOAmplitude(l,S*v.vibratoTime),ye=te[21];if(Z=K*oe*ye,V>0){let ie=V-O.noteTicksStart;Z*=Math.max(0,Math.min(1,1-ie/2))}}let ae=o.getLFOAmplitude(l,S*v.nextVibratoTime),me=ee[21];if(l.type!=10){let oe=Q*ae*me;if(V>0){let ye=V-O.noteTicksEnd;oe*=Math.max(0,Math.min(1,1-ye/2))}a.prevVibrato=oe,R+=Z,N+=oe}}if(!h.isSeamless&&!a.forceContinueAtStart||a.prevNote==null){let V=l.getFadeInSeconds();V>0&&(z*=Math.min(1,O.noteSecondsStartUnscaled/V),W*=Math.min(1,O.noteSecondsEndUnscaled/V))}l.type==4&&a.drumsetPitch==null&&(a.drumsetPitch=a.pitches[0],a.note!=null&&(a.drumsetPitch+=a.note.pickMainInterval()),a.drumsetPitch=Math.max(0,Math.min(t.drumCount-1,a.drumsetPitch)));let ge=O.lowpassCutoffDecayVolumeCompensation,Ie=te[2],_=ee[2];if(l.noteFilterType){let V=te[22],K=ee[22],Q=te[30],Z=ee[30];M.toCoefficients(o.tempFilterStartCoefficients,this.samplesPerSecond,Ie*V,Q),q.toCoefficients(o.tempFilterEndCoefficients,this.samplesPerSecond,_*K,Z),a.noteFiltersL.length<1&&(a.noteFiltersL[0]=new Re),a.noteFiltersR.length<1&&(a.noteFiltersR[0]=new Re),a.noteFiltersL[0].loadCoefficientsWithGradient(o.tempFilterStartCoefficients,o.tempFilterEndCoefficients,1/c,M.type==0),a.noteFiltersR[0].loadCoefficientsWithGradient(o.tempFilterStartCoefficients,o.tempFilterEndCoefficients,1/c,M.type==0),ge*=M.getVolumeCompensationMult(),a.noteFilterCount=1}else{let V=l.tmpNoteFilterStart!=null?l.tmpNoteFilterStart:l.noteFilter;for(let K=0;K<V.controlPointCount;K++){let Q=te[22+K],Z=ee[22+K],ae=te[30+K],me=ee[30+K],oe=V.controlPoints[K],ye=l.tmpNoteFilterEnd!=null&&l.tmpNoteFilterEnd.controlPoints[K]!=null?l.tmpNoteFilterEnd.controlPoints[K]:V.controlPoints[K];oe.type!=ye.type&&(oe=ye),oe.toCoefficients(o.tempFilterStartCoefficients,this.samplesPerSecond,Ie*Q,ae),ye.toCoefficients(o.tempFilterEndCoefficients,this.samplesPerSecond,_*Z,me),a.noteFiltersL.length<=K&&(a.noteFiltersL[K]=new Re),a.noteFiltersR.length<=K&&(a.noteFiltersR[K]=new Re),a.noteFiltersL[K].loadCoefficientsWithGradient(o.tempFilterStartCoefficients,o.tempFilterEndCoefficients,1/c,oe.type==0),a.noteFiltersR[K].loadCoefficientsWithGradient(o.tempFilterStartCoefficients,o.tempFilterEndCoefficients,1/c,oe.type==0),ge*=oe.getVolumeCompensationMult()}a.noteFilterCount=V.controlPointCount}if(l.type==4){let V=a.envelopeComputer,K=l.getDrumsetEnvelope(a.drumsetPitch);ge*=vt.getLowpassCutoffDecayVolumeCompensation(K),V.computeDrumsetEnvelopes(l,K,w,P,B);let Q=V.drumsetFilterEnvelopeStart,Z=V.drumsetFilterEnvelopeEnd,ae=this.tempDrumSetControlPoint;ae.type=0,ae.gain=Pe.getRoundedSettingValueFromLinearGain(.5),ae.freq=Pe.getRoundedSettingValueFromHz(8e3),ae.toCoefficients(o.tempFilterStartCoefficients,this.samplesPerSecond,Q*(1+Q),1),ae.toCoefficients(o.tempFilterEndCoefficients,this.samplesPerSecond,Z*(1+Z),1),a.noteFiltersL.length==a.noteFilterCount&&(a.noteFiltersL[a.noteFilterCount]=new Re),a.noteFiltersR.length==a.noteFilterCount&&(a.noteFiltersR[a.noteFilterCount]=new Re),a.noteFiltersL[a.noteFilterCount].loadCoefficientsWithGradient(o.tempFilterStartCoefficients,o.tempFilterEndCoefficients,1/c,!0),a.noteFiltersR[a.noteFilterCount].loadCoefficientsWithGradient(o.tempFilterStartCoefficients,o.tempFilterEndCoefficients,1/c,!0),a.noteFilterCount++}if(ge=Math.min(3,ge),l.type==1||l.type==11){let V=1,K=0,Q=0,Z=g.arpeggiates,ae=g.name=="monophonic";if(a.pitchCount>1&&Z){let $=Math.floor(v.arpTime/t.ticksPerArpeggio);Q=a.pitches[Ht(a.pitchCount,l.fastTwoNoteArp,$)]-a.pitches[0]}let me=l.type==11?l.customAlgorithm.carrierCount:t.algorithms[l.algorithm].carrierCount;for(let $=0;$<(l.type==11?6:t.operatorCount);$++){let ue=l.type==11?l.customAlgorithm.associatedCarrier[$]-1:t.algorithms[l.algorithm].associatedCarrier[$]-1,ve=a.pitches[Z?0:ae?l.monoChordTone:$<a.pitchCount?$:ue<a.pitchCount?ue:0],Fe=t.operatorFrequencies[l.operators[$].frequency].mult,Y=t.operatorCarrierInterval[ue]+Q,he=u+(ve+R)*p+Y,Se=u+(ve+N)*p+Y,Me=Ne.frequencyFromPitch(he),Ae=Ne.frequencyFromPitch(Se),De=t.operatorFrequencies[l.operators[$].frequency].hzOffset,ke=Fe*Me+De,Le=Fe*Ae+De,Ce=te[6+$],qe=ee[6+$],Be,We;Ce!=1||qe!=1?(Be=Math.pow(2,Math.log2(ke/Me)*Ce)*Me,We=Math.pow(2,Math.log2(Le/Ae)*qe)*Ae):(Be=ke,We=Le),a.phaseDeltas[$]=Be*x,a.phaseDeltaScales[$]=Math.pow(We/Be,1/c);let Xe=l.operators[$].amplitude,Oe=l.operators[$].amplitude;$<4?this.isModActive(t.modulators.dictionary["fm slider 1"].index+$,i,a.instrumentIndex)&&(Xe*=this.getModValue(t.modulators.dictionary["fm slider 1"].index+$,i,a.instrumentIndex,!1)/15,Oe*=this.getModValue(t.modulators.dictionary["fm slider 1"].index+$,i,a.instrumentIndex,!0)/15):this.isModActive(t.modulators.dictionary["fm slider 5"].index+$-4,i,a.instrumentIndex)&&(Xe*=this.getModValue(t.modulators.dictionary["fm slider 5"].index+$-4,i,a.instrumentIndex,!1)/15,Oe*=this.getModValue(t.modulators.dictionary["fm slider 5"].index+$-4,i,a.instrumentIndex,!0)/15);let Ze=o.operatorAmplitudeCurve(Xe),je=o.operatorAmplitudeCurve(Oe),et=Ze*t.operatorFrequencies[l.operators[$].frequency].amplitudeSign,dt=je*t.operatorFrequencies[l.operators[$].frequency].amplitudeSign,Ge=et,Ue=dt;if($<me){let Ve;a.prevPitchExpressions[$]!=null?Ve=a.prevPitchExpressions[$]:Ve=Math.pow(2,-(he-G)/C);let He=Math.pow(2,-(Se-G)/C);a.prevPitchExpressions[$]=He,Ge*=Ve,Ue*=He,K+=je}else Ge*=t.sineWaveLength*1.5,Ue*=t.sineWaveLength*1.5,V*=1-Math.min(1,l.operators[$].amplitude/15);if(Ge*=te[12+$],Ue*=ee[12+$],this.isModActive(t.modulators.dictionary["pre volume"].index,i,a.instrumentIndex)){let Ve=this.getModValue(t.modulators.dictionary["pre volume"].index,i,a.instrumentIndex,!1),He=this.getModValue(t.modulators.dictionary["pre volume"].index,i,a.instrumentIndex,!0);Ge*=Ve<=0?(Ve+t.volumeRange/2)/(t.volumeRange/2):o.instrumentVolumeToVolumeMult(Ve),Ue*=He<=0?(He+t.volumeRange/2)/(t.volumeRange/2):o.instrumentVolumeToVolumeMult(He)}a.operatorExpressions[$]=Ge,a.operatorExpressionDeltas[$]=(Ue-Ge)/c}V*=(Math.pow(2,2-1.4*l.feedbackAmplitude/15)-1)/3,V*=1-Math.min(1,Math.max(0,K-1)/2),V=1+V*3;let oe=F*V*ge*z*H*te[0],ye=F*V*ge*W*U*ee[0];ae&&a.pitchCount<=l.monoChordTone&&(oe=0,ye=0),a.expression=oe,a.expressionDelta=(ye-oe)/c;let ie=l.feedbackAmplitude,de=l.feedbackAmplitude;this.isModActive(t.modulators.dictionary["fm feedback"].index,i,a.instrumentIndex)&&(ie*=this.getModValue(t.modulators.dictionary["fm feedback"].index,i,a.instrumentIndex,!1)/15,de*=this.getModValue(t.modulators.dictionary["fm feedback"].index,i,a.instrumentIndex,!0)/15);let le=t.sineWaveLength*.3*ie/15,re=t.sineWaveLength*.3*de/15,ce=le*te[18],X=re*ee[18];a.feedbackMult=ce,a.feedbackDelta=(X-ce)/c}else{let V=Math.pow(2,(N-R)*p/12),K=Math.pow(V,1/c),Q=g.name=="monophonic",Z=a.pitches[0];if(a.pitchCount>1&&(g.arpeggiates||g.customInterval||Q)){let $=Math.floor(v.arpTime/t.ticksPerArpeggio);if(g.customInterval){let ue=a.pitches[1+Ht(a.pitchCount-1,l.fastTwoNoteArp,$)]-a.pitches[0];E=Math.pow(2,ue/12),a.specialIntervalExpressionMult=Math.pow(2,-ue/C)}else g.arpeggiates?Z=a.pitches[Ht(a.pitchCount,l.fastTwoNoteArp,$)]:Z=a.pitches[l.monoChordTone]}let ae=u+(Z+R)*p,me=u+(Z+N)*p,oe;a.prevPitchExpressions[0]!=null?oe=a.prevPitchExpressions[0]:oe=Math.pow(2,-(ae-G)/C);let ye=Math.pow(2,-(me-G)/C);a.prevPitchExpressions[0]=ye;let ie=F*ge;if(l.type==2&&(ie*=t.chipNoises[l.chipNoise].expression),l.type==0&&(ie*=t.chipWaves[l.chipWave].expression),l.type==6){let $=Gn(l.pulseWidth),ue=$,ve=$;this.isModActive(t.modulators.dictionary["pulse width"].index,i,a.instrumentIndex)&&(ue=this.getModValue(t.modulators.dictionary["pulse width"].index,i,a.instrumentIndex,!1)/(t.pulseWidthRange*2),ve=this.getModValue(t.modulators.dictionary["pulse width"].index,i,a.instrumentIndex,!0)/(t.pulseWidthRange*2));let Fe=ue*te[3],Y=ve*ee[3];a.pulseWidth=Fe,a.pulseWidthDelta=(Y-Fe)/c;let he=l.decimalOffset;this.isModActive(t.modulators.dictionary["decimal offset"].index,i,a.instrumentIndex)&&(he=this.getModValue(t.modulators.dictionary["decimal offset"].index,i,a.instrumentIndex,!1));let Se=he*te[38];a.decimalOffset=Se,a.pulseWidth-=a.decimalOffset/1e4}if(l.type==7){let $=l.stringSustain,ue=l.stringSustain;this.isModActive(t.modulators.dictionary.sustain.index,i,a.instrumentIndex)&&($=this.getModValue(t.modulators.dictionary.sustain.index,i,a.instrumentIndex,!1),ue=this.getModValue(t.modulators.dictionary.sustain.index,i,a.instrumentIndex,!0)),a.stringSustainStart=$,a.stringSustainEnd=ue,ie*=Math.pow(2,.7*(1-$/(t.stringSustainRange-1)))}let de=Ne.frequencyFromPitch(ae);if(l.type==0||l.type==9||l.type==5||l.type==7||l.type==3||l.type==6||l.type==2||l.type==4){let $=l.unisonVoices,ue=l.unisonSpread,ve=l.unisonOffset,Fe=l.unisonExpression,Y=l.type==7?1:$/2;ie*=Fe*Y;let he=te[5],Se=ee[5],Me=Math.pow(2,(ve+ue)*he/12),Ae=Math.pow(2,(ve+ue)*Se/12);a.phaseDeltas[0]=de*x*Me,a.phaseDeltaScales[0]=K*Math.pow(Ae/Me,1/c);let De=$==1?1:$-1;for(let ke=1;ke<$;ke++){let Le=Math.pow(2,(ve+ue-2*ke*ue/De)*he/12)*E,Ce=Math.pow(2,(ve+ue-2*ke*ue/De)*Se/12)*E;a.phaseDeltas[ke]=de*x*Le,a.phaseDeltaScales[ke]=K*Math.pow(Ce/Le,1/c)}for(let ke=$;ke<t.unisonVoicesMax;ke++)a.phaseDeltas[ke]=a.phaseDeltas[0],a.phaseDeltaScales[ke]=a.phaseDeltaScales[0]}else a.phaseDeltas[0]=de*x,a.phaseDeltaScales[0]=K;let le=1,re=1;if(l.type==8){let $=1/Math.sqrt(t.supersawVoiceCount),ue=l.supersawDynamism/t.supersawDynamismMax,ve=l.supersawDynamism/t.supersawDynamismMax;this.isModActive(t.modulators.dictionary.dynamism.index,i,a.instrumentIndex)&&(ue=this.getModValue(t.modulators.dictionary.dynamism.index,i,a.instrumentIndex,!1)/t.supersawDynamismMax,ve=this.getModValue(t.modulators.dictionary.dynamism.index,i,a.instrumentIndex,!0)/t.supersawDynamismMax);let Fe=1-Math.pow(Math.max(0,1-ue*te[39]),.2),Y=1-Math.pow(Math.max(0,1-ve*ee[39]),.2),he=Math.pow(2,Math.log2($)*Fe),Se=Math.pow(2,Math.log2($)*Y),Me=Math.sqrt((1/Math.pow(he,2)-1)/(t.supersawVoiceCount-1)),Ae=Math.sqrt((1/Math.pow(Se,2)-1)/(t.supersawVoiceCount-1));a.supersawDynamism=Me,a.supersawDynamismDelta=(Ae-Me)/c;let De=a.supersawDelayIndex==-1;if(De){let $e=0;for(let Te=0;Te<t.supersawVoiceCount;Te++)a.phases[Te]=$e,$e+=-Math.log(Math.random());let sn=1+(t.supersawVoiceCount-1)*Me,Nt=0;for(let Te=0;Te<t.supersawVoiceCount;Te++){let It=Te==0?1:Me,wt=a.phases[Te]/$e;a.phases[Te]=wt,Nt+=(wt-.5)*It}let Ct=1,Rn=0;for(let Te=t.supersawVoiceCount-1;Te>=0;Te--){let It=1-a.phases[Te],wt=It-Rn;if(Nt<0){let Fa=-Nt/sn;if(Fa<wt){Ct=Rn+Fa;break}}let ho=Te==0?1:Me;Nt+=wt*sn-ho,Rn=It}for(let Te=0;Te<t.supersawVoiceCount;Te++)a.phases[Te]+=Ct;for(let Te=1;Te<t.supersawVoiceCount-1;Te++){let It=Te+Math.floor(Math.random()*(t.supersawVoiceCount-Te)),wt=a.phases[Te];a.phases[Te]=a.phases[It],a.phases[It]=wt}}let ke=l.supersawSpread/t.supersawSpreadMax,Le=ke,Ce=ke;this.isModActive(t.modulators.dictionary.spread.index,i,a.instrumentIndex)&&(Le=this.getModValue(t.modulators.dictionary.spread.index,i,a.instrumentIndex,!1)/t.supersawSpreadMax,Ce=this.getModValue(t.modulators.dictionary.spread.index,i,a.instrumentIndex,!0)/t.supersawSpreadMax);let qe=Le*te[40],Be=Ce*ee[40],We=(qe+Be)*.5,Xe=Math.pow(1-Math.sqrt(Math.max(0,1-We)),1.75);for(let $e=0;$e<t.supersawVoiceCount;$e++){let $t=$e==0?0:Math.pow((($e+1>>1)-.5+.025*(($e&2)-1))/(t.supersawVoiceCount>>1),1.1)*(($e&1)*2-1);a.supersawUnisonDetunes[$e]=Math.pow(2,Xe*$t/12)}let Oe=l.supersawShape/t.supersawShapeMax,Ze=Oe*te[41],je=Oe*ee[41];this.isModActive(t.modulators.dictionary["saw shape"].index,i,a.instrumentIndex)&&(Ze=this.getModValue(t.modulators.dictionary["saw shape"].index,i,a.instrumentIndex,!1)/t.supersawShapeMax,je=this.getModValue(t.modulators.dictionary["saw shape"].index,i,a.instrumentIndex,!0)/t.supersawShapeMax);let et=Ze*te[41],dt=je*ee[41];a.supersawShape=et,a.supersawShapeDelta=(dt-et)/c;let Ge=l.decimalOffset;this.isModActive(t.modulators.dictionary["decimal offset"].index,i,a.instrumentIndex)&&(Ge=this.getModValue(t.modulators.dictionary["decimal offset"].index,i,a.instrumentIndex,!1));let Ue=Ge*te[38];a.decimalOffset=Ue;let Ve=Gn(l.pulseWidth),He=Ve,Ft=Ve;this.isModActive(t.modulators.dictionary["pulse width"].index,i,a.instrumentIndex)&&(He=this.getModValue(t.modulators.dictionary["pulse width"].index,i,a.instrumentIndex,!1)/(t.pulseWidthRange*2),Ft=this.getModValue(t.modulators.dictionary["pulse width"].index,i,a.instrumentIndex,!0)/(t.pulseWidthRange*2));let ya=He*te[3],ga=Ft*ee[3];ya-=Ue/1e4,ga-=Ue/1e4;let uo=a.supersawPrevPhaseDelta!=null?a.supersawPrevPhaseDelta:de*x,va=de*x*V;a.supersawPrevPhaseDelta=va;let qn=ya/uo,ba=ga/va;a.supersawDelayLength=qn,a.supersawDelayLengthDelta=(ba-qn)/c;let Sa=Math.ceil(Math.max(qn,ba))+2;if(a.supersawDelayLine==null||a.supersawDelayLine.length<=Sa){let $e=Math.ceil(.5*this.samplesPerSecond/Ne.frequencyFromPitch(24)),$t=new Float32Array(Je(Math.max($e,Sa)));if(!De&&a.supersawDelayLine!=null){let sn=a.supersawDelayLine.length-1>>0,Nt=a.supersawDelayIndex;for(let Ct=0;Ct<a.supersawDelayLine.length;Ct++)$t[Ct]=a.supersawDelayLine[Nt+Ct&sn]}a.supersawDelayLine=$t,a.supersawDelayIndex=a.supersawDelayLine.length}else De&&(a.supersawDelayLine.fill(0),a.supersawDelayIndex=a.supersawDelayLine.length);let xa=t.pwmBaseExpression/t.supersawBaseExpression;le*=(1+(xa-1)*et)/Math.sqrt(1+(t.supersawVoiceCount-1)*Me*Me),re*=(1+(xa-1)*dt)/Math.sqrt(1+(t.supersawVoiceCount-1)*Ae*Ae)}let ce=ie*z*H*oe*te[0]*le,X=ie*W*U*ye*ee[0]*re;if(this.isModActive(t.modulators.dictionary["pre volume"].index,i,a.instrumentIndex)){let $=this.getModValue(t.modulators.dictionary["pre volume"].index,i,a.instrumentIndex,!1),ue=this.getModValue(t.modulators.dictionary["pre volume"].index,i,a.instrumentIndex,!0);ce*=$<=0?($+t.volumeRange/2)/(t.volumeRange/2):o.instrumentVolumeToVolumeMult($),X*=ue<=0?(ue+t.volumeRange/2)/(t.volumeRange/2):o.instrumentVolumeToVolumeMult(ue)}if(Q&&a.pitchCount<=l.monoChordTone&&(ce=0,X=0,v.awake=!1),a.expression=ce,a.expressionDelta=(X-ce)/c,l.type==7){let $;if(a.prevStringDecay!=null)$=a.prevStringDecay;else{let Y=a.envelopeComputer.envelopeStarts[4];$=1-Math.min(1,Y*a.stringSustainStart/(t.stringSustainRange-1))}let ue=a.envelopeComputer.envelopeEnds[4],ve=1-Math.min(1,ue*a.stringSustainEnd/(t.stringSustainRange-1));a.prevStringDecay=ve;let Fe=l.unisonVoices;for(let Y=a.pickedStrings.length;Y<Fe;Y++)a.pickedStrings[Y]=new bn;if(a.atNoteStart&&!h.continues&&!a.forceContinueAtStart)for(let Y of a.pickedStrings)Y.delayIndex=-1;for(let Y=0;Y<Fe;Y++)a.pickedStrings[Y].update(this,v,a,Y,c,$,ve,l.stringSustainType)}}}static getLFOAmplitude(e,i){let n=0;for(let a of t.vibratoTypes[e.vibratoType].periodsSeconds)n+=Math.sin(Math.PI*2*i/a);return n}static getInstrumentSynthFunction(e){if(e.type==1){let i=e.algorithm+"_"+e.feedbackType;if(o.fmSynthFunctionCache[i]==null){let n=[];for(let s of o.fmSourceTemplate)if(s.indexOf("// CARRIER OUTPUTS")!=-1){let r=[];for(let c=0;c<t.algorithms[e.algorithm].carrierCount;c++)r.push("operator"+c+"Scaled");n.push(s.replace("/*operator#Scaled*/",r.join(" + ")))}else if(s.indexOf("// INSERT OPERATOR COMPUTATION HERE")!=-1)for(let r=t.operatorCount-1;r>=0;r--)for(let c of o.operatorSourceTemplate)if(c.indexOf("/* + operator@Scaled*/")!=-1){let d="";for(let l of t.algorithms[e.algorithm].modulatedBy[r])d+=" + operator"+(l-1)+"Scaled";let y=t.feedbacks[e.feedbackType].indices[r];if(y.length>0){d+=" + feedbackMult * (";let l=[];for(let v of y)l.push("operator"+(v-1)+"Output");d+=l.join(" + ")+")"}n.push(c.replace(/\#/g,r+"").replace("/* + operator@Scaled*/",d))}else n.push(c.replace(/\#/g,r+""));else if(s.indexOf("#")!=-1)for(let r=0;r<t.operatorCount;r++)n.push(s.replace(/\#/g,r+""));else n.push(s);let a="return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {"+n.join(`
`)+"}";o.fmSynthFunctionCache[i]=new Function("Config","Synth",a)(t,o)}return o.fmSynthFunctionCache[i]}else{if(e.type==0)return e.isUsingAdvancedLoopControls?o.loopableChipSynth:o.chipSynth;if(e.type==9)return o.chipSynth;if(e.type==5)return o.harmonicsSynth;if(e.type==6)return o.pulseWidthSynth;if(e.type==8)return o.supersawSynth;if(e.type==7)return o.pickedStringSynth;if(e.type==2)return o.noiseSynth;if(e.type==3)return o.spectrumSynth;if(e.type==4)return o.drumsetSynth;if(e.type==10)return o.modSynth;if(e.type==11){let i=e.customAlgorithm.name+"_"+e.customFeedbackType.name;if(o.fm6SynthFunctionCache[i]==null){let n=[];for(let s of o.fmSourceTemplate)if(s.indexOf("// CARRIER OUTPUTS")!=-1){let r=[];for(let c=0;c<e.customAlgorithm.carrierCount;c++)r.push("operator"+c+"Scaled");n.push(s.replace("/*operator#Scaled*/",r.join(" + ")))}else if(s.indexOf("// INSERT OPERATOR COMPUTATION HERE")!=-1)for(let r=t.operatorCount+2-1;r>=0;r--)for(let c of o.operatorSourceTemplate)if(c.indexOf("/* + operator@Scaled*/")!=-1){let d="";for(let l of e.customAlgorithm.modulatedBy[r])d+=" + operator"+(l-1)+"Scaled";let y=e.customFeedbackType.indices[r];if(y.length>0){d+=" + feedbackMult * (";let l=[];for(let v of y)l.push("operator"+(v-1)+"Output");d+=l.join(" + ")+")"}n.push(c.replace(/\#/g,r+"").replace("/* + operator@Scaled*/",d))}else n.push(c.replace(/\#/g,r+""));else if(s.indexOf("#")!=-1)for(let r=0;r<t.operatorCount+2;r++)n.push(s.replace(/\#/g,r+""));else n.push(s);let a="return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {"+n.join(`
`)+"}";o.fm6SynthFunctionCache[i]=new Function("Config","Synth",a)(t,o)}return o.fm6SynthFunctionCache[i]}else throw new Error("Unrecognized instrument type: "+e.type)}}static wrap(e,i){return(e%i+i)%i}static loopableChipSynth(e,i,n,a,s){let r=s.effectsIncludeType(3)&&s.aliases,c=e.tempInstrumentSampleBufferL,d=e.tempInstrumentSampleBufferR,y=s.waveL,l=s.waveR,v=s.volumeScale,h=r&&s.type==8?y.length:y.length-1,g=Math.max(0,Math.min(h,s.chipWaveLoopEnd)),f=Math.max(0,Math.min(g-1,s.chipWaveLoopStart)),m=g-f;m<2&&(f=0,g=h,m=h);let p=s.chipWaveLoopMode,S=s.chipWavePlayBackwards,x=a.specialIntervalExpressionMult*s.unisonSign;s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(a.phases[1]=a.phases[0]);let w=a.phaseDeltas[0]*h,b=a.phaseDeltas[1]*h,P=a.directions[0],B=a.directions[1],L=a.chipWaveCompletions[0],E=a.chipWaveCompletions[1];(p===3||p===2||p===0)&&(S?(P=-1,B=-1):(P=1,B=1)),(p===0||p===1)&&(L=0,E=0);let D=a.chipWaveCompletionsLastWaveL[0],R=a.chipWaveCompletionsLastWaveL[1],N=a.chipWaveCompletionsLastWaveR[0],z=a.chipWaveCompletionsLastWaveR[1],W=1e3,H=+a.phaseDeltaScales[0],U=+a.phaseDeltaScales[1],G=+a.expression,u=+a.expressionDelta,F=o.wrap(a.phases[0],1)*h,C=o.wrap(a.phases[1],1)*h,I=0,M=0,q=0,O=0;if(!r){let ye=Math.floor(F),ie=Math.floor(C),de=o.wrap(ye,h),le=o.wrap(ie,h),re=F-ye,ce=C-ie;I=+y[de],M=+y[le],q=+l[de],O=+l[le],I+=(y[o.wrap(de+1,h)]-I)*re,M+=(y[o.wrap(le+1,h)]-M)*ce,q+=(l[o.wrap(de+1,h)]-q)*re,O+=(l[o.wrap(le+1,h)]-O)*ce}let j=a.noteFiltersL,te=a.noteFiltersR,ee=a.noteFilterCount|0,ge=+a.initialNoteFilterInputL1,Ie=+a.initialNoteFilterInputR1,_=+a.initialNoteFilterInputL2,V=+a.initialNoteFilterInputR2,K=o.applyFilters,Q=i+n,Z=a.chipWavePrevWavesL[0],ae=a.chipWavePrevWavesL[1],me=a.chipWavePrevWavesR[0],oe=a.chipWavePrevWavesR[1];for(let ye=i;ye<Q;ye++){L>0&&L<W&&L++,E>0&&E<W&&E++;let ie=0;F+=w*P,C+=b*B,p===2?(P===1?F>h&&(L<=0&&(D=Z,N=me,L++),ie=1):P===-1&&F<0&&(L<=0&&(D=Z,N=me,L++),ie=1),B===1?C>h&&(E<=0&&(R=ae,z=oe,E++),ie=1):P===-1&&C<0&&(E<=0&&(R=ae,z=oe,E++),ie=1)):p===3?(P===1?F>g&&(L<=0&&(D=Z,N=me,L++),ie=1):P===-1&&F<f&&(L<=0&&(D=Z,N=me,L++),ie=1),B===1?C>g&&(E<=0&&(R=ae,z=oe,E++),ie=1):P===-1&&C<f&&(E<=0&&(R=ae,z=oe,E++),ie=1)):p===0?(P===1?F>g&&(F=f+o.wrap(F-g,m),ie=1):P===-1&&F<f&&(F=g-o.wrap(f-F,m),ie=1),B===1?C>g&&(C=f+o.wrap(C-g,m),ie=1):B===-1&&C<f&&(C=g-o.wrap(f-C,m),ie=1)):p===1&&(P===1?F>g&&(F=g-o.wrap(F-g,m),P=-1,ie=1):P===-1&&F<f&&(F=f+o.wrap(f-F,m),P=1,ie=1),B===1?C>g&&(C=g-o.wrap(C-g,m),B=-1,ie=1):B===-1&&C<f&&(C=f+o.wrap(f-C,m),B=1,ie=1));let de=0,le=0,re=0,ce=0,X=0,$=0;if(r){de=y[o.wrap(Math.floor(F),h)],le=y[o.wrap(Math.floor(C),h)],re=l[o.wrap(Math.floor(F),h)],ce=l[o.wrap(Math.floor(C),h)],Z=de,ae=le,me=re,oe=ce;let he=L>0?(W-Math.min(L,W))/W:1,Se=E>0?(W-Math.min(E,W))/W:1;X=0,L>0?(X+=D*he,$+=D*he):(X+=de,$+=re),E>0?(X+=R*Se,$+=z*Se):(X+=le,$+=ce)}else{let he=Math.floor(F),Se=Math.floor(C),Me=o.wrap(he,h),Ae=o.wrap(Se,h),De=y[Me],ke=y[Ae],Le=l[Me],Ce=l[Ae],qe=F-he,Be=C-Se;if(De+=(y[o.wrap(Me+1,h)]-De)*qe,ke+=(y[o.wrap(Ae+1,h)]-ke)*Be,Le+=(l[o.wrap(Me+1,h)]-Le)*qe,Ce+=(l[o.wrap(Ae+1,h)]-Ce)*Be,!(p===0&&f===0&&g===h)&&ie!==0){let Oe=0,Ze=0,je=0,et=0,dt=Math.max(0,F-w*P),Ge=Math.max(0,C-b*B),Ue=Math.floor(dt),Ve=Math.floor(Ge),He=o.wrap(Ue,h),Ft=o.wrap(Ve,h);Oe=y[He],Ze=y[Ft],je=l[He],et=l[Ft],Oe+=(y[o.wrap(He+1,h)]-Oe)*(dt-Ue)*P,Ze+=(y[o.wrap(Ft+1,h)]-Ze)*(Ge-Ve)*B,je+=(l[o.wrap(He+1,h)]-je)*(dt-Ue)*P,et+=(l[o.wrap(Ft+1,h)]-et)*(Ge-Ve)*B,I=Oe,M=Ze,q=je,O=et}p===1&&ie!==0?(de=Z,le=ae,re=me,ce=oe):(de=(De-I)/(w*P),le=(ke-M)/(b*B),re=(Le-q)/(w*P),ce=(Ce-O)/(b*B)),Z=de,ae=le,me=re,oe=ce,I=De,M=ke,q=Le,O=Ce;let We=L>0?(W-Math.min(L,W))/W:1,Xe=E>0?(W-Math.min(E,W))/W:1;L>0?(X+=D*We,$+=N*We):(X+=de,$+=re),E>0?(X+=R*Xe,$+=z*Xe):(X+=le*x,$+=ce*x)}let ue=K(X*v,ge,_,ee,j),ve=K($*v,Ie,V,ee,te);_=ge,V=Ie,ge=X*v,Ie=$*v,w*=H,b*=U;let Fe=ue*G,Y=ve*G;G+=u,c[ye]+=Fe,d[ye]+=Y}a.phases[0]=F/h,a.phases[1]=C/h,a.phaseDeltas[0]=w/h,a.phaseDeltas[1]=b/h,a.directions[0]=P,a.directions[1]=B,a.chipWaveCompletions[0]=L,a.chipWaveCompletions[1]=E,a.chipWavePrevWavesL[0]=Z,a.chipWavePrevWavesL[1]=ae,a.chipWavePrevWavesR[0]=me,a.chipWavePrevWavesR[1]=oe,a.chipWaveCompletionsLastWaveL[0]=D,a.chipWaveCompletionsLastWaveL[1]=R,a.chipWaveCompletionsLastWaveR[0]=N,a.chipWaveCompletionsLastWaveR[1]=z,a.expression=G,e.sanitizeFilters(j),e.sanitizeFilters(te),a.initialNoteFilterInputL1=ge,a.initialNoteFilterInputR1=Ie,a.initialNoteFilterInputL2=_,a.initialNoteFilterInputR2=V}static chipSynth(e,i,n,a,s){let r=s.effectsIncludeType(5)&&s.aliases,c=e.tempInstrumentSampleBufferL,d=e.tempInstrumentSampleBufferR,y=s.waveL,l=s.waveR,v=s.volumeScale,h=r&&s.type==8?y.length:y.length-1,g=a.specialIntervalExpressionMult*s.unisonSign;s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(a.phases[1]=a.phases[0]);let f=a.phaseDeltas[0]*h,m=a.phaseDeltas[1]*h,p=+a.phaseDeltaScales[0],S=+a.phaseDeltaScales[1],x=+a.expression,w=+a.expressionDelta,b=a.phases[0]%1*h,P=a.phases[1]%1*h,B=a.noteFiltersL,L=a.noteFiltersR,E=a.noteFilterCount|0,D=+a.initialNoteFilterInputL1,R=+a.initialNoteFilterInputR1,N=+a.initialNoteFilterInputL2,z=+a.initialNoteFilterInputR2,W=o.applyFilters,H=0,U=0,G=0,u=0;if(!r){let C=b|0,I=P|0,M=C%h,q=I%h,O=b-C,j=P-I;H=+y[M],U=+y[q],G=+l[M],u=+l[q],H+=(y[M+1]-H)*O,U+=(y[q+1]-U)*j,G+=(l[M+1]-G)*O,u+=(l[q+1]-u)*j}let F=i+n;for(let C=i;C<F;C++){b+=f,P+=m;let I,M,q,O,j,te;if(r)I=y[(0|b)%h],M=y[(0|P)%h],q=l[(0|b)%h],O=l[(0|P)%h],j=I+M,te=q+O;else{let V=b|0,K=P|0,Q=V%h,Z=K%h,ae=y[Q],me=y[Z],oe=l[Q],ye=l[Z],ie=b-V,de=P-K;ae+=(y[Q+1]-ae)*ie,me+=(y[Z+1]-me)*de,oe+=(l[Q+1]-oe)*ie,ye+=(l[Z+1]-ye)*de,I=(ae-H)/f,M=(me-U)/m,q=(oe-G)/f,O=(ye-u)/m,H=ae,U=me,G=oe,u=ye,j=I+M*g,te=q+O*g}let ee=W(j*v,D,N,E,B),ge=W(te*v,R,z,E,L);N=D,z=R,D=j*v,R=te*v,f*=p,m*=S;let Ie=ee*x,_=ge*x;x+=w,c[C]+=Ie,d[C]+=_}a.phases[0]=b/h,a.phases[1]=P/h,a.phaseDeltas[0]=f/h,a.phaseDeltas[1]=m/h,a.expression=x,e.sanitizeFilters(B),e.sanitizeFilters(L),a.initialNoteFilterInputL1=D,a.initialNoteFilterInputR1=R,a.initialNoteFilterInputL2=N,a.initialNoteFilterInputR2=z}static harmonicsSynth(e,i,n,a,s){let r=e.tempInstrumentSampleBufferL,c=s.waveL,d=c.length-1,y=a.specialIntervalExpressionMult*s.unisonSign;s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(a.phases[1]=a.phases[0]);let l=a.phaseDeltas[0]*d,v=a.phaseDeltas[1]*d,h=+a.phaseDeltaScales[0],g=+a.phaseDeltaScales[1],f=+a.expression,m=+a.expressionDelta,p=a.phases[0]%1*d,S=a.phases[1]%1*d,x=a.noteFiltersL,w=a.noteFilterCount|0,b=+a.initialNoteFilterInputL1,P=+a.initialNoteFilterInputL2,B=o.applyFilters,L=p|0,E=S|0,D=L%d,R=E%d,N=p-L,z=S-E,W=+c[D],H=+c[R];W+=(c[D+1]-W)*N,H+=(c[R+1]-H)*z;let U=i+n;for(let G=i;G<U;G++){p+=l,S+=v;let u=p|0,F=S|0,C=u%d,I=F%d,M=c[C],q=c[I],O=p-u,j=S-F;M+=(c[C+1]-M)*O,q+=(c[I+1]-q)*j;let te=(M-W)/l,ee=(q-H)/v;W=M,H=q;let ge=te+ee*y,Ie=B(ge,b,P,w,x);P=b,b=ge,l*=h,v*=g;let _=Ie*f;f+=m,r[G]+=_}a.phases[0]=p/d,a.phases[1]=S/d,a.phaseDeltas[0]=l/d,a.phaseDeltas[1]=v/d,a.expression=f,e.sanitizeFilters(x),a.initialNoteFilterInputL1=b,a.initialNoteFilterInputL2=P}static pickedStringSynth(e,i,n,a,s){let r=s.unisonVoices,c=o.pickedStringFunctionCache[r];if(c==null){let d="return (synth, bufferIndex, runLength, tone, instrumentState) => {";d+=`
				const Config = beepbox.Config;
				const Synth = beepbox.Synth;
                const data = synth.tempInstrumentSampleBufferL;
				
				let pickedString# = tone.pickedStrings[#];
				let allPassSample# = +pickedString#.allPassSample;
				let allPassPrevInput# = +pickedString#.allPassPrevInput;
				let sustainFilterSample# = +pickedString#.sustainFilterSample;
				let sustainFilterPrevOutput2# = +pickedString#.sustainFilterPrevOutput2;
				let sustainFilterPrevInput1# = +pickedString#.sustainFilterPrevInput1;
				let sustainFilterPrevInput2# = +pickedString#.sustainFilterPrevInput2;
				let fractionalDelaySample# = +pickedString#.fractionalDelaySample;
				const delayLine# = pickedString#.delayLine;
				const delayBufferMask# = (delayLine#.length - 1) >> 0;
				let delayIndex# = pickedString#.delayIndex|0;
				delayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;
				let delayLength# = +pickedString#.prevDelayLength;
				const delayLengthDelta# = +pickedString#.delayLengthDelta;
				let allPassG# = +pickedString#.allPassG;
				let sustainFilterA1# = +pickedString#.sustainFilterA1;
				let sustainFilterA2# = +pickedString#.sustainFilterA2;
				let sustainFilterB0# = +pickedString#.sustainFilterB0;
				let sustainFilterB1# = +pickedString#.sustainFilterB1;
				let sustainFilterB2# = +pickedString#.sustainFilterB2;
				const allPassGDelta# = +pickedString#.allPassGDelta;
				const sustainFilterA1Delta# = +pickedString#.sustainFilterA1Delta;
				const sustainFilterA2Delta# = +pickedString#.sustainFilterA2Delta;
				const sustainFilterB0Delta# = +pickedString#.sustainFilterB0Delta;
				const sustainFilterB1Delta# = +pickedString#.sustainFilterB1Delta;
				const sustainFilterB2Delta# = +pickedString#.sustainFilterB2Delta;
				
				let expression = +tone.expression;
				const expressionDelta = +tone.expressionDelta;
				
				const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;
				const delayResetOffset# = pickedString#.delayResetOffset|0;
				
				const filters = tone.noteFiltersL;
				const filterCount = tone.noteFilterCount|0;
				let initialFilterInput1 = +tone.initialNoteFilterInputL1;
				let initialFilterInput2 = +tone.initialNoteFilterInputL2;
				const applyFilters = Synth.applyFilters;
				
				const stopIndex = bufferIndex + runLength;
				for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {
					const targetSampleTime# = delayIndex# - delayLength#;
					const lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.
					const upperIndex# = lowerIndex# + 1;
					const fractionalDelay# = upperIndex# - targetSampleTime#;
					const fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay
					const prevInput# = delayLine#[lowerIndex# & delayBufferMask#];
					const input# = delayLine#[upperIndex# & delayBufferMask#];
					fractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;
					
					allPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;
					allPassPrevInput# = fractionalDelaySample#;
					
					const sustainFilterPrevOutput1# = sustainFilterSample#;
					sustainFilterSample# = sustainFilterB0# * allPassSample# + sustainFilterB1# * sustainFilterPrevInput1# + sustainFilterB2# * sustainFilterPrevInput2# - sustainFilterA1# * sustainFilterSample# - sustainFilterA2# * sustainFilterPrevOutput2#;
					sustainFilterPrevOutput2# = sustainFilterPrevOutput1#;
					sustainFilterPrevInput2# = sustainFilterPrevInput1#;
					sustainFilterPrevInput1# = allPassSample#;
					
					delayLine#[delayIndex# & delayBufferMask#] += sustainFilterSample#;
					delayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;
					delayIndex#++;
					
					const inputSample = (`;let y=[];for(let l=0;l<r;l++)y.push("fractionalDelaySample"+l+(l!=0?" * unisonSign":""));d+=y.join(" + "),d+=`) * expression;
					const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);
					initialFilterInput2 = initialFilterInput1;
					initialFilterInput1 = inputSample;
                    data[sampleIndex] += sample;
					
					expression += expressionDelta;
					delayLength# += delayLengthDelta#;
					allPassG# += allPassGDelta#;
					sustainFilterA1# += sustainFilterA1Delta#;
					sustainFilterA2# += sustainFilterA2Delta#;
					sustainFilterB0# += sustainFilterB0Delta#;
					sustainFilterB1# += sustainFilterB1Delta#;
					sustainFilterB2# += sustainFilterB2Delta#;
				}
				
				// Avoid persistent denormal or NaN values in the delay buffers and filter history.
				const epsilon = (1.0e-24);
				if (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;
				if (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;
				if (!Number.isFinite(sustainFilterSample#) || Math.abs(sustainFilterSample#) < epsilon) sustainFilterSample# = 0.0;
				if (!Number.isFinite(sustainFilterPrevOutput2#) || Math.abs(sustainFilterPrevOutput2#) < epsilon) sustainFilterPrevOutput2# = 0.0;
				if (!Number.isFinite(sustainFilterPrevInput1#) || Math.abs(sustainFilterPrevInput1#) < epsilon) sustainFilterPrevInput1# = 0.0;
				if (!Number.isFinite(sustainFilterPrevInput2#) || Math.abs(sustainFilterPrevInput2#) < epsilon) sustainFilterPrevInput2# = 0.0;
				if (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;
				pickedString#.allPassSample = allPassSample#;
				pickedString#.allPassPrevInput = allPassPrevInput#;
				pickedString#.sustainFilterSample = sustainFilterSample#;
				pickedString#.sustainFilterPrevOutput2 = sustainFilterPrevOutput2#;
				pickedString#.sustainFilterPrevInput1 = sustainFilterPrevInput1#;
				pickedString#.sustainFilterPrevInput2 = sustainFilterPrevInput2#;
				pickedString#.fractionalDelaySample = fractionalDelaySample#;
				pickedString#.delayIndex = delayIndex#;
				pickedString#.prevDelayLength = delayLength#;
				pickedString#.allPassG = allPassG#;
				pickedString#.sustainFilterA1 = sustainFilterA1#;
				pickedString#.sustainFilterA2 = sustainFilterA2#;
				pickedString#.sustainFilterB0 = sustainFilterB0#;
				pickedString#.sustainFilterB1 = sustainFilterB1#;
				pickedString#.sustainFilterB2 = sustainFilterB2#;
				
				tone.expression = expression;
				
				synth.sanitizeFilters(filters);
				tone.initialNoteFilterInputL1 = initialFilterInput1;
				tone.initialNoteFilterInputL2 = initialFilterInput2;
			}`,d=d.replace(/^.*\#.*$/mg,l=>{let v=[];for(let h=0;h<r;h++)v.push(l.replace(/\#/g,String(h)));return v.join(`
`)}),c=new Function("Config","Synth",d)(t,o),o.pickedStringFunctionCache[r]=c}c(e,i,n,a,s)}static effectsSynth(e,i,n,a,s,r){let c=r.effectsIncludeType(3),d=r.effectsIncludeType(4),y=r.effectsIncludeType(5),l=r.effectsIncludeType(9),v=r.effectsIncludeType(2),h=r.effectsIncludeType(10),g=r.effectsIncludeType(1),f=r.effectsIncludeType(6),m=r.effectsIncludeType(0),p=r.effectsIncludeType(8),S=r.effectsIncludeType(7),x=r.chipWaveInStereo&&(r.synthesizer==o.loopableChipSynth||r.synthesizer==o.chipSynth),w="";for(let P of r.effects)P!=null&&(w=w+P.type.toString(),P.type==2&&(w=w+P.panningMode.toString()));let b=o.effectsFunctionCache[w];if(b==null){let P="return (synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) => {",B=g||m||f||p||h;P+=`
            let effectState = instrumentState.effects[0]

            const tempInstrumentSampleBufferL = synth.tempInstrumentSampleBufferL;
            const tempInstrumentSampleBufferR = synth.tempInstrumentSampleBufferR;

            let mixVolume = +instrumentState.mixVolume;
            const mixVolumeDelta = +instrumentState.mixVolumeDelta;
            `,B&&(P+=`

                let delayInputMult = +instrumentState.delayInputMult;
                const delayInputMultDelta = +instrumentState.delayInputMultDelta;`),y&&(P+=`

                let filtersL = [];
                let filtersR = [];

                let filterCount = [];
                let initialFilterInputL1 = [];
                let initialFilterInputR1 = [];
                let initialFilterInputL2 = [];
                let initialFilterInputR2 = [];
                let inputSampleL = [];
                let inputSampleR = [];
                const applyFilters = Synth.applyFilters;`,P+=`

                let eqFilterVolume = [];
                let eqFilterVolumeDelta = [];
                `),c&&(P+=`

                const distortionBaseVolume = +Config.distortionBaseVolume;
                let distortion = [];
                let distortionDelta = [];
                let distortionDrive = [];
                let distortionDriveDelta = [];
                const distortionFractionalResolution = 4.0;
                const distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;
                const distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;
                const distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;
                const distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;
                const distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay
                const distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay
                const distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay
                const distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;
                const distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;
                const distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;
                const distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;
                const distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;
                const distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;

                let distortionFractionalInputL1 = [];
                let distortionFractionalInputL2 = [];
                let distortionFractionalInputL3 = [];
                let distortionFractionalInputR1 = [];
                let distortionFractionalInputR2 = [];
                let distortionFractionalInputR3 = [];
                let distortionPrevInputL = [];
                let distortionPrevInputR = [];
                let distortionNextOutputL = [];
                let distortionNextOutputR = [];

                let distortionReverse = [];
                let distortionNextInputL = [];
                let distortionNextInputR = [];
                let distortionOutputL1 = [];
                let distortionOutputL2 = [];
                let distortionOutputL3 = [];
                let distortionOutputR1 = [];
                let distortionOutputR2 = [];
                let distortionOutputR3 = [];`),d&&(P+=`

                let bitcrusherPrevInputL = [];
                let bitcrusherPrevInputR = [];
                let bitcrusherCurrentOutputL = [];
                let bitcrusherCurrentOutputR = [];
                let bitcrusherPhase = [];
                let bitcrusherPhaseDelta = [];
                let bitcrusherPhaseDeltaScale = [];
                let bitcrusherScale = [];
                let bitcrusherScaleScale = [];
                let bitcrusherFoldLevel = [];
                let bitcrusherFoldLevelScale = [];

                let lerpedInputL = [];
                let lerpedInputR = [];

                let bitcrusherWrapLevel = [];
                let wrappedSampleL = [];
                let wrappedSampleR = [];
                let foldedSampleL = [];
                let foldedSampleR = [];
                let scaledSampleL = [];
                let scaledSampleR = [];
                let oldValueL = [];
                let oldValueR = [];
                let newValueL = [];
                let newValueR = [];`),h&&(P+=`

                const flangerMask = synth.flangerDelayBufferMask >>> 0;
                let flangerDelayLineL = [];
                let flangerDelayLineR = [];
                let flangerDelayPos = [];

                let flanger = [];
                let flangerDelta = [];
                let flangerSpeed = [];
                let flangerSpeedDelta = [];
                let flangerDepth = [];
                let flangerDepthDelta = [];
                let flangerFeedback = [];
                let flangerFeedbackDelta = [];

                let flangerPhase = [];
                let flangerRange = [];

                let flangerTapIndexL = [];
                let flangerTapIndexR = [];
                let flangerTapEndL = [];
                let flangerTapEndR = [];
                let flangerTapDeltaL = [];
                let flangerTapDeltaR = [];

                let flangerTapRatioL = []; // you don't know how happy i am that this variable exists
                let flangerTapRatioR = [];
                let flangerTapLA = [];
                let flangerTapLB = [];
                let flangerTapRA = [];
                let flangerTapRB = [];
                let flangerTapL = [];
                let flangerTapR = [];`),g&&(P+=`

                const chorusMask = synth.chorusDelayBufferMask >>> 0;
                let chorusDelayLineL = [];
                let chorusDelayLineR = [];
                let chorusDelayPos = [];

                let chorusVoiceMult = [];
                let chorusVoiceMultDelta = [];
                let chorusCombinedMult = [];
                let chorusCombinedMultDelta = [];

                const chorusDuration = +Config.chorusPeriodSeconds;
                const chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);
                const chorusRange = synth.samplesPerSecond * Config.chorusDelayRange;
                const chorusOffset0 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[0][0] * chorusRange;
                const chorusOffset1 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[0][1] * chorusRange;
                const chorusOffset2 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[0][2] * chorusRange;
                const chorusOffset3 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[1][0] * chorusRange;
                const chorusOffset4 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[1][1] * chorusRange;
                const chorusOffset5 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[1][2] * chorusRange;

                let chorusPhase = [];
                let chorusTap0Index = [];
                let chorusTap1Index = [];
                let chorusTap2Index = [];
                let chorusTap3Index = [];
                let chorusTap4Index = [];
                let chorusTap5Index = [];
                let chorusTap0End = [];
                let chorusTap1End = [];
                let chorusTap2End = [];
                let chorusTap3End = [];
                let chorusTap4End = [];
                let chorusTap5End = [];
                let chorusTap0Delta = [];
                let chorusTap1Delta = [];
                let chorusTap2Delta = [];
                let chorusTap3Delta = [];
                let chorusTap4Delta = [];
                let chorusTap5Delta = [];

                let chorusTap0Ratio = [];
                let chorusTap1Ratio = [];
                let chorusTap2Ratio = [];
                let chorusTap3Ratio = [];
                let chorusTap4Ratio = [];
                let chorusTap5Ratio = [];
                let chorusTap0A = [];
                let chorusTap0B = [];
                let chorusTap1A = [];
                let chorusTap1B = [];
                let chorusTap2A = [];
                let chorusTap2B = [];
                let chorusTap3A = [];
                let chorusTap3B = [];
                let chorusTap4A = [];
                let chorusTap4B = [];
                let chorusTap5A = [];
                let chorusTap5B = [];
                let chorusTap0 = [];
                let chorusTap1 = [];
                let chorusTap2 = [];
                let chorusTap3 = [];
                let chorusTap4 = [];
                let chorusTap5 = [];`),f&&(P+=`
                let echoMult = [];
                let echoMultDelta = [];

                let echoDelayLineL = [];
                let echoDelayLineR = [];
                let echoMask = [];

                let echoDelayPosL = [];
                let echoDelayPosR = [];
                let echoDelayOffsetStart = [];
                let echoDelayOffsetEnd   = [];
                let echoDelayOffsetRatio = [];
                let echoDelayOffsetRatioDelta = [];
                let echoPingPong = [];

                let echoShelfA1 = [];
                let echoShelfB0 = [];
                let echoShelfB1 = [];
                let echoShelfSampleL = [];
                let echoShelfSampleR = [];
                let echoShelfPrevInputL = [];
                let echoShelfPrevInputR = [];

                let echoNextInputL = [];
                let echoNextInputR = [];
                let echoTapStartIndexL = [];
                let echoTapStartIndexR = [];
                let echoTapEndIndexL   = [];
                let echoTapEndIndexR   = [];
                let echoTapStartL = [];
                let echoTapEndL   = [];
                let echoTapStartR = [];
                let echoTapEndR   = [];
                let echoTapL = [];
                let echoTapR = [];`),m&&(P+=`

                const reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.
                let reverbDelayLine = [];
                let reverbDelayPos = [];

                let reverb = [];
                let reverbDelta = [];

                let reverbShelfA1 = [];
                let reverbShelfB0 = [];
                let reverbShelfB1 = [];
                let reverbShelfSample0 = [];
                let reverbShelfSample1 = [];
                let reverbShelfSample2 = [];
                let reverbShelfSample3 = [];
                let reverbShelfPrevInput0 = [];
                let reverbShelfPrevInput1 = [];
                let reverbShelfPrevInput2 = [];
                let reverbShelfPrevInput3 = [];

                let reverbDelayPos1 = [];
                let reverbDelayPos2 = [];
                let reverbDelayPos3 = [];
                let reverbSample0 = [];
                let reverbSample1 = [];
                let reverbSample2 = [];
                let reverbSample3 = [];
                let reverbTemp0 = [];
                let reverbTemp1 = [];
                let reverbTemp2 = [];
                let reverbTemp3 = [];
                let reverbShelfInput0 = [];
                let reverbShelfInput1 = [];
                let reverbShelfInput2 = [];
                let reverbShelfInput3 = [];`),S&&(P+=`

                let ringModMix = [];
                let ringModMixDelta = [];
                let ringModPhase = [];
                let ringModPhaseDelta = [];
                let ringModPhaseDeltaScale = [];
                let ringModWaveformIndex = [];
                let ringModMixFade = [];
                let ringModMixFadeDelta = [];

                let ringModPulseWidth = [];

                let waveform = [];
                let waveformLength = [];
                let ringModOutputL = [];
                let ringModOutputR = [];
                let ringModMixF = [];
                `),v&&(P+=`

                const panningMask = synth.panningDelayBufferMask >>> 0;
                let panningDelayLineL = [];
                let panningDelayLineR = [];
                let panningDelayPos = [];
                let panningVolumeL      = [];
                let panningVolumeR      = [];
                let panningVolumeDeltaL = [];
                let panningVolumeDeltaR = [];
                let panningOffsetL      = [];
                let panningOffsetR      = [];
                let panningOffsetDeltaL = [];
                let panningOffsetDeltaR = [];
                let panningRatioL  = [];
                let panningRatioR  = [];
                let panningTapLA   = [];
                let panningTapLB   = [];
                let panningTapRA   = [];
                let panningTapRB   = [];
                let panningTapL    = [];
                let panningTapR    = [];`),l&&(P+=`

                let gain = [];
                let gainDelta = [];`),p&&(P+=`

                let granularWet = [];
                let granularMixDelta = [];
                let granularDry = [];
                let granularDelayLineL = [];
                let granularDelayLineR = [];
                let granularGrains = [];
                let granularGrainCount = [];
                let granularDelayLineLength = [];
                let granularDelayLineMask = [];
                let granularDelayLineIndex = [];
                let usesRandomGrainLocation = [];
                let computeGrains = [];
                let granularOutputL = [];
                let granularOutputR = [];
                `);for(let L=0;L<r.effects.length;L++){let E=r.effects[L];P+=`

                effectState = instrumentState.effects[`+L+`];
                effectIndex = `+L+`;
                `,p&&E.type==8?P+=`

                    granularWet[effectIndex] = effectState.granularMix;
                    granularMixDelta[effectIndex] = effectState.granularMixDelta;
                    granularDry[effectIndex] = 1.0 - granularWet[effectIndex];
                    granularDelayLineL[effectIndex] = effectState.granularDelayLineL;
                    granularDelayLineR[effectIndex] = effectState.granularDelayLineR;
                    granularGrains[effectIndex] = effectState.granularGrains;
                    granularGrainCount[effectIndex] = effectState.granularGrainsLength;
                    granularDelayLineLength[effectIndex] = granularDelayLineL.length;
                    granularDelayLineMask[effectIndex] = granularDelayLineLength[effectIndex] - 1;
                    granularDelayLineIndex[effectIndex] = effectState.granularDelayLineIndex;
                    usesRandomGrainLocation[effectIndex] = effectState.usesRandomGrainLocation;
                    computeGrains[effectIndex] = effectState.computeGrains;
                    effectState.granularDelayLineDirty = true;
                    `:c&&E.type==3?P+=`

                    distortion[effectIndex] = effectState.distortion;
                    distortionDelta[effectIndex] = effectState.distortionDelta;
                    distortionDrive[effectIndex] = effectState.distortionDrive;
                    distortionDriveDelta[effectIndex] = effectState.distortionDriveDelta;
                    distortionReverse[effectIndex] = 1.0 - distortion[effectIndex];

                    distortionFractionalInputL1[effectIndex] = +effectState.distortionFractionalInputL1;
                    distortionFractionalInputL2[effectIndex] = +effectState.distortionFractionalInputL2;
                    distortionFractionalInputL3[effectIndex] = +effectState.distortionFractionalInputL3;
                    distortionFractionalInputR1[effectIndex] = +effectState.distortionFractionalInputR1;
                    distortionFractionalInputR2[effectIndex] = +effectState.distortionFractionalInputR2;
                    distortionFractionalInputR3[effectIndex] = +effectState.distortionFractionalInputR3;
                    distortionPrevInputL[effectIndex] = +effectState.distortionPrevInputL;
                    distortionPrevInputR[effectIndex] = +effectState.distortionPrevInputR;
                    distortionNextOutputL[effectIndex] = +effectState.distortionNextOutputL;
                    distortionNextOutputR[effectIndex] = +effectState.distortionNextOutputR;`:d&&E.type==4?P+=`

                    bitcrusherPrevInputL[effectIndex] = +effectState.bitcrusherPrevInputL;
                    bitcrusherPrevInputR[effectIndex] = +effectState.bitcrusherPrevInputR;
                    bitcrusherCurrentOutputL[effectIndex] = +effectState.bitcrusherCurrentOutputL;
                    bitcrusherCurrentOutputR[effectIndex] = +effectState.bitcrusherCurrentOutputR;
                    bitcrusherPhase[effectIndex] = +effectState.bitcrusherPhase;
                    bitcrusherPhaseDelta[effectIndex] = +effectState.bitcrusherPhaseDelta;
                    bitcrusherPhaseDeltaScale[effectIndex] = +effectState.bitcrusherPhaseDeltaScale;
                    bitcrusherScale[effectIndex] = +effectState.bitcrusherScale;
                    bitcrusherScaleScale[effectIndex] = +effectState.bitcrusherScaleScale;
                    bitcrusherFoldLevel[effectIndex] = +effectState.bitcrusherFoldLevel;
                    bitcrusherFoldLevelScale[effectIndex] = +effectState.bitcrusherFoldLevelScale;`:S&&E.type==7?P+=`

                    ringModMix[effectIndex] = +effectState.ringModMix;
                    ringModMixDelta[effectIndex] = +effectState.ringModMixDelta;
                    ringModPhase[effectIndex] = +effectState.ringModPhase;
                    ringModPhaseDelta[effectIndex] = +effectState.ringModPhaseDelta;
                    ringModPhaseDeltaScale[effectIndex] = +effectState.ringModPhaseDeltaScale;
                    ringModWaveformIndex[effectIndex] = +effectState.ringModWaveformIndex;
                    ringModMixFade[effectIndex] = +effectState.ringModMixFade;
                    ringModMixFadeDelta[effectIndex] = +effectState.ringModMixFadeDelta;

                    ringModPulseWidth[effectIndex] = +effectState.ringModPulseWidth;

                    waveform[effectIndex] = Config.operatorWaves[ringModWaveformIndex[effectIndex]].samples;
                    if (ringModWaveformIndex[effectIndex] == 2) {
                        waveform[effectIndex] = Synth.getOperatorWave(ringModWaveformIndex[effectIndex], ringModPulseWidth[effectIndex]).samples;
                    }
                    waveformLength[effectIndex] = waveform[effectIndex].length - 1;
                    `:y&&E.type==5?(P+=`

                    filtersL[effectIndex] = effectState.eqFiltersL;
                    filtersR[effectIndex] = effectState.eqFiltersR;
                    filterCount[effectIndex] = effectState.eqFilterCount|0;
                    initialFilterInputL1[effectIndex] = +effectState.initialEqFilterInputL1;
                    initialFilterInputR1[effectIndex] = +effectState.initialEqFilterInputR1;
                    initialFilterInputL2[effectIndex] = +effectState.initialEqFilterInputL2;
                    initialFilterInputR2[effectIndex] = +effectState.initialEqFilterInputR2;`,P+=`

                    eqFilterVolume[effectIndex] = +effectState.eqFilterVolume;
                    eqFilterVolumeDelta[effectIndex] = +effectState.eqFilterVolumeDelta;`):v&&E.type==2?P+=`

                    panningDelayLineL[effectIndex] = effectState.panningDelayLineL;
                    panningDelayLineR[effectIndex] = effectState.panningDelayLineR;
                    panningDelayPos[effectIndex] = effectState.panningDelayPos & panningMask;
                    panningVolumeL[effectIndex]      = +effectState.panningVolumeL;
                    panningVolumeR[effectIndex]      = +effectState.panningVolumeR;
                    panningVolumeDeltaL[effectIndex] = +effectState.panningVolumeDeltaL;
                    panningVolumeDeltaR[effectIndex] = +effectState.panningVolumeDeltaR;
                    panningOffsetL[effectIndex]      = +effectState.panningOffsetL;
                    panningOffsetR[effectIndex]      = +effectState.panningOffsetR;
                    panningOffsetDeltaL[effectIndex] = 1.0 - effectState.panningOffsetDeltaL;
                    panningOffsetDeltaR[effectIndex] = 1.0 - effectState.panningOffsetDeltaR;`:h&&E.type==10?P+=`

                    flangerDelayLineL[effectIndex] = effectState.flangerDelayLineL;
                    flangerDelayLineR[effectIndex] = effectState.flangerDelayLineR;
                    flangerDelayPos[effectIndex] = effectState.flangerDelayPos & flangerMask;

                    flanger[effectIndex] = effectState.flanger;
                    flangerDelta[effectIndex] = effectState.flangerDelta;
                    flangerSpeed[effectIndex] = effectState.flangerSpeed;
                    flangerSpeedDelta[effectIndex] = effectState.flangerSpeedDelta;
                    flangerDepth[effectIndex] = effectState.flangerDepth;
                    flangerDepthDelta[effectIndex] = effectState.flangerDepthDelta;
                    flangerFeedback[effectIndex] = effectState.flangerFeedback;
                    flangerFeedbackDelta[effectIndex] = effectState.flangerFeedbackDelta;

                    flangerPhase[effectIndex] = effectState.flangerPhase % (Math.PI * 2.0);
                    flangerRange[effectIndex] = flangerDepth[effectIndex];

                    flangerTapIndexL[effectIndex] = flangerDelayPos[effectIndex] - flangerRange[effectIndex] - flangerRange[effectIndex] * Math.cos(flangerPhase[effectIndex]);
                    flangerTapIndexR[effectIndex] = flangerDelayPos[effectIndex] - flangerRange[effectIndex] - flangerRange[effectIndex] * Math.sin(flangerPhase[effectIndex]);
                    flangerPhase[effectIndex] += flangerSpeed[effectIndex] * Config.flangerPeriodMult * runLength;
                    flangerTapEndL[effectIndex] = flangerDelayPos[effectIndex] - flangerRange[effectIndex] - flangerRange[effectIndex] * Math.cos(flangerPhase[effectIndex]) + runLength;
                    flangerTapEndR[effectIndex] = flangerDelayPos[effectIndex] - flangerRange[effectIndex] - flangerRange[effectIndex] * Math.sin(flangerPhase[effectIndex]) + runLength;
                    flangerTapDeltaL[effectIndex] = (flangerTapEndL[effectIndex] - flangerTapIndexL[effectIndex]) / runLength;
                    flangerTapDeltaR[effectIndex] = (flangerTapEndR[effectIndex] - flangerTapIndexR[effectIndex]) / runLength;`:g&&E.type==1?P+=`

                    chorusDelayLineL[effectIndex] = effectState.chorusDelayLineL;
                    chorusDelayLineR[effectIndex] = effectState.chorusDelayLineR;
                    effectState.chorusDelayLineDirty = true;
                    chorusDelayPos[effectIndex] = effectState.chorusDelayPos & chorusMask;

                    chorusVoiceMult[effectIndex] = +effectState.chorusVoiceMult;
                    chorusVoiceMultDelta[effectIndex] = +effectState.chorusVoiceMultDelta;
                    chorusCombinedMult[effectIndex] = +effectState.chorusCombinedMult;
                    chorusCombinedMultDelta[effectIndex] = +effectState.chorusCombinedMultDelta;

                    chorusPhase[effectIndex] = effectState.chorusPhase % (Math.PI * 2.0);
                    chorusTap0Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset0 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][0]);
                    chorusTap1Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset1 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][1]);
                    chorusTap2Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset2 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][2]);
                    chorusTap3Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset3 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][0]);
                    chorusTap4Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset4 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][1]);
                    chorusTap5Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset5 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][2]);
                    chorusPhase[effectIndex] += chorusAngle * runLength;
                    chorusTap0End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset0 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][0]) + runLength;
                    chorusTap1End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset1 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][1]) + runLength;
                    chorusTap2End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset2 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][2]) + runLength;
                    chorusTap3End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset3 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][0]) + runLength;
                    chorusTap4End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset4 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][1]) + runLength;
                    chorusTap5End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset5 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][2]) + runLength;
                    chorusTap0Delta[effectIndex] = (chorusTap0End[effectIndex] - chorusTap0Index[effectIndex]) / runLength;
                    chorusTap1Delta[effectIndex] = (chorusTap1End[effectIndex] - chorusTap1Index[effectIndex]) / runLength;
                    chorusTap2Delta[effectIndex] = (chorusTap2End[effectIndex] - chorusTap2Index[effectIndex]) / runLength;
                    chorusTap3Delta[effectIndex] = (chorusTap3End[effectIndex] - chorusTap3Index[effectIndex]) / runLength;
                    chorusTap4Delta[effectIndex] = (chorusTap4End[effectIndex] - chorusTap4Index[effectIndex]) / runLength;
                    chorusTap5Delta[effectIndex] = (chorusTap5End[effectIndex] - chorusTap5Index[effectIndex]) / runLength;`:f&&E.type==6?P+=`
                    echoMult[effectIndex] = +effectState.echoMult;
                    echoMultDelta[effectIndex] = +effectState.echoMultDelta;

                    echoDelayLineL[effectIndex] = effectState.echoDelayLineL;
                    echoDelayLineR[effectIndex] = effectState.echoDelayLineR;
                    echoMask[effectIndex] = (echoDelayLineL[effectIndex].length - 1) >>> 0;
                    effectState.echoDelayLineDirty = true;

                    echoDelayPosL[effectIndex] = effectState.echoDelayPosL & echoMask[effectIndex];
                    echoDelayPosR[effectIndex] = effectState.echoDelayPosR & echoMask[effectIndex];
                    echoDelayOffsetStart[effectIndex] = (echoDelayLineL[effectIndex].length - effectState.echoDelayOffsetStart) & echoMask[effectIndex];
                    echoDelayOffsetEnd[effectIndex]   = (echoDelayLineL[effectIndex].length - effectState.echoDelayOffsetEnd) & echoMask[effectIndex];
                    echoDelayOffsetRatio[effectIndex] = +effectState.echoDelayOffsetRatio;
                    echoDelayOffsetRatioDelta[effectIndex] = +effectState.echoDelayOffsetRatioDelta;
                    echoPingPong[effectIndex] = effectState.echoPingPong;

                    echoShelfA1[effectIndex] = +effectState.echoShelfA1;
                    echoShelfB0[effectIndex] = +effectState.echoShelfB0;
                    echoShelfB1[effectIndex] = +effectState.echoShelfB1;
                    echoShelfSampleL[effectIndex] = +effectState.echoShelfSampleL;
                    echoShelfSampleR[effectIndex] = +effectState.echoShelfSampleR;
                    echoShelfPrevInputL[effectIndex] = +effectState.echoShelfPrevInputL;
                    echoShelfPrevInputR[effectIndex] = +effectState.echoShelfPrevInputR;`:m&&E.type==0?P+=`

                    reverbDelayLine[effectIndex] = effectState.reverbDelayLine;
                    effectState.reverbDelayLineDirty = true;
                    reverbDelayPos[effectIndex] = effectState.reverbDelayPos & reverbMask;

                    reverb[effectIndex] = +effectState.reverbMult;
                    reverbDelta[effectIndex] = +effectState.reverbMultDelta;

                    reverbShelfA1[effectIndex] = +effectState.reverbShelfA1;
                    reverbShelfB0[effectIndex] = +effectState.reverbShelfB0;
                    reverbShelfB1[effectIndex] = +effectState.reverbShelfB1;
                    reverbShelfSample0[effectIndex] = +effectState.reverbShelfSample0;
                    reverbShelfSample1[effectIndex] = +effectState.reverbShelfSample1;
                    reverbShelfSample2[effectIndex] = +effectState.reverbShelfSample2;
                    reverbShelfSample3[effectIndex] = +effectState.reverbShelfSample3;
                    reverbShelfPrevInput0[effectIndex] = +effectState.reverbShelfPrevInput0;
                    reverbShelfPrevInput1[effectIndex] = +effectState.reverbShelfPrevInput1;
                    reverbShelfPrevInput2[effectIndex] = +effectState.reverbShelfPrevInput2;
                    reverbShelfPrevInput3[effectIndex] = +effectState.reverbShelfPrevInput3;`:l&&E.type==9&&(P+=`

                    gain[effectIndex] = +effectState.gain;
                    gainDelta[effectIndex] = +effectState.gainDelta;`)}x?P+=`

                const stopIndex = bufferIndex + runLength;
                for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {
                    let sample = 0.0;
                    let sampleL = tempInstrumentSampleBufferL[sampleIndex];
                    let sampleR = tempInstrumentSampleBufferR[sampleIndex];
                    tempInstrumentSampleBufferL[sampleIndex] = 0.0;
                    tempInstrumentSampleBufferR[sampleIndex] = 0.0;`:P+=`

                const stopIndex = bufferIndex + runLength;
                for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {
                    let sampleL = tempInstrumentSampleBufferL[sampleIndex];
                    let sampleR = tempInstrumentSampleBufferL[sampleIndex];
                    tempInstrumentSampleBufferL[sampleIndex] = 0.0;
                    tempInstrumentSampleBufferR[sampleIndex] = 0.0;`;for(let L=0;L<r.effects.length;L++){let E=r.effects[L];P+=`

                effectIndex = `+L+`;
                `,d&&E.type==4?P+=`

                    bitcrusherPhase[effectIndex] += bitcrusherPhaseDelta[effectIndex];
                    if (bitcrusherPhase[effectIndex] < 1.0) {
                        bitcrusherPrevInputL[effectIndex] = sampleL;
                        bitcrusherPrevInputR[effectIndex] = sampleR;
                        sampleL = bitcrusherCurrentOutputL[effectIndex];
                        sampleR = bitcrusherCurrentOutputR[effectIndex];
                    } else {
                        bitcrusherPhase[effectIndex] = bitcrusherPhase[effectIndex] % 1.0;

                        lerpedInputL[effectIndex] = sampleL + (bitcrusherPrevInputL[effectIndex] - sampleL) * (bitcrusherPhase[effectIndex] / bitcrusherPhaseDelta[effectIndex]);
                        lerpedInputR[effectIndex] = sampleR + (bitcrusherPrevInputR[effectIndex] - sampleR) * (bitcrusherPhase[effectIndex] / bitcrusherPhaseDelta[effectIndex]);
                        bitcrusherPrevInputL[effectIndex] = sampleL;
                        bitcrusherPrevInputR[effectIndex] = sampleR;

                        bitcrusherWrapLevel[effectIndex] = bitcrusherFoldLevel[effectIndex] * 4.0;
                        wrappedSampleL[effectIndex] = (((lerpedInputL[effectIndex] + bitcrusherFoldLevel[effectIndex]) % bitcrusherWrapLevel[effectIndex]) + bitcrusherWrapLevel[effectIndex]) % bitcrusherWrapLevel[effectIndex];
                        wrappedSampleR[effectIndex] = (((lerpedInputR[effectIndex] + bitcrusherFoldLevel[effectIndex]) % bitcrusherWrapLevel[effectIndex]) + bitcrusherWrapLevel[effectIndex]) % bitcrusherWrapLevel[effectIndex];
                        foldedSampleL[effectIndex] = bitcrusherFoldLevel[effectIndex] - Math.abs(bitcrusherFoldLevel[effectIndex] * 2.0 - wrappedSampleL[effectIndex]);
                        foldedSampleR[effectIndex] = bitcrusherFoldLevel[effectIndex] - Math.abs(bitcrusherFoldLevel[effectIndex] * 2.0 - wrappedSampleR[effectIndex]);
                        scaledSampleL[effectIndex] = foldedSampleL[effectIndex] / bitcrusherScale[effectIndex];
                        scaledSampleR[effectIndex] = foldedSampleR[effectIndex] / bitcrusherScale[effectIndex];
                        oldValueL[effectIndex] = bitcrusherCurrentOutputL[effectIndex];
                        oldValueR[effectIndex] = bitcrusherCurrentOutputR[effectIndex];
                        newValueL[effectIndex] = (((scaledSampleL[effectIndex] > 0 ? scaledSampleL[effectIndex] + 1 : scaledSampleL[effectIndex])|0)-.5) * bitcrusherScale[effectIndex];
                        newValueR[effectIndex] = (((scaledSampleR[effectIndex] > 0 ? scaledSampleR[effectIndex] + 1 : scaledSampleR[effectIndex])|0)-.5) * bitcrusherScale[effectIndex];

                        sampleL = oldValueL[effectIndex] + (newValueL[effectIndex] - oldValueL[effectIndex]) * (bitcrusherPhase[effectIndex] / bitcrusherPhaseDelta[effectIndex]);
                        sampleR = oldValueR[effectIndex] + (newValueR[effectIndex] - oldValueR[effectIndex]) * (bitcrusherPhase[effectIndex] / bitcrusherPhaseDelta[effectIndex]);
                        bitcrusherCurrentOutputL[effectIndex] = newValueL[effectIndex];
                        bitcrusherCurrentOutputR[effectIndex] = newValueR[effectIndex];
                    }
                    bitcrusherPhaseDelta[effectIndex] *= bitcrusherPhaseDeltaScale[effectIndex];
                    bitcrusherScale[effectIndex] *= bitcrusherScaleScale[effectIndex];
                    bitcrusherFoldLevel[effectIndex] *= bitcrusherFoldLevelScale[effectIndex];`:c&&E.type==3?P+=`

                    distortionNextInputL[effectIndex] = sampleL * distortionDrive[effectIndex];
                    distortionNextInputR[effectIndex] = sampleR * distortionDrive[effectIndex];
                    sampleL = distortionNextOutputL[effectIndex];
                    sampleR = distortionNextOutputR[effectIndex];
                    distortionNextOutputL[effectIndex] = distortionNextInputL[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionNextInputL[effectIndex]) + distortion[effectIndex]);
                    distortionNextOutputR[effectIndex] = distortionNextInputR[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionNextInputR[effectIndex]) + distortion[effectIndex]);
                    distortionFractionalInputL1[effectIndex] = distortionFractionalDelayG1 * distortionNextInputL[effectIndex] + distortionPrevInputL[effectIndex] - distortionFractionalDelayG1 * distortionFractionalInputL1[effectIndex];
                    distortionFractionalInputL2[effectIndex] = distortionFractionalDelayG2 * distortionNextInputL[effectIndex] + distortionPrevInputL[effectIndex] - distortionFractionalDelayG2 * distortionFractionalInputL2[effectIndex];
                    distortionFractionalInputL3[effectIndex] = distortionFractionalDelayG3 * distortionNextInputL[effectIndex] + distortionPrevInputL[effectIndex] - distortionFractionalDelayG3 * distortionFractionalInputL3[effectIndex];
                    distortionFractionalInputR1[effectIndex] = distortionFractionalDelayG1 * distortionNextInputR[effectIndex] + distortionPrevInputR[effectIndex] - distortionFractionalDelayG1 * distortionFractionalInputR1[effectIndex];
                    distortionFractionalInputR2[effectIndex] = distortionFractionalDelayG2 * distortionNextInputR[effectIndex] + distortionPrevInputR[effectIndex] - distortionFractionalDelayG2 * distortionFractionalInputR2[effectIndex];
                    distortionFractionalInputR3[effectIndex] = distortionFractionalDelayG3 * distortionNextInputR[effectIndex] + distortionPrevInputR[effectIndex] - distortionFractionalDelayG3 * distortionFractionalInputR3[effectIndex];
                    distortionOutputL1[effectIndex] = distortionFractionalInputL1[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputL1[effectIndex]) + distortion[effectIndex]);
                    distortionOutputL2[effectIndex] = distortionFractionalInputL2[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputL2[effectIndex]) + distortion[effectIndex]);
                    distortionOutputL3[effectIndex] = distortionFractionalInputL3[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputL3[effectIndex]) + distortion[effectIndex]);
                    distortionOutputR1[effectIndex] = distortionFractionalInputR1[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputR1[effectIndex]) + distortion[effectIndex]);
                    distortionOutputR2[effectIndex] = distortionFractionalInputR2[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputR2[effectIndex]) + distortion[effectIndex]);
                    distortionOutputR3[effectIndex] = distortionFractionalInputR3[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputR3[effectIndex]) + distortion[effectIndex]);
                    distortionNextOutputL[effectIndex] += distortionOutputL1[effectIndex] * distortionNextOutputWeight1 + distortionOutputL2[effectIndex] * distortionNextOutputWeight2 + distortionOutputL3[effectIndex] * distortionNextOutputWeight3;
                    distortionNextOutputR[effectIndex] += distortionOutputR1[effectIndex] * distortionNextOutputWeight1 + distortionOutputR2[effectIndex] * distortionNextOutputWeight2 + distortionOutputR3[effectIndex] * distortionNextOutputWeight3;
                    sampleL += distortionOutputL1[effectIndex] * distortionPrevOutputWeight1 + distortionOutputL2[effectIndex] * distortionPrevOutputWeight2 + distortionOutputL3[effectIndex] * distortionPrevOutputWeight3;
                    sampleR += distortionOutputR1[effectIndex] * distortionPrevOutputWeight1 + distortionOutputR2[effectIndex] * distortionPrevOutputWeight2 + distortionOutputR3[effectIndex] * distortionPrevOutputWeight3;
                    sampleL *= distortionOversampleCompensation;
                    sampleR *= distortionOversampleCompensation;
                    distortionPrevInputL[effectIndex] = distortionNextInputL[effectIndex];
                    distortionPrevInputR[effectIndex] = distortionNextInputR[effectIndex];
                    distortion[effectIndex] += distortionDelta[effectIndex];
                    distortionDrive[effectIndex] += distortionDriveDelta[effectIndex];`:l&&E.type==9?P+=`

                    sampleL *= gain[effectIndex];
                    sampleR *= gain[effectIndex];
                    `:v&&E.type==2?(P+=`

                    panningDelayLineL[effectIndex][panningDelayPos[effectIndex]] = sampleL;
                    panningDelayLineR[effectIndex][panningDelayPos[effectIndex]] = sampleR;
                    panningRatioL[effectIndex]  = panningOffsetL[effectIndex] % 1;
                    panningRatioR[effectIndex]  = panningOffsetR[effectIndex] % 1;
                    panningTapLA[effectIndex]   = panningDelayLineL[effectIndex][(panningOffsetL[effectIndex]) & panningMask];
                    panningTapLB[effectIndex]   = panningDelayLineL[effectIndex][(panningOffsetL[effectIndex] + 1) & panningMask];
                    panningTapRA[effectIndex]   = panningDelayLineR[effectIndex][(panningOffsetR[effectIndex]) & panningMask];
                    panningTapRB[effectIndex]   = panningDelayLineR[effectIndex][(panningOffsetR[effectIndex] + 1) & panningMask];
                    panningTapL[effectIndex]    = panningTapLA[effectIndex] + (panningTapLB[effectIndex] - panningTapLA[effectIndex]) * panningRatioL[effectIndex];
                    panningTapR[effectIndex]    = panningTapRA[effectIndex] + (panningTapRB[effectIndex] - panningTapRA[effectIndex]) * panningRatioR[effectIndex];
                    `,E.panningMode==0?P+=`

                    sampleL = panningTapL[effectIndex] * panningVolumeL[effectIndex];
                    sampleR = panningTapR[effectIndex] * panningVolumeR[effectIndex];
                    panningDelayPos[effectIndex] = (panningDelayPos[effectIndex] + 1) & panningMask;
                    panningVolumeL[effectIndex] += panningVolumeDeltaL[effectIndex];
                    panningVolumeR[effectIndex] += panningVolumeDeltaR[effectIndex];
                    panningOffsetL[effectIndex] += panningOffsetDeltaL[effectIndex];
                    panningOffsetR[effectIndex] += panningOffsetDeltaR[effectIndex];`:E.panningMode==1?P+=`

                    sampleL = panningTapL[effectIndex] * panningVolumeL[effectIndex] + Math.max(0, panningVolumeL[effectIndex] - panningVolumeR[effectIndex]) * panningTapR[effectIndex];
                    sampleR = panningTapR[effectIndex] * panningVolumeR[effectIndex] + Math.max(0, panningVolumeR[effectIndex] - panningVolumeL[effectIndex]) * panningTapL[effectIndex];
                    panningDelayPos[effectIndex] = (panningDelayPos[effectIndex] + 1) & panningMask;
                    panningVolumeL[effectIndex] += panningVolumeDeltaL[effectIndex];
                    panningVolumeR[effectIndex] += panningVolumeDeltaR[effectIndex];
                    panningOffsetL[effectIndex] += panningOffsetDeltaL[effectIndex];
                    panningOffsetR[effectIndex] += panningOffsetDeltaR[effectIndex];`:E.panningMode==2&&(P+=`

                    sampleL = (panningTapL[effectIndex] + panningTapR[effectIndex]) / 2.0
                    sampleR = sampleL
                    sampleL *= panningVolumeL[effectIndex];
                    sampleR *= panningVolumeR[effectIndex];
                    panningDelayPos[effectIndex] = (panningDelayPos[effectIndex] + 1) & panningMask;
                    panningVolumeL[effectIndex] += panningVolumeDeltaL[effectIndex];
                    panningVolumeR[effectIndex] += panningVolumeDeltaR[effectIndex];
                    panningOffsetL[effectIndex] += panningOffsetDeltaL[effectIndex];
                    panningOffsetR[effectIndex] += panningOffsetDeltaR[effectIndex];`)):h&&E.type==10?P+=`

                    flangerTapRatioL[effectIndex] = flangerTapIndexL[effectIndex] % 1;
                    flangerTapRatioR[effectIndex] = flangerTapIndexR[effectIndex] % 1;
                    flangerTapLA[effectIndex] = flangerDelayLineL[effectIndex][(flangerTapIndexL[effectIndex]) & flangerMask];
                    flangerTapLB[effectIndex] = flangerDelayLineL[effectIndex][(flangerTapIndexL[effectIndex] + 1) & flangerMask];
                    flangerTapRA[effectIndex] = flangerDelayLineR[effectIndex][(flangerTapIndexR[effectIndex]) & flangerMask];
                    flangerTapRB[effectIndex] = flangerDelayLineR[effectIndex][(flangerTapIndexR[effectIndex] + 1) & flangerMask];
                    flangerTapL[effectIndex] = flangerTapLA[effectIndex] + (flangerTapLB[effectIndex] - flangerTapLA[effectIndex]) * flangerTapRatioL[effectIndex];
                    flangerTapR[effectIndex] = flangerTapRA[effectIndex] + (flangerTapRB[effectIndex] - flangerTapRA[effectIndex]) * flangerTapRatioR[effectIndex];

                    flangerDelayLineL[effectIndex][flangerDelayPos[effectIndex]] = sampleL * delayInputMult;
                    flangerDelayLineR[effectIndex][flangerDelayPos[effectIndex]] = sampleR * delayInputMult;
                    sampleL = (sampleL + flanger[effectIndex] * flangerTapL[effectIndex]) * (1 - flanger[effectIndex] * Config.flangerVolumeMult);
                    sampleR = (sampleR + flanger[effectIndex] * flangerTapR[effectIndex]) * (1 - flanger[effectIndex] * Config.flangerVolumeMult);
                    flangerDelayLineL[effectIndex][flangerDelayPos[effectIndex]] = flangerDelayLineL[effectIndex][flangerDelayPos[effectIndex]] * (1 - flangerFeedback[effectIndex]) - sampleL * flangerFeedback[effectIndex];
                    flangerDelayLineR[effectIndex][flangerDelayPos[effectIndex]] = flangerDelayLineR[effectIndex][flangerDelayPos[effectIndex]] * (1 - flangerFeedback[effectIndex]) - sampleR * flangerFeedback[effectIndex];
                    flangerDelayPos[effectIndex] = (flangerDelayPos[effectIndex] + 1) & flangerMask;
                    flangerTapIndexL[effectIndex] += flangerTapDeltaL[effectIndex];
                    flangerTapIndexR[effectIndex] += flangerTapDeltaR[effectIndex];

                    flanger[effectIndex] += flangerDelta[effectIndex];
                    flangerSpeed[effectIndex] += flangerSpeedDelta[effectIndex];
                    flangerDepth[effectIndex] += flangerDepthDelta[effectIndex];
                    flangerFeedback[effectIndex] += flangerFeedbackDelta[effectIndex];`:g&&E.type==1?P+=`

                    chorusTap0Ratio[effectIndex] = chorusTap0Index[effectIndex] % 1;
                    chorusTap1Ratio[effectIndex] = chorusTap1Index[effectIndex] % 1;
                    chorusTap2Ratio[effectIndex] = chorusTap2Index[effectIndex] % 1;
                    chorusTap3Ratio[effectIndex] = chorusTap3Index[effectIndex] % 1;
                    chorusTap4Ratio[effectIndex] = chorusTap4Index[effectIndex] % 1;
                    chorusTap5Ratio[effectIndex] = chorusTap5Index[effectIndex] % 1;
                    chorusTap0A[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap0Index[effectIndex]) & chorusMask];
                    chorusTap0B[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap0Index[effectIndex] + 1) & chorusMask];
                    chorusTap1A[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap1Index[effectIndex]) & chorusMask];
                    chorusTap1B[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap1Index[effectIndex] + 1) & chorusMask];
                    chorusTap2A[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap2Index[effectIndex]) & chorusMask];
                    chorusTap2B[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap2Index[effectIndex] + 1) & chorusMask];
                    chorusTap3A[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap3Index[effectIndex]) & chorusMask];
                    chorusTap3B[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap3Index[effectIndex] + 1) & chorusMask];
                    chorusTap4A[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap4Index[effectIndex]) & chorusMask];
                    chorusTap4B[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap4Index[effectIndex] + 1) & chorusMask];
                    chorusTap5A[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap5Index[effectIndex]) & chorusMask];
                    chorusTap5B[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap5Index[effectIndex] + 1) & chorusMask];
                    chorusTap0[effectIndex] = chorusTap0A[effectIndex] + (chorusTap0B[effectIndex] - chorusTap0A[effectIndex]) * chorusTap0Ratio[effectIndex];
                    chorusTap1[effectIndex] = chorusTap1A[effectIndex] + (chorusTap1B[effectIndex] - chorusTap1A[effectIndex]) * chorusTap1Ratio[effectIndex];
                    chorusTap2[effectIndex] = chorusTap2A[effectIndex] + (chorusTap2B[effectIndex] - chorusTap2A[effectIndex]) * chorusTap2Ratio[effectIndex];
                    chorusTap3[effectIndex] = chorusTap3A[effectIndex] + (chorusTap3B[effectIndex] - chorusTap3A[effectIndex]) * chorusTap3Ratio[effectIndex];
                    chorusTap4[effectIndex] = chorusTap4A[effectIndex] + (chorusTap4B[effectIndex] - chorusTap4A[effectIndex]) * chorusTap4Ratio[effectIndex];
                    chorusTap5[effectIndex] = chorusTap5A[effectIndex] + (chorusTap5B[effectIndex] - chorusTap5A[effectIndex]) * chorusTap5Ratio[effectIndex];
                    chorusDelayLineL[effectIndex][chorusDelayPos[effectIndex]] = sampleL * delayInputMult;
                    chorusDelayLineR[effectIndex][chorusDelayPos[effectIndex]] = sampleR * delayInputMult;
                    sampleL = chorusCombinedMult[effectIndex] * (sampleL + chorusVoiceMult[effectIndex] * (chorusTap1[effectIndex] - chorusTap0[effectIndex] - chorusTap2[effectIndex]));
                    sampleR = chorusCombinedMult[effectIndex] * (sampleR + chorusVoiceMult[effectIndex] * (chorusTap4[effectIndex] - chorusTap3[effectIndex] - chorusTap5[effectIndex]));
                    chorusDelayPos[effectIndex] = (chorusDelayPos[effectIndex] + 1) & chorusMask;
                    chorusTap0Index[effectIndex] += chorusTap0Delta[effectIndex];
                    chorusTap1Index[effectIndex] += chorusTap1Delta[effectIndex];
                    chorusTap2Index[effectIndex] += chorusTap2Delta[effectIndex];
                    chorusTap3Index[effectIndex] += chorusTap3Delta[effectIndex];
                    chorusTap4Index[effectIndex] += chorusTap4Delta[effectIndex];
                    chorusTap5Index[effectIndex] += chorusTap5Delta[effectIndex];
                    chorusVoiceMult[effectIndex] += chorusVoiceMultDelta[effectIndex];
                    chorusCombinedMult[effectIndex] += chorusCombinedMultDelta[effectIndex];`:f&&E.type==6?P+=`

                    echoNextInputL[effectIndex] = (sampleL + sampleR) / 2;
                    echoNextInputR[effectIndex] = (sampleL + sampleR) / 2;
                    echoTapStartIndexL[effectIndex] = (echoDelayPosL[effectIndex] + echoDelayOffsetStart[effectIndex]) & echoMask[effectIndex];
                    echoTapStartIndexR[effectIndex] = (echoDelayPosR[effectIndex] + echoDelayOffsetStart[effectIndex]) & echoMask[effectIndex];
                    echoTapEndIndexL[effectIndex]   = (echoDelayPosL[effectIndex] + echoDelayOffsetEnd[effectIndex]) & echoMask[effectIndex];
                    echoTapEndIndexR[effectIndex]   = (echoDelayPosR[effectIndex] + echoDelayOffsetEnd[effectIndex]) & echoMask[effectIndex];
                    echoTapStartL[effectIndex] = echoDelayLineL[effectIndex][echoTapStartIndexL[effectIndex]];
                    echoTapEndL[effectIndex]   = echoDelayLineL[effectIndex][echoTapEndIndexL[effectIndex]];
                    echoTapStartR[effectIndex] = echoDelayLineR[effectIndex][echoTapStartIndexR[effectIndex]];
                    echoTapEndR[effectIndex]   = echoDelayLineR[effectIndex][echoTapEndIndexR[effectIndex]];
                    echoTapL[effectIndex] = (echoTapStartL[effectIndex] + (echoTapEndL[effectIndex] - echoTapStartL[effectIndex]) * echoDelayOffsetRatio[effectIndex]) * echoMult[effectIndex];
                    echoTapR[effectIndex] = (echoTapStartR[effectIndex] + (echoTapEndR[effectIndex] - echoTapStartR[effectIndex]) * echoDelayOffsetRatio[effectIndex]) * echoMult[effectIndex];

                    echoShelfSampleL[effectIndex] = echoShelfB0[effectIndex] * echoTapL[effectIndex] + echoShelfB1[effectIndex] * echoShelfPrevInputL[effectIndex] - echoShelfA1[effectIndex] * echoShelfSampleL[effectIndex];
                    echoShelfSampleR[effectIndex] = echoShelfB0[effectIndex] * echoTapR[effectIndex] + echoShelfB1[effectIndex] * echoShelfPrevInputR[effectIndex] - echoShelfA1[effectIndex] * echoShelfSampleR[effectIndex];
                    echoShelfPrevInputL[effectIndex] = echoTapL[effectIndex];
                    echoShelfPrevInputR[effectIndex] = echoTapR[effectIndex];
                    sampleL += echoShelfSampleL[effectIndex];
                    sampleR += echoShelfSampleR[effectIndex];

                    echoDelayLineL[effectIndex][echoDelayPosL[effectIndex]] = (sampleL * (1 - Math.abs(echoPingPong[effectIndex])) + (echoNextInputL[effectIndex] * Math.max(0, echoPingPong[effectIndex]) + echoShelfSampleR[effectIndex]) * Math.abs(echoPingPong[effectIndex])) * delayInputMult;
                    echoDelayLineR[effectIndex][echoDelayPosR[effectIndex]] = (sampleR * (1 - Math.abs(echoPingPong[effectIndex])) + (echoNextInputR[effectIndex] * Math.max(0, -echoPingPong[effectIndex]) + echoShelfSampleL[effectIndex]) * Math.abs(echoPingPong[effectIndex])) * delayInputMult;
                    echoDelayPosL[effectIndex] = (echoDelayPosL[effectIndex] + 1) & echoMask[effectIndex];
                    echoDelayPosR[effectIndex] = (echoDelayPosR[effectIndex] + 1) & echoMask[effectIndex];
                    echoDelayOffsetRatio[effectIndex] += echoDelayOffsetRatioDelta[effectIndex];
                    echoMult[effectIndex] += echoMultDelta[effectIndex];
                    `:m&&E.type==0?P+=`

                    // Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.
                    // good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268
                    // Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14
                    // Buffer offsets: 3041    -> 6426   -> 10907 -> 16384
                    reverbDelayPos1[effectIndex] = (reverbDelayPos[effectIndex] +  3041) & reverbMask;
                    reverbDelayPos2[effectIndex] = (reverbDelayPos[effectIndex] +  6426) & reverbMask;
                    reverbDelayPos3[effectIndex] = (reverbDelayPos[effectIndex] + 10907) & reverbMask;
                    reverbSample0[effectIndex] = (reverbDelayLine[effectIndex][reverbDelayPos[effectIndex]]);
                    reverbSample1[effectIndex] = reverbDelayLine[effectIndex][reverbDelayPos1[effectIndex]];
                    reverbSample2[effectIndex] = reverbDelayLine[effectIndex][reverbDelayPos2[effectIndex]];
                    reverbSample3[effectIndex] = reverbDelayLine[effectIndex][reverbDelayPos3[effectIndex]];
                    reverbTemp0[effectIndex] = -(reverbSample0[effectIndex] + sampleL) + reverbSample1[effectIndex];
                    reverbTemp1[effectIndex] = -(reverbSample0[effectIndex] + sampleR) - reverbSample1[effectIndex];
                    reverbTemp2[effectIndex] = -reverbSample2[effectIndex] + reverbSample3[effectIndex];
                    reverbTemp3[effectIndex] = -reverbSample2[effectIndex] - reverbSample3[effectIndex];
                    reverbShelfInput0[effectIndex] = (reverbTemp0[effectIndex] + reverbTemp2[effectIndex]) * reverb[effectIndex];
                    reverbShelfInput1[effectIndex] = (reverbTemp1[effectIndex] + reverbTemp3[effectIndex]) * reverb[effectIndex];
                    reverbShelfInput2[effectIndex] = (reverbTemp0[effectIndex] - reverbTemp2[effectIndex]) * reverb[effectIndex];
                    reverbShelfInput3[effectIndex] = (reverbTemp1[effectIndex] - reverbTemp3[effectIndex]) * reverb[effectIndex];
                    reverbShelfSample0[effectIndex] = reverbShelfB0[effectIndex] * reverbShelfInput0[effectIndex] + reverbShelfB1[effectIndex] * reverbShelfPrevInput0[effectIndex] - reverbShelfA1[effectIndex] * reverbShelfSample0[effectIndex];
                    reverbShelfSample1[effectIndex] = reverbShelfB0[effectIndex] * reverbShelfInput1[effectIndex] + reverbShelfB1[effectIndex] * reverbShelfPrevInput1[effectIndex] - reverbShelfA1[effectIndex] * reverbShelfSample1[effectIndex];
                    reverbShelfSample2[effectIndex] = reverbShelfB0[effectIndex] * reverbShelfInput2[effectIndex] + reverbShelfB1[effectIndex] * reverbShelfPrevInput2[effectIndex] - reverbShelfA1[effectIndex] * reverbShelfSample2[effectIndex];
                    reverbShelfSample3[effectIndex] = reverbShelfB0[effectIndex] * reverbShelfInput3[effectIndex] + reverbShelfB1[effectIndex] * reverbShelfPrevInput3[effectIndex] - reverbShelfA1[effectIndex] * reverbShelfSample3[effectIndex];
                    reverbShelfPrevInput0[effectIndex] = reverbShelfInput0[effectIndex];
                    reverbShelfPrevInput1[effectIndex] = reverbShelfInput1[effectIndex];
                    reverbShelfPrevInput2[effectIndex] = reverbShelfInput2[effectIndex];
                    reverbShelfPrevInput3[effectIndex] = reverbShelfInput3[effectIndex];
                    reverbDelayLine[effectIndex][reverbDelayPos1[effectIndex]] = reverbShelfSample0[effectIndex] * delayInputMult;
                    reverbDelayLine[effectIndex][reverbDelayPos2[effectIndex]] = reverbShelfSample1[effectIndex] * delayInputMult;
                    reverbDelayLine[effectIndex][reverbDelayPos3[effectIndex]] = reverbShelfSample2[effectIndex] * delayInputMult;
                    reverbDelayLine[effectIndex][reverbDelayPos[effectIndex] ] = reverbShelfSample3[effectIndex] * delayInputMult;
                    reverbDelayPos[effectIndex] = (reverbDelayPos[effectIndex] + 1) & reverbMask;
                    sampleL += reverbSample1[effectIndex] + reverbSample2[effectIndex] + reverbSample3[effectIndex];
                    sampleR += reverbSample0[effectIndex] + reverbSample2[effectIndex] - reverbSample3[effectIndex];
                    reverb[effectIndex] += reverbDelta[effectIndex];`:y&&E.type==5?(P+=`

                    inputSampleL[effectIndex] = sampleL;
                    inputSampleR[effectIndex] = sampleR;
                    sampleL = applyFilters(inputSampleL[effectIndex], initialFilterInputL1[effectIndex], initialFilterInputL2[effectIndex], filterCount[effectIndex], filtersL[effectIndex]);
                    sampleR = applyFilters(inputSampleR[effectIndex], initialFilterInputR1[effectIndex], initialFilterInputR2[effectIndex], filterCount[effectIndex], filtersR[effectIndex]);
                    initialFilterInputL2[effectIndex] = initialFilterInputL1[effectIndex];
                    initialFilterInputR2[effectIndex] = initialFilterInputR1[effectIndex];
                    initialFilterInputL1[effectIndex] = inputSampleL[effectIndex];
                    initialFilterInputR1[effectIndex] = inputSampleR[effectIndex];`,P+=`

                    sampleL *= eqFilterVolume[effectIndex];
                    sampleR *= eqFilterVolume[effectIndex];
                    eqFilterVolume[effectIndex] += eqFilterVolumeDelta[effectIndex];`):S&&E.type==7?P+=`

					ringModOutputL[effectIndex] = sampleL * waveform[effectIndex][(ringModPhase[effectIndex]*waveformLength[effectIndex])|0];
					ringModOutputR[effectIndex] = sampleR * waveform[effectIndex][(ringModPhase[effectIndex]*waveformLength[effectIndex])|0];
					ringModMixF[effectIndex] = Math.max(0, ringModMix[effectIndex] * ringModMixFade[effectIndex]);
					sampleL = sampleL * (1 - ringModMixF[effectIndex]) + ringModOutputL[effectIndex] * ringModMixF[effectIndex];
					sampleR = sampleR * (1 - ringModMixF[effectIndex]) + ringModOutputR[effectIndex] * ringModMixF[effectIndex];

					ringModMix[effectIndex] += ringModMixDelta[effectIndex];
					ringModPhase[effectIndex] += ringModPhaseDelta[effectIndex];
					ringModPhase[effectIndex] = ringModPhase[effectIndex] % 1.0;
					ringModPhaseDelta[effectIndex] *= ringModPhaseDeltaScale[effectIndex];
					ringModMixFade[effectIndex] += ringModMixFadeDelta[effectIndex];
					`:p&&E.type==8&&(P+=`
                    granularOutputL[effectIndex] = 0;
                    granularOutputR[effectIndex] = 0;
                    for (let grainIndex = 0; grainIndex < granularGrainCount[effectIndex]; grainIndex++) {
                        const grain = granularGrains[effectIndex][grainIndex];
                        if(computeGrains[effectIndex]) {
                            if(grain.delay > 0) {
                                grain.delay--;
                            } else {
                                const grainDelayLinePosition = grain.delayLinePosition;
                                const grainDelayLinePositionInt = grainDelayLinePosition | 0;
                                let grainAgeInSamples = grain.ageInSamples;
                                const grainMaxAgeInSamples = grain.maxAgeInSamples;
                                let grainSampleL = granularDelayLineL[effectIndex][((granularDelayLineIndex[effectIndex] + (granularDelayLineLength[effectIndex] - grainDelayLinePositionInt))    ) & granularDelayLineMask];
                                let grainSampleR = granularDelayLineR[effectIndex][((granularDelayLineIndex[effectIndex] + (granularDelayLineLength[effectIndex] - grainDelayLinePositionInt))    ) & granularDelayLineMask];
                                `,t.granularEnvelopeType==0?P+=`
                                    const grainEnvelope = grain.parabolicEnvelopeAmplitude;
                                    `:t.granularEnvelopeType==1&&(P+=`
                                    const grainEnvelope = grain.rcbEnvelopeAmplitude;
                                    `),P+=`
                                grainSampleL *= grainEnvelope;
                                grainSampleR *= grainEnvelope;
                                granularOutputL[effectIndex] += grainSampleL;
                                granularOutputR[effectIndex] += grainSampleR;
                                if (grainAgeInSamples > grainMaxAgeInSamples) {
                                    if (granularGrainCount[effectIndex] > 0) {
                                        // Faster equivalent of .pop, ignoring the order in the array.
                                        const lastGrainIndex = granularGrainCount[effectIndex] - 1;
                                        const lastGrain = granularGrains[effectIndex][lastGrainIndex];
                                        granularGrains[effectIndex][grainIndex] = lastGrain;
                                        granularGrains[effectIndex][lastGrainIndex] = grain;
                                        granularGrainCount[effectIndex]--;
                                        grainIndex--;
                                        // ^ Dangerous, since this could end up causing an infinite loop,
                                        // but should be okay in this case.
                                    }
                                } else {
                                    grainAgeInSamples++;
                                    `,t.granularEnvelopeType==0?P+=`
                                        grain.parabolicEnvelopeAmplitude += grain.parabolicEnvelopeSlope;
                                        grain.parabolicEnvelopeSlope += grain.parabolicEnvelopeCurve;
                                        `:t.granularEnvelopeType==1&&(P+=`
                                        grain.updateRCBEnvelope();
                                        `),P+=`
                                    grain.ageInSamples = grainAgeInSamples;
                                }
                            }
                        }
                    }
                    granularWet[effectIndex] += granularMixDelta[effectIndex];
                    granularDry[effectIndex] -= granularMixDelta[effectIndex];
                    granularOutputL[effectIndex] *= Config.granularOutputLoudnessCompensation;
                    granularOutputR[effectIndex] *= Config.granularOutputLoudnessCompensation;
                    granularDelayLineL[effectIndex][granularDelayLineIndex[effectIndex]] = sampleL;
                    granularDelayLineR[effectIndex][granularDelayLineIndex[effectIndex]] = sampleR;
                    granularDelayLineIndex[effectIndex] = (granularDelayLineIndex[effectIndex] + 1) & granularDelayLineMask[effectIndex];
                    sampleL = sampleL * granularDry[effectIndex] + granularOutputL[effectIndex] * granularWet[effectIndex];
                    sampleR = sampleR * granularDry[effectIndex] + granularOutputR[effectIndex] * granularWet[effectIndex];
                    `)}P+=`

                    outputDataL[sampleIndex] += sampleL * mixVolume;
                    outputDataR[sampleIndex] += sampleR * mixVolume;
                    mixVolume += mixVolumeDelta;`,B&&(P+=`

                    delayInputMult += delayInputMultDelta;`),P+=`
                }

                instrumentState.mixVolume = mixVolume;

                // Avoid persistent denormal or NaN values in the delay buffers and filter history.
                const epsilon = (1.0e-24);`,B&&(P+=`

                instrumentState.delayInputMult = delayInputMult;`);for(let L=0;L<r.effects.length;L++){let E=r.effects[L];P+=`

                effectState = instrumentState.effects[`+L+`];
                effectIndex = `+L+`;
                `,p&&E.type==8?P+=`
                        effectState.granularMix = granularWet[effectIndex];
                        effectState.granularGrainsLength = granularGrainCount[effectIndex];
                        effectState.granularDelayLineIndex = granularDelayLineIndex[effectIndex];
                    `:c&&E.type==3?P+=`

                    effectState.distortion = distortion[effectIndex];
                    effectState.distortionDrive = distortionDrive[effectIndex];

                    if (!Number.isFinite(distortionFractionalInputL1[effectIndex]) || Math.abs(distortionFractionalInputL1[effectIndex]) < epsilon) distortionFractionalInputL1[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionFractionalInputL2[effectIndex]) || Math.abs(distortionFractionalInputL2[effectIndex]) < epsilon) distortionFractionalInputL2[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionFractionalInputL3[effectIndex]) || Math.abs(distortionFractionalInputL3[effectIndex]) < epsilon) distortionFractionalInputL3[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionFractionalInputR1[effectIndex]) || Math.abs(distortionFractionalInputR1[effectIndex]) < epsilon) distortionFractionalInputR1[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionFractionalInputR2[effectIndex]) || Math.abs(distortionFractionalInputR2[effectIndex]) < epsilon) distortionFractionalInputR2[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionFractionalInputR3[effectIndex]) || Math.abs(distortionFractionalInputR3[effectIndex]) < epsilon) distortionFractionalInputR3[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionPrevInputL[effectIndex]) || Math.abs(distortionPrevInputL[effectIndex]) < epsilon) distortionPrevInputL[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionPrevInputR[effectIndex]) || Math.abs(distortionPrevInputR[effectIndex]) < epsilon) distortionPrevInputR[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionNextOutputL[effectIndex]) || Math.abs(distortionNextOutputL[effectIndex]) < epsilon) distortionNextOutputL[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionNextOutputR[effectIndex]) || Math.abs(distortionNextOutputR[effectIndex]) < epsilon) distortionNextOutputR[effectIndex] = 0.0;

                    effectState.distortionFractionalInputL1 = distortionFractionalInputL1[effectIndex];
                    effectState.distortionFractionalInputL2 = distortionFractionalInputL2[effectIndex];
                    effectState.distortionFractionalInputL3 = distortionFractionalInputL3[effectIndex];
                    effectState.distortionFractionalInputR1 = distortionFractionalInputR1[effectIndex];
                    effectState.distortionFractionalInputR2 = distortionFractionalInputR2[effectIndex];
                    effectState.distortionFractionalInputR3 = distortionFractionalInputR3[effectIndex];
                    effectState.distortionPrevInputL = distortionPrevInputL[effectIndex];
                    effectState.distortionPrevInputR = distortionPrevInputR[effectIndex];
                    effectState.distortionNextOutputL = distortionNextOutputL[effectIndex];
                    effectState.distortionNextOutputR = distortionNextOutputR[effectIndex];`:d&&E.type==4?P+=`

                    if (Math.abs(bitcrusherPrevInputL[effectIndex]) < epsilon) bitcrusherPrevInputL[effectIndex] = 0.0;
                    if (Math.abs(bitcrusherPrevInputR[effectIndex]) < epsilon) bitcrusherPrevInputR[effectIndex] = 0.0;
                    if (Math.abs(bitcrusherCurrentOutputL[effectIndex]) < epsilon) bitcrusherCurrentOutputL[effectIndex] = 0.0;
                    if (Math.abs(bitcrusherCurrentOutputR[effectIndex]) < epsilon) bitcrusherCurrentOutputR[effectIndex] = 0.0;
                    effectState.bitcrusherPrevInputL = bitcrusherPrevInputL[effectIndex];
                    effectState.bitcrusherPrevInputR = bitcrusherPrevInputR[effectIndex];
                    effectState.bitcrusherCurrentOutputL = bitcrusherCurrentOutputL[effectIndex];
                    effectState.bitcrusherCurrentOutputR = bitcrusherCurrentOutputR[effectIndex];
                    effectState.bitcrusherPhase = bitcrusherPhase[effectIndex];
                    effectState.bitcrusherPhaseDelta = bitcrusherPhaseDelta[effectIndex];
                    effectState.bitcrusherScale = bitcrusherScale[effectIndex];
                    effectState.bitcrusherFoldLevel = bitcrusherFoldLevel[effectIndex];`:S&&E.type==7?P+=`
                    effectState.ringModMix = ringModMix[effectIndex];
                    effectState.ringModMixDelta = ringModMixDelta[effectIndex];
                    effectState.ringModPhase = ringModPhase[effectIndex];
                    effectState.ringModPhaseDelta = ringModPhaseDelta[effectIndex];
                    effectState.ringModPhaseDeltaScale = ringModPhaseDeltaScale[effectIndex];
                    effectState.ringModWaveformIndex = ringModWaveformIndex[effectIndex];
                    effectState.ringModPulseWidth = ringModPulseWidth[effectIndex];
                    effectState.ringModMixFade = ringModMixFade[effectIndex];
                    `:y&&E.type==5?P+=`

                        synth.sanitizeFilters(filtersL[effectIndex]);
                        synth.sanitizeFilters(filtersR[effectIndex]);
                    // The filter input here is downstream from another filter so we
                    // better make sure it's safe too.
                    if (!(initialFilterInputL1[effectIndex] < 100) || !(initialFilterInputL2[effectIndex] < 100) || !(initialFilterInputR1[effectIndex] < 100) || !(initialFilterInputR2[effectIndex] < 100)) {
                        initialFilterInputL1[effectIndex] = 0.0;
                        initialFilterInputR2[effectIndex] = 0.0;
                        initialFilterInputL1[effectIndex] = 0.0;
                        initialFilterInputR2[effectIndex] = 0.0;
                    }
                    if (Math.abs(initialFilterInputL1[effectIndex]) < epsilon) initialFilterInputL1[effectIndex] = 0.0;
                    if (Math.abs(initialFilterInputL2[effectIndex]) < epsilon) initialFilterInputL2[effectIndex] = 0.0;
                    if (Math.abs(initialFilterInputR1[effectIndex]) < epsilon) initialFilterInputR1[effectIndex] = 0.0;
                    if (Math.abs(initialFilterInputR2[effectIndex]) < epsilon) initialFilterInputR2[effectIndex] = 0.0;
                    effectState.initialEqFilterInputL1 = initialFilterInputL1[effectIndex];
                    effectState.initialEqFilterInputL2 = initialFilterInputL2[effectIndex];
                    effectState.initialEqFilterInputR1 = initialFilterInputR1[effectIndex];
                    effectState.initialEqFilterInputR2 = initialFilterInputR2[effectIndex];

                    instrumentState.eqFilterVolume = eqFilterVolume[effectIndex];`:l&&E.type==9?P+=`
                    effectState.gain = gain[effectIndex];
                    `:v&&E.type==2?P+=`

                    Synth.sanitizeDelayLine(panningDelayLineL[effectIndex], panningDelayPos[effectIndex], panningMask);
                    Synth.sanitizeDelayLine(panningDelayLineR[effectIndex], panningDelayPos[effectIndex], panningMask);
                    effectState.panningDelayPos = panningDelayPos[effectIndex];
                    effectState.panningVolumeL = panningVolumeL[effectIndex];
                    effectState.panningVolumeR = panningVolumeR[effectIndex];
                    effectState.panningOffsetL = panningOffsetL[effectIndex];
                    effectState.panningOffsetR = panningOffsetR[effectIndex];`:h&&E.type==10?P+=`

                    Synth.sanitizeDelayLine(flangerDelayLineL[effectIndex], flangerDelayPos[effectIndex], flangerMask);
                    Synth.sanitizeDelayLine(flangerDelayLineR[effectIndex], flangerDelayPos[effectIndex], flangerMask);
                    effectState.flangerPhase = flangerPhase[effectIndex];
                    effectState.flangerDelayPos = flangerDelayPos[effectIndex];
                    effectState.flanger = flanger[effectIndex];
                    effectState.flangerSpeed = flangerSpeed[effectIndex];
                    effectState.flangerDepth = flangerDepth[effectIndex];
                    effectState.flangerFeedback = flangerFeedback[effectIndex];`:g&&E.type==1?P+=`

                    Synth.sanitizeDelayLine(chorusDelayLineL[effectIndex], chorusDelayPos[effectIndex], chorusMask);
                    Synth.sanitizeDelayLine(chorusDelayLineR[effectIndex], chorusDelayPos[effectIndex], chorusMask);
                    effectState.chorusPhase = chorusPhase[effectIndex];
                    effectState.chorusDelayPos = chorusDelayPos[effectIndex];
                    effectState.chorusVoiceMult = chorusVoiceMult[effectIndex];
                    effectState.chorusCombinedMult = chorusCombinedMult[effectIndex];`:f&&E.type==6?P+=`

                    Synth.sanitizeDelayLine(echoDelayLineL[effectIndex], echoDelayPosL[effectIndex], echoMask[effectIndex]);
                    Synth.sanitizeDelayLine(echoDelayLineR[effectIndex], echoDelayPosR[effectIndex], echoMask[effectIndex]);
                    effectState.echoDelayPosL = echoDelayPosL[effectIndex];
                    effectState.echoDelayPosR = echoDelayPosR[effectIndex];
                    effectState.echoMult = echoMult[effectIndex];
                    effectState.echoDelayOffsetRatio = echoDelayOffsetRatio[effectIndex];

                    if (!Number.isFinite(echoShelfSampleL[effectIndex]) || Math.abs(echoShelfSampleL[effectIndex]) < epsilon) echoShelfSampleL[effectIndex] = 0.0;
                    if (!Number.isFinite(echoShelfSampleR[effectIndex]) || Math.abs(echoShelfSampleR[effectIndex]) < epsilon) echoShelfSampleR[effectIndex] = 0.0;
                    if (!Number.isFinite(echoShelfPrevInputL[effectIndex]) || Math.abs(echoShelfPrevInputL[effectIndex]) < epsilon) echoShelfPrevInputL[effectIndex] = 0.0;
                    if (!Number.isFinite(echoShelfPrevInputR[effectIndex]) || Math.abs(echoShelfPrevInputR[effectIndex]) < epsilon) echoShelfPrevInputR[effectIndex] = 0.0;
                    effectState.echoShelfSampleL = echoShelfSampleL[effectIndex];
                    effectState.echoShelfSampleR = echoShelfSampleR[effectIndex];
                    effectState.echoShelfPrevInputL = echoShelfPrevInputL[effectIndex];
                    effectState.echoShelfPrevInputR = echoShelfPrevInputR[effectIndex];`:m&&E.type==0&&(P+=`

                    Synth.sanitizeDelayLine(reverbDelayLine[effectIndex], reverbDelayPos[effectIndex]        , reverbMask);
                    Synth.sanitizeDelayLine(reverbDelayLine[effectIndex], reverbDelayPos[effectIndex] +  3041, reverbMask);
                    Synth.sanitizeDelayLine(reverbDelayLine[effectIndex], reverbDelayPos[effectIndex] +  6426, reverbMask);
                    Synth.sanitizeDelayLine(reverbDelayLine[effectIndex], reverbDelayPos[effectIndex] + 10907, reverbMask);
                    effectState.reverbDelayPos = reverbDelayPos[effectIndex];
                    effectState.reverbMult = reverb[effectIndex];

                    if (!Number.isFinite(reverbShelfSample0[effectIndex]) || Math.abs(reverbShelfSample0[effectIndex]) < epsilon) reverbShelfSample0[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfSample1[effectIndex]) || Math.abs(reverbShelfSample1[effectIndex]) < epsilon) reverbShelfSample1[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfSample2[effectIndex]) || Math.abs(reverbShelfSample2[effectIndex]) < epsilon) reverbShelfSample2[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfSample3[effectIndex]) || Math.abs(reverbShelfSample3[effectIndex]) < epsilon) reverbShelfSample3[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfPrevInput0[effectIndex]) || Math.abs(reverbShelfPrevInput0[effectIndex]) < epsilon) reverbShelfPrevInput0[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfPrevInput1[effectIndex]) || Math.abs(reverbShelfPrevInput1[effectIndex]) < epsilon) reverbShelfPrevInput1[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfPrevInput2[effectIndex]) || Math.abs(reverbShelfPrevInput2[effectIndex]) < epsilon) reverbShelfPrevInput2[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfPrevInput3[effectIndex]) || Math.abs(reverbShelfPrevInput3[effectIndex]) < epsilon) reverbShelfPrevInput3[effectIndex] = 0.0;
                    effectState.reverbShelfSample0 = reverbShelfSample0[effectIndex];
                    effectState.reverbShelfSample1 = reverbShelfSample1[effectIndex];
                    effectState.reverbShelfSample2 = reverbShelfSample2[effectIndex];
                    effectState.reverbShelfSample3 = reverbShelfSample3[effectIndex];
                    effectState.reverbShelfPrevInput0 = reverbShelfPrevInput0[effectIndex];
                    effectState.reverbShelfPrevInput1 = reverbShelfPrevInput1[effectIndex];
                    effectState.reverbShelfPrevInput2 = reverbShelfPrevInput2[effectIndex];
                    effectState.reverbShelfPrevInput3 = reverbShelfPrevInput3[effectIndex];`)}P+="}",console.log(P),b=new Function("Config","Synth",P)(t,o),o.effectsFunctionCache[w]=b}b(e,i,n,a,s,r)}static pulseWidthSynth(e,i,n,a,s){let r=e.tempInstrumentSampleBufferL,c=a.specialIntervalExpressionMult*s.unisonSign;s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(a.phases[1]=a.phases[0]);let d=a.phaseDeltas[0],y=a.phaseDeltas[1],l=+a.phaseDeltaScales[0],v=+a.phaseDeltaScales[1],h=+a.expression,g=+a.expressionDelta,f=a.phases[0]%1,m=a.phases[1]%1,p=a.pulseWidth,S=a.pulseWidthDelta,x=a.noteFiltersL,w=a.noteFilterCount|0,b=+a.initialNoteFilterInputL1,P=+a.initialNoteFilterInputL2,B=o.applyFilters,L=i+n;for(let D=i;D<L;D++){let R=f%1,N=(f+p)%1,z=m%1,W=(m+p)%1,H=N-R,U=W-z;if(!s.aliases){if(R<d){var E=R/d;H+=(E+E-E*E-1)*.5}else if(R>1-d){var E=(R-1)/d;H+=(E+E+E*E+1)*.5}if(N<d){var E=N/d;H-=(E+E-E*E-1)*.5}else if(N>1-d){var E=(N-1)/d;H-=(E+E+E*E+1)*.5}if(z<y){var E=z/y;U+=(E+E-E*E-1)*.5}else if(z>1-y){var E=(z-1)/y;U+=(E+E+E*E+1)*.5}if(W<y){var E=W/y;U-=(E+E-E*E-1)*.5}else if(W>1-y){var E=(W-1)/y;U-=(E+E+E*E+1)*.5}}let G=H+U*c,u=B(G,b,P,w,x);P=b,b=G,f+=d,m+=y,d*=l,y*=v,p+=S;let F=u*h;h+=g,r[D]+=F}a.phases[0]=f,a.phases[1]=m,a.phaseDeltas[0]=d,a.phaseDeltas[1]=y,a.expression=h,a.pulseWidth=p,e.sanitizeFilters(x),a.initialNoteFilterInputL1=b,a.initialNoteFilterInputL2=P}static supersawSynth(e,i,n,a,s){let r=e.tempInstrumentSampleBufferL,c=t.supersawVoiceCount|0,d=a.phaseDeltas[0],y=+a.phaseDeltaScales[0],l=+a.expression,v=+a.expressionDelta,h=a.phases,g=+a.supersawDynamism,f=+a.supersawDynamismDelta,m=a.supersawUnisonDetunes,p=+a.supersawShape,S=+a.supersawShapeDelta,x=+a.supersawDelayLength,w=+a.supersawDelayLengthDelta,b=a.supersawDelayLine,P=b.length-1>>0,B=a.supersawDelayIndex|0;B=(B&P)+b.length;let L=a.noteFiltersL,E=a.noteFilterCount|0,D=+a.initialNoteFilterInputL1,R=+a.initialNoteFilterInputL2,N=o.applyFilters,z=i+n;for(let H=i;H<z;H++){let U=(h[0]+d)%1,G=U-.5*(1+(c-1)*g);if(!s.aliases){if(U<d){var W=U/d;G-=(W+W-W*W-1)*.5}else if(U>1-d){var W=(U-1)/d;G-=(W+W+W*W+1)*.5}}h[0]=U;for(let ge=1;ge<c;ge++){let Ie=d*m[ge],_=(h[ge]+Ie)%1;if(G+=_*g,!s.aliases){if(_<Ie){let V=_/Ie;G-=(V+V-V*V-1)*.5*g}else if(_>1-Ie){let V=(_-1)/Ie;G-=(V+V+V*V+1)*.5*g}}h[ge]=_}b[B&P]=G;let u=B-x,F=u|0,C=F+1,I=u-F,M=b[F&P],q=b[C&P],O=M+(q-M)*I;B++;let j=G-O*p,te=N(j,D,R,E,L);R=D,D=j,d*=y,g+=f,p+=S,x+=w;let ee=te*l;l+=v,r[H]+=ee}a.phaseDeltas[0]=d,a.expression=l,a.supersawDynamism=g,a.supersawShape=p,a.supersawDelayLength=x,a.supersawDelayIndex=B,e.sanitizeFilters(L),a.initialNoteFilterInputL1=D,a.initialNoteFilterInputL2=R}static fmSourceTemplate=(`
		const data = synth.tempInstrumentSampleBufferL;
		const sineWave = Config.sineWave;
			
		// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.
		let operator#Phase       = +((tone.phases[#] % 1) + 1000) * `+t.sineWaveLength+`;
		let operator#PhaseDelta  = +tone.phaseDeltas[#] * `+t.sineWaveLength+`;
		let operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];
		let operator#OutputMult  = +tone.operatorExpressions[#];
		const operator#OutputDelta = +tone.operatorExpressionDeltas[#];
		let operator#Output      = +tone.feedbackOutputs[#];
        const operator#Wave      = tone.operatorWaves[#].samples;
		let feedbackMult         = +tone.feedbackMult;
		const feedbackDelta        = +tone.feedbackDelta;
        let expression = +tone.expression;
		const expressionDelta = +tone.expressionDelta;
		
		const filters = tone.noteFiltersL;
		const filterCount = tone.noteFilterCount|0;
		let initialFilterInput1 = +tone.initialNoteFilterInputL1;
		let initialFilterInput2 = +tone.initialNoteFilterInputL2;
		const applyFilters = Synth.applyFilters;
		
		const stopIndex = bufferIndex + roundedSamplesPerTick;
		for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {
				// INSERT OPERATOR COMPUTATION HERE
				const fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS
				
			const inputSample = fmOutput;
			const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);
			initialFilterInput2 = initialFilterInput1;
			initialFilterInput1 = inputSample;
				
				feedbackMult += feedbackDelta;
				operator#OutputMult += operator#OutputDelta;
				operator#Phase += operator#PhaseDelta;
			operator#PhaseDelta *= operator#PhaseDeltaScale;
			
			const output = sample * expression;
			expression += expressionDelta;

			data[sampleIndex] += output;
			}
			
			tone.phases[#] = operator#Phase / `+t.sineWaveLength+`;
			tone.phaseDeltas[#] = operator#PhaseDelta / `+t.sineWaveLength+`;
			tone.operatorExpressions[#] = operator#OutputMult;
		    tone.feedbackOutputs[#] = operator#Output;
		    tone.feedbackMult = feedbackMult;
		    tone.expression = expression;
			
		synth.sanitizeFilters(filters);
		tone.initialNoteFilterInputL1 = initialFilterInput1;
		tone.initialNoteFilterInputL2 = initialFilterInput2;
		`).split(`
`);static operatorSourceTemplate=(`
		const operator#PhaseMix = operator#Phase/* + operator@Scaled*/;
		const operator#PhaseInt = operator#PhaseMix|0;
		const operator#Index    = operator#PhaseInt & `+t.sineWaveMask+`;
		const operator#Sample   = operator#Wave[operator#Index];
		operator#Output         = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);
		const operator#Scaled   = operator#OutputMult * operator#Output;
		`).split(`
`);static noiseSynth(e,i,n,a,s){let r=e.tempInstrumentSampleBufferL,c=s.waveL,d=a.specialIntervalExpressionMult*s.unisonSign;s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(a.phases[1]=a.phases[0]);let y=a.phaseDeltas[0],l=a.phaseDeltas[1],v=+a.phaseDeltaScales[0],h=+a.phaseDeltaScales[1],g=+a.expression,f=+a.expressionDelta,m=a.phases[0]%1*t.chipNoiseLength,p=a.phases[1]%1*t.chipNoiseLength;a.phases[0]==0&&(m=Math.random()*t.chipNoiseLength,s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(p=m)),a.phases[1]==0&&!(s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval)&&(p=Math.random()*t.chipNoiseLength);let S=t.chipNoiseLength-1,x=+a.noiseSampleA,w=+a.noiseSampleB,b=a.noteFiltersL,P=a.noteFilterCount|0,B=+a.initialNoteFilterInputL1,L=+a.initialNoteFilterInputL2,E=o.applyFilters,D=Math.min(1,y*s.noisePitchFilterMult),R=Math.min(1,l*s.noisePitchFilterMult),N=i+n;for(let z=i;z<N;z++){let W=c[m&S],H=c[p&S];x+=(W-x)*D,w+=(H-w)*R;let U=x+w*d,G=E(U,B,L,P,b);L=B,B=U,m+=y,p+=l,y*=v,l*=h;let u=G*g;g+=f,r[z]+=u}a.phases[0]=m/t.chipNoiseLength,a.phases[1]=p/t.chipNoiseLength,a.phaseDeltas[0]=y,a.phaseDeltas[1]=l,a.expression=g,a.noiseSampleA=x,a.noiseSampleB=w,e.sanitizeFilters(b),a.initialNoteFilterInputL1=B,a.initialNoteFilterInputL2=L}static spectrumSynth(e,i,n,a,s){let r=e.tempInstrumentSampleBufferL,c=s.waveL,d=128,y=a.specialIntervalExpressionMult*s.unisonSign;s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(a.phases[1]=a.phases[0]);let l=a.phaseDeltas[0]*d,v=a.phaseDeltas[1]*d,h=+a.phaseDeltaScales[0],g=+a.phaseDeltaScales[1],f=+a.expression,m=+a.expressionDelta,p=+a.noiseSampleA,S=+a.noiseSampleB,x=a.noteFiltersL,w=a.noteFilterCount|0,b=+a.initialNoteFilterInputL1,P=+a.initialNoteFilterInputL2,B=o.applyFilters,L=a.phases[0]%1*t.spectrumNoiseLength,E=a.phases[1]%1*t.spectrumNoiseLength;a.phases[0]==0&&(L=o.findRandomZeroCrossing(c,t.spectrumNoiseLength)+l,s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(E=L)),a.phases[1]==0&&!(s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval)&&(E=o.findRandomZeroCrossing(c,t.spectrumNoiseLength)+v);let D=t.spectrumNoiseLength-1,R=Math.min(1,l),N=Math.min(1,v),z=i+n;for(let W=i;W<z;W++){let H=L|0,U=E|0,G=H&D,u=U&D,F=c[G],C=c[u],I=L-H,M=E-U;F+=(c[G+1]-F)*I,C+=(c[u+1]-C)*M,p+=(F-p)*R,S+=(C-S)*N;let q=p+S*y,O=B(q,b,P,w,x);P=b,b=q,L+=l,E+=v,l*=h,v*=g;let j=O*f;f+=m,r[W]+=j}a.phases[0]=L/t.spectrumNoiseLength,a.phases[1]=E/t.spectrumNoiseLength,a.phaseDeltas[0]=l/d,a.phaseDeltas[1]=v/d,a.expression=f,a.noiseSampleA=p,a.noiseSampleB=S,e.sanitizeFilters(x),a.initialNoteFilterInputL1=b,a.initialNoteFilterInputL2=P}static drumsetSynth(e,i,n,a,s){let r=e.tempInstrumentSampleBufferL,c=s.getDrumsetWave(a.drumsetPitch),d=jt.drumsetIndexReferenceDelta(a.drumsetPitch),y=a.phaseDeltas[0]/d,l=+a.phaseDeltaScales[0],v=+a.expression,h=+a.expressionDelta,g=a.noteFiltersL,f=a.noteFilterCount|0,m=+a.initialNoteFilterInputL1,p=+a.initialNoteFilterInputL2,S=o.applyFilters,x=a.phases[0]%1*t.spectrumNoiseLength;a.phases[0]==0&&(x=o.findRandomZeroCrossing(c,t.spectrumNoiseLength)+y);let w=t.spectrumNoiseLength-1,b=i+n;for(let P=i;P<b;P++){let B=x|0,L=B&w,E=c[L],D=x-B;E+=(c[L+1]-E)*D;let R=E,N=S(R,m,p,f,g);p=m,m=R,x+=y,y*=l;let z=N*v;v+=h,r[P]+=z}a.phases[0]=x/t.spectrumNoiseLength,a.phaseDeltas[0]=y*d,a.expression=v,e.sanitizeFilters(g),a.initialNoteFilterInputL1=m,a.initialNoteFilterInputL2=p}static modSynth(e,i,n,a,s){if(!e.song)return;let r=t.modCount-1-a.pitches[0];if(s.invalidModulators[r])return;let c=s.modulators[r],d=[],y=[];if(t.modulators[s.modulators[r]].forSong)y.push(0);else if(s.modInstruments[r][0]==e.song.channels[s.modChannels[r][0]].instruments.length)for(let l=0;l<e.song.channels[s.modChannels[r][0]].instruments.length;l++)y.push(l),d.push(0);else if(s.modInstruments[r][0]>e.song.channels[s.modChannels[r][0]].instruments.length)e.song.getPattern(s.modChannels[r][0],e.bar)!=null&&(y=e.song.getPattern(s.modChannels[r][0],e.bar).instruments,d.push(0));else for(let l=0;l<s.modChannels[r].length;l++)d.push(s.modChannels[r][l]),y.push(s.modInstruments[r][l]);for(let l=0;l<y.length;l++){e.setModValue(a.expression,a.expression+a.expressionDelta,s.modChannels[r][l],y[l],c);for(let v=0;v<e.heldMods.length;v++)t.modulators[s.modulators[r]].forSong?e.heldMods[v].setting==c&&e.setModValue(e.heldMods[v].volume,e.heldMods[v].volume,s.modChannels[r][l],y[l],c):e.heldMods[v].channelIndex==s.modChannels[r][l]&&e.heldMods[v].instrumentIndex==y[l]&&e.heldMods[v].setting==c&&e.setModValue(e.heldMods[v].volume,e.heldMods[v].volume,s.modChannels[r][l],y[l],c);if(c==t.modulators.dictionary["reset arp"].index&&e.tick==0&&a.noteStartPart==e.beat*t.partsPerBeat+e.part)e.channels[s.modChannels[r][l]].instruments[y[l]].arpTime=0;else if(c==t.modulators.dictionary["reset envelope"].index&&e.tick==0&&a.noteStartPart==e.beat*t.partsPerBeat+e.part){let v=s.modEnvelopeNumbers[r],h=e.channels[s.modChannels[r][l]].instruments[y[l]];e.song.channels[s.modChannels[r][l]].instruments[y[l]].envelopeCount>v&&(h.envelopeTime[v]=0)}else if(c==t.modulators.dictionary["next bar"].index)e.wantToSkip=!0;else if(c==t.modulators.dictionary["song eq"].index){let v=e.song,h=s.modFilterTypes[r]|0;if(h==0){let g=0,f=e.getTicksIntoBar()/t.ticksPerPart;for(;a.note.start+a.note.pins[g].time<=f;)g++;let m=(f-a.note.start+n/(e.getSamplesPerTick()*t.ticksPerPart)*t.ticksPerPart-a.note.pins[g-1].time)/(a.note.pins[g].time-a.note.pins[g-1].time);v.eqSubFilters[a.note.pins[g-1].size]!=null||v.eqSubFilters[a.note.pins[g].size]!=null?v.tmpEqFilterEnd=Ee.lerpFilters(v.eqSubFilters[a.note.pins[g-1].size],v.eqSubFilters[a.note.pins[g].size],m):v.tmpEqFilterEnd=v.eqFilter}else{for(let g=0;g<t.filterMorphCount;g++)v.tmpEqFilterEnd==v.eqSubFilters[g]&&v.tmpEqFilterEnd!=null&&(v.tmpEqFilterEnd=new Ee,v.tmpEqFilterEnd.fromJsonObject(v.eqSubFilters[g].toJsonObject()));v.tmpEqFilterEnd==null&&(v.tmpEqFilterEnd=new Ee,v.tmpEqFilterEnd.fromJsonObject(v.eqFilter.toJsonObject())),v.tmpEqFilterEnd.controlPointCount>Math.floor((h-1)/2)&&(h%2?v.tmpEqFilterEnd.controlPoints[Math.floor((h-1)/2)].freq=a.expression+a.expressionDelta:v.tmpEqFilterEnd.controlPoints[Math.floor((h-1)/2)].gain=a.expression+a.expressionDelta)}}else if(c==t.modulators.dictionary["post eq"].index){let v=e.song.channels[s.modChannels[r][l]].instruments[y[l]];for(let h=0;h<v.effects.length;h++){let g=v.effects[h];if(!g.eqFilterType){let f=s.modFilterTypes[r]|0;if(f==0){let m=0,p=e.getTicksIntoBar()/t.ticksPerPart;for(;a.note.start+a.note.pins[m].time<=p;)m++;let S=(p-a.note.start+n/(e.getSamplesPerTick()*t.ticksPerPart)*t.ticksPerPart-a.note.pins[m-1].time)/(a.note.pins[m].time-a.note.pins[m-1].time);g.eqSubFilters[a.note.pins[m-1].size]!=null||g.eqSubFilters[a.note.pins[m].size]!=null?g.tmpEqFilterEnd=Ee.lerpFilters(g.eqSubFilters[a.note.pins[m-1].size],g.eqSubFilters[a.note.pins[m].size],S):g.tmpEqFilterEnd=g.eqFilter}else{for(let m=0;m<t.filterMorphCount;m++)g.tmpEqFilterEnd==g.eqSubFilters[m]&&g.tmpEqFilterEnd!=null&&(g.tmpEqFilterEnd=new Ee,g.tmpEqFilterEnd.fromJsonObject(g.eqSubFilters[m].toJsonObject()));g.tmpEqFilterEnd==null&&(g.tmpEqFilterEnd=new Ee,g.tmpEqFilterEnd.fromJsonObject(g.eqFilter.toJsonObject())),g.tmpEqFilterEnd.controlPointCount>Math.floor((f-1)/2)&&(f%2?g.tmpEqFilterEnd.controlPoints[Math.floor((f-1)/2)].freq=a.expression+a.expressionDelta:g.tmpEqFilterEnd.controlPoints[Math.floor((f-1)/2)].gain=a.expression+a.expressionDelta)}}}}else if(c==t.modulators.dictionary["pre eq"].index){let v=e.song.channels[s.modChannels[r][l]].instruments[y[l]];if(!v.noteFilterType){let h=s.modFilterTypes[r]|0;if(h==0){let g=0,f=e.getTicksIntoBar()/t.ticksPerPart;for(;a.note.start+a.note.pins[g].time<=f;)g++;let m=(f-a.note.start+n/(e.getSamplesPerTick()*t.ticksPerPart)*t.ticksPerPart-a.note.pins[g-1].time)/(a.note.pins[g].time-a.note.pins[g-1].time);v.noteSubFilters[a.note.pins[g-1].size]!=null||v.noteSubFilters[a.note.pins[g].size]!=null?v.tmpNoteFilterEnd=Ee.lerpFilters(v.noteSubFilters[a.note.pins[g-1].size],v.noteSubFilters[a.note.pins[g].size],m):v.tmpNoteFilterEnd=v.noteFilter}else{for(let g=0;g<t.filterMorphCount;g++)v.tmpNoteFilterEnd==v.noteSubFilters[g]&&v.tmpNoteFilterEnd!=null&&(v.tmpNoteFilterEnd=new Ee,v.tmpNoteFilterEnd.fromJsonObject(v.noteSubFilters[g].toJsonObject()));v.tmpNoteFilterEnd==null&&(v.tmpNoteFilterEnd=new Ee,v.tmpNoteFilterEnd.fromJsonObject(v.noteFilter.toJsonObject())),v.tmpNoteFilterEnd.controlPointCount>Math.floor((h-1)/2)&&(h%2?v.tmpNoteFilterEnd.controlPoints[Math.floor((h-1)/2)].freq=a.expression+a.expressionDelta:v.tmpNoteFilterEnd.controlPoints[Math.floor((h-1)/2)].gain=a.expression+a.expressionDelta)}}}else if(c==t.modulators.dictionary["individual envelope speed"].index){let v=e.song.channels[s.modChannels[r][l]].instruments[y[l]],h=s.modEnvelopeNumbers[r],g=a.expression+a.expressionDelta;v.envelopeCount>h&&(Number.isInteger(g)?v.envelopes[h].tempEnvelopeSpeed=t.perEnvelopeSpeedIndices[g]:(g=(1-g%1)*t.perEnvelopeSpeedIndices[Math.floor(g)]+g%1*t.perEnvelopeSpeedIndices[Math.ceil(g)],v.envelopes[h].tempEnvelopeSpeed=g))}else if(c==t.modulators.dictionary["individual envelope lower bound"].index){let v=e.song.channels[s.modChannels[r][l]].instruments[y[l]],h=s.modEnvelopeNumbers[r],g=a.expression+a.expressionDelta;v.envelopeCount>h&&(v.envelopes[h].tempEnvelopeLowerBound=g/10)}else if(c==t.modulators.dictionary["individual envelope upper bound"].index){let v=e.song.channels[s.modChannels[r][l]].instruments[y[l]],h=s.modEnvelopeNumbers[r],g=a.expression+a.expressionDelta;v.envelopeCount>h&&(v.envelopes[h].tempEnvelopeUpperBound=g/10),console.log(v.envelopes[h])}}}static findRandomZeroCrossing(e,i){let n=Math.random()*i,a=i-1,s=n&a,r=e[s],c=16;for(let d=128;d>0;d--){let y=s+c&a,l=e[y];if(r*l<=0){for(let v=0;v<c;v++){let h=s+1&a,g=e[h];if(r*g<=0){let f=g-r;n=s,Math.abs(f)>1e-8&&(n+=-r/f),n=Math.max(0,n)%i;break}else s=h,r=g}break}else s=y,r=l}return n}static instrumentVolumeToVolumeMult(e){return e==-t.volumeRange/2?0:Math.pow(2,t.volumeLogScale*e)}static volumeMultToInstrumentVolume(e){return e<=0?-t.volumeRange/2:Math.min(t.volumeRange,Math.log(e)/Math.LN2/t.volumeLogScale)}static noteSizeToVolumeMult(e){return Math.pow(Math.max(0,e)/t.noteSizeMax,1.5)}static volumeMultToNoteSize(e){return Math.pow(Math.max(0,e),1/1.5)*t.noteSizeMax}static getOperatorWave(e,i){return e!=2?t.operatorWaves[e]:t.pwmOperatorWaves[i]}getSamplesPerTick(){if(this.song==null)return 0;let e=this.song.getBeatsPerMinute();return this.isModActive(t.modulators.dictionary.tempo.index)&&(e=this.getModValue(t.modulators.dictionary.tempo.index)),this.getSamplesPerTickSpecificBPM(e)}getSamplesPerTickSpecificBPM(e){let i=e/60,n=t.partsPerBeat*i,a=t.ticksPerPart*n;return this.samplesPerSecond/a}sanitizeFilters(e){let i=!1;for(let n of e){let a=Math.abs(n.output1),s=Math.abs(n.output2);if(!(a<100)||!(s<100)){i=!0;break}a<xt&&(n.output1=0),s<xt&&(n.output2=0)}if(i)for(let n of e)n.output1=0,n.output2=0}static sanitizeDelayLine(e,i,n){for(;;){i--;let a=i&n,s=Math.abs(e[a]);if(Number.isFinite(s)&&(s==0||s>=xt))break;e[a]=0}}static applyFilters(e,i,n,a,s){for(let r=0;r<a;r++){let c=s[r],d=c.output1,y=c.output2,l=c.a1,v=c.a2,h=c.b0,g=c.b1,f=c.b2;e=h*e+g*i+f*n-l*d-v*y,c.a1=l+c.a1Delta,c.a2=v+c.a2Delta,c.useMultiplicativeInputCoefficients?(c.b0=h*c.b0Delta,c.b1=g*c.b1Delta,c.b2=f*c.b2Delta):(c.b0=h+c.b0Delta,c.b1=g+c.b1Delta,c.b2=f+c.b2Delta),c.output2=d,c.output1=e,n=y,i=d}return e}computeTicksSinceStart(e=!1){let i=this.song?.beatsPerBar?this.song?.beatsPerBar:8;return e?t.ticksPerPart*t.partsPerBeat*i*this.bar:this.tick+t.ticksPerPart*(this.part+t.partsPerBeat*(this.beat+i*this.bar))}};var{a:Tn,button:la,div:an,h1:Dr,input:Tr,canvas:Ar}=Ot,{svg:An,circle:Lr,rect:Wi,path:tn}=_e,ia=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);document.head.appendChild(Ot.style({type:"text/css"},`
	body {
		color: ${xe.primaryText};
		background: ${xe.editorBackground};
	}
	h1 {
		font-weight: bold;
		font-size: 14px;
		line-height: 22px;
		text-align: initial;
		margin: 0;
	}
	a {
		font-weight: bold;
		font-size: 12px;
		line-height: 22px;
		white-space: nowrap;
		color: ${xe.linkAccent};
	}
	button {
		margin: 0;
		padding: 0;
		position: relative;
		border: none;
		border-radius: 5px;
		background: ${xe.uiWidgetBackground};
		color: ${xe.primaryText};
		cursor: pointer;
		font-size: 14px;
		font-family: inherit;
	}
	button:hover, button:focus {
		background: ${xe.uiWidgetFocus};
	}
	.playButton, .pauseButton {
		padding-left: 24px;
		padding-right: 6px;
	}
	.playButton::before {
		content: "";
		position: absolute;
		left: 6px;
		top: 50%;
		margin-top: -6px;
		width: 12px;
		height: 12px;
		pointer-events: none;
		background: ${xe.primaryText};
		-webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><path d="M 6 0 L -5 6 L -5 -6 z" fill="gray"/></svg>');
		-webkit-mask-repeat: no-repeat;
		-webkit-mask-position: center;
		mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><path d="M 6 0 L -5 6 L -5 -6 z" fill="gray"/></svg>');
		mask-repeat: no-repeat;
		mask-position: center;
	}
	.pauseButton::before {
		content: "";
		position: absolute;
		left: 6px;
		top: 50%;
		margin-top: -6px;
		width: 12px;
		height: 12px;
		pointer-events: none;
		background: ${xe.primaryText};
		-webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><rect x="-5" y="-6" width="3" height="12" fill="gray"/><rect x="2"  y="-6" width="3" height="12" fill="gray"/></svg>');
		-webkit-mask-repeat: no-repeat;
		-webkit-mask-position: center;
		mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><rect x="-5" y="-6" width="3" height="12" fill="gray"/><rect x="2"  y="-6" width="3" height="12" fill="gray"/></svg>');
		mask-repeat: no-repeat;
		mask-position: center;
	}
	
	input[type=range] {
		-webkit-appearance: none;
		appearance: none;
		height: 16px;
		margin: 0;
		cursor: pointer;
		background-color: ${xe.editorBackground};
		touch-action: pan-y;
	}
	input[type=range]:focus {
		outline: none;
	}
	input[type=range]::-webkit-slider-runnable-track {
		width: 100%;
		height: 4px;
		cursor: pointer;
		background: ${xe.uiWidgetBackground};
	}
	input[type=range]::-webkit-slider-thumb {
		height: 16px;
		width: 4px;
		border-radius: 2px;
		background: ${xe.primaryText};
		cursor: pointer;
		-webkit-appearance: none;
		margin-top: -6px;
	}
	input[type=range]:focus::-webkit-slider-runnable-track, input[type=range]:hover::-webkit-slider-runnable-track {
		background: ${xe.uiWidgetFocus};
	}
	input[type=range]::-moz-range-track {
		width: 100%;
		height: 4px;
		cursor: pointer;
		background: ${xe.uiWidgetBackground};
	}
	input[type=range]:focus::-moz-range-track, input[type=range]:hover::-moz-range-track  {
		background: ${xe.uiWidgetFocus};
	}
	input[type=range]::-moz-range-thumb {
		height: 16px;
		width: 4px;
		border-radius: 2px;
		border: none;
		background: ${xe.primaryText};
		cursor: pointer;
	}
	input[type=range]::-ms-track {
		width: 100%;
		height: 4px;
		cursor: pointer;
		background: ${xe.uiWidgetBackground};
		border-color: transparent;
	}
	input[type=range]:focus::-ms-track, input[type=range]:hover::-ms-track {
		background: ${xe.uiWidgetFocus};
	}
	input[type=range]::-ms-thumb {
		height: 16px;
		width: 4px;
		border-radius: 2px;
		background: ${xe.primaryText};
		cursor: pointer;
	}
`));var Oi=Bt("colorTheme");xe.setTheme(Oi===null?xe.defaultTheme:Oi);var Vi=null,Ui=(Math.random()*4294967295>>>0).toString(16),$i=!1,Cn,kn=!1,pt=1,oa=0,Fn=0,se=new pe,_i=new pn(Ar({width:ia?144:288,height:ia?32:64,style:`border:2px solid ${xe.uiWidgetBackground}; overflow: hidden;`,id:"oscilloscopeAll"}),ia?1:2),qr=Bt("showOscilloscope")!="false";qr||(_i.canvas.style.display="none",se.oscEnabled=!1);var Qi=Dr({style:"flex-grow: 1; margin: 0 1px; margin-left: 10px; overflow: hidden;"},""),Ji=Tn({target:"_top",style:"margin: 0 4px;"},"\u270E Edit"),ca=Tn({href:"javascript:void(0)",style:"margin: 0 4px;"},"\u2398 Copy URL"),Pn=Tn({href:"javascript:void(0)",style:"margin: 0 4px;"},"\u2933 Share"),pa=Tn({target:"_top",style:"margin: 0 4px;"},"\u21F1 Fullscreen"),on=!1,it=la({style:"width: 100%; height: 100%; max-height: 50px;"}),Rr=an({style:"flex-shrink: 0; display: flex; padding: 2px; width: 80px; height: 100%; box-sizing: border-box; align-items: center;"},it),Ki=tn({d:"M 4 2 L 4 0 L 7 3 L 4 6 L 4 4 Q 2 4 2 6 Q 2 8 4 8 L 4 10 Q 0 10 0 6 Q 0 2 4 2 M 8 10 L 8 12 L 5 9 L 8 6 L 8 8 Q 10 8 10 6 Q 10 4 8 4 L 8 2 Q 12 2 12 6 Q 12 10 8 10 z"}),Zi=la({title:"loop",style:"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;"},An({width:12,height:12,viewBox:"0 0 12 12"},Ki)),Br=An({style:"flex: 0 0 12px; margin: 0 1px; width: 12px; height: 12px;",viewBox:"0 0 12 12"},tn({fill:xe.uiWidgetBackground,d:"M 1 9 L 1 3 L 4 3 L 7 0 L 7 12 L 4 9 L 1 9 M 9 3 Q 12 6 9 9 L 8 8 Q 10.5 6 8 4 L 9 3 z"})),rn=Tr({title:"volume",type:"range",value:75,min:0,max:75,step:1,style:"width: 12vw; max-width: 100px; margin: 0 1px;"}),Yi=An({width:12,height:12,viewBox:"0 0 12 12"},Lr({cx:"5",cy:"5",r:"4.5","stroke-width":"1",stroke:"currentColor",fill:"none"}),tn({stroke:"currentColor","stroke-width":"2",d:"M 8 8 L 11 11 M 5 2 L 5 8 M 2 5 L 8 5",fill:"none"})),Xi=la({title:"zoom",style:"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;"},Yi),Ke=An({style:"min-width: 0; min-height: 0; touch-action: pan-y pinch-zoom;"}),ji=an({style:`position: absolute; left: 0; top: 0; width: 2px; height: 100%; background: ${xe.playhead}; pointer-events: none;`}),ra=an({style:"display: flex; flex-grow: 1; flex-shrink: 1; position: relative;"},Ke,ji),nn=an({style:"display: flex; flex-grow: 1; flex-shrink: 1; height: 0; position: relative; align-items: center; overflow: hidden;"},ra),In,qt=[],sa=-1,wn=Bt("notesFlashWhenPlayed")=="true",Nr=Bt("fixChannelColorOrder")!="false",zr=_e.rect({"pointer-events":"none",width:"90%",height:"50%",x:"5%",y:"25%",fill:xe.uiWidgetBackground}),En=_e.rect({"pointer-events":"none",height:"50%",width:"0%",x:"5%",y:"25%",fill:"url('#volumeGrad2')"}),Mn=_e.rect({"pointer-events":"none",width:"2px",height:"50%",x:"5%",y:"25%",fill:xe.uiWidgetFocus}),Wr=_e.stop({"stop-color":"lime",offset:"60%"}),Or=_e.stop({"stop-color":"orange",offset:"90%"}),Vr=_e.stop({"stop-color":"red",offset:"100%"}),Hr=_e.linearGradient({id:"volumeGrad2",gradientUnits:"userSpaceOnUse"},Wr,Or,Vr),Gr=_e.defs({},Hr),Ur=_e.svg({style:"touch-action: none; overflow: hidden; margin: auto;",width:"160px",height:"10px",preserveAspectRatio:"none"},Gr,zr,En,Mn);document.body.appendChild(nn);document.body.appendChild(an({style:"flex-shrink: 0; height: 20vh; min-height: 22px; max-height: 70px; display: flex; align-items: center;"},Rr,Zi,Br,rn,Xi,Ur,_i.canvas,Qi,Ji,ca,Pn,pa));function eo(o,e){try{Aa(o,e)}catch{}}function Bt(o){try{return Vt(o)}catch{return null}}function $r(o,e){if(!(o.length<1)){if(e===o.length-1)o.pop();else if(e>=0&&e<o.length-1){let i=o.pop();o[e]=i}}}function Hi(o,e){se.setSong(o),se.snapToStart();let i=se.song.toBase64String();Ji.href="../#"+i}function Ln(){let o=location.hash;if(!(Vi==o||o=="")){Vi=o,o.charAt(0)=="#"&&(o=o.substring(1)),pa.href=location.href;for(let e of o.split(/&(?=[a-z]+=)/g)){let i=e.indexOf("=");if(i!=-1){let n=e.substring(0,i),a=e.substring(i+1);switch(n){case"song":Hi(a,!0),se.song&&(Qi.textContent=se.song.title);break;case"loop":se.loopRepeatCount=a!="1"?0:-1,ma();break}}else Hi(o,!1)}ha()}}function _r(){ha()}var Dn=null;function Qr(){if(!se.playing){clearInterval(Dn);return}let o=Bt("playerId");o!=null&&o!=Ui&&(da(),Rt(),clearInterval(Dn))}function to(){se.playing&&(Cn=requestAnimationFrame(to),Rt(),no()),$i!=se.playing&&fa()}function no(){if(se.song==null){Mn.setAttribute("x","5%"),En.setAttribute("width","0%");return}oa--,oa<=0&&(Fn-=.03),se.song.outVolumeCap>Fn&&(Fn=se.song.outVolumeCap,oa=50),Jr(se.song.outVolumeCap,Fn),se.playing||(Mn.setAttribute("x","5%"),En.setAttribute("width","0%"))}function Jr(o,e){En.setAttribute("width",""+Math.min(144,o*144)),Mn.setAttribute("x",""+(8+Math.min(144,e*144)))}function da(){se.song!=null&&(Cn!=null&&cancelAnimationFrame(Cn),Cn=null,se.playing?(se.pause(),no()):(se.play(),eo("playerId",Ui),to(),clearInterval(Dn),Dn=setInterval(Qr,100))),fa()}function ao(){se.loopRepeatCount==-1?se.loopRepeatCount=0:se.loopRepeatCount=-1,ma()}function Kr(){eo("volume",rn.value),lo()}function io(){kn=!kn,co(),ha()}function Zr(o){on=!0,oo(o)}function oo(o){on&&(o.preventDefault(),so(o.clientX||o.pageX))}function Yr(o){on=!0,ro(o)}function ro(o){so(o.touches[0].clientX)}function so(o){if(on&&se.song!=null){let e=nn.getBoundingClientRect();se.playhead=se.song.barCount*(o-e.left)/(e.right-e.left),se.computeLatestModValues(),Rt()}}function ua(){on=!1}function lo(){let o=+rn.value;se.volume=Math.min(1,Math.pow(o/50,.5))*Math.pow(2,(o-75)/25)}function Rt(){if(se.song!=null){let i=se.playhead/se.song.barCount;ji.style.left=pt*i+"px";let n=nn.getBoundingClientRect();if(nn.scrollLeft=i*(pt-n.width),wn){let a=Math.floor(se.playhead),s=se.playhead-a,r=se.song.beatsPerBar*t.partsPerBeat,c=In[a];if(c!=null&&a!==sa){for(var o=qt.length-1;o>=0;o--){var e=qt[o];let d=Number(e.getAttribute("note-bar"))!==a,y=e.style.opacity==="0";d&&y&&$r(qt,o)}for(var o=0;o<c.length;o++){var e=c[o];qt.push(e)}}if(qt!=null)for(var o=0;o<qt.length;o++){var e=qt[o];let l=Number(e.getAttribute("note-start"))/r,v=Number(e.getAttribute("note-end"))/r,h=Number(e.getAttribute("note-bar"));if(s>=l&&h==a){let g=v-l;e.style.opacity=String(1-(s-l-g/2)/(g/2))}else e.style.opacity="0"}sa=a}}}function ha(){if(Ke.innerHTML="",se.song==null)return;let o=nn.getBoundingClientRect(),e,i,n;if(kn){e=o.height,i=Math.max(1,Math.min(t.pitchOctaves,Math.round(e/(12*2)))),n=i*12+1;let l=(e-1)/n,v=Math.max(8,l*4);pt=Math.max(o.width,v*se.song.barCount*se.song.beatsPerBar)}else{pt=o.width;let l=Math.max(1,pt/(se.song.barCount*se.song.beatsPerBar)/6);e=Math.min(o.height,l*(t.maxPitch+1)+1),i=Math.max(3,Math.min(t.pitchOctaves,Math.round(e/(12*l)))),n=i*12+1}ra.style.width=pt+"px",ra.style.height=e+"px",Ke.style.width=pt+"px",Ke.style.height=e+"px";let a=pt/se.song.barCount,s=a/(se.song.beatsPerBar*t.partsPerBeat),r=(e-1)/n,c=(e-1)/t.drumCount;for(let l=0;l<se.song.barCount+1;l++){let v=l==se.song.loopStart||l==se.song.loopStart+se.song.loopLength?xe.loopAccent:xe.uiWidgetBackground;Ke.appendChild(Wi({x:l*a-1,y:0,width:2,height:e,fill:v}))}for(let l=0;l<=i;l++)Ke.appendChild(Wi({x:0,y:l*12*r,width:pt,height:r+1,fill:xe.tonic,opacity:.75}));let d="#ffffff",y="#ffffff77";if(wn&&(d="var(--note-flash)",y="var(--note-flash-secondary)"),wn){In=[];for(let l=0;l<se.song.barCount;l++)In.push([]);sa=-1}for(let l=se.song.channels.length-1-se.song.modChannelCount;l>=0;l--){let v=se.song.getChannelIsNoise(l),h=v?c:r,g=se.song.channels[l].octave,m=Math.max(0,Math.min(t.pitchOctaves-i,Math.ceil(g-i*.5)))*h*12+e-h*.5-.5;for(let p=0;p<se.song.barCount;p++){let S=se.song.getPattern(l,p);if(S==null)continue;let x=p*a;for(let w=0;w<S.notes.length;w++){let b=S.notes[w];for(let P of b.pitches){let B=Gi(P,b.start,b.pins,(h+1)/2,x,m,s,h),L=tn({d:B,fill:xe.getChannelColor(se.song,se.song.channels[l].color,l,Nr).primaryChannel});if(v&&(L.style.opacity=String(.6)),Ke.appendChild(L),wn){let E=Gi(P,b.start,b.pins,(h+1)/2,x,m,s,h),D=tn({d:E,fill:v?y:d});D.style.opacity="0",D.setAttribute("note-start",String(b.start)),D.setAttribute("note-end",String(b.end)),D.setAttribute("note-bar",String(p)),Ke.appendChild(D),In[p].push(D)}}}}}Rt()}function Gi(o,e,i,n,a,s,r,c){let d=`M ${a+r*(e+i[0].time)} ${s-o*c+n*(i[0].size/t.noteSizeMax)} `;for(let y=0;y<i.length;y++){let l=i[y],v=a+r*(e+l.time),h=s-c*(o+l.interval),g=l.size/t.noteSizeMax;d+=`L ${v} ${h-n*g} `}for(let y=i.length-1;y>=0;y--){let l=i[y],v=a+r*(e+l.time),h=s-c*(o+l.interval),g=l.size/t.noteSizeMax;d+=`L ${v} ${h+n*g} `}return d}function fa(){se.playing?(it.classList.remove("playButton"),it.classList.add("pauseButton"),it.title="Pause (Space)",it.textContent="Pause"):(it.classList.remove("pauseButton"),it.classList.add("playButton"),it.title="Play (Space)",it.textContent="Play"),$i=se.playing}function ma(){Ki.setAttribute("fill",se.loopRepeatCount==-1?xe.linkAccent:xe.uiWidgetBackground)}function co(){Yi.style.color=kn?xe.linkAccent:xe.uiWidgetBackground}function Xr(o){switch(o.keyCode){case 70:se.playhead=0,se.computeLatestModValues(),Rt(),o.preventDefault();break;case 32:da(),se.computeLatestModValues(),o.preventDefault();break;case 219:se.goToPrevBar(),se.computeLatestModValues(),Rt(),o.preventDefault();break;case 221:se.goToNextBar(),se.computeLatestModValues(),Rt(),o.preventDefault();break;case 69:case 80:o.shiftKey&&(Ln(),location.href="../#"+se.song.toBase64String(),o.preventDefault());break;case 90:case 187:case 61:case 171:case 189:case 173:io();break;case 76:ao();break;case 83:o.ctrlKey&&(jr(),o.preventDefault());break;case 67:po();break}}function jr(){Ln();let o="https://tinyurl.com/api-create.php?url=";Vt("shortenerStrategySelect")=="isgd"&&(o="https://is.gd/create.php?format=simple&url="),window.open(o+encodeURIComponent(new URL("#"+se.song.toBase64String(),location.href).href))}function po(){if(navigator.clipboard&&navigator.clipboard.writeText){navigator.clipboard.writeText(location.href).catch(()=>{window.prompt("Copy to clipboard:",location.href)});return}let o=document.createElement("textarea");o.textContent=location.href,document.body.appendChild(o),o.select();let e=document.execCommand("copy");o.remove(),e||window.prompt("Copy this:",location.href)}function es(){navigator.share({url:location.href})}top!==self?(ca.style.display="none",Pn.style.display="none"):(pa.style.display="none","share"in navigator||(Pn.style.display="none"));Bt("volume")!=null&&(rn.value=Bt("volume"));lo();window.addEventListener("resize",_r);window.addEventListener("keydown",Xr);Ke.addEventListener("mousedown",Zr);window.addEventListener("mousemove",oo);window.addEventListener("mouseup",ua);Ke.addEventListener("touchstart",Yr);Ke.addEventListener("touchmove",ro);Ke.addEventListener("touchend",ua);Ke.addEventListener("touchcancel",ua);it.addEventListener("click",da);Zi.addEventListener("click",ao);rn.addEventListener("input",Kr);Xi.addEventListener("click",io);ca.addEventListener("click",po);Pn.addEventListener("click",es);window.addEventListener("hashchange",Ln);Ln();ma();co();fa();return bo(ts);})();
/*!
Copyright (c) 2012-2022 John Nesky and contributing authors

Permission is hereby granted, free of charge, to any person obtaining a copy of 
this software and associated documentation files (the "Software"), to deal in 
the Software without restriction, including without limitation the rights to 
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies 
of the Software, and to permit persons to whom the Software is furnished to do 
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all 
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE 
SOFTWARE.
*/
//# sourceMappingURL=beepbox_player.min.js.map
