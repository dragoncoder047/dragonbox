var beepbox=(()=>{var qn=Object.defineProperty;var pr=Object.getOwnPropertyDescriptor;var ur=Object.getOwnPropertyNames;var dr=Object.prototype.hasOwnProperty;var mr=(i,e)=>{for(var a in e)qn(i,a,{get:e[a],enumerable:!0})},hr=(i,e,a,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of ur(e))!dr.call(i,r)&&r!==a&&qn(i,r,{get:()=>e[r],enumerable:!(n=pr(e,r))||n.enumerable});return i};var fr=i=>hr(qn({},"__esModule",{value:!0}),i);var Yr={};mr(Yr,{Channel:()=>yt,Config:()=>t,EnvelopeType:()=>ot,Instrument:()=>Ne,InstrumentType:()=>mt,Note:()=>st,Pattern:()=>nt,Synth:()=>pe});var ot=(p=>(p[p.none=0]="none",p[p.noteSize=1]="noteSize",p[p.pitch=2]="pitch",p[p.pseudorandom=3]="pseudorandom",p[p.punch=4]="punch",p[p.flare=5]="flare",p[p.twang=6]="twang",p[p.swell=7]="swell",p[p.lfo=8]="lfo",p[p.tremolo2=9]="tremolo2",p[p.decay=10]="decay",p[p.wibble=11]="wibble",p[p.linear=12]="linear",p[p.rise=13]="rise",p[p.blip=14]="blip",p[p.fall=15]="fall",p))(ot||{}),mt=(y=>(y[y.chip=0]="chip",y[y.fm=1]="fm",y[y.noise=2]="noise",y[y.spectrum=3]="spectrum",y[y.drumset=4]="drumset",y[y.harmonics=5]="harmonics",y[y.pwm=6]="pwm",y[y.pickedString=7]="pickedString",y[y.supersaw=8]="supersaw",y[y.customChipWave=9]="customChipWave",y[y.mod=10]="mod",y[y.fm6op=11]="fm6op",y[y.length=12]="length",y))(mt||{}),_e=["chip","FM","noise","spectrum","drumset","harmonics","pulse width","picked string","supersaw","chip (custom)","mod","FM (6-op)"];var Rn=class{statusTable;urlTable;totalSamples;samplesLoaded;constructor(){this.statusTable={},this.urlTable={},this.totalSamples=0,this.samplesLoaded=0}},ve=new Rn,it=class extends Event{totalSamples;samplesLoaded;constructor(e,a){super("sampleloaded"),this.totalSamples=e,this.samplesLoaded=a}},Bn=class extends EventTarget{constructor(){super()}},kt=new Bn;async function Fa(i,e,a,n,r){let s=new AudioContext({sampleRate:r}),o=!1,c=t.chipWaves[e],u=t.rawChipWaves[e],b=t.rawRawChipWaves[e];fetch(i).then(l=>l.ok?l.arrayBuffer():(ve.statusTable[e]=2,Promise.reject(new Error("Couldn't load sample")))).then(l=>s.decodeAudioData(l)).then(l=>{let g=J(Array.from(l.getChannelData(0)));var m=g;l.numberOfChannels>1?m=J(Array.from(l.getChannelData(1))):m=g;let y=Pt(g),h=Pt(m);c.samples=y,c.samplesR=h,u.samples=g,u.samplesR=m,b.samples=g,b.samplesR=m,n.isUsingAdvancedLoopControls&&(a.chipWaveLoopStart=n.chipWaveLoopStart!=null?n.chipWaveLoopStart:0,a.chipWaveLoopEnd=n.chipWaveLoopEnd!=null?n.chipWaveLoopEnd:g.length-1,a.chipWaveLoopMode=n.chipWaveLoopMode!=null?n.chipWaveLoopMode:0,a.chipWavePlayBackwards=n.chipWavePlayBackwards,a.chipWaveStartOffset=n.chipWaveStartOffset!=null?n.chipWaveStartOffset:0),ve.samplesLoaded++,ve.statusTable[e]=1,kt.dispatchEvent(new it(ve.totalSamples,ve.samplesLoaded)),o||(o=!0,s.close())}).catch(l=>{ve.statusTable[e]=2,alert("Failed to load "+i+`:
`+l),o||(o=!0,s.close())})}function dt(i){return new Promise((a,n)=>{if(!t.willReloadForCustomSamples){let r=document.createElement("script");r.src=i,document.head.appendChild(r),r.addEventListener("load",s=>{a()})}})}function tt(i){let a=t.chipWaves[0].samples,n=t.rawRawChipWaves[0].samples;if(i==0){let r=[{name:"paandorasbox kick",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox snare",expression:3,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox piano1",expression:3,isSampled:!0,isPercussion:!1,extraSampleDetune:2},{name:"paandorasbox WOW",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"paandorasbox overdrive",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-2},{name:"paandorasbox trumpet",expression:3,isSampled:!0,isPercussion:!1,extraSampleDetune:1.2},{name:"paandorasbox saxophone",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-5},{name:"paandorasbox orchestrahit",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:4.2},{name:"paandorasbox detatched violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:4.2},{name:"paandorasbox synth",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-.8},{name:"paandorasbox sonic3snare",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox come on",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"paandorasbox choir",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-3},{name:"paandorasbox overdriveguitar",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-6.2},{name:"paandorasbox flute",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-6},{name:"paandorasbox legato violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-28},{name:"paandorasbox tremolo violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-33},{name:"paandorasbox amen break",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-55},{name:"paandorasbox pizzicato violin",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-11},{name:"paandorasbox tim allen grunt",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-20},{name:"paandorasbox tuba",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:44},{name:"paandorasbox loopingcymbal",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-17},{name:"paandorasbox standardkick",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-7},{name:"paandorasbox standardsnare",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"paandorasbox closedhihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:5},{name:"paandorasbox foothihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:4},{name:"paandorasbox openhihat",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-31},{name:"paandorasbox crashcymbal",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-43},{name:"paandorasbox pianoC4",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-42.5},{name:"paandorasbox liver pad",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-22.5},{name:"paandorasbox marimba",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-15.5},{name:"paandorasbox susdotwav",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-24.5},{name:"paandorasbox wackyboxtts",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-17.5},{name:"paandorasbox peppersteak_1",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-42.2},{name:"paandorasbox peppersteak_2",expression:2,isSampled:!0,isPercussion:!1,extraSampleDetune:-47},{name:"paandorasbox vinyl_noise",expression:2,isSampled:!0,isPercussion:!0,extraSampleDetune:-50},{name:"paandorasbeta slap bass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-56},{name:"paandorasbeta HD EB overdrive guitar",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-60},{name:"paandorasbeta sunsoft bass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-18.5},{name:"paandorasbeta masculine choir",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-50},{name:"paandorasbeta feminine choir",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-60.5},{name:"paandorasbeta tololoche",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-29.5},{name:"paandorasbeta harp",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-54},{name:"paandorasbeta pan flute",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-58},{name:"paandorasbeta krumhorn",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-46},{name:"paandorasbeta timpani",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-50},{name:"paandorasbeta crowd hey",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-29},{name:"paandorasbeta wario land 4 brass",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-68},{name:"paandorasbeta wario land 4 rock organ",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-63},{name:"paandorasbeta wario land 4 DAOW",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-35},{name:"paandorasbeta wario land 4 hour chime",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-47.5},{name:"paandorasbeta wario land 4 tick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-12.5},{name:"paandorasbeta kirby kick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby snare",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby bongo",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta kirby click",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46.5},{name:"paandorasbeta sonor kick",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28.5},{name:"paandorasbeta sonor snare",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28.5},{name:"paandorasbeta sonor snare (left hand)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-22.5},{name:"paandorasbeta sonor snare (right hand)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-22.5},{name:"paandorasbeta sonor high tom",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-41.5},{name:"paandorasbeta sonor low tom",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-41.5},{name:"paandorasbeta sonor hihat (closed)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-17},{name:"paandorasbeta sonor hihat (half opened)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-21},{name:"paandorasbeta sonor hihat (open)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-54.5},{name:"paandorasbeta sonor hihat (open tip)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-43.5},{name:"paandorasbeta sonor hihat (pedal)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-28},{name:"paandorasbeta sonor crash",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-51},{name:"paandorasbeta sonor crash (tip)",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-50.5},{name:"paandorasbeta sonor ride",expression:1,isSampled:!0,isPercussion:!0,extraSampleDetune:-46}];ve.totalSamples+=r.length;let s=t.rawRawChipWaves.length;for(let o of r){let c=t.rawRawChipWaves.length,u={index:c,name:o.name,expression:o.expression,isSampled:o.isSampled,isPercussion:o.isPercussion,extraSampleDetune:o.extraSampleDetune,samples:n},b={index:c,name:o.name,expression:o.expression,isSampled:o.isSampled,isPercussion:o.isPercussion,extraSampleDetune:o.extraSampleDetune,samples:n},l={index:c,name:o.name,expression:o.expression,isSampled:o.isSampled,isPercussion:o.isPercussion,extraSampleDetune:o.extraSampleDetune,samples:a};t.rawRawChipWaves[c]=b,t.rawRawChipWaves.dictionary[o.name]=b,t.rawChipWaves[c]=u,t.rawChipWaves.dictionary[o.name]=u,t.chipWaves[c]=l,t.chipWaves.dictionary[o.name]=u,ve.statusTable[c]=0,ve.urlTable[c]="legacySamples"}dt("samples.js").then(()=>dt("samples2.js")).then(()=>dt("samples3.js")).then(()=>dt("drumsamples.js")).then(()=>dt("wario_samples.js")).then(()=>dt("kirby_samples.js")).then(()=>{let o=[J(kicksample),J(snaresample),J(pianosample),J(WOWsample),J(overdrivesample),J(trumpetsample),J(saxophonesample),J(orchhitsample),J(detatchedviolinsample),J(synthsample),J(sonic3snaresample),J(comeonsample),J(choirsample),J(overdrivensample),J(flutesample),J(legatoviolinsample),J(tremoloviolinsample),J(amenbreaksample),J(pizzicatoviolinsample),J(timallengruntsample),J(tubasample),J(loopingcymbalsample),J(kickdrumsample),J(snaredrumsample),J(closedhihatsample),J(foothihatsample),J(openhihatsample),J(crashsample),J(pianoC4sample),J(liverpadsample),J(marimbasample),J(susdotwavsample),J(wackyboxttssample),J(peppersteak1),J(peppersteak2),J(vinyl),J(slapbass),J(hdeboverdrive),J(sunsoftbass),J(masculinechoir),J(femininechoir),J(southtololoche),J(harp),J(panflute),J(krumhorn),J(timpani),J(crowdhey),J(warioland4brass),J(warioland4organ),J(warioland4daow),J(warioland4hourchime),J(warioland4tick),J(kirbykick),J(kirbysnare),J(kirbybongo),J(kirbyclick),J(funkkick),J(funksnare),J(funksnareleft),J(funksnareright),J(funktomhigh),J(funktomlow),J(funkhihatclosed),J(funkhihathalfopen),J(funkhihatopen),J(funkhihatopentip),J(funkhihatfoot),J(funkcrash),J(funkcrashtip),J(funkride)],c=0;for(let u of o){let b=s+c;t.rawChipWaves[b].samples=u,t.rawRawChipWaves[b].samples=u,t.chipWaves[b].samples=Pt(u),ve.statusTable[b]=1,ve.samplesLoaded++,kt.dispatchEvent(new it(ve.totalSamples,ve.samplesLoaded)),c++}})}else if(i==1){let r=[{name:"chronoperc1final",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"synthkickfm",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"mcwoodclick1",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0},{name:"acoustic snare",expression:4,isSampled:!0,isPercussion:!0,extraSampleDetune:0}];ve.totalSamples+=r.length;let s=t.rawRawChipWaves.length;for(let o of r){let c=t.rawRawChipWaves.length,u={index:c,name:o.name,expression:o.expression,isSampled:o.isSampled,isPercussion:o.isPercussion,extraSampleDetune:o.extraSampleDetune,samples:n},b={index:c,name:o.name,expression:o.expression,isSampled:o.isSampled,isPercussion:o.isPercussion,extraSampleDetune:o.extraSampleDetune,samples:n},l={index:c,name:o.name,expression:o.expression,isSampled:o.isSampled,isPercussion:o.isPercussion,extraSampleDetune:o.extraSampleDetune,samples:a};t.rawRawChipWaves[c]=b,t.rawRawChipWaves.dictionary[o.name]=b,t.rawChipWaves[c]=u,t.rawChipWaves.dictionary[o.name]=u,t.chipWaves[c]=l,t.chipWaves.dictionary[o.name]=u,ve.statusTable[c]=0,ve.urlTable[c]="nintariboxSamples"}dt("nintaribox_samples.js").then(()=>{let o=[J(chronoperc1finalsample),J(synthkickfmsample),J(woodclicksample),J(acousticsnaresample)],c=0;for(let u of o){let b=s+c;t.rawChipWaves[b].samples=u,t.rawRawChipWaves[b].samples=u,t.chipWaves[b].samples=Pt(u),ve.statusTable[b]=1,ve.samplesLoaded++,kt.dispatchEvent(new it(ve.totalSamples,ve.samplesLoaded)),c++}})}else if(i==2){let r=[{name:"cat",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-3},{name:"gameboy",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:7},{name:"mario",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:0},{name:"drum",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:4},{name:"yoshi",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-16},{name:"star",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-16},{name:"fire flower",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-1},{name:"dog",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-1},{name:"oink",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:3},{name:"swan",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:1},{name:"face",expression:1,isSampled:!0,isPercussion:!1,extraSampleDetune:-12}];ve.totalSamples+=r.length;let s=t.rawRawChipWaves.length;for(let o of r){let c=t.rawRawChipWaves.length,u={index:c,name:o.name,expression:o.expression,isSampled:o.isSampled,isPercussion:o.isPercussion,extraSampleDetune:o.extraSampleDetune,samples:n},b={index:c,name:o.name,expression:o.expression,isSampled:o.isSampled,isPercussion:o.isPercussion,extraSampleDetune:o.extraSampleDetune,samples:n},l={index:c,name:o.name,expression:o.expression,isSampled:o.isSampled,isPercussion:o.isPercussion,extraSampleDetune:o.extraSampleDetune,samples:a};t.rawRawChipWaves[c]=b,t.rawRawChipWaves.dictionary[o.name]=b,t.rawChipWaves[c]=u,t.rawChipWaves.dictionary[o.name]=u,t.chipWaves[c]=l,t.chipWaves.dictionary[o.name]=u,ve.statusTable[c]=0,ve.urlTable[c]="marioPaintboxSamples"}dt("mario_paintbox_samples.js").then(()=>{let o=[J(catpaintboxsample),J(gameboypaintboxsample),J(mariopaintboxsample),J(drumpaintboxsample),J(yoshipaintboxsample),J(starpaintboxsample),J(fireflowerpaintboxsample),J(dogpaintbox),J(oinkpaintbox),J(swanpaintboxsample),J(facepaintboxsample)],c=0;for(let u of o){let b=s+c;t.rawChipWaves[b].samples=u,t.rawRawChipWaves[b].samples=u,t.chipWaves[b].samples=Pt(u),ve.statusTable[b]=1,ve.samplesLoaded++,kt.dispatchEvent(new it(ve.totalSamples,ve.samplesLoaded)),c++}})}else console.log("invalid set of built-in samples")}var t=class i{static thresholdVal=-10;static kneeVal=40;static ratioVal=12;static attackVal=0;static releaseVal=.25;static willReloadForCustomSamples=!1;static jsonFormat="DragonBox";static scales=he([{name:"Free",realName:"chromatic",flags:[!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0]},{name:"Major",realName:"ionian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0]},{name:"Minor",realName:"aeolian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Mixolydian",realName:"mixolydian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!0,!1]},{name:"Lydian",realName:"lydian",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0]},{name:"Dorian",realName:"dorian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!0,!1]},{name:"Phrygian",realName:"phrygian",flags:[!0,!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Locrian",realName:"locrian",flags:[!0,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1]},{name:"Lydian Dominant",realName:"lydian dominant",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!0,!1]},{name:"Phrygian Dominant",realName:"phrygian dominant",flags:[!0,!0,!1,!1,!0,!0,!1,!0,!0,!1,!0,!1]},{name:"Harmonic Major",realName:"harmonic major",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!0,!1,!1,!0]},{name:"Harmonic Minor",realName:"harmonic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0]},{name:"Melodic Minor",realName:"melodic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1,!0]},{name:"Blues Major",realName:"blues major",flags:[!0,!1,!0,!0,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"Blues",realName:"blues",flags:[!0,!1,!1,!0,!1,!0,!0,!0,!1,!1,!0,!1]},{name:"Altered",realName:"altered",flags:[!0,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Major Pentatonic",realName:"major pentatonic",flags:[!0,!1,!0,!1,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"Minor Pentatonic",realName:"minor pentatonic",flags:[!0,!1,!1,!0,!1,!0,!1,!0,!1,!1,!0,!1]},{name:"Whole Tone",realName:"whole tone",flags:[!0,!1,!0,!1,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Octatonic",realName:"octatonic",flags:[!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!1,!0]},{name:"Hexatonic",realName:"hexatonic",flags:[!0,!1,!1,!0,!0,!1,!1,!0,!0,!1,!1,!0]},{name:"No Dabbing (MB)",realName:"no dabbing",flags:[!0,!0,!1,!0,!0,!0,!0,!0,!0,!1,!0,!1]},{name:"Jacked Toad (TB)",realName:"jacked toad",flags:[!0,!1,!0,!0,!1,!0,!0,!0,!0,!1,!0,!0]},{name:"Test Scale (TB)",realName:"**t",flags:[!0,!0,!1,!1,!1,!0,!0,!1,!1,!0,!0,!1]},{name:"Custom",realName:"custom",flags:[!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0]}]);static keys=he([{name:"C",isWhiteKey:!0,basePitch:12},{name:"C\u266F",isWhiteKey:!1,basePitch:13},{name:"D",isWhiteKey:!0,basePitch:14},{name:"D\u266F",isWhiteKey:!1,basePitch:15},{name:"E",isWhiteKey:!0,basePitch:16},{name:"F",isWhiteKey:!0,basePitch:17},{name:"F\u266F",isWhiteKey:!1,basePitch:18},{name:"G",isWhiteKey:!0,basePitch:19},{name:"G\u266F",isWhiteKey:!1,basePitch:20},{name:"A",isWhiteKey:!0,basePitch:21},{name:"A\u266F",isWhiteKey:!1,basePitch:22},{name:"B",isWhiteKey:!0,basePitch:23}]);static blackKeyNameParents=[-1,1,-1,1,-1,1,-1,-1,1,-1,1,-1];static tempoMin=1;static tempoMax=2e3;static octaveMin=-2;static octaveMax=2;static echoDelayRange=24;static echoDelayStepTicks=4;static echoSustainRange=24;static echoShelfHz=4e3;static echoShelfGain=Math.pow(2,-.5);static reverbShelfHz=8e3;static reverbShelfGain=Math.pow(2,-1.5);static reverbRange=32;static reverbDelayBufferSize=16384;static reverbDelayBufferMask=i.reverbDelayBufferSize-1;static beatsPerBarMin=1;static beatsPerBarMax=64;static barCountMin=1;static barCountMax=1024;static instrumentCountMin=1;static layeredInstrumentCountMax=10;static patternInstrumentCountMax=10;static partsPerBeat=24;static ticksPerPart=2;static ticksPerArpeggio=3;static arpeggioPatterns=[[0],[0,1],[0,1,2,1],[0,1,2,3],[0,1,2,3,4],[0,1,2,3,4,5],[0,1,2,3,4,5,6],[0,1,2,3,4,5,6,7]];static rhythms=he([{name:"\xF73 (triplets)",stepsPerBeat:3,roundUpThresholds:[5,12,18]},{name:"\xF74 (standard)",stepsPerBeat:4,roundUpThresholds:[3,9,17,21]},{name:"\xF76",stepsPerBeat:6,roundUpThresholds:null},{name:"\xF78",stepsPerBeat:8,roundUpThresholds:null},{name:"\xF712",stepsPerBeat:12,roundUpThresholds:null},{name:"freehand",stepsPerBeat:24,roundUpThresholds:null}]);static instrumentTypeNames=["chip","FM","noise","spectrum","drumset","harmonics","PWM","Picked String","supersaw","custom chip","mod","FM6op"];static instrumentTypeHasSpecialInterval=[!0,!0,!1,!1,!1,!0,!1,!1,!1,!1,!1];static chipBaseExpression=.03375;static fmBaseExpression=.03;static noiseBaseExpression=.19;static spectrumBaseExpression=.3;static drumsetBaseExpression=.45;static harmonicsBaseExpression=.025;static pwmBaseExpression=.04725;static supersawBaseExpression=.061425;static pickedStringBaseExpression=.025;static distortionBaseVolume=.011;static bitcrusherBaseVolume=.01;static granularOutputLoudnessCompensation=.5;static rawChipWaves=he([{name:"rounded",expression:.94,samples:J([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0,-.2,-.4,-.5,-.6,-.7,-.8,-.85,-.9,-.95,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-.95,-.9,-.85,-.8,-.7,-.6,-.5,-.4,-.2])},{name:"triangle",expression:1,samples:J([1/15,3/15,5/15,7/15,9/15,11/15,13/15,15/15,15/15,13/15,11/15,9/15,7/15,5/15,3/15,1/15,-1/15,-3/15,-5/15,-7/15,-9/15,-11/15,-13/15,-15/15,-15/15,-13/15,-11/15,-9/15,-7/15,-5/15,-3/15,-1/15])},{name:"square",expression:.5,samples:J([1,-1])},{name:"1/4 pulse",expression:.5,samples:J([1,-1,-1,-1])},{name:"1/8 pulse",expression:.5,samples:J([1,-1,-1,-1,-1,-1,-1,-1])},{name:"sawtooth",expression:.65,samples:J([1/31,3/31,5/31,7/31,9/31,11/31,13/31,15/31,17/31,19/31,21/31,23/31,25/31,27/31,29/31,31/31,-31/31,-29/31,-27/31,-25/31,-23/31,-21/31,-19/31,-17/31,-15/31,-13/31,-11/31,-9/31,-7/31,-5/31,-3/31,-1/31])},{name:"double saw",expression:.5,samples:J([0,-.2,-.4,-.6,-.8,-1,1,-.8,-.6,-.4,-.2,1,.8,.6,.4,.2])},{name:"double pulse",expression:.4,samples:J([1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,-1,-1])},{name:"spiky",expression:.4,samples:J([1,-1,1,-1,1,0])},{name:"sine",expression:.88,samples:ne([8,9,11,12,13,14,15,15,15,15,14,14,13,11,10,9,7,6,4,3,2,1,0,0,0,0,1,1,2,4,5,6])},{name:"flute",expression:.8,samples:ne([3,4,6,8,10,11,13,14,15,15,14,13,11,8,5,3])},{name:"harp",expression:.8,samples:ne([0,3,3,3,4,5,5,6,7,8,9,11,11,13,13,15,15,14,12,11,10,9,8,7,7,5,4,3,2,1,0,0])},{name:"sharp clarinet",expression:.38,samples:ne([0,0,0,1,1,8,8,9,9,9,8,8,8,8,8,9,9,7,9,9,10,4,0,0,0,0,0,0,0,0,0,0])},{name:"soft clarinet",expression:.45,samples:ne([0,1,5,8,9,9,9,9,9,9,9,11,11,12,13,12,10,9,7,6,4,3,3,3,1,1,1,1,1,1,1,1])},{name:"alto sax",expression:.3,samples:ne([5,5,6,4,3,6,8,7,2,1,5,6,5,4,5,7,9,11,13,14,14,14,14,13,10,8,7,7,4,3,4,2])},{name:"bassoon",expression:.35,samples:ne([9,9,7,6,5,4,4,4,4,5,7,8,9,10,11,13,13,11,10,9,7,6,4,2,1,1,1,2,2,5,11,14])},{name:"trumpet",expression:.22,samples:ne([10,11,8,6,5,5,5,6,7,7,7,7,6,6,7,7,7,7,7,6,6,6,6,6,6,6,6,7,8,9,11,14])},{name:"electric guitar",expression:.2,samples:ne([11,12,12,10,6,6,8,0,2,4,8,10,9,10,1,7,11,3,6,6,8,13,14,2,0,12,8,4,13,11,10,13])},{name:"organ",expression:.2,samples:ne([11,10,12,11,14,7,5,5,12,10,10,9,12,6,4,5,13,12,12,10,12,5,2,2,8,6,6,5,8,3,2,1])},{name:"pan flute",expression:.35,samples:ne([1,4,7,6,7,9,7,7,11,12,13,15,13,11,11,12,13,10,7,5,3,6,10,7,3,3,1,0,1,0,1,0])},{name:"glitch",expression:.5,samples:J([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1])},{name:"trapezoid",expression:1,samples:J([1/15,6/15,10/15,14/15,15/15,15/15,15/15,15/15,15/15,15/15,15/15,15/15,14/15,10/15,6/15,1/15,-1/15,-6/15,-10/15,-14/15,-15/15,-15/15,-15/15,-15/15,-15/15,-15/15,-15/15,-15/15,-14/15,-10/15,-6/15,-1/15])},{name:"modbox 10% pulse",expression:.5,samples:ne([1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"modbox sunsoft bass",expression:1,samples:ne([0,.1875,.3125,.5625,.5,.75,.875,1,1,.6875,.5,.625,.625,.5,.375,.5625,.4375,.5625,.4375,.4375,.3125,.1875,.1875,.375,.5625,.5625,.5625,.5625,.5625,.4375,.25,0])},{name:"modbox loud pulse",expression:.5,samples:ne([1,.7,.1,.1,0,0,0,0,0,.1,.2,.15,.25,.125,.215,.345,4])},{name:"modbox sax",expression:.5,samples:ne([1/15,3/15,5/15,9,.06])},{name:"modbox guitar",expression:.5,samples:ne([-.5,3.5,3,-.5,-.25,-1])},{name:"modbox sine",expression:.5,samples:ne([0,.05,.125,.2,.25,.3,.425,.475,.525,.625,.675,.725,.775,.8,.825,.875,.9,.925,.95,.975,.98,.99,.995,1,.995,.99,.98,.975,.95,.925,.9,.875,.825,.8,.775,.725,.675,.625,.525,.475,.425,.3,.25,.2,.125,.05,0,-.05,-.125,-.2,-.25,-.3,-.425,-.475,-.525,-.625,-.675,-.725,-.775,-.8,-.825,-.875,-.9,-.925,-.95,-.975,-.98,-.99,-.995,-1,-.995,-.99,-.98,-.975,-.95,-.925,-.9,-.875,-.825,-.8,-.775,-.725,-.675,-.625,-.525,-.475,-.425,-.3,-.25,-.2,-.125,-.05])},{name:"modbox atari bass",expression:.5,samples:ne([1,1,1,1,0,1,0,1,1,0,0,1,0,0,0])},{name:"modbox atari pulse",expression:.5,samples:ne([1,0,1,1,1,1,1,1,1,1,1,1,1,1,1])},{name:"modbox 1% pulse",expression:.5,samples:ne([1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"modbox curved sawtooth",expression:.5,samples:ne([1,1/2,1/3,1/4])},{name:"modbox viola",expression:.45,samples:ne([-.9,-1,-.85,-.775,-.7,-.6,-.5,-.4,-.325,-.225,-.2,-.125,-.1,-.11,-.125,-.15,-.175,-.18,-.2,-.21,-.22,-.21,-.2,-.175,-.15,-.1,-.5,.75,.11,.175,.2,.25,.26,.275,.26,.25,.225,.2,.19,.18,.19,.2,.21,.22,.23,.24,.25,.26,.275,.28,.29,.3,.29,.28,.27,.26,.25,.225,.2,.175,.15,.1,.075,0,-.01,-.025,.025,.075,.2,.3,.475,.6,.75,.85,.85,1,.99,.95,.8,.675,.475,.275,.01,-.15,-.3,-.475,-.5,-.6,-.71,-.81,-.9,-1,-.9])},{name:"modbox brass",expression:.45,samples:ne([-1,-.95,-.975,-.9,-.85,-.8,-.775,-.65,-.6,-.5,-.475,-.35,-.275,-.2,-.125,-.05,0,.075,.125,.15,.2,.21,.225,.25,.225,.21,.2,.19,.175,.125,.1,.075,.06,.05,.04,.025,.04,.05,.1,.15,.225,.325,.425,.575,.7,.85,.95,1,.9,.675,.375,.2,.275,.4,.5,.55,.6,.625,.65,.65,.65,.65,.64,.6,.55,.5,.4,.325,.25,.15,.05,-.05,-.15,-.275,-.35,-.45,-.55,-.65,-.7,-.78,-.825,-.9,-.925,-.95,-.975])},{name:"modbox acoustic bass",expression:.5,samples:ne([1,0,.1,-.1,-.2,-.4,-.3,-1])},{name:"modbox lyre",expression:.45,samples:ne([1,-1,4,2.15,4.13,5.15,0,-.05,1])},{name:"modbox ramp pulse",expression:.5,samples:ne([6.1,-2.9,1.4,-2.9])},{name:"modbox piccolo",expression:.5,samples:ne([1,4,2,1,-.1,-1,-.12])},{name:"modbox squaretooth",expression:.5,samples:ne([.2,1,2.6,1,0,-2.4])},{name:"modbox flatline",expression:1,samples:ne([1,.9,.8,.7,.6,.5,.4,.3,.2,.1,0,.1,.2,.3,.4,.5,.6,.7,.8,.9])},{name:"modbox pnryshk a (u5)",expression:.4,samples:ne([1,.9,.8,.7,.6,.5,.4,.3,.2,.1,0])},{name:"modbox pnryshk b (riff)",expression:.5,samples:ne([1,-.9,.8,-.7,.6,-.5,.4,-.3,.2,-.1,0,-.1,.2,-.3,.4,-.5,.6,-.7,.8,-.9,1])},{name:"sandbox shrill lute",expression:.94,samples:ne([1,1.5,1.25,1.2,1.3,1.5])},{name:"sandbox bassoon",expression:.5,samples:ne([1,-1,1,1,1,1,1,1,1,1,1,1,0])},{name:"sandbox shrill bass",expression:.5,samples:ne([0,1,0,0,1,0,1,0,0,0])},{name:"sandbox nes pulse",expression:.4,samples:ne([2.1,-2.2,1.2,3])},{name:"sandbox saw bass",expression:.25,samples:ne([1,1,1,1,0,2,1,2,3,1,-2,1,4,1,4,2,1,6,-3,4,2,1,5,1,4,1,5,6,7,1,6,1,4,1,9])},{name:"sandbox euphonium",expression:.3,samples:ne([0,1,2,1,2,1,4,2,5,0,-2,1,5,1,2,1,2,4,5,1,5,-2,5,10,1])},{name:"sandbox shrill pulse",expression:.3,samples:ne([2,0,4,1,4,6,7,3])},{name:"sandbox r-sawtooth",expression:.2,samples:ne([6.1,-2.9,1.4,-2.9])},{name:"sandbox recorder",expression:.2,samples:ne([5,-5.1,4,-4.1,3,-3.1,2,-2.1,1,-1.1,6])},{name:"sandbox narrow saw",expression:1.2,samples:ne([.1,.13/-.1,.13/-.3,.13/-.5,.13/-.7,.13/-.9,.13/-.11,.13/-.31,.13/-.51,.13/-.71,.13/-.91,.13/-.12,.13/-.32,.13/-.52,.13/-.72,.13/-.92,.13/-.13,.13/.13,.13/.92,.13/.72,.13/.52,.13/.32,.13/.12,.13/.91,.13/.71,.13/.51,.13/.31,.13/.11,.13/.9,.13/.7,.13/.5,.13/.3,.13])},{name:"sandbox deep square",expression:1,samples:ne([1,2.25,1,-1,-2.25,-1])},{name:"sandbox ring pulse",expression:1,samples:ne([1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,-1,-1,-1])},{name:"sandbox double sine",expression:1,samples:ne([1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,1.8,1.7,1.6,1.5,1.4,1.3,1.2,1.1,1,0,-1,-1.1,-1.2,-1.3,-1.4,-1.5,-1.6,-1.7,-1.8,-1.9,-1.8,-1.7,-1.6,-1.5,-1.4,-1.3,-1.2,-1.1,-1])},{name:"sandbox contrabass",expression:.5,samples:ne([4.2,6.9,1.337,6.66])},{name:"sandbox double bass",expression:.4,samples:ne([0,.1875,.3125,.5625,.5,.75,.875,1,-1,-.6875,-.5,-.625,-.625,-.5,-.375,-.5625,-.4375,-.5625,-.4375,-.4375,-.3125,-.1875,.1875,.375,.5625,-.5625,.5625,.5625,.5625,.4375,.25,0])},{name:"haileybox test1",expression:.5,samples:ne([1,.5,-1])},{name:"brucebox pokey 4bit lfsr",expression:.5,samples:ne([1,-1,-1,-1,1,1,1,1,-1,1,-1,1,1,-1,-1])},{name:"brucebox pokey 5step bass",expression:.5,samples:ne([1,-1,1,-1,1])},{name:"brucebox isolated spiky",expression:.5,samples:ne([1,-1,1,-1,1,-1])},{name:"nerdbox unnamed 1",expression:.5,samples:ne([.2,.8/.2,.7,-.4,-1,.5,-.5/.6])},{name:"nerdbox unnamed 2",expression:.5,samples:ne([2,5/55,-9,6.5/6.5,-55,18.5/-26])},{name:"zefbox semi-square",expression:1,samples:ne([1,1.5,2,2.5,2.5,2.5,2,1.5,1])},{name:"zefbox deep square",expression:1,samples:ne([1,2.25,1,-1,-2.25,-1])},{name:"zefbox squaretal",expression:.7,samples:ne([1.5,1,1.5,-1.5,-1,-1.5])},{name:"zefbox saw wide",expression:.65,samples:ne([0,-.4,-.8,-1.2,-1.6,-2,0,-.4,-.8,-1.2,-1.6])},{name:"zefbox saw narrow",expression:.65,samples:ne([1,.5,1,.5,1,.5,1,2,1,2,1])},{name:"zefbox deep sawtooth",expression:.5,samples:ne([0,2,3,4,4.5,5,5.5,6,6.25,6.5,6.75,7,6.75,6.5,6.25,6,5.5,5,4.5,4,3,2,1])},{name:"zefbox sawtal",expression:.3,samples:ne([1.5,1,1.25,-.5,1.5,-.5,0,-1.5,1.5,0,.5,-1.5,.5,1.25,-1,-1.5])},{name:"zefbox deep sawtal",expression:.7,samples:ne([.75,.25,.5,-.5,.5,-.5,-.25,-.75])},{name:"zefbox pulse",expression:.5,samples:ne([1,-2,-2,-1.5,-1.5,-1.25,-1.25,-1,-1])},{name:"zefbox triple pulse",expression:.4,samples:ne([1,1,1,1,1,-1,-1,1.5,1,1,1,1,-1,-1,-1,1.5])},{name:"zefbox high pulse",expression:.2,samples:ne([1,-2,2,-3,3,-4,5,-4,3,-3,2,-2,1])},{name:"zefbox deep pulse",expression:.2,samples:ne([1,2,2,-2,-2,-3,-4,-4,-5,-5,-5,-5,0,-1,-2])},{name:"wackybox guitar string",expression:.6,samples:ne([0,63,63,63,63,19,63,63,63,63,63,63,63,63,63,63,11,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,27,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,34,63,63,63,63])},{name:"wackybox intense",expression:.6,samples:ne([36,25,33,35,18,51,22,40,27,37,31,33,25,29,41,23,31,31,45,20,37,23,29,26,42,29,33,26,31,27,40,25,40,26,37,24,41,32,0,32,33,29,32,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31])},{name:"wackybox buzz wave",expression:.6,samples:ne([0,1,1,2,4,4,4,4,5,5,6,6,6,7,8,8,8,9,9,9,9,9,9,8,8,8,11,15,23,62,61,60,58,56,56,54,53,52,50,49,48,47,47,45,45,45,44,44,43,43,42,42,42,42,42,42,42,42,42,42,42,43,43,53])},{name:"todbox 1/3 pulse",expression:.5,samples:J([1,-1,-1])},{name:"todbox 1/5 pulse",expression:.5,samples:J([1,-1,-1,-1,-1])},{name:"todbox slap bass",expression:.5,samples:ne([1,.5,0,.5,1.25,.5,-.25,.1,-.1,.1,1.1,2.1,3,3.5,2.9,3.3,2.7,2.9,2.3,2,1.9,1.8,1,.7,.9,.8,.4,.1,0,.2,.4,.6,.5,.8])},{name:"todbox harsh wave",expression:.45,samples:ne([1,-1,-1,-1,.5,.5,.5,.7,.39,1.3,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1])},{name:"todbox accordian",expression:.5,samples:ne([0,1,1,2,2,1.5,1.5,.8,0,-2,-3.25,-4,-4.5,-5.5,-6,-5.75,-5.5,-5,-5,-5,-6,-6,-6,-5,-4,-3,-2,-1,.75,1,2,3,4,5,6,6.5,7.5,8,7.75,6,5.25,5,5,5,5,5,4.25,3.75,3.25,2.75,1.25,-.75,-2,-.75,1.25,1.25,2,2,2,2,1.5,-1,-2,-1,1.5,2,2.75,2.75,2.75,3,2.75,-1,-2,-2.5,-2,-1,-2.25,-2.75,-2,-3,-1.75,1,2,3.5,4,5.25,6,8,9.75,10,9.5,9,8.5,7.5,6.5,5.25,5,4.5,4,4,4,3.25,2.5,2,1,-.5,-2,-3.5,-4,-4,-4,-3.75,-3,-2,-1])},{name:"todbox beta banana wave",expression:.8,samples:ne([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0])},{name:"todbox beta test wave",expression:.5,samples:ne([56,0,-52,16,3,3,2,-35,20,147,-53,0,0,5,-6])},{name:"todbox beta real snare",expression:1,samples:ne([0,-.01208,-.02997,-.04382,-.06042,-.07529,-.09116,-.10654,-.12189,-.13751,-.15289,-.16849,-.18387,-.19974,-.21484,-.23071,-.24557,-.26144,-.27731,-.29141,-.3035,-.32416,-.34406,-.32947,-.31158,-.33725,-.37579,-.39746,-.40201,-.40906,-.4418,-.47229,-.47379,-.47733,-.45239,-.33954,-.22894,-.22443,-.32138,-.46371,-.57178,-.61081,-.59998,-.61459,-.62189,-.43979,-.19217,-.12643,-.17252,-.20956,-.20981,-.19217,-.22845,-.34332,-.50629,-.64307,-.72922,-.81384,-.87857,-.90149,-.88687,-.86169,-.87781,-.80478,-.52493,-.31308,-.33249,-.39395,-.39017,-.30301,-.19949,-.13071,-.02493,.14307,.34961,.52542,.63223,.68613,.7471,.87305,.98184,.98889,.97052,.99066,.99747,.99344,.99469,.99393,.9957,.99393,.99521,.99469,.9942,.99521,.9942,.99521,.99469,.99469,.99521,.9942,.99545,.99445,.99469,.99493,.9942,.99521,.99393,.99493,.99469,.99445,.9957,.99445,.99521,.99469,.99469,.99521,.9942,.99545,.99445,.99445,.99493,.9942,.99545,.9942,.99493,.99493,.9942,.99545,.99445,.99521,.99469,.99445,.99545,.99368,.99393,.99445,.99268,.97983,.97229,.95944,.88486,.76773,.64481,.53098,.39847,.19318,-.03827,-.20325,-.39319,-.68765,-.88461,-.93448,-.96069,-.97681,-.98715,-.99042,-.99142,-.99091,-.99142,-.99219,-.99091,-.99219,-.99066,-.99142,-.99142,-.99118,-.99191,-.99066,-.99191,-.99142,-.99142,-.99191,-.99091,-.99219,-.99118,-.99142,-.99167,-.99091,-.99219,-.99091,-.99167,-.99142,-.99091,-.99191,-.99091,-.99191,-.99142,-.99118,-.99191,-.99066,-.99191,-.99118,-.99142,-.99191,-.99066,-.99191,-.99091,-.99167,-.99191,-.99118,-.99219,-.99091,-.99191,-.99142,-.99142,-.99243,-.98865,-.98764,-.99219,-.98083,-.92517,-.9277,-.91486,-.59042,-.15189,.02945,.05667,.06195,.00629,-.18008,-.56497,-.8801,-.9277,-.92871,-.97705,-.99167,-.98663,-.99118,-.99042,-.99219,-.99142,-.99118,-.98941,-.99219,-1,-.9758,-.95993,-.99948,-.98236,-.84659,-.7486,-.70679,-.59747,-.48035,-.41687,-.36826,-.29745,-.18185,-.06219,.02164,.07907,.13123,.18033,.1962,.15692,.14053,.20251,.2753,.30905,.29092,.27252,.30402,.32416,.32214,.35239,.3967,.43198,.4942,.58487,.64154,.65967,.6705,.67026,.66522,.6554,.66119,.70627,.75842,.78738,.7894,.78763,.80402,.85944,.94559,.9899,.9816,.98007,.99368,.99393,.98538,.9758,.97101,.93802,.81812,.64633,.46649,.28613,.14685,.08966,.12543,.20325,.24557,.18866,.02795,-.20175,-.44205,-.58713,-.57629,-.41385,-.14255,.18033,.47882,.68311,.72314,.62064,.48309,.43073,.53577,.72794,.9025,.97354,.97,.98083,.99191,.99319,.99493,.99393,.99521,.99393,.99545,.9942,.99493,.99493,.99445,.99545,.9942,.99545,.99243,.98917,.98386,.97781,.95844,.89066,.81561,.78134,.77277,.75995,.73022,.67126,.57178,.47,.38361,.29419,.20703,.14734,.15866,.25162,.35818,.45062,.5675,.69748,.81232,.89697,.95062,.97656,.98615,.99191,.99219,.99243,.99368,.99368,.97028,.95566,.94559,.82617,.59973,.38361,.23901,.15338,.12921,.11206,.04382,-.12946,-.43552,-.72644,-.89847,-.95465,-.95541,-.97229,-.99268,-.99319,-.9884,-.99142,-.99167,-.99091,-.9884,-.98965,-.99368,-.97455,-.9501,-.94684,-.96219,-.98514,-.99243,-.98889,-.98917,-.99142,-.99219,-.99091,-.99191,-.99142,-.99142,-.99191,-.99066,-.99167,-.99091,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99167,-.99091,-.99219,-.99091,-.99191,-.99142,-.99118,-.99191,-.99066,-.99191,-.99091,-.99118,-.99243,-.98941,-.98462,-.96976,-.9632,-.96194,-.87305,-.66196,-.44809,-.29495,-.18085,-.11813,-.11334,-.18564,-.34885,-.58237,-.8045,-.93726,-.97806,-.97354,-.97531,-.9899,-.99368,-.98941,-.99219,-.99091,-.99142,-.99167,-.99091,-.99191,-.99118,-.99219,-.98236,-.97781,-.97656,-.95135,-.87204,-.71335,-.52139,-.34232,-.17783,-.00906,.14886,.3045,.48889,.67404,.8403,.94128,.97681,.98462,.98337,.99142,.99521,.99493,.9942,.99445,.99521,.99393,.99545,.99445,.99521,.99521,.99445,.9957,.99445,.99521,.99469,.99445,.99521,.9942,.99521,.99445,.99445,.99521,.99445,.99545,.99445,.99469,.99493,.99393,.99493,.99445,.99393,.98285,.97781,.97479,.92844,.82114,.66095,.52417,.46826,.46722,.47934,.47379,.47076,.48209,.42014,.25439,.10074,-.00302,-.08966,-.16068,-.21436,-.2204,-.15137,-.00476,.18536,.37631,.52292,.62164,.70425,.74835,.72366,.63928,.52567,.40805,.35666,.42896,.60175,.802,.92743,.96548,.97632,.98337,.99066,.99521,.9942,.99368,.99292,.9884,.98083,.96774,.93323,.8544,.6947,.47202,.20425,-.0889,-.36423,-.60025,-.77481,-.90173,-.96017,-.97028,-.98108,-.9884,-.99219,-.9899,-.99219,-.99142,-.99142,-.99219,-.99091,-.99243,-.99066,-.99142,-.99142,-.99118,-.99191,-.99066,-.99167,-.99142,-.99142,-.99219,-.99091,-.99191,-.99118,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99191,-.99118,-.99219,-.99091,-.99167,-.99142,-.99142,-.99219,-.99091,-.99191,-.99142,-.99118,-.98917,-.99042,-.99445,-.9733,-.9559,-.96219,-.8967,-.72241,-.55112,-.44809,-.39319,-.37833,-.35641,-.2627,-.1423,-.11282,-.13525,-.11536,-.09671,-.11511,-.1806,-.26874,-.33374,-.42215,-.51358,-.44785,-.3045,-.28613,-.30527,-.25037,-.1539,-.08286,-.11157,-.12592,-.00327,.13803,.19141,.1282,.01788,-.03952,-.12592,-.26773,-.34634,-.31384,-.1806,-.0108,.13574,.2612,.36975,.46573,.55087,.63626,.73022,.83072,.92014,.97177,.98587,.98413,.99167,.99445,.99292,.99219,.9874,.98007,.96472,.92239,.82166,.69067,.57959,.54962,.59695,.64255,.64633,.60629,.55942,.5491,.58966,.61887,.56952,.54181,.59518,.63248,.63876,.65463,.73398,.88312,.96927,.97101,.97958,.99344,.9942,.99268,.99493,.99469,.99445,.99521,.99445,.99545,.9942,.99493,.99493,.9942,.99545,.9942,.99493,.9942,.99393,.9942,.9884,.98309,.98309,.96069,.88461,.7937,.72064,.65765,.59998,.53247,.49268,.48615,.44205,.38034,.36447,.38715,.39294,.32645,.19595,.07782,-.05893,-.27832,-.48309,-.62619,-.72995,-.79999,-.84583,-.82166,-.73575,-.67227,-.65491,-.6496,-.66397,-.70175,-.72894,-.74658,-.76724,-.7952,-.82846,-.86523,-.90527,-.94382,-.89948,-.69849,-.47479,-.31662,-.15414,-.00729,.07077,.08237,.04431,-.02292,-.11761,-.24307,-.36926,-.45087,-.4617,-.4025,-.30679,-.17529,0,.14331,.24179,.36774,.49545,.56522,.57907,.56775,.53851,.51132,.48688,.41913,.26044,.00955,-.26297,-.46396,-.62341,-.82214,-.94684,-.96774,-.97531,-.98413,-.99017,-.9899,-.99219,-.99066,-.99142,-.99167,-.99118,-.99219,-.9899,-.99118,-.99368,-.99142,-.97757,-.97403,-.98007,-.9617,-.86826,-.67783,-.52719,-.48788,-.4549,-.43146,-.47681,-.54105,-.57983,-.60904,-.62317,-.59949,-.55566,-.52063,-.52115,-.55112,-.56244,-.58337,-.6554,-.73373,-.77228,-.74759,-.6889,-.64609,-.61887,-.5806,-.50351,-.40729,-.33929,-.3511,-.42944,-.47028,-.42267,-.32718,-.20224,-.0564,.04556,.10529,.1763,.26169,.33197,.32138,.23776,.20956,.23148,.20352,.23325,.39267,.52719,.58438,.62289,.66345,.70023,.66296,.5433,.42618,.33475,.24533,.14105,.03851,.01358,.09143,.22845,.34961,.41711,.4874,.58914,.69519,.78186,.84357,.89822,.95389,.98135,.98615,.99167,.99243,.99445,.9942,.99469,.99493,.99393,.99545,.99445,.99521,.99469,.99445,.99521,.9942,.99469,.98965,.98715,.98563,.96295,.91736,.86624,.82367,.77554,.68411,.53549,.38916,.2612,.11435,-.04053,-.18161,-.23172,-.19394,-.15237,-.1073,-.02997,.08588,.2262,.34305,.44104,.5574,.65765,.71259,.69217,.65363,.69748,.79572,.89368,.95514,.97733,.98413,.98816,.99243,.99445,.99243,.97302,.96674,.97983,.90378,.71005,.51056,.40451,.40982,.41559,.32996,.24356,.18866,.11411,.05365,.01157,-.03247,-.09216,-.16095,-.23248,-.31662,-.39771,-.48663,-.59647,-.71536,-.82013,-.85287,-.82947,-.84937,-.92215,-.97177,-.98663,-.98816,-.98438,-.99091,-.99219,-.99091,-.99191,-.99042,-.99191,-.99091,-.99142,-.99191,-.99091,-.99191,-.99091,-.99167,-.99142])},{name:"ultrabox shortened od guitar",expression:.5,samples:ne([-.82785,-.67621,-.40268,-.43817,-.45468,-.22531,-.18329,.2475,.71246,.52155,.56082,.48395,.3399,.46957,.27744,.42313,.47104,.18796,.1293,-.13901,-.07431,-.16348,-.74857,-.73206,-.35181,-.26227,-.41882,-.27786,-.19806,-.19867,.18643,.24808,.08847,-.06964,.06912,.20474,-.05304,.29416,.31967,.14243,.27521,-.23932,-.14752,.1236,-.26123,-.26111,.06616,.2652,.0809,.1524,.16254,-.12061,.04562,.00131,.0405,.08182,-.21729,-.17041,-.16312,-.08563,.0639,.05099,.05627,.02728,.00726,-.13028,-.05673,-.14969,-.17645,.35492,.16766,-.00897,.24326,-.00461,-.04456,.01776,-.0495,-.01221,.02039,.07684,.13397,.3985,.35962,.13754,.4231,.27161,-.17609,.03659,.10635,-.21909,-.22046,-.20258,-.40973,-.4028,-.40521,-.66284])}]);static chipWaves=yr(i.rawChipWaves);static rawRawChipWaves=i.rawChipWaves;static firstIndexForSamplesInChipWaveList=i.chipWaves.length;static chipNoises=he([{name:"retro",expression:.25,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"white",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"clang",expression:.4,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"buzz",expression:.3,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"hollow",expression:1.5,basePitch:96,pitchFilterMult:1,isSoft:!0,samples:null},{name:"shine",expression:1,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"deep",expression:1.5,basePitch:120,pitchFilterMult:1024,isSoft:!0,samples:null},{name:"cutter",expression:.005,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"metallic",expression:1,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"static",expression:1,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"1-bit white",expression:.5,basePitch:74.41,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"1-bit metallic",expression:.5,basePitch:86.41,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"crackling",expression:.9,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"pink",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"brownian",expression:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null}]);static filterFreqStep=1/4;static filterFreqRange=34;static filterFreqReferenceSetting=28;static filterFreqReferenceHz=8e3;static filterFreqMaxHz=i.filterFreqReferenceHz*Math.pow(2,i.filterFreqStep*(i.filterFreqRange-1-i.filterFreqReferenceSetting));static filterFreqMinHz=8;static filterGainRange=15;static filterGainCenter=7;static filterGainStep=1/2;static filterMaxPoints=8;static filterTypeNames=["low-pass","high-pass","peak"];static filterMorphCount=10;static filterSimpleCutRange=11;static filterSimplePeakRange=8;static fadeInRange=10;static fadeOutTicks=[-24,-12,-6,-3,-1,6,12,24,48,72,96];static fadeOutNeutral=4;static drumsetFadeOutTicks=48;static transitions=he([{name:"normal",isSeamless:!1,continues:!1,slides:!1,slideTicks:3,includeAdjacentPatterns:!1},{name:"interrupt",isSeamless:!0,continues:!1,slides:!1,slideTicks:3,includeAdjacentPatterns:!0},{name:"continue",isSeamless:!0,continues:!0,slides:!1,slideTicks:3,includeAdjacentPatterns:!0},{name:"slide",isSeamless:!0,continues:!1,slides:!0,slideTicks:3,includeAdjacentPatterns:!0},{name:"slide in pattern",isSeamless:!0,continues:!1,slides:!0,slideTicks:3,includeAdjacentPatterns:!1}]);static vibratos=he([{name:"none",amplitude:0,type:0,delayTicks:0},{name:"light",amplitude:.15,type:0,delayTicks:0},{name:"delayed",amplitude:.3,type:0,delayTicks:37},{name:"heavy",amplitude:.45,type:0,delayTicks:0},{name:"shaky",amplitude:.1,type:1,delayTicks:0}]);static vibratoTypes=he([{name:"normal",periodsSeconds:[.14],period:.14},{name:"shaky",periodsSeconds:[.11,1.618*.11,3*.11],period:266.97}]);static arpSpeedScale=[0,.0625,.125,.2,.25,1/3,.4,.5,2/3,.75,.8,.9,1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3,3.1,3.2,3.3,3.4,3.5,3.6,3.7,3.8,3.9,4,4.15,4.3,4.5,4.8,5,5.5,6,8];static unisons=he([{name:"none",voices:1,spread:0,offset:0,expression:1.4,sign:1},{name:"shimmer",voices:2,spread:.018,offset:0,expression:.8,sign:1},{name:"hum",voices:2,spread:.045,offset:0,expression:1,sign:1},{name:"honky tonk",voices:2,spread:.09,offset:0,expression:1,sign:1},{name:"dissonant",voices:2,spread:.25,offset:0,expression:.9,sign:1},{name:"fifth",voices:2,spread:3.5,offset:3.5,expression:.9,sign:1},{name:"octave",voices:2,spread:6,offset:6,expression:.8,sign:1},{name:"bowed",voices:2,spread:.02,offset:0,expression:1,sign:-1},{name:"piano",voices:2,spread:.01,offset:0,expression:1,sign:.7},{name:"warbled",voices:2,spread:.25,offset:.05,expression:.9,sign:-.8},{name:"hecking gosh",voices:2,spread:6.25,offset:-6,expression:.8,sign:-.7},{name:"spinner",voices:2,spread:.02,offset:0,expression:1,sign:1},{name:"detune",voices:1,spread:0,offset:.25,expression:1,sign:1},{name:"rising",voices:2,spread:1,offset:.7,expression:.95,sign:1},{name:"vibrate",voices:2,spread:3.5,offset:7,expression:.975,sign:1},{name:"fourths",voices:2,spread:4,offset:4,expression:.95,sign:1},{name:"bass",voices:1,spread:0,offset:-7,expression:1,sign:1},{name:"dirty",voices:2,spread:0,offset:.1,expression:.975,sign:1},{name:"stationary",voices:2,spread:3.5,offset:0,expression:.9,sign:1},{name:"recurve",voices:2,spread:.005,offset:0,expression:1,sign:1},{name:"voiced",voices:2,spread:9.5,offset:0,expression:1,sign:1},{name:"fluctuate",voices:2,spread:12,offset:0,expression:1,sign:1},{name:"thin",voices:1,spread:0,offset:50,expression:1,sign:1},{name:"inject",voices:2,spread:6,offset:.4,expression:1,sign:1},{name:"askewed",voices:2,spread:0,offset:.42,expression:.7,sign:1},{name:"resonance",voices:2,spread:.0025,offset:.1,expression:.8,sign:-1.5},{name:"FART",voices:2,spread:13,offset:-5,expression:1,sign:-3},{name:"augmented",voices:4,spread:6,offset:6,expression:.5,sign:1},{name:"diminished",voices:5,spread:6,offset:6,expression:.4,sign:1},{name:"chorus",voices:9,spread:.22,offset:0,expression:.15,sign:1},{name:"block",voices:9,spread:6,offset:6,expression:.15,sign:.8},{name:"extraterrestrial",voices:6,spread:15.2,offset:-6,expression:.35,sign:.7},{name:"bow",voices:9,spread:.006,offset:0,expression:.15,sign:.5}]);static effectNames=["reverb","chorus","panning","distortion","bitcrusher","post eq","echo","ring mod","granular","gain","flanger"];static effectDisplayNames=["Reverb","Chorus","Panning","Distortion","Bitcrusher","Post EQ","Echo","Ring Mod","Granular","Gain","Flanger"];static effectOrder=[0,1,2,3,4,5,6,7,8,9,10];static effectCount;static mdeffectNames=["pitch shift","detune","vibrato","transition type","chord type","note range"];static mdeffectOrder=[3,4,0,1,2,5];static mdeffectCount;static noteSizeMax=6;static volumeRange=100;static volumeLogScale=.0714;static gainRangeMult=2;static panCenter=50;static panMax=i.panCenter*2;static panDelaySecondsMax=.001;static ringModRange=8;static ringModHzRange=64;static ringModMinHz=20;static ringModMaxHz=4400;static rmHzOffsetCenter=200;static rmHzOffsetMax=400;static rmHzOffsetMin=0;static granularRange=10;static grainSizeMin=40;static grainSizeMax=2e3;static grainSizeStep=40;static grainRangeMax=1600;static grainAmountsMax=10;static granularEnvelopeType=0;static flangerRange=24;static flangerSpeedRange=16;static flangerDepthRange=16;static flangerFeedbackRange=16;static flangerMaxDelay=.0034*4.35;static flangerPeriodMult=4e-6;static flangerVolumeMult=.45;static chorusRange=24;static chorusPeriodSeconds=2;static chorusDelayRange=.0034;static chorusDelayOffsets=[[1.51,2.1,3.35],[1.47,2.15,3.25]];static chorusPhaseOffsets=[[0,2.1,4.2],[3.2,5.3,1]];static chorusMaxDelay=i.chorusDelayRange*(1+i.chorusDelayOffsets[0].concat(i.chorusDelayOffsets[1]).reduce((e,a)=>Math.max(e,a)));static chords=he([{name:"simultaneous",customInterval:!1,arpeggiates:!1,strumParts:0,singleTone:!1},{name:"strum",customInterval:!1,arpeggiates:!1,strumParts:1,singleTone:!1},{name:"arpeggio",customInterval:!1,arpeggiates:!0,strumParts:0,singleTone:!0},{name:"custom interval",customInterval:!0,arpeggiates:!1,strumParts:0,singleTone:!0},{name:"monophonic",customInterval:!1,arpeggiates:!1,strumParts:0,singleTone:!0}]);static maxChordSize=9;static operatorCount=4;static maxPitchOrOperatorCount=Math.max(i.maxChordSize,i.operatorCount+2);static algorithms=he([{name:"1\u2190(2\u20023\u20024)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3,4],[],[],[]]},{name:"1\u2190(2\u20023\u21904)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[],[4],[]]},{name:"1\u21902\u2190(3\u20024)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3,4],[],[]]},{name:"1\u2190(2\u20023)\u21904",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[4],[4],[]]},{name:"1\u21902\u21903\u21904",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3],[4],[]]},{name:"1\u21903\u20032\u21904",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[3],[4],[],[]]},{name:"1\u20032\u2190(3\u20024)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3,4],[],[]]},{name:"1\u20032\u21903\u21904",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3],[4],[]]},{name:"(1\u20022)\u21903\u21904",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3],[3],[4],[]]},{name:"(1\u20022)\u2190(3\u20024)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3,4],[3,4],[],[]]},{name:"1\u20032\u20033\u21904",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[],[],[4],[]]},{name:"(1\u20022\u20023)\u21904",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[4],[4],[4],[]]},{name:"1\u20032\u20033\u20034",carrierCount:4,associatedCarrier:[1,2,3,4],modulatedBy:[[],[],[],[]]},{name:"1\u2190(2 3)\u20032\u21904",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[2,3],[4],[],[]]},{name:"1\u2190(2 (3 (4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[2,3,4],[3,4],[4],[]]}]);static algorithms6Op=he([{name:"Custom",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1\u21902\u21903\u21904\u21905\u21906",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2],[3],[4],[5],[6],[]]},{name:"1\u21903\u20032\u21904\u21905\u21906",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4],[],[5],[6],[]]},{name:"1\u21903\u21904\u20032\u21905\u21906",carrierCount:2,associatedCarrier:[1,1,1,2,2,2],modulatedBy:[[3],[5],[4],[],[6],[]]},{name:"1\u21904\u20032\u21905\u20033\u21906",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[5],[6],[],[],[]]},{name:"1\u21903\u20022\u2190(4\u20025\u21906)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5],[],[],[6],[]]},{name:"1\u2190(3\u20024)\u20022\u21905\u21906",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3,4],[5],[],[],[6],[]]},{name:"1\u21903\u20022\u2190(4\u20025\u20026)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5,6],[],[],[],[]]},{name:"1\u21903\u20022\u2190(4\u20025)\u21906",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4,5],[],[6],[6],[]]},{name:"1\u21903\u20022\u21904\u2190(5\u20026)",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3],[4],[],[5,6],[],[]]},{name:"1\u2190(2\u20023\u20024\u20025\u20026)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1\u2190(2\u20023\u21905\u20024\u21906)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4],[],[5],[6],[],[]]},{name:"1\u2190(2\u20023\u20024\u21905\u21906)",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4],[],[],[5],[6],[]]},{name:"1\u21904\u21905\u2003(2\u20033)\u21906",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[6],[6],[5],[],[]]},{name:"1\u2190(3\u20034)\u21905 2\u21906",carrierCount:2,associatedCarrier:[1,2,2,2,2,2],modulatedBy:[[3,4],[6],[5],[5],[],[]]},{name:"(1\u20032)\u21904\u20033\u2190(5\u20036)",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4],[4],[5,6],[],[],[]]},{name:"(1\u20032)\u21905\u2003(3\u20034)\u21906",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[5],[5],[6],[6],[],[]]},{name:"(1\u20032\u20033)\u2190(4\u20035\u20036)",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[4,5,6],[4,5,6],[4,5,6],[],[],[]]},{name:"1\u21905\u2003(2\u20033\u20034)\u21906",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[5],[6],[6],[6],[],[]]},{name:"1\u20032\u21905\u2003(3\u20034)\u21906",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[5],[6],[6],[],[]]},{name:"1\u20032\u2003(3\u20034\u20035)\u21906",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[6],[6],[6],[]]},{name:"1\u20032\u20033\u2003(4\u20035)\u21906",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[],[6],[6],[]]},{name:"1\u20032\u21904\u20033\u2190(5\u20036)",carrierCount:3,associatedCarrier:[1,2,3,3,3,3],modulatedBy:[[],[4],[5,6],[],[],[]]},{name:"1\u21904\u20032\u2190(5\u20036)\u20033",carrierCount:3,associatedCarrier:[1,2,3,3,3,3],modulatedBy:[[4],[5,6],[],[],[],[]]},{name:"1\u20032\u20033\u21905\u20034\u21906",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[],[5],[6],[],[]]},{name:"1\u2003(2\u20033)\u21905\u21906\u20034",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[5],[5],[],[6],[]]},{name:"1\u20032\u20033\u21905\u21906\u20034",carrierCount:4,associatedCarrier:[1,2,3,4,4,4],modulatedBy:[[],[],[5,6],[],[],[]]},{name:"(1\u20032\u20033\u20034\u20035)\u21906",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[6],[6],[6],[6],[6],[]]},{name:"1\u20032\u20033\u20034\u20035\u21906",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[],[],[],[],[6],[]]},{name:"1\u20032\u20033\u20034\u20035\u20036",carrierCount:6,associatedCarrier:[1,2,3,4,5,6],modulatedBy:[[],[],[],[],[],[]]},{name:"1\u2190(2 (3 (4 (5 (6",carrierCount:5,associatedCarrier:[1,2,3,4,5,5],modulatedBy:[[2,3,4,5,6],[3,4,5,6],[4,5,6],[5,6],[6],[]]},{name:"1\u2190(2(3(4(5(6",carrierCount:1,associatedCarrier:[1,1,1,1,1,1],modulatedBy:[[2,3,4,5,6],[3,4,5,6],[4,5,6],[5,6],[6],[]]},{name:"1\u21904(2\u21905(3\u21906",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[2,3,4],[3,5],[6],[],[],[]]},{name:"1\u21904(2\u21905 3\u21906",carrierCount:3,associatedCarrier:[1,2,3,1,2,3],modulatedBy:[[2,3,4],[5],[6],[],[],[]]}]);static operatorCarrierInterval=[0,.04,-.073,.091,.061,.024];static operatorAmplitudeMax=15;static operatorFrequencies=he([{name:"0.12\xD7",mult:.125,hzOffset:0,amplitudeSign:1},{name:"0.25\xD7",mult:.25,hzOffset:0,amplitudeSign:1},{name:"0.5\xD7",mult:.5,hzOffset:0,amplitudeSign:1},{name:"0.75\xD7",mult:.75,hzOffset:0,amplitudeSign:1},{name:"1\xD7",mult:1,hzOffset:0,amplitudeSign:1},{name:"~1\xD7",mult:1,hzOffset:1.5,amplitudeSign:-1},{name:"2\xD7",mult:2,hzOffset:0,amplitudeSign:1},{name:"~2\xD7",mult:2,hzOffset:-1.3,amplitudeSign:-1},{name:"3\xD7",mult:3,hzOffset:0,amplitudeSign:1},{name:"3.5\xD7",mult:3.5,hzOffset:-.05,amplitudeSign:1},{name:"4\xD7",mult:4,hzOffset:0,amplitudeSign:1},{name:"~4\xD7",mult:4,hzOffset:-2.4,amplitudeSign:-1},{name:"5\xD7",mult:5,hzOffset:0,amplitudeSign:1},{name:"6\xD7",mult:6,hzOffset:0,amplitudeSign:1},{name:"7\xD7",mult:7,hzOffset:0,amplitudeSign:1},{name:"8\xD7",mult:8,hzOffset:0,amplitudeSign:1},{name:"9\xD7",mult:9,hzOffset:0,amplitudeSign:1},{name:"10\xD7",mult:10,hzOffset:0,amplitudeSign:1},{name:"11\xD7",mult:11,hzOffset:0,amplitudeSign:1},{name:"12\xD7",mult:12,hzOffset:0,amplitudeSign:1},{name:"13\xD7",mult:13,hzOffset:0,amplitudeSign:1},{name:"14\xD7",mult:14,hzOffset:0,amplitudeSign:1},{name:"15\xD7",mult:15,hzOffset:0,amplitudeSign:1},{name:"16\xD7",mult:16,hzOffset:0,amplitudeSign:1},{name:"17\xD7",mult:17,hzOffset:0,amplitudeSign:1},{name:"18\xD7",mult:18,hzOffset:0,amplitudeSign:1},{name:"19\xD7",mult:19,hzOffset:0,amplitudeSign:1},{name:"20\xD7",mult:20,hzOffset:0,amplitudeSign:1},{name:"~20\xD7",mult:20,hzOffset:-5,amplitudeSign:-1},{name:"25\xD7",mult:25,hzOffset:0,amplitudeSign:1},{name:"50\xD7",mult:50,hzOffset:0,amplitudeSign:1},{name:"75\xD7",mult:75,hzOffset:0,amplitudeSign:1},{name:"100\xD7",mult:100,hzOffset:0,amplitudeSign:1},{name:"128\xD7",mult:128,hzOffset:0,amplitudeSign:1},{name:"256\xD7",mult:250,hzOffset:0,amplitudeSign:1}]);static envelopes=he([{name:"none",type:0,speed:0},{name:"note size",type:1,speed:0},{name:"pitch",type:2,speed:0},{name:"punch",type:4,speed:0},{name:"flare -1",type:5,speed:128},{name:"flare 1",type:5,speed:32},{name:"flare 2",type:5,speed:8},{name:"flare 3",type:5,speed:2},{name:"twang -1",type:6,speed:128},{name:"twang 1",type:6,speed:32},{name:"twang 2",type:6,speed:8},{name:"twang 3",type:6,speed:2},{name:"swell -1",type:7,speed:128},{name:"swell 1",type:7,speed:32},{name:"swell 2",type:7,speed:8},{name:"swell 3",type:7,speed:2},{name:"tremolo0",type:8,speed:8},{name:"tremolo1",type:8,speed:4},{name:"tremolo2",type:8,speed:2},{name:"tremolo3",type:8,speed:1},{name:"tremolo4",type:9,speed:4},{name:"tremolo5",type:9,speed:2},{name:"tremolo6",type:9,speed:1},{name:"decay -1",type:10,speed:40},{name:"decay 1",type:10,speed:10},{name:"decay 2",type:10,speed:7},{name:"decay 3",type:10,speed:4},{name:"wibble-1",type:11,speed:128},{name:"wibble 1",type:11,speed:24},{name:"wibble 2",type:11,speed:12},{name:"wibble 3",type:11,speed:4},{name:"linear-2",type:12,speed:256},{name:"linear-1",type:12,speed:128},{name:"linear 1",type:12,speed:32},{name:"linear 2",type:12,speed:8},{name:"linear 3",type:12,speed:2},{name:"rise -2",type:13,speed:256},{name:"rise -1",type:13,speed:128},{name:"rise 1",type:13,speed:32},{name:"rise 2",type:13,speed:8},{name:"rise 3",type:13,speed:2},{name:"flute 1",type:11,speed:16},{name:"flute 2",type:11,speed:8},{name:"flute 3",type:11,speed:4},{name:"tripolo1",type:8,speed:9},{name:"tripolo2",type:8,speed:6},{name:"tripolo3",type:8,speed:3},{name:"tripolo4",type:9,speed:9},{name:"tripolo5",type:9,speed:6},{name:"tripolo6",type:9,speed:3},{name:"pentolo1",type:8,speed:10},{name:"pentolo2",type:8,speed:5},{name:"pentolo3",type:8,speed:2.5},{name:"pentolo4",type:9,speed:10},{name:"pentolo5",type:9,speed:5},{name:"pentolo6",type:9,speed:2.5},{name:"flutter 1",type:8,speed:14},{name:"flutter 2",type:9,speed:11},{name:"water-y flutter",type:8,speed:9},{name:"blip 1",type:14,speed:6},{name:"blip 2",type:14,speed:16},{name:"blip 3",type:14,speed:32},{name:"fall 1",type:15,speed:8},{name:"fall 2",type:15,speed:4},{name:"fall 3",type:15,speed:2}]);static newEnvelopes=he([{name:"none",type:0,speed:0},{name:"note size",type:1,speed:0},{name:"pitch",type:2,speed:0},{name:"random",type:3,speed:4},{name:"punch",type:4,speed:0},{name:"flare",type:5,speed:32},{name:"twang",type:6,speed:32},{name:"swell",type:7,speed:32},{name:"lfo",type:8,speed:4},{name:"decay",type:10,speed:10},{name:"wibble",type:11,speed:24},{name:"linear",type:12,speed:32},{name:"rise",type:13,speed:32},{name:"blip",type:14,speed:6},{name:"fall",type:15,speed:2}]);static feedbacks=he([{name:"1\u27F2",indices:[[1],[],[],[]]},{name:"2\u27F2",indices:[[],[2],[],[]]},{name:"3\u27F2",indices:[[],[],[3],[]]},{name:"4\u27F2",indices:[[],[],[],[4]]},{name:"1\u27F2\u20032\u27F2",indices:[[1],[2],[],[]]},{name:"3\u27F2\u20034\u27F2",indices:[[],[],[3],[4]]},{name:"1\u27F2\u20032\u27F2\u20033\u27F2",indices:[[1],[2],[3],[]]},{name:"2\u27F2\u20033\u27F2\u20034\u27F2",indices:[[],[2],[3],[4]]},{name:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",indices:[[1],[2],[3],[4]]},{name:"1\u21922",indices:[[],[1],[],[]]},{name:"1\u21923",indices:[[],[],[1],[]]},{name:"1\u21924",indices:[[],[],[],[1]]},{name:"2\u21923",indices:[[],[],[2],[]]},{name:"2\u21924",indices:[[],[],[],[2]]},{name:"3\u21924",indices:[[],[],[],[3]]},{name:"1\u21923\u20032\u21924",indices:[[],[],[1],[2]]},{name:"1\u21924\u20032\u21923",indices:[[],[],[2],[1]]},{name:"1\u21922\u21923\u21924",indices:[[],[1],[2],[3]]},{name:"1\u21942 3\u21944",indices:[[2],[1],[4],[3]]},{name:"1\u21944 2\u21943",indices:[[4],[3],[2],[1]]},{name:"2\u21921\u21924\u21923\u21922",indices:[[2],[3],[4],[1]]},{name:"1\u21922\u21923\u21924\u21921",indices:[[4],[1],[2],[3]]},{name:"(1 2 3)\u21924",indices:[[],[],[],[1,2,3]]},{name:"ALL",indices:[[1,2,3,4],[1,2,3,4],[1,2,3,4],[1,2,3,4]]}]);static feedbacks6Op=he([{name:"Custom",indices:[[2,3,4,5,6],[],[],[],[],[]]},{name:"1\u27F2",indices:[[1],[],[],[],[],[]]},{name:"2\u27F2",indices:[[],[2],[],[],[],[]]},{name:"3\u27F2",indices:[[],[],[3],[],[],[]]},{name:"4\u27F2",indices:[[],[],[],[4],[],[]]},{name:"5\u27F2",indices:[[],[],[],[],[5],[]]},{name:"6\u27F2",indices:[[],[],[],[],[],[6]]},{name:"1\u27F2\u20022\u27F2",indices:[[1],[2],[],[],[],[]]},{name:"3\u27F2\u20024\u27F2",indices:[[],[],[3],[4],[],[]]},{name:"1\u27F2\u20022\u27F2\u20023\u27F2",indices:[[1],[2],[3],[],[],[]]},{name:"2\u27F2\u20023\u27F2\u20024\u27F2",indices:[[],[2],[3],[4],[],[]]},{name:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",indices:[[1],[2],[3],[4],[],[]]},{name:"1\u27F2 2\u27F2 3\u27F2 4\u27F2 5\u27F2",indices:[[1],[2],[3],[4],[5],[]]},{name:"1\u27F2 2\u27F2 3\u27F2 4\u27F2 5\u27F2 6\u27F2",indices:[[1],[2],[3],[4],[5],[6]]},{name:"1\u21922",indices:[[],[1],[],[],[],[]]},{name:"1\u21923",indices:[[],[],[1],[],[],[]]},{name:"1\u21924",indices:[[],[],[],[1],[],[]]},{name:"1\u21925",indices:[[],[],[],[],[1],[]]},{name:"1\u21926",indices:[[],[],[],[],[],[1]]},{name:"2\u21923",indices:[[],[],[2],[],[],[]]},{name:"2\u21924",indices:[[],[],[],[2],[],[]]},{name:"3\u21924",indices:[[],[],[],[3],[],[]]},{name:"4\u21925",indices:[[],[],[],[],[4],[]]},{name:"1\u21924\u20022\u21925 3\u21926",indices:[[],[],[],[1],[2],[3]]},{name:"1\u21925\u20022\u21926 3\u21924",indices:[[],[],[],[3],[1],[2]]},{name:"1\u21922\u21923\u21924\u21925\u21926",indices:[[],[1],[2],[3],[4],[5]]},{name:"2\u21921\u21926\u21925\u21924\u21923\u21922",indices:[[2],[3],[4],[5],[6],[1]]},{name:"1\u21922\u21923\u21924\u21925\u21926\u21921",indices:[[6],[1],[2],[3],[4],[5]]},{name:"1\u21942 3\u21944 5\u21946",indices:[[2],[1],[4],[3],[6],[5]]},{name:"1\u21944 2\u21945 3\u21946",indices:[[4],[5],[6],[1],[2],[3]]},{name:"(1,2,3,4,5)\u21926",indices:[[],[],[],[],[],[1,2,3,4,5]]},{name:"ALL",indices:[[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6],[1,2,3,4,5,6]]}]);static chipNoiseLength=32768;static spectrumNoiseLength=32768;static spectrumBasePitch=24;static spectrumControlPoints=30;static spectrumControlPointsPerOctave=7;static spectrumControlPointBits=3;static spectrumMax=(1<<i.spectrumControlPointBits)-1;static harmonicsControlPoints=28;static harmonicsRendered=64;static harmonicsRenderedForPickedString=256;static harmonicsControlPointBits=3;static harmonicsMax=(1<<i.harmonicsControlPointBits)-1;static harmonicsWavelength=2048;static pulseWidthRange=50;static pulseWidthStepPower=.5;static supersawVoiceCount=7;static supersawDynamismMax=6;static supersawSpreadMax=12;static supersawShapeMax=6;static pitchChannelCountMin=1;static pitchChannelCountMax=60;static noiseChannelCountMin=0;static noiseChannelCountMax=60;static modChannelCountMin=0;static modChannelCountMax=60;static noiseInterval=6;static pitchesPerOctave=12;static drumCount=12;static pitchOctaves=8;static modCount=6;static maxPitch=i.pitchOctaves*i.pitchesPerOctave;static maximumTonesPerChannel=i.maxChordSize*2;static justIntonationSemitones=[1/2,8/15,9/16,3/5,5/8,2/3,32/45,3/4,4/5,5/6,8/9,15/16,1,16/15,9/8,6/5,5/4,4/3,45/32,3/2,8/5,5/3,16/9,15/8,2].map(e=>Math.log2(e)*i.pitchesPerOctave);static pitchShiftRange=i.justIntonationSemitones.length;static pitchShiftCenter=i.pitchShiftRange>>1;static detuneCenter=200;static detuneMax=400;static detuneMin=0;static songDetuneMin=0;static songDetuneMax=500;static unisonVoicesMin=1;static unisonVoicesMax=9;static unisonSpreadMin=-96;static unisonSpreadMax=96;static unisonOffsetMin=-96;static unisonOffsetMax=96;static unisonExpressionMin=-2;static unisonExpressionMax=2;static unisonSignMin=-2;static unisonSignMax=2;static sineWaveLength=256;static sineWaveMask=i.sineWaveLength-1;static generateSineWave(){let e=new Float32Array(i.sineWaveLength+1);for(let a=0;a<i.sineWaveLength+1;a++)e[a]=Math.sin(a*Math.PI*2/i.sineWaveLength);return e}static generateTriWave(){let e=new Float32Array(i.sineWaveLength+1);for(let a=0;a<i.sineWaveLength+1;a++)e[a]=Math.asin(Math.sin(a*Math.PI*2/i.sineWaveLength))/(Math.PI/2);return e}static generateTrapezoidWave(e=2){let a=new Float32Array(i.sineWaveLength+1);for(let n=0;n<i.sineWaveLength+1;n++)a[n]=Math.max(-1,Math.min(1,Math.asin(Math.sin(n*Math.PI*2/i.sineWaveLength))*e));return a}static generateSquareWave(e=0){let a=new Float32Array(i.sineWaveLength+1),n=i.sineWaveLength/4;for(let r=0;r<i.sineWaveLength+1;r++)a[r]=+(Math.abs(r-n)<e*i.sineWaveLength/2||Math.abs(r-i.sineWaveLength-n)<e*i.sineWaveLength/2)*2-1;return a}static generateSawWave(e=!1){let a=new Float32Array(i.sineWaveLength+1);for(let n=0;n<i.sineWaveLength+1;n++)a[n]=(n+i.sineWaveLength/4)*2/i.sineWaveLength%2-1,a[n]=e?-a[n]:a[n];return a}static generateQuasiSineWave(){let e=new Float32Array(i.sineWaveLength+1);for(let a=0;a<i.sineWaveLength+1;a++)e[a]=Math.round(Math.sin(a*Math.PI*2/i.sineWaveLength));return e}static sineWave=i.generateSineWave();static perEnvelopeSpeedIndices=[0,.01,.02,.03,.04,.05,.06,.07,.08,.09,.1,.2,.25,.3,.3333,.4,.5,.6,.6667,.7,.75,.8,.9,1,1.25,1.3333,1.5,1.6667,1.75,2,2.25,2.5,2.75,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,11,12,13,14,15,16,17,18,19,20,24,32,40,64,128,256];static perEnvelopeSpeedToIndices={0:0,.01:1,.02:2,.03:3,.04:4,.05:5,.06:6,.07:7,.08:8,.09:9,.1:10,.2:11,.25:12,.3:13,.3333:14,.4:15,.5:16,.6:17,.6667:18,.7:19,.75:20,.8:21,.9:22,1:23,1.25:24,1.3333:25,1.5:26,1.6667:27,1.75:28,2:29,2.25:30,2.5:31,2.75:32,3:33,3.5:34,4:35,4.5:36,5:37,5.5:38,6:39,6.5:40,7:41,7.5:42,8:43,8.5:44,9:45,9.5:46,10:47,11:48,12:49,13:50,14:51,15:52,16:53,17:54,18:55,19:56,20:57,24:58,32:59,40:60,64:61,128:62,256:63};static perEnvelopeBoundMin=0;static perEnvelopeBoundMax=2;static randomEnvelopeSeedMax=63;static randomEnvelopeStepsMax=24;static pickedStringDispersionCenterFreq=6e3;static pickedStringDispersionFreqScale=.3;static pickedStringDispersionFreqMult=4;static pickedStringShelfHz=4e3;static distortionRange=16;static stringSustainRange=15;static stringDecayRate=.12;static enableAcousticSustain=!1;static sustainTypeNames=["bright","acoustic"];static bitcrusherFreqRange=14;static bitcrusherOctaveStep=.5;static bitcrusherQuantizationRange=8;static maxEnvelopeCount=16;static defaultAutomationRange=13;static instrumentAutomationTargets=he([{name:"none",computeIndex:null,displayName:"none",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:null},{name:"noteVolume",computeIndex:0,displayName:"pre volume",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:null},{name:"mixVolume",computeIndex:1,displayName:"post volume",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:null},{name:"pulseWidth",computeIndex:3,displayName:"pulse width",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[6,8]},{name:"stringSustain",computeIndex:4,displayName:"sustain",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[7]},{name:"unison",computeIndex:5,displayName:"unison",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[0,5,7,9,6,2,3,4]},{name:"operatorFrequency",computeIndex:6,displayName:"fm# freq",interleave:!0,isFilter:!1,maxCount:i.operatorCount+2,effect:null,mdeffect:null,compatibleInstruments:[1,11]},{name:"operatorAmplitude",computeIndex:12,displayName:"fm# volume",interleave:!1,isFilter:!1,maxCount:i.operatorCount+2,effect:null,mdeffect:null,compatibleInstruments:[1,11]},{name:"feedbackAmplitude",computeIndex:18,displayName:"fm feedback",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[1,11]},{name:"pitchShift",computeIndex:19,displayName:"pitch shift",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:0,compatibleInstruments:null},{name:"detune",computeIndex:20,displayName:"detune",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:1,compatibleInstruments:null},{name:"vibratoDepth",computeIndex:21,displayName:"vibrato depth",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:2,compatibleInstruments:null},{name:"noteFilterAllFreqs",computeIndex:2,displayName:"pre eq freqs",interleave:!1,isFilter:!0,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:null},{name:"noteFilterFreq",computeIndex:22,displayName:"pre eq # freq",interleave:!1,isFilter:!0,maxCount:i.filterMaxPoints,effect:null,mdeffect:null,compatibleInstruments:null},{name:"decimalOffset",computeIndex:38,displayName:"decimal offset",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[6,8]},{name:"supersawDynamism",computeIndex:39,displayName:"dynamism",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[8]},{name:"supersawSpread",computeIndex:40,displayName:"spread",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[8]},{name:"supersawShape",computeIndex:41,displayName:"saw\u2194pulse",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:null,compatibleInstruments:[8]},{name:"gain",computeIndex:57,displayName:"gain",interleave:!1,isFilter:!1,maxCount:1,effect:9,mdeffect:null,compatibleInstruments:null},{name:"panning",computeIndex:42,displayName:"panning",interleave:!1,isFilter:!1,maxCount:1,effect:2,mdeffect:null,compatibleInstruments:null},{name:"distortion",computeIndex:43,displayName:"distortion",interleave:!1,isFilter:!1,maxCount:1,effect:3,mdeffect:null,compatibleInstruments:null},{name:"bitcrusherQuantization",computeIndex:44,displayName:"bitcrush",interleave:!1,isFilter:!1,maxCount:1,effect:4,mdeffect:null,compatibleInstruments:null},{name:"bitcrusherFrequency",computeIndex:45,displayName:"freq crush",interleave:!1,isFilter:!1,maxCount:1,effect:4,mdeffect:null,compatibleInstruments:null},{name:"flanger",computeIndex:58,displayName:"flanger",interleave:!1,isFilter:!1,maxCount:1,effect:10,mdeffect:null,compatibleInstruments:null},{name:"flangerSpeed",computeIndex:58,displayName:"flanger speed",interleave:!1,isFilter:!1,maxCount:1,effect:10,mdeffect:null,compatibleInstruments:null},{name:"flangerDepth",computeIndex:58,displayName:"flanger depth",interleave:!1,isFilter:!1,maxCount:1,effect:10,mdeffect:null,compatibleInstruments:null},{name:"flangerFeedback",computeIndex:58,displayName:"flanger feedback",interleave:!1,isFilter:!1,maxCount:1,effect:10,mdeffect:null,compatibleInstruments:null},{name:"chorus",computeIndex:46,displayName:"chorus",interleave:!1,isFilter:!1,maxCount:1,effect:1,mdeffect:null,compatibleInstruments:null},{name:"echoSustain",computeIndex:47,displayName:"echo",interleave:!1,isFilter:!1,maxCount:1,effect:6,mdeffect:null,compatibleInstruments:null},{name:"reverb",computeIndex:48,displayName:"reverb",interleave:!1,isFilter:!1,maxCount:1,effect:0,mdeffect:null,compatibleInstruments:null},{name:"arpeggioSpeed",computeIndex:49,displayName:"arpeggio speed",interleave:!1,isFilter:!1,maxCount:1,effect:null,mdeffect:4,compatibleInstruments:null},{name:"ringModulation",computeIndex:50,displayName:"ring mod",interleave:!1,isFilter:!1,maxCount:1,effect:7,mdeffect:null,compatibleInstruments:null},{name:"ringModulationHz",computeIndex:51,displayName:"ring mod hz",interleave:!1,isFilter:!1,maxCount:1,effect:7,mdeffect:null,compatibleInstruments:null},{name:"granular",computeIndex:52,displayName:"granular",interleave:!1,isFilter:!1,maxCount:1,effect:8,mdeffect:null,compatibleInstruments:null},{name:"grainFreq",computeIndex:53,displayName:"grain freq",interleave:!1,isFilter:!1,maxCount:1,effect:8,mdeffect:null,compatibleInstruments:null},{name:"grainSize",computeIndex:54,displayName:"grain size",interleave:!1,isFilter:!1,maxCount:1,effect:8,mdeffect:null,compatibleInstruments:null},{name:"grainRange",computeIndex:55,displayName:"grain range",interleave:!1,isFilter:!1,maxCount:1,effect:8,mdeffect:null,compatibleInstruments:null},{name:"echoDelay",computeIndex:56,displayName:"echo delay",interleave:!1,isFilter:!1,maxCount:1,effect:6,mdeffect:null,compatibleInstruments:null}]);static operatorWaves=he([{name:"sine",samples:i.sineWave},{name:"triangle",samples:i.generateTriWave()},{name:"pulse width",samples:i.generateSquareWave(.5)},{name:"sawtooth",samples:i.generateSawWave()},{name:"ramp",samples:i.generateSawWave(!0)},{name:"trapezoid",samples:i.generateTrapezoidWave(2)},{name:"quasi-sine",samples:i.generateQuasiSineWave()}]);static pwmOperatorWaves=he([{name:"1%",samples:i.generateSquareWave(.01)},{name:"5%",samples:i.generateSquareWave(.05)},{name:"12.5%",samples:i.generateSquareWave(.125)},{name:"25%",samples:i.generateSquareWave(.25)},{name:"33%",samples:i.generateSquareWave(1/3)},{name:"50%",samples:i.generateSquareWave(.5)},{name:"66%",samples:i.generateSquareWave(2/3)},{name:"75%",samples:i.generateSquareWave(.75)},{name:"87.5%",samples:i.generateSquareWave(.875)},{name:"95%",samples:i.generateSquareWave(.95)},{name:"99%",samples:i.generateSquareWave(.99)}]);static barEditorHeight=10;static modulators=he([{name:"none",pianoName:"None",maxRawVol:6,newNoteVol:6,forSong:!0,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"No Mod Setting",promptDesc:["No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.","[$LO - $HI]"]},{name:"song volume",pianoName:"Volume",maxRawVol:100,newNoteVol:100,forSong:!0,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Song Volume",promptDesc:["This setting affects the overall volume of the song, just like the main volume slider.","At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"tempo",pianoName:"Tempo",maxRawVol:i.tempoMax-i.tempoMin,newNoteVol:Math.ceil((i.tempoMax-i.tempoMin)/2),forSong:!0,convertRealFactor:i.tempoMin,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Song Tempo",promptDesc:["This setting controls the speed your song plays at, just like the tempo slider.","When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.","Note that you can make a 'swing' effect by rapidly changing between two tempo values.","[OVERWRITING] [$LO - $HI] [BPM]"]},{name:"song reverb",pianoName:"Reverb",maxRawVol:i.reverbRange*2,newNoteVol:i.reverbRange,forSong:!0,convertRealFactor:-i.reverbRange,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Song Reverb",promptDesc:["This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.","At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"next bar",pianoName:"Next Bar",maxRawVol:1,newNoteVol:1,forSong:!0,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Go To Next Bar",promptDesc:["This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.","This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.","You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.","[$LO - $HI]"]},{name:"pre volume",pianoName:"Note Vol.",maxRawVol:i.volumeRange,newNoteVol:Math.ceil(i.volumeRange/2),forSong:!1,convertRealFactor:Math.ceil(-i.volumeRange/2),associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Pre Volume",promptDesc:["This setting affects the volume of your instrument as if its note size had been scaled.","At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.","This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, pre volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'post volume' modulator instead, which will always just scale the volume with no added effects.","For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'post volume' modulator anyhow. However, as mentioned, it works more like changing pre volume.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"gain",pianoName:"Gain",maxRawVol:i.volumeRange/2*i.gainRangeMult,newNoteVol:Math.ceil(i.volumeRange/2*i.gainRangeMult/2),forSong:!1,convertRealFactor:0,associatedEffect:9,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Gain",promptDesc:["This setting controls the gain of your instrument.","At $LO, the instrument is muted, at $MID it will be unchanged, and at $HI, it will have maximum gain.","[OVERWRITING] [$LO - $HI] [L-R]"]},{name:"pan",pianoName:"Pan",maxRawVol:i.panMax,newNoteVol:Math.ceil(i.panMax/2),forSong:!1,convertRealFactor:0,associatedEffect:2,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Panning",promptDesc:["This setting controls the panning of your instrument, just like the panning slider.","At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.","[OVERWRITING] [$LO - $HI] [L-R]"]},{name:"reverb",pianoName:"Reverb",maxRawVol:i.reverbRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:0,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Reverb",promptDesc:["This setting controls the reverb of your insturment, just like the reverb slider.","At $LO, your instrument will have no reverb. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"distortion",pianoName:"Distortion",maxRawVol:i.distortionRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:3,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Distortion",promptDesc:["This setting controls the amount of distortion for your instrument, just like the distortion slider.","At $LO, your instrument will have no distortion. At $HI, it will be at maximum.","[OVERWRITING] [$LO - $HI]"]},{name:"fm slider 1",pianoName:"FM 1",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Slider 1",promptDesc:["This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 2",pianoName:"FM 2",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Slider 2",promptDesc:["This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 3",pianoName:"FM 3",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Slider 3",promptDesc:["This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 4",pianoName:"FM 4",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Slider 4",promptDesc:["This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm feedback",pianoName:"FM Feedbck",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Feedback",promptDesc:["This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"pulse width",pianoName:"Pulse Width",maxRawVol:i.pulseWidthRange,newNoteVol:i.pulseWidthRange,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Pulse Width",promptDesc:["This setting controls the width of this instrument's pulse wave, just like the pulse width slider.","At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).","Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.","[OVERWRITING] [$LO - $HI] [%Duty]"]},{name:"detune",pianoName:"Detune",maxRawVol:i.detuneMax-i.detuneMin,newNoteVol:i.detuneCenter,forSong:!1,convertRealFactor:-i.detuneCenter,associatedEffect:11,associatedMDEffect:1,maxIndex:0,promptName:"Instrument Detune",promptDesc:["This setting controls the detune for this instrument, just like the detune slider.","At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.","[OVERWRITING] [$LO - $HI] [cents]"]},{name:"vibrato depth",pianoName:"Vibrato Depth",maxRawVol:50,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:2,maxIndex:0,promptName:"Vibrato Depth",promptDesc:["This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.","At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.","[OVERWRITING] [$LO - $HI] [pitch \xF725]"]},{name:"song detune",pianoName:"Detune",maxRawVol:i.songDetuneMax-i.songDetuneMin,newNoteVol:Math.ceil((i.songDetuneMax-i.songDetuneMin)/2),forSong:!0,convertRealFactor:-250,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Song Detune",promptDesc:["This setting controls the overall detune of the entire song. There is no associated slider.","At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.","[MULTIPLICATIVE] [$LO - $HI] [cents x4]"]},{name:"vibrato speed",pianoName:"Vibrato Speed",maxRawVol:30,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:2,maxIndex:0,promptName:"Vibrato Speed",promptDesc:["This setting controls the speed your instrument will vibrato at, just like the slider.","A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"vibrato delay",pianoName:"Vibrato Delay",maxRawVol:50,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:2,maxIndex:0,promptName:"Vibrato Delay",promptDesc:["This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.","A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).","[OVERWRITING] [$LO - $HI] [beats \xF724]"]},{name:"arp speed",pianoName:"Arp Speed",maxRawVol:50,newNoteVol:12,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:4,maxIndex:0,promptName:"Arpeggio Speed",promptDesc:["This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.","Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.","[0-4]: x0, x1/16, x\u215B, x\u2155, x\xBC,","[5-9]: x\u2153, x\u2156, x\xBD, x\u2154, x\xBE,","[10-14]: x\u2158, x0.9, x1, x1.1, x1.2,","[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,","[20-24]: x1.8, x1.9, x2, x2.1, x2.2,","[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,","[30-34]: x2.8, x2.9, x3, x3.1, x3.2,","[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,","[40-44]: x3.8, x3.9, x4, x4.15, x4.3,","[45-50]: x4.5, x4.8, x5, x5.5, x6, x8","[OVERWRITING] [$LO - $HI]"]},{name:"pan delay",pianoName:"Pan Delay",maxRawVol:20,newNoteVol:10,forSong:!1,convertRealFactor:0,associatedEffect:2,associatedMDEffect:6,maxIndex:0,promptName:"Panning Delay",promptDesc:["This setting controls the delay applied to panning for your instrument, just like the pan delay slider.","With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.","[OVERWRITING] [$LO - $HI]"]},{name:"reset arp",pianoName:"Reset Arp",maxRawVol:1,newNoteVol:1,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:4,maxIndex:0,promptName:"Reset Arpeggio",promptDesc:["This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.","This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.","[$LO - $HI]"]},{name:"post eq",pianoName:"PostEQ",maxRawVol:10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"EQ Filter",promptDesc:["This setting controls a few separate things for your instrument's EQ filter.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"pre eq",pianoName:"PreEQ",maxRawVol:10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:5,associatedMDEffect:6,maxIndex:0,promptName:"Note Filter",promptDesc:["This setting controls a few separate things for your instrument's note filter.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"bit crush",pianoName:"Bitcrush",maxRawVol:i.bitcrusherQuantizationRange-1,newNoteVol:Math.round(i.bitcrusherQuantizationRange/2),forSong:!1,convertRealFactor:0,associatedEffect:4,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Bit Crush",promptDesc:["This setting controls the bit crush of your instrument, just like the bit crush slider.","At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"freq crush",pianoName:"Freq Crush",maxRawVol:i.bitcrusherFreqRange-1,newNoteVol:Math.round(i.bitcrusherFreqRange/2),forSong:!1,convertRealFactor:0,associatedEffect:4,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Frequency Crush",promptDesc:["This setting controls the frequency crush of your instrument, just like the freq crush slider.","At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"echo",pianoName:"Echo",maxRawVol:i.echoSustainRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:6,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Echo Sustain",promptDesc:["This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.","At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"echo delay",pianoName:"Echo Delay",maxRawVol:i.echoDelayRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:6,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Echo Delay",promptDesc:["This setting controls the echo delay of your instrument, just like the echo delay slider.","At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.","[OVERWRITING] [$LO - $HI] [~beats \xF712]"]},{name:"echo ping pong",pianoName:"Ping-Pong",maxRawVol:i.panMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:6,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Ping Pong",promptDesc:["This setting controls the echo ping-pong of your instrument, just like the echo delay slider.","At $LO, the echo will start fully from the left-ear side. At $MID there will be no echo ping pong, and at $HI, it will start coming fully from the right.","[OVERWRITING] [$LO - $HI] [L-R]"]},{name:"flanger",pianoName:"Flanger",maxRawVol:i.flangerRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:10,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Flanger",promptDesc:["This setting controls the flanger strength of your instrument, just like the flanger slider.","At $LO, the flanger effect will be disabled. The strength of the flanger effect increases up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"flanger speed",pianoName:"Flanger Spd",maxRawVol:i.flangerSpeedRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:10,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Flanger Speed",promptDesc:["This setting controls the flanger speed of your instrument, just like the flanger speed slider."]},{name:"flanger depth",pianoName:"Flanger Dpth",maxRawVol:i.flangerDepthRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:10,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Flanger Depth",promptDesc:["This setting controls the flanger depth of your instrument, just like the flanger depth slider."]},{name:"flanger feedback",pianoName:"Flanger Fbck",maxRawVol:i.flangerFeedbackRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:10,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Flanger Feedback",promptDesc:["This setting controls the flanger feedback of your instrument, just like the flanger feedback slider."]},{name:"chorus",pianoName:"Chorus",maxRawVol:i.chorusRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:1,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Chorus",promptDesc:["This setting controls the chorus strength of your instrument, just like the chorus slider.","At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"post eq cut",pianoName:"PostEQ Cut",maxRawVol:i.filterSimpleCutRange-1,newNoteVol:i.filterSimpleCutRange-1,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"EQ Filter Cutoff Frequency",promptDesc:["This setting controls the filter cut position of your instrument, just like the filter cut slider.","This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.","[OVERWRITING] [$LO - $HI]"]},{name:"post eq peak",pianoName:"PostEQ Peak",maxRawVol:i.filterSimplePeakRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"EQ Filter Peak Gain",promptDesc:["This setting controls the filter peak position of your instrument, just like the filter peak slider.","This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.","[OVERWRITING] [$LO - $HI]"]},{name:"pre eq cut",pianoName:"PreEQ Cut",maxRawVol:i.filterSimpleCutRange-1,newNoteVol:i.filterSimpleCutRange-1,forSong:!1,convertRealFactor:0,associatedEffect:5,associatedMDEffect:6,maxIndex:0,promptName:"Note Filter Cutoff Frequency",promptDesc:["This setting controls the filter cut position of your instrument, just like the filter cut slider.","This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.","[OVERWRITING] [$LO - $HI]"]},{name:"pre eq peak",pianoName:"PreEQ Peak",maxRawVol:i.filterSimplePeakRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:5,associatedMDEffect:6,maxIndex:0,promptName:"Note Filter Peak Gain",promptDesc:["This setting controls the filter peak position of your instrument, just like the filter peak slider.","This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.","[OVERWRITING] [$LO - $HI]"]},{name:"pitch shift",pianoName:"Pitch Shift",maxRawVol:i.pitchShiftRange-1,newNoteVol:i.pitchShiftCenter,forSong:!1,convertRealFactor:-i.pitchShiftCenter,associatedEffect:11,associatedMDEffect:0,maxIndex:0,promptName:"Pitch Shift",promptDesc:["This setting controls the pitch offset of your instrument, just like the pitch shift slider.","At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.","[OVERWRITING] [$LO - $HI] [pitch]"]},{name:"sustain",pianoName:"Sustain",maxRawVol:i.stringSustainRange-1,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Picked String Sustain",promptDesc:["This setting controls the sustain of your picked string instrument, just like the sustain slider.","At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"post volume",pianoName:"Mix Vol.",maxRawVol:i.volumeRange,newNoteVol:Math.ceil(i.volumeRange/2),forSong:!1,convertRealFactor:Math.ceil(-i.volumeRange/2),associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Instrument Post Volume",promptDesc:["This setting affects the volume of your instrument as if its volume slider had been moved.","At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.","Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.","[MULTIPLICATIVE] [$LO - $HI]"]},{name:"fm slider 5",pianoName:"FM 5",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Slider 5",promptDesc:["This setting affects the strength of the fifth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"fm slider 6",pianoName:"FM 6",maxRawVol:15,newNoteVol:15,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"FM Slider 6",promptDesc:["This setting affects the strength of the sixth FM slider, just like the corresponding slider on your instrument.","It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.","For the full range of control with this mod, move your underlying slider all the way to the right.","[MULTIPLICATIVE] [$LO - $HI] [%]"]},{name:"decimal offset",pianoName:"Decimal Offset",maxRawVol:99,newNoteVol:0,forSong:!1,convertRealFactor:0,invertSliderIndicator:!0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Decimal Offset",promptDesc:["This setting controls the decimal offset that is subtracted from the pulse width; use this for creating values like 12.5 or 6.25.","[$LO - $HI]"]},{name:"envelope speed",pianoName:"EnvelopeSpd",maxRawVol:50,newNoteVol:12,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Envelope Speed",promptDesc:["This setting controls how fast all of the envelopes for the instrument play.","At $LO, your instrument's envelopes will be frozen, and at values near there they will change very slowly. At 12, the envelopes will work as usual, performing at normal speed. This increases up to $HI, where the envelopes will change very quickly. The speeds are given below:","[0-4]: x0, x1/16, x\u215B, x\u2155, x\xBC,","[5-9]: x\u2153, x\u2156, x\xBD, x\u2154, x\xBE,","[10-14]: x\u2158, x0.9, x1, x1.1, x1.2,","[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,","[20-24]: x1.8, x1.9, x2, x2.1, x2.2,","[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,","[30-34]: x2.8, x2.9, x3, x3.1, x3.2,","[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,","[40-44]: x3.8, x3.9, x4, x4.15, x4.3,","[45-50]: x4.5, x4.8, x5, x5.5, x6, x8","[OVERWRITING] [$LO - $HI]"]},{name:"dynamism",pianoName:"Dynamism",maxRawVol:i.supersawDynamismMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Supersaw Dynamism",promptDesc:["This setting controls the supersaw dynamism of your instrument, just like the dynamism slider.","At $LO, your instrument will have only a single pulse contributing. Increasing this will raise the contribution of other waves which is similar to a chorus effect. The effect gets more noticeable up to the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"spread",pianoName:"Spread",maxRawVol:i.supersawSpreadMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Supersaw Spread",promptDesc:["This setting controls the supersaw spread of your instrument, just like the spread slider.","At $LO, all the pulses in your supersaw will be at the same frequency. Increasing this value raises the frequency spread of the contributing waves, up to a dissonant spread at the max value, $HI.","[OVERWRITING] [$LO - $HI]"]},{name:"saw shape",pianoName:"Saw Shape",maxRawVol:i.supersawShapeMax,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Supersaw Shape",promptDesc:["This setting controls the supersaw shape of your instrument, just like the Saw\u2194Pulse slider.","As the slider's name implies, this effect will give you a sawtooth wave at $LO, and a full pulse width wave at $HI. Values in between will be a blend of the two.","[OVERWRITING] [$LO - $HI] [%]"]},{name:"individual envelope speed",pianoName:"IndvEnvSpd",maxRawVol:63,newNoteVol:23,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:this.maxEnvelopeCount-1,promptName:"Individual Envelope Speed",promptDesc:["This setting controls how fast the specified envelope of the instrument will play.","At $LO, your the envelope will be frozen, and at values near there they will change very slowly. At 23, the envelope will work as usual, performing at normal speed. This increases up to $HI, where the envelope will change very quickly. The speeds are given below:","[0-4]: x0, x0.01, x0.02, x0.03, x0.04,","[5-9]: x0.05, x0.06, x0.07, x0.08, x0.09,","[10-14]: x0.1, x0.2, x0.25, x0.3, x0.33,","[15-19]: x0.4, x0.5, x0.6, x0.6667, x0.7,","[20-24]: x0.75, x0.8, x0.9, x1, x1.25,","[25-29]: x1.3333, x1.5, x1.6667, x1.75, x2,","[30-34]: x2.25, x2.5, x2.75, x3, x3.5,","[35-39]: x4, x4.5, x5, x5.5, x6,","[40-44]: x6.5, x7, x7.5, x8, x8.5,","[45-49]: x9, x9.5, x10, x11, x12","[50-54]: x13, x14, x15, x16, x17","[55-59]: x18, x19, x20, x24, x32","[60-63]: x40, x64, x128, x256","[OVERWRITING] [$LO - $HI]"]},{name:"song eq",pianoName:"Song EQ",maxRawVol:10,newNoteVol:0,forSong:!0,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:0,promptName:"Song EQ Filter",promptDesc:["This setting overwrites every instrument's eq filter. You can do this in a few separate ways, similar to the per instrument eq filter modulator.","When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.","Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.","If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.","[OVERWRITING] [$LO - $HI]"]},{name:"reset envelope",pianoName:"ResetEnv",maxRawVol:1,newNoteVol:1,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:this.maxEnvelopeCount-1,promptName:"Reset Envelope",promptDesc:["This setting functions a lot like the reset arp modulator. Wherever a note is placed, the envelope of this instrument at the specified index will reset at the very start of that note. ","[$LO - $HI]"]},{name:"ring modulation",pianoName:"Ring Mod",maxRawVol:i.ringModRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:7,associatedMDEffect:6,maxIndex:0,promptName:"Ring Modulation",promptDesc:["This setting controls the Ring Modulation effect in your instrument.","[OVERWRITING] [$LO - $HI]"]},{name:"ring mod hertz",pianoName:"Ring Mod(Hz)",maxRawVol:i.ringModHzRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:7,associatedMDEffect:6,maxIndex:0,promptName:"Ring Modulation (Hertz)",promptDesc:["This setting controls the Hertz (Hz) used in the Ring Modulation effect in your instrument.","[OVERWRITING] [$LO - $HI]"]},{name:"granular",pianoName:"Granular",maxRawVol:i.granularRange,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:8,associatedMDEffect:6,maxIndex:0,promptName:"Granular",promptDesc:["This setting controls the granular effect in your instrument.","[OVERWRITING] [$LO - $HI]"]},{name:"grain freq",pianoName:"Grain #",maxRawVol:i.grainAmountsMax,newNoteVol:8,forSong:!1,convertRealFactor:0,associatedEffect:8,associatedMDEffect:6,maxIndex:0,promptName:"Grain Count",promptDesc:["This setting controls the density of grains for the granular effect on your instrument.","[OVERWRITING] [$LO - $HI]"]},{name:"grain size",pianoName:"Grain Size",maxRawVol:i.grainSizeMax/i.grainSizeStep,newNoteVol:i.grainSizeMin/i.grainSizeStep,forSong:!1,convertRealFactor:0,associatedEffect:8,associatedMDEffect:6,maxIndex:0,promptName:"Grain Size",promptDesc:["This setting controls the grain size of the granular effect in your instrument.","The number shown in the mod channel is multiplied by "+i.grainSizeStep+" to get the actual grain size.","[OVERWRITING] [$LO - $HI]"]},{name:"grain range",pianoName:"Grain Range",maxRawVol:i.grainRangeMax/i.grainSizeStep,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:8,associatedMDEffect:6,maxIndex:0,promptName:"Grain Range",promptDesc:["This setting controls the range of values for your grain size of the granular effect in your instrument, from no variation to a lot","The number shown in the mod channel is multiplied by "+i.grainSizeStep+" to get the actual grain size.","[OVERWRITING] [$LO - $HI]"]},{name:"individual envelope lower bound",pianoName:"IndvEnvLow",maxRawVol:i.perEnvelopeBoundMax*10,newNoteVol:0,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:this.maxEnvelopeCount-1,promptName:"Individual Envelope Lower Bound",promptDesc:["This setting controls the envelope lower bound","At $LO, your the envelope will output an upper envelope bound to 0, and at $HI your envelope will output an upper envelope bound to 2.","This settings will not work if your lower envelope bound is higher than your upper envelope bound"]},{name:"individual envelope upper bound",pianoName:"IndvEnvUp",maxRawVol:i.perEnvelopeBoundMax*10,newNoteVol:10,forSong:!1,convertRealFactor:0,associatedEffect:11,associatedMDEffect:6,maxIndex:this.maxEnvelopeCount-1,promptName:"Individual Envelope Upper Bound",promptDesc:["This setting controls the envelope upper bound","At $LO, your the envelope will output a 0 to lower envelope bound, and at $HI your envelope will output a 2 to lower envelope bound.","This settings will not work if your lower envelope bound is higher than your upper envelope bound"]}])};function J(i){let e=0;for(let n=0;n<i.length;n++)e+=i[n];let a=e/i.length;for(let n=0;n<i.length;n++)i[n]-=a;return Pt(i),i.push(0),new Float32Array(i)}function ne(i){let e=0;J(i);for(let n=0;n<i.length-1;n++)e+=Math.abs(i[n]);let a=e/(i.length-1);for(let n=0;n<i.length-1;n++)i[n]=i[n]/a;return new Float32Array(i)}function Pt(i){let e=0,a=new Float32Array(i.length);for(let n=0;n<i.length;n++)a[n]=e,e+=i[n];return a}function Ca(i){let e=0;for(let a=0;a<i.length;a++){let n=i[a];i[a]=e,e+=n}}function Nn(i){return i/(t.pulseWidthRange*2)}function sn(i,e,a){let n=t.chipNoises[i].samples;if(n==null){if(n=new Float32Array(t.chipNoiseLength+1),t.chipNoises[i].samples=n,i==0){let S=1;for(let x=0;x<t.chipNoiseLength;x++){n[x]=(S&1)*2-1;let w=S>>1;(S+w&1)==1&&(w+=16384),S=w}}else if(i==1)for(let S=0;S<t.chipNoiseLength;S++)n[S]=Math.random()*2-1;else if(i==2){let S=1;for(let x=0;x<t.chipNoiseLength;x++){n[x]=(S&1)*2-1;let w=S>>1;(S+w&1)==1&&(w+=32768),S=w}}else if(i==3){let S=1;for(let x=0;x<t.chipNoiseLength;x++){n[x]=(S&1)*2-1;let w=S>>1;(S+w&1)==1&&(w+=40),S=w}}else if(i==4)wt(n,t.chipNoiseLength,10,11,1,1,0),wt(n,t.chipNoiseLength,11,14,.6578,.6578,0),e(n,t.chipNoiseLength),a(n,1/Math.sqrt(t.chipNoiseLength));else if(i==5)for(var r=1,s=0;s<t.chipNoiseLength;s++){n[s]=(r&1)*2-1;var o=r>>1;(r+o&1)==1&&(o+=40),r=o}else if(i==6)wt(n,t.chipNoiseLength,1,10,1,1,0),wt(n,t.chipNoiseLength,20,14,-2,-2,0),e(n,t.chipNoiseLength),a(n,1/Math.sqrt(t.chipNoiseLength));else if(i==7)for(var r=1,s=0;s<t.chipNoiseLength;s++){n[s]=(r&1)*4*(Math.random()*14+1)-8;var o=r>>1;(r+o&1)==1&&(o+=60),r=o}else if(i==8)for(var r=1,s=0;s<t.chipNoiseLength;s++){n[s]=(r&1)/2-.5;var o=r>>1;(r+o&1)==1&&(o-=40),r=o}else if(i==9){let S=1;for(let x=0;x<t.chipNoiseLength;x++){n[x]=(S&1)*2-1.1;let w=S>>1;(S+w&1)==1&&(w+=8^2<<16),S=w}}else if(i==10)for(let S=0;S<t.chipNoiseLength;S++)n[S]=Math.round(Math.random());else if(i==11)for(var r=1,s=0;s<t.chipNoiseLength;s++){n[s]=Math.round(r&1);var o=r>>1;(r+o&1)==1&&(o-=40),r=o}else if(i==12)for(let S=0;S<t.chipNoiseLength;S++){var c=Math.random();n[S]=Math.pow(c,Math.clz32(c))}else if(i==13){var u=0,b=0,l=0,g,m,y,h;u=b=l=g=m=y=h=0;for(let S=0;S<t.chipNoiseLength;S++){var f=Math.random()*2-1;u=.99886*u+f*.0555179,b=.99332*b+f*.0750759,l=.969*l+f*.153852,g=.8665*g+f*.3104856,m=.55*m+f*.5329522,y=-.7616*y-f*.016898,n[S]=u+b+l+g+m+y+h+f*.5362,n[S]*=.44,h=f*.115926}}else if(i==14){var p=0;for(let S=0;S<t.chipNoiseLength;S++){var f=Math.random()*2-1;n[S]=(p+.02*f)/1.02,p=n[S],n[S]*=14}}else throw new Error("Unrecognized drum index: "+i);n[t.chipNoiseLength]=n[0]}return n}function wt(i,e,a,n,r,s,o){let b=Math.pow(2,a)|0,l=Math.min(e>>1,Math.pow(2,n)|0),g=sn(0,null,null),m=0;for(let y=b;y<l;y++){let h=r+(s-r)*(Math.log2(y)-a)/(n-a),f=Math.pow(2,(h-1)*7+1)*h;f*=Math.pow(y/2048,o),m+=f,f*=g[y];let p=.61803398875*y*y*Math.PI*2;i[y]=Math.cos(p)*f,i[e-y]=Math.sin(p)*f}return m}function zt(i,e,a){let n=t.arpeggioPatterns[i-1];return n!=null?(i==2&&e==!1&&(n=[0,0,1,1]),n[a%n.length]):a%i}function he(i){let e={};for(let n=0;n<i.length;n++){let r=i[n];r.index=n,e[r.name]=r}let a=i;return a.dictionary=e,a}function Wt(i){return(i&8)!=0}function Ot(i){return(i&16)!=0}function Et(i){return(i&1)!=0}function Mt(i){return(i&2)!=0}function Dt(i){return(i&4)!=0}function zn(i,e=0){return i==0?0:(i>0&&(i-=1/t.ringModHzRange),i>1/t.ringModHzRange&&(i+=1/t.ringModHzRange),Math.floor(t.ringModMinHz*Math.pow(t.ringModMaxHz/t.ringModMinHz,i)))}function yr(i){let e=new Array(i.length),a={};for(let r=0;r<e.length;r++){e[r]=Object.assign([],i[r]);let s=e[r];s.index=r,a[s.name]=s}for(let r in a)a[r].samples=Pt(a[r].samples);let n=e;return n.dictionary=a,n}var Wn=function(i){var e=typeof Symbol=="function"&&Symbol.iterator,a=e&&i[e],n=0;if(a)return a.call(i);if(i&&typeof i.length=="number")return{next:function(){return i&&n>=i.length&&(i=void 0),{value:i&&i[n++],done:!i}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")},br=function(i,e){var a=typeof Symbol=="function"&&i[Symbol.iterator];if(!a)return i;var n=a.call(i),r,s=[],o;try{for(;(e===void 0||e-- >0)&&!(r=n.next()).done;)s.push(r.value)}catch(c){o={error:c}}finally{try{r&&!r.done&&(a=n.return)&&a.call(n)}finally{if(o)throw o.error}}return s},Ia=function(){for(var i=[],e=0;e<arguments.length;e++)i=i.concat(br(arguments[e]));return i};function Tt(i,e){var a,n,r,s,o,c;try{for(var u=Wn(e),b=u.next();!b.done;b=u.next()){var l=b.value;if(l instanceof Node)i.appendChild(l);else if(typeof l=="string")i.appendChild(document.createTextNode(l));else if(typeof l=="function")Tt(i,[l()]);else if(Array.isArray(l))Tt(i,l);else if(l&&typeof Symbol<"u"&&typeof l[Symbol.iterator]=="function")Tt(i,Ia(l));else if(l&&l.constructor===Object&&i instanceof Element)try{for(var g=(r=void 0,Wn(Object.keys(l))),m=g.next();!m.done;m=g.next()){var y=m.value,h=l[y];if(y==="class")typeof h=="string"?i.setAttribute("class",h):Array.isArray(l)||h&&typeof Symbol<"u"&&typeof h[Symbol.iterator]=="function"?i.setAttribute("class",Ia(h).join(" ")):console.warn("Invalid "+y+' value "'+h+'" on '+i.tagName+" element.");else if(y==="style")if(h&&h.constructor===Object)try{for(var f=(o=void 0,Wn(Object.keys(h))),p=f.next();!p.done;p=f.next()){var S=p.value;S in i.style?i.style[S]=h[S]:i.style.setProperty(S,h[S])}}catch(x){o={error:x}}finally{try{p&&!p.done&&(c=f.return)&&c.call(f)}finally{if(o)throw o.error}}else i.setAttribute(y,h);else typeof h=="function"?i[y]=h:typeof h=="boolean"?h?i.setAttribute(y,""):i.removeAttribute(y):i.setAttribute(y,h)}}catch(x){r={error:x}}finally{try{m&&!m.done&&(s=g.return)&&s.call(g)}finally{if(r)throw r.error}}else i.appendChild(document.createTextNode(l))}}catch(x){a={error:x}}finally{try{b&&!b.done&&(n=u.return)&&n.call(u)}finally{if(a)throw a.error}}return i}var On="http://www.w3.org/2000/svg";function wa(){for(var i=[],e=0;e<arguments.length;e++)i[e]=arguments[e];return document.createRange().createContextualFragment(i.join())}function ka(){for(var i=[],e=0;e<arguments.length;e++)i[e]=arguments[e];for(var a=document.createDocumentFragment(),n=new DOMParser().parseFromString('<svg xmlns="http://www.w3.org/2000/svg">'+i.join()+"</svg>","image/svg+xml").documentElement;n.firstChild!==null;)document.importNode(n.firstChild,!0),a.appendChild(n.firstChild);return a}var Ta=function(i){var e=typeof Symbol=="function"&&Symbol.iterator,a=e&&i[e],n=0;if(a)return a.call(i);if(i&&typeof i.length=="number")return{next:function(){return i&&n>=i.length&&(i=void 0),{value:i&&i[n++],done:!i}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")},Vn,Pa,Hn,Ea;var Gt=wa,Qe=ka,gr=function(i){Gt[i]=function(){for(var e=[],a=0;a<arguments.length;a++)e[a]=arguments[a];return Tt(document.createElement(i),e)}};try{for($t=Ta("a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr".split(" ")),Vt=$t.next();!Vt.done;Vt=$t.next())Ma=Vt.value,gr(Ma)}catch(i){Vn={error:i}}finally{try{Vt&&!Vt.done&&(Pa=$t.return)&&Pa.call($t)}finally{if(Vn)throw Vn.error}}var Ma,$t,Vt,vr=function(i){if(Qe[i]=function(){for(var a=[],n=0;n<arguments.length;n++)a[n]=arguments[n];return Tt(document.createElementNS(On,i),a)},/-/.test(i)){var e=i.replace(/-/g,"_");Qe[e]=function(){for(var a=[],n=0;n<arguments.length;n++)a[n]=arguments[n];return Tt(document.createElementNS(On,i),a)}}};try{for(_t=Ta("a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern".split(" ")),Ht=_t.next();!Ht.done;Ht=_t.next())Da=Ht.value,vr(Da)}catch(i){Hn={error:i}}finally{try{Ht&&!Ht.done&&(Ea=_t.return)&&Ea.call(_t)}finally{if(Hn)throw Hn.error}}var Da,_t,Ht;var xe=class i{static colorLookup=new Map;static usesColorFormula=!1;static defaultTheme="modbox classic";static themes={"dark classic":"","dark competition":`
				:root {
					--hover-preview: #ddd;
					--playhead: #ddd;
					--primary-text: #ddd;
					--secondary-text: #8e695b;
					--text-selection: rgba(169,0,255,0.99);
					--box-selection-fill: rgba(221,221,221,0.2);
					--loop-accent: #bf15ba;
					--link-accent: #f888ff;
					--ui-widget-background: #443a3a;
					--pitch-background: #353333;
					--tonic: #884a44;
					--fifth-note: #415498;
					--noise4-secondary-channel: #6B3E8E;
			}
		`,"light classic":`
			:root {
				-webkit-text-stroke-width: 0.5px;
				--page-margin: #685d88;
				--editor-background: white;
				--hover-preview: black;
				--playhead: rgba(0,0,0,0.5);
				--primary-text: black;
				--secondary-text: #777;
				--inverted-text: white;
				--text-selection: rgba(200,170,255,0.99);
				--box-selection-fill: rgba(0,0,0,0.1);
				--loop-accent: #98f;
				--link-accent: #74f;
				--ui-widget-background: #ececec;
				--ui-widget-focus: #eee;
				--pitch-background: #ececec;
				--tonic: #f0d6b6;
				--fifth-note: #bbddf0;
				--white-piano-key: #eee;
				--black-piano-key: #666;
					--track-editor-bg-pitch: #ececec;
					--track-editor-bg-pitch-dim: #fdfdfd;
					--track-editor-bg-noise: #ececec;
					--track-editor-bg-noise-dim: #fdfdfd;
					--track-editor-bg-mod: #dbecfd;
					--track-editor-bg-mod-dim: #ecfdff;
					--multiplicative-mod-slider: #789;
					--overwriting-mod-slider: #987;
					--indicator-primary: #98f;
					--indicator-secondary: #cde;
					--select2-opt-group: #cecece;
					--input-box-outline: #ddd;
					--mute-button-normal: #c0b47f;
					--mute-button-mod: #bd7fc0;
				--pitch1-secondary-channel: #6CD9ED;
				--pitch1-primary-channel:   #00A0BD;
				--pitch1-secondary-note:    #34C2DC;
				--pitch1-primary-note:      #00758A;
				--pitch2-secondary-channel: #E3C941;
				--pitch2-primary-channel:   #B49700;
				--pitch2-secondary-note:    #D1B628;
				--pitch2-primary-note:      #836E00;
				--pitch3-secondary-channel: #FF9D61;
				--pitch3-primary-channel:   #E14E00;
				--pitch3-secondary-note:    #F67D3C;
				--pitch3-primary-note:      #B64000;
				--pitch4-secondary-channel: #4BE24B;
				--pitch4-primary-channel:   #00A800;
				--pitch4-secondary-note:    #2DC82D;
				--pitch4-primary-note:      #008000;
				--pitch5-secondary-channel: #FF90FF;
				--pitch5-primary-channel:   #E12EDF;
				--pitch5-secondary-note:    #EC6EEC;
				--pitch5-primary-note:      #A600A5;
				--pitch6-secondary-channel: #B5B5FE;
				--pitch6-primary-channel:   #6969FD;
				--pitch6-secondary-note:    #9393FE;
				--pitch6-primary-note:      #4A4AD7;
				--pitch7-secondary-channel: #C2D848;
				--pitch7-primary-channel:   #8EA800;
				--pitch7-secondary-note:    #B0C82D;
				--pitch7-primary-note:      #6C8000;
				--pitch8-secondary-channel: #FF90A4;
				--pitch8-primary-channel:   #E12E4D;
				--pitch8-secondary-note:    #EC6E85;
				--pitch8-primary-note:      #A6001D;
				--pitch9-secondary-channel: #41E3B5;
				--pitch9-primary-channel:   #00B481;
				--pitch9-secondary-note:    #28D1A1;
				--pitch9-primary-note:      #00835E;
				--pitch10-secondary-channel:#CA77FF;
				--pitch10-primary-channel:  #9609FF;
				--pitch10-secondary-note:   #B54FFF;
				--pitch10-primary-note:     #8400E3;
				--noise1-secondary-channel: #C1C1C1;
				--noise1-primary-channel:   #898989;
				--noise1-secondary-note:    #ADADAD;
				--noise1-primary-note:      #6C6C6C;
				--noise2-secondary-channel: #E8BB8C;
				--noise2-primary-channel:   #BD7D3A;
				--noise2-secondary-note:    #D1A374;
				--noise2-primary-note:      #836342;
				--noise3-secondary-channel: #9BC4EB;
				--noise3-primary-channel:   #4481BE;
				--noise3-secondary-note:    #7CA7D3;
				--noise3-primary-note:      #476685;
				--noise4-secondary-channel: #C5A5E0;
				--noise4-primary-channel:   #8553AE;
				--noise4-secondary-note:    #B290CC;
				--noise4-primary-note:      #684F7D;
				--noise5-secondary-channel: #B8CE93;
				--noise5-primary-channel:   #87A74F;
				--noise5-secondary-note:    #ABC183;
				--noise5-primary-note:      #68784C;
					--mod1-secondary-channel:   #339955;
					--mod1-primary-channel:     #77dd55;
					--mod1-primary-note:        #2ad84a;
					--mod2-primary-note:        #ba124a;
					--mod3-primary-note:        #7a1caa;
					--mod4-primary-note:        #a86810;
					--mod-label-primary:        #dddddd;
					--mod-label-secondary-text: #777;
					--disabled-note-primary:    #666;
					--disabled-note-secondary:  #aaa;
			}
			
			.beepboxEditor button, .beepboxEditor select {
				box-shadow: inset 0 0 0 1px var(--secondary-text);
			}

				.select2-selection__rendered {
					box-shadow: inset 0 0 0 1px var(--secondary-text);
				}

				.promptContainerBG::before {
					box-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);
				}	
		`,"jummbox classic":`
				:root {
					--page-margin: #040410;
					--editor-background: #040410;
					--playhead: rgba(255, 255, 255, 0.9);
					--secondary-text: #84859a;
					--box-selection-fill: #044b94;
					--ui-widget-background: #393e4f;
					--ui-widget-focus: #6d6886;
					--pitch-background: #393e4f;
					--tonic: #725491;
					--fifth-note: #54547a;
					--white-piano-key: #eee;
					--black-piano-key: #666;
					--use-color-formula: true;
					--track-editor-bg-pitch: #393e4f;
					--track-editor-bg-pitch-dim: #1c1d28;
					--track-editor-bg-noise: #3d3535;
					--track-editor-bg-noise-dim: #161313;
					--track-editor-bg-mod: #283560;
					--track-editor-bg-mod-dim: #0a101f;
					--multiplicative-mod-slider: #606c9f;
					--overwriting-mod-slider: #6850b5;
					--indicator-primary: #9c64f7;
					--indicator-secondary: #393e4f;
					--select2-opt-group: #5d576f;
					--input-box-outline: #222;
					--mute-button-normal: #dda85d;
					--mute-button-mod: #886eae;
					--mod-label-primary: #282840;
					--mod-label-secondary-text: rgb(87, 86, 120);
					--mod-label-primary-text: white;
					--pitch-secondary-channel-hue: 0;
					--pitch-secondary-channel-hue-scale: 6.5;
					--pitch-secondary-channel-sat: 83.3;
					--pitch-secondary-channel-sat-scale: 0.1;
					--pitch-secondary-channel-lum: 40;
					--pitch-secondary-channel-lum-scale: 0.05;
					--pitch-primary-channel-hue: 0;
					--pitch-primary-channel-hue-scale: 6.5;
					--pitch-primary-channel-sat: 100;
					--pitch-primary-channel-sat-scale: 0.1;
					--pitch-primary-channel-lum: 67.5;
					--pitch-primary-channel-lum-scale: 0.05;
					--pitch-secondary-note-hue: 0;
					--pitch-secondary-note-hue-scale: 6.5;
					--pitch-secondary-note-sat: 93.9;
					--pitch-secondary-note-sat-scale: 0.1;
					--pitch-secondary-note-lum: 25;
					--pitch-secondary-note-lum-scale: 0.05;
					--pitch-primary-note-hue: 0;
					--pitch-primary-note-hue-scale: 6.5;
					--pitch-primary-note-sat: 100;
					--pitch-primary-note-sat-scale: 0.05;
					--pitch-primary-note-lum: 85.6;
					--pitch-primary-note-lum-scale: 0.025;
					--noise-secondary-channel-hue: 0;
					--noise-secondary-channel-hue-scale: 2;
					--noise-secondary-channel-sat: 25;
					--noise-secondary-channel-sat-scale: 0;
					--noise-secondary-channel-lum: 42;
					--noise-secondary-channel-lum-scale: 0;
					--noise-primary-channel-hue: 0;
					--noise-primary-channel-hue-scale: 2;
					--noise-primary-channel-sat: 33;
					--noise-primary-channel-sat-scale: 0;
					--noise-primary-channel-lum: 63.5;
					--noise-primary-channel-lum-scale: 0;
					--noise-secondary-note-hue: 0;
					--noise-secondary-note-hue-scale: 2;
					--noise-secondary-note-sat: 33.5;
					--noise-secondary-note-sat-scale: 0;
					--noise-secondary-note-lum: 55;
					--noise-secondary-note-lum-scale: 0;
					--noise-primary-note-hue: 0;
					--noise-primary-note-hue-scale: 2;
					--noise-primary-note-sat: 46.5;
					--noise-primary-note-sat-scale: 0;
					--noise-primary-note-lum: 74;
					--noise-primary-note-lum-scale: 0;
					--mod-secondary-channel-hue: 192;
					--mod-secondary-channel-hue-scale: 1.5;
					--mod-secondary-channel-sat: 88;
					--mod-secondary-channel-sat-scale: 0;
					--mod-secondary-channel-lum: 50;
					--mod-secondary-channel-lum-scale: 0;
					--mod-primary-channel-hue: 192;
					--mod-primary-channel-hue-scale: 1.5;
					--mod-primary-channel-sat: 96;
					--mod-primary-channel-sat-scale: 0;
					--mod-primary-channel-lum: 80;
					--mod-primary-channel-lum-scale: 0;
					--mod-secondary-note-hue: 192;
					--mod-secondary-note-hue-scale: 1.5;
					--mod-secondary-note-sat: 92;
					--mod-secondary-note-sat-scale: 0;
					--mod-secondary-note-lum: 45;
					--mod-secondary-note-lum-scale: 0;
					--mod-primary-note-hue: 192;
					--mod-primary-note-hue-scale: 1.5;
					--mod-primary-note-sat: 96;
					--mod-primary-note-sat-scale: 0;
					--mod-primary-note-lum: 85;
					--mod-primary-note-lum-scale: 0;
					--disabled-note-primary:    #91879f;
					--disabled-note-secondary:  #6a677a;
				}
			`,forest:`
				:root {
					--page-margin: #010c03;
					--editor-background: #010c03;
					--hover-preview: #efe;
					--playhead: rgba(232, 255, 232, 0.9);
					--primary-text: #efe;
					--secondary-text: #70A070;
					--inverted-text: #280228;
					--text-selection: rgba(255,68,199,0.99);
					--box-selection-fill: #267aa3;
					--loop-accent: #ffe845;
					--link-accent: #9f8;
					--ui-widget-background: #203829;
					--ui-widget-focus: #487860;
					--pitch-background: #203829;
					--tonic: #2b8d20;
					--fifth-note: #385840;
					--white-piano-key: #bda;
					--black-piano-key: #573;
                    --black-piano-key-text: #ffffff;
					--use-color-formula: true;
					--track-editor-bg-pitch: #254820;
					--track-editor-bg-pitch-dim: #102819;
					--track-editor-bg-noise: #304050;
					--track-editor-bg-noise-dim: #102030;
					--track-editor-bg-mod: #506030;
					--track-editor-bg-mod-dim: #2a300a;
					--multiplicative-mod-slider: #205c8f;
					--overwriting-mod-slider: #20ac6f;
					--indicator-primary: #dcd866;
					--indicator-secondary: #203829;
					--select2-opt-group: #1a6f5a;
					--input-box-outline: #242;
					--mute-button-normal: #49e980;
					--mute-button-mod: #c2e502;
					--mod-label-primary: #133613;
					--mod-label-secondary-text: rgb(27, 126, 40);
					--mod-label-primary-text: #efe;
					--pitch-secondary-channel-hue: 120;
					--pitch-secondary-channel-hue-scale: 8.1;
					--pitch-secondary-channel-sat: 59;
					--pitch-secondary-channel-sat-scale: 0.1;
					--pitch-secondary-channel-lum: 50;
					--pitch-secondary-channel-lum-scale: 0.04;
					--pitch-primary-channel-hue: 120;
					--pitch-primary-channel-hue-scale: 8.1;
					--pitch-primary-channel-sat: 86;
					--pitch-primary-channel-sat-scale: 0.1;
					--pitch-primary-channel-lum: 70;
					--pitch-primary-channel-lum-scale: 0.04;
					--pitch-secondary-note-hue: 120;
					--pitch-secondary-note-hue-scale: 8.1;
					--pitch-secondary-note-sat: 85;
					--pitch-secondary-note-sat-scale: 0.1;
					--pitch-secondary-note-lum: 30;
					--pitch-secondary-note-lum-scale: 0.04;
					--pitch-primary-note-hue: 120;
					--pitch-primary-note-hue-scale: 8.1;
					--pitch-primary-note-sat: 90;
					--pitch-primary-note-sat-scale: 0.05;
					--pitch-primary-note-lum: 80;
					--pitch-primary-note-lum-scale: 0.025;
					--noise-secondary-channel-hue: 200;
					--noise-secondary-channel-hue-scale: 1.1;
					--noise-secondary-channel-sat: 25;
					--noise-secondary-channel-sat-scale: 0;
					--noise-secondary-channel-lum: 22;
					--noise-secondary-channel-lum-scale: 0;
					--noise-primary-channel-hue: 200;
					--noise-primary-channel-hue-scale: 1.1;
					--noise-primary-channel-sat: 48;
					--noise-primary-channel-sat-scale: 0;
					--noise-primary-channel-lum: 65;
					--noise-primary-channel-lum-scale: 0;
					--noise-secondary-note-hue: 200;
					--noise-secondary-note-hue-scale: 1.1;
					--noise-secondary-note-sat: 33.5;
					--noise-secondary-note-sat-scale: 0;
					--noise-secondary-note-lum: 33;
					--noise-secondary-note-lum-scale: 0;
					--noise-primary-note-hue: 200;
					--noise-primary-note-hue-scale: 1.1;
					--noise-primary-note-sat: 46.5;
					--noise-primary-note-sat-scale: 0;
					--noise-primary-note-lum: 64;
					--noise-primary-note-lum-scale: 0;
					--mod-secondary-channel-hue: 40;
					--mod-secondary-channel-hue-scale: 1.8;
					--mod-secondary-channel-sat: 44;
					--mod-secondary-channel-sat-scale: 0;
					--mod-secondary-channel-lum: 50;
					--mod-secondary-channel-lum-scale: 0;
					--mod-primary-channel-hue: 40;
					--mod-primary-channel-hue-scale: 1.8;
					--mod-primary-channel-sat: 60;
					--mod-primary-channel-sat-scale: 0;
					--mod-primary-channel-lum: 80;
					--mod-primary-channel-lum-scale: 0;
					--mod-secondary-note-hue: 40;
					--mod-secondary-note-hue-scale: 1.8;
					--mod-secondary-note-sat: 62;
					--mod-secondary-note-sat-scale: 0;
					--mod-secondary-note-lum: 55;
					--mod-secondary-note-lum-scale: 0;
					--mod-primary-note-hue: 40;
					--mod-primary-note-hue-scale: 1.8;
					--mod-primary-note-sat: 66;
					--mod-primary-note-sat-scale: 0;
					--mod-primary-note-lum: 85;
					--mod-primary-note-lum-scale: 0;
					--disabled-note-primary:    #536e5c;
					--disabled-note-secondary:  #395440;
				}
			`,canyon:`
				:root {
					--page-margin: #0a0000;
					--editor-background: #0a0000;
					--playhead: rgba(247, 172, 196, 0.9);
					--primary-text: #f5d6bf;
					--secondary-text: #934050;
					--inverted-text: #290505;
					--text-selection: rgba(255, 208, 68, 0.99);
					--box-selection-fill: #94044870;
					--loop-accent: #ff1e1e;
					--link-accent: #da7b76;
					--ui-widget-background: #533137;
					--ui-widget-focus: #743e4b;
					--pitch-background: #4f3939;
					--tonic: #9e4145;
					--fifth-note: #5b3e6b;
					--white-piano-key: #d89898;
					--black-piano-key: #572b29;
                    --black-piano-key-text: #ffffff;
					--use-color-formula: true;
					--track-editor-bg-pitch: #5e3a41;
					--track-editor-bg-pitch-dim: #281d1c;
					--track-editor-bg-noise: #3a3551;
					--track-editor-bg-noise-dim: #272732;
					--track-editor-bg-mod: #552045;
					--track-editor-bg-mod-dim: #3e1442;
					--multiplicative-mod-slider: #9f6095;
					--overwriting-mod-slider: #b55050;
					--indicator-primary: #f2f764;
					--indicator-secondary: #4f3939;
					--select2-opt-group: #673030;
					--input-box-outline: #443131;
					--mute-button-normal: #d81833;
					--mute-button-mod: #9e2691;
					--mod-label-primary: #5f2b39;
					--mod-label-secondary-text: rgb(158, 66, 122);
					--mod-label-primary-text: #e6caed;
					--pitch-secondary-channel-hue: 0;
					--pitch-secondary-channel-hue-scale: 11.8;
					--pitch-secondary-channel-sat: 73.3;
					--pitch-secondary-channel-sat-scale: 0.1;
					--pitch-secondary-channel-lum: 40;
					--pitch-secondary-channel-lum-scale: 0.05;
					--pitch-primary-channel-hue: 0;
					--pitch-primary-channel-hue-scale: 11.8;
					--pitch-primary-channel-sat: 90;
					--pitch-primary-channel-sat-scale: 0.1;
					--pitch-primary-channel-lum: 67.5;
					--pitch-primary-channel-lum-scale: 0.05;
					--pitch-secondary-note-hue: 0;
					--pitch-secondary-note-hue-scale: 11.8;
					--pitch-secondary-note-sat: 83.9;
					--pitch-secondary-note-sat-scale: 0.1;
					--pitch-secondary-note-lum: 35;
					--pitch-secondary-note-lum-scale: 0.05;
					--pitch-primary-note-hue: 0;
					--pitch-primary-note-hue-scale: 11.8;
					--pitch-primary-note-sat: 100;
					--pitch-primary-note-sat-scale: 0.05;
					--pitch-primary-note-lum: 85.6;
					--pitch-primary-note-lum-scale: 0.025;
					--noise-secondary-channel-hue: 60;
					--noise-secondary-channel-hue-scale: 2;
					--noise-secondary-channel-sat: 25;
					--noise-secondary-channel-sat-scale: 0;
					--noise-secondary-channel-lum: 42;
					--noise-secondary-channel-lum-scale: 0;
					--noise-primary-channel-hue: 60;
					--noise-primary-channel-hue-scale: 2;
					--noise-primary-channel-sat: 33;
					--noise-primary-channel-sat-scale: 0;
					--noise-primary-channel-lum: 63.5;
					--noise-primary-channel-lum-scale: 0;
					--noise-secondary-note-hue: 60;
					--noise-secondary-note-hue-scale: 2;
					--noise-secondary-note-sat: 33.5;
					--noise-secondary-note-sat-scale: 0;
					--noise-secondary-note-lum: 55;
					--noise-secondary-note-lum-scale: 0;
					--noise-primary-note-hue: 60;
					--noise-primary-note-hue-scale: 2;
					--noise-primary-note-sat: 46.5;
					--noise-primary-note-sat-scale: 0;
					--noise-primary-note-lum: 74;
					--noise-primary-note-lum-scale: 0;
					--mod-secondary-channel-hue: 222;
					--mod-secondary-channel-hue-scale: 1.5;
					--mod-secondary-channel-sat: 88;
					--mod-secondary-channel-sat-scale: 0;
					--mod-secondary-channel-lum: 50;
					--mod-secondary-channel-lum-scale: 0;
					--mod-primary-channel-hue: 222;
					--mod-primary-channel-hue-scale: 1.5;
					--mod-primary-channel-sat: 96;
					--mod-primary-channel-sat-scale: 0;
					--mod-primary-channel-lum: 80;
					--mod-primary-channel-lum-scale: 0;
					--mod-secondary-note-hue: 222;
					--mod-secondary-note-hue-scale: 1.5;
					--mod-secondary-note-sat: 92;
					--mod-secondary-note-sat-scale: 0;
					--mod-secondary-note-lum: 54;
					--mod-secondary-note-lum-scale: 0;
					--mod-primary-note-hue: 222;
					--mod-primary-note-hue-scale: 1.5;
					--mod-primary-note-sat: 96;
					--mod-primary-note-sat-scale: 0;
					--mod-primary-note-lum: 75;
					--mod-primary-note-lum-scale: 0;
					--disabled-note-primary:    #515164;
					--disabled-note-secondary:  #2a2a3a;
				}
			`,midnight:`
		:root {
			--page-margin: #000;
			--editor-background: #000;
			--hover-preview: #757575;
			--playhead: #fff;
			--primary-text: #fff;
			--secondary-text: #acacac;
			--inverted-text: #290505;
			--text-selection: rgba(155, 155, 155, 0.99);
			--box-selection-fill: #79797970;
			--loop-accent: #646464;
			--link-accent: #707070;
			--ui-widget-background: #353535;
			--ui-widget-focus: #464646;
			--pitch-background: #222121;
			--tonic: #555955;
			--fifth-note: #1a1818;
			--white-piano-key: #a89e9e;
			--black-piano-key: #2d2424;
            --black-piano-key-text: #ffffff;
			--use-color-formula: true;
			--track-editor-bg-pitch: #373737;
			--track-editor-bg-pitch-dim: #131313;
			--track-editor-bg-noise: #484848;
			--track-editor-bg-noise-dim: #131313;
			--track-editor-bg-mod: #373737;
			--track-editor-bg-mod-dim: #131313;
			--multiplicative-mod-slider: #555;
			--overwriting-mod-slider: #464545;
			--indicator-primary: #e0e0e0;
			--indicator-secondary: #404040;
			--select2-opt-group: #3c3b3b;
			--input-box-outline: #757575;
			--mute-button-normal: #8e8d8d;
			--mute-button-mod: #ddd;
			--mod-label-primary: #262526;
			--mod-label-secondary-text: rgb(227, 222, 225);
			--mod-label-primary-text: #b9b9b9;
			--pitch-secondary-channel-hue: 240;
			--pitch-secondary-channel-hue-scale: 228;
			--pitch-secondary-channel-sat: 73.3;
			--pitch-secondary-channel-sat-scale: 0.1;
			--pitch-secondary-channel-lum: 25;
			--pitch-secondary-channel-lum-scale: 0.05;
			--pitch-primary-channel-hue: 240;
			--pitch-primary-channel-hue-scale: 228;
			--pitch-primary-channel-sat: 80;
			--pitch-primary-channel-sat-scale: 0.1;
			--pitch-primary-channel-lum: 60.5;
			--pitch-primary-channel-lum-scale: 0.05;
			--pitch-secondary-note-hue: 240;
			--pitch-secondary-note-hue-scale: 228;
			--pitch-secondary-note-sat: 73.9;
			--pitch-secondary-note-sat-scale: 0.1;
			--pitch-secondary-note-lum: 32;
			--pitch-secondary-note-lum-scale: 0.05;
			--pitch-primary-note-hue: 240;
			--pitch-primary-note-hue-scale: 228;
			--pitch-primary-note-sat: 90;
			--pitch-primary-note-sat-scale: 0.05;
			--pitch-primary-note-lum: 80.6;
			--pitch-primary-note-lum-scale: 0.025;
			--noise-secondary-channel-hue: 160;
			--noise-secondary-channel-hue-scale: 2;
			--noise-secondary-channel-sat: 25;
			--noise-secondary-channel-sat-scale: 0;
			--noise-secondary-channel-lum: 42;
			--noise-secondary-channel-lum-scale: 0;
			--noise-primary-channel-hue: 160;
			--noise-primary-channel-hue-scale: 2;
			--noise-primary-channel-sat: 33;
			--noise-primary-channel-sat-scale: 0;
			--noise-primary-channel-lum: 63.5;
			--noise-primary-channel-lum-scale: 0;
			--noise-secondary-note-hue: 160;
			--noise-secondary-note-hue-scale: 2;
			--noise-secondary-note-sat: 33.5;
			--noise-secondary-note-sat-scale: 0;
			--noise-secondary-note-lum: 55;
			--noise-secondary-note-lum-scale: 0;
			--noise-primary-note-hue: 160;
			--noise-primary-note-hue-scale: 2;
			--noise-primary-note-sat: 46.5;
			--noise-primary-note-sat-scale: 0;
			--noise-primary-note-lum: 74;
			--noise-primary-note-lum-scale: 0;
			--mod-secondary-channel-hue: 62;
			--mod-secondary-channel-hue-scale: 1.5;
			--mod-secondary-channel-sat: 88;
			--mod-secondary-channel-sat-scale: 0;
			--mod-secondary-channel-lum: 30;
			--mod-secondary-channel-lum-scale: 0;
			--mod-primary-channel-hue: 62;
			--mod-primary-channel-hue-scale: 1.5;
			--mod-primary-channel-sat: 96;
			--mod-primary-channel-sat-scale: 0;
			--mod-primary-channel-lum: 80;
			--mod-primary-channel-lum-scale: 0;
			--mod-secondary-note-hue: 62;
			--mod-secondary-note-hue-scale: 1.5;
			--mod-secondary-note-sat: 92;
			--mod-secondary-note-sat-scale: 0;
			--mod-secondary-note-lum: 34;
			--mod-secondary-note-lum-scale: 0;
			--mod-primary-note-hue: 62;
			--mod-primary-note-hue-scale: 1.5;
			--mod-primary-note-sat: 96;
			--mod-primary-note-sat-scale: 0;
			--mod-primary-note-lum: 75;
			--mod-primary-note-lum-scale: 0;
			--disabled-note-primary:    #66a;
			--disabled-note-secondary:  #447;
		}
	`,"jummbox light":`
				:root {
					-webkit-text-stroke-width: 0.5px;
					--page-margin: #cab1d3;
					--editor-background: #f4f4f4;
					--hover-preview: #2d26a2;
					--playhead: rgb(20 25 153 / 90%);
					--primary-text: #b686c3;
					--secondary-text: #970f38;
					--inverted-text: #fefdff;
					--text-selection: rgb(56 21 8 / 99%);
					--box-selection-fill: rgb(20 203 160 / 61%);
					--loop-accent: #09dc0e;
					--link-accent: #3ee669;
					--ui-widget-background: #0e0a42;
					--ui-widget-focus: #380c42;
					--pitch-background: #8daf96;
					--tonic: #a16fb1;
					--fifth-note: #d08c8c;
					--white-piano-key: #fbffee;
					--black-piano-key: #c9d8e5;
					--white-piano-key-text: #101160;
					--black-piano-key-text: #231b03;
					--use-color-formula: true;
					--track-editor-bg-pitch: #34456a;
					--track-editor-bg-pitch-dim: #88afad;
					--track-editor-bg-noise: #564566;
					--track-editor-bg-noise-dim: #aaa;
					--track-editor-bg-mod: #7f779d;
					--track-editor-bg-mod-dim: #aaa;
					--multiplicative-mod-slider: #807caf;
					--overwriting-mod-slider: #909cdf;
					--indicator-primary: #ae38ff;
					--indicator-secondary: #5c8dbb;
					--select2-opt-group: #581b50;
					--input-box-outline: #6f7074;
					--mute-button-normal: #db1e00;
					--mute-button-mod: #883bf9;
					--mod-label-primary: #525297;
					--mod-label-secondary-text: rgb(197 147 245);
					--mod-label-primary-text: #a3aae9;
                    --pitch-secondary-channel-hue: 26;
                    --pitch-secondary-channel-hue-scale: 214.5;
                    --pitch-secondary-channel-sat: 74.3;
                    --pitch-secondary-channel-sat-scale: -0.1;
					--pitch-secondary-channel-lum: 55;
					--pitch-secondary-channel-lum-scale: -0.05;
					--pitch-primary-channel-hue: 26;
					--pitch-primary-channel-hue-scale: 214.5;
					--pitch-primary-channel-sat: 74;
					--pitch-primary-channel-sat-scale: -0.1;
					--pitch-primary-channel-lum: 65.5;
					--pitch-primary-channel-lum-scale: -0.05;
					--pitch-secondary-note-hue: 26;
					--pitch-secondary-note-hue-scale: 214.5;
					--pitch-secondary-note-sat: 74.9;
					--pitch-secondary-note-sat-scale: -0.1;
					--pitch-secondary-note-lum: 70;
					--pitch-secondary-note-lum-scale: -0.05;
					--pitch-primary-note-hue: 26;
					--pitch-primary-note-hue-scale: 214.5;
					--pitch-primary-note-sat: 85;
					--pitch-primary-note-sat-scale: 0.05;
					--pitch-primary-note-lum: 64.6;
					--pitch-primary-note-lum-scale: -0.025;
					--noise-secondary-channel-hue: 220;
					--noise-secondary-channel-hue-scale: 2;
					--noise-secondary-channel-sat: 25;
					--noise-secondary-channel-sat-scale: 0;
					--noise-secondary-channel-lum: 62;
					--noise-secondary-channel-lum-scale: -0.1;
					--noise-primary-channel-hue: 220;
					--noise-primary-channel-hue-scale: 2;
					--noise-primary-channel-sat: 53;
					--noise-primary-channel-sat-scale: 0;
					--noise-primary-channel-lum: 53.5;
					--noise-primary-channel-lum-scale: -0.1;
					--noise-secondary-note-hue: 220;
					--noise-secondary-note-hue-scale: 2;
					--noise-secondary-note-sat: 58.5;
					--noise-secondary-note-sat-scale: 0;
					--noise-secondary-note-lum: 85;
					--noise-secondary-note-lum-scale: -1;
					--noise-primary-note-hue: 220;
					--noise-primary-note-hue-scale: 2;
					--noise-primary-note-sat: 56.5;
					--noise-primary-note-sat-scale: 0;
					--noise-primary-note-lum: 54;
					--noise-primary-note-lum-scale: -1;
					--mod-secondary-channel-hue: 90;
					--mod-secondary-channel-hue-scale: 1.5;
					--mod-secondary-channel-sat: 88;
					--mod-secondary-channel-sat-scale: 0;
					--mod-secondary-channel-lum: 60;
					--mod-secondary-channel-lum-scale: 0;
					--mod-primary-channel-hue: 90;
					--mod-primary-channel-hue-scale: 1.5;
					--mod-primary-channel-sat: 89;
					--mod-primary-channel-sat-scale: 0;
					--mod-primary-channel-lum: 65;
					--mod-primary-channel-lum-scale: 0;
					--mod-secondary-note-hue: 90;
					--mod-secondary-note-hue-scale: 1.5;
					--mod-secondary-note-sat: 79;
					--mod-secondary-note-sat-scale: 0;
					--mod-secondary-note-lum: 95;
					--mod-secondary-note-lum-scale: 0;
					--mod-primary-note-hue: 90;
					--mod-primary-note-hue-scale: 1.5;
					--mod-primary-note-sat: 79;
					--mod-primary-note-sat-scale: 0;
					--mod-primary-note-lum: 55;
					--mod-primary-note-lum-scale: 0;
					--disabled-note-primary:    #868;
					--disabled-note-secondary:  #767;
				}

				.beepboxEditor button, .beepboxEditor select {
					background-color: var(--secondary-text);
				}

				.select2-selection__rendered {
					background-color: var(--secondary-text);
				}

				.beepboxEditor .piano-button::before {
					display: none;
				}

				.promptContainerBG::before {
					box-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);
				}
			`,"amoled dark":`
				:root {
					--page-margin: #000;
					--editor-background: #020406;
					--playhead: rgba(255, 255, 255, 0.9);
					--secondary-text: #8e88ce;
					--box-selection-fill: #044b94;
					--loop-accent: #ad38f9;
					--link-accent: #bd25ff;
					--ui-widget-background: #080d1f;
					--ui-widget-focus: #060f2d;
					--pitch-background: #02060b;
					--tonic: #00113a;
					--fifth-note: #1b0019;
					--white-piano-key: #02040c;
					--black-piano-key: #02040c;
                    --white-piano-key-text: #fff;
					--use-color-formula: true;
					--track-editor-bg-pitch: #050829;
					--track-editor-bg-pitch-dim: #010213;
					--track-editor-bg-noise: #051529;
					--track-editor-bg-noise-dim: #010b13;
					--track-editor-bg-mod: #150529;
					--track-editor-bg-mod-dim: #0a0113;
					--multiplicative-mod-slider: #2b409c;
					--overwriting-mod-slider: #6850b5;
					--indicator-primary: #7f3bec;
					--indicator-secondary: #213888;
					--select2-opt-group: #1d123c;
					--input-box-outline: #1b1e48;
					--mute-button-normal: #d234b0;
					--mute-button-mod: #263d98;
					--mod-label-primary: #090910;
					--mod-label-secondary-text: rgb(73, 69, 214);
					--mod-label-primary-text: white;
					--pitch-secondary-channel-hue: 183;
					--pitch-secondary-channel-hue-scale: 158.7;
					--pitch-secondary-channel-sat: 83.3;
					--pitch-secondary-channel-sat-scale: 0.1;
					--pitch-secondary-channel-lum: 40;
					--pitch-secondary-channel-lum-scale: 0.05;
					--pitch-primary-channel-hue: 183;
					--pitch-primary-channel-hue-scale: 158.7;
					--pitch-primary-channel-sat: 100;
					--pitch-primary-channel-sat-scale: 0.1;
					--pitch-primary-channel-lum: 67.5;
					--pitch-primary-channel-lum-scale: 0.05;
					--pitch-secondary-note-hue: 183;
					--pitch-secondary-note-hue-scale: 158.7;
					--pitch-secondary-note-sat: 93.9;
					--pitch-secondary-note-sat-scale: 0.1;
					--pitch-secondary-note-lum: 25;
					--pitch-secondary-note-lum-scale: 0.05;
					--pitch-primary-note-hue: 183;
					--pitch-primary-note-hue-scale: 158.7;
					--pitch-primary-note-sat: 100;
					--pitch-primary-note-sat-scale: 0.05;
					--pitch-primary-note-lum: 85.6;
					--pitch-primary-note-lum-scale: 0.025;
					--noise-secondary-channel-hue: 30;
					--noise-secondary-channel-hue-scale: 2;
					--noise-secondary-channel-sat: 25;
					--noise-secondary-channel-sat-scale: 0;
					--noise-secondary-channel-lum: 42;
					--noise-secondary-channel-lum-scale: 0;
					--noise-primary-channel-hue: 30;
					--noise-primary-channel-hue-scale: 2;
					--noise-primary-channel-sat: 33;
					--noise-primary-channel-sat-scale: 0;
					--noise-primary-channel-lum: 63.5;
					--noise-primary-channel-lum-scale: 0;
					--noise-secondary-note-hue: 30;
					--noise-secondary-note-hue-scale: 2;
					--noise-secondary-note-sat: 33.5;
					--noise-secondary-note-sat-scale: 0;
					--noise-secondary-note-lum: 55;
					--noise-secondary-note-lum-scale: 0;
					--noise-primary-note-hue: 30;
					--noise-primary-note-hue-scale: 2;
					--noise-primary-note-sat: 46.5;
					--noise-primary-note-sat-scale: 0;
					--noise-primary-note-lum: 74;
					--noise-primary-note-lum-scale: 0;
					--mod-secondary-channel-hue: 0;
					--mod-secondary-channel-hue-scale: 1.5;
					--mod-secondary-channel-sat: 88;
					--mod-secondary-channel-sat-scale: 0;
					--mod-secondary-channel-lum: 50;
					--mod-secondary-channel-lum-scale: 0;
					--mod-primary-channel-hue: 0;
					--mod-primary-channel-hue-scale: 1.5;
					--mod-primary-channel-sat: 96;
					--mod-primary-channel-sat-scale: 0;
					--mod-primary-channel-lum: 80;
					--mod-primary-channel-lum-scale: 0;
					--mod-secondary-note-hue: 0;
					--mod-secondary-note-hue-scale: 1.5;
					--mod-secondary-note-sat: 92;
					--mod-secondary-note-sat-scale: 0;
					--mod-secondary-note-lum: 45;
					--mod-secondary-note-lum-scale: 0;
					--mod-primary-note-hue: 0;
					--mod-primary-note-hue-scale: 1.5;
					--mod-primary-note-sat: 96;
					--mod-primary-note-sat-scale: 0;
					--mod-primary-note-lum: 85;
					--mod-primary-note-lum-scale: 0;
					--disabled-note-primary: #91879f;
					--disabled-note-secondary: #6a677a;
				}

			`,beachcombing:`
			:root {
			  --page-margin: #010121;
  --editor-background: #020222;
  --hover-preview: #f3ffff;
  --playhead: #fff;
  --primary-text: #c1f1ff;
  --secondary-text: #546775;
  --box-selection-fill: #3e0028;
  --loop-accent: #5e68fffc;
  --link-accent: #ff3ad5fc;
  --ui-widget-background: #1f2b52;
  --ui-widget-focus: #384e91;
  --pitch-background: #2c3155;
  --tonic: #935175;
  --fifth-note: #1f569f;
  --white-piano-key: #f3f2ff;
  --black-piano-key: #4b4471;
  --white-piano-key-text: #4b4471;
  --track-editor-bg-pitch: #34406c;
  --track-editor-bg-pitch-dim: #121931;
  --track-editor-bg-noise: #562e3b;
  --track-editor-bg-noise-dim: #161313;
  --track-editor-bg-mod: #372e66;
  --track-editor-bg-mod-dim: #2a1640;
  --multiplicative-mod-slider: #606c9f;
  --overwriting-mod-slider: #6850b5;
  --indicator-primary: #ff8bd1;
  --indicator-secondary: #393e4f;
  --select2-opt-group: #5d576f;
  --input-box-outline: #222;
  --mute-button-normal: #7ce1ff;
  --mute-button-mod: #db519d;
  --pitch1-secondary-channel: #329b70;
  --pitch1-primary-channel: #53ffb8;
  --pitch1-secondary-note: #4cb98c;
  --pitch1-primary-note: #98ffd4;
  --pitch2-secondary-channel: #b08e4d;
  --pitch2-primary-channel: #ffe185;
  --pitch2-secondary-note: #91782e;
  --pitch2-primary-note: #ffd968;
  --pitch3-secondary-channel: #018e8e;
  --pitch3-primary-channel: #3de4ff;
  --pitch3-secondary-note: #24b7b7;
  --pitch3-primary-note: #a7ffff;
  --pitch4-secondary-channel: #792354;
  --pitch4-primary-channel: #ff68bd;
  --pitch4-secondary-note: #a73c78;
  --pitch4-primary-note: #ff98d2;
  --pitch5-secondary-channel: #185aab;
  --pitch5-primary-channel: #6493ff;
  --pitch5-secondary-note: #3e99d9;
  --pitch5-primary-note: #b3e3ff;
  --pitch6-secondary-channel: #953C47;
  --pitch6-primary-channel: #FF7888;
  --pitch6-secondary-note: #DF4F60;
  --pitch6-primary-note: #FFB2BB;
  --pitch7-secondary-channel: #4f007d;
  --pitch7-primary-channel: #a54cd9;
  --pitch7-secondary-note: #732b9d;
  --pitch7-primary-note: #d386ff;
  --pitch8-secondary-channel: #323c99;
  --pitch8-primary-channel: #1b61ff;
  --pitch8-secondary-note: #1848b3;
  --pitch8-primary-note: #6f9bff;
  --pitch9-secondary-channel: #1F605A;
  --pitch9-primary-channel: #69FFEA;
  --pitch9-secondary-note: #178076;
  --pitch10-secondary-channel: #6D438C;
  --pitch10-secondary-note: #8040B0;
  --noise1-secondary-channel: #635070;
  --noise1-primary-channel: #9071db;
  --noise1-secondary-note: #915dc1;
  --noise1-primary-note: #c5a5ff;
  --noise2-secondary-channel: #993367;
  --noise2-primary-channel: #dd777c;
  --noise2-secondary-note: #cc6695;
  --noise2-primary-note: #f0bbd1;
  --noise3-secondary-channel: #4a8c8f;
  --noise3-primary-channel: #77c5dd;
  --noise3-secondary-note: #6fb4cf;
  --noise3-primary-note: #bbf2ff;
  --noise4-secondary-channel: #8e3e7d;
  --noise4-primary-channel: #c682d2;
  --noise4-secondary-note: #b871c1;
  --noise4-primary-note: #ffb8f0;
  --noise5-secondary-channel: #785e37;
  --noise5-primary-channel: #bb9d77;
  --noise5-secondary-note: #aa8c66;
  --noise5-primary-note: #e2d1b2;
  --mod1-secondary-channel: #4e8397;
  --mod1-primary-channel: #92e6f3;
  --mod1-secondary-note: #76b9d9;
  --mod1-primary-note: #cde3ff;
  --mod2-secondary-channel: #ad5774;
  --mod2-primary-channel: #eba4ae;
  --mod2-secondary-note: #c9719b;
  --mod2-primary-note: #fdcee7;
  --mod3-secondary-channel: #6f579f;
  --mod3-primary-channel: #b192f7;
  --mod3-secondary-note: #7c3fc8;
  --mod4-secondary-channel: #a88a36;
  --mod4-primary-channel: #bec825;
  --mod4-secondary-note: #aecb57;
  --mod4-primary-note: #dee9bd;
  --mod-label-primary: #2c2c56;
  --mod-label-secondary-text: rgb(71,69,147);
  --mod-label-primary-text: white;
  --disabled-note-primary: #91879f;
  --disabled-note-secondary: #6a677a;


			}
		`,roe:`
			:root {
			--page-margin: #050000;
			--editor-background: #050000;
			--primary-text: #b8cee0;
			--secondary-text: #cb3434;
			--text-selection: rgb(255 68 68 / 99%);
			--box-selection-fill: rgb(255 0 0 / 30%);
			--loop-accent: #7744FF;
			--link-accent: #FF2A2A;
			--ui-widget-background: #1a2642;
			--ui-widget-focus: #2c3f6d;
			--pitch-background: #15111a;
			--tonic: #1b3041;
			--fifth-note: #381818;
			--white-piano-key: #cdcdcd;
			--black-piano-key: #232323;
			--track-editor-bg-pitch: #302938;
			--track-editor-bg-pitch-dim: #211c26;
			--track-editor-bg-noise: #261f42;
			--track-editor-bg-noise-dim: #1a152d;
			--track-editor-bg-mod: #183049;
			--track-editor-bg-mod-dim: #102132;
			--multiplicative-mod-slider: #344a7f;
			--overwriting-mod-slider: #344a7f;
			--indicator-primary: #FF2A2A;
			--indicator-secondary: #800000;
			--select2-opt-group: #141e34;
			--input-box-outline: #141e34;
			--mute-button-normal: #299eff;
			--mute-button-mod: #165a93;
			--pitch1-secondary-channel: #273c90;
			--pitch1-primary-channel: #476BFF;
			--pitch1-secondary-note: #273c90;
			--pitch1-primary-note: #476BFF;
			--pitch2-secondary-channel: #3a3898;
			--pitch2-primary-channel: #625FFB;
			--pitch2-secondary-note: #3a3898;
			--pitch2-primary-note: #625FFB;
			--pitch3-secondary-channel: #542780;
			--pitch3-primary-channel: #9C49EC;
			--pitch3-secondary-note: #542780;
			--pitch3-primary-note: #9C49EC;
			--pitch4-secondary-channel: #84225d;
			--pitch4-primary-channel: #fd3fb1;
			--pitch4-secondary-note: #84225d;
			--pitch4-primary-note: #fd3fb1;
			--pitch5-secondary-channel: #8d2323;
			--pitch5-primary-channel: #ff3f3f;
			--pitch5-secondary-note: #8d2323;
			--pitch5-primary-note: #ff3f3f;
			--pitch6-secondary-channel: #84225d;
			--pitch6-primary-channel: #fd3fb1;
			--pitch6-secondary-note: #84225d;
			--pitch6-primary-note: #fd3fb1;
			--pitch7-secondary-channel: #542780;
			--pitch7-primary-channel: #9C49EC;
			--pitch7-secondary-note: #542780;
			--pitch7-primary-note: #9C49EC;
			--pitch8-secondary-channel: #3a3898;
			--pitch8-primary-channel: #625FFB;
			--pitch8-secondary-note: #3a3898;
			--pitch8-primary-note: #625FFB;
			--pitch9-secondary-channel: #273c90;
			--pitch9-primary-channel: #476BFF;
			--pitch9-secondary-note: #273c90;
			--pitch9-primary-note: #476BFF;
			--pitch10-secondary-channel: #165a93;
			--pitch10-primary-channel: #299EFF;
			--pitch10-secondary-note: #165a93;
			--pitch10-primary-note: #299EFF;
			--noise1-secondary-channel: #4281FF;
			--noise1-primary-channel: #96b9ff;
			--noise1-secondary-note: #4281FF;
			--noise1-primary-note: #96b9ff;
			--noise2-secondary-channel: #7347FF;
			--noise2-primary-channel: #c3b0ff;
			--noise2-secondary-note: #7347FF;
			--noise2-primary-note: #c3b0ff;
			--noise3-secondary-channel: #9F3CBF;
			--noise3-primary-channel: #e29cf9;
			--noise3-secondary-note: #9F3CBF;
			--noise3-primary-note: #e29cf9;
			--noise4-secondary-channel: #D3326F;
			--noise4-primary-channel: #fb9bbf;
			--noise4-secondary-note: #D3326F;
			--noise4-primary-note: #fb9bbf;
			--noise5-secondary-channel: #FF2A2A;
			--noise5-primary-channel: #ffa2a2;
			--noise5-secondary-note: #FF2A2A;
			--noise5-primary-note: #ffa2a2;
			--mod1-secondary-channel: #47587a;
			--mod1-primary-channel: #96b9ff;
			--mod1-secondary-note: #47587a;
			--mod1-primary-note: #96b9ff;
			--mod2-secondary-channel: #716791;
			--mod2-primary-channel: #c3b0ff;
			--mod2-secondary-note: #716791;
			--mod2-primary-note: #c3b0ff;
			--mod3-secondary-channel: #6f4c7b;
			--mod3-primary-channel: #e29cf9;
			--mod3-secondary-note: #6f4c7b;
			--mod3-primary-note: #e29cf9;
			--mod4-secondary-channel: #9e6279;
			--mod4-primary-channel: #fb9bbf;
			--mod4-secondary-note: #9e6279;
			--mod4-primary-note: #fb9bbf;
			--mod-label-primary: #15111a;
			--mod-label-secondary-text: #cb3434;
			--mod-label-primary-text: white;
			--disabled-note-primary: #c9c9c9;
			--disabled-note-secondary: #616161;
		}`,moonlight:`
			:root {
			--page-margin: #020514;
			--editor-background: #020514;
			--primary-text: #D4DCE9;
			--secondary-text: #3E87DA;
			--text-selection: #03599bd9;
			--box-selection-fill: hsl(206deg 66% 41% / 85%);
			--loop-accent: #639BD6;
			--link-accent: #A8C6E8;
			--ui-widget-background: #1e2940;
			--ui-widget-focus: #324b81;
			--pitch-background: #223849;
			--tonic: #33536c;
			--fifth-note: hsl(206deg 36% 16%);
			--white-piano-key: #c1bfe9;
			--black-piano-key: #454354;
			--track-editor-bg-pitch: #25568d80;
			--track-editor-bg-pitch-dim: #10253c80;
			--track-editor-bg-noise: #25568d80;
			--track-editor-bg-noise-dim: #10253c80;
			--track-editor-bg-mod: #25568d80;
			--track-editor-bg-mod-dim: #10253c80;
			--multiplicative-mod-slider: #0476cd;
			--overwriting-mod-slider: #035899;
			--indicator-primary: #57a1f4;
			--indicator-secondary: #2e5684;
			--select2-opt-group: #24355c;
			--input-box-outline: #141e34;
			--mute-button-normal: #6ebffc;
			--mute-button-mod: #0a92fa;
			--pitch1-secondary-channel: #47425c;
			--pitch1-primary-channel: #918bac;
			--pitch1-secondary-note: #6b6489;
			--pitch1-primary-note: #a8a3bf;
			--pitch2-secondary-channel: #626493;
			--pitch2-primary-channel: #bdbed3;
			--pitch2-secondary-note: #626493;
			--pitch2-primary-note: #bdbed3;
			--pitch3-secondary-channel: #6e89b4;
			--pitch3-primary-channel: #d4dce9;
			--pitch3-secondary-note: #6e89b4;
			--pitch3-primary-note: #d4dce9;
			--pitch4-secondary-channel: #4c77a9;
			--pitch4-primary-channel: #a8c6e8;
			--pitch4-secondary-note: #4c77a9;
			--pitch4-primary-note: #a8c6e8;
			--pitch5-secondary-channel: #314e6d;
			--pitch5-primary-channel: #639bd6;
			--pitch5-secondary-note: #46698f;
			--pitch5-primary-note: #639bd6;
			--pitch6-secondary-channel: #143d6b;
			--pitch6-primary-channel: #3e87da;
			--pitch6-secondary-note: #143d6b;
			--pitch6-primary-note: #3e87da;
			--pitch7-secondary-channel: #314e6d;
			--pitch7-primary-channel: #639bd6;
			--pitch7-secondary-note: #314e6d;
			--pitch7-primary-note: #639bd6;
			--pitch8-secondary-channel: #4c77a9;
			--pitch8-primary-channel: #a8c6e8;
			--pitch8-secondary-note: #4c77a9;
			--pitch8-primary-note: #a8c6e8;
			--pitch9-secondary-channel: #6e89b4;
			--pitch9-primary-channel: #d4dce9;
			--pitch9-secondary-note: #6e89b4;
			--pitch9-primary-note: #d4dce9;
			--pitch10-secondary-channel: #626493;
			--pitch10-primary-channel: #bdbed3;
			--pitch10-secondary-note: #626493;
			--pitch10-primary-note: #bdbed3;
			--noise1-secondary-channel: #4b4a55;
			--noise1-primary-channel: #9795a3;
			--noise1-secondary-note: #4b4a55;
			--noise1-primary-note: #9795a3;
			--noise2-secondary-channel: #858e9d;
			--noise2-primary-channel: #d7dce5;
			--noise2-secondary-note: #858e9d;
			--noise2-primary-note: #d7dce5;
			--noise3-secondary-channel: #394e65;
			--noise3-primary-channel: #809bb7;
			--noise3-secondary-note: #394e65;
			--noise3-primary-note: #809bb7;
			--noise4-secondary-channel: #37577b;
			--noise4-primary-channel: #6189b8;
			--noise4-secondary-note: #37577b;
			--noise4-primary-note: #6189b8;
			--noise5-secondary-channel: #223849;
			--noise5-primary-channel: #5588af;
			--noise5-secondary-note: #223849;
			--noise5-primary-note: #5588af;
			--mod1-secondary-channel: #3e336c;
			--mod1-primary-channel: #6d60a4;
			--mod1-secondary-note: #3e336c;
			--mod1-primary-note: #6d60a4;
			--mod2-secondary-channel: #716791;
			--mod2-primary-channel: #bdbed3;
			--mod2-secondary-note: #716791;
			--mod2-primary-note: #bdbed3;
			--mod3-secondary-channel: #6b91bd;
			--mod3-primary-channel: #4b8fdd;
			--mod3-secondary-note: #597ca7;
			--mod3-primary-note: #7eade3;
			--mod4-secondary-channel: #14559f;
			--mod4-primary-channel: #3386e6;
			--mod4-secondary-note: #14559f;
			--mod4-primary-note: #3386e6;
			--mod-label-primary: #1e2940;
			--mod-label-secondary-text: #748ebe;
			--mod-label-primary-text: white;
			--disabled-note-primary: #828282;
			--disabled-note-secondary: #4f4f4f;
			}`,autumn:`
		:root {
			--page-margin: #060304;
			--editor-background: #060304;
			--text-selection: rgb(115 80 76);
			--box-selection-fill: rgb(174 73 81 / 45%);
			--loop-accent: #834A69;
			--ui-widget-background: #2a2523;
			--ui-widget-focus: #4e4c44;
			--pitch-background: #121212;
			--tonic: #4f4f4f;
			--fifth-note: #222;
			--white-piano-key: #b59b9b;
			--black-piano-key: #231e1e;
			--track-editor-bg-pitch: #352f38;
			--track-editor-bg-pitch-dim: #232025;
			--track-editor-bg-noise: #3c3029;
			--track-editor-bg-noise-dim: #251d19;
			--track-editor-bg-mod: #202623;
			--track-editor-bg-mod-dim: #131715;
			--multiplicative-mod-slider: #D9D16E;
			--overwriting-mod-slider: #2D826F;
			--indicator-primary: #D9D16E;
			--indicator-secondary: #444226;
			--select2-opt-group: #20191c;
			--input-box-outline: #20191c;
			--mute-button-normal: var(--pitch2-primary-channel);
			--mute-button-mod: var(--pitch4-primary-channel);
			--pitch1-secondary-channel: #704a34;
			--pitch1-primary-channel: #D9895A;
			--pitch1-secondary-note: #704a34;
			--pitch1-primary-note: #D9895A;
			--pitch2-secondary-channel: #5f3538;
			--pitch2-primary-channel: #AE4951;
			--pitch2-secondary-note: #5f3538;
			--pitch2-primary-note: #AE4951;
			--pitch3-secondary-channel: #5c4336;
			--pitch3-primary-channel: #CA9A81;
			--pitch3-secondary-note: #5c4336;
			--pitch3-primary-note: #CA9A81;
			--pitch4-secondary-channel: #1d3143;
			--pitch4-primary-channel: #386995;
			--pitch4-secondary-note: #1d3143;
			--pitch4-primary-note: #386995;
			--pitch5-secondary-channel: #9c8a58;
			--pitch5-primary-channel: #D9D16E;
			--pitch5-secondary-note: #7c783f;
			--pitch5-primary-note: #D9D16E;
			--pitch6-secondary-channel: #886562;
			--pitch6-primary-channel: #D3A9A5;
			--pitch6-secondary-note: #886562;
			--pitch6-primary-note: #D3A9A5;
			--pitch7-secondary-channel: #1c3f37;
			--pitch7-primary-channel: #2D826F;
			--pitch7-secondary-note: #1c3f37;
			--pitch7-primary-note: #2D826F;
			--pitch8-secondary-channel: #442e2d;
			--pitch8-primary-channel: #815150;
			--pitch8-secondary-note: #442e2d;
			--pitch8-primary-note: #815150;
			--pitch9-secondary-channel: #8e6f60;
			--pitch9-primary-channel: #E5B8A1;
			--pitch9-secondary-note: #8e6f60;
			--pitch9-primary-note: #E5B8A1;
			--pitch10-secondary-channel: #4f3142;
			--pitch10-primary-channel: #834A69;
			--pitch10-secondary-note: #4f3142;
			--pitch10-primary-note: #834A69;
			--noise1-secondary-channel: #6b5346;
			--noise1-primary-channel: #b99c89;
			--noise1-secondary-note: #6b5346;
			--noise1-primary-note: #F0D0BB;
			--noise2-secondary-channel: #4a3839;
			--noise2-primary-channel: #9c6b6e;
			--noise2-secondary-note: #4a3839;
			--noise2-primary-note: #c18b8f;
			--noise3-secondary-channel: #2d3c4a;
			--noise3-primary-channel: #536e86;
			--noise3-secondary-note: #2d3c4a;
			--noise3-primary-note: #8fa8c0;
			--noise4-secondary-channel: #273f3a;
			--noise4-primary-channel: #4e8377;
			--noise4-secondary-note: #273f3a;
			--noise4-primary-note: #87baae;
			--noise5-secondary-channel: #372730;
			--noise5-primary-channel: #7f5e70;
			--noise5-secondary-note: #372730;
			--noise5-primary-note: #cc96b3;
			--mod1-secondary-channel: #783f1f;
			--mod1-primary-channel: #dc6d2c;
			--mod1-secondary-note: #783f1f;
			--mod1-primary-note: #dc6d2c;
			--mod2-secondary-channel: #0b3153;
			--mod2-primary-channel: #1464ac;
			--mod2-secondary-note: #0b3153;
			--mod2-primary-note: #1464ac;
			--mod3-secondary-channel: #075040;
			--mod3-primary-channel: #08a17f;
			--mod3-secondary-note: #075040;
			--mod3-primary-note: #08a17f;
			--mod4-secondary-channel: #631640;
			--mod4-primary-channel: #b4186d;
			--mod4-secondary-note: #631640;
			--mod4-primary-note: #b4186d;
			--mod-label-primary: #000;
			--mod-label-secondary-text: #707070;
			--mod-label-primary-text: white;
			--disabled-note-primary: #5d5d5d;
			--disabled-note-secondary: #292929;
		}`,fruit:`
		:root {
			--page-margin: #040507;
			--editor-background: #040507;
			--text-selection: rgb(115 103 76);
			--box-selection-fill: rgb(174 109 73 / 45%);
			--loop-accent: #EC897D;
			--link-accent: #FDE484;
			--ui-widget-background: #22222c;
			--ui-widget-focus: #39394c;
			--pitch-background: #101010;
			--tonic: #2c2d34;
			--fifth-note: #191a20;
			--white-piano-key: #bbbaba;
			--black-piano-key: #2d2d2d;
			--track-editor-bg-pitch: #2b2d40;
			--track-editor-bg-pitch-dim: #191a25;
			--track-editor-bg-noise: #3c3644;
			--track-editor-bg-noise-dim: #26222b;
			--track-editor-bg-mod: #322a2a;
			--track-editor-bg-mod-dim: #191515;
			--multiplicative-mod-slider: #977da9;
			--overwriting-mod-slider: #798FA7;
			--indicator-primary: #EAAC9D;
			--indicator-secondary: #5e413a;
			--select2-opt-group: #191920;
			--input-box-outline: #191920;
			--mute-button-normal: #798FA7;
			--mute-button-mod: #354457;
			--pitch1-secondary-channel: #91655a;
			--pitch1-primary-channel: #EAAC9D;
			--pitch1-secondary-note: #91655a;
			--pitch1-primary-note: #EAAC9D;
			--pitch2-secondary-channel: #8f6513;
			--pitch2-primary-channel: #FFAF12;
			--pitch2-secondary-note: #8f6513;
			--pitch2-primary-note: #FFAF12;
			--pitch3-secondary-channel: #212f46;
			--pitch3-primary-channel: #34558B;
			--pitch3-secondary-note: #212f46;
			--pitch3-primary-note: #34558B;
			--pitch4-secondary-channel: #2e6b5b;
			--pitch4-primary-channel: #4EC5A7;
			--pitch4-secondary-note: #2e6b5b;
			--pitch4-primary-note: #4EC5A7;
			--pitch5-secondary-channel: #555D46;
			--pitch5-primary-channel: #aabf84;
			--pitch5-secondary-note: #555D46;
			--pitch5-primary-note: #aabf84;
			--pitch6-secondary-channel: #A2553B;
			--pitch6-primary-channel: #e59a81;
			--pitch6-secondary-note: #A2553B;
			--pitch6-primary-note: #e59a81;
			--pitch7-secondary-channel: #7b4021;
			--pitch7-primary-channel: #FE813E;
			--pitch7-secondary-note: #7b4021;
			--pitch7-primary-note: #FE813E;
			--pitch8-secondary-channel: #847753;
			--pitch8-primary-channel: #EFDAA3;
			--pitch8-secondary-note: #847753;
			--pitch8-primary-note: #EFDAA3;
			--pitch9-secondary-channel: #2c3642;
			--pitch9-primary-channel: #798FA7;
			--pitch9-secondary-note: #2c3642;
			--pitch9-primary-note: #798FA7;
			--pitch10-secondary-channel: #0d4453;
			--pitch10-primary-channel: #107895;
			--pitch10-secondary-note: #0d4453;
			--pitch10-primary-note: #107895;
			--noise1-secondary-channel: #71617C;
			--noise1-primary-channel: #977da9;
			--noise1-secondary-note: #71617C;
			--noise1-primary-note: #977da9;
			--noise2-secondary-channel: #3B3D4A;
			--noise2-primary-channel: #707591;
			--noise2-secondary-note: #3B3D4A;
			--noise2-primary-note: #707591;
			--noise3-secondary-channel: #625f5e;
			--noise3-primary-channel: #A19D9C;
			--noise3-secondary-note: #625f5e;
			--noise3-primary-note: #A19D9C;
			--noise4-secondary-channel: #ab847b;
			--noise4-primary-channel: #EAAC9D;
			--noise4-secondary-note: #ab847b;
			--noise4-primary-note: #EAAC9D;
			--noise5-secondary-channel: #B49D74;
			--noise5-primary-channel: #dec69b;
			--noise5-secondary-note: #B49D74;
			--noise5-primary-note: #dec69b;
			--mod1-secondary-channel: #722124;
			--mod1-primary-channel: #D13A41;
			--mod1-secondary-note: #722124;
			--mod1-primary-note: #D13A41;
			--mod2-secondary-channel: #213657;
			--mod2-primary-channel: #34558B;
			--mod2-secondary-note: #213657;
			--mod2-primary-note: #34558B;
			--mod3-secondary-channel: #555D46;
			--mod3-primary-channel: #848f6d;
			--mod3-secondary-note: #555D46;
			--mod3-primary-note: #848f6d;
			--mod4-secondary-channel: #71617C;
			--mod4-primary-channel: #a68ab9;
			--mod4-secondary-note: #71617C;
			--mod4-primary-note: #a68ab9;
			--mod-label-primary: #282828;
			--mod-label-secondary-text: #707070;
			--mod-label-primary-text: white;
			--disabled-note-primary: #5d5d5d;
			--disabled-note-secondary: #292929;
		}`,sunset:`
		:root {
			--page-margin: #040300;
			--editor-background: #040300;
			--text-selection: rgb(94 0 157);
			--box-selection-fill: rgb(174 173 73 / 45%);
			--loop-accent: #EC897D;
			--link-accent: #FDE484;
			--ui-widget-background: #241b24;
			--ui-widget-focus: #3a2e39;
			--pitch-background: #141414;
			--tonic: #2C212B;
			--fifth-note: #2E2A15;
			--white-piano-key: #bbbaba;
			--black-piano-key: #2d2d2d;
			--track-editor-bg-pitch: #2d2e42;
			--track-editor-bg-pitch-dim: #191a25;
			--track-editor-bg-noise: #393340;
			--track-editor-bg-noise-dim: #26222b;
			--track-editor-bg-mod: #232a2c;
			--track-editor-bg-mod-dim: #151819;
			--multiplicative-mod-slider: #977da9;
			--overwriting-mod-slider: #798FA7;
			--indicator-primary: #F28891;
			--indicator-secondary: #601d23;
			--select2-opt-group: #151015;
			--input-box-outline: #151015;
			--mute-button-normal: #E4739D;
			--mute-button-mod: #9650A6;
			--pitch1-secondary-channel: #7F7721;
			--pitch1-primary-channel: #F3E79A;
			--pitch1-secondary-note: #7F7721;
			--pitch1-primary-note: #F3E79A;
			--pitch2-secondary-channel: #785E20;
			--pitch2-primary-channel: #F7D086;
			--pitch2-secondary-note: #785E20;
			--pitch2-primary-note: #F7D086;
			--pitch3-secondary-channel: #6E4219;
			--pitch3-primary-channel: #F9B881;
			--pitch3-secondary-note: #6E4219;
			--pitch3-primary-note: #F9B881;
			--pitch4-secondary-channel: #79351F;
			--pitch4-primary-channel: #F7A086;
			--pitch4-secondary-note: #79351F;
			--pitch4-primary-note: #F7A086;
			--pitch5-secondary-channel: #81272F;
			--pitch5-primary-channel: #F28891;
			--pitch5-secondary-note: #81272F;
			--pitch5-primary-note: #F28891;
			--pitch6-secondary-channel: #8F224D;
			--pitch6-primary-channel: #E4739D;
			--pitch6-secondary-note: #8F224D;
			--pitch6-primary-note: #E4739D;
			--pitch7-secondary-channel: #611548;
			--pitch7-primary-channel: #CF63A6;
			--pitch7-secondary-note: #611548;
			--pitch7-primary-note: #CF63A6;
			--pitch8-secondary-channel: #561253;
			--pitch8-primary-channel: #B557A9;
			--pitch8-secondary-note: #4D104A;
			--pitch8-primary-note: #B557A9;
			--pitch9-secondary-channel: #4c1260;
			--pitch9-primary-channel: #9650A6;
			--pitch9-secondary-note: #3C0F4C;
			--pitch9-primary-note: #9650A6;
			--pitch10-secondary-channel: #3e1d78;
			--pitch10-primary-channel: #704D9E;
			--pitch10-secondary-note: #27124C;
			--pitch10-primary-note: #704D9E;
			--noise1-secondary-channel: #A7A578;
			--noise1-primary-channel: #EFE9AC;
			--noise1-secondary-note: #A7A578;
			--noise1-primary-note: #EFE9AC;
			--noise2-secondary-channel: #947A5F;
			--noise2-primary-channel: #FBCEA8;
			--noise2-secondary-note: #947A5F;
			--noise2-primary-note: #FBCEA8;
			--noise3-secondary-channel: #A3635D;
			--noise3-primary-channel: #F4A5AB;
			--noise3-secondary-note: #A3635D;
			--noise3-primary-note: #F4A5AB;
			--noise4-secondary-channel: #724D60;
			--noise4-primary-channel: #CD90B6;
			--noise4-secondary-note: #724D60;
			--noise4-primary-note: #CD90B6;
			--noise5-secondary-channel: #503F5C;
			--noise5-primary-channel: #7C6A9E;
			--noise5-secondary-note: #503F5C;
			--noise5-primary-note: #7C6A9E;
			--mod1-secondary-channel: #371883;
			--mod1-primary-channel: #6416C6;
			--mod1-secondary-note: #1F0A52;
			--mod1-primary-note: #6416C6;
			--mod2-secondary-channel: #690645;
			--mod2-primary-channel: #E52FA2;
			--mod2-secondary-note: #690645;
			--mod2-primary-note: #E52FA2;
			--mod3-secondary-channel: #943618;
			--mod3-primary-channel: #eb5b2c;
			--mod3-secondary-note: #943618;
			--mod3-primary-note: #eb5b2c;
			--mod4-secondary-channel: #928409;
			--mod4-primary-channel: #ecd50e;
			--mod4-secondary-note: #928409;
			--mod4-primary-note: #ecd50e;
			--mod-label-primary: #282828;
			--mod-label-secondary-text: #707070;
			--mod-label-primary-text: white;
			--disabled-note-primary: #5d5d5d;
			--disabled-note-secondary: #292929;
		}`,toxic:`
		:root {
			--page-margin: #010003;
			--editor-background: #010003;
			--text-selection: rgb(147 195 0);
			--box-selection-fill: rgb(145 174 73 / 49%);
			--loop-accent: #BCDE2C;
			--link-accent: #edff9f;
			--ui-widget-background: #261e2e;
			--ui-widget-focus: #322042;
			--pitch-background: #141c15;
			--tonic: #282c21;
			--fifth-note: #18221a;
			--white-piano-key: #e3e3e3;
			--black-piano-key: #2d2d2d;
			--track-editor-bg-pitch: #38293e;
			--track-editor-bg-pitch-dim: #251c29;
			--track-editor-bg-noise: #2c304c;
			--track-editor-bg-noise-dim: #191b2b;
			--track-editor-bg-mod: #311b32;
			--track-editor-bg-mod-dim: #1d101e;
			--multiplicative-mod-slider: #977da9;
			--overwriting-mod-slider: #798FA7;
			--indicator-primary: #aae9ff;
			--indicator-secondary: #253e46;
			--select2-opt-group: #110d15;
			--input-box-outline: #110d15;
			--mute-button-normal: #8f5ad1;
			--mute-button-mod: #482574;
			--pitch1-secondary-channel: #6b7f19;
			--pitch1-primary-channel: #BCDE2C;
			--pitch1-secondary-note: #6b7f19;
			--pitch1-primary-note: #BCDE2C;
			--pitch2-secondary-channel: #497a31;
			--pitch2-primary-channel: #7BD152;
			--pitch2-secondary-note: #497a31;
			--pitch2-primary-note: #7BD152;
			--pitch3-secondary-channel: #286b40;
			--pitch3-primary-channel: #45BE71;
			--pitch3-secondary-note: #286b40;
			--pitch3-primary-note: #45BE71;
			--pitch4-secondary-channel: #125140;
			--pitch4-primary-channel: #25A884;
			--pitch4-secondary-note: #125140;
			--pitch4-primary-note: #25A884;
			--pitch5-secondary-channel: #114c49;
			--pitch5-primary-channel: #21908C;
			--pitch5-secondary-note: #114c49;
			--pitch5-primary-note: #21908C;
			--pitch6-secondary-channel: #143843;
			--pitch6-primary-channel: #2B788E;
			--pitch6-secondary-note: #143843;
			--pitch6-primary-note: #2B788E;
			--pitch7-secondary-channel: #1d354e;
			--pitch7-primary-channel: #355F8D;
			--pitch7-secondary-note: #1a2f46;
			--pitch7-primary-note: #355F8D;
			--pitch8-secondary-channel: #2c2e5a;
			--pitch8-primary-channel: #414486;
			--pitch8-secondary-note: #1e1f3d;
			--pitch8-primary-note: #414486;
			--pitch9-secondary-channel: #3c1f5e;
			--pitch9-primary-channel: #5e3b89;
			--pitch9-secondary-note: #25133b;
			--pitch9-primary-note: #5e3b89;
			--pitch10-secondary-channel: #510264;
			--pitch10-primary-channel: #720d8a;
			--pitch10-secondary-note: #440154;
			--pitch10-primary-note: #720d8a;
			--noise1-secondary-channel: #BCDE2C;
			--noise1-primary-channel: #edff9f;
			--noise1-secondary-note: #BCDE2C;
			--noise1-primary-note: #edff9f;
			--noise2-secondary-channel: #45BE71;
			--noise2-primary-channel: #89ffb4;
			--noise2-secondary-note: #45BE71;
			--noise2-primary-note: #89ffb4;
			--noise3-secondary-channel: #21908C;
			--noise3-primary-channel: #72fffa;
			--noise3-secondary-note: #21908C;
			--noise3-primary-note: #72fffa;
			--noise4-secondary-channel: #355F8D;
			--noise4-primary-channel: #7cb6f5;
			--noise4-secondary-note: #355F8D;
			--noise4-primary-note: #7cb6f5;
			--noise5-secondary-channel: #482574;
			--noise5-primary-channel: #8f5ad1;
			--noise5-secondary-note: #48257A;
			--noise5-primary-note: #8f5ad1;
			--mod1-secondary-channel: #815a16;
			--mod1-primary-channel: #F5AB29;
			--mod1-secondary-note: #815a16;
			--mod1-primary-note: #F5AB29;
			--mod2-secondary-channel: #4d341a;
			--mod2-primary-channel: #C98540;
			--mod2-secondary-note: #4d341a;
			--mod2-primary-note: #C98540;
			--mod3-secondary-channel: #643734;
			--mod3-primary-channel: #A75D58;
			--mod3-secondary-note: #643734;
			--mod3-primary-note: #A75D58;
			--mod4-secondary-channel: #461430;
			--mod4-primary-channel: #812359;
			--mod4-secondary-note: #3f112b;
			--mod4-primary-note: #812359;
			--mod-label-primary: #282828;
			--mod-label-secondary-text: #707070;
			--mod-label-primary-text: white;
			--disabled-note-primary: #5d5d5d;
			--disabled-note-secondary: #292929;
		}`,"violet verdant":`
		:root {
			--page-margin: #0e031a;
			--editor-background: #0e031a;
			--hover-preview: #e5ffea;
			--playhead: rgba(255, 255, 255, 0.9);
			--primary-text: #f0e0ff;
			--secondary-text: #706087;
			--box-selection-fill: #225835;
			--loop-accent: #8f00fb;
			--link-accent: #82dd5d;
			--ui-widget-background: #303c66;
			--ui-widget-focus: #62559b;
			--pitch-background: #293b52;
			--tonic: #5b46ad;
			--fifth-note: #42604d;
			--white-piano-key: #f6e8ff;
			--black-piano-key: #5a4972;
			--use-color-formula: true;
			--track-editor-bg-pitch: #392a46;
			--track-editor-bg-pitch-dim: #1c1d28;
			--track-editor-bg-noise: #403150;
			--track-editor-bg-noise-dim: #161313;
			--track-editor-bg-mod: #253c25;
			--track-editor-bg-mod-dim: #0c1811;
			--multiplicative-mod-slider: #606c9f;
			--overwriting-mod-slider: #6850b5;
			--indicator-primary: #9c64f7;
			--indicator-secondary: #393e4f;
			--select2-opt-group: #5d576f;
			--input-box-outline: #403150;
			--mute-button-normal: #82dd5d;
			--mute-button-mod: #945de5;
			--mod-label-primary: #312840;
			--mod-label-secondary-text: rgb(88 70 104);
			--mod-label-primary-text: #82dd5d;
			--pitch-secondary-channel-hue: 64;
			--pitch-secondary-channel-hue-scale: 6.1;
			--pitch-secondary-channel-sat: 63.3;
			--pitch-secondary-channel-sat-scale: 0.1;
			--pitch-secondary-channel-lum: 40;
			--pitch-secondary-channel-lum-scale: 0.05;
			--pitch-primary-channel-hue: 64;
			--pitch-primary-channel-hue-scale: 6.1;
			--pitch-primary-channel-sat: 90;
			--pitch-primary-channel-sat-scale: 0.1;
			--pitch-primary-channel-lum: 67.5;
			--pitch-primary-channel-lum-scale: 0.05;
			--pitch-secondary-note-hue: 32;
			--pitch-secondary-note-hue-scale: 6.1;
			--pitch-secondary-note-sat: 87.9;
			--pitch-secondary-note-sat-scale: 0.1;
			--pitch-secondary-note-lum: 25;
			--pitch-secondary-note-lum-scale: 0.05;
			--pitch-primary-note-hue: 64;
			--pitch-primary-note-hue-scale: 6.1;
			--pitch-primary-note-sat: 90;
			--pitch-primary-note-sat-scale: 0.05;
			--pitch-primary-note-lum: 85.6;
			--pitch-primary-note-lum-scale: 0.025;
			--noise-secondary-channel-hue: 192;
			--noise-secondary-channel-hue-scale: 2;
			--noise-secondary-channel-sat: 45;
			--noise-secondary-channel-sat-scale: 0;
			--noise-secondary-channel-lum: 32;
			--noise-secondary-channel-lum-scale: 0;
			--noise-primary-channel-hue: 192;
			--noise-primary-channel-hue-scale: 2;
			--noise-primary-channel-sat: 33;
			--noise-primary-channel-sat-scale: 0;
			--noise-primary-channel-lum: 43.5;
			--noise-primary-channel-lum-scale: 0;
			--noise-secondary-note-hue: 160;
			--noise-secondary-note-hue-scale: 2;
			--noise-secondary-note-sat: 33.5;
			--noise-secondary-note-sat-scale: 0;
			--noise-secondary-note-lum: 45;
			--noise-secondary-note-lum-scale: 0;
			--noise-primary-note-hue: 192;
			--noise-primary-note-hue-scale: 2;
			--noise-primary-note-sat: 46.5;
			--noise-primary-note-sat-scale: 0;
			--noise-primary-note-lum: 74;
			--noise-primary-note-lum-scale: 0;
			--mod-secondary-channel-hue: 132;
			--mod-secondary-channel-hue-scale: 1.5;
			--mod-secondary-channel-sat: 88;
			--mod-secondary-channel-sat-scale: 0;
			--mod-secondary-channel-lum: 50;
			--mod-secondary-channel-lum-scale: 0;
			--mod-primary-channel-hue: 132;
			--mod-primary-channel-hue-scale: 1.5;
			--mod-primary-channel-sat: 96;
			--mod-primary-channel-sat-scale: 0;
			--mod-primary-channel-lum: 80;
			--mod-primary-channel-lum-scale: 0;
			--mod-secondary-note-hue: 100;
			--mod-secondary-note-hue-scale: 1.5;
			--mod-secondary-note-sat: 92;
			--mod-secondary-note-sat-scale: 0;
			--mod-secondary-note-lum: 45;
			--mod-secondary-note-lum-scale: 0;
			--mod-primary-note-hue: 132;
			--mod-primary-note-hue-scale: 1.5;
			--mod-primary-note-sat: 96;
			--mod-primary-note-sat-scale: 0;
			--mod-primary-note-lum: 85;
			--mod-primary-note-lum-scale: 0;
			--disabled-note-primary: #91879f;
			--disabled-note-secondary: #6a677a;
		}`,portal:`
		:root {
			--page-margin: #04081a;
			--editor-background: #04081a;
			--box-selection-fill: rgb(0 72 181);
			--loop-accent: #44d4ff;
			--link-accent: #ffa500;
			--ui-widget-background: #212c4a;
			--ui-widget-focus: #121f42;
			--pitch-background: #1b263e;
			--tonic: #995d00;
			--fifth-note: #0898a1;
			--white-piano-key: #ffffff;
			--black-piano-key: #516d7a;
			--track-editor-bg-pitch: #213352;
			--track-editor-bg-pitch-dim: #152032;
			--track-editor-bg-noise: #403524;
			--track-editor-bg-noise-dim: #2a1f0e;
			--indicator-primary: #5490ff;
			--mute-button-normal: #3372ff;
			--mute-button-mod: #dd872f;
			--pitch1-primary-channel: #77f7ff;
			--pitch2-secondary-channel: #0083a1;
			--pitch2-primary-channel: #35d9ff;
			--pitch2-secondary-note: #0083a1;
			--pitch2-primary-note: #a4eeff;
			--pitch3-secondary-channel: #0074c7;
			--pitch3-primary-channel: #3caeff;
			--pitch3-secondary-note: #00477a;
			--pitch3-primary-note: #aadcff;
			--pitch4-secondary-channel: #0039a1;
			--pitch4-primary-channel: #2673ff;
			--pitch4-secondary-note: #001f56;
			--pitch4-primary-note: #9bbeff;
			--pitch5-secondary-channel: #31148b;
			--pitch5-primary-channel: #7042ff;
			--pitch5-secondary-note: #190656;
			--pitch5-primary-note: #b79fff;
			--pitch6-secondary-channel: #979934;
			--pitch6-primary-channel: #fbff2f;
			--pitch6-secondary-note: #5d5e0a;
			--pitch6-primary-note: #fdff9a;
			--pitch7-secondary-channel: #b78f00;
			--pitch7-primary-channel: #ffd747;
			--pitch7-secondary-note: #5e3d00;
			--pitch7-primary-note: #ffe381;
			--pitch8-secondary-channel: #9d6500;
			--pitch8-primary-channel: #ffa400;
			--pitch8-secondary-note: #583900;
			--pitch8-primary-note: #ffd07c;
			--pitch9-secondary-channel: #744203;
			--pitch9-primary-channel: #ff8e00;
			--pitch9-secondary-note: #502d00;
			--pitch9-primary-note: #ffcb89;
			--pitch10-secondary-channel: #a32d00;
			--pitch10-primary-channel: #ff885b;
			--pitch10-secondary-note: #521700;
			--pitch10-primary-note: #ffb397;
			--noise1-secondary-channel: #6e2210;
			--noise1-primary-channel: #ff4600;
			--noise1-secondary-note: #4c1a08;
			--noise1-primary-note: #ffc9b4;
			--noise2-secondary-channel: #6a3110;
			--noise2-primary-channel: #ff782a;
			--noise2-secondary-note: #4c1f05;
			--noise2-primary-note: #ffb488;
			--noise3-secondary-channel: #72460e;
			--noise3-primary-channel: #d9871f;
			--noise3-secondary-note: #442905;
			--noise3-primary-note: #ffdcae;
			--noise4-secondary-channel: #837a0f;
			--noise4-primary-channel: #f7ea55;
			--noise4-secondary-note: #605906;
			--noise4-primary-note: #fff9ab;
			--noise5-secondary-channel: #8c8f00;
			--noise5-primary-channel: #fdff90;
			--noise5-secondary-note: #606200;
			--noise5-primary-note: #feffbc;
			--mod1-secondary-channel: #561b97;
			--mod1-primary-channel: #aa66f5;
			--mod1-secondary-note: #30075c;
			--mod1-primary-note: #cd9fff;
			--mod2-secondary-channel: #5116df;
			--mod2-primary-channel: #6b2dff;
			--mod2-secondary-note: #36138b;
			--mod2-primary-note: #bea3ff;
			--mod3-secondary-channel: #2535a1;
			--mod3-primary-channel: #3f57ff;
			--mod3-secondary-note: #0e185c;
			--mod3-primary-note: #8494ff;
			--mod4-secondary-channel: #1b5883;
			--mod4-primary-channel: #5eb7f5;
			--mod4-secondary-note: #072f4a;
			--mod4-primary-note: #63beff;
			--mod-label-primary: #24293a;
			--mod-label-secondary-text: #454d4e;
			--mod-label-primary-text: #7bd4ff;
			--disabled-note-primary: #072f4a;
			--disabled-note-secondary: #6585a7;
		}`,fusion:`:root {
			--page-margin: #0c0306;
			--editor-background: #0c0306;
			--primary-text: #26d9cd;
			--secondary-text: #ff6666;
			--inverted-text: white;
			--text-selection: #ffffff;
			--box-selection-fill: #ff00004d;
			--loop-accent: #ff6666;
			--link-accent: white;
			--ui-widget-background: #232323;
			--ui-widget-focus: #303030;
			--pitch-background: hsl(61deg 100% 70% / 25%);
			--tonic: #66a3ff40;
			--fifth-note: #ff666640;
			--white-piano-key: #cdcdcd;
			--black-piano-key: #232323;
			--track-editor-bg-pitch: #404040bf;
			--track-editor-bg-pitch-dim: #151515;
			--track-editor-bg-noise: #404040bf;
			--track-editor-bg-noise-dim: #151515;
			--track-editor-bg-mod: #404040bf;
			--track-editor-bg-mod-dim: #151515;
			--multiplicative-mod-slider: #ef7692;
			--overwriting-mod-slider: #f43e69;
			--indicator-primary: #26d9cd;
			--indicator-secondary: hsl(176deg 70% 25%);
			--select2-opt-group: #232323;
			--input-box-outline: #141e34;
			--mute-button-normal: #26d9cd;
			--mute-button-mod: hsl(346deg 70% 50%);
			--pitch1-secondary-channel: #bf4040;
			--pitch1-primary-channel: #ff6666;
			--pitch1-secondary-note: #bf4040;
			--pitch1-primary-note: #ff6666;
			--pitch2-secondary-channel: #bf5b40;
			--pitch2-primary-channel: #ff8766;
			--pitch2-secondary-note: #bf5b40;
			--pitch2-primary-note: #ff8766;
			--pitch3-secondary-channel: #bf7940;
			--pitch3-primary-channel: #ffab66;
			--pitch3-secondary-note: #bf7940;
			--pitch3-primary-note: #ffab66;
			--pitch4-secondary-channel: #bf9b40;
			--pitch4-primary-channel: #ffd466;
			--pitch4-secondary-note: #bf9b40;
			--pitch4-primary-note: #ffd466;
			--pitch5-secondary-channel: #bdbf40;
			--pitch5-primary-channel: #fcff66;
			--pitch5-secondary-note: #bdbf40;
			--pitch5-primary-note: #fcff66;
			--pitch6-secondary-channel: #9dbf40;
			--pitch6-primary-channel: #d6ff66;
			--pitch6-secondary-note: #9dbf40;
			--pitch6-primary-note: #d6ff66;
			--pitch7-secondary-channel: #9dbf40;
			--pitch7-primary-channel: #fcff66;
			--pitch7-secondary-note: #9dbf40;
			--pitch7-primary-note: #fcff66;
			--pitch8-secondary-channel: #bf9b40;
			--pitch8-primary-channel: #ffd466;
			--pitch8-secondary-note: #bf9b40;
			--pitch8-primary-note: #ffd466;
			--pitch9-secondary-channel: #bf5b40;
			--pitch9-primary-channel: #ffab66;
			--pitch9-secondary-note: #bf5b40;
			--pitch9-primary-note: #ffab66;
			--pitch10-secondary-channel: #d15a1f;
			--pitch10-primary-channel: #ff8766;
			--pitch10-secondary-note: #d15a1f;
			--pitch10-primary-note: #ff8766;
			--noise1-secondary-channel: #4073bf;
			--noise1-primary-channel: #66a3ff;
			--noise1-secondary-note: #4073bf;
			--noise1-primary-note: #66a3ff;
			--noise2-secondary-channel: #405dbf;
			--noise2-primary-channel: #668aff;
			--noise2-secondary-note: #405dbf;
			--noise2-primary-note: #668aff;
			--noise3-secondary-channel: #4f40bf;
			--noise3-primary-channel: #7866ff;
			--noise3-secondary-note: #4f40bf;
			--noise3-primary-note: #7866ff;
			--noise4-secondary-channel: #8840bf;
			--noise4-primary-channel: #bd66ff;
			--noise4-secondary-note: #8840bf;
			--noise4-primary-note: #bd66ff;
			--noise5-secondary-channel: #bf40b5;
			--noise5-primary-channel: #ff66f2;
			--noise5-secondary-note: #bf40b5;
			--noise5-primary-note: #ff66f2;
			--mod1-secondary-channel: #cc6666;
			--mod1-primary-channel: #ff9999;
			--mod1-secondary-note: #cc6666;
			--mod1-primary-note: #ff9999;
			--mod2-secondary-channel: #cc7766;
			--mod2-primary-channel: #ffaa99;
			--mod2-secondary-note: #bf5540;
			--mod2-primary-note: #ffaa99;
			--mod3-secondary-channel: #cc8866;
			--mod3-primary-channel: #ffbb99;
			--mod3-secondary-note: #cc8866;
			--mod3-primary-note: #ffbb99;
			--mod4-secondary-channel: #cc9966;
			--mod4-primary-channel: #ffcc99;
			--mod4-secondary-note: #cc9966;
			--mod4-primary-note: #ffcc99;
			--disabled-note-primary: #696969;
			--disabled-note-secondary: #232323;
		}`,inverse:`:root {
			--page-margin: #c4c8e3;
			--editor-background: #c4c8e3;
			--hover-preview: #000000;
			--playhead: #243953;
			--primary-text: black;
			--secondary-text: #855b95;
			--text-selection: rgb(132 125 255);
			--box-selection-fill: rgb(174 109 73 / 65%);
			--loop-accent: #EC897D;
			--link-accent: #4e00c8;
			--ui-widget-background: #e7e7ff;
			--ui-widget-focus: #d0d3e9;
			--pitch-background: #ffffff;
			--tonic: #bbbbbb;
			--fifth-note: #dcdcdc;
			--white-piano-key: #ffffff;
			--black-piano-key: #615f66;
			--track-editor-bg-pitch: #e9ebff;
			--track-editor-bg-pitch-dim: #e9ebff;
			--track-editor-bg-noise: #fdf2fe;
			--track-editor-bg-noise-dim: #fdf2fe;
			--track-editor-bg-mod: #dbdefe;
			--track-editor-bg-mod-dim: #dbdefe;
			--multiplicative-mod-slider: #6900b3;
			--overwriting-mod-slider: #004b9d;
			--indicator-primary: #ff633d;
			--indicator-secondary: #933822;
			--select2-opt-group: #e7e7ff;
			--input-box-outline: #e7e7ff;
			--mute-button-normal: #0072ef;
			--mute-button-mod: #002e67;
			--pitch1-secondary-channel: #b77d6e;
			--pitch1-primary-channel: #ff9d85;
			--pitch1-secondary-note: #b77d6e;
			--pitch1-primary-note: #ff9d85;
			--pitch2-secondary-channel: #be8821;
			--pitch2-primary-channel: #FFAF12;
			--pitch2-secondary-note: #be8821;
			--pitch2-primary-note: #FFAF12;
			--pitch3-secondary-channel: #3a62a4;
			--pitch3-primary-channel: #528ae6;
			--pitch3-secondary-note: #3a62a4;
			--pitch3-primary-note: #528ae6;
			--pitch4-secondary-channel: #3e8d78;
			--pitch4-primary-channel: #4EC5A7;
			--pitch4-secondary-note: #3e8d78;
			--pitch4-primary-note: #4EC5A7;
			--pitch5-secondary-channel: #84906d;
			--pitch5-primary-channel: #aabf84;
			--pitch5-secondary-note: #84906d;
			--pitch5-primary-note: #aabf84;
			--pitch6-secondary-channel: #bd6345;
			--pitch6-primary-channel: #e59a81;
			--pitch6-secondary-note: #bd6345;
			--pitch6-primary-note: #e59a81;
			--pitch7-secondary-channel: #aa592f;
			--pitch7-primary-channel: #FE813E;
			--pitch7-secondary-note: #aa592f;
			--pitch7-primary-note: #FE813E;
			--pitch8-secondary-channel: #b2a171;
			--pitch8-primary-channel: #ffd76d;
			--pitch8-secondary-note: #b2a171;
			--pitch8-primary-note: #ffd76d;
			--pitch9-secondary-channel: #4f6177;
			--pitch9-primary-channel: #798FA7;
			--pitch9-secondary-note: #4f6177;
			--pitch9-primary-note: #798FA7;
			--pitch10-secondary-channel: #165162;
			--pitch10-primary-channel: #107895;
			--pitch10-secondary-note: #165162;
			--pitch10-primary-note: #107895;
			--noise1-secondary-channel: #71617C;
			--noise1-primary-channel: #977da9;
			--noise1-secondary-note: #71617C;
			--noise1-primary-note: #977da9;
			--noise2-secondary-channel: #4a4c5b;
			--noise2-primary-channel: #707591;
			--noise2-secondary-note: #4a4c5b;
			--noise2-primary-note: #707591;
			--noise3-secondary-channel: #817c7b;
			--noise3-primary-channel: #A19D9C;
			--noise3-secondary-note: #817c7b;
			--noise3-primary-note: #A19D9C;
			--noise4-secondary-channel: #ab847b;
			--noise4-primary-channel: #EAAC9D;
			--noise4-secondary-note: #ab847b;
			--noise4-primary-note: #EAAC9D;
			--noise5-secondary-channel: #B49D74;
			--noise5-primary-channel: #dec69b;
			--noise5-secondary-note: #B49D74;
			--noise5-primary-note: #dec69b;
			--mod1-secondary-channel: #722124;
			--mod1-primary-channel: #D13A41;
			--mod1-secondary-note: #722124;
			--mod1-primary-note: #D13A41;
			--mod2-secondary-channel: #213657;
			--mod2-primary-channel: #34558B;
			--mod2-secondary-note: #213657;
			--mod2-primary-note: #34558B;
			--mod3-secondary-channel: #555D46;
			--mod3-primary-channel: #848f6d;
			--mod3-secondary-note: #555D46;
			--mod3-primary-note: #848f6d;
			--mod4-secondary-channel: #71617C;
			--mod4-primary-channel: #a68ab9;
			--mod4-secondary-note: #71617C;
			--mod4-primary-note: #a68ab9;
			--mod-label-primary: #e9e9e9;
			--mod-label-secondary-text: #707070;
			--disabled-note-primary: #959595;
			--disabled-note-secondary: #6e6e6e;
			}`,nebula:`
		:root {
			--page-margin: #040410;
			--editor-background: #150e1f;
			--playhead: rgba(255, 255, 255, 0.9);
			--secondary-text: #8C849A;
			--text-selection: rgba(141,79,201,0.99);
			--box-selection-fill: #311E44;
			--loop-accent: #CC688C;
			--link-accent: #817DC9;
			--ui-widget-background: #44394F;
			--ui-widget-focus: #7A6386;
			--pitch-background: #393e4f40;
			--tonic: #7D5C9EC0;
			--fifth-note: #ab77bd50;
			--white-piano-key: #EEEEEE;
			--black-piano-key: #5F5566;
			--use-color-formula: true;
			--track-editor-bg-pitch: #46374C;
			--track-editor-bg-pitch-dim: #1F1C2850;
			--track-editor-bg-noise: #3D353B;
			--track-editor-bg-noise-dim: #16131550;
			--track-editor-bg-mod: #623F4C;
			--track-editor-bg-mod-dim: #361A2450;
			--multiplicative-mod-slider: #9F6E6A;
			--overwriting-mod-slider: #A664B5;
			--indicator-primary: #CC6B8E;
			--indicator-secondary: #44394F;
			--select2-opt-group: #6A576F;
			--input-box-outline: #222;
			--mute-button-normal: #BF91DC;
			--mute-button-mod: #DC8C9A;
			--mod-label-primary: #3A2840;
			--mod-label-secondary-text: #62485E;
			--mod-label-primary-text: white;
			--pitch-secondary-channel-hue: -96;
			--pitch-secondary-channel-hue-scale: 4.2;
			--pitch-secondary-channel-sat: 50.3;
			--pitch-secondary-channel-sat-scale: 0.1;
			--pitch-secondary-channel-lum: 40;
			--pitch-secondary-channel-lum-scale: 0.05;
			--pitch-primary-channel-hue: -96;
			--pitch-primary-channel-hue-scale: 4.2;
			--pitch-primary-channel-sat: 70;
			--pitch-primary-channel-sat-scale: 0.1;
			--pitch-primary-channel-lum: 67.5;
			--pitch-primary-channel-lum-scale: 0.05;
			--pitch-secondary-note-hue: -96;
			--pitch-secondary-note-hue-scale: 4.2;
			--pitch-secondary-note-sat: 70.9;
			--pitch-secondary-note-sat-scale: 0.1;
			--pitch-secondary-note-lum: 25;
			--pitch-secondary-note-lum-scale: 0.05;
			--pitch-primary-note-hue: -96;
			--pitch-primary-note-hue-scale: 4.2;
			--pitch-primary-note-sat: 90;
			--pitch-primary-note-sat-scale: 0.05;
			--pitch-primary-note-lum: 85.6;
			--pitch-primary-note-lum-scale: 0.025;
			--noise-secondary-channel-hue: 16;
			--noise-secondary-channel-hue-scale: -1.33;
			--noise-secondary-channel-sat: 25;
			--noise-secondary-channel-sat-scale: 0;
			--noise-secondary-channel-lum: 42;
			--noise-secondary-channel-lum-scale: 0;
			--noise-primary-channel-hue: 16;
			--noise-primary-channel-hue-scale: -1.33;
			--noise-primary-channel-sat: 33;
			--noise-primary-channel-sat-scale: 0;
			--noise-primary-channel-lum: 63.5;
			--noise-primary-channel-lum-scale: 0;
			--noise-secondary-note-hue: 12;
			--noise-secondary-note-hue-scale: -1.33;
			--noise-secondary-note-sat: 33.5;
			--noise-secondary-note-sat-scale: 0;
			--noise-secondary-note-lum: 55;
			--noise-secondary-note-lum-scale: 0;
			--noise-primary-note-hue: 12;
			--noise-primary-note-hue-scale: -1.33;
			--noise-primary-note-sat: 46.5;
			--noise-primary-note-sat-scale: 0;
			--noise-primary-note-lum: 74;
			--noise-primary-note-lum-scale: 0;
			--mod-secondary-channel-hue: 12;
			--mod-secondary-channel-hue-scale: -.75;
			--mod-secondary-channel-sat: 50;
			--mod-secondary-channel-sat-scale: 0;
			--mod-secondary-channel-lum: 50;
			--mod-secondary-channel-lum-scale: 0;
			--mod-primary-channel-hue: 12;
			--mod-primary-channel-hue-scale: -.75;
			--mod-primary-channel-sat: 70;
			--mod-primary-channel-sat-scale: 0;
			--mod-primary-channel-lum: 80;
			--mod-primary-channel-lum-scale: 0;
			--mod-secondary-note-hue: 12;
			--mod-secondary-note-hue-scale: -.75;
			--mod-secondary-note-sat: 75;
			--mod-secondary-note-sat-scale: 0;
			--mod-secondary-note-lum: 45;
			--mod-secondary-note-lum-scale: 0;
			--mod-primary-note-hue: 12;
			--mod-primary-note-hue-scale: -.75;
			--mod-primary-note-sat: 85;
			--mod-primary-note-sat-scale: 0;
			--mod-primary-note-lum: 85;
			--mod-primary-note-lum-scale: 0;
			--disabled-note-primary: #aaa;
		}`,"roe light":`
		:root {
			--page-margin: #fff5f5;
			--editor-background: #fff5f5;
			--hover-preview: #0e8bf1;
			--playhead: 000;
			--primary-text: #0e8bf1;
			--secondary-text: #f10e0e;
			--inverted-text: white;
			--text-selection: #ff4444fc;
			--box-selection-fill: #ff00004d;
			--loop-accent: #9a75ff;
			--link-accent: #ff7070;
			--ui-widget-background: #bdc9e5;
			--ui-widget-focus: #a3b7e5;
			--pitch-background: #d0c7db;
			--tonic: #bed3e4;
			--fifth-note: #e7c6c6;
			--white-piano-key: #cdcdcd;
			--black-piano-key: #232323;
			--track-editor-bg-pitch: #e5e1ea;
			--track-editor-bg-pitch-dim: #cbc4d4;
			--track-editor-bg-noise: #e0ddee;
			--track-editor-bg-noise-dim: #c1bade;
			--track-editor-bg-mod: #d8e6f3;
			--track-editor-bg-mod-dim: #b1cce7;
			--multiplicative-mod-slider: #8097cb;
			--overwriting-mod-slider: #8097cb;
			--indicator-primary: #FF2A2A;
			--indicator-secondary: #92a6d3;
			--select2-opt-group: #b6c4e2;
			--input-box-outline: #bdc9e5;
			--mute-button-normal: #66baff;
			--mute-button-mod: #1a98ff;
			--pitch1-secondary-channel: #273c90;
			--pitch1-primary-channel: #476BFF;
			--pitch1-secondary-note: #273c90;
			--pitch1-primary-note: #476BFF;
			--pitch2-secondary-channel: #3a3898;
			--pitch2-primary-channel: #625FFB;
			--pitch2-secondary-note: #3a3898;
			--pitch2-primary-note: #625FFB;
			--pitch3-secondary-channel: #542780;
			--pitch3-primary-channel: #9C49EC;
			--pitch3-secondary-note: #542780;
			--pitch3-primary-note: #9C49EC;
			--pitch4-secondary-channel: #84225d;
			--pitch4-primary-channel: #fd3fb1;
			--pitch4-secondary-note: #84225d;
			--pitch4-primary-note: #fd3fb1;
			--pitch5-secondary-channel: #8d2323;
			--pitch5-primary-channel: #ff3f3f;
			--pitch5-secondary-note: #8d2323;
			--pitch5-primary-note: #ff3f3f;
			--pitch6-secondary-channel: #84225d;
			--pitch6-primary-channel: #fd3fb1;
			--pitch6-secondary-note: #84225d;
			--pitch6-primary-note: #fd3fb1;
			--pitch7-secondary-channel: #542780;
			--pitch7-primary-channel: #9C49EC;
			--pitch7-secondary-note: #542780;
			--pitch7-primary-note: #9C49EC;
			--pitch8-secondary-channel: #3a3898;
			--pitch8-primary-channel: #625FFB;
			--pitch8-secondary-note: #3a3898;
			--pitch8-primary-note: #625FFB;
			--pitch9-secondary-channel: #273c90;
			--pitch9-primary-channel: #476BFF;
			--pitch9-secondary-note: #273c90;
			--pitch9-primary-note: #476BFF;
			--pitch10-secondary-channel: #165a93;
			--pitch10-primary-channel: #299EFF;
			--pitch10-secondary-note: #165a93;
			--pitch10-primary-note: #299EFF;
			--noise1-secondary-channel: #336bdb;
			--noise1-primary-channel: #4281FF;
			--noise1-secondary-note: #336bdb;
			--noise1-primary-note: #4281FF;
			--noise2-secondary-channel: #5e38dc;
			--noise2-primary-channel: #7347FF;
			--noise2-secondary-note: #5e38dc;
			--noise2-primary-note: #7347FF;
			--noise3-secondary-channel: #7d3097;
			--noise3-primary-channel: #9F3CBF;
			--noise3-secondary-note: #7d3097;
			--noise3-primary-note: #9F3CBF;
			--noise4-secondary-channel: #ad2559;
			--noise4-primary-channel: #D3326F;
			--noise4-secondary-note: #ad2559;
			--noise4-primary-note: #D3326F;
			--noise5-secondary-channel: #d02525;
			--noise5-primary-channel: #FF2A2A;
			--noise5-secondary-note: #d02525;
			--noise5-primary-note: #FF2A2A;
			--mod1-secondary-channel: #35415a;
			--mod1-primary-channel: #47587a;
			--mod1-secondary-note: #35415a;
			--mod1-primary-note: #47587a;
			--mod2-secondary-channel: #5a5374;
			--mod2-primary-channel: #716791;
			--mod2-secondary-note: #5a5374;
			--mod2-primary-note: #716791;
			--mod3-secondary-channel: #53385c;
			--mod3-primary-channel: #6f4c7b;
			--mod3-secondary-note: #53385c;
			--mod3-primary-note: #6f4c7b;
			--mod4-secondary-channel: #7e4e60;
			--mod4-primary-channel: #9e6279;
			--mod4-secondary-note: #7e4e60;
			--mod4-primary-note: #9e6279;
			--mod-label-primary: #d0c7db;
			--mod-label-secondary-text: #cb3434;
			--disabled-note-primary: #616161;
			--disabled-note-secondary: #474747;
		}
		.promptContainerBG::before {
			box-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);
		}`,energized:`
		:root {
			--page-margin: #000a08;
			--editor-background: #000a08;
			--hover-preview: #ffffcc;
			--playhead: #ccfff5;
			--secondary-text: #d9d98c;
			--text-selection: #ffff6659;
			--box-selection-fill: #ffffff33;
			--loop-accent: #ffff00;
			--link-accent: #00ffcc;
			--ui-widget-background: #141f1d;
			--ui-widget-focus: #24423d;
			--pitch-background: #001410;
			--tonic: #00241d;
			--fifth-note: #ffff6633;
			--white-piano-key: #66998f;
			--black-piano-key: #141f1d;
			--track-editor-bg-pitch: #66998f40;
			--track-editor-bg-pitch-dim: #293d3940;
			--track-editor-bg-noise: #66998f40;
			--track-editor-bg-noise-dim: #293d3940;
			--track-editor-bg-mod: #99996640;
			--track-editor-bg-mod-dim: #3d3d2940;
			--multiplicative-mod-slider: #ffff00;
			--overwriting-mod-slider: #00ffcc;
			--indicator-primary: #ffff00;
			--indicator-secondary: #141f1d;
			--select2-opt-group: #1b312e;
			--input-box-outline: #141f1d;
			--mute-button-normal: #00ffcc;
			--mute-button-mod: #00997a;
			--pitch1-secondary-channel: #bfbf40;
			--pitch1-primary-channel: #ffff64;
			--pitch1-secondary-note: #bfbf40;
			--pitch1-primary-note: #ffff64;
			--pitch2-secondary-channel: #a2bf40;
			--pitch2-primary-channel: #e0ff7d;
			--pitch2-secondary-note: #a2bf40;
			--pitch2-primary-note: #e0ff7d;
			--pitch3-secondary-channel: #75bf40;
			--pitch3-primary-channel: #c1ff96;
			--pitch3-secondary-note: #75bf40;
			--pitch3-primary-note: #c1ff96;
			--pitch4-secondary-channel: #40bf51;
			--pitch4-primary-channel: #a2ffaf;
			--pitch4-secondary-note: #40bf51;
			--pitch4-primary-note: #a2ffaf;
			--pitch5-secondary-channel: #40bf86;
			--pitch5-primary-channel: #83ffc8;
			--pitch5-secondary-note: #40bf86;
			--pitch5-primary-note: #83ffc8;
			--pitch6-secondary-channel: #40bfa6;
			--pitch6-primary-channel: #64ffe1;
			--pitch6-secondary-note: #40bfa6;
			--pitch6-primary-note: #64ffe1;
			--pitch7-secondary-channel: #40bf86;
			--pitch7-primary-channel: #83ffc8;
			--pitch7-secondary-note: #40bf86;
			--pitch7-primary-note: #83ffc8;
			--pitch8-secondary-channel: #40bf51;
			--pitch8-primary-channel: #a2ffaf;
			--pitch8-secondary-note: #40bf51;
			--pitch8-primary-note: #a2ffaf;
			--pitch9-secondary-channel: #75bf40;
			--pitch9-primary-channel: #c1ff96;
			--pitch9-secondary-note: #75bf40;
			--pitch9-primary-note: #c1ff96;
			--pitch10-secondary-channel: #a2bf40;
			--pitch10-primary-channel: #e0ff7d;
			--pitch10-secondary-note: #a2bf40;
			--pitch10-primary-note: #e0ff7d;
			--noise1-secondary-channel: #a6a659;
			--noise1-primary-channel: #ffffcc;
			--noise1-secondary-note: #a6a659;
			--noise1-primary-note: #ffffcc;
			--noise2-secondary-channel: #94a659;
			--noise2-primary-channel: #f3ffcc;
			--noise2-secondary-note: #94a659;
			--noise2-primary-note: #f3ffcc;
			--noise3-secondary-channel: #79a659;
			--noise3-primary-channel: #e1ffcc;
			--noise3-secondary-note: #79a659;
			--noise3-primary-note: #e1ffcc;
			--noise4-secondary-channel: #94a659;
			--noise4-primary-channel: #f3ffcc;
			--noise4-secondary-note: #94a659;
			--noise4-primary-note: #f3ffcc;
			--noise5-secondary-channel: #a6a659;
			--noise5-primary-channel: #ffffcc;
			--noise5-secondary-note: #a6a659;
			--noise5-primary-note: #ffffcc;
			--mod1-secondary-channel: #a3a329;
			--mod1-primary-channel: #ffff00;
			--mod1-secondary-note: #a3a329;
			--mod1-primary-note: #ffff00;
			--mod2-secondary-channel: #a38529;
			--mod2-primary-channel: #ffbf00;
			--mod2-secondary-note: #a38529;
			--mod2-primary-note: #ffbf00;
			--mod3-secondary-channel: #a36629;
			--mod3-primary-channel: #ff7f00;
			--mod3-secondary-note: #a36629;
			--mod3-primary-note: #ff7f00;
			--mod4-secondary-channel: #a38529;
			--mod4-primary-channel: #ffbf00;
			--mod4-secondary-note: #a38529;
			--mod4-primary-note: #ffbf00;
			--mod-label-primary: #141f1d;
			--mod-label-secondary-text: #d9d98c;
			--mod-label-primary-text: white;
			--disabled-note-primary: #808080;
			--disabled-note-secondary: #666666;
		}`,neapolitan:`:root {
			--page-margin: #120807;
			--editor-background: #120807;
			--hover-preview: #e79a82;
			--playhead: #e79a82;
			--primary-text: #decdbf;
			--secondary-text: #fa99bb;
			--text-selection: #990036;
			--loop-accent: #f6377a;
			--link-accent: #f6377a;
			--ui-widget-background: #24160f;
			--ui-widget-focus: #362217;
			--pitch-background: #1e1106;
			--tonic: #382414;
			--fifth-note: #41240c;
			--white-piano-key: #e1c5b7;
			--black-piano-key: #482c1e;
			--white-piano-key-text: black;
			--black-piano-key-text: white;
			--track-editor-bg-pitch: #4d2a19;
			--track-editor-bg-pitch-dim: #27150c;
			--track-editor-bg-noise: #4d2a19;
			--track-editor-bg-noise-dim: #27150c;
			--track-editor-bg-mod: #4d2a19;
			--track-editor-bg-mod-dim: #27150c;
			--multiplicative-mod-slider: #decdbf;
			--overwriting-mod-slider: #decdbf;
			--indicator-primary: #decdbf;
			--indicator-secondary: #362217;
			--select2-opt-group: #24160f;
			--input-box-outline: #24160f;
			--mute-button-normal: #ff66a1;
			--mute-button-mod: #e61968;
			--pitch1-secondary-channel: #680029;
			--pitch1-primary-channel: #cc0052;
			--pitch1-secondary-note: #660029;
			--pitch1-primary-note: #cc0052;
			--pitch2-secondary-channel: #7e1b43;
			--pitch2-primary-channel: #d32e71;
			--pitch2-secondary-note: #7e1b43;
			--pitch2-primary-note: #d32e71;
			--pitch3-secondary-channel: #aa275e;
			--pitch3-primary-channel: #da5d91;
			--pitch3-secondary-note: #aa275e;
			--pitch3-primary-note: #da5d91;
			--pitch4-secondary-channel: #cc3878;
			--pitch4-primary-channel: #e18bb0;
			--pitch4-secondary-note: #cc3878;
			--pitch4-primary-note: #e18bb0;
			--pitch5-secondary-channel: #d06c9b;
			--pitch5-primary-channel: #e9bad0;
			--pitch5-secondary-note: #d06c9b;
			--pitch5-primary-note: #e9bad0;
			--pitch6-secondary-channel: #c9acc5;
			--pitch6-primary-channel: #f0e8ef;
			--pitch6-secondary-note: #c9acc5;
			--pitch6-primary-note: #f0e8ef;
			--pitch7-secondary-channel: #d06c9b;
			--pitch7-primary-channel: #e9bad0;
			--pitch7-secondary-note: #d06c9b;
			--pitch7-primary-note: #e9bad0;
			--pitch8-secondary-channel: #cc3878;
			--pitch8-primary-channel: #e18bb0;
			--pitch8-secondary-note: #cc3878;
			--pitch8-primary-note: #e18bb0;
			--pitch9-secondary-channel: #aa275e;
			--pitch9-primary-channel: #da5d91;
			--pitch9-secondary-note: #aa275e;
			--pitch9-primary-note: #da5d91;
			--pitch10-secondary-channel: #7e1b43;
			--pitch10-primary-channel: #d32e71;
			--pitch10-secondary-note: #7e1b43;
			--pitch10-primary-note: #d32e71;
			--noise1-secondary-channel: #683a37;
			--noise1-primary-channel: #A85F5A;
			--noise1-secondary-note: #683a37;
			--noise1-primary-note: #A85F5A;
			--noise2-secondary-channel: #7c4a41;
			--noise2-primary-channel: #B47A70;
			--noise2-secondary-note: #7c4a41;
			--noise2-primary-note: #B47A70;
			--noise3-secondary-channel: #935f4d;
			--noise3-primary-channel: #c09587;
			--noise3-secondary-note: #935f4d;
			--noise3-primary-note: #C09587;
			--noise4-secondary-channel: #aa795a;
			--noise4-primary-channel: #cdb09d;
			--noise4-secondary-note: #aa795a;
			--noise4-primary-note: #CDAF9D;
			--noise5-secondary-channel: #bb987c;
			--noise5-primary-channel: #decdbf;
			--noise5-secondary-note: #bb987c;
			--noise5-primary-note: #decdbf;
			--mod1-secondary-channel: #6ca784;
			--mod1-primary-channel: #accdb9;
			--mod1-secondary-note: #6ca784;
			--mod1-primary-note: #accdb9;
			--mod2-secondary-channel: #7daa9f;
			--mod2-primary-channel: #bbd3cd;
			--mod2-secondary-note: #7daa9f;
			--mod2-primary-note: #bbd3cd;
			--mod3-secondary-channel: #70a3a9;
			--mod3-primary-channel: #afcccf;
			--mod3-secondary-note: #70a3a9;
			--mod3-primary-note: #afcccf;
			--mod4-secondary-channel: #5698b8;
			--mod4-primary-channel: #9ec3d6;
			--mod4-secondary-note: #5698b8;
			--mod4-primary-note: #9ec3d6;
			--mod-label-primary: #24160f;
			--mod-label-secondary-text: #E5AFC2;
			--mod-label-primary-text: #decdbf;
			--disabled-note-primary: #bababa;
			--disabled-note-secondary: #878787;
		}`,poly:`:root {
			--page-margin: #000;
			--editor-background: #000;
			--hover-preview: #808080;
			--playhead: #808080;
			--secondary-text: #cccccc;
			--text-selection: #696969;
			--box-selection-fill: #cccccc40;
			--loop-accent: #808080;
			--link-accent: white;
			--ui-widget-background: #232323;
			--ui-widget-focus: #303030;
			--pitch-background: #1a1a1a;
			--tonic: #262626;
			--fifth-note: #0d0d0d;
			--white-piano-key: #808080;
			--black-piano-key: #232323;
			--use-color-formula: true;
			--track-editor-bg-pitch: #262626;
			--track-editor-bg-pitch-dim: #1a1a1a;
			--track-editor-bg-noise: #262626;
			--track-editor-bg-noise-dim: #1a1a1a;
			--track-editor-bg-mod: #262626;
			--track-editor-bg-mod-dim: #1a1a1a;
			--multiplicative-mod-slider: #808080;
			--overwriting-mod-slider: #808080;
			--indicator-primary: #808080;
			--indicator-secondary: #333333;
			--select2-opt-group: #232323;
			--input-box-outline: #222;
			--mute-button-normal: #808080;
			--mute-button-mod: #808080;
			--mod-label-primary: #232323;
			--mod-label-secondary-text: #696969;
			--mod-label-primary-text: #cdcdcd;
			--pitch-secondary-channel-hue: 208;
			--pitch-secondary-channel-hue-scale: 10;
			--pitch-secondary-channel-sat: 100;
			--pitch-secondary-channel-sat-scale: 0;
			--pitch-secondary-channel-lum: 88;
			--pitch-secondary-channel-lum-scale: 0;
			--pitch-primary-channel-hue: 207;
			--pitch-primary-channel-hue-scale: 10;
			--pitch-primary-channel-sat: 100;
			--pitch-primary-channel-sat-scale: 0;
			--pitch-primary-channel-lum: 910;
			--pitch-primary-channel-lum-scale: 0;
			--pitch-secondary-note-hue: 208;
			--pitch-secondary-note-hue-scale: 10;
			--pitch-secondary-note-sat: 100;
			--pitch-secondary-note-sat-scale: 0;
			--pitch-secondary-note-lum: 88;
			--pitch-secondary-note-lum-scale: 0;
			--pitch-primary-note-hue: 208;
			--pitch-primary-note-hue-scale: 10;
			--pitch-primary-note-sat: 100;
			--pitch-primary-note-sat-scale: 0;
			--pitch-primary-note-lum: 910;
			--pitch-primary-note-lum-scale: 0;
			--noise-secondary-channel-hue: 328;
			--noise-secondary-channel-hue-scale: 10;
			--noise-secondary-channel-sat: 100;
			--noise-secondary-channel-sat-scale: 0;
			--noise-secondary-channel-lum: 88;
			--noise-secondary-channel-lum-scale: 0;
			--noise-primary-channel-hue: 327;
			--noise-primary-channel-hue-scale: 10;
			--noise-primary-channel-sat: 100;
			--noise-primary-channel-sat-scale: 0;
			--noise-primary-channel-lum: 910;
			--noise-primary-channel-lum-scale: 0;
			--noise-secondary-note-hue: 328;
			--noise-secondary-note-hue-scale: 10;
			--noise-secondary-note-sat: 100;
			--noise-secondary-note-sat-scale: 0;
			--noise-secondary-note-lum: 88;
			--noise-secondary-note-lum-scale: 0;
			--noise-primary-note-hue: 327;
			--noise-primary-note-hue-scale: 10;
			--noise-primary-note-sat: 100;
			--noise-primary-note-sat-scale: 0;
			--noise-primary-note-lum: 910;
			--noise-primary-note-lum-scale: 0;
			--mod-secondary-channel-hue: 87;
			--mod-secondary-channel-hue-scale: 10;
			--mod-secondary-channel-sat: 100;
			--mod-secondary-channel-sat-scale: 0;
			--mod-secondary-channel-lum: 88;
			--mod-secondary-channel-lum-scale: 0;
			--mod-primary-channel-hue: 88;
			--mod-primary-channel-hue-scale: 10;
			--mod-primary-channel-sat: 100;
			--mod-primary-channel-sat-scale: 0;
			--mod-primary-channel-lum: 910;
			--mod-primary-channel-lum-scale: 0;
			--mod-secondary-note-hue: 87;
			--mod-secondary-note-hue-scale: 10;
			--mod-secondary-note-sat: 100;
			--mod-secondary-note-sat-scale: 0;
			--mod-secondary-note-lum: 88;
			--mod-secondary-note-lum-scale: 0;
			--mod-primary-note-hue: 88;
			--mod-primary-note-hue-scale: 10;
			--mod-primary-note-sat: 100;
			--mod-primary-note-sat-scale: 0;
			--mod-primary-note-lum: 910;
			--mod-primary-note-lum-scale: 0;
			--disabled-note-primary: #c6c6c6;
			--disabled-note-secondary: #8c8c8c;
		}`,greyscale:`:root {
			--page-margin: #000;
			--editor-background: #000;
			--hover-preview: #808080;
			--playhead: #808080;
			--primary-text: white;
			--secondary-text: #cccccc;
			--inverted-text: black;
			--text-selection: #696969;
			--box-selection-fill: #cccccc40;
			--loop-accent: #808080;
			--link-accent: white;
			--ui-widget-background: #232323;
			--ui-widget-focus: #303030;
			--pitch-background: #1a1a1a;
			--tonic: #262626;
			--fifth-note: #0d0d0d;
			--white-piano-key: #808080;
			--black-piano-key: #232323;
			--use-color-formula: true;
			--track-editor-bg-pitch: #262626;
			--track-editor-bg-pitch-dim: #1a1a1a;
			--track-editor-bg-noise: #262626;
			--track-editor-bg-noise-dim: #1a1a1a;
			--track-editor-bg-mod: #262626;
			--track-editor-bg-mod-dim: #1a1a1a;
			--multiplicative-mod-slider: #808080;
			--overwriting-mod-slider: #808080;
			--indicator-primary: #808080;
			--indicator-secondary: #333333;
			--select2-opt-group: #232323;
			--input-box-outline: #222;
			--mute-button-normal: #808080;
			--mute-button-mod: #808080;
			--mod-label-primary: #232323;
			--mod-label-secondary-text: #696969;
			--mod-label-primary-text: #cdcdcd;
			--pitch-secondary-channel-hue: 0;
			--pitch-secondary-channel-hue-scale: 25;
			--pitch-secondary-channel-sat: 10;
			--pitch-secondary-channel-sat-scale: 0.1;
			--pitch-secondary-channel-lum: 70;
			--pitch-secondary-channel-lum-scale: 0;
			--pitch-primary-channel-hue: 0;
			--pitch-primary-channel-hue-scale: 25;
			--pitch-primary-channel-sat: 50;
			--pitch-primary-channel-sat-scale: 0.1;
			--pitch-primary-channel-lum: 95;
			--pitch-primary-channel-lum-scale: 0;
			--pitch-secondary-note-hue: 0;
			--pitch-secondary-note-hue-scale: 25;
			--pitch-secondary-note-sat: 10;
			--pitch-secondary-note-sat-scale: 0.1;
			--pitch-secondary-note-lum: 70;
			--pitch-secondary-note-lum-scale: 0;
			--pitch-primary-note-hue: 0;
			--pitch-primary-note-hue-scale: 25;
			--pitch-primary-note-sat: 50;
			--pitch-primary-note-sat-scale: 0.1;
			--pitch-primary-note-lum: 95;
			--pitch-primary-note-lum-scale: 0;
			--noise-secondary-channel-hue: 125;
			--noise-secondary-channel-hue-scale: 50;
			--noise-secondary-channel-sat: 10;
			--noise-secondary-channel-sat-scale: 0.1;
			--noise-secondary-channel-lum: 70;
			--noise-secondary-channel-lum-scale: 0;
			--noise-primary-channel-hue: 125;
			--noise-primary-channel-hue-scale: 50;
			--noise-primary-channel-sat: 50;
			--noise-primary-channel-sat-scale: 0.1;
			--noise-primary-channel-lum: 95;
			--noise-primary-channel-lum-scale: 0;
			--noise-secondary-note-hue: 125;
			--noise-secondary-note-hue-scale: 50;
			--noise-secondary-note-sat: 10;
			--noise-secondary-note-sat-scale: 0.1;
			--noise-secondary-note-lum: 70;
			--noise-secondary-note-lum-scale: 0;
			--noise-primary-note-hue: 125;
			--noise-primary-note-hue-scale: 50;
			--noise-primary-note-sat: 50;
			--noise-primary-note-sat-scale: 0.1;
			--noise-primary-note-lum: 95;
			--noise-primary-note-lum-scale: 0;
			--mod-secondary-channel-hue: 255;
			--mod-secondary-channel-hue-scale: 75;
			--mod-secondary-channel-sat: 10;
			--mod-secondary-channel-sat-scale: 0;
			--mod-secondary-channel-lum: 70;
			--mod-secondary-channel-lum-scale: 0;
			--mod-primary-channel-hue: 255;
			--mod-primary-channel-hue-scale: 75;
			--mod-primary-channel-sat: 50;
			--mod-primary-channel-sat-scale: 0;
			--mod-primary-channel-lum: 95;
			--mod-primary-channel-lum-scale: 0;
			--mod-secondary-note-hue: 255;
			--mod-secondary-note-hue-scale: 75;
			--mod-secondary-note-sat: 10;
			--mod-secondary-note-sat-scale: 0;
			--mod-secondary-note-lum: 70;
			--mod-secondary-note-lum-scale: 0;
			--mod-primary-note-hue: 255;
			--mod-primary-note-hue-scale: 75;
			--mod-primary-note-sat: 50;
			--mod-primary-note-sat-scale: 0;
			--mod-primary-note-lum: 95;
			--mod-primary-note-lum-scale: 0;
			--disabled-note-primary: #c6c6c6;
			--disabled-note-secondary: #8c8c8c;
		}`,blutonium:`:root {
			--page-margin: #02070D;
			--editor-background: #02070D;
			--primary-text: #9bd1ee;
			--secondary-text: #5a6da8;
			--text-selection: rgb(68 68 255 / 99%);
			--box-selection-fill: rgb(0 0 255 / 30%);
			--loop-accent: #024aca;
			--link-accent: #024aca;
			--ui-widget-background: #161c2e;
			--ui-widget-focus: #262c3e;
			--pitch-background: #22272D;
			--tonic: #1b3056;
			--fifth-note: #344051;
			--white-piano-key: #a6c6ed;
			--black-piano-key: #2f4687;
			--track-editor-bg-pitch: #25284c;
			--track-editor-bg-pitch-dim: #211c26;
			--track-editor-bg-noise: #261f42;
			--track-editor-bg-noise-dim: #1a152d;
			--track-editor-bg-mod: #183049;
			--track-editor-bg-mod-dim: #102132;
			--multiplicative-mod-slider: #344a7f;
			--overwriting-mod-slider: #344a7f;
			--indicator-primary: #024aca;
			--indicator-secondary: #00177d;
			--select2-opt-group: #141e34;
			--input-box-outline: #141e34;
			--mute-button-normal: #273b9d;
			--mute-button-mod: #27989d;
			--pitch1-secondary-channel: hsl(200, 100%, 40%);
			--pitch1-primary-channel: #99ddff;
			--pitch1-secondary-note: hsl(200, 100%, 40%);
			--pitch1-primary-note: #99ddff;
			--pitch2-secondary-channel: 	hsl(212, 100%, 34%);
			--pitch2-primary-channel: #5BA8FF;
			--pitch2-secondary-note: hsl(212, 100%, 34%);
			--pitch2-primary-note: #5BA8FF;
			--pitch3-secondary-channel: #024ACA;
			--pitch3-primary-channel: #0A89FF;
			--pitch3-secondary-note: #024ACA;
			--pitch3-primary-note: #0A89FF;
			--pitch4-secondary-channel: #00177D;
			--pitch4-primary-channel: #024ACA;
			--pitch4-secondary-note: #00177D;
			--pitch4-primary-note: #024ACA;
			--pitch5-secondary-channel: #000e4e;
			--pitch5-primary-channel: #0023bf;
			--pitch5-secondary-note: #000e4e;
			--pitch5-primary-note: #0023bf;
			--pitch6-secondary-channel: #8990FE;
			--pitch6-primary-channel: #C2C6FF;
			--pitch6-secondary-note: #8990FE;
			--pitch6-primary-note: #C2C6FF;
			--pitch7-secondary-channel: #5E65D3;
			--pitch7-primary-channel: #8990FE;
			--pitch7-secondary-note: #5E65D3;
			--pitch7-primary-note: #8990FE;
			--pitch8-secondary-channel: #3138A6;
			--pitch8-primary-channel: #5E65D3;
			--pitch8-secondary-note: #3138A6;
			--pitch8-primary-note: #5E65D3;
			--pitch9-secondary-channel: #1B0B7F;
			--pitch9-primary-channel: #3138A6;
			--pitch9-secondary-note: #1B0B7F;
			--pitch9-primary-note: #3138A6;
			--pitch10-secondary-channel: #13015D;
			--pitch10-primary-channel: #1c02bd;
			--pitch10-secondary-note: #13015D;
			--pitch10-primary-note: #1c02bd;
			--noise1-secondary-channel: #A675FE;
			--noise1-primary-channel: #E2C9FF;
			--noise1-secondary-note: #A675FE;
			--noise1-primary-note: #E2C9FF;
			--noise2-secondary-channel: #6A31CA;
			--noise2-primary-channel: #A675FE;
			--noise2-secondary-note: #6A31CA;
			--noise2-primary-note: #A675FE;
			--noise3-secondary-channel: #5A1991;
			--noise3-primary-channel: #6A31CA;
			--noise3-secondary-note: #5A1991;
			--noise3-primary-note: #6A31CA;
			--noise4-secondary-channel: #2f1a68;
			--noise4-primary-channel: #5A1991;
			--noise4-secondary-note: #2f1a68;
			--noise4-primary-note: #5A1991;
			--noise5-secondary-channel: #211640;
			--noise5-primary-channel: #391b8d;
			--noise5-secondary-note: #211640;
			--noise5-primary-note: #391b8d;
			--mod1-secondary-channel: #25E2CD;
			--mod1-primary-channel: #BDFFCA;
			--mod1-secondary-note: #25E2CD;
			--mod1-primary-note: #BDFFCA;
			--mod2-secondary-channel: #0A98AC;
			--mod2-primary-channel: #25E2CD;
			--mod2-secondary-note: #0A98AC;
			--mod2-primary-note: #25E2CC;
			--mod3-secondary-channel: #005280;
			--mod3-primary-channel: #0A98AC;
			--mod3-secondary-note: #005280;
			--mod3-primary-note: #0A98AC;
			--mod4-secondary-channel: #0f3670;
			--mod4-primary-channel: #1369c1;
			--mod4-secondary-note: #0f3670;
			--mod4-primary-note: #1369c1;
			--mod-label-primary: #191d26;
			--mod-label-secondary-text: #024aca;
			--mod-label-primary-text: #ffffffa6;
			--disabled-note-primary: #c9c9c9;
			--disabled-note-secondary: #616161;
	}`,slushie:`
	:root {
		--page-margin: #040814;
		--editor-background: #040814;
		--hover-preview: #c6f7ff;
		--primary-text: #d3f3ff;
		--secondary-text: #6f72b5;
		--inverted-text: black;
		--box-selection-fill: rgb(43 70 171 / 62%);
		--loop-accent: #573ebb;
		--ui-widget-background: #2e2f44;
		--ui-widget-focus: #2b2c46;
		--pitch-background: #353654;
		--tonic: #716fe3;
		--fifth-note: #76469b;
		--white-piano-key: #abbce3;
		--black-piano-key: #2f235e;
		--track-editor-bg-pitch: #3a3b5c;
		--track-editor-bg-pitch-dim: #1f2036;
		--track-editor-bg-noise: #3c3554;
		--track-editor-bg-noise-dim: #1e1834;
		--track-editor-bg-mod: #30335e;
		--track-editor-bg-mod-dim: #161938;
		--multiplicative-mod-slider: #e29cff;
		--overwriting-mod-slider: #495789;
		--indicator-primary: #e1a6ff;
		--indicator-secondary: #415187;
		--select2-opt-group: #22223a;
		--input-box-outline: #2d2648;
		--mute-button-normal: #7aceff;
		--pitch1-secondary-channel: #5f3ea5;
		--pitch1-primary-channel: #c1a4ff;
		--pitch1-secondary-note: #794fd3;
		--pitch1-primary-note: #d8c6ff;
		--pitch2-secondary-channel: #4f44bf;
		--pitch2-primary-channel: #9287ff;
		--pitch2-secondary-note: #5e51d9;
		--pitch2-primary-note: #b6afff;
		--pitch3-secondary-channel: #374eb9;
		--pitch3-primary-channel: #8097ff;
		--pitch3-secondary-note: #445cc9;
		--pitch3-primary-note: #a0b2ff;
		--pitch4-secondary-channel: #2867cf;
		--pitch4-primary-channel: #6fa5ff;
		--pitch4-secondary-note: #2e6ed7;
		--pitch4-primary-note: #a6c7ff;
		--pitch5-secondary-channel: #3175a7;
		--pitch5-primary-channel: #7ec9ff;
		--pitch5-secondary-note: #367eb3;
		--pitch5-primary-note: #9fd7ff;
		--pitch6-secondary-channel: #3993a9;
		--pitch6-primary-channel: #8ce9ff;
		--pitch6-secondary-note: #386da3;
		--pitch6-primary-note: #9eecff;
		--pitch7-secondary-channel: #369d8a;
		--pitch7-primary-channel: #8bfce7;
		--pitch7-secondary-note: #1c93a7;
		--pitch7-primary-note: #abffef;
		--pitch8-secondary-channel: #00A170;
		--pitch8-primary-channel: #50FFC9;
		--pitch8-secondary-note: #00C78A;
		--pitch8-primary-note: #83FFD9;
		--pitch9-secondary-channel: #49b374;
		--pitch9-primary-channel: #8affa9;
		--pitch9-secondary-note: #26815f;
		--pitch9-primary-note: #c8ffde;
		--pitch10-secondary-channel: #58a747;
		--pitch10-primary-channel: #bbffaa;
		--pitch10-secondary-note: #1d7c48;
		--pitch10-primary-note: #c7ffbc;
		--noise1-secondary-channel: #42829b;
		--noise1-primary-channel: #97d3fc;
		--noise1-secondary-note: #3f53b3;
		--noise1-primary-note: #97d3fc;
		--noise2-secondary-channel: #6354bb;
		--noise2-primary-channel: #9a89ff;
		--noise2-secondary-note: #5f4dcd;
		--noise2-primary-note: #c6bcff;
		--noise3-secondary-channel: #704a95;
		--noise3-primary-channel: #c285ff;
		--noise3-secondary-note: #ad5aff;
		--noise3-primary-note: #d3a6ff;
		--noise4-secondary-channel: #a53c65;
		--noise4-primary-channel: #f794bb;
		--noise4-secondary-note: #cb5080;
		--noise4-primary-note: #f794bb;
		--noise5-secondary-channel: #9b2d2d;
		--noise5-primary-channel: #ff7676;
		--noise5-secondary-note: #cb4444;
		--noise5-primary-note: #ff9999;
		--mod1-secondary-channel: #b7613c;
		--mod1-primary-channel: #ff9f76;
		--mod1-secondary-note: #e77e52;
		--mod1-primary-note: #ffb99b;
		--mod2-secondary-channel: #916d34;
		--mod2-primary-channel: #fece80;
		--mod2-secondary-note: #c58b35;
		--mod2-primary-note: #ffdda5;
		--mod3-secondary-channel: #83761a;
		--mod3-primary-channel: #fdf68c;
		--mod3-secondary-note: #c18e00;
		--mod3-primary-note: #fdf68c;
		--mod4-secondary-channel: #a86436;
		--mod4-primary-channel: #c8a825;
		--mod4-secondary-note: #e8ba46;
		--mod4-primary-note: #c8a825;
		--mod-label-primary: #37325e;
		--mod-label-secondary-text: #6e8aa7;
		--mod-label-primary-text: #c1ffff;
}`,"ultrabox dark":`
:root {
/*--mod-title: #CCCCCC;*/
--loop-accent: #CCCCCC;
--playhead: #CCCCCC;
/*--primary-text: #CCCCCC;
--hover-preview: #CCCCCC;*/
--link-accent: #FF8EC5;
--indicator-primary: #FF8EC5;
/*--indicator-primary: #CCCCCC;*/
/*--indicator-secondary: #E856B2;*/
--white-piano-key: #CCCCCC;
/*--black-piano-key: #444;*/
--text-selection: #932253;
--oscilloscope-line-L: #CCCCCC;
--oscilloscope-line-R: #932253;
--pitch-channel-limit: 8;
--pitch1-secondary-channel: #A83030;
--pitch1-primary-channel:   #FF7C7C;
--pitch1-secondary-note:    #B51532;
--pitch1-primary-note:      #FFA3A3;

--pitch2-secondary-channel: #C75000;
--pitch2-primary-channel:   #FF9752;
--pitch2-secondary-note:    #FF771C;
--pitch2-primary-note:      #FFCDAB;

--pitch3-secondary-channel: #A1A100;
--pitch3-primary-channel: #FFFF25;
--pitch3-secondary-note: #C7C700;
--pitch3-primary-note: #FFFF92;

--pitch4-secondary-channel: #139620;
--pitch4-primary-channel:   #25ff3a;
--pitch4-secondary-note:    #21FF33;
--pitch4-primary-note:      #C0FFB5;

--pitch5-secondary-channel: #0099A1;
--pitch5-primary-channel:   #25F3FF;
--pitch5-secondary-note:    #00BDC7;
--pitch5-primary-note:      #92F9FF;

--pitch6-secondary-channel: #58599E;
--pitch6-primary-channel:   #5EA3FF;
--pitch6-secondary-note:    #183AC7;
--pitch6-primary-note:      #9EC8FF;

--pitch7-secondary-channel: #6038a5;
--pitch7-primary-channel:   #C760FF;
--pitch7-secondary-note:    #5433A0;
--pitch7-primary-note:      #D99EFF;

--pitch8-secondary-channel: #932253;
--pitch8-primary-channel:   #FF60A5;
--pitch8-secondary-note:    #8E1C4E;
--pitch8-primary-note:      #FF8EC5;

/*--track-editor-bg-mod: #632D45;
--track-editor-bg-mod-dim: #3F1D2C;*/
}`,"modbox classic":`
			:root {
				--loop-accent: #9900cc;
					--pitch-channel-limit: 6;
					--noise-channel-limit: 4;
				--pitch1-secondary-note:    #0099a1;
				--pitch1-primary-note:      #25f3ff;
				--pitch2-secondary-channel: #439143;
				--pitch2-primary-channel:   #44ff44;
				--pitch2-secondary-note:    #439143;
				--pitch2-primary-note:      #44ff44;
				--pitch3-secondary-channel: #a1a100;
				--pitch3-primary-channel:   #ffff25;
				--pitch3-secondary-note:    #a1a100;
				--pitch3-primary-note:      #ffff25;
				--pitch4-secondary-channel: #c75000;
				--pitch4-primary-channel:   #ff9752;
				--pitch4-secondary-note:    #c75000;
				--pitch4-primary-note:      #ff9752;
				--pitch5-secondary-note:    #d020d0;
				--pitch5-primary-note:      #ff90ff;
				--pitch6-secondary-channel: #552377;
				--pitch6-primary-channel:   #9f31ea;
				--pitch6-secondary-note:    #552377;
				--pitch6-primary-note:      #9f31ea;
				--pitch7-secondary-channel: #221b89;
				--pitch7-primary-channel:   #2b6aff;
				--pitch7-secondary-note:    #221b89;
				--pitch7-primary-note:      #2b6aff;
				--pitch8-secondary-channel: #00995f;
				--pitch8-primary-channel:   #00ff9f;
				--pitch8-secondary-note:    #00995f;
				--pitch8-primary-note:      #00ff9f;
				--pitch9-secondary-channel: #d6b03e;
				--pitch9-primary-channel:   #ffbf00;
				--pitch9-secondary-note:    #d6b03e;
				--pitch9-primary-note:      #ffbf00;
				--pitch10-secondary-channel:#b25915;
				--pitch10-primary-channel:  #d85d00;
				--pitch10-secondary-note:   #b25915;
				--pitch10-primary-note:     #d85d00;
				--noise1-secondary-channel: #991010;
				--noise1-primary-channel:   #ff1616;
				--noise1-secondary-note:    #991010;
				--noise1-primary-note:      #ff1616;
				--noise2-secondary-channel: #aaaaaa;
				--noise2-primary-channel:   #ffffff;
				--noise2-secondary-note:    #aaaaaa;
				--noise2-primary-note:      #ffffff;
				--noise3-secondary-channel: #5869BD;
				--noise3-primary-channel:   #768dfc;
				--noise3-secondary-note:    #5869BD;
				--noise3-primary-note:      #768dfc;
				--noise4-secondary-channel: #7c9b42;
				--noise4-primary-channel:   #a5ff00;
				--noise4-secondary-note:    #7c9b42;
				--noise4-primary-note:      #a5ff00;
				--noise5-secondary-channel: #7c9b42;
         --mod1-secondary-channel: #0099a1;
				--mod1-primary-channel:   #25f3ff;
				--mod1-secondary-note:    #0099a1;
				--mod1-primary-note:      #25f3ff;
				--mod2-secondary-channel: #439143;
				--mod2-primary-channel:   #44ff44;
				--mod2-secondary-note:    #439143;
				--mod2-primary-note:      #44ff44;
				--mod3-secondary-channel: #a1a100;
				--mod3-primary-channel:   #ffff25;
				--mod3-secondary-note:    #a1a100;
				--mod3-primary-note:      #ffff25;
				--mod4-secondary-channel: #c75000;
				--mod4-primary-channel:   #ff9752;
				--mod4-secondary-note:    #c75000;
				--mod4-primary-note:      #ff9752;
				--text-disabled-icon: \u2717 ;
			}
			`,zefbox:`
			:root {
				--loop-accent: #C3593D;
				--pitch1-secondary-channel: #06c400;
				--pitch1-primary-channel:   #08ff00;
				--pitch1-secondary-note:    #06c400;
				--pitch1-primary-note:      #06e000;
				--pitch2-secondary-channel: #00bf97;
				--pitch2-primary-channel:   #00ffcb;
				--pitch2-secondary-note:    #00bf97;
				--pitch2-primary-note:      #00edbc;
				--pitch3-secondary-channel: #b5b000;
				--pitch3-primary-channel:   #fffa00;
				--pitch3-secondary-note:    #b5b000;
				--pitch3-primary-note:      #e0db00;
				--pitch4-secondary-channel: #c90000;
				--pitch4-primary-channel:   #e20000;
				--pitch4-secondary-note:    #c90000;
				--pitch4-primary-note:      #e20000;
				--pitch5-secondary-channel: #d17d12;
				--pitch5-primary-channel:   #ff9e21;
				--pitch5-secondary-note:    #d17d12;
				--pitch5-primary-note:      #ef9017;
				--pitch6-secondary-channel: #d35bc8;
				--pitch6-primary-channel:   #ffa5f7;
				--pitch6-secondary-note:    #d35bc8;
				--pitch6-primary-note:      #fc64ee;
				--pitch7-secondary-channel: #D00000;
				--pitch7-primary-channel:   #FF4444;
				--pitch7-secondary-note:    #D00000;
				--pitch7-primary-note:      #FF4444;
				--pitch8-secondary-channel: #00C700;
				--pitch8-primary-channel:   #A0FFA0;
				--pitch8-secondary-note:    #00C700;
				--pitch8-primary-note:      #A0FFA0;
				--pitch9-secondary-channel: #A88981;
				--pitch9-primary-channel:   #F1C3B7;
				--pitch9-secondary-note:    #A88981;
				--pitch9-primary-note:      #F1C3B7;
				--pitch10-secondary-channel:#0C0A99;
				--pitch10-primary-channel:  #0000EE;
				--pitch10-secondary-note:   #0C0A99;
				--pitch10-primary-note:     #0000EE;
				--noise1-secondary-channel: #ABABAB;
				--noise1-primary-channel:   #D6D6D6;
				--noise1-secondary-note:    #ABABAB;
				--noise1-primary-note:      #D6D6D6;
				--noise2-secondary-channel: #A18F51;
				--noise2-primary-channel:   #F6BB6A;
				--noise2-secondary-note:    #A18F51;
				--noise2-primary-note:      #F6BB6A;
				--noise3-secondary-channel: #5869BD;
				--noise3-primary-channel:   #768DFC;
				--noise3-secondary-note:    #5869BD;
				--noise3-primary-note:      #768DFC;
				--noise4-secondary-channel: #8888D0;
				--noise4-primary-channel:   #D0D0FF;
				--noise4-secondary-note:    #8888D0;
				--noise4-primary-note:      #D0D0FF;
				--noise5-secondary-channel: #B7148E;
				--noise5-primary-channel:   #E819B4;
				--noise5-secondary-note:    #B7148E;
				--noise5-primary-note:      #E819B4;
       --mod1-secondary-channel: #06c400;
				--mod1-primary-channel:   #08ff00;
				--mod1-secondary-note:    #06c400;
				--mod1-primary-note:      #06e000;
				--mod2-secondary-channel: #00bf97;
				--mod2-primary-channel:   #00ffcb;
				--mod2-secondary-note:    #00bf97;
				--mod2-primary-note:      #00edbc;
				--mod3-secondary-channel: #b5b000;
				--mod3-primary-channel:   #fffa00;
				--mod3-secondary-note:    #b5b000;
				--mod3-primary-note:      #e0db00;
				--mod4-secondary-channel: #c90000;
				--mod4-primary-channel:   #e20000;
				--mod4-secondary-note:    #c90000;
				--mod4-primary-note:      #e20000;
				}
			`,"sandbox classic":`
			:root {
				--loop-accent: #198195;
					--pitch-channel-limit: 6;
					--noise-channel-limit: 4;
				--pitch1-secondary-channel: #539999;
				--pitch1-primary-channel:   #5EB1B1;
				--pitch1-secondary-note:    #539999;
				--pitch1-primary-note:      #5EB1B1;
				--pitch2-secondary-channel: #95933C;
				--pitch2-primary-channel:   #B0AD44;
				--pitch2-secondary-note:    #95933C;
				--pitch2-primary-note:      #B0AD44;
				--pitch3-secondary-channel: #E75566;
				--pitch3-primary-channel:   #FF9AA6;
				--pitch3-secondary-note:    #E75566;
				--pitch3-primary-note:      #FF9AA6;
				--pitch4-secondary-channel: #8B4343;
				--pitch4-primary-channel:   #FF8844;
				--pitch4-secondary-note:    #8B4343;
				--pitch4-primary-note:      #FF8844;
				--pitch5-secondary-channel: #888888;
				--pitch5-primary-channel:   #BBBBBB;
				--pitch5-secondary-note:    #888888;
				--pitch5-primary-note:      #BBBBBB;
				--pitch6-secondary-channel: #BB6906;
				--pitch6-primary-channel:   #FE8D00;
				--pitch6-secondary-note:    #BB6906;
				--pitch6-primary-note:      #FE8D00;
				--pitch7-secondary-channel: #539999;
				--pitch7-primary-channel:   #5EB1B1;
				--pitch7-secondary-note:    #539999;
				--pitch7-primary-note:      #5EB1B1;
				--pitch8-secondary-channel: #95933C;
				--pitch8-primary-channel:   #B0AD44;
				--pitch8-secondary-note:    #95933C;
				--pitch8-primary-note:      #B0AD44;
				--pitch9-secondary-channel: #E75566;
				--pitch9-primary-channel:   #FF9AA6;
				--pitch9-secondary-note:    #E75566;
				--pitch9-primary-note:      #FF9AA6;
				--pitch10-secondary-channel: #8B4343;
				--pitch10-primary-channel:   #FF8844;
				--pitch10-secondary-note:    #8B4343;
				--pitch10-primary-note:      #FF8844;			
				--noise1-secondary-channel: #ABABAB;
				--noise1-primary-channel:   #D6D6D6;
				--noise1-secondary-note:    #ABABAB;
				--noise1-primary-note:      #D6D6D6;
				--noise2-secondary-channel: #A18F51;
				--noise2-primary-channel:   #F6BB6A;
				--noise2-secondary-note:    #A18F51;
				--noise2-primary-note:      #F6BB6A;
				--noise3-secondary-channel: #5869BD;
				--noise3-primary-channel:   #768DFC;
				--noise3-secondary-note:    #5869BD;
				--noise3-primary-note:      #768DFC;
				--noise4-secondary-channel: #8888D0;
				--noise4-primary-channel:   #D0D0FF;
				--noise4-secondary-note:    #8888D0;
				--noise4-primary-note:      #D0D0FF;
				--noise5-secondary-channel: #A18F51;
				--noise5-primary-channel:   #F6BB6A;
				--noise5-secondary-note:    #A18F51;
				--noise5-primary-note:      #F6BB6A;			
         	--mod1-secondary-channel: #539999;
				--mod1-primary-channel:   #5EB1B1;
				--mod1-secondary-note:    #539999;
				--mod1-primary-note:      #5EB1B1;
				--mod2-secondary-channel: #95933C;
				--mod2-primary-channel:   #B0AD44;
				--mod2-secondary-note:    #95933C;
				--mod2-primary-note:      #B0AD44;
				--mod3-secondary-channel: #E75566;
				--mod3-primary-channel:   #FF9AA6;
				--mod3-secondary-note:    #E75566;
				--mod3-primary-note:      #FF9AA6;
				--mod4-secondary-channel: #8B4343;
				--mod4-primary-channel:   #FF8844;
				--mod4-secondary-note:    #8B4343;
				--mod4-primary-note:      #FF8844;
				}
			`,harrybox:`
			:root {
				--loop-accent: #9900cc;
					--noise-channel-limit: 2;
				--pitch1-secondary-channel: #00ffff;
				--pitch1-primary-channel:   #00ffff;
				--pitch1-secondary-note:    #00ffff;
				--pitch1-primary-note:      #00ffff;
				--pitch2-secondary-channel: #00d8d8;
				--pitch2-primary-channel:   #00d8d8;
				--pitch2-secondary-note:    #00d8d8;
				--pitch2-primary-note:      #00d8d8;
				--pitch3-secondary-channel: #00adad;
				--pitch3-primary-channel:   #00adad;
				--pitch3-secondary-note:    #00adad;
				--pitch3-primary-note:      #00adad;
				-pitch4-secondary-channel: #008c8c;
				--pitch4-primary-channel:   #008c8c;
				--pitch4-secondary-note:    #008c8c;
				--pitch4-primary-note:      #008c8c;
				--pitch5-secondary-channel: #005b5b;
				--pitch5-primary-channel:   #005b5b;
				--pitch5-secondary-note:    #005b5b;
				--pitch5-primary-note:      #005b5b;
				--pitch6-secondary-channel: #003333;
				--pitch6-primary-channel:   #003333;
				--pitch6-secondary-note:    #003333;
				--pitch6-primary-note:      #003333;
				--pitch7-secondary-channel: #00ffff;
				--pitch7-primary-channel:   #00ffff;
				--pitch7-secondary-note:    #00ffff;
				--pitch7-primary-note:      #00ffff;
				--pitch8-secondary-channel: #00ffff;
				--pitch8-primary-channel:   #00ffff;
				--pitch8-secondary-note:    #00ffff;
				--pitch8-primary-note:      #00ffff;
				--pitch9-secondary-channel: #00ffff;
				--pitch9-primary-channel:   #00ffff;
				--pitch9-secondary-note:    #00ffff;
				--pitch9-primary-note:      #00ffff;
				--pitch10-secondary-channel:#00ffff;
				--pitch10-primary-channel:  #00ffff;
				--pitch10-secondary-note:   #00ffff;
				--pitch10-primary-note:     #00ffff;
				--noise1-secondary-channel: #991010;
				--noise1-primary-channel:   #ff1616;
				--noise1-secondary-note:    #991010;
				--noise1-primary-note:      #ff1616;
				--noise2-secondary-channel: #aaaaaa;
				--noise2-primary-channel:   #ffffff;
				--noise2-secondary-note:    #aaaaaa;
				--noise2-primary-note:      #ffffff;
				--noise3-secondary-channel: #991010;
				--noise3-primary-channel:   #ff1616;
				--noise3-secondary-note:    #991010;
				--noise3-primary-note:      #ff1616;
				--noise4-secondary-channel: #aaaaaa;
				--noise4-primary-channel:   #ffffff;
				--noise4-secondary-note:    #aaaaaa;
				--noise4-primary-note:      #ffffff;
				--noise5-secondary-channel: #991010;
				--noise5-primary-channel:   #ff1616;
				--noise5-secondary-note:    #991010;
				--noise5-primary-note:      #ff1616;
         	--mod1-secondary-channel: #00ffff;
				--mod1-primary-channel:   #00ffff;
				--mod1-secondary-note:    #00ffff;
				--mod1-primary-note:      #00ffff;
				--mod2-secondary-channel: #00d8d8;
				--mod2-primary-channel:   #00d8d8;
				--mod2-secondary-note:    #00d8d8;
				--mod2-primary-note:      #00d8d8;
				--mod3-secondary-channel: #00adad;
				--mod3-primary-channel:   #00adad;
				--mod3-secondary-note:    #00adad;
				--mod3-primary-note:      #00adad;
				-mod4-secondary-channel: #008c8c;
				--mod4-primary-channel:   #008c8c;
				--mod4-secondary-note:    #008c8c;
				--mod4-primary-note:      #008c8c;
				}
			`,brucebox:`
		:root {
				font: 16px/2 cursive;
				--page-margin: #4667CE;
				--editor-background: #4667CE;
					--track-editor-bg-pitch-dim: #444;
					--track-editor-bg-noise-dim: #444;
					--pitch-channel-limit: 3;
					--noise-channel-limit: 1;
				--pitch1-secondary-channel: #bda822;
				--pitch1-primary-channel:   #fcdb00;
				--pitch1-secondary-note:    #bda822;
				--pitch1-primary-note:      #fcdb00;
				--pitch2-secondary-channel: #612278;
				--pitch2-primary-channel:   #bb00ff;
				--pitch2-secondary-note:    #612278;
				--pitch2-primary-note:      #bb00ff;
				--pitch3-secondary-channel: #8b4343;
				--pitch3-primary-channel:   #ff8844;
				--pitch3-secondary-note:    #8b4343;
				--pitch3-primary-note:      #ff8844;
				--pitch4-secondary-channel: #bda822;
				--pitch4-primary-channel:   #fcdb00;
				--pitch4-secondary-note:    #bda822;
				--pitch4-primary-note:      #fcdb00;
				--pitch5-secondary-channel: #612278;
				--pitch5-primary-channel:   #bb00ff;
				--pitch5-secondary-note:    #612278;
				--pitch5-primary-note:      #bb00ff;
				--pitch6-secondary-channel: #8b4343;
				--pitch6-primary-channel:   #ff8844;
				--pitch6-secondary-note:    #8b4343;
				--pitch6-primary-note:      #ff8844;
				--pitch7-secondary-channel: #bda822;
				--pitch7-primary-channel:   #fcdb00;
				--pitch7-secondary-note:    #bda822;
				--pitch7-primary-note:      #fcdb00;
				--pitch8-secondary-channel: #612278;
				--pitch8-primary-channel:   #bb00ff;
				--pitch8-secondary-note:    #612278;
				--pitch8-primary-note:      #bb00ff;
				--pitch9-secondary-channel: #8b4343;
				--pitch9-primary-channel:   #ff8844;
				--pitch9-secondary-note:    #8b4343;
				--pitch9-primary-note:      #ff8844;
				--pitch10-secondary-channel: #bda822;
				--pitch10-primary-channel:   #fcdb00;
				--pitch10-secondary-note:    #bda822;
				--pitch10-primary-note:      #fcdb00;
				--noise1-secondary-channel: #991010;
				}

				.trackContainer .noSelection {
				background: black !important;
				}

				span input, 
				div.harmonics svg,
				div.spectrum svg,
				div.filterEditor svg,
				div.fadeInOut svg,
				div.loopEditor svg,
				svg#firstImage,
				div.trackContainer div.noSelection
				{
					background: black !important;
				}

				input, textarea {
					background-color: black !important;
				}

				#text-content > section > h1 {
					color: white;
				}

			`,"shitbox 2.0":`
			:root {
			--page-margin: maroon;
					--playhead: firebrick;
					--primary-text: silver;
				--text-selection: rgba(139,69,19,0.99);
					--box-selection-fill: rgba(220,20,60,0.2);
					--loop-accent: #841;
					--link-accent: #841;
					--ui-widget-background: #800;
					--ui-widget-focus: #a00;
					--pitch-background: #700;
					--tonic: #522;
					--fifth-note: #f75;
					--pitch-channel-limit: 6;
					--noise-channel-limit: 3;
				--pitch1-secondary-channel: #7e4a35;
					--pitch1-primary-channel:   #c27251;
					--pitch1-secondary-note:    #7e4a35;
					--pitch1-primary-note:      #f09571;
					--pitch2-secondary-channel: #998a5c;
					--pitch2-primary-channel:   #d9c27c;
					--pitch2-secondary-note:    #998a5c;
					--pitch2-primary-note:      #fae196;
					--pitch3-secondary-channel: #9c927c;
					--pitch3-primary-channel:   #dbceb0;
					--pitch3-secondary-note:    #9c927c;
					--pitch3-primary-note:      #eddebb;
					--pitch4-secondary-channel: #838060;
					--pitch4-primary-channel:   #ccc795;
					--pitch4-secondary-note:    #838060;
					--pitch4-primary-note:      #f2ecb1;
					--pitch5-secondary-channel: #8b6f47;
					--pitch5-primary-channel:   #d1a76b;
					--pitch5-secondary-note:    #8b6f47;
					--pitch5-primary-note:      #ffcc82;
					--pitch6-secondary-channel: #a96e5b;
					--pitch6-primary-channel:   #e3967d;
					--pitch6-secondary-note:    #a96e5b;
					--pitch6-primary-note:      #ffa68a;
						--pitch7-secondary-channel: #7e4a35;
					--pitch7-primary-channel:   #c27251;
					--pitch7-secondary-note:    #7e4a35;
					--pitch7-primary-note:      #f09571;
					--pitch8-secondary-channel: #998a5c;
					--pitch8-primary-channel:   #d9c27c;
					--pitch8-secondary-note:    #998a5c;
					--pitch8-primary-note:      #fae196;
					--pitch9-secondary-channel: #9c927c;
					--pitch9-primary-channel:   #dbceb0;
					--pitch9-secondary-note:    #9c927c;
					--pitch9-primary-note:      #eddebb;
					--pitch10-secondary-channel: #838060;
					--pitch10-primary-channel:   #ccc795;
					--pitch10-secondary-note:    #838060;
					--pitch10-primary-note:      #f2ecb1;
					--noise4-secondary-channel: #6f6f6f;
					--noise4-primary-channel:   #aaaaaa;
					--noise4-secondary-note:    #a7a7a7;
					--noise4-primary-note:      #e0e0e0;
					--noise5-secondary-channel: #996633;
					--noise5-primary-channel:   #ddaa77;
					--noise5-secondary-note:    #cc9966;
					--noise5-primary-note:      #f0d0bb;
         --mod1-secondary-channel: #7e4a35;
					--mod1-primary-channel:   #c27251;
					--mod1-secondary-note:    #7e4a35;
					--mod1-primary-note:      #f09571;
					--mod2-secondary-channel: #998a5c;
					--mod2-primary-channel:   #d9c27c;
					--mod2-secondary-note:    #998a5c;
					--mod2-primary-note:      #fae196;
					--mod3-secondary-channel: #9c927c;
					--mod3-primary-channel:   #dbceb0;
					--mod3-secondary-note:    #9c927c;
					--mod3-primary-note:      #eddebb;
					--mod4-secondary-channel: #838060;
					--mod4-primary-channel:   #ccc795;
					--mod4-secondary-note:    #838060;
					--mod4-primary-note:      #f2ecb1;
					--note-flash: firebrick;
  					--note-flash-secondary: firebrick;
				}
			`,"shitbox 3.0":`
			
			:root {
				font: 20px/2 monospace;
				--page-margin: #252525;
				--editor-background: #252525;
				--primary-text: #C8C8C8;
				--link-accent: #945800;
					--track-editor-bg-pitch-dim: #444;
					--track-editor-bg-noise-dim: #444;
					--pitch-channel-limit: 6;
					--noise-channel-limit: 3;
					--text-disabled-icon: \u2717 ;
				}

				.beepboxEditor input[type="range"]::-moz-range-thumb {
					width: 8px !important;
				  }

				button.playButton {
					width: 80px;
				}
				button.prevBarButton {
					width: 40px;
					left:-5px;
				}
				button.nextBarButton {
					width: 40px;
				}

				.trackContainer .noSelection {
				background: black !important;
				}

				span input, 
				div.harmonics svg,
				div.spectrum svg,
				div.filterEditor svg,
				div.fadeInOut svg,
				div.loopEditor svg,
				svg#firstImage 
				{
					background: black !important;
				}

				.beepboxEditor {
					line-height: 1.25;
				}

				#text-content {
					font-size: 32px;
					line-height: 40px;
				}

				#text-content > section > h1 {
					color: #C8C8C8;
					}
			`,nerdbox:`
			:root {
					--pitch-channel-limit: 9;
					--noise-channel-limit: 3;
				--pitch1-secondary-channel: #139620;
				--pitch1-primary-channel:   #25ff3a;
				--pitch1-secondary-note:    #139620;
				--pitch1-primary-note:      #25ff3a;
				--pitch2-secondary-channel: #109986;
				--pitch2-primary-channel:   #1cffe0;
				--pitch2-secondary-note:    #109986;
				--pitch2-primary-note:      #1cffe0;
				--pitch3-secondary-channel: #127296;
				--pitch3-primary-channel:   #21c3ff;
				--pitch3-secondary-note:    #127296;
				--pitch3-primary-note:      #21c3ff;
				--pitch4-secondary-channel: #6038a5;
				--pitch4-primary-channel:   #9456ff;
				--pitch4-secondary-note:    #6038a5;
				--pitch4-primary-note:      #ff35e0;
				--pitch5-secondary-channel: #a52491;
				--pitch5-primary-channel:   #ff35e0;
				--pitch5-secondary-note:    #a52491;
				--pitch5-primary-note:      #af3221;
				--pitch6-secondary-channel: #af3221;
				--pitch6-primary-channel:   #ff4a32;
				--pitch6-secondary-note:    #af3221;
				--pitch6-primary-note:      #ff4a32;
				--pitch7-secondary-channel: #ad6e0f;
				--pitch7-primary-channel:   #ffa216;
				--pitch7-secondary-note:    #ad6e0f;
				--pitch7-primary-note:      #ffa216;
				--pitch8-secondary-channel: #ad6e0f;
				--pitch8-primary-channel:   #ffa216;
				--pitch8-secondary-note:    #ad6e0f;
				--pitch8-primary-note:      #ffa216;
				--pitch9-secondary-channel: #a7b512;
				--pitch9-primary-channel:   #ebff19;
				--pitch9-secondary-note:    #a7b512;
				--pitch9-primary-note:      #ebff19;
				--pitch10-secondary-channel:#70ad1b;
				--pitch10-primary-channel:  #a4ff26;
				--pitch10-secondary-note:   #70ad1b;
				--pitch10-primary-note:     #a4ff26;
				--noise1-secondary-channel: #68706f;
				--noise1-primary-channel:   #a6b2b1;
				--noise1-secondary-note:    #68706f;
				--noise1-primary-note:      #a6b2b1;
				--noise2-secondary-channel: #665c64;
				--noise2-primary-channel:   #a396a1;
				--noise2-secondary-note:    #665c64;
				--noise2-primary-note:      #a396a1;
				--noise3-secondary-channel: #60605a;
				--noise3-primary-channel:   #afaea3;
				--noise3-secondary-note:    #60605a;
				--noise3-primary-note:      #afaea3;
			--noise4-secondary-channel: #665c64;
			--noise4-primary-channel:   #a396a1;
				--noise4-secondary-note:    #665c64;
				--noise4-primary-note:      #a396a1;
				--noise5-secondary-channel: #60605a;
				--noise5-primary-channel:   #afaea3;
				--noise5-secondary-note:    #60605a;
				--noise5-primary-note:      #afaea3;
         --mod1-secondary-channel: #139620;
				--mod1-primary-channel:   #25ff3a;
				--mod1-secondary-note:    #139620;
				--mod1-primary-note:      #25ff3a;
				--mod2-secondary-channel: #109986;
				--mod2-primary-channel:   #1cffe0;
				--mod2-secondary-note:    #109986;
				--mod2-primary-note:      #1cffe0;
				--mod3-secondary-channel: #127296;
				--mod3-primary-channel:   #21c3ff;
				--mod3-secondary-note:    #127296;
				--mod3-primary-note:      #21c3ff;
				--mod4-secondary-channel: #6038a5;
				--mod4-primary-channel:   #9456ff;
				--mod4-secondary-note:    #6038a5;
				--mod4-primary-note:      #ff35e0;
				}
			`,nepbox:`
			:root {
				--page-margin: #000;
				--editor-background: #060606;
				--hover-preview: #fff;
				--playhead: rgb(0, 242, 255);
				--primary-text: #00fff5;
				--secondary-text: #a82f2f;
				--inverted-text: #000;
				--text-selection: rgba(98, 46, 164, .99);
				--box-selection-fill: #b74a4a;
				--loop-accent: #7744FF;
				--link-accent: #ff00e1;
				--ui-widget-background: #484848;
				--ui-widget-focus: #3e3e3e;
				--pitch-background: #0a2d44;
				--tonic: #9150ff;
				--fifth-note: #900;
				--white-piano-key: #353535;
				--black-piano-key: #fff;
				--white-piano-key-text: #fff;
				--black-piano-key-text: #000;
				--track-editor-bg-pitch: #424242;
				--track-editor-bg-pitch-dim: #000;
				--track-editor-bg-noise: #424242;
				--track-editor-bg-noise-dim: #000;
				--track-editor-bg-mod: #3c3c3c;
				--track-editor-bg-mod-dim: #000;
				--multiplicative-mod-slider: #fff;
				--overwriting-mod-slider: #9d9d9d;
				--indicator-primary: #f00;
				--indicator-secondary: #919191;
				--select2-opt-group: #5d576f;
				--input-box-outline: #626262;
				--mute-button-normal: #9a00ff;
				--mute-button-mod: #00fff7;
				--mod-label-primary: #2b2b2b;
				--pitch-channel-limit: 4;
				--noise-channel-limit: 2;

				--pitch1-secondary-channel: #c13cbf;
				--pitch1-primary-channel: #f75dff;
				--pitch1-secondary-note: #b930a2;
				--pitch1-primary-note: #fca5ff;
				--pitch2-secondary-channel: #800000;
				--pitch2-primary-channel: #f00;
				--pitch2-secondary-note: #8c2121;
				--pitch2-primary-note: #ff5252;
				--pitch3-secondary-channel: #004bb3;
				--pitch3-primary-channel: #1792ff;
				--pitch3-secondary-note: #005cb3;
				--pitch3-primary-note: #00ffe9;
				--pitch4-secondary-channel: #a48800;
				--pitch4-primary-channel: #fb0;
				--pitch4-secondary-note: #9c4100;
				--pitch4-primary-note: #ffd84e;
				--noise1-secondary-channel: #868686;
				--noise1-primary-channel: #fff;
				--noise1-secondary-note: #868686;
				--noise1-primary-note: #fff;
				--noise2-secondary-channel: #805300;
				--noise2-primary-channel: #ff8c00;
				--noise2-secondary-note: #6a3500;
				--noise2-primary-note: #a85400;
				--mod1-secondary-channel: #6c0000;
				--mod1-primary-channel: #ff3e3e;
				--mod1-secondary-note: #6c0000;
				--mod1-primary-note: #ff3e3e;
				--mod2-secondary-channel: #d25a00;
				--mod2-primary-channel: #fdff00;
				--mod2-secondary-note: #d25a00;
				--mod2-primary-note: #fdff00;
				--mod3-secondary-channel: #046000;
				--mod3-primary-channel: #23ff1b;
				--mod3-secondary-note: #046000;
				--mod3-primary-note: #23ff1b;
				--mod4-secondary-channel: #3b2bae;
				--mod4-primary-channel: #0c79ff;
				--mod4-secondary-note: #3b2bae;
				--mod4-primary-note: #0c79ff;
				--disabled-note-secondary: #696969;
				}
			`,"cardboardbox classic":`
				:root {
					--page-margin: #0f0700;
--editor-background: #0f0700;
--hover-preview: #75461d;
--playhead: #75461d;
--primary-text: #ddd;
--secondary-text: #8e695b;
--text-selection: #75461d;
--box-selection-fill: rgba(117, 70, 29,0.5);
--loop-accent: #75461d;
--link-accent: #75461d;
--ui-widget-background: #574a3e;
--ui-widget-focus: #756453;
--pitch-background: #361900;
--tonic: #fdba9a;
--fifth-note: #7f78d2;
--pitch1-secondary-channel: #798566;
--pitch1-primary-channel: #9dab86;
--pitch1-secondary-note: #798566;
--pitch1-primary-note: #9dab86;
--pitch2-secondary-channel: #a6733d;
--pitch2-primary-channel: #e6a157;
--pitch2-secondary-note: #a6733d;
--pitch2-primary-note: #e6a157;
--pitch3-secondary-channel: #874c27;
--pitch3-primary-channel: #eb8242;
--pitch3-secondary-note: #874c27;
--pitch3-primary-note: #eb8242;
--pitch4-secondary-channel: #395866;
--pitch4-primary-channel: #537d91;
--pitch4-secondary-note: #395866;
--pitch4-primary-note: #537d91;
--pitch5-secondary-channel: #779992;
--pitch5-primary-channel: #a4d1c8;
--pitch5-secondary-note: #779992;
--pitch5-primary-note: #a4d1c8;
--pitch7-secondary-channel: #300707;
--pitch7-primary-channel: #560d0d;
--pitch7-secondary-note: #300707;
--pitch7-primary-note: #560d0d;
--pitch8-secondary-channel: #486312;
--pitch8-primary-channel: #76a21e;
--pitch8-secondary-note: #486312;
--pitch8-primary-note: #76a21e;
--pitch9-secondary-channel: #4a1242;
--pitch9-primary-channel: #721b65;
--pitch9-secondary-note: #4a1242;
--pitch9-primary-note: #721b65;
--pitch10-secondary-channel: #7a312d;
--pitch10-primary-channel: #f8615a;
--pitch10-secondary-note: #7a312d;
--pitch10-primary-note: #f8615a;
--noise1-secondary-channel: #5f6582;
--noise1-primary-channel: #a6b1e1;
--noise1-secondary-note: #5f6582;
--noise1-primary-note: #a6b1e1;
--noise4-secondary-channel: #6B3E8E;
--noise5-secondary-channel: #996633;
--noise5-primary-channel: #ddaa77;
--noise5-secondary-note: #cc9966;
--noise5-primary-note: #f0d0bb;
--mod1-secondary-channel: #339955;
				}
			`,"blubox classic":`
			:root {
				--page-margin: #040410;
					--editor-background: #040410;
					--secondary-text: #84859a;
					--box-selection-fill: #044b94;
					--link-accent: #024ACA;
					--ui-widget-background: #393e4f;
					--ui-widget-focus: #6d6886;
					--pitch-background: #393e4f;
					--tonic: #725491;
					--fifth-note: #54547a;
					--track-editor-bg-pitch: #393e4f;
					--track-editor-bg-pitch-dim: #1c1d28;
					--track-editor-bg-noise: #3d3535;
					--track-editor-bg-noise-dim: #161313;
					--track-editor-bg-mod: #283560;
					--track-editor-bg-mod-dim: #0a101f;
					--multiplicative-mod-slider: #606c9f;
					--overwriting-mod-slider: #6850b5;
					--indicator-primary: #9c64f7;
					--indicator-secondary: #393e4f;
					--select2-opt-group: #5d576f;
					--input-box-outline: #222;
					--mute-button-normal: #886eae;
					--pitch1-secondary-channel: #0A89FF;
					--pitch1-primary-channel:   #024ACA;
					--pitch1-secondary-note:    #0A89FF;
					--pitch1-primary-note:      #024ACA;
					--pitch2-secondary-channel: #0A89FF;
					--pitch2-primary-channel:   #024ACA;
					--pitch2-secondary-note:    #0A89FF;
					--pitch2-primary-note:      #024ACA;
					--pitch3-secondary-channel: #0A89FF;
					--pitch3-primary-channel:   #024ACA;
					--pitch3-secondary-note:    #0A89FF;
					--pitch3-primary-note:      #024ACA;
					--pitch4-secondary-channel: #0A89FF;
					--pitch4-primary-channel:   #024ACA;
					--pitch4-secondary-note:    #0A89FF;
					--pitch4-primary-note:      #024ACA;
					--pitch5-secondary-channel: #0A89FF;
					--pitch5-primary-channel:   #024ACA;
					--pitch5-secondary-note:    #0A89FF;
					--pitch5-primary-note:      #024ACA;
					--pitch6-secondary-channel: #0A89FF;
					--pitch6-primary-channel:   #024ACA;
					--pitch6-secondary-note:    #0A89FF;
					--pitch6-primary-note:      #024ACA;
					--pitch7-secondary-channel: #0A89FF;
					--pitch7-primary-channel:   #024ACA;
					--pitch7-secondary-note:	  #0A89FF;
					--pitch7-primary-note:			#024ACA;
					--pitch8-secondary-channel: #0A89FF;
					--pitch8-primary-channel:   #024ACA;
					--pitch8-secondary-note:    #0A89FF;
					--pitch8-primary-note:      #024ACA;
					--pitch9-secondary-channel: #0A89FF;
					--pitch9-primary-channel:   #024ACA;
					--pitch9-secondary-note:    #0A89FF;
					--pitch9-primary-note:			#024ACA;
					--pitch10-secondary-channel:#0A89FF;
					--pitch10-primary-channel:  #024ACA;
					--pitch10-secondary-note:   #0A89FF;
					--pitch10-primary-note:     #024ACA;
					--noise1-secondary-channel: #0A89FF;
					--noise1-primary-channel:   #024ACA;
					--noise1-secondary-note:    #0A89FF;
					--noise1-primary-note:      #024ACA;
					--noise2-secondary-channel: #0A89FF;
					--noise2-primary-channel:   #024ACA;
					--noise2-secondary-note:    #0A89FF;
					--noise2-primary-note:      #024ACA;
					--noise3-secondary-channel: #0A89FF;
					--noise3-primary-channel:   #024ACA;
					--noise3-secondary-note:    #0A89FF;
					--noise3-primary-note:      #024ACA;
					--noise4-secondary-channel: #0A89FF;
					--noise4-primary-channel:   #024ACA;
					--noise4-secondary-note:    #0A89FF;
					--noise4-primary-note:      #024ACA;
					--mod1-secondary-channel:   #0A89FF;
					--mod1-primary-channel:     #024ACA;
					--mod1-secondary-note:      #0A89FF;
					--mod1-primary-note:        #024ACA;
					--mod2-secondary-channel:   #0A89FF;
					--mod2-primary-channel:     #024ACA;
					--mod2-secondary-note:      #0A89FF;
					--mod2-primary-note:        #024ACA;
					--mod3-secondary-channel:   #0A89FF;
					--mod3-primary-channel:     #024ACA;
					--mod3-secondary-note:      #0A89FF;
					--mod3-primary-note:			  #024ACA;
					--mod4-secondary-channel:   #0A89FF;
					--mod4-primary-channel:     #024ACA;
					--mod4-secondary-note:      #0A89FF;
					--mod4-primary-note:        #024ACA;
					--mod-label-primary:        #282840;
					--mod-label-secondary-text: rgb(87, 86, 120);
					--mod-label-primary-text:   white;
				}
			`,"dogebox classic":`
				:root {
			--page-margin: #0d0063;
			--editor-background: #0D0063;
			--pitch-background: #322c59;
			--tonic: #1c1933;
			--fifth-note: #7b74ad;
			--pitch-channel-limit: 6;
			--noise-channel-limit: 3;
			--pitch1-secondary-channel: #c7ac00;
			--pitch1-primary-channel: #fcf403;
			--pitch1-secondary-note: #c7c700;
			--pitch1-primary-note: #fcf403;
			--pitch2-secondary-channel: #9400b5;
			--pitch2-primary-channel: #ff00ee;
			--pitch2-secondary-note: #9400b5;
			--pitch2-primary-note: #ff00ee;
			--pitch3-secondary-channel: #b37466;
			--pitch3-primary-channel: #ffc6a1;
			--pitch3-secondary-note: #b37466;
			--pitch3-primary-note: #ffc6a1;
			--pitch7-secondary-channel: #c7ac00;
			--pitch7-primary-channel: #fcf403;
			--pitch7-secondary-note: #c7c700;
			--pitch7-primary-note: #fcf403;
			--pitch8-secondary-channel: #9400b5;
			--pitch8-primary-channel: #ff00ee;
			--pitch8-secondary-note: #9400b5;
			--pitch8-primary-note: #ff00ee;
			--pitch9-secondary-channel: #b37466;
			--pitch9-primary-channel: #ffc6a1;
			--pitch9-secondary-note: #b37466;
			--pitch9-primary-note: #ffc6a1;
			--pitch10-secondary-channel: #00a100;
			--pitch10-primary-channel: #50ff50;
			--pitch10-secondary-note: #00c700;
			--pitch10-primary-note: #a0ffa0;
			--noise1-secondary-channel: #95acad;
			--noise1-primary-channel: #cee9eb;
			--noise1-secondary-note: #95acad;
			--noise1-primary-note: #cee9eb;
			--noise4-secondary-channel: #7c9b42;
			--noise4-primary-channel:   #a5ff00;
			--noise4-secondary-note:    #7c9b42;
			--noise4-primary-note:      #a5ff00;
			--noise5-secondary-channel: #7c9b42;
      	 	--mod1-secondary-channel: #c7ac00;
			--mod1-primary-channel: #fcf403;
			--mod1-secondary-note: #c7c700;
			--mod1-primary-note: #fcf403;
			--mod2-secondary-channel: #9400b5;
			--mod2-primary-channel: #ff00ee;
			--mod2-secondary-note: #9400b5;
			--mod2-primary-note: #ff00ee;
			--mod3-secondary-channel: #b37466;
			--mod3-primary-channel: #ffc6a1;
			--mod3-secondary-note: #b37466;
			--mod3-primary-note: #ffc6a1;
			--mod4-secondary-channel: #00a100;
			--mod4-primary-channel: #50ff50;
			--mod4-secondary-note: #00c700;
			--mod4-primary-note: #a0ffa0;
				}
			`,"dogebox dark":`
				:root {
					--page-margin: #0d0063;
					--editor-background: #0D0063;
					--pitch-background: #322c59;
					--tonic: #1c1933;
					--fifth-note: #7b74ad;
					--pitch1-secondary-channel: #c7ac00;
					--pitch1-primary-channel:   #fcf403;
					--pitch1-secondary-note:    #c7c700;
					--pitch1-primary-note:      #fcf403;
					--pitch2-secondary-channel: #9400b5;
					--pitch2-primary-channel:   #ff00ee;
					--pitch2-secondary-note:    #9400b5;
					--pitch2-primary-note:      #ff00ee;
					--pitch3-secondary-channel: #b37466;
					--pitch3-primary-channel:   #ffc6a1;
					--pitch3-secondary-note:    #b37466;
					--pitch3-primary-note:      #ffc6a1;
					--noise1-secondary-channel: #95acad;
					--noise1-primary-channel:   #cee9eb;
					--noise1-secondary-note:    #95acad;
					--noise1-primary-note:      #cee9eb;
				}
			`,"todbox dark mode":`
			:root {
				-webkit-text-stroke-width: 0.5px;
					--hover-preview: #999999;
					--playhead: #999999;
					--primary-text: #999999;
					--secondary-text: #444444;
				--text-selection: #999999;
					--box-selection-fill: #999999;
					--loop-accent: #999999;
					--link-accent: #999999;
					--ui-widget-background: #222222;
					--ui-widget-focus: #444444;
				--pitch-background: #101010;
					--tonic: #404040;
					--fifth-note: #202020;
					--white-piano-key: #999999;
					--black-piano-key: #101010;
					--pitch-channel-limit: 6;
					--noise-channel-limit: 3;
					--pitch1-secondary-channel: #004444;
					--pitch1-primary-channel:   #009999;
					--pitch1-secondary-note:    #004444;
					--pitch1-primary-note:      #009999;
					--pitch2-secondary-channel: #444400;
					--pitch2-primary-channel:   #999900;
					--pitch2-secondary-note:    #444400;
					--pitch2-primary-note:      #999900;
					--pitch3-secondary-channel: #443300;
					--pitch3-primary-channel:   #996600;
					--pitch3-secondary-note:    #443300;
					--pitch3-primary-note:      #996600;
					--pitch4-secondary-channel: #004400;
					--pitch4-primary-channel:   #009900;
					--pitch4-secondary-note:    #004400;
					--pitch4-primary-note:      #009900;
					--pitch5-secondary-channel: #440044;
					--pitch5-primary-channel:   #990099;
					--pitch5-secondary-note:    #440044;
					--pitch5-primary-note:      #990099;
					--pitch6-secondary-channel: #333344;
					--pitch6-primary-channel:   #666699;
					--pitch6-secondary-note:    #333344;
					--pitch6-primary-note:      #666699;
					--pitch7-secondary-channel: #444400;
					--pitch7-primary-channel:   #999900;
					--pitch7-secondary-note:    #444400;
					--pitch7-primary-note:      #999900;
					--pitch8-secondary-channel: #824E54;
					--pitch8-primary-channel:   #C4757E;
					--pitch8-secondary-note:    #824E54;
					--pitch8-primary-note:      #C4757E;
					--pitch9-secondary-channel: #006342;
					--pitch9-primary-channel:   #008E5F;
					--pitch9-secondary-note:    #006342;
					--pitch9-primary-note:      #008E5F;
					--pitch10-secondary-channel: #561291;
					--pitch10-primary-channel:   #7819C1;
					--pitch10-secondary-note:    #561291;
					--pitch10-primary-note:      #7819C1;
					--noise1-secondary-channel: #444444;
					--noise1-primary-channel:   #999999;
					--noise1-secondary-note:    #444444;
					--noise1-primary-note:      #999999;
					--noise2-secondary-channel: #443311;
					--noise2-primary-channel:   #996633;
					--noise2-secondary-note:    #443311;
					--noise2-primary-note:      #996633;
					--noise3-secondary-channel: #113344;
					--noise3-primary-channel:   #336699;
					--noise3-secondary-note:    #113344;
					--noise3-primary-note:      #336699;
					--noise4-secondary-channel: #444444;
					--noise4-primary-channel:   #999999;
					--noise4-secondary-note:    #444444;
					--noise4-primary-note:      #999999;
					--noise5-secondary-channel: #443311;
					--noise5-primary-channel:   #996633;
					--noise5-secondary-note:    #443311;
					--noise5-primary-note:      #996633;
          --mod1-secondary-channel: #004444;
					--mod1-primary-channel:   #009999;
					--mod1-secondary-note:    #004444;
					--mod1-primary-note:      #009999;
					--mod2-secondary-channel: #444400;
					--mod2-primary-channel:   #999900;
					--mod2-secondary-note:    #444400;
					--mod2-primary-note:      #999900;
					--mod3-secondary-channel: #443300;
					--mod3-primary-channel:   #996600;
					--mod3-secondary-note:    #443300;
					--mod3-primary-note:      #996600;
					--mod4-secondary-channel: #004400;
					--mod4-primary-channel:   #009900;
					--mod4-secondary-note:    #004400;
					--mod4-primary-note:      #009900;
				}
				.beepboxEditor button, .beepboxEditor select {
					box-shadow: inset 0 0 0 1px var(--secondary-text);
				}
			`,"mainbox 1.0":`
			:root {
				--loop-accent: #2F1C40;
				--link-accent: #543873;
				--ui-widget-background: #2F1C40;
				--ui-widget-focus: #543873;
				--pitch-background: #2F1C40;
				--tonic: #42286D;
				--fifth-note: #37416B;
				--white-piano-key: #156CB6;
				--black-piano-key: #130D14;
					--pitch-channel-limit: 6;
					--noise-channel-limit: 3;
					--pitch1-secondary-channel: #156C99;
					--pitch1-primary-channel:   #00CFDF;
					--pitch1-secondary-note:    #0080A8;
					--pitch1-primary-note:      #009FC6;
					--pitch2-secondary-channel: #AD923A;
					--pitch2-primary-channel:   #FFD552;
					--pitch2-secondary-note:    #C49736;
					--pitch2-primary-note:      #EFC742;
					--pitch3-secondary-channel: #7A401E;
					--pitch3-primary-channel:   #C14E30;
					--pitch3-secondary-note:    #89381B;
					--pitch3-primary-note:      #E15427;
					--pitch4-secondary-channel: #0B6030;
					--pitch4-primary-channel:   #00915C;
					--pitch4-secondary-note:    #004337;
					--pitch4-primary-note:      #00915E;
					--pitch5-secondary-channel: #543873;
					--pitch5-primary-channel:   #695B95;
					--pitch5-secondary-note:    #8188BE;
					--pitch5-primary-note:      #848ED8;
					--pitch6-secondary-channel: #585882;
					--pitch6-primary-channel:   #5A72DD;
					--pitch7-secondary-channel: #7D7C2E;
					--pitch7-primary-channel:   #B0C952;
					--pitch7-secondary-note:    #7D7C2E;
					--pitch7-primary-note:      #B0C952;
					--pitch8-secondary-channel: #7F426A;
					--pitch8-primary-channel:   #B75297;
					--pitch8-secondary-note:    #7F426A;
					--pitch8-primary-note:      #B75297;
					--pitch9-secondary-channel: #2A6B65;
					--pitch9-primary-channel:   #3BA590;
					--pitch9-secondary-note:    #2A6B65;
					--pitch9-primary-note:      #3BA590;
					--pitch10-secondary-channel: #713EA0;
					--pitch10-primary-channel:   #925EC9;
					--pitch10-secondary-note:    #713EA0;
					--pitch10-primary-note:      #925EC9;
					--noise1-secondary-channel: #6C6C8E;
					--noise1-primary-channel:   #8A7F96;
					--noise1-secondary-note:    #A1A3B7;
					--noise1-primary-note:      #DDBADD;
					--noise2-secondary-channel: #865E40;
					--noise2-secondary-note:    #C7B47A;
					--noise2-primary-note:      #CFC587;
					--noise3-secondary-channel: #7E7068;
					--noise3-primary-channel:   #B19998;
					--noise3-secondary-note:    #BAA6BC;
					--noise3-primary-note:      #EDDCEC;
          --mod1-secondary-channel: #156C99;
					--mod1-primary-channel:   #00CFDF;
					--mod1-secondary-note:    #0080A8;
					--mod1-primary-note:      #009FC6;
					--mod2-secondary-channel: #AD923A;
					--mod2-primary-channel:   #FFD552;
					--mod2-secondary-note:    #C49736;
					--mod2-primary-note:      #EFC742;
					--mod3-secondary-channel: #7A401E;
					--mod3-primary-channel:   #C14E30;
					--mod3-secondary-note:    #89381B;
					--mod3-primary-note:      #E15427;
					--mod4-secondary-channel: #0B6030;
					--mod4-primary-channel:   #00915C;
					--mod4-secondary-note:    #004337;
					--mod4-primary-note:      #00915E;
				}
			`,fogbox:`
			:root {
				--page-margin: #252525;
				--editor-background: #252525;
				--hover-preview: white;
				--playhead: white;
				--primary-text: white;
				--secondary-text: #999;
				--inverted-text: black;
				--text-selection: rgba(119,68,255,0.99);
				--box-selection-fill: rgba(255,255,255,0.2);
				--loop-accent: #74f;
				--link-accent: #98f;
				--ui-widget-background: #444;
				--ui-widget-focus: #777;
				--pitch-background: #444;
				--tonic: #864;
				--fifth-note: #468;
				--white-piano-key: #bbb;
				--black-piano-key: #444;
				--white-piano-key-text: #131200;
				--black-piano-key-text: #fff;
					--use-color-formula: false;
					--track-editor-bg-pitch: #444;
					--track-editor-bg-pitch-dim: #333;
					--track-editor-bg-noise: #444;
					--track-editor-bg-noise-dim: #333;
					--track-editor-bg-mod: #234;
					--track-editor-bg-mod-dim: #123;
					--multiplicative-mod-slider: #456;
					--overwriting-mod-slider: #654;
					--indicator-primary: #74f;
					--indicator-secondary: #444;
					--select2-opt-group: #585858;
					--input-box-outline: #333;
					--mute-button-normal: #ffa033;
					--mute-button-mod: #9a6bff;
				--pitch1-secondary-channel: #0099A1;
				--pitch1-primary-channel:   #25F3FF;
				--pitch1-secondary-note:    #00BDC7;
				--pitch1-primary-note:      #92F9FF;
				--pitch2-secondary-channel: #A1A100;
				--pitch2-primary-channel:   #FFFF25;
				--pitch2-secondary-note:    #C7C700;
				--pitch2-primary-note:      #FFFF92;
				--pitch3-secondary-channel: #C75000;
				--pitch3-primary-channel:   #FF9752;
				--pitch3-secondary-note:    #FF771C;
				--pitch3-primary-note:      #FFCDAB;
				--pitch4-secondary-channel: #00A100;
				--pitch4-primary-channel:   #50FF50;
				--pitch4-secondary-note:    #00C700;
				--pitch4-primary-note:      #A0FFA0;
				--pitch5-secondary-channel: #D020D0;
				--pitch5-primary-channel:   #FF90FF;
				--pitch5-secondary-note:    #E040E0;
				--pitch5-primary-note:      #FFC0FF;
				--pitch6-secondary-channel: #7777B0;
				--pitch6-primary-channel:   #A0A0FF;
				--pitch6-secondary-note:    #8888D0;
				--pitch6-primary-note:      #D0D0FF;
				--pitch7-secondary-channel: #8AA100;
				--pitch7-primary-channel:   #DEFF25;
				--pitch7-secondary-note:    #AAC700;
				--pitch7-primary-note:      #E6FF92;
				--pitch8-secondary-channel: #DF0019;
				--pitch8-primary-channel:   #FF98A4;
				--pitch8-secondary-note:    #FF4E63;
				--pitch8-primary-note:      #FFB2BB;
				--pitch9-secondary-channel: #00A170;
				--pitch9-primary-channel:   #50FFC9;
				--pitch9-secondary-note:    #00C78A;
				--pitch9-primary-note:      #83FFD9;
				--pitch10-secondary-channel:#A11FFF;
				--pitch10-primary-channel:  #CE8BFF;
				--pitch10-secondary-note:   #B757FF;
				--pitch10-primary-note:     #DFACFF;
				--noise1-secondary-channel: #6F6F6F;
				--noise1-primary-channel:   #AAAAAA;
				--noise1-secondary-note:    #A7A7A7;
				--noise1-primary-note:      #E0E0E0;
				--noise2-secondary-channel: #996633;
				--noise2-primary-channel:   #DDAA77;
				--noise2-secondary-note:    #CC9966;
				--noise2-primary-note:      #F0D0BB;
				--noise3-secondary-channel: #4A6D8F;
				--noise3-primary-channel:   #77AADD;
				--noise3-secondary-note:    #6F9FCF;
				--noise3-primary-note:      #BBD7FF;
				--noise4-secondary-channel: #7A4F9A;
				--noise4-primary-channel:   #AF82D2;
				--noise4-secondary-note:    #9E71C1;
				--noise4-primary-note:      #D4C1EA;
				--noise5-secondary-channel: #607837;
				--noise5-primary-channel:   #A2BB77;
				--noise5-secondary-note:    #91AA66;
				--noise5-primary-note:      #C5E2B2;
          --mod1-secondary-channel:   #339955;
					--mod1-primary-channel:     #77fc55;
					--mod1-secondary-note:      #77ff8a;
					--mod1-primary-note:        #cdffee;
					--mod2-secondary-channel:   #993355;
					--mod2-primary-channel:     #f04960;
					--mod2-secondary-note:      #f057a0;
					--mod2-primary-note:        #ffb8de;
					--mod3-secondary-channel:   #553399;
					--mod3-primary-channel:     #8855fc;
					--mod3-secondary-note:      #aa64ff;
					--mod3-primary-note:	    #f8ddff;
					--mod4-secondary-channel:   #a86436;
					--mod4-primary-channel:     #c8a825;
					--mod4-secondary-note:      #e8ba46;
					--mod4-primary-note:        #fff6d3;
					--mod-label-primary:        #999;
					--mod-label-secondary-text: #333;
					--mod-label-primary-text:   black;
					--disabled-note-primary:    #999;
					--disabled-note-secondary:  #666;
				}
			`,foxbox:`
			:root {
				--page-margin: #ADD8E6;
				}
			`,wackybox:`
			
			:root {
				--page-margin: #050000;
				--editor-background: #050000;
					--pitch-channel-limit: 6;
					--noise-channel-limit: 3;
				}

				* {
					cursor: url("theme_resources/wackybox_cursor.png"), auto !important;
				}

			`,microbox:`
				:root {
					--page-margin: #000000;
					--editor-background: #000000;
					--playhead: rgba(255, 255, 255, 0.9);
					--secondary-text: #93B6AD;
					--text-selection: rgba(47,255,250,0.99);
					--box-selection-fill: #03B068;
					--loop-accent: #FF0061;
					--link-accent: #FFC800;
					--ui-widget-background: #38554E;
					--ui-widget-focus: #2A7E69;
					--pitch-background: #281F23;
					--tonic: #004634;
					--fifth-note: #463400;
					--white-piano-key: #edc;
					--black-piano-key: #456;
					--use-color-formula: true;
					--track-editor-bg-pitch: #333333;
					--track-editor-bg-pitch-dim: #000000;
					--track-editor-bg-noise: #463400;
					--track-editor-bg-noise-dim: #000000;
					--track-editor-bg-mod: #004634;
					--track-editor-bg-mod-dim: #000000;
					--multiplicative-mod-slider: #FFC800;
					--overwriting-mod-slider: #00ffc0;
					--indicator-primary: #00ffc0;
					--indicator-secondary: #333333;
					--select2-opt-group: #2B2B2B;
					--input-box-outline: #69BFC6;
					--mute-button-normal: #00ffc0;
					--mute-button-mod: #FFC800;
					--mod-label-primary: #38554E;
					--mod-label-secondary-text: rgb(0, 43, 45);
					--mod-label-primary-text: white;
					--pitch-secondary-channel-hue: 0;
					--pitch-secondary-channel-hue-scale: 6.1;
					--pitch-secondary-channel-sat: 83.3;
					--pitch-secondary-channel-sat-scale: 0.1;
					--pitch-secondary-channel-lum: 40;
					--pitch-secondary-channel-lum-scale: 0.05;
					--pitch-primary-channel-hue: 0;
					--pitch-primary-channel-hue-scale: 6.1;
					--pitch-primary-channel-sat: 100;
					--pitch-primary-channel-sat-scale: 0.1;
					--pitch-primary-channel-lum: 67.5;
					--pitch-primary-channel-lum-scale: 0.05;
					--pitch-secondary-note-hue: 0;
					--pitch-secondary-note-hue-scale: 6.1;
					--pitch-secondary-note-sat: 93.9;
					--pitch-secondary-note-sat-scale: 0.1;
					--pitch-secondary-note-lum: 25;
					--pitch-secondary-note-lum-scale: 0.05;
					--pitch-primary-note-hue: 0;
					--pitch-primary-note-hue-scale: 6.1;
					--pitch-primary-note-sat: 100;
					--pitch-primary-note-sat-scale: 0.05;
					--pitch-primary-note-lum: 85.6;
					--pitch-primary-note-lum-scale: 0.025;
					--noise-secondary-channel-hue: 0;
					--noise-secondary-channel-hue-scale: 2;
					--noise-secondary-channel-sat: 25;
					--noise-secondary-channel-sat-scale: 0;
					--noise-secondary-channel-lum: 42;
					--noise-secondary-channel-lum-scale: 0;
					--noise-primary-channel-hue: 0;
					--noise-primary-channel-hue-scale: 2;
					--noise-primary-channel-sat: 33;
					--noise-primary-channel-sat-scale: 0;
					--noise-primary-channel-lum: 63.5;
					--noise-primary-channel-lum-scale: 0;
					--noise-secondary-note-hue: 0;
					--noise-secondary-note-hue-scale: 2;
					--noise-secondary-note-sat: 33.5;
					--noise-secondary-note-sat-scale: 0;
					--noise-secondary-note-lum: 55;
					--noise-secondary-note-lum-scale: 0;
					--noise-primary-note-hue: 0;
					--noise-primary-note-hue-scale: 2;
					--noise-primary-note-sat: 46.5;
					--noise-primary-note-sat-scale: 0;
					--noise-primary-note-lum: 74;
					--noise-primary-note-lum-scale: 0;
					--mod-secondary-channel-hue: 192;
					--mod-secondary-channel-hue-scale: 1.5;
					--mod-secondary-channel-sat: 88;
					--mod-secondary-channel-sat-scale: 0;
					--mod-secondary-channel-lum: 50;
					--mod-secondary-channel-lum-scale: 0;
					--mod-primary-channel-hue: 192;
					--mod-primary-channel-hue-scale: 1.5;
					--mod-primary-channel-sat: 96;
					--mod-primary-channel-sat-scale: 0;
					--mod-primary-channel-lum: 80;
					--mod-primary-channel-lum-scale: 0;
					--mod-secondary-note-hue: 192;
					--mod-secondary-note-hue-scale: 1.5;
					--mod-secondary-note-sat: 92;
					--mod-secondary-note-sat-scale: 0;
					--mod-secondary-note-lum: 45;
					--mod-secondary-note-lum-scale: 0;
					--mod-primary-note-hue: 192;
					--mod-primary-note-hue-scale: 1.5;
					--mod-primary-note-sat: 96;
					--mod-primary-note-sat-scale: 0;
					--mod-primary-note-lum: 85;
					--mod-primary-note-lum-scale: 0;
				}
			`,paandorasbox:`
			:root {
			 --page-margin: #200000;
			  --editor-background: #200000;
			  --text-selection: #FF5100;
			  --loop-accent: #FF5100;
			  --link-accent: #0F0;
			  --ui-widget-background: #562334;
			  --ui-widget-focus: #6D1B36;
			  --pitch-background: #6D1B36;
			  --tonic: #FF5100;
			  --fifth-note: #00B6FF;
			  --track-editor-bg-pitch: #380C14;
			  --track-editor-bg-pitch-dim: #200000;
			  --track-editor-bg-noise: #233323;
			  --track-editor-bg-noise-dim: #101A0F;
			  --track-editor-bg-mod: #234C82;
			  --track-editor-bg-mod-dim: #0D1D33;
			  --indicator-primary: #FF5100;
			  --pitch1-secondary-channel: #00B200;
			  --pitch1-primary-channel: #0F0;
			  --pitch1-secondary-note: #00B200;
			  --pitch1-primary-note: #0F0;
			  --pitch2-secondary-channel: #00B282;
			  --pitch2-primary-channel: #00FFBF;
			  --pitch2-secondary-note: #00B282;
			  --pitch2-primary-note: #00FFBF;
			  --pitch3-secondary-channel: #00B2B2;
			  --pitch3-primary-channel: #0FF;
			  --pitch3-secondary-note: #00B2B2;
			  --pitch3-primary-note: #0FF;
			  --pitch4-secondary-channel: #2623B2;
			  --pitch4-primary-channel: #3631FF;
			  --pitch4-secondary-note: #2623B2;
			  --pitch4-primary-note: #3631FF;
			  --pitch5-secondary-channel: #7700B2;
			  --pitch5-primary-channel: #A0F;
			  --pitch5-secondary-note: #7700B2;
			  --pitch5-primary-note: #A0F;
			  --pitch6-secondary-channel: #B200B2;
			  --pitch6-primary-channel: #F0F;
			  --pitch6-secondary-note: #B200B2;
			  --pitch6-primary-note: #F0F;
			  --pitch7-secondary-channel: #B20000;
			  --pitch7-primary-channel: #F00;
			  --pitch7-secondary-note: #B20000;
			  --pitch7-primary-note: #F00;
			  --pitch8-secondary-channel: #00B200;
			  --pitch8-primary-channel: #0F0;
			  --pitch8-secondary-note: #00B200;
			  --pitch8-primary-note: #0F0;
			  --pitch9-secondary-channel: #00B282;
			  --pitch9-primary-channel: #0FF;
			  --pitch9-secondary-note: #00B282;
			  --pitch9-primary-note: #0FF;
			  --pitch10-secondary-channel: #0071B2;
			  --pitch10-primary-channel: #009EFF;
			  --pitch10-secondary-note: #0071B2;
			  --pitch10-primary-note: #009EFF;
			  --noise1-secondary-channel: #32B221;
			  --noise1-primary-channel: #44FF2F;
			  --noise1-secondary-note: #32B221;
			  --noise1-primary-note: #44FF2F;
			  --noise2-secondary-channel: #216FB2;
			  --noise2-primary-channel: #2F9DFF;
			  --noise2-secondary-note: #216FB2;
			  --noise2-primary-note: #2F9DFF;
			  --noise3-secondary-channel: #2623B2;
			  --noise3-primary-channel: #3631FF;
			  --noise3-secondary-note: #2623B2;
			  --noise3-primary-note: #3631FF;
			  --noise4-secondary-channel: #7223B2;
			  --noise4-primary-channel: #A531FF;
			  --noise4-secondary-note: #7223B2;
			  --noise4-primary-note: #A531FF;
			  --noise5-secondary-channel: #B2235A;
			  --noise5-primary-channel: #FF317E;
			  --noise5-secondary-note: #B2235A;
			  --noise5-primary-note: #FF317E;
			  --mod1-secondary-channel: #17B274;
			  --mod1-primary-channel: #21FFA8;
			  --mod1-secondary-note: #17B274;
			  --mod1-primary-note: #21FFA8;
			  --mod2-secondary-channel: #1783B2;
			  --mod2-primary-channel: #1FBAFF;
			  --mod2-secondary-note: #1783B2;
			  --mod2-primary-note: #1FBAFF;
			  --mod4-secondary-channel: #B20E6B;
			  --mod4-primary-channel: #FF1291;
			  --mod4-secondary-note: #B20E6B;
			  --mod4-primary-note: #FF1291;
			  --mod-label-primary: #994038;
			  --mod-label-secondary-text: #331512;
			  --mod-label-primary-text: #331512;
			  --disabled-note-primary: #994038;
			  --disabled-note-secondary: #331512;
			}
			`,midbox:`:root {
			--page-margin: #010a1e;
			--editor-background: #010a1e;
			--hover-preview: #dfe9fe;
			--playhead: #e7f5f6;
			--primary-text: #f0fdff;
			--secondary-text: #c4c7d7;
			--inverted-text: #0f0623;
			--text-selection: #3f0ab4;
			--box-selection-fill: #32afb3;
			--loop-accent: #1719ff;
			--link-accent: #83a6ed;
			--ui-widget-background: #222856;
			--ui-widget-focus: #21417c;
			--pitch-background: #10264a;
			--tonic: #0797ce;
			--fifth-note: #3e2fb5;
			--white-piano-key: #ebf3f4;
			--black-piano-key: #253353;
			--white-piano-key-text: black;
			--black-piano-key-text: white;
			--oscilloscope-line-L: #72dcfc;
			--oscilloscope-line-R: #304eff;
			--mod-title: #1b2fff;
			--use-color-formula: true;
			--track-editor-bg-pitch: #183b65; 
			--track-editor-bg-pitch-dim: #1f2c3d;
			--track-editor-bg-noise: #2e196d;
			--track-editor-bg-noise-dim: #212038;
			--track-editor-bg-mod: #066433;
			--track-editor-bg-mod-dim: #152b1f;
			--multiplicative-mod-slider: #1242a4;
			--overwriting-mod-slider: #2218db;
			--indicator-primary: #1698d3;
			--indicator-secondary: #1b478e;
			--select2-opt-group: #312f6d;
			--input-box-outline: #788b96;
			--mute-button-normal: #1d34f2;
			--mute-button-mod: #06bad6;
			--mod-label-primary: #14383f;
			--mod-label-secondary-text: #1d7080;
			--mod-label-primary-text: #b7e9f2;
			--pitch-secondary-channel-hue: 190;
			--pitch-secondary-channel-hue-scale: 2.5;
			--pitch-secondary-channel-sat: 80;
			--pitch-secondary-channel-sat-scale: 0.1;
			--pitch-secondary-channel-lum: 50;
			--pitch-secondary-channel-lum-scale: 0.05;
			--pitch-primary-channel-hue: 190;
			--pitch-primary-channel-hue-scale: 2.5;
			--pitch-primary-channel-sat: 100;
			--pitch-primary-channel-sat-scale: 0.1;
			--pitch-primary-channel-lum: 76.5;
			--pitch-primary-channel-lum-scale: 0.05;
			--pitch-secondary-note-hue: 190;
			--pitch-secondary-note-hue-scale: 2.5;
			--pitch-secondary-note-sat: 90;
			--pitch-secondary-note-sat-scale: 0.1;
			--pitch-secondary-note-lum: 30;
			--pitch-secondary-note-lum-scale: 0.05;
			--pitch-primary-note-hue: 190;
			--pitch-primary-note-hue-scale: 2.5;
			--pitch-primary-note-sat: 100;
			--pitch-primary-note-sat-scale: 0.05;
			--pitch-primary-note-lum: 85;
			--pitch-primary-note-lum-scale: 0.025;
			--noise-secondary-channel-hue: 200;
			--noise-secondary-channel-hue-scale: 2.5;
			--noise-secondary-channel-sat: 25;
			--noise-secondary-channel-sat-scale: 0;
			--noise-secondary-channel-lum: 42;
			--noise-secondary-channel-lum-scale: 0;
			--noise-primary-channel-hue: 200;
			--noise-primary-channel-hue-scale: 2.5;
			--noise-primary-channel-sat: 33;
			--noise-primary-channel-sat-scale: 0;
			--noise-primary-channel-lum: 63.5;
			--noise-primary-channel-lum-scale: 0;
			--noise-secondary-note-hue: 200;
			--noise-secondary-note-hue-scale: 2.5;
			--noise-secondary-note-sat: 33.5;
			--noise-secondary-note-sat-scale: 0;
			--noise-secondary-note-lum: 55;
			--noise-secondary-note-lum-scale: 0;
			--noise-primary-note-hue: 200;
			--noise-primary-note-hue-scale: 2.5;
			--noise-primary-note-sat: 46.5;
			--noise-primary-note-sat-scale: 0;
			--noise-primary-note-lum: 74;
			--noise-primary-note-lum-scale: 0;
			--mod-secondary-channel-hue: 140;
			--mod-secondary-channel-hue-scale: 1.5;
			--mod-secondary-channel-sat: 90;
			--mod-secondary-channel-sat-scale: 0;
			--mod-secondary-channel-lum: 55;
			--mod-secondary-channel-lum-scale: 0;
			--mod-primary-channel-hue: 140;
			--mod-primary-channel-hue-scale: 1.5;
			--mod-primary-channel-sat: 100;
			--mod-primary-channel-sat-scale: 0;
			--mod-primary-channel-lum: 85;
			--mod-primary-channel-lum-scale: 0;
			--mod-secondary-note-hue: 140;
			--mod-secondary-note-hue-scale: 1.5;
			--mod-secondary-note-sat: 95;
			--mod-secondary-note-sat-scale: 0;
			--mod-secondary-note-lum: 50;
			--mod-secondary-note-lum-scale: 0;
			--mod-primary-note-hue: 140;
			--mod-primary-note-hue-scale: 1.5;
			--mod-primary-note-sat: 100;
			--mod-primary-note-sat-scale: 0;
			--mod-primary-note-lum: 90;
			--mod-primary-note-lum-scale: 0;
			--disabled-note-primary:    #53527b;
			--disabled-note-secondary:  #1c1b30;
		}
		`,dogebox2:`
			:root {
				--page-margin: #000015;
				--editor-background: #000015;
				--hover-preview: #00ffff;
				--playhead: #00ffff;
				--text-selection: rgba(255, 127, 80, 0.99);
				--box-selection-fill: rgba(255, 255, 255, 0.2);
				--loop-accent: #ff00ff;
				--link-accent: #00ffff;
				--ui-widget-background: #222222;
				--ui-widget-focus: #444444;
				--pitch-background: #222222;
				--tonic: #ab382c;
				--fifth-note: #2a76a8;
				--white-piano-key: #ffffff;
				--black-piano-key: #222222;
				--white-piano-key-text: #000000;
				--track-editor-bg-pitch: #222222;
				--track-editor-bg-pitch-dim: #111111;
				--track-editor-bg-noise: #222222;
				--track-editor-bg-noise-dim: #111111;
				--track-editor-bg-mod: #333333;
				--track-editor-bg-mod-dim: #111111;
				--multiplicative-mod-slider: #666666;
				--overwriting-mod-slider: #666666;
				--indicator-primary: #ff00ff;
				--indicator-secondary: #00ffff;
				--select2-opt-group: #333333;
				--input-box-outline: #444444;
				--mute-button-normal: #ff00ff;
				--mute-button-mod: #00ffff;
				--mod-label-primary: #282840;
				--mod-label-secondary-text: rgb(87, 86, 120);
				--mod-label-primary-text: white;
				--pitch1-secondary-channel: #bd9909;
				--pitch1-primary-channel: #fbff8e;
				--pitch1-secondary-note: #c79d3a;
				--pitch1-primary-note: #fdffb2;
				--pitch2-secondary-channel: #b86e0d;
				--pitch2-primary-channel: #ffb28e;
				--pitch2-secondary-note: #ba643a;
				--pitch2-primary-note: #fbac92;
				--pitch3-secondary-channel: #a81b08;
				--pitch3-primary-channel: #f56c67;
				--pitch3-secondary-note: #94352b;
				--pitch3-primary-note: #f56147;
				--pitch4-secondary-channel: #2a7722;
				--pitch4-primary-channel: #6ebf5e;
				--pitch4-secondary-note: #1c5c18;
				--pitch4-primary-note: #88cf82;
				--pitch5-secondary-channel: #8c8b3c;
				--pitch5-primary-channel: #c3c168;
				--pitch5-secondary-note: #747330;
				--pitch5-primary-note: #d4d394;
				--pitch6-secondary-channel: #3f9577;
				--pitch6-primary-channel: #6fc4b4;
				--pitch6-secondary-note: #2c6a5c;
				--pitch6-primary-note: #8fdad0;
				--pitch7-secondary-channel: #204a80;
				--pitch7-primary-channel: #6d9fc2;
				--pitch7-secondary-note: #132f5a;
				--pitch7-primary-note: #9dbed8;
				--pitch8-secondary-channel: #a531ad;
				--pitch8-primary-channel: #db68e3;
				--pitch8-secondary-note: #8d2f94;
				--pitch8-primary-note: #e66cbf;
				--pitch9-secondary-channel: #03a1a1;
				--pitch9-primary-channel: #52fffb;
				--pitch9-secondary-note: #34baba;
				--pitch9-primary-note: #60fbfb;
				--pitch10-secondary-channel: #4208a1;
				--pitch10-primary-channel: #9282ff;
				--pitch10-secondary-note: #5735b5;
				--pitch10-primary-note: #ab52fb;
				--noise1-secondary-channel: #2a5555;
				--noise1-primary-channel: #4c7878;
				--noise1-secondary-note: #6e9a9a;
				--noise1-primary-note: #90bcbc;
				--noise2-secondary-channel: #553355;
				--noise2-primary-channel: #775577;
				--noise2-secondary-note: #997799;
				--noise2-primary-note: #bbaa99;
				--noise3-secondary-channel: #2a6622;
				--noise3-primary-channel: #4c8844;
				--noise3-secondary-note: #6eaa66;
				--noise3-primary-note: #90cc88;
				--noise4-secondary-channel: #664400;
				--noise4-primary-channel: #886600;
				--noise4-secondary-note: #aa8800;
				--noise4-primary-note: #cccc00;
				--noise5-secondary-channel: #006633;
				--noise5-primary-channel: #008855;
				--noise5-secondary-note: #00aa77;
				--noise5-primary-note: #00cc99;
				--mod1-secondary-channel: #fe00ff;
				--mod1-primary-channel: #ff72ff;
				--mod1-secondary-note: #ff92ff;
				--mod1-primary-note: #ffb2fb;
				--mod2-secondary-channel: #00fe00;
				--mod2-primary-channel: #8eff8e;
				--mod2-secondary-note: #92ff92;
				--mod2-primary-note: #b2ffb2;
				--mod3-secondary-channel: #feff00;
				--mod3-primary-channel: #fffb8e;
				--mod3-secondary-note: #fffd92;
				--mod3-primary-note: #fffe92;
				--mod4-secondary-channel: #00fffe;
				--mod4-primary-channel: #82fffb;
				--mod4-secondary-note: #92ffff;
				--mod4-primary-note: #b2fffb;
				--disabled-note-primary: #c6c6c6;
				--disabled-note-secondary: #8c8c8c;
				--note-flash: #ffffff;
				--note-flash-secondary: #ffffff77;
				}`,"abyssbox classic":`
				:root {		
				--page-margin: #1e0915; 		
				--editor-background: #1e0915; 		
				--playhead: rgba(255, 255, 255, 0.9); 		
				--secondary-text: #ffcedd; 		
				--box-selection-fill: #1e0915; 		
				--loop-accent: #873a51; 		
				--link-accent: #df88ff; 		
				--ui-widget-background: #581b3e; 		
				--ui-widget-focus: #762b4c; 		
				--pitch-background: #381d24; 		
				--tonic: #873a51; 		
				--fifth-note: #75001e; 		
				--white-piano-key: #cca5c7; 		
				--black-piano-key: #402f2f;
				--use-color-formula: true; 		
				--track-editor-bg-pitch: #571c40; 		
				--track-editor-bg-pitch-dim: #290d0d; 		
				--track-editor-bg-noise: #571131; 		
				--track-editor-bg-noise-dim: #330a28; 		
				--track-editor-bg-mod: #54083c; 		
				--track-editor-bg-mod-dim: #360426; 		
				--multiplicative-mod-slider: #9f6082; 		
				--overwriting-mod-slider: #9e3470; 		
				--indicator-primary: #b3498f; 		
				--indicator-secondary: #541d40; 		
				--select2-opt-group: #4f191e; 		
				--input-box-outline: #18041a; 		
				--mute-button-normal: #dd5d94;	 		
				--mute-button-mod: #ba364c; 		
				--mod-label-primary: #541625; 		
				--mod-label-secondary-text: rgb(120, 87, 86); 
				--mod-label-primary-text: gray; 
			
				--pitch-secondary-channel-hue: -80; 		
				--pitch-secondary-channel-hue-scale 0; 		
				--pitch-secondary-channel-sat: 43; 		
				--pitch-secondary-channel-sat-scale: 0.1; 		
				--pitch-secondary-channel-lum: 40; 		
				--pitch-secondary-channel-lum-scale: 0.05; 
			
				--pitch-primary-channel-hue: -53; 		
				--pitch-primary-channel-hue-scale: 6.1; 		
				--pitch-primary-channel-sat: 75; 		
				--pitch-primary-channel-sat-scale: 0.1; 		
				--pitch-primary-channel-lum: 67.5; 		
				--pitch-primary-channel-lum-scale: 0.05; 	
		
				--pitch-secondary-note-hue: -34; 		
				--pitch-secondary-note-hue-scale: 6.1; 		
				--pitch-secondary-note-sat: 93.9; 		
				--pitch-secondary-note-sat-scale: 0.1; 		
				--pitch-secondary-note-lum: 25; 		
				--pitch-secondary-note-lum-scale: 0.05; 
			
				--pitch-primary-note-hue: -53; 		
				--pitch-primary-note-hue-scale: 6.1; 		
				--pitch-primary-note-sat: 100; 		
				--pitch-primary-note-sat-scale: 0.05; 		
				--pitch-primary-note-lum: 85.6; 		
				--pitch-primary-note-lum-scale: 0.025; 
			
				--noise-secondary-channel-hue: 0; 		
				--noise-secondary-channel-hue-scale: 2; 		
				--noise-secondary-channel-sat: 65; 		
				--noise-secondary-channel-sat-scale: 0; 		
				--noise-secondary-channel-lum: 42; 		
				--noise-secondary-channel-lum-scale: 0; 
			
				--noise-primary-channel-hue: 0; 		
				--noise-primary-channel-hue-scale: 1; 		
				--noise-primary-channel-sat: 100; 		
				--noise-primary-channel-sat-scale: 1; 		
				--noise-primary-channel-lum: 63.5; 		
				--noise-primary-channel-lum-scale: 0; 
			
				--noise-secondary-note-hue: 24; 		
				--noise-secondary-note-hue-scale: 2; 		
				--noise-secondary-note-sat: 100; 		
				--noise-secondary-note-sat-scale: 0; 		
				--noise-secondary-note-lum: 35; 		
				--noise-secondary-note-lum-scale: 0; 	
		
				--noise-primary-note-hue: 24; 		
				--noise-primary-note-hue-scale: 2; 		
				--noise-primary-note-sat: 100; 		
				--noise-primary-note-sat-scale: 1; 		
				--noise-primary-note-lum: 60; 		
				--noise-primary-note-lum-scale: 1; 	
		
				--mod-secondary-channel-hue: 55; 		
				--mod-secondary-channel-hue-scale: 1.5; 		
				--mod-secondary-channel-sat: 100; 		
				--mod-secondary-channel-sat-scale: 0; 		
				--mod-secondary-channel-lum: 20; 		
				--mod-secondary-channel-lum-scale: 0; 
			
				--mod-primary-channel-hue: 55; 		
				--mod-primary-channel-hue-scale: 1.5; 		
				--mod-primary-channel-sat: 96; 		
				--mod-primary-channel-sat-scale: 0; 		
				--mod-primary-channel-lum: 50; 		
				--mod-primary-channel-lum-scale: 0; 
			
				--mod-secondary-note-hue: 55; 		
				--mod-secondary-note-hue-scale: 1.5; 		
				--mod-secondary-note-sat: 92; 		
				--mod-secondary-note-sat-scale: 0; 		
				--mod-secondary-note-lum: 45; 		
				--mod-secondary-note-lum-scale: 0; 
			
				--mod-primary-note-hue: 55; 		
				--mod-primary-note-hue-scale: 1.5; 		
				--mod-primary-note-sat: 96; 		
				--mod-primary-note-sat-scale: 0; 		
				--mod-primary-note-lum: 85; 		
				--mod-primary-note-lum-scale: 0; 	
	
				--note-flash: #ffffff;
				--note-flash-secondary: #ffffff77;
				
				--oscilloscope-line-R: var(--ui-widget-background);
				--oscilloscope-line-L: var(--secondary-text);
				--text-spacing-icon: > ;
				--scrollbar-color: #bf2c5d;
				
				--file-page-symbol: url("theme_resources/icon-file.png");
				--edit-pencil-symbol: url("theme_resources/icon-edit.png");
				--preferences-gear-symbol: url("theme_resources/icon-preferences.png");
				--instrument-copy-symbol: url("theme_resources/icon-copy.png");
				--instrument-paste-symbol: url("theme_resources/icon-paste.png");
				--play-symbol: url("theme_resources/icon-play.png");
				--pause-symbol: url("theme_resources/icon-pause.png");
				--record-symbol: url("theme_resources/icon-record.png");
				--stop-symbol: url("theme_resources/icon-stop.png");
				--prev-bar-symbol: url("theme_resources/icon-prev.png");
				--next-bar-symbol: url("theme_resources/icon-next.png");
				--muted-symbol: url("theme_resources/icon-speakerMuted.png");
				--unmuted-symbol: url("theme_resources/icon-speaker.png");
				--volume-symbol: url("theme_resources/icon-speaker.png");
				--zoom-in-symbol: url("theme_resources/icon-zoomIn.png");
				--zoom-out-symbol: url("theme_resources/icon-zoomOut.png");
				--export-symbol: url("theme_resources/icon-export.png");
					}
			* {
			cursor: url("theme_resources/abyssbox_cursor.png"), auto;
			}
			
				@font-face {
			   font-family: "AbyssType";
			   src:
				url("theme_resources/abysstype.otf") format("opentype") tech(color-COLRv1),
				}
	
				/* sets background image */
				body {
				background-image: url("theme_resources/stripesbg.gif") !important;
				background-position: center;
				background-repeat: repeat;
	
				image-rendering: -moz-crisp-edges !important;         /* Firefox */
				image-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */
				image-rendering: -o-crisp-edges !important;            /* Opera */
				image-rendering: pixelated !important;                 /* Future browsers */
				image-rendering: optimizeSpeed !important;             /* IE */
					}
	
				#text-content {
						border-image-source: url("theme_resources/abyssbox_border.png");
						border-image-slice: 4 fill; 
					   border-image-width: 8px; 
					border-image-repeat: stretch; 
						padding: 12px; 
	
						image-rendering: -moz-crisp-edges !important;         /* Firefox */
						image-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */
						image-rendering: -o-crisp-edges !important;            /* Opera */
						image-rendering: pixelated !important;                 /* Future browsers */
						image-rendering: optimizeSpeed !important;             /* IE */
					}
				#beepboxEditorContainer {
						border-image-source: url("theme_resources/abyssbox_border.png");
						border-image-slice: 4 fill; 
					   	border-image-width: 8px; 
						border-image-repeat: stretch;
						padding: 12px;
	
						image-rendering: -moz-crisp-edges !important;         /* Firefox */
						image-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */
						image-rendering: -o-crisp-edges !important;            /* Opera */
						image-rendering: pixelated !important;                 /* Future browsers */
						image-rendering: optimizeSpeed !important;             /* IE */ 
					}
				.beepboxEditor button,
				button.playButton,
				button.pauseButton, 
				button.recordButton, 
				button.stopButton,
				button.nextBarButton, 
				button.prevBarButton, 
				button.copyButton, 
				button.pasteButton, 
				button.exportInstrumentButton, 
				button.importInstrumentButton, 
				.beepboxEditor select, 
				.beepboxEditor .select2-selection__rendered {
						border-image-source: url("theme_resources/abyssbox_border.png") !important;
						border-image-slice: 4 fill !important; 
					   border-image-width: 4px !important; 
					border-image-repeat: stretch !important;
						padding: 4px !important; 
	
						image-rendering: -moz-crisp-edges !important;         /* Firefox */
						image-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */
						image-rendering: -o-crisp-edges !important;            /* Opera */
						image-rendering: pixelated !important;                 /* Future browsers */
						image-rendering: optimizeSpeed !important;             /* IE */
	
						cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
					}
	
				div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {
					--ui-widget-background: #1e0915 !important;
					border-image-source:none !important;
				}
	
					select.trackSelectBox {
						border-image: none !important;
					}
					
				@font-face {
			   font-family: "AbyssType_small";
			   src:
				url("theme_resources/abysstype_small.otf") format("opentype") tech(color-COLRv1),
				}
	
				html {
					font-family: 'AbyssType';
				}
	
				div.channelBoxLabel {
					font-family: 'AbyssType_small' !important;
				}
	
				.beepboxEditor input[type="range"]::-webkit-slider-thumb
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="range"]::-webkit-slider-runnable-track
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="range"]:focus::-webkit-slider-runnable-track
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="range"]::-ms-thumb
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="range"]::-ms-track
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="range"]:focus::-ms-track
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="range"]::-moz-range-thumb
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="range"]::-moz-range-track
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="range"]:focus::-moz-range-track
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="text"],
				.beepboxEditor input[type="number"]
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="checkbox"]
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="checkbox"]:checked
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="checkbox"]:checked:after
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
	
				div.selectRow span {
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
	
				`,"abyssbox light":`
			:root { 		
				--page-margin: #e0adbc; 		
				--editor-background: #e0adbc; 		
				--playhead: rgba(255, 255, 255, 0.9); 		
				--primary-text: #6110d9; 		
				--secondary-text: #cc1338;	
				--inverted-text:  #e8bcc9;	 		
				--box-selection-fill: #bf2c5d; 		
				--loop-accent: #8c346a; 		
				--link-accent: #8c346a; 		
				--ui-widget-background: #f5e9f0;		
				--ui-widget-focus: #f5e9f0; 		
				--pitch-background: #eddadf; 		
				--tonic: #f5f0f1; 		
				--fifth-note: #ffb5c9; 		
				--white-piano-key: #cca5c7; 		
				--black-piano-key: #402f2f;
				--use-color-formula: true; 		
				--track-editor-bg-pitch: #edbecc; 		
				--track-editor-bg-pitch-dim: #e0adbc; 		
				--track-editor-bg-noise: #edbecc; 		
				--track-editor-bg-noise-dim: #e0adbc; 		
				--track-editor-bg-mod: #edbecc; 		
				--track-editor-bg-mod-dim: #e0adbc; 		
				--multiplicative-mod-slider: #9f6082; 		
				--overwriting-mod-slider: #9e3470; 		
				--indicator-primary: #b3498f; 		
				--indicator-secondary: #541d40; 		
				--select2-opt-group: #4f191e; 		
				--input-box-outline: #18041a; 		
				--mute-button-normal: #dd5d94;	 		
				--mute-button-mod: #ba364c; 		
				--mod-label-primary: #541625; 		
				--mod-label-secondary-text: rgb(120, 87, 86); 
				--mod-label-primary-text: gray;
				--mod-title: #cc1338; 
			
				--pitch-secondary-channel-hue: -80; 		
				--pitch-secondary-channel-hue-scale 0; 		
				--pitch-secondary-channel-sat: 255; 		
				--pitch-secondary-channel-sat-scale: 0.1; 		
				--pitch-secondary-channel-lum: 30; 		
				--pitch-secondary-channel-lum-scale: 0.05; 
			
				--pitch-primary-channel-hue: -53; 		
				--pitch-primary-channel-hue-scale: 6.1; 		
				--pitch-primary-channel-sat: 255; 		
				--pitch-primary-channel-sat-scale: 0.1; 		
				--pitch-primary-channel-lum: 60; 		
				--pitch-primary-channel-lum-scale: 0.05; 	
		
				--pitch-secondary-note-hue: -34; 		
				--pitch-secondary-note-hue-scale: 6.1; 		
				--pitch-secondary-note-sat: 255; 		
				--pitch-secondary-note-sat-scale: 0.1; 		
				--pitch-secondary-note-lum: 30; 		
				--pitch-secondary-note-lum-scale: 0.05; 
			
				--pitch-primary-note-hue: -53; 		
				--pitch-primary-note-hue-scale: 6.1; 		
				--pitch-primary-note-sat: 255; 		
				--pitch-primary-note-sat-scale: 0.05; 		
				--pitch-primary-note-lum: 60; 		
				--pitch-primary-note-lum-scale: 0.025; 
			
				--noise-secondary-channel-hue: 0; 		
				--noise-secondary-channel-hue-scale: 2; 		
				--noise-secondary-channel-sat: 255; 		
				--noise-secondary-channel-sat-scale: 0; 		
				--noise-secondary-channel-lum: 30; 		
				--noise-secondary-channel-lum-scale: 0; 
			
				--noise-primary-channel-hue: 0; 		
				--noise-primary-channel-hue-scale: 1; 		
				--noise-primary-channel-sat: 255; 		
				--noise-primary-channel-sat-scale: 1; 		
				--noise-primary-channel-lum: 60; 		
				--noise-primary-channel-lum-scale: 0; 
			
				--noise-secondary-note-hue: 24; 		
				--noise-secondary-note-hue-scale: 2; 		
				--noise-secondary-note-sat: 255; 		
				--noise-secondary-note-sat-scale: 0; 		
				--noise-secondary-note-lum: 30; 		
				--noise-secondary-note-lum-scale: 0; 	
		
				--noise-primary-note-hue: 24; 		
				--noise-primary-note-hue-scale: 2; 		
				--noise-primary-note-sat: 255; 		
				--noise-primary-note-sat-scale: 1; 		
				--noise-primary-note-lum: 60; 		
				--noise-primary-note-lum-scale: 1; 	
		
				--mod-secondary-channel-hue: 55; 		
				--mod-secondary-channel-hue-scale: 1.5; 		
				--mod-secondary-channel-sat: 255; 		
				--mod-secondary-channel-sat-scale: 0; 		
				--mod-secondary-channel-lum: 30; 		
				--mod-secondary-channel-lum-scale: 0; 
			
				--mod-primary-channel-hue: 55; 		
				--mod-primary-channel-hue-scale: 1.5; 		
				--mod-primary-channel-sat: 255; 		
				--mod-primary-channel-sat-scale: 0; 		
				--mod-primary-channel-lum: 60; 		
				--mod-primary-channel-lum-scale: 0; 
			
				--mod-secondary-note-hue: 55; 		
				--mod-secondary-note-hue-scale: 1.5; 		
				--mod-secondary-note-sat: 255; 		
				--mod-secondary-note-sat-scale: 0; 		
				--mod-secondary-note-lum: 30; 		
				--mod-secondary-note-lum-scale: 0; 
			
				--mod-primary-note-hue: 55; 		
				--mod-primary-note-hue-scale: 1.5; 		
				--mod-primary-note-sat: 255; 		
				--mod-primary-note-sat-scale: 0; 		
				--mod-primary-note-lum: 60; 		
				--mod-primary-note-lum-scale: 0; 

				--note-flash: #ffffff;
				--note-flash-secondary: #ffffff77;

				--oscilloscope-line-R: var(--ui-widget-background);
				--oscilloscope-line-L: var(--secondary-text);
				--text-spacing-icon: > ;
				--scrollbar-color: #bf2c5d;

				--file-page-symbol: url("theme_resources/icon-file.png");
				--edit-pencil-symbol: url("theme_resources/icon-edit.png");
				--preferences-gear-symbol: url("theme_resources/icon-preferences.png");
				--instrument-copy-symbol: url("theme_resources/icon-copy.png");
				--instrument-paste-symbol: url("theme_resources/icon-paste.png");
				--play-symbol: url("theme_resources/icon-play.png");
				--pause-symbol: url("theme_resources/icon-pause.png");
				--record-symbol: url("theme_resources/icon-record.png");
				--stop-symbol: url("theme_resources/icon-stop.png");
				--prev-bar-symbol: url("theme_resources/icon-prev.png");
				--next-bar-symbol: url("theme_resources/icon-next.png");
				--muted-symbol: url("theme_resources/icon-speakerMuted.png");
				--unmuted-symbol: url("theme_resources/icon-speaker.png");
				--volume-symbol: url("theme_resources/icon-speaker.png");
				--zoom-in-symbol: url("theme_resources/icon-zoomIn.png");
				--zoom-out-symbol: url("theme_resources/icon-zoomOut.png");
				--export-symbol: url("theme_resources/icon-export.png");
			}
					/* sets background image */
					body {
					background-image: url("theme_resources/stripesbg_light.gif") !important;
					background-position: center;
					background-repeat: repeat;
		
					image-rendering: -moz-crisp-edges !important;         /* Firefox */
					image-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */
					image-rendering: -o-crisp-edges !important;            /* Opera */
					image-rendering: pixelated !important;                 /* Future browsers */
					image-rendering: optimizeSpeed !important;             /* IE */
						}		
				#text-content {
						border-image-source: url("theme_resources/abyssbox_border_light.png");
						border-image-slice: 4 fill; 
					   border-image-width: 8px; 
					border-image-repeat: stretch; 
						padding: 12px; 
	
						image-rendering: -moz-crisp-edges !important;         /* Firefox */
						image-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */
						image-rendering: -o-crisp-edges !important;            /* Opera */
						image-rendering: pixelated !important;                 /* Future browsers */
						image-rendering: optimizeSpeed !important;             /* IE */
					}
				#beepboxEditorContainer {
						border-image-source: url("theme_resources/abyssbox_border_light.png");
						border-image-slice: 4 fill; 
					   border-image-width: 8px; 
					border-image-repeat: stretch;
						padding: 12px;
	
						image-rendering: -moz-crisp-edges !important;         /* Firefox */
						image-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */
						image-rendering: -o-crisp-edges !important;            /* Opera */
						image-rendering: pixelated !important;                 /* Future browsers */
						image-rendering: optimizeSpeed !important;             /* IE */ 
					}
					.beepboxEditor button,
					button.playButton,
					button.pauseButton, 
					button.recordButton, 
					button.stopButton,
					button.nextBarButton, 
					button.prevBarButton, 
					button.copyButton, 
					button.pasteButton, 
					button.exportInstrumentButton, 
					button.importInstrumentButton, 
					.beepboxEditor select, 
					.beepboxEditor .select2-selection__rendered {
							border-image-source: url("theme_resources/abyssbox_border_light.png") !important;
							border-image-slice: 4 fill !important; 
						   border-image-width: 4px !important; 
						border-image-repeat: stretch !important;
							padding: 4px !important; 
		
							image-rendering: -moz-crisp-edges !important;         /* Firefox */
							image-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */
							image-rendering: -o-crisp-edges !important;            /* Opera */
							image-rendering: pixelated !important;                 /* Future browsers */
							image-rendering: optimizeSpeed !important;             /* IE */
		
							cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
						}
		
					div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {
						--ui-widget-background: var(--editor-background) !important;
						border-image-source:none !important;
					}
	
					select.trackSelectBox {
						border-image: none !important;
					}
	
			/* sets cursor */ 
			* {
			cursor: url("theme_resources/abyssbox_cursor.png"), auto !important;
			}
				@font-face {
			   font-family: "AbyssType";
			   src:
				url("theme_resources/abysstype.otf") format("opentype") tech(color-COLRv1),
				}
	
				@font-face {
			   font-family: "AbyssType_small";
			   src:
				url("theme_resources/abysstype_small.otf") format("opentype") tech(color-COLRv1),
				}
	
				html {
				font-family: 'AbyssType';
				}
				div.channelBoxLabel {
					font-family: 'AbyssType_small' !important;
				}
	
				.beepboxEditor input[type="range"]::-webkit-slider-thumb
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="range"]::-webkit-slider-runnable-track
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="range"]:focus::-webkit-slider-runnable-track
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="range"]::-ms-thumb
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="range"]::-ms-track
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="range"]:focus::-ms-track
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="range"]::-moz-range-thumb
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="range"]::-moz-range-track
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="range"]:focus::-moz-range-track
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="text"],
				.beepboxEditor input[type="number"]
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="checkbox"]
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="checkbox"]:checked
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
				 
				.beepboxEditor input[type="checkbox"]:checked:after
				{
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
	
				div.selectRow span {
					cursor: url("theme_resources/abyssbox_cursor_hand.png"), pointer !important;
				}
	
				`,slarmoosbox:`
		:root {
			--page-margin: #14051a;
			--editor-background: #14051a;
			--playhead: rgba(255, 255, 255, 0.9);
			--primary-text: #71eee5;
			--secondary-text: #3abbb2;
			--inverted-text: #13695e;
			--box-selection-fill: #36c71c;
			--loop-accent: #36c71c;
			--link-accent: white;
			--ui-widget-background: #183d05;
			--ui-widget-focus: #247d0d;
			--pitch-background: #2e0e51;
			--tonic: #247d0d;
			--fifth-note: #3abbb2;
			--white-piano-key: #ffffff;
			--black-piano-key: #061705;
			--white-piano-key-text: #061705;
			--use-color-formula: true;
			--track-editor-bg-pitch: #09382b;
			--track-editor-bg-pitch-dim: #14051a;
			--track-editor-bg-noise: #40400b;
			--track-editor-bg-noise-dim: #14051a;
			--track-editor-bg-mod: #0a2c08;
			--track-editor-bg-mod-dim: #14051a;
			--multiplicative-mod-slider: #3abb22;
			--overwriting-mod-slider: #71eee5;
			--indicator-primary: #a773e5;
			--indicator-secondary: #4c1c89;
			--select2-opt-group: #183d05;
			--input-box-outline: #18040a;
			--mute-button-normal: #36c71c;
			--mute-button-mod: #a773e5;
			--mod-label-primary: #a773e5;
			--mod-label-secondary-text: #6b29bf;
			--mod-label-primary-text: #14051a;
			--mod-title: #247d1d;
			--pitch-secondary-channel-hue: 100;
			--pitch-secondary-channel-hue-scale: 6.1;
			--pitch-secondary-channel-sat: 100.0;
			--pitch-secondary-channel-sat-scale: 0.15;
			--pitch-secondary-channel-lum: 60.0;
			--pitch-secondary-channel-lum-scale: 0.05;
			--pitch-primary-channel-hue: 100;
			--pitch-primary-channel-hue-scale: 6.1;
			--pitch-primary-channel-sat: 100;
			--pitch-primary-channel-sat-scale: 0.15;
			--pitch-primary-channel-lum: 75.0;
			--pitch-primary-channel-lum-scale: 0.05;
			--pitch-secondary-note-hue: 100;
			--pitch-secondary-note-hue-scale: 6.1;
			--pitch-secondary-note-sat: 95.0;
			--pitch-secondary-note-sat-scale: 0.15;
			--pitch-secondary-note-lum: 40;
			--pitch-secondary-note-lum-scale: 0.05;
			--pitch-primary-note-hue: 100;
			--pitch-primary-note-hue-scale: 6.1;
			--pitch-primary-note-sat: 100;
			--pitch-primary-note-sat-scale: 0.15;
			--pitch-primary-note-lum: 85.6;
			--pitch-primary-note-lum-scale: 0.025;
			--noise-secondary-channel-hue: 65;
			--noise-secondary-channel-hue-scale: 2;
			--noise-secondary-channel-sat: 55;
			--noise-secondary-channel-sat-scale: 0;
			--noise-secondary-channel-lum: 42;
			--noise-secondary-channel-lum-scale: 0;
			--noise-primary-channel-hue: 65;
			--noise-primary-channel-hue-scale: 2;
			--noise-primary-channel-sat: 66;
			--noise-primary-channel-sat-scale: 0;
			--noise-primary-channel-lum: 63.5;
			--noise-primary-channel-lum-scale: 0;
			--noise-secondary-note-hue: 65;
			--noise-secondary-note-hue-scale: 2;
			--noise-secondary-note-sat: 66;
			--noise-secondary-note-sat-scale: 0;
			--noise-secondary-note-lum: 55;
			--noise-secondary-note-lum-scale: 0;
			--noise-primary-note-hue: 65;
			--noise-primary-note-hue-scale: 2;
			--noise-primary-note-sat: 70;
			--noise-primary-note-sat-scale: 0;
			--noise-primary-note-lum: 74;
			--noise-primary-note-lum-scale: 0;
			--mod-secondary-channel-hue: 192;
			--mod-secondary-channel-hue-scale: 1.5;
			--mod-secondary-channel-sat: 88;
			--mod-secondary-channel-sat-scale: 0;
			--mod-secondary-channel-lum: 50;
			--mod-secondary-channel-lum-scale: 0;
			--mod-primary-channel-hue: 192;
			--mod-primary-channel-hue-scale: 1.5;
			--mod-primary-channel-sat: 96;
			--mod-primary-channel-sat-scale: 0;
			--mod-primary-channel-lum: 80;
			--mod-primary-channel-lum-scale: 0;
			--mod-secondary-note-hue: 192;
			--mod-secondary-note-hue-scale: 1.5;
			--mod-secondary-note-sat: 92;
			--mod-secondary-note-sat-scale: 0;
			--mod-secondary-note-lum: 45;
			--mod-secondary-note-lum-scale: 0;
			--mod-primary-note-hue: 192;
			--mod-primary-note-hue-scale: 1.5;
			--mod-primary-note-sat: 96;
			--mod-primary-note-sat-scale: 0;
			--mod-primary-note-lum: 85;
			--mod-primary-note-lum-scale: 0;
			--oscilloscope-line-R: white;
			--oscilloscope-line-L: var(--secondary-text);
		}`,"azur lane":`
		:root {
			--page-margin: #19337e;
			--editor-background: #000333cf;
			--playhead: rgba(255, 255, 255, 0.9);
			--primary-text: #9af9ff;
			--secondary-text: #4072dd;
			--box-selection-fill: #044b94;
			--loop-accent: #950d0d;
			--link-accent: #0072ff;
			--ui-widget-background: #255bb3;
			--ui-widget-focus: #757575;
			--pitch-background: #20468b73;
			--tonic: #c9c9c9;
			--fifth-note: #731d1d;
			--white-piano-key: #eee;
			--black-piano-key: #000;
			--track-editor-bg-pitch: #535a73;
			--track-editor-bg-pitch-dim: #353643;
			--track-editor-bg-noise: #770000;
			--track-editor-bg-noise-dim: #430000;
			--track-editor-bg-mod: #5d1d06;
			--track-editor-bg-mod-dim: #270000;
			--multiplicative-mod-slider: #bb0000;
			--overwriting-mod-slider: #ad0000;
			--indicator-primary: #9c64f7;
			--indicator-secondary: #393e4f;
			--select2-opt-group: #5d576f;
			--input-box-outline: #002957;
			--mute-button-normal: #ffffff;
			--mute-button-mod: #4f4f4f;
			--mod-label-primary: #531313;
			--pitch1-secondary-channel: #80858d;
		  --pitch1-primary-channel: #f2f7ff;
		  --pitch1-secondary-note: #80858d;
		  --pitch1-primary-note: #f2f7ff;
		  --pitch2-secondary-channel: #7392ad;
		  --pitch2-primary-channel: #a8d6ff;
		  --pitch2-secondary-note: #7392ad;
		  --pitch2-primary-note: #a8d6ff;
		  --pitch3-secondary-channel: #4b7eaa;
		  --pitch3-primary-channel: #71bdff;
		  --pitch3-secondary-note: #4b7eaa;
		  --pitch3-primary-note: #71bdff;
		  --pitch4-secondary-channel: #3594b1;
		  --pitch4-primary-channel: #48d4ff;
		  --pitch4-secondary-note: #3594b1;
		  --pitch4-primary-note: #48d4ff;
		  --pitch5-secondary-channel: #1b98b1;
		  --pitch5-primary-channel: #30f1ff;
		  --pitch5-secondary-note: #1b98b1;
		  --pitch5-primary-note: #30f1ff;
		  --pitch6-secondary-channel: #9e0000;
		  --pitch6-primary-channel: #db0000;
		  --pitch6-secondary-note: #9e0000;
		  --pitch6-primary-note: #db0000;
		  --pitch7-secondary-channel: #7c1717;
		  --pitch7-primary-channel: #9e0000;
		  --pitch7-secondary-note: #7c1717;
		  --pitch7-primary-note: #9e0000;
		  --pitch8-secondary-channel: #5c1f1f;
		  --pitch8-primary-channel: #7c1717;
		  --pitch8-secondary-note: #5c1f1f;
		  --pitch8-primary-note: #7c1717;
		  --pitch9-secondary-channel: #3e2020;
		  --pitch9-primary-channel: #5c1f1f;
		  --pitch9-secondary-note: #3e2020;
		  --pitch9-primary-note: #5c1f1f;
		  --pitch10-secondary-channel: #2f1c1c;
		  --pitch10-primary-channel: #5c1f1f;
		  --pitch10-secondary-note: #2f1c1c;
		  --pitch10-primary-note: #5c1f1f;
		  --noise1-secondary-channel: #828282;
		  --noise1-primary-channel: #cacaca;
		  --noise1-secondary-note: #828282;
		  --noise1-primary-note: #cacaca;
		  --noise2-secondary-channel: #2f8baf;
		  --noise2-primary-channel: #3de2ff;
		  --noise2-secondary-note: #2f8baf;
		  --noise2-primary-note: #3de2ff;
		  --noise3-secondary-channel: #6f50b1;
		  --noise3-primary-channel: #8567ff;
		  --noise3-secondary-note: #6f50b1;
		  --noise3-primary-note: #8567ff;
		  --noise4-secondary-channel: #d38900;
		  --noise4-primary-channel: #ffb500;
		  --noise4-secondary-note: #d38900;
		  --noise4-primary-note: #ffb500;
		  --noise5-secondary-channel: #af0008;
		  --noise5-primary-channel: #00d70e;
		  --noise5-secondary-note: #29b700;
		  --noise5-primary-note: #00f7ff;
		  --mod1-secondary-channel: #9d5bb9;
		  --mod1-primary-channel: #e16bff;
		  --mod1-secondary-note: #3a3ea4;
		  --mod1-primary-note: #fff;
		  --mod2-secondary-channel: #3a8d58;
		  --mod2-primary-channel: #42ffff;
		  --mod2-secondary-note: #3a8d58;
		  --mod2-primary-note: #42ffff;
		  --mod3-secondary-channel: #af6c00;
		  --mod3-primary-channel: #fa0;
		  --mod3-secondary-note: #0001a2;
		  --mod3-primary-note: #970000;
		  --mod4-secondary-channel: #d3d3d3;
		  --mod4-primary-channel: #759bff;
		  --mod4-secondary-note: #a00000;
		  --mod4-primary-note: #fff;
		  --disabled-note-primary: #3a3a3a;
		  --disabled-note-secondary: #000;
			}
		/* replaces hotdog with an image of the girls using the same scratch sprites from the 404 page*/
		#Hotdog {
			display: inline !important;
			content: url("theme_resources/AzurLaneThemeStarterSquad.png") !important;
			width: 75%;
			height: 75%;
			text-align: center;
			margin-top: 25px;
		}
		/* sets cursor */
		* {
		cursor: url("theme_resources/AzurLaneThemeMouse.png"), auto !important;
		}
		/* sets background image */
		body {
		background-image: url("theme_resources/AzurLaneThemeMemoryTaskBackground.png") !important;
		background-size: cover;
		background-position: center;
		background-repeat: no-repeat;
			}
			/* make editor background transparent */
		#beepboxEditorContainer, .beepboxEditor, #text-content {
		background: #0400257d !important;
		}
			#text-content > section > h1 > font {
		display: none;
		}
		#text-content > section > h1 {
		margin: auto;
		content: url("theme_resources/AzurLaneThemeLogo.png");
		}
		.promptContainerBG::before {
			box-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);
		}
	}`,custom:`${localStorage.getItem("customColors")||":root {  }"}`};static pageMargin="var(--page-margin, black)";static editorBackground="var(--editor-background, black)";static hoverPreview="var(--hover-preview, white)";static playhead="var(--playhead, white)";static primaryText="var(--primary-text, white)";static secondaryText="var(--secondary-text, #999)";static invertedText="var(--inverted-text, black)";static textSelection="var(--text-selection, rgba(119,68,255,0.99))";static boxSelectionFill="var(--box-selection-fill, rgba(255,255,255,0.2))";static loopAccent="var(--loop-accent, #74f)";static linkAccent="var(--link-accent, #98f)";static uiWidgetBackground="var(--ui-widget-background, #444)";static uiWidgetFocus="var(--ui-widget-focus, #777)";static pitchBackground="var(--pitch-background, #444)";static tonic="var(--tonic, #864)";static fifthNote="var(--fifth-note, #468)";static whitePianoKey="var(--white-piano-key, #bbb)";static blackPianoKey="var(--black-piano-key, #444)";static whitePianoKeyText="var(--white-piano-key-text, #131200)";static blackPianoKeyText="var(--black-piano-key-text, #fff)";static useColorFormula="var(--use-color-formula, false)";static pitchSecondaryChannelHue="var(--pitch-secondary-channel-hue)";static pitchSecondaryChannelHueScale="var(--pitch-secondary-channel-hue-scale)";static pitchSecondaryChannelSat="var(--pitch-secondary-channel-sat)";static pitchSecondaryChannelSatScale="var(--pitch-secondary-channel-sat-scale)";static pitchSecondaryChannelLum="var(--pitch-secondary-channel-lum)";static pitchSecondaryChannelLumScale="var(--pitch-secondary-channel-lum-scale)";static pitchPrimaryChannelHue="var(--pitch-primary-channel-hue)";static pitchPrimaryChannelHueScale="var(--pitch-primary-channel-hue-scale)";static pitchPrimaryChannelSat="var(--pitch-primary-channel-sat)";static pitchPrimaryChannelSatScale="var(--pitch-primary-channel-sat-scale)";static pitchPrimaryChannelLum="var(--pitch-primary-channel-lum)";static pitchPrimaryChannelLumScale="var(--pitch-primary-channel-lum-scale)";static pitchSecondaryNoteHue="var(--pitch-secondary-note-hue)";static pitchSecondaryNoteHueScale="var(--pitch-secondary-note-hue-scale)";static pitchSecondaryNoteSat="var(--pitch-secondary-note-sat)";static pitchSecondaryNoteSatScale="var(--pitch-secondary-note-sat-scale)";static pitchSecondaryNoteLum="var(--pitch-secondary-note-lum)";static pitchSecondaryNoteLumScale="var(--pitch-secondary-note-lum-scale)";static pitchPrimaryNoteHue="var(--pitch-primary-note-hue)";static pitchPrimaryNoteHueScale="var(--pitch-primary-note-hue-scale)";static pitchPrimaryNoteSat="var(--pitch-primary-note-sat)";static pitchPrimaryNoteSatScale="var(--pitch-primary-note-sat-scale)";static pitchPrimaryNoteLum="var(--pitch-primary-note-lum)";static pitchPrimaryNoteLumScale="var(--pitch-primary-note-lum-scale)";static modSecondaryChannelHue="var(--mod-secondary-channel-hue)";static modSecondaryChannelHueScale="var(--mod-secondary-channel-hue-scale)";static modSecondaryChannelSat="var(--mod-secondary-channel-sat)";static modSecondaryChannelSatScale="var(--mod-secondary-channel-sat-scale)";static modSecondaryChannelLum="var(--mod-secondary-channel-lum)";static modSecondaryChannelLumScale="var(--mod-secondary-channel-lum-scale)";static modPrimaryChannelHue="var(--mod-primary-channel-hue)";static modPrimaryChannelHueScale="var(--mod-primary-channel-hue-scale)";static modPrimaryChannelSat="var(--mod-primary-channel-sat)";static modPrimaryChannelSatScale="var(--mod-primary-channel-sat-scale)";static modPrimaryChannelLum="var(--mod-primary-channel-lum)";static modPrimaryChannelLumScale="var(--mod-primary-channel-lum-scale)";static modSecondaryNoteHue="var(--mod-secondary-note-hue)";static modSecondaryNoteHueScale="var(--mod-secondary-note-hue-scale)";static modSecondaryNoteSat="var(--mod-secondary-note-sat)";static modSecondaryNoteSatScale="var(--mod-secondary-note-sat-scale)";static modSecondaryNoteLum="var(--mod-secondary-note-lum)";static modSecondaryNoteLumScale="var(--mod-secondary-note-lum-scale)";static modPrimaryNoteHue="var(--mod-primary-note-hue)";static modPrimaryNoteHueScale="var(--mod-primary-note-hue-scale)";static modPrimaryNoteSat="var(--mod-primary-note-sat)";static modPrimaryNoteSatScale="var(--mod-primary-note-sat-scale)";static modPrimaryNoteLum="var(--mod-primary-note-lum)";static modPrimaryNoteLumScale="var(--mod-primary-note-lum-scale)";static noiseSecondaryChannelHue="var(--noise-secondary-channel-hue)";static noiseSecondaryChannelHueScale="var(--noise-secondary-channel-hue-scale)";static noiseSecondaryChannelSat="var(--noise-secondary-channel-sat)";static noiseSecondaryChannelSatScale="var(--noise-secondary-channel-sat-scale)";static noiseSecondaryChannelLum="var(--noise-secondary-channel-lum)";static noiseSecondaryChannelLumScale="var(--noise-secondary-channel-lum-scale)";static noisePrimaryChannelHue="var(--noise-primary-channel-hue)";static noisePrimaryChannelHueScale="var(--noise-primary-channel-hue-scale)";static noisePrimaryChannelSat="var(--noise-primary-channel-sat)";static noisePrimaryChannelSatScale="var(--noise-primary-channel-sat-scale)";static noisePrimaryChannelLum="var(--noise-primary-channel-lum)";static noisePrimaryChannelLumScale="var(--noise-primary-channel-lum-scale)";static noiseSecondaryNoteHue="var(--noise-secondary-note-hue)";static noiseSecondaryNoteHueScale="var(--noise-secondary-note-hue-scale)";static noiseSecondaryNoteSat="var(--noise-secondary-note-sat)";static noiseSecondaryNoteSatScale="var(--noise-secondary-note-sat-scale)";static noiseSecondaryNoteLum="var(--noise-secondary-note-lum)";static noiseSecondaryNoteLumScale="var(--noise-secondary-note-lum-scale)";static noisePrimaryNoteHue="var(--noise-primary-note-hue)";static noisePrimaryNoteHueScale="var(--noise-primary-note-hue-scale)";static noisePrimaryNoteSat="var(--noise-primary-note-sat)";static noisePrimaryNoteSatScale="var(--noise-primary-note-sat-scale)";static noisePrimaryNoteLum="var(--noise-primary-note-lum)";static noisePrimaryNoteLumScale="var(--noise-primary-note-lum-scale)";static trackEditorBgPitch="var(--track-editor-bg-pitch, #444)";static trackEditorBgPitchDim="var(--track-editor-bg-pitch-dim, #333)";static trackEditorBgNoise="var(--track-editor-bg-noise, #444)";static trackEditorBgNoiseDim="var(--track-editor-bg-noise-dim, #333)";static trackEditorBgMod="var(--track-editor-bg-mod, #234)";static trackEditorBgModDim="var(--track-editor-bg-mod-dim, #123)";static multiplicativeModSlider="var(--multiplicative-mod-slider, #456;)";static overwritingModSlider="var(--overwriting-mod-slider, #654)";static indicatorPrimary="var(--indicator-primary, #74f)";static indicatorSecondary="var(--indicator-secondary, #444)";static select2OptGroup="var(--select2-opt-group, #585858)";static inputBoxOutline="var(--input-box-outline, #333)";static muteButtonNormal="var(--mute-button-normal, #ffa033)";static muteButtonMod="var(--mute-button-mod, #9a6bff)";static modLabelPrimary="var(--mod-label-primary, #999)";static modLabelSecondaryText="var(--mod-label-secondary-text, #333)";static modLabelPrimaryText="var(--mod-label-primary-text, black)";static disabledNotePrimary="var(--disabled-note-primary, #999)";static disabledNoteSecondary="var(--disabled-note-secondary, #666)";static c_pitchSecondaryChannelHue=0;static c_pitchSecondaryChannelHueScale=0;static c_pitchSecondaryChannelSat=0;static c_pitchSecondaryChannelSatScale=0;static c_pitchSecondaryChannelLum=0;static c_pitchSecondaryChannelLumScale=0;static c_pitchPrimaryChannelHue=0;static c_pitchPrimaryChannelHueScale=0;static c_pitchPrimaryChannelSat=0;static c_pitchPrimaryChannelSatScale=0;static c_pitchPrimaryChannelLum=0;static c_pitchPrimaryChannelLumScale=0;static c_pitchSecondaryNoteHue=0;static c_pitchSecondaryNoteHueScale=0;static c_pitchSecondaryNoteSat=0;static c_pitchSecondaryNoteSatScale=0;static c_pitchSecondaryNoteLum=0;static c_pitchSecondaryNoteLumScale=0;static c_pitchPrimaryNoteHue=0;static c_pitchPrimaryNoteHueScale=0;static c_pitchPrimaryNoteSat=0;static c_pitchPrimaryNoteSatScale=0;static c_pitchPrimaryNoteLum=0;static c_pitchPrimaryNoteLumScale=0;static c_modSecondaryChannelHue=0;static c_modSecondaryChannelHueScale=0;static c_modSecondaryChannelSat=0;static c_modSecondaryChannelSatScale=0;static c_modSecondaryChannelLum=0;static c_modSecondaryChannelLumScale=0;static c_modPrimaryChannelHue=0;static c_modPrimaryChannelHueScale=0;static c_modPrimaryChannelSat=0;static c_modPrimaryChannelSatScale=0;static c_modPrimaryChannelLum=0;static c_modPrimaryChannelLumScale=0;static c_modSecondaryNoteHue=0;static c_modSecondaryNoteHueScale=0;static c_modSecondaryNoteSat=0;static c_modSecondaryNoteSatScale=0;static c_modSecondaryNoteLum=0;static c_modSecondaryNoteLumScale=0;static c_modPrimaryNoteHue=0;static c_modPrimaryNoteHueScale=0;static c_modPrimaryNoteSat=0;static c_modPrimaryNoteSatScale=0;static c_modPrimaryNoteLum=0;static c_modPrimaryNoteLumScale=0;static c_noiseSecondaryChannelHue=0;static c_noiseSecondaryChannelHueScale=0;static c_noiseSecondaryChannelSat=0;static c_noiseSecondaryChannelSatScale=0;static c_noiseSecondaryChannelLum=0;static c_noiseSecondaryChannelLumScale=0;static c_noisePrimaryChannelHue=0;static c_noisePrimaryChannelHueScale=0;static c_noisePrimaryChannelSat=0;static c_noisePrimaryChannelSatScale=0;static c_noisePrimaryChannelLum=0;static c_noisePrimaryChannelLumScale=0;static c_noiseSecondaryNoteHue=0;static c_noiseSecondaryNoteHueScale=0;static c_noiseSecondaryNoteSat=0;static c_noiseSecondaryNoteSatScale=0;static c_noiseSecondaryNoteLum=0;static c_noiseSecondaryNoteLumScale=0;static c_noisePrimaryNoteHue=0;static c_noisePrimaryNoteHueScale=0;static c_noisePrimaryNoteSat=0;static c_noisePrimaryNoteSatScale=0;static c_noisePrimaryNoteLum=0;static c_noisePrimaryNoteLumScale=0;static c_pitchChannelCountOverride=40;static c_noiseChannelCountOverride=16;static c_modChannelCountOverride=12;static c_pitchLimit=1;static c_noiseLimit=1;static c_modLimit=1;static c_colorFormulaPitchLimit=1;static c_colorFormulaNoiseLimit=1;static c_colorFormulaModLimit=1;static c_invertedText="";static c_trackEditorBgNoiseDim="";static c_trackEditorBgNoise="";static c_trackEditorBgModDim="";static c_trackEditorBgMod="";static c_trackEditorBgPitchDim="";static c_trackEditorBgPitch="";static pitchChannels=he([{name:"pitch1",secondaryChannel:"var(--pitch1-secondary-channel, #0099A1)",primaryChannel:"var(--pitch1-primary-channel, #25F3FF)",secondaryNote:"var(--pitch1-secondary-note, #00BDC7)",primaryNote:"var(--pitch1-primary-note, #92F9FF)"},{name:"pitch2",secondaryChannel:"var(--pitch2-secondary-channel, #A1A100)",primaryChannel:"var(--pitch2-primary-channel, #FFFF25)",secondaryNote:"var(--pitch2-secondary-note, #C7C700)",primaryNote:"var(--pitch2-primary-note, #FFFF92)"},{name:"pitch3",secondaryChannel:"var(--pitch3-secondary-channel, #C75000)",primaryChannel:"var(--pitch3-primary-channel, #FF9752)",secondaryNote:"var(--pitch3-secondary-note, #FF771C)",primaryNote:"var(--pitch3-primary-note, #FFCDAB)"},{name:"pitch4",secondaryChannel:"var(--pitch4-secondary-channel, #00A100)",primaryChannel:"var(--pitch4-primary-channel, #50FF50)",secondaryNote:"var(--pitch4-secondary-note, #00C700)",primaryNote:"var(--pitch4-primary-note, #A0FFA0)"},{name:"pitch5",secondaryChannel:"var(--pitch5-secondary-channel, #D020D0)",primaryChannel:"var(--pitch5-primary-channel, #FF90FF)",secondaryNote:"var(--pitch5-secondary-note, #E040E0)",primaryNote:"var(--pitch5-primary-note, #FFC0FF)"},{name:"pitch6",secondaryChannel:"var(--pitch6-secondary-channel, #7777B0)",primaryChannel:"var(--pitch6-primary-channel, #A0A0FF)",secondaryNote:"var(--pitch6-secondary-note, #8888D0)",primaryNote:"var(--pitch6-primary-note, #D0D0FF)"},{name:"pitch7",secondaryChannel:"var(--pitch7-secondary-channel, #8AA100)",primaryChannel:"var(--pitch7-primary-channel, #DEFF25)",secondaryNote:"var(--pitch7-secondary-note, #AAC700)",primaryNote:"var(--pitch7-primary-note, #E6FF92)"},{name:"pitch8",secondaryChannel:"var(--pitch8-secondary-channel, #DF0019)",primaryChannel:"var(--pitch8-primary-channel, #FF98A4)",secondaryNote:"var(--pitch8-secondary-note, #FF4E63)",primaryNote:"var(--pitch8-primary-note, #FFB2BB)"},{name:"pitch9",secondaryChannel:"var(--pitch9-secondary-channel, #00A170)",primaryChannel:"var(--pitch9-primary-channel, #50FFC9)",secondaryNote:"var(--pitch9-secondary-note, #00C78A)",primaryNote:"var(--pitch9-primary-note, #83FFD9)"},{name:"pitch10",secondaryChannel:"var(--pitch10-secondary-channel, #A11FFF)",primaryChannel:"var(--pitch10-primary-channel, #CE8BFF)",secondaryNote:"var(--pitch10-secondary-note, #B757FF)",primaryNote:"var(--pitch10-primary-note, #DFACFF)"}]);static noiseChannels=he([{name:"noise1",secondaryChannel:"var(--noise1-secondary-channel, #6F6F6F)",primaryChannel:"var(--noise1-primary-channel, #AAAAAA)",secondaryNote:"var(--noise1-secondary-note, #A7A7A7)",primaryNote:"var(--noise1-primary-note, #E0E0E0)"},{name:"noise2",secondaryChannel:"var(--noise2-secondary-channel, #996633)",primaryChannel:"var(--noise2-primary-channel, #DDAA77)",secondaryNote:"var(--noise2-secondary-note, #CC9966)",primaryNote:"var(--noise2-primary-note, #F0D0BB)"},{name:"noise3",secondaryChannel:"var(--noise3-secondary-channel, #4A6D8F)",primaryChannel:"var(--noise3-primary-channel, #77AADD)",secondaryNote:"var(--noise3-secondary-note, #6F9FCF)",primaryNote:"var(--noise3-primary-note, #BBD7FF)"},{name:"noise4",secondaryChannel:"var(--noise4-secondary-channel, #7A4F9A)",primaryChannel:"var(--noise4-primary-channel, #AF82D2)",secondaryNote:"var(--noise4-secondary-note, #9E71C1)",primaryNote:"var(--noise4-primary-note, #D4C1EA)"},{name:"noise5",secondaryChannel:"var(--noise5-secondary-channel, #607837)",primaryChannel:"var(--noise5-primary-channel, #A2BB77)",secondaryNote:"var(--noise5-secondary-note, #91AA66)",primaryNote:"var(--noise5-primary-note, #C5E2B2)"}]);static modChannels=he([{name:"mod1",secondaryChannel:"var(--mod1-secondary-channel, #339955)",primaryChannel:"var(--mod1-primary-channel, #77fc55)",secondaryNote:"var(--mod1-secondary-note, #77ff8a)",primaryNote:"var(--mod1-primary-note, #cdffee)"},{name:"mod2",secondaryChannel:"var(--mod2-secondary-channel, #993355)",primaryChannel:"var(--mod2-primary-channel, #f04960)",secondaryNote:"var(--mod2-secondary-note, #f057a0)",primaryNote:"var(--mod2-primary-note, #ffb8de)"},{name:"mod3",secondaryChannel:"var(--mod3-secondary-channel, #553399)",primaryChannel:"var(--mod3-primary-channel, #8855fc)",secondaryNote:"var(--mod3-secondary-note, #aa64ff)",primaryNote:"var(--mod3-primary-note, #f8ddff)"},{name:"mod4",secondaryChannel:"var(--mod4-secondary-channel, #a86436)",primaryChannel:"var(--mod4-primary-channel, #c8a825)",secondaryNote:"var(--mod4-secondary-note, #e8ba46)",primaryNote:"var(--mod4-primary-note, #fff6d3)"}]);static resetColors(){this.colorLookup.clear()}static getArbitaryChannelColor(e,a){if(!this.usesColorFormula){let c;switch(e){case"noise":{c=i.noiseChannels[a%this.c_noiseLimit%i.noiseChannels.length];break}case"mod":{c=i.modChannels[a%this.c_modLimit%i.modChannels.length];break}case"pitch":default:{c=i.pitchChannels[a%this.c_pitchLimit%i.pitchChannels.length];break}}var n=/\(([^\,)]+)/;let u=i.getComputed(n.exec(c.secondaryChannel)[1]),b=i.getComputed(n.exec(c.primaryChannel)[1]),l=i.getComputed(n.exec(c.secondaryNote)[1]),g=i.getComputed(n.exec(c.primaryNote)[1]);return{secondaryChannel:u,primaryChannel:b,secondaryNote:l,primaryNote:g}}let r=this.c_colorFormulaPitchLimit,s=this.c_colorFormulaNoiseLimit,o=this.c_colorFormulaModLimit;switch(e){case"noise":{let c="hsl("+(this.c_noiseSecondaryChannelHue+a*this.c_noiseSecondaryChannelHueScale/this.c_noiseChannelCountOverride*256)%s+","+(this.c_noiseSecondaryChannelSat+a*this.c_noiseSecondaryChannelSatScale)+"%,"+(this.c_noiseSecondaryChannelLum+a*this.c_noiseSecondaryChannelLumScale)+"%)",u="hsl("+(this.c_noisePrimaryChannelHue+a*this.c_noisePrimaryChannelHueScale/this.c_noiseChannelCountOverride*256)%s+","+(this.c_noisePrimaryChannelSat+a*this.c_noisePrimaryChannelSatScale)+"%,"+(this.c_noisePrimaryChannelLum+a*this.c_noisePrimaryChannelLumScale)+"%)",b="hsl("+(this.c_noiseSecondaryNoteHue+a*this.c_noiseSecondaryNoteHueScale/this.c_noiseChannelCountOverride*256)%s+","+(this.c_noiseSecondaryNoteSat+a*this.c_noiseSecondaryNoteSatScale)+"%,"+(this.c_noiseSecondaryNoteLum+a*this.c_noiseSecondaryNoteLumScale)+"%)",l="hsl("+(this.c_noisePrimaryNoteHue+a*this.c_noisePrimaryNoteHueScale/this.c_noiseChannelCountOverride*256)%s+","+(this.c_noisePrimaryNoteSat+a*this.c_noisePrimaryNoteSatScale)+"%,"+(this.c_noisePrimaryNoteLum+a*this.c_noisePrimaryNoteLumScale)+"%)";return{secondaryChannel:c,primaryChannel:u,secondaryNote:b,primaryNote:l}}case"mod":{let c="hsl("+(this.c_modSecondaryChannelHue+a*this.c_modSecondaryChannelHueScale/this.c_modChannelCountOverride*256)%o+","+(this.c_modSecondaryChannelSat+a*this.c_modSecondaryChannelSatScale)+"%,"+(this.c_modSecondaryChannelLum+a*this.c_modSecondaryChannelLumScale)+"%)",u="hsl("+(this.c_modPrimaryChannelHue+a*this.c_modPrimaryChannelHueScale/this.c_modChannelCountOverride*256)%o+","+(this.c_modPrimaryChannelSat+a*this.c_modPrimaryChannelSatScale)+"%,"+(this.c_modPrimaryChannelLum+a*this.c_modPrimaryChannelLumScale)+"%)",b="hsl("+(this.c_modSecondaryNoteHue+a*this.c_modSecondaryNoteHueScale/this.c_modChannelCountOverride*256)%o+","+(this.c_modSecondaryNoteSat+a*this.c_modSecondaryNoteSatScale)+"%,"+(this.c_modSecondaryNoteLum+a*this.c_modSecondaryNoteLumScale)+"%)",l="hsl("+(this.c_modPrimaryNoteHue+a*this.c_modPrimaryNoteHueScale/this.c_modChannelCountOverride*256)%o+","+(this.c_modPrimaryNoteSat+a*this.c_modPrimaryNoteSatScale)+"%,"+(this.c_modPrimaryNoteLum+a*this.c_modPrimaryNoteLumScale)+"%)";return{secondaryChannel:c,primaryChannel:u,secondaryNote:b,primaryNote:l}}case"pitch":default:{let c="hsl("+(this.c_pitchSecondaryChannelHue+a*this.c_pitchSecondaryChannelHueScale/this.c_pitchChannelCountOverride*256)%r+","+this.c_pitchSecondaryChannelSat*(1-this.c_pitchSecondaryChannelSatScale*Math.floor(a/7))+"%,"+this.c_pitchSecondaryChannelLum*(1-this.c_pitchSecondaryChannelLumScale*Math.floor(a/7))+"%)",u="hsl("+(this.c_pitchPrimaryChannelHue+a*this.c_pitchPrimaryChannelHueScale/this.c_pitchChannelCountOverride*256)%r+","+this.c_pitchPrimaryChannelSat*(1-this.c_pitchPrimaryChannelSatScale*Math.floor(a/7))+"%,"+this.c_pitchPrimaryChannelLum*(1-this.c_pitchPrimaryChannelLumScale*Math.floor(a/7))+"%)",b="hsl("+(this.c_pitchSecondaryNoteHue+a*this.c_pitchSecondaryNoteHueScale/this.c_pitchChannelCountOverride*256)%r+","+this.c_pitchSecondaryNoteSat*(1-this.c_pitchSecondaryNoteSatScale*Math.floor(a/7))+"%,"+this.c_pitchSecondaryNoteLum*(1-this.c_pitchSecondaryNoteLumScale*Math.floor(a/7))+"%)",l="hsl("+(this.c_pitchPrimaryNoteHue+a*this.c_pitchPrimaryNoteHueScale/this.c_pitchChannelCountOverride*256)%r+","+this.c_pitchPrimaryNoteSat*(1-this.c_pitchPrimaryNoteSatScale*Math.floor(a/7))+"%,"+this.c_pitchPrimaryNoteLum*(1-this.c_pitchPrimaryNoteLumScale*Math.floor(a/7))+"%)";return{secondaryChannel:c,primaryChannel:u,secondaryNote:b,primaryNote:l}}}}static getComputedChannelColor(e,a,n,r){if(this.usesColorFormula)return i.getChannelColor(e,a,n,r);{let o=i.getChannelColor(e,a,n,r);var s=/\(([^\,)]+)/;let c=i.getComputed(s.exec(o.secondaryChannel)[1]),u=i.getComputed(s.exec(o.primaryChannel)[1]),b=i.getComputed(s.exec(o.secondaryNote)[1]),l=i.getComputed(s.exec(o.primaryNote)[1]);return{secondaryChannel:c,primaryChannel:u,secondaryNote:b,primaryNote:l}}}static getChannelColor(e,a,n,r){if(this.usesColorFormula){if(r&&(a=n),i.colorLookup.has(a))return i.colorLookup.get(a);{let s=this.c_colorFormulaPitchLimit,o=this.c_colorFormulaNoiseLimit,c=this.c_colorFormulaModLimit;if(n<e.pitchChannelCount){let u="hsl("+(this.c_pitchSecondaryChannelHue+a*this.c_pitchSecondaryChannelHueScale/this.c_pitchChannelCountOverride*256)%s+","+this.c_pitchSecondaryChannelSat*(1-this.c_pitchSecondaryChannelSatScale*Math.floor(a/9))+"%,"+this.c_pitchSecondaryChannelLum*(1-this.c_pitchSecondaryChannelLumScale*Math.floor(a/9))+"%)",b="hsl("+(this.c_pitchPrimaryChannelHue+a*this.c_pitchPrimaryChannelHueScale/this.c_pitchChannelCountOverride*256)%s+","+this.c_pitchPrimaryChannelSat*(1-this.c_pitchPrimaryChannelSatScale*Math.floor(a/9))+"%,"+this.c_pitchPrimaryChannelLum*(1-this.c_pitchPrimaryChannelLumScale*Math.floor(a/9))+"%)",l="hsl("+(this.c_pitchSecondaryNoteHue+a*this.c_pitchSecondaryNoteHueScale/this.c_pitchChannelCountOverride*256)%s+","+this.c_pitchSecondaryNoteSat*(1-this.c_pitchSecondaryNoteSatScale*Math.floor(a/9))+"%,"+this.c_pitchSecondaryNoteLum*(1-this.c_pitchSecondaryNoteLumScale*Math.floor(a/9))+"%)",g="hsl("+(this.c_pitchPrimaryNoteHue+a*this.c_pitchPrimaryNoteHueScale/this.c_pitchChannelCountOverride*256)%s+","+this.c_pitchPrimaryNoteSat*(1-this.c_pitchPrimaryNoteSatScale*Math.floor(a/9))+"%,"+this.c_pitchPrimaryNoteLum*(1-this.c_pitchPrimaryNoteLumScale*Math.floor(a/9))+"%)",m={secondaryChannel:u,primaryChannel:b,secondaryNote:l,primaryNote:g};return i.colorLookup.set(a,m),m}else if(n<e.pitchChannelCount+e.noiseChannelCount){let u="hsl("+(this.c_noiseSecondaryChannelHue+(a-e.pitchChannelCount)*this.c_noiseSecondaryChannelHueScale/this.c_noiseChannelCountOverride*256)%o+","+(this.c_noiseSecondaryChannelSat+a*this.c_noiseSecondaryChannelSatScale)+"%,"+(this.c_noiseSecondaryChannelLum+a*this.c_noiseSecondaryChannelLumScale)+"%)",b="hsl("+(this.c_noisePrimaryChannelHue+(a-e.pitchChannelCount)*this.c_noisePrimaryChannelHueScale/this.c_noiseChannelCountOverride*256)%o+","+(this.c_noisePrimaryChannelSat+a*this.c_noisePrimaryChannelSatScale)+"%,"+(this.c_noisePrimaryChannelLum+a*this.c_noisePrimaryChannelLumScale)+"%)",l="hsl("+(this.c_noiseSecondaryNoteHue+(a-e.pitchChannelCount)*this.c_noiseSecondaryNoteHueScale/this.c_noiseChannelCountOverride*256)%o+","+(this.c_noiseSecondaryNoteSat+a*this.c_noiseSecondaryNoteSatScale)+"%,"+(this.c_noiseSecondaryNoteLum+a*this.c_noiseSecondaryNoteLumScale)+"%)",g="hsl("+(this.c_noisePrimaryNoteHue+(a-e.pitchChannelCount)*this.c_noisePrimaryNoteHueScale/this.c_noiseChannelCountOverride*256)%o+","+(this.c_noisePrimaryNoteSat+a*this.c_noisePrimaryNoteSatScale)+"%,"+(this.c_noisePrimaryNoteLum+a*this.c_noisePrimaryNoteLumScale)+"%)",m={secondaryChannel:u,primaryChannel:b,secondaryNote:l,primaryNote:g};return i.colorLookup.set(a,m),m}else{let u="hsl("+(this.c_modSecondaryChannelHue+(a-e.pitchChannelCount-e.noiseChannelCount)*this.c_modSecondaryChannelHueScale/this.c_modChannelCountOverride*256)%c+","+(this.c_modSecondaryChannelSat+a*this.c_modSecondaryChannelSatScale)+"%,"+(this.c_modSecondaryChannelLum+a*this.c_modSecondaryChannelLumScale)+"%)",b="hsl("+(this.c_modPrimaryChannelHue+(a-e.pitchChannelCount-e.noiseChannelCount)*this.c_modPrimaryChannelHueScale/this.c_modChannelCountOverride*256)%c+","+(this.c_modPrimaryChannelSat+a*this.c_modPrimaryChannelSatScale)+"%,"+(this.c_modPrimaryChannelLum+a*this.c_modPrimaryChannelLumScale)+"%)",l="hsl("+(this.c_modSecondaryNoteHue+(a-e.pitchChannelCount-e.noiseChannelCount)*this.c_modSecondaryNoteHueScale/this.c_modChannelCountOverride*256)%c+","+(this.c_modSecondaryNoteSat+a*this.c_modSecondaryNoteSatScale)+"%,"+(this.c_modSecondaryNoteLum+a*this.c_modSecondaryNoteLumScale)+"%)",g="hsl("+(this.c_modPrimaryNoteHue+(a-e.pitchChannelCount-e.noiseChannelCount)*this.c_modPrimaryNoteHueScale/this.c_modChannelCountOverride*256)%c+","+(this.c_modPrimaryNoteSat+a*this.c_modPrimaryNoteSatScale)+"%,"+(this.c_modPrimaryNoteLum+a*this.c_modPrimaryNoteLumScale)+"%)",m={secondaryChannel:u,primaryChannel:b,secondaryNote:l,primaryNote:g};return i.colorLookup.set(a,m),m}}}else return r?n<e.pitchChannelCount?i.pitchChannels[n%this.c_pitchLimit%i.pitchChannels.length]:n<e.pitchChannelCount+e.noiseChannelCount?i.noiseChannels[(n-e.pitchChannelCount)%this.c_noiseLimit%i.noiseChannels.length]:i.modChannels[(n-e.pitchChannelCount-e.noiseChannelCount)%this.c_modLimit%i.modChannels.length]:n<e.pitchChannelCount?i.pitchChannels[a%this.c_pitchLimit%i.pitchChannels.length]:n<e.pitchChannelCount+e.noiseChannelCount?i.noiseChannels[a%this.c_noiseLimit%i.noiseChannels.length]:i.modChannels[a%this.c_modLimit%i.modChannels.length]}static $=document.head.appendChild(Gt.style({type:"text/css"}));static setTheme(e){let a=this.themes[e];a==null&&(a=i.defaultTheme),this.$.textContent=a;let n=":root{";getComputedStyle(this.$).getPropertyValue("--oscilloscope-line-L")==""&&(n+="--oscilloscope-line-L:var(--primary-text,white);"),getComputedStyle(this.$).getPropertyValue("--oscilloscope-line-R")==""&&(n+="--oscilloscope-line-R:var(--text-selection,rgba(119,68,255,0.99));"),getComputedStyle(this.$).getPropertyValue("--text-enabled-icon")==""&&(n+="--text-enabled-icon:\u2713 ;"),getComputedStyle(this.$).getPropertyValue("--text-disabled-icon")==""&&(n+="--text-disabled-icon:\u3000;"),getComputedStyle(this.$).getPropertyValue("--text-spacing-icon")==""&&(n+="--text-spacing-icon:\u3000;"),getComputedStyle(this.$).getPropertyValue("--note-flash")==""&&(n+="--note-flash:#ffffff;"),getComputedStyle(this.$).getPropertyValue("--note-flash-secondary")==""&&(n+="--note-flash-secondary:#ffffff77;"),getComputedStyle(this.$).getPropertyValue("--pitch-channel-limit")==""&&(n+="--pitch-channel-limit:"+t.pitchChannelCountMax+";"),getComputedStyle(this.$).getPropertyValue("--noise-channel-limit")==""&&(n+="--noise-channel-limit:"+t.noiseChannelCountMax+";"),getComputedStyle(this.$).getPropertyValue("--mod-channel-limit")==""&&(n+="--mod-channel-limit:"+t.modChannelCountMax+";"),getComputedStyle(this.$).getPropertyValue("--formula-pitch-channel-limit")==""&&(n+="--formula-pitch-channel-limit:360;"),getComputedStyle(this.$).getPropertyValue("--formula-noise-channel-limit")==""&&(n+="--formula-noise-channel-limit:360;"),getComputedStyle(this.$).getPropertyValue("--formula-mod-channel-limit")==""&&(n+="--formula-mod-channel-limit:360;"),getComputedStyle(this.$).getPropertyValue("--editor-background")==""&&(n+="--editor-background:black;"),getComputedStyle(this.$).getPropertyValue("--ui-widget-background")==""&&(n+="--ui-widget-background:#444;"),getComputedStyle(this.$).getPropertyValue("--loop-accent")==""&&(n+="--loop-accent:#74f;"),getComputedStyle(this.$).getPropertyValue("--box-selection-fill")==""&&(n+="--box-selection-fill:rgba(255,255,255,0.2);"),getComputedStyle(this.$).getPropertyValue("--primary-text")==""&&(n+="--primary-text:white;"),getComputedStyle(this.$).getPropertyValue("--inverted-text")==""&&(n+="--inverted-text:black;"),getComputedStyle(this.$).getPropertyValue("--track-editor-bg-pitch")==""&&(n+="--track-editor-bg-pitch:#444;"),getComputedStyle(this.$).getPropertyValue("--track-editor-bg-pitch-dim")==""&&(n+="--track-editor-bg-pitch-dim:#333;"),getComputedStyle(this.$).getPropertyValue("--track-editor-bg-noise")==""&&(n+="--track-editor-bg-noise:#444;"),getComputedStyle(this.$).getPropertyValue("--track-editor-bg-noise-dim")==""&&(n+="--track-editor-bg-noise-dim:#333;"),getComputedStyle(this.$).getPropertyValue("--track-editor-bg-mod")==""&&(n+="--track-editor-bg-mod:#234;"),getComputedStyle(this.$).getPropertyValue("--track-editor-bg-mod-dim")==""&&(n+="--track-editor-bg-mod-dim:#123;"),getComputedStyle(this.$).getPropertyValue("--mute-button-normal")==""&&(n+="--mute-button-normal:#ffa033;"),getComputedStyle(this.$).getPropertyValue("--mute-button-mod")==""&&(n+="--mute-button-mod:#9a6bff;"),getComputedStyle(this.$).getPropertyValue("--pitch1-secondary-channel")==""&&(n+="--pitch1-secondary-channel:#0099A1;"),getComputedStyle(this.$).getPropertyValue("--pitch1-primary-channel")==""&&(n+="--pitch1-primary-channel:#25F3FF;"),getComputedStyle(this.$).getPropertyValue("--pitch1-secondary-note")==""&&(n+="--pitch1-secondary-note:#00BDC7;"),getComputedStyle(this.$).getPropertyValue("--pitch1-primary-note")==""&&(n+="--pitch1-primary-note:#92F9FF;"),getComputedStyle(this.$).getPropertyValue("--pitch2-secondary-channel")==""&&(n+="--pitch2-secondary-channel:#A1A100;"),getComputedStyle(this.$).getPropertyValue("--pitch2-primary-channel")==""&&(n+="--pitch2-primary-channel:#FFFF25;"),getComputedStyle(this.$).getPropertyValue("--pitch2-secondary-note")==""&&(n+="--pitch2-secondary-note:#C7C700;"),getComputedStyle(this.$).getPropertyValue("--pitch2-primary-note")==""&&(n+="--pitch2-primary-note:#FFFF92;"),getComputedStyle(this.$).getPropertyValue("--pitch3-secondary-channel")==""&&(n+="--pitch3-secondary-channel:#C75000;"),getComputedStyle(this.$).getPropertyValue("--pitch3-primary-channel")==""&&(n+="--pitch3-primary-channel:#FF9752;"),getComputedStyle(this.$).getPropertyValue("--pitch3-secondary-note")==""&&(n+="--pitch3-secondary-note:#FF771C;"),getComputedStyle(this.$).getPropertyValue("--pitch3-primary-note")==""&&(n+="--pitch3-primary-note:#FFCDAB;"),getComputedStyle(this.$).getPropertyValue("--pitch4-secondary-channel")==""&&(n+="--pitch4-secondary-channel:#00A100;"),getComputedStyle(this.$).getPropertyValue("--pitch4-primary-channel")==""&&(n+="--pitch4-primary-channel:#50FF50;"),getComputedStyle(this.$).getPropertyValue("--pitch4-secondary-note")==""&&(n+="--pitch4-secondary-note:#00C700;"),getComputedStyle(this.$).getPropertyValue("--pitch4-primary-note")==""&&(n+="--pitch4-primary-note:#A0FFA0;"),getComputedStyle(this.$).getPropertyValue("--pitch5-secondary-channel")==""&&(n+="--pitch5-secondary-channel:#D020D0;"),getComputedStyle(this.$).getPropertyValue("--pitch5-primary-channel")==""&&(n+="--pitch5-primary-channel:#FF90FF;"),getComputedStyle(this.$).getPropertyValue("--pitch5-secondary-note")==""&&(n+="--pitch5-secondary-note:#E040E0;"),getComputedStyle(this.$).getPropertyValue("--pitch5-primary-note")==""&&(n+="--pitch5-primary-note:#FFC0FF;"),getComputedStyle(this.$).getPropertyValue("--pitch6-secondary-channel")==""&&(n+="--pitch6-secondary-channel:#7777B0;"),getComputedStyle(this.$).getPropertyValue("--pitch6-primary-channel")==""&&(n+="--pitch6-primary-channel:#A0A0FF;"),getComputedStyle(this.$).getPropertyValue("--pitch6-secondary-note")==""&&(n+="--pitch6-secondary-note:#8888D0;"),getComputedStyle(this.$).getPropertyValue("--pitch6-primary-note")==""&&(n+="--pitch6-primary-note:#D0D0FF;"),getComputedStyle(this.$).getPropertyValue("--pitch7-secondary-channel")==""&&(n+="--pitch7-secondary-channel:#8AA100;"),getComputedStyle(this.$).getPropertyValue("--pitch7-primary-channel")==""&&(n+="--pitch7-primary-channel:#DEFF25;"),getComputedStyle(this.$).getPropertyValue("--pitch7-secondary-note")==""&&(n+="--pitch7-secondary-note:#AAC700;"),getComputedStyle(this.$).getPropertyValue("--pitch7-primary-note")==""&&(n+="--pitch7-primary-note:#E6FF92;"),getComputedStyle(this.$).getPropertyValue("--pitch8-secondary-channel")==""&&(n+="--pitch8-secondary-channel:#DF0019;"),getComputedStyle(this.$).getPropertyValue("--pitch8-primary-channel")==""&&(n+="--pitch8-primary-channel:#FF98A4;"),getComputedStyle(this.$).getPropertyValue("--pitch8-secondary-note")==""&&(n+="--pitch8-secondary-note:#FF4E63;"),getComputedStyle(this.$).getPropertyValue("--pitch8-primary-note")==""&&(n+="--pitch8-primary-note:#FFB2BB;"),getComputedStyle(this.$).getPropertyValue("--pitch9-secondary-channel")==""&&(n+="--pitch9-secondary-channel:#00A170;"),getComputedStyle(this.$).getPropertyValue("--pitch9-primary-channel")==""&&(n+="--pitch9-primary-channel:#50FFC9;"),getComputedStyle(this.$).getPropertyValue("--pitch9-secondary-note")==""&&(n+="--pitch9-secondary-note:#00C78A;"),getComputedStyle(this.$).getPropertyValue("--pitch9-primary-note")==""&&(n+="--pitch9-primary-note:#83FFD9;"),getComputedStyle(this.$).getPropertyValue("--pitch10-secondary-channel")==""&&(n+="--pitch10-secondary-channel:#A11FFF;"),getComputedStyle(this.$).getPropertyValue("--pitch10-primary-channel")==""&&(n+="--pitch10-primary-channel:#CE8BFF;"),getComputedStyle(this.$).getPropertyValue("--pitch10-secondary-note")==""&&(n+="--pitch10-secondary-note:#B757FF;"),getComputedStyle(this.$).getPropertyValue("--pitch10-primary-note")==""&&(n+="--pitch10-primary-note:#DFACFF;"),getComputedStyle(this.$).getPropertyValue("--noise1-secondary-channel")==""&&(n+="--noise1-secondary-channel:#6F6F6F;"),getComputedStyle(this.$).getPropertyValue("--noise1-primary-channel")==""&&(n+="--noise1-primary-channel:#AAAAAA;"),getComputedStyle(this.$).getPropertyValue("--noise1-secondary-note")==""&&(n+="--noise1-secondary-note:#A7A7A7;"),getComputedStyle(this.$).getPropertyValue("--noise1-primary-note")==""&&(n+="--noise1-primary-note:#E0E0E0;"),getComputedStyle(this.$).getPropertyValue("--noise2-secondary-channel")==""&&(n+="--noise2-secondary-channel:#996633;"),getComputedStyle(this.$).getPropertyValue("--noise2-primary-channel")==""&&(n+="--noise2-primary-channel:#DDAA77;"),getComputedStyle(this.$).getPropertyValue("--noise2-secondary-note")==""&&(n+="--noise2-secondary-note:#CC9966;"),getComputedStyle(this.$).getPropertyValue("--noise2-primary-note")==""&&(n+="--noise2-primary-note:#F0D0BB;"),getComputedStyle(this.$).getPropertyValue("--noise3-secondary-channel")==""&&(n+="--noise3-secondary-channel:#4A6D8F;"),getComputedStyle(this.$).getPropertyValue("--noise3-primary-channel")==""&&(n+="--noise3-primary-channel:#77AADD;"),getComputedStyle(this.$).getPropertyValue("--noise3-secondary-note")==""&&(n+="--noise3-secondary-note:#6F9FCF;"),getComputedStyle(this.$).getPropertyValue("--noise3-primary-note")==""&&(n+="--noise3-primary-note:#BBD7FF;"),getComputedStyle(this.$).getPropertyValue("--noise4-secondary-channel")==""&&(n+="--noise4-secondary-channel:#7A4F9A;"),getComputedStyle(this.$).getPropertyValue("--noise4-primary-channel")==""&&(n+="--noise4-primary-channel:#AF82D2;"),getComputedStyle(this.$).getPropertyValue("--noise4-secondary-note")==""&&(n+="--noise4-secondary-note:#9E71C1;"),getComputedStyle(this.$).getPropertyValue("--noise4-primary-note")==""&&(n+="--noise4-primary-note:#D4C1EA;"),getComputedStyle(this.$).getPropertyValue("--noise5-secondary-channel")==""&&(n+="--noise5-secondary-channel:#607837;"),getComputedStyle(this.$).getPropertyValue("--noise5-primary-channel")==""&&(n+="--noise5-primary-channel:#A2BB77;"),getComputedStyle(this.$).getPropertyValue("--noise5-secondary-note")==""&&(n+="--noise5-secondary-note:#91AA66;"),getComputedStyle(this.$).getPropertyValue("--noise5-primary-note")==""&&(n+="--noise5-primary-note:#C5E2B2;"),getComputedStyle(this.$).getPropertyValue("--mod1-secondary-channel")==""&&(n+="--mod1-secondary-channel:#339955;"),getComputedStyle(this.$).getPropertyValue("--mod1-primary-channel")==""&&(n+="--mod1-primary-channel:#77fc55;"),getComputedStyle(this.$).getPropertyValue("--mod1-secondary-note")==""&&(n+="--mod1-secondary-note:#77ff8a;"),getComputedStyle(this.$).getPropertyValue("--mod1-primary-note")==""&&(n+="--mod1-primary-note:#cdffee;"),getComputedStyle(this.$).getPropertyValue("--mod2-secondary-channel")==""&&(n+="--mod2-secondary-channel:#993355;"),getComputedStyle(this.$).getPropertyValue("--mod2-primary-channel")==""&&(n+="--mod2-primary-channel:#f04960;"),getComputedStyle(this.$).getPropertyValue("--mod2-secondary-note")==""&&(n+="--mod2-secondary-note:#f057a0;"),getComputedStyle(this.$).getPropertyValue("--mod2-primary-note")==""&&(n+="--mod2-primary-note:#ffb8de;"),getComputedStyle(this.$).getPropertyValue("--mod3-secondary-channel")==""&&(n+="--mod3-secondary-channel:#553399;"),getComputedStyle(this.$).getPropertyValue("--mod3-primary-channel")==""&&(n+="--mod3-primary-channel:#8855fc;"),getComputedStyle(this.$).getPropertyValue("--mod3-secondary-note")==""&&(n+="--mod3-secondary-note:#aa64ff;"),getComputedStyle(this.$).getPropertyValue("--mod3-primary-note")==""&&(n+="--mod3-primary-note:#f8ddff;"),getComputedStyle(this.$).getPropertyValue("--mod4-secondary-channel")==""&&(n+="--mod4-secondary-channel:#a86436;"),getComputedStyle(this.$).getPropertyValue("--mod4-primary-channel")==""&&(n+="--mod4-primary-channel:#c8a825;"),getComputedStyle(this.$).getPropertyValue("--mod4-secondary-note")==""&&(n+="--mod4-secondary-note:#e8ba46;"),getComputedStyle(this.$).getPropertyValue("--mod4-primary-note")==""&&(n+="--mod4-primary-note:#fff6d3;"),n+="}",this.$.textContent=n+this.$.textContent;let r=document.querySelector("meta[name='theme-color']");r?.setAttribute("content",getComputedStyle(document.documentElement).getPropertyValue("--ui-widget-background")),this.resetColors(),this.usesColorFormula=getComputedStyle(this.$).getPropertyValue("--use-color-formula").trim()=="true",this.c_pitchLimit=+getComputedStyle(this.$).getPropertyValue("--pitch-channel-limit"),this.c_noiseLimit=+getComputedStyle(this.$).getPropertyValue("--noise-channel-limit"),this.c_modLimit=+getComputedStyle(this.$).getPropertyValue("--mod-channel-limit"),this.c_colorFormulaPitchLimit=+getComputedStyle(this.$).getPropertyValue("--formula-pitch-channel-limit"),this.c_colorFormulaNoiseLimit=+getComputedStyle(this.$).getPropertyValue("--formula-noise-channel-limit"),this.c_colorFormulaModLimit=+getComputedStyle(this.$).getPropertyValue("--formula-mod-channel-limit"),this.c_invertedText=getComputedStyle(this.$).getPropertyValue("--inverted-text"),this.c_trackEditorBgNoiseDim=getComputedStyle(this.$).getPropertyValue("--track-editor-bg-noise-dim"),this.c_trackEditorBgNoise=getComputedStyle(this.$).getPropertyValue("--track-editor-bg-noise"),this.c_trackEditorBgModDim=getComputedStyle(this.$).getPropertyValue("--track-editor-bg-mod-dim"),this.c_trackEditorBgMod=getComputedStyle(this.$).getPropertyValue("--track-editor-bg-mod"),this.c_trackEditorBgPitchDim=getComputedStyle(this.$).getPropertyValue("--track-editor-bg-pitch-dim"),this.c_trackEditorBgPitch=getComputedStyle(this.$).getPropertyValue("--track-editor-bg-pitch"),this.usesColorFormula&&(this.c_pitchSecondaryChannelHue=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-channel-hue"),this.c_pitchSecondaryChannelHueScale=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-channel-hue-scale"),this.c_pitchSecondaryChannelSat=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-channel-sat"),this.c_pitchSecondaryChannelSatScale=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-channel-sat-scale"),this.c_pitchSecondaryChannelLum=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-channel-lum"),this.c_pitchSecondaryChannelLumScale=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-channel-lum-scale"),this.c_pitchPrimaryChannelHue=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-channel-hue"),this.c_pitchPrimaryChannelHueScale=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-channel-hue-scale"),this.c_pitchPrimaryChannelSat=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-channel-sat"),this.c_pitchPrimaryChannelSatScale=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-channel-sat-scale"),this.c_pitchPrimaryChannelLum=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-channel-lum"),this.c_pitchPrimaryChannelLumScale=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-channel-lum-scale"),this.c_pitchSecondaryNoteHue=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-note-hue"),this.c_pitchSecondaryNoteHueScale=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-note-hue-scale"),this.c_pitchSecondaryNoteSat=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-note-sat"),this.c_pitchSecondaryNoteSatScale=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-note-sat-scale"),this.c_pitchSecondaryNoteLum=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-note-lum"),this.c_pitchSecondaryNoteLumScale=+getComputedStyle(this.$).getPropertyValue("--pitch-secondary-note-lum-scale"),this.c_pitchPrimaryNoteHue=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-note-hue"),this.c_pitchPrimaryNoteHueScale=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-note-hue-scale"),this.c_pitchPrimaryNoteSat=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-note-sat"),this.c_pitchPrimaryNoteSatScale=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-note-sat-scale"),this.c_pitchPrimaryNoteLum=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-note-lum"),this.c_pitchPrimaryNoteLumScale=+getComputedStyle(this.$).getPropertyValue("--pitch-primary-note-lum-scale"),this.c_noiseSecondaryChannelHue=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-channel-hue"),this.c_noiseSecondaryChannelHueScale=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-channel-hue-scale"),this.c_noiseSecondaryChannelSat=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-channel-sat"),this.c_noiseSecondaryChannelSatScale=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-channel-sat-scale"),this.c_noiseSecondaryChannelLum=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-channel-lum"),this.c_noiseSecondaryChannelLumScale=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-channel-lum-scale"),this.c_noisePrimaryChannelHue=+getComputedStyle(this.$).getPropertyValue("--noise-primary-channel-hue"),this.c_noisePrimaryChannelHueScale=+getComputedStyle(this.$).getPropertyValue("--noise-primary-channel-hue-scale"),this.c_noisePrimaryChannelSat=+getComputedStyle(this.$).getPropertyValue("--noise-primary-channel-sat"),this.c_noisePrimaryChannelSatScale=+getComputedStyle(this.$).getPropertyValue("--noise-primary-channel-sat-scale"),this.c_noisePrimaryChannelLum=+getComputedStyle(this.$).getPropertyValue("--noise-primary-channel-lum"),this.c_noisePrimaryChannelLumScale=+getComputedStyle(this.$).getPropertyValue("--noise-primary-channel-lum-scale"),this.c_noiseSecondaryNoteHue=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-note-hue"),this.c_noiseSecondaryNoteHueScale=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-note-hue-scale"),this.c_noiseSecondaryNoteSat=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-note-sat"),this.c_noiseSecondaryNoteSatScale=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-note-sat-scale"),this.c_noiseSecondaryNoteLum=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-note-lum"),this.c_noiseSecondaryNoteLumScale=+getComputedStyle(this.$).getPropertyValue("--noise-secondary-note-lum-scale"),this.c_noisePrimaryNoteHue=+getComputedStyle(this.$).getPropertyValue("--noise-primary-note-hue"),this.c_noisePrimaryNoteHueScale=+getComputedStyle(this.$).getPropertyValue("--noise-primary-note-hue-scale"),this.c_noisePrimaryNoteSat=+getComputedStyle(this.$).getPropertyValue("--noise-primary-note-sat"),this.c_noisePrimaryNoteSatScale=+getComputedStyle(this.$).getPropertyValue("--noise-primary-note-sat-scale"),this.c_noisePrimaryNoteLum=+getComputedStyle(this.$).getPropertyValue("--noise-primary-note-lum"),this.c_noisePrimaryNoteLumScale=+getComputedStyle(this.$).getPropertyValue("--noise-primary-note-lum-scale"),this.c_modSecondaryChannelHue=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-channel-hue"),this.c_modSecondaryChannelHueScale=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-channel-hue-scale"),this.c_modSecondaryChannelSat=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-channel-sat"),this.c_modSecondaryChannelSatScale=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-channel-sat-scale"),this.c_modSecondaryChannelLum=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-channel-lum"),this.c_modSecondaryChannelLumScale=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-channel-lum-scale"),this.c_modPrimaryChannelHue=+getComputedStyle(this.$).getPropertyValue("--mod-primary-channel-hue"),this.c_modPrimaryChannelHueScale=+getComputedStyle(this.$).getPropertyValue("--mod-primary-channel-hue-scale"),this.c_modPrimaryChannelSat=+getComputedStyle(this.$).getPropertyValue("--mod-primary-channel-sat"),this.c_modPrimaryChannelSatScale=+getComputedStyle(this.$).getPropertyValue("--mod-primary-channel-sat-scale"),this.c_modPrimaryChannelLum=+getComputedStyle(this.$).getPropertyValue("--mod-primary-channel-lum"),this.c_modPrimaryChannelLumScale=+getComputedStyle(this.$).getPropertyValue("--mod-primary-channel-lum-scale"),this.c_modSecondaryNoteHue=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-note-hue"),this.c_modSecondaryNoteHueScale=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-note-hue-scale"),this.c_modSecondaryNoteSat=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-note-sat"),this.c_modSecondaryNoteSatScale=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-note-sat-scale"),this.c_modSecondaryNoteLum=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-note-lum"),this.c_modSecondaryNoteLumScale=+getComputedStyle(this.$).getPropertyValue("--mod-secondary-note-lum-scale"),this.c_modPrimaryNoteHue=+getComputedStyle(this.$).getPropertyValue("--mod-primary-note-hue"),this.c_modPrimaryNoteHueScale=+getComputedStyle(this.$).getPropertyValue("--mod-primary-note-hue-scale"),this.c_modPrimaryNoteSat=+getComputedStyle(this.$).getPropertyValue("--mod-primary-note-sat"),this.c_modPrimaryNoteSatScale=+getComputedStyle(this.$).getPropertyValue("--mod-primary-note-sat-scale"),this.c_modPrimaryNoteLum=+getComputedStyle(this.$).getPropertyValue("--mod-primary-note-lum"),this.c_modPrimaryNoteLumScale=+getComputedStyle(this.$).getPropertyValue("--mod-primary-note-lum-scale"),getComputedStyle(this.$).getPropertyValue("--formula-pitch-channel-count-override")!=""&&(this.c_pitchChannelCountOverride=+getComputedStyle(this.$).getPropertyValue("--formula-pitch-channel-count-override")),getComputedStyle(this.$).getPropertyValue("--formula-noise-channel-count-override")!=""&&(this.c_noiseChannelCountOverride=+getComputedStyle(this.$).getPropertyValue("--formula-noise-channel-count-override")),getComputedStyle(this.$).getPropertyValue("--formula-mod-channel-count-override")!=""&&(this.c_modChannelCountOverride=+getComputedStyle(this.$).getPropertyValue("--formula-mod-channel-count-override")))}static getComputed(e){return getComputedStyle(this.$).getPropertyValue(e)}};function A(i,e,a){return e=e-1,a<=e?a>=i?a:i:e}function ze(i,e,a){if(i<=a&&a<=e)return a;throw new Error(`Value ${a} not in range [${i}, ${e}]`)}function Qt(i,e){let a=parseFloat(i);return Number.isNaN(a)&&(a=e),a}function Jt(i,e){let a=parseInt(i);return Number.isNaN(a)&&(a=e),a}function Gn(i){return .0125*(.95*i+.05*i*i)}function ht(i){return A(0,t.fadeInRange,Math.round((-.95+Math.sqrt(.9025+.2*i/.0125))/.1))}function Un(i){return t.fadeOutTicks[i]}function ft(i){let e=t.fadeOutTicks[0];if(i<=e)return 0;for(let a=1;a<t.fadeOutTicks.length;a++){let n=t.fadeOutTicks[a];if(i<=n)return i<(e+n)/2?a-1:a;e=n}return t.fadeOutTicks.length-1}function Kt(i){return i-t.detuneCenter}function Aa(i){return i+t.detuneCenter}function Je(i){return 1<<32-Math.clz32(Math.ceil(i)-1)}function At(i,e,a){return{interval:i,time:e,size:a}}var st=class i{pitches;pins;start;end;continuesLastPattern;chipWaveStartOffset;constructor(e,a,n,r,s=!1,o=0){this.pitches=[e],this.pins=[At(0,0,r),At(0,n-a,s?0:r)],this.start=a,this.end=n,this.continuesLastPattern=!1,this.chipWaveStartOffset=o}pickMainInterval(){let e=0,a=0;for(let n=1;n<this.pins.length;n++){let r=this.pins[n-1],s=this.pins[n];if(r.interval==s.interval){let o=s.time-r.time;e<o&&(e=o,a=r.interval)}}if(e==0){let n=0;for(let r=0;r<this.pins.length;r++){let s=this.pins[r];n<s.size&&(n=s.size,a=s.interval)}}return a}clone(){let e=new i(-1,this.start,this.end,3);e.pitches=this.pitches.concat(),e.pins=[];for(let a of this.pins)e.pins.push(At(a.interval,a.time,a.size));return e.continuesLastPattern=this.continuesLastPattern,e}getEndPinIndex(e){let a;for(a=1;a<this.pins.length-1&&!(this.pins[a].time+this.start>e);a++);return a}},nt=class{notes=[];instruments=[0];cloneNotes(){let e=[];for(let a of this.notes)e.push(a.clone());return e}reset(){this.notes.length=0,this.instruments[0]=0,this.instruments.length=1}toJsonObject(e,a,n){let r=[];for(let o of this.notes){let c=a.instruments[this.instruments[0]],u=Math.max(0,t.modCount-o.pitches[0]-1),b=e.getVolumeCapForSetting(n,c.modulators[u],c.modFilterTypes[u]),l=[];for(let m of o.pins){let y=Math.round(n?m.size:m.size*100/b);l.push({tick:(m.time+o.start)*t.rhythms[e.rhythm].stepsPerBeat/t.partsPerBeat,pitchBend:m.interval,volume:y,forMod:n})}let g={pitches:o.pitches,points:l};o.start==0&&(g.continuesLastPattern=o.continuesLastPattern),r.push(g)}let s={notes:r};return e.patternInstruments&&(s.instruments=this.instruments.map(o=>o+1)),s}fromJsonObject(e,a,n,r,s,o,c="auto"){let u=c.toLowerCase();if(a.patternInstruments)if(Array.isArray(e.instruments)){let b=e.instruments,l=A(t.instrumentCountMin,a.getMaxInstrumentsPerPatternForChannel(n)+1,b.length);for(let g=0;g<l;g++)this.instruments[g]=A(0,n.instruments.length,(b[g]|0)-1);this.instruments.length=l}else this.instruments[0]=A(0,n.instruments.length,(e.instrument|0)-1),this.instruments.length=1;if(e.notes&&e.notes.length>0){let b=Math.min(a.beatsPerBar*t.partsPerBeat*(o?t.modCount:1),e.notes.length>>>0);for(let l=0;l<e.notes.length&&!(l>=b);l++){let g=e.notes[l];if(!g||!g.pitches||!(g.pitches.length>=1)||!g.points||!(g.points.length>=2))continue;let m=new st(0,0,0,0);m.pitches=[],m.pins=[];for(let w=0;w<g.pitches.length;w++){let v=g.pitches[w]|0;if(m.pitches.indexOf(v)==-1&&(m.pitches.push(v),m.pitches.length>=t.maxChordSize))break}if(m.pitches.length<1)continue;let y=0,h=n.instruments[this.instruments[0]],f=Math.max(0,t.modCount-m.pitches[0]-1);for(let w=0;w<g.points.length;w++){let v=g.points[w];if(v==null||v.tick==null)continue;let P=v.pitchBend==null?0:v.pitchBend|0,B=Math.round(+v.tick*t.partsPerBeat/r),L=a.getVolumeCapForSetting(o,h.modulators[f],h.modFilterTypes[f]),E;v.volume==null?E=L:v.forMod==null?E=Math.max(0,Math.min(L,Math.round((v.volume|0)*L/100))):E=(v.forMod|0)>0?Math.round(v.volume|0):Math.max(0,Math.min(L,Math.round((v.volume|0)*L/100))),!(B>a.beatsPerBar*t.partsPerBeat)&&(m.pins.length==0&&(m.start=B,y=P),m.pins.push(At(P-y,B-m.start,E)))}if(m.pins.length<2)continue;m.end=m.pins[m.pins.length-1].time+m.start;let p=s?t.drumCount-1:t.maxPitch,S=p,x=0;for(let w=0;w<m.pitches.length;w++)m.pitches[w]+=y,(m.pitches[w]<0||m.pitches[w]>p)&&(m.pitches.splice(w,1),w--),m.pitches[w]<S&&(S=m.pitches[w]),m.pitches[w]>x&&(x=m.pitches[w]);if(!(m.pitches.length<1)){for(let w=0;w<m.pins.length;w++){let v=m.pins[w];v.interval+S<0&&(v.interval=-S),v.interval+x>p&&(v.interval=p-x),w>=2&&v.interval==m.pins[w-1].interval&&v.interval==m.pins[w-2].interval&&v.size==m.pins[w-1].size&&v.size==m.pins[w-2].size&&(m.pins.splice(w-1,1),w--)}if(m.start==0?m.continuesLastPattern=g.continuesLastPattern===!0:m.continuesLastPattern=!1,u!="ultrabox"&&u!="slarmoosbox"&&h.modulators[f]==t.modulators.dictionary.tempo.index)for(let w of m.pins){let B=w.size+30;w.size=B-1}this.notes.push(m)}}}}};var at=class{a=[1];b=[1];order=0;linearGain0thOrder(e){this.b[0]=e,this.order=0}lowPass1stOrderButterworth(e){let a=1/Math.tan(e*.5),n=1+a;this.a[1]=(1-a)/n,this.b[1]=this.b[0]=1/n,this.order=1}lowPass1stOrderSimplified(e){let a=2*Math.sin(e*.5);this.a[1]=a-1,this.b[0]=a,this.b[1]=0,this.order=1}highPass1stOrderButterworth(e){let a=1/Math.tan(e*.5),n=1+a;this.a[1]=(1-a)/n,this.b[0]=a/n,this.b[1]=-a/n,this.order=1}highShelf1stOrder(e,a){let n=Math.tan(e*.5),r=Math.sqrt(a),s=(n*r-1)/(n*r+1),o=1;this.a[1]=s/o,this.b[0]=(1+s+a*(1-s))/(2*o),this.b[1]=(1+s-a*(1-s))/(2*o),this.order=1}allPass1stOrderInvertPhaseAbove(e){let a=(Math.sin(e)-1)/Math.cos(e);this.a[1]=a,this.b[0]=a,this.b[1]=1,this.order=1}allPass1stOrderFractionalDelay(e){let a=(1-e)/(1+e);this.a[1]=a,this.b[0]=a,this.b[1]=1,this.order=1}lowPass2ndOrderButterworth(e,a){let n=Math.sin(e)/(2*a),r=Math.cos(e),s=1+n;this.a[1]=-2*r/s,this.a[2]=(1-n)/s,this.b[2]=this.b[0]=(1-r)/(2*s),this.b[1]=(1-r)/s,this.order=2}lowPass2ndOrderSimplified(e,a){let n=2*Math.sin(e/2),r=1-1/(2*a),s=r+r/(1-n);this.a[1]=2*n+(n-1)*n*s-2,this.a[2]=(n-1)*(n-n*s-1),this.b[0]=n*n,this.b[1]=0,this.b[2]=0,this.order=2}highPass2ndOrderButterworth(e,a){let n=Math.sin(e)/(2*a),r=Math.cos(e),s=1+n;this.a[1]=-2*r/s,this.a[2]=(1-n)/s,this.b[2]=this.b[0]=(1+r)/(2*s),this.b[1]=-(1+r)/s,this.order=2}highShelf2ndOrder(e,a,n){let r=Math.sqrt(a),s=Math.cos(e),o=r+1,c=r-1,u=Math.sin(e)*.5*Math.sqrt(o/r*(1/n-1)+2),b=2*Math.sqrt(r)*u,l=o-c*s+b;this.a[1]=2*(c-o*s)/l,this.a[2]=(o-c*s-b)/l,this.b[0]=r*(o+c*s+b)/l,this.b[1]=-2*r*(c+o*s)/l,this.b[2]=r*(o+c*s-b)/l,this.order=2}peak2ndOrder(e,a,n){let r=Math.sqrt(a),s=n*e/(r>=1?r:1/r),o=Math.tan(s*.5),c=1+o/r;this.b[0]=(1+o*r)/c,this.b[1]=this.a[1]=-2*Math.cos(e)/c,this.b[2]=(1-o*r)/c,this.a[2]=(1-o/r)/c,this.order=2}},lt=class{real=0;imag=0;denom=1;analyze(e,a){this.analyzeComplex(e,Math.cos(a),Math.sin(a))}analyzeComplex(e,a,n){let r=e.a,s=e.b,o=a,c=-n,u=s[0]+s[1]*o,b=s[1]*c,l=1+r[1]*o,g=r[1]*c,m=o,y=c;for(let h=2;h<=e.order;h++){let f=m*o-y*c,p=m*c+y*o;m=f,y=p,u+=s[h]*m,b+=s[h]*y,l+=r[h]*m,g+=r[h]*y}this.denom=l*l+g*g,this.real=u*l+b*g,this.imag=b*l-u*g}magnitude(){return Math.sqrt(this.real*this.real+this.imag*this.imag)/this.denom}angle(){return Math.atan2(this.imag,this.real)}},Re=class{a1=0;a2=0;b0=1;b1=0;b2=0;a1Delta=0;a2Delta=0;b0Delta=0;b1Delta=0;b2Delta=0;output1=0;output2=0;useMultiplicativeInputCoefficients=!1;resetOutput(){this.output1=0,this.output2=0}loadCoefficientsWithGradient(e,a,n,r){if(e.order!=2||a.order!=2)throw new Error;this.a1=e.a[1],this.a2=e.a[2],this.b0=e.b[0],this.b1=e.b[1],this.b2=e.b[2],this.a1Delta=(a.a[1]-e.a[1])*n,this.a2Delta=(a.a[2]-e.a[2])*n,r?(this.b0Delta=Math.pow(a.b[0]/e.b[0],n),this.b1Delta=Math.pow(a.b[1]/e.b[1],n),this.b2Delta=Math.pow(a.b[2]/e.b[2],n)):(this.b0Delta=(a.b[0]-e.b[0])*n,this.b1Delta=(a.b[1]-e.b[1])*n,this.b2Delta=(a.b[2]-e.b[2])*n),this.useMultiplicativeInputCoefficients=r}};function $n(i){return 2*Math.atan(i*.5)}var Ee=class i{controlPoints=[];controlPointCount=0;constructor(){this.reset()}reset(){this.controlPointCount=0}addPoint(e,a,n){let r;this.controlPoints.length<=this.controlPointCount?(r=new Pe,this.controlPoints[this.controlPointCount]=r):r=this.controlPoints[this.controlPointCount],this.controlPointCount++,r.type=e,r.set(a,n)}toJsonObject(){let e=[];for(let a=0;a<this.controlPointCount;a++){let n=this.controlPoints[a];e.push({type:t.filterTypeNames[n.type],cutoffHz:Math.round(n.getHz()*100)/100,linearGain:Math.round(n.getLinearGain()*1e4)/1e4})}return e}fromJsonObject(e){if(this.controlPoints.length=0,e)for(let a of e){let n=new Pe;n.type=t.filterTypeNames.indexOf(a.type),n.type==-1&&(n.type=2),a.cutoffHz!=null?n.freq=Pe.getRoundedSettingValueFromHz(a.cutoffHz):n.freq=0,a.linearGain!=null?n.gain=Pe.getRoundedSettingValueFromLinearGain(a.linearGain):n.gain=t.filterGainCenter,this.controlPoints.push(n)}this.controlPointCount=this.controlPoints.length}static filtersCanMorph(e,a){if(e.controlPointCount!=a.controlPointCount)return!1;for(let n=0;n<e.controlPointCount;n++)if(e.controlPoints[n].type!=a.controlPoints[n].type)return!1;return!0}static lerpFilters(e,a,n){let r=new i;if(e==null)return e;if(a==null)return a;if(n=Math.max(0,Math.min(1,n)),this.filtersCanMorph(e,a)){for(let s=0;s<e.controlPointCount;s++)r.controlPoints[s]=new Pe,r.controlPoints[s].type=e.controlPoints[s].type,r.controlPoints[s].freq=e.controlPoints[s].freq+(a.controlPoints[s].freq-e.controlPoints[s].freq)*n,r.controlPoints[s].gain=e.controlPoints[s].gain+(a.controlPoints[s].gain-e.controlPoints[s].gain)*n;return r.controlPointCount=e.controlPointCount,r}else return n>=1?a:e}convertLegacySettings(e,a,n){this.reset();let r=8e3,o=Math.asin(.95/2)*2,c=.95,u=11,b=8,l=a>1,g=a==0,m=e==u-1,y=n.type==5||n.type==6||n.type==10||n.type==1,h=48e3,f=r*Math.pow(2,(e-(u-1))*.5),p=Math.min(o,2*Math.PI*f/h);if(!(n.type==0&&!l&&m))if(g){let x=p*Math.pow(2,3.5),w=x/(1+x/Math.PI),v=h*w/(2*Math.PI),P=Pe.getRoundedSettingValueFromHz(v),B=Pe.getHzFromSettingValue(P),L=2*Math.PI*B/h,E=new at;E.lowPass1stOrderSimplified(p);let D=new lt;D.analyze(E,L);let R=D.magnitude(),N=Math.log2(R);N=-3.5+(N+3.5)*.82,y&&(N=Math.min(N,-1));let z=Math.pow(2,N),W=Pe.getRoundedSettingValueFromLinearGain(z);this.addPoint(0,P,W)}else{let S=.5/(1-c*Math.sqrt(Math.max(0,a-1)/(b-2))),x=.5/S,w=2*Math.PI*r/h,v=p/w,P=p*(v*Math.pow(x,.9)+1),B=p+(P-p)*x,L;y?L=h*Math.min(B,p*Math.pow(2,.25))/(2*Math.PI):L=h*B/(2*Math.PI);let E=Pe.getRoundedSettingValueFromHz(L),D;if(y)D=S;else{let N=new at;N.lowPass2ndOrderSimplified(p,S);let z=new lt;z.analyze(N,B),D=z.magnitude()}l||(D=Math.min(D,Math.sqrt(.5)));let R=Pe.getRoundedSettingValueFromLinearGain(D);this.addPoint(0,E,R)}this.controlPoints.length=this.controlPointCount}convertLegacySettingsForSynth(e,a,n=!1){this.reset();let r=8e3,o=Math.asin(.95/2)*2,c=.95,u=11,b=8,l=a==0&&n,g=48e3,m=r*Math.pow(2,(e-(u-1))*.5),y=Math.min(o,2*Math.PI*m/g);if(l){let f=y*Math.pow(2,3.5),p=f/(1+f/Math.PI),S=g*p/(2*Math.PI),x=Pe.getRoundedSettingValueFromHz(S),w=Pe.getHzFromSettingValue(x),v=2*Math.PI*w/g,P=new at;P.lowPass1stOrderSimplified(y);let B=new lt;B.analyze(P,v);let L=B.magnitude(),E=Math.log2(L);E=-3.5+(E+3.5)*.82;let D=Math.pow(2,E),R=Pe.getRoundedSettingValueFromLinearGain(D);this.addPoint(0,x,R)}else{let h=.5/(1-c*Math.sqrt(Math.max(0,a-1)/(b-2))),f=.5/h,p=2*Math.PI*r/g,S=y/p,x=y*(S*Math.pow(f,.9)+1),w=y+(x-y)*f,v;v=g*w/(2*Math.PI);let P=Pe.getSettingValueFromHz(v),B,L=new at;L.lowPass2ndOrderSimplified(y,h);let E=new lt;E.analyze(L,w),B=E.magnitude();let D=Pe.getRoundedSettingValueFromLinearGain(B);this.addPoint(0,P,D)}}},Pe=class i{freq=0;gain=t.filterGainCenter;type=2;set(e,a){this.freq=e,this.gain=a}getHz(){return i.getHzFromSettingValue(this.freq)}static getHzFromSettingValue(e){return t.filterFreqReferenceHz*Math.pow(2,(e-t.filterFreqReferenceSetting)*t.filterFreqStep)}static getSettingValueFromHz(e){return Math.log2(e/t.filterFreqReferenceHz)/t.filterFreqStep+t.filterFreqReferenceSetting}static getRoundedSettingValueFromHz(e){return Math.max(0,Math.min(t.filterFreqRange-1,Math.round(i.getSettingValueFromHz(e))))}getLinearGain(e=1){let a=(this.gain-t.filterGainCenter)*t.filterGainStep,n=this.type==2?0:-.5,r=n+(a-n)*e;return Math.pow(2,r)}static getRoundedSettingValueFromLinearGain(e){return Math.max(0,Math.min(t.filterGainRange-1,Math.round(Math.log2(e)/t.filterGainStep+t.filterGainCenter)))}toCoefficients(e,a,n=1,r=1){let s=2*Math.PI*Math.max(t.filterFreqMinHz,Math.min(t.filterFreqMaxHz,n*this.getHz()))/a,o=this.getLinearGain(r);switch(this.type){case 0:e.lowPass2ndOrderButterworth(s,o);break;case 1:e.highPass2ndOrderButterworth(s,o);break;case 2:e.peak2ndOrder(s,o,1);break;default:throw new Error}}getVolumeCompensationMult(){let e=(this.freq-t.filterFreqReferenceSetting)*t.filterFreqStep,a=(this.gain-t.filterGainCenter)*t.filterGainStep;switch(this.type){case 0:let n=Math.pow(2,e)*t.filterFreqReferenceHz/8e3,r=(Math.sqrt(1+4*n)-1)/2,s=Math.log2(r);return Math.pow(.5,.2*Math.max(0,a+1)+Math.min(0,Math.max(-3,.595*s+.35*Math.min(0,a+1))));case 1:return Math.pow(.5,.125*Math.max(0,a+1)+Math.min(0,.3*(-e-Math.log2(t.filterFreqReferenceHz/125))+.2*Math.min(0,a+1)));case 2:let o=e+Math.log2(t.filterFreqReferenceHz/2e3),c=Math.pow(1/(1+Math.pow(o/3,2)),2);return Math.pow(.5,.125*Math.max(0,a)+.1*c*Math.min(0,a));default:throw new Error}}};var Zt=class{constructor(e){this.isNoiseEnvelope=e;this.reset()}target=0;index=0;envelope=0;pitchEnvelopeStart;pitchEnvelopeEnd;inverse;perEnvelopeSpeed=t.envelopes[this.envelope].speed;perEnvelopeLowerBound=0;perEnvelopeUpperBound=1;tempEnvelopeSpeed=null;tempEnvelopeLowerBound=null;tempEnvelopeUpperBound=null;steps=2;seed=2;waveform=0;discrete=!1;reset(){this.target=0,this.index=0,this.envelope=0,this.pitchEnvelopeStart=0,this.pitchEnvelopeEnd=this.isNoiseEnvelope?t.drumCount-1:t.maxPitch,this.inverse=!1,this.isNoiseEnvelope=!1,this.perEnvelopeSpeed=t.envelopes[this.envelope].speed,this.perEnvelopeLowerBound=0,this.perEnvelopeUpperBound=1,this.tempEnvelopeSpeed=null,this.tempEnvelopeLowerBound=null,this.tempEnvelopeUpperBound=null,this.steps=2,this.seed=2,this.waveform=0,this.discrete=!1}toJsonObject(){let e={target:t.instrumentAutomationTargets[this.target].name,envelope:t.newEnvelopes[this.envelope].name,inverse:this.inverse,perEnvelopeSpeed:this.perEnvelopeSpeed,perEnvelopeLowerBound:this.perEnvelopeLowerBound,perEnvelopeUpperBound:this.perEnvelopeUpperBound,discrete:this.discrete};return t.instrumentAutomationTargets[this.target].maxCount>1&&(e.index=this.index),t.newEnvelopes[this.envelope].name=="pitch"?(e.pitchEnvelopeStart=this.pitchEnvelopeStart,e.pitchEnvelopeEnd=this.pitchEnvelopeEnd):t.newEnvelopes[this.envelope].name=="random"?(e.steps=this.steps,e.seed=this.seed,e.waveform=this.waveform):t.newEnvelopes[this.envelope].name=="lfo"&&(e.waveform=this.waveform,e.steps=this.steps),e}fromJsonObject(e,a){this.reset();let n=t.instrumentAutomationTargets.dictionary[e.target];n==null&&(n=t.instrumentAutomationTargets.dictionary.noteVolume),this.target=n.index;let r=t.envelopes.dictionary.none,s=!1;a=="slarmoosbox"?e.envelope=="tremolo2"?(r=t.newEnvelopes[8],s=!0):e.envelope=="tremolo"?(r=t.newEnvelopes[8],s=!1):r=t.newEnvelopes.dictionary[e.envelope]:t.envelopes.dictionary[e.envelope].type==9?(r=t.newEnvelopes[8],s=!0):t.newEnvelopes[Math.max(t.envelopes.dictionary[e.envelope].type-1,0)].index>8?r=t.newEnvelopes[t.envelopes.dictionary[e.envelope].type-1]:r=t.newEnvelopes[t.envelopes.dictionary[e.envelope].type],r==null&&(t.envelopes.dictionary[e.envelope].type==9?(r=t.newEnvelopes[8],s=!0):t.newEnvelopes[Math.max(t.envelopes.dictionary[e.envelope].type-1,0)].index>8?r=t.newEnvelopes[t.envelopes.dictionary[e.envelope].type-1]:r=t.newEnvelopes[t.envelopes.dictionary[e.envelope].type]),r==null&&(r=t.envelopes.dictionary.none),this.envelope=r.index,e.index!=null?this.index=A(0,t.instrumentAutomationTargets[this.target].maxCount,e.index|0):this.index=0,e.pitchEnvelopeStart!=null?this.pitchEnvelopeStart=A(0,this.isNoiseEnvelope?t.drumCount:t.maxPitch+1,e.pitchEnvelopeStart):this.pitchEnvelopeStart=0,e.pitchEnvelopeEnd!=null?this.pitchEnvelopeEnd=A(0,this.isNoiseEnvelope?t.drumCount:t.maxPitch+1,e.pitchEnvelopeEnd):this.pitchEnvelopeEnd=this.isNoiseEnvelope?t.drumCount:t.maxPitch,this.inverse=!!e.inverse,e.perEnvelopeSpeed!=null?this.perEnvelopeSpeed=e.perEnvelopeSpeed:this.perEnvelopeSpeed=t.envelopes.dictionary[e.envelope].speed,e.perEnvelopeLowerBound!=null?this.perEnvelopeLowerBound=A(t.perEnvelopeBoundMin,t.perEnvelopeBoundMax+1,e.perEnvelopeLowerBound):this.perEnvelopeLowerBound=0,e.perEnvelopeUpperBound!=null?this.perEnvelopeUpperBound=A(t.perEnvelopeBoundMin,t.perEnvelopeBoundMax+1,e.perEnvelopeUpperBound):this.perEnvelopeUpperBound=1,s&&(this.inverse?(this.perEnvelopeUpperBound=Math.floor(this.perEnvelopeUpperBound/2*10)/10,this.perEnvelopeLowerBound=Math.floor(this.perEnvelopeLowerBound/2*10)/10):(this.perEnvelopeUpperBound=Math.floor((.5+(this.perEnvelopeUpperBound-this.perEnvelopeLowerBound)/2)*10)/10,this.perEnvelopeLowerBound=.5)),e.steps!=null?this.steps=A(1,t.randomEnvelopeStepsMax+1,e.steps):this.steps=2,e.seed!=null?this.seed=A(1,t.randomEnvelopeSeedMax+1,e.seed):this.seed=2,e.waveform!=null?this.waveform=e.waveform:this.waveform=0,e.discrete!=null?this.discrete=e.discrete:this.discrete=!1}};var cn=class{type=0;wetDryMix=.5;send=1;eqFilter=new Ee;eqFilterType=!1;eqFilterSimpleCut=t.filterSimpleCutRange-1;eqFilterSimplePeak=0;eqSubFilters=[];tmpEqFilterStart;tmpEqFilterEnd;gain=t.volumeRange/2;pan=t.panCenter;panDelay=0;panMode=0;aliases=!1;distortion=0;bitcrusherFreq=0;bitcrusherQuantization=0;ringModulation=Math.floor(t.ringModRange/2);ringModulationHz=Math.floor(t.ringModHzRange/2);ringModWaveformIndex=0;ringModPulseWidth=0;ringModHzOffset=200;granular=4;grainSize=(t.grainSizeMax-t.grainSizeMin)/t.grainSizeStep;grainAmounts=t.grainAmountsMax;grainRange=40;flanger=0;flangerSpeed=0;flangerDepth=0;flangerFeedback=0;chorus=0;reverb=0;echoSustain=0;echoDelay=0;echoPingPong=t.panCenter;constructor(e){this.type=e}};var Qn=class{frequency=4;amplitude=0;waveform=0;pulseWidth=.5;constructor(e){this.reset(e)}reset(e){this.frequency=4,this.amplitude=e<=1?t.operatorAmplitudeMax:0,this.waveform=0,this.pulseWidth=5}copy(e){this.frequency=e.frequency,this.amplitude=e.amplitude,this.waveform=e.waveform,this.pulseWidth=e.pulseWidth}},Jn=class{name="";carrierCount=0;modulatedBy=[[],[],[],[],[],[]];associatedCarrier=[];constructor(){this.fromPreset(1)}set(e,a){this.reset(),this.carrierCount=e;for(let n=0;n<this.modulatedBy.length;n++){this.modulatedBy[n]=a[n],n<e&&(this.associatedCarrier[n]=n+1),this.name+=n+1;for(let r=0;r<a[n].length;r++)this.name+=a[n][r],a[n][r]>e-1&&(this.associatedCarrier[a[n][r]-1]=n+1),this.name+=",";n<e?this.name+="|":this.name+="."}}reset(){this.name="",this.carrierCount=1,this.modulatedBy=[[2,3,4,5,6],[],[],[],[],[]],this.associatedCarrier=[1,1,1,1,1,1]}copy(e){this.name=e.name,this.carrierCount=e.carrierCount,this.modulatedBy=e.modulatedBy,this.associatedCarrier=e.associatedCarrier}fromPreset(e){this.reset();let a=t.algorithms6Op[e];this.name=a.name,this.carrierCount=a.carrierCount;for(var n=0;n<a.modulatedBy.length;n++)this.modulatedBy[n]=Array.from(a.modulatedBy[n]),this.associatedCarrier[n]=a.associatedCarrier[n]}},Kn=class{name="";indices=[[],[],[],[],[],[]];constructor(){this.fromPreset(1)}set(e){this.reset();for(let a=0;a<this.indices.length;a++){this.indices[a]=e[a];for(let n=0;n<e[a].length;n++)this.name+=e[a][n],this.name+=",";this.name+="."}}reset(){this.reset,this.name="",this.indices=[[1],[],[],[],[],[]]}copy(e){this.name=e.name,this.indices=e.indices}fromPreset(e){this.reset();let a=t.feedbacks6Op[e];for(var n=0;n<a.indices.length;n++){this.indices[n]=Array.from(a.indices[n]);for(let r=0;r<a.indices[n].length;r++)this.name+=a.indices[n][r],this.name+=",";this.name+="."}}},Yt=class{spectrum=[];hash=-1;constructor(e){this.reset(e)}reset(e){for(let a=0;a<t.spectrumControlPoints;a++)if(e)this.spectrum[a]=Math.round(t.spectrumMax*(1/Math.sqrt(1+a/3)));else{let n=a==0||a==7||a==11||a==14||a==16||a==18||a==21||a==23||a>=25;this.spectrum[a]=n?Math.max(0,Math.round(t.spectrumMax*(1-a/30))):0}this.markCustomWaveDirty()}markCustomWaveDirty(){let e=Je(t.spectrumMax+2)-1,a=0;for(let n of this.spectrum)a=a*e+n>>>0;this.hash=a}},Zn=class{harmonics=[];hash=-1;constructor(){this.reset()}reset(){for(let e=0;e<t.harmonicsControlPoints;e++)this.harmonics[e]=0;this.harmonics[0]=t.harmonicsMax,this.harmonics[3]=t.harmonicsMax,this.harmonics[6]=t.harmonicsMax,this.markCustomWaveDirty()}markCustomWaveDirty(){let e=Je(t.harmonicsMax+2)-1,a=0;for(let n of this.harmonics)a=a*e+n>>>0;this.hash=a}},Ne=class{type=0;preset=0;chipWave=2;isUsingAdvancedLoopControls=!1;chipWaveLoopStart=0;chipWaveLoopEnd=t.rawRawChipWaves[this.chipWave].samples.length-1;chipWaveLoopMode=0;chipWavePlayBackwards=!1;chipWaveStartOffset=0;chipWaveInStereo=!1;chipNoise=1;noteFilter=new Ee;noteFilterType=!1;noteFilterSimpleCut=t.filterSimpleCutRange-1;noteFilterSimplePeak=0;noteSubFilters=[];tmpNoteFilterStart;tmpNoteFilterEnd;envelopes=[];fadeIn=0;fadeOut=t.fadeOutNeutral;envelopeCount=0;transition=t.transitions.dictionary.normal.index;pitchShift=0;detune=0;vibrato=0;interval=0;vibratoDepth=0;vibratoSpeed=10;vibratoDelay=0;vibratoType=0;envelopeSpeed=12;unison=0;unisonVoices=1;unisonSpread=0;unisonOffset=0;unisonExpression=1.4;unisonSign=1;effects=[];effectCount=0;mdeffects=0;chord=1;volume=0;arpeggioSpeed=12;monoChordTone=0;fastTwoNoteArp=!1;legacyTieOver=!1;clicklessTransition=!1;aliases=!1;pulseWidth=t.pulseWidthRange;decimalOffset=0;supersawDynamism=t.supersawDynamismMax;supersawSpread=Math.ceil(t.supersawSpreadMax/2);supersawShape=0;stringSustain=10;stringSustainType=1;algorithm=0;feedbackType=0;algorithm6Op=1;feedbackType6Op=1;customAlgorithm=new Jn;customFeedbackType=new Kn;feedbackAmplitude=0;customChipWave=new Float32Array(64);customChipWaveIntegral=new Float32Array(65);operators=[];spectrumWave;harmonicsWave=new Zn;drumsetEnvelopes=[];drumsetSpectrumWaves=[];modChannels=[];modInstruments=[];modulators=[];modFilterTypes=[];modEnvelopeNumbers=[];invalidModulators=[];isNoiseInstrument=!1;constructor(e,a){if(a)for(let c=0;c<t.modCount;c++)this.modChannels.push([-2]),this.modInstruments.push([0]),this.modulators.push(t.modulators.dictionary.none.index);this.spectrumWave=new Yt(e);for(let c=0;c<t.operatorCount+2;c++)this.operators[c]=new Qn(c);for(let c=0;c<t.drumCount;c++)this.drumsetEnvelopes[c]=t.envelopes.dictionary["twang 2"].index,this.drumsetSpectrumWaves[c]=new Yt(!0);for(let c=0;c<64;c++)this.customChipWave[c]=24-Math.floor(c*(48/64));let n=0;for(let c=0;c<this.customChipWave.length;c++)n+=this.customChipWave[c];let r=n/this.customChipWave.length,s=0,o=0;for(let c=0;c<this.customChipWave.length;c++)s+=o,o=this.customChipWave[c]-r,this.customChipWaveIntegral[c]=s;this.customChipWaveIntegral[64]=0,this.isNoiseInstrument=e}setTypeAndReset(e,a,n){n&&(e=10),this.type=e,this.preset=e,this.volume=0,this.effects=[],this.effectCount=0,this.mdeffects=0;for(let r=0;r<t.filterMorphCount;r++)this.noteSubFilters[r]=null;switch(this.noteFilter.reset(),this.noteFilterType=!1,this.noteFilterSimpleCut=t.filterSimpleCutRange-1,this.noteFilterSimplePeak=0,this.pitchShift=t.pitchShiftCenter,this.detune=t.detuneCenter,this.vibrato=0,this.unison=0,this.stringSustain=10,this.stringSustainType=t.enableAcousticSustain?1:0,this.clicklessTransition=!1,this.arpeggioSpeed=12,this.monoChordTone=1,this.envelopeSpeed=12,this.legacyTieOver=!1,this.aliases=!1,this.fadeIn=0,this.fadeOut=t.fadeOutNeutral,this.transition=t.transitions.dictionary.normal.index,this.envelopeCount=0,this.isNoiseInstrument=a,e){case 0:this.chipWave=2,this.chord=t.chords.dictionary.arpeggio.index,this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=t.rawRawChipWaves[this.chipWave].samples.length-1,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveInStereo=!1,this.chipWaveStartOffset=0;break;case 9:this.chipWave=2,this.chipWaveInStereo=!1,this.chord=t.chords.dictionary.arpeggio.index;for(let u=0;u<64;u++)this.customChipWave[u]=24-Math.floor(u*(48/64));let r=0;for(let u=0;u<this.customChipWave.length;u++)r+=this.customChipWave[u];let s=r/this.customChipWave.length,o=0,c=0;for(let u=0;u<this.customChipWave.length;u++)o+=c,c=this.customChipWave[u]-s,this.customChipWaveIntegral[u]=o;this.customChipWaveIntegral[64]=0;break;case 1:this.chord=t.chords.dictionary["custom interval"].index,this.algorithm=0,this.feedbackType=0,this.feedbackAmplitude=0;for(let u=0;u<this.operators.length;u++)this.operators[u].reset(u);break;case 11:this.transition=1,this.vibrato=0,this.chord=3,this.algorithm=0,this.feedbackType=0,this.algorithm6Op=1,this.feedbackType6Op=1,this.customAlgorithm.fromPreset(1),this.feedbackAmplitude=0;for(let u=0;u<this.operators.length;u++)this.operators[u].reset(u);break;case 2:this.chipNoise=1,this.chord=t.chords.dictionary.arpeggio.index;break;case 3:this.chord=t.chords.dictionary.simultaneous.index,this.spectrumWave.reset(a);break;case 4:this.chord=t.chords.dictionary.simultaneous.index;for(let u=0;u<t.drumCount;u++)this.drumsetEnvelopes[u]=t.envelopes.dictionary["twang 2"].index,this.drumsetSpectrumWaves[u]==null&&(this.drumsetSpectrumWaves[u]=new Yt(!0)),this.drumsetSpectrumWaves[u].reset(a);break;case 5:this.chord=t.chords.dictionary.simultaneous.index,this.harmonicsWave.reset();break;case 6:this.chord=t.chords.dictionary.arpeggio.index,this.pulseWidth=t.pulseWidthRange,this.decimalOffset=0;break;case 7:this.chord=t.chords.dictionary.strum.index,this.harmonicsWave.reset();break;case 10:this.transition=0,this.vibrato=0,this.interval=0,this.chord=0,this.modChannels=[],this.modInstruments=[],this.modulators=[];for(let u=0;u<t.modCount;u++)this.modChannels.push([-2]),this.modInstruments.push([0]),this.modulators.push(t.modulators.dictionary.none.index),this.invalidModulators[u]=!1,this.modFilterTypes[u]=0,this.modEnvelopeNumbers[u]=0;break;case 8:this.chord=t.chords.dictionary.arpeggio.index,this.supersawDynamism=t.supersawDynamismMax,this.supersawSpread=Math.ceil(t.supersawSpreadMax/2),this.supersawShape=0,this.pulseWidth=t.pulseWidthRange-1,this.decimalOffset=0;break;default:throw new Error("Unrecognized instrument type: "+e)}this.chord!=t.chords.dictionary.simultaneous.index&&(this.mdeffects=this.mdeffects|16)}convertLegacySettings(e,a){let n=e.filterCutoff,r=e.filterResonance,s=e.filterEnvelope,o=e.pulseEnvelope,c=e.operatorEnvelopes,u=e.feedbackEnvelope;n==null&&(n=this.type==0?6:10),r==null&&(r=0),s==null&&(s=t.envelopes.dictionary.none),o==null&&(o=t.envelopes.dictionary[this.type==6?"twang 2":"none"]),c==null&&(c=[t.envelopes.dictionary[this.type==1?"note size":"none"],t.envelopes.dictionary.none,t.envelopes.dictionary.none,t.envelopes.dictionary.none]),u==null&&(u=t.envelopes.dictionary.none),n==11-1&&s.type==4&&(s=t.envelopes.dictionary.none);let g=t.algorithms[this.algorithm].carrierCount,m=!0,y=!0,h=s.type==1||o.type==1;if(this.type==1||this.type==11){h=h||u.type==1;for(let f=0;f<c.length;f++)f<g?c[f].type!=1?y=!1:m=!1:h=h||c[f].type==1}this.envelopeCount=0,(this.type==1||this.type==11)&&(y&&h?this.addEnvelope(t.instrumentAutomationTargets.dictionary.noteVolume.index,0,t.envelopes.dictionary["note size"].index,!1):m&&!h&&this.addEnvelope(t.instrumentAutomationTargets.dictionary.none.index,0,t.envelopes.dictionary["note size"].index,!1)),o.type!=0&&this.addEnvelope(t.instrumentAutomationTargets.dictionary.pulseWidth.index,0,o.index,!1);for(let f=0;f<c.length;f++)f<g&&y||c[f].type!=0&&this.addEnvelope(t.instrumentAutomationTargets.dictionary.operatorAmplitude.index,f,c[f].index,!1);u.type!=0&&this.addEnvelope(t.instrumentAutomationTargets.dictionary.feedbackAmplitude.index,0,u.index,!1)}toJsonObject(){let e={type:t.instrumentTypeNames[this.type],volume:this.volume,noteFilter:this.noteFilter.toJsonObject(),noteFilterType:this.noteFilterType,noteSimpleCut:this.noteFilterSimpleCut,noteSimplePeak:this.noteFilterSimplePeak,envelopeSpeed:this.envelopeSpeed};this.preset!=this.type&&(e.preset=this.preset);for(let n=0;n<t.filterMorphCount;n++)this.noteSubFilters[n]!=null&&(e["noteSubFilters"+n]=this.noteSubFilters[n].toJsonObject());if(e.mdeffects=this.mdeffects,Wt(this.mdeffects)&&(e.transition=t.transitions[this.transition].name,e.clicklessTransition=this.clicklessTransition),Ot(this.mdeffects)&&(e.chord=this.getChord().name,e.fastTwoNoteArp=this.fastTwoNoteArp,e.arpeggioSpeed=this.arpeggioSpeed,e.monoChordTone=this.monoChordTone),Et(this.mdeffects)&&(e.pitchShiftSemitones=this.pitchShift),Mt(this.mdeffects)&&(e.detuneCents=Kt(this.detune)),Dt(this.mdeffects)&&(this.vibrato==-1&&(this.vibrato=5),this.vibrato!=5?e.vibrato=t.vibratos[this.vibrato].name:e.vibrato="custom",e.vibratoDepth=this.vibratoDepth,e.vibratoDelay=this.vibratoDelay,e.vibratoSpeed=this.vibratoSpeed,e.vibratoType=this.vibratoType),this.type!=4&&(e.fadeInSeconds=Math.round(1e4*Gn(this.fadeIn))/1e4,e.fadeOutTicks=Un(this.fadeOut)),this.type==5||this.type==7){e.harmonics=[];for(let n=0;n<t.harmonicsControlPoints;n++)e.harmonics[n]=Math.round(100*this.harmonicsWave.harmonics[n]/t.harmonicsMax)}if(this.type==2)e.wave=t.chipNoises[this.chipNoise].name,e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(this.type==3){e.spectrum=[];for(let n=0;n<t.spectrumControlPoints;n++)e.spectrum[n]=Math.round(100*this.spectrumWave.spectrum[n]/t.spectrumMax);e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign)}else if(this.type==4){e.drums=[],e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);for(let n=0;n<t.drumCount;n++){let r=[];for(let s=0;s<t.spectrumControlPoints;s++)r[s]=Math.round(100*this.drumsetSpectrumWaves[n].spectrum[s]/t.spectrumMax);e.drums[n]={filterEnvelope:this.getDrumsetEnvelope(n).name,spectrum:r}}}else if(this.type==0)e.wave=t.chipWaves[this.chipWave].name,e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign),e.isUsingAdvancedLoopControls=this.isUsingAdvancedLoopControls,e.chipWaveLoopStart=this.chipWaveLoopStart,e.chipWaveLoopEnd=this.chipWaveLoopEnd,e.chipWaveLoopMode=this.chipWaveLoopMode,e.chipWavePlayBackwards=this.chipWavePlayBackwards,e.chipWaveStartOffset=this.chipWaveStartOffset,e.chipWaveInStereo=this.chipWaveInStereo;else if(this.type==6)e.pulseWidth=this.pulseWidth,e.decimalOffset=this.decimalOffset,e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(this.type==8)e.pulseWidth=this.pulseWidth,e.decimalOffset=this.decimalOffset,e.dynamism=Math.round(100*this.supersawDynamism/t.supersawDynamismMax),e.spread=Math.round(100*this.supersawSpread/t.supersawSpreadMax),e.shape=Math.round(100*this.supersawShape/t.supersawShapeMax);else if(this.type==7)e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign),e.stringSustain=Math.round(100*this.stringSustain/(t.stringSustainRange-1)),t.enableAcousticSustain&&(e.stringSustainType=t.sustainTypeNames[this.stringSustainType]);else if(this.type==5)e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign);else if(this.type==1||this.type==11){let n=[];for(let r of this.operators)n.push({frequency:t.operatorFrequencies[r.frequency].name,amplitude:r.amplitude,waveform:t.operatorWaves[r.waveform].name,pulseWidth:r.pulseWidth});if(this.type==1)e.algorithm=t.algorithms[this.algorithm].name,e.feedbackType=t.feedbacks[this.feedbackType].name,e.feedbackAmplitude=this.feedbackAmplitude,e.operators=n;else{if(e.algorithm=t.algorithms6Op[this.algorithm6Op].name,e.feedbackType=t.feedbacks6Op[this.feedbackType6Op].name,e.feedbackAmplitude=this.feedbackAmplitude,this.algorithm6Op==0){let r={};r.mods=this.customAlgorithm.modulatedBy,r.carrierCount=this.customAlgorithm.carrierCount,e.customAlgorithm=r}if(this.feedbackType6Op==0){let r={};r.mods=this.customFeedbackType.indices,e.customFeedback=r}e.operators=n}}else if(this.type==9){e.wave=t.chipWaves[this.chipWave].name,e.unison=this.unison==t.unisons.length?"custom":t.unisons[this.unison].name,this.unison==t.unisons.length&&(e.unisonVoices=this.unisonVoices,e.unisonSpread=this.unisonSpread,e.unisonOffset=this.unisonOffset,e.unisonExpression=this.unisonExpression,e.unisonSign=this.unisonSign),e.customChipWave=new Float64Array(64),e.customChipWaveIntegral=new Float64Array(65);for(let n=0;n<this.customChipWave.length;n++)e.customChipWave[n]=this.customChipWave[n]}else if(this.type==10){e.modChannels=[],e.modInstruments=[],e.modSettings=[],e.modFilterTypes=[],e.modEnvelopeNumbers=[];for(let n=0;n<t.modCount;n++)e.modChannels[n]=this.modChannels[n],e.modInstruments[n]=this.modInstruments[n],e.modSettings[n]=this.modulators[n],e.modFilterTypes[n]=this.modFilterTypes[n],e.modEnvelopeNumbers[n]=this.modEnvelopeNumbers[n]}else throw new Error("Unrecognized instrument type");let a=[];for(let n=0;n<this.envelopeCount;n++)a.push(this.envelopes[n].toJsonObject());return e.envelopes=a,e}fromJsonObject(e,a,n,r,s,o=0,c=t.jsonFormat){e==null&&(e={});let u=c.toLowerCase(),b=t.instrumentTypeNames.indexOf(e.type);u=="synthbox"&&e.type=="FM"&&(b=t.instrumentTypeNames.indexOf("FM6op")),b==-1&&(b=n?10:a?2:0),this.setTypeAndReset(b,a,n),e.preset!=null&&(this.preset=e.preset>>>0),e.volume!=null?u=="jummbox"||u=="midbox"||u=="synthbox"||u=="goldbox"||u=="paandorasbox"||u=="ultrabox"||u=="slarmoosbox"||u=="Theepbox"?this.volume=A(-t.volumeRange/2,t.volumeRange/2+1,e.volume|0):this.volume=Math.round(-A(0,8,Math.round(5-(e.volume|0)/20))*25/7):this.volume=0,this.envelopeSpeed=e.envelopeSpeed!=null?A(0,t.modulators.dictionary["envelope speed"].maxRawVol+1,e.envelopeSpeed|0):12,Array.isArray(e.effects),e.mdeffects!=null?this.mdeffects=e.mdeffects:this.mdeffects=0,this.transition=t.transitions.dictionary.normal.index;let l=e.transition||e.envelope;if(l!=null){let f=t.transitions.dictionary[l];if(e.fadeInSeconds==null||e.fadeOutTicks==null){let p={binary:{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},seamless:{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},sudden:{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},hard:{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},smooth:{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},soft:{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},slide:{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3},"cross fade":{transition:"normal",fadeInSeconds:.04,fadeOutTicks:6},"hard fade":{transition:"normal",fadeInSeconds:0,fadeOutTicks:48},"medium fade":{transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72},"soft fade":{transition:"normal",fadeInSeconds:.06,fadeOutTicks:96}}[l];p!=null&&(f=t.transitions.dictionary[p.transition],this.fadeIn=ht(p.fadeInSeconds),this.fadeOut=ft(p.fadeOutTicks))}f!=null&&(this.transition=f.index),this.transition!=t.transitions.dictionary.normal.index&&(this.mdeffects=this.mdeffects|8)}e.fadeInSeconds!=null&&(this.fadeIn=ht(+e.fadeInSeconds)),e.fadeOutTicks!=null&&(this.fadeOut=ft(+e.fadeOutTicks));{let f=e.chord,p={harmony:"simultaneous"},S=t.chords.dictionary[p[f]]||t.chords.dictionary[f];S!=null?this.chord=S.index:this.type==2?this.chord=t.chords.dictionary.arpeggio.index:this.type==7?this.chord=t.chords.dictionary.strum.index:this.type==0?this.chord=t.chords.dictionary.arpeggio.index:this.type==1||this.type==11?this.chord=t.chords.dictionary["custom interval"].index:this.chord=t.chords.dictionary.simultaneous.index}this.unison=t.unisons.dictionary.none.index;let g=e.unison||e.interval||e.chorus;if(g!=null){let f={union:"none",fifths:"fifth",octaves:"octave",error:"voiced"},p=t.unisons.dictionary[f[g]]||t.unisons.dictionary[g];p!=null&&(this.unison=p.index),g=="custom"&&(this.unison=t.unisons.length)}if(this.unisonVoices=e.unisonVoices==null?t.unisons[this.unison].voices:e.unisonVoices,this.unisonSpread=e.unisonSpread==null?t.unisons[this.unison].spread:e.unisonSpread,this.unisonOffset=e.unisonOffset==null?t.unisons[this.unison].offset:e.unisonOffset,this.unisonExpression=e.unisonExpression==null?t.unisons[this.unison].expression:e.unisonExpression,this.unisonSign=e.unisonSign==null?t.unisons[this.unison].sign:e.unisonSign,e.chorus=="custom harmony"&&(this.unison=t.unisons.dictionary.hum.index,this.chord=t.chords.dictionary["custom interval"].index),this.chord!=t.chords.dictionary.simultaneous.index&&!Array.isArray(e.mdeffects)&&(this.mdeffects=this.mdeffects|16),e.pitchShiftSemitones!=null&&(this.pitchShift=A(0,t.pitchShiftRange,Math.round(+e.pitchShiftSemitones))),e.octoff!=null){let f=e.octoff;this.mdeffects=this.mdeffects|1,f=="+1 (octave)"||f=="+2 (2 octaves)"?this.pitchShift=24:f=="+1/2 (fifth)"||f=="+1 1/2 (octave and fifth)"?this.pitchShift=18:f=="-1 (octave)"||f=="-2 (2 octaves"?this.pitchShift=0:f=="-1/2 (fifth)"||f=="-1 1/2 (octave and fifth)"?this.pitchShift=6:this.pitchShift=12}e.detuneCents!=null&&(this.detune=A(t.detuneMin,t.detuneMax+1,Math.round(Aa(+e.detuneCents)))),this.vibrato=t.vibratos.dictionary.none.index;let m=e.vibrato||e.effect;if(m!=null){let f={"vibrato light":"light","vibrato delayed":"delayed","vibrato heavy":"heavy"},p=t.vibratos.dictionary[f[g]]||t.vibratos.dictionary[m];p!=null?this.vibrato=p.index:m=="custom"&&(this.vibrato=t.vibratos.length),this.vibrato==t.vibratos.length?(this.vibratoDepth=e.vibratoDepth,this.vibratoSpeed=e.vibratoSpeed,this.vibratoDelay=e.vibratoDelay,this.vibratoType=e.vibratoType):(this.vibratoDepth=t.vibratos[this.vibrato].amplitude,this.vibratoDelay=t.vibratos[this.vibrato].delayTicks/2,this.vibratoSpeed=10,this.vibratoType=t.vibratos[this.vibrato].type),p!=t.vibratos.dictionary.none&&(this.mdeffects=this.mdeffects|4)}if(e.detune!=null?this.detune=A(t.detuneMin,t.detuneMax+1,e.detune|0):e.detuneCents==null&&(this.detune=t.detuneCenter),e.pulseWidth!=null?this.pulseWidth=A(1,t.pulseWidthRange+1,Math.round(e.pulseWidth)):this.pulseWidth=t.pulseWidthRange,e.decimalOffset!=null?this.decimalOffset=A(0,100,Math.round(e.decimalOffset)):this.decimalOffset=0,e.dynamism!=null?this.supersawDynamism=A(0,t.supersawDynamismMax+1,Math.round(t.supersawDynamismMax*(e.dynamism|0)/100)):this.supersawDynamism=t.supersawDynamismMax,e.spread!=null?this.supersawSpread=A(0,t.supersawSpreadMax+1,Math.round(t.supersawSpreadMax*(e.spread|0)/100)):this.supersawSpread=Math.ceil(t.supersawSpreadMax/2),e.shape!=null?this.supersawShape=A(0,t.supersawShapeMax+1,Math.round(t.supersawShapeMax*(e.shape|0)/100)):this.supersawShape=0,e.harmonics!=null){for(let f=0;f<t.harmonicsControlPoints;f++)this.harmonicsWave.harmonics[f]=Math.max(0,Math.min(t.harmonicsMax,Math.round(t.harmonicsMax*+e.harmonics[f]/100)));this.harmonicsWave.markCustomWaveDirty()}else this.harmonicsWave.reset();if(e.spectrum!=null)for(let f=0;f<t.spectrumControlPoints;f++)this.spectrumWave.spectrum[f]=Math.max(0,Math.min(t.spectrumMax,Math.round(t.spectrumMax*+e.spectrum[f]/100))),this.spectrumWave.markCustomWaveDirty();else this.spectrumWave.reset(a);e.stringSustain!=null?this.stringSustain=A(0,t.stringSustainRange,Math.round((t.stringSustainRange-1)*(e.stringSustain|0)/100)):this.stringSustain=10,this.stringSustainType=t.enableAcousticSustain?t.sustainTypeNames.indexOf(e.stringSustainType):0,this.stringSustainType==-1&&(this.stringSustainType=0),this.type==2&&(this.chipNoise=t.chipNoises.findIndex(f=>f.name==e.wave),e.wave=="pink noise"&&(this.chipNoise=t.chipNoises.findIndex(f=>f.name=="pink")),e.wave=="brownian noise"&&(this.chipNoise=t.chipNoises.findIndex(f=>f.name=="brownian")),this.chipNoise==-1&&(this.chipNoise=1));let y={custom:"note size",steady:"none","pluck 1":"twang 1","pluck 2":"twang 2","pluck 3":"twang 3"},h=f=>y[f]!=null?t.envelopes.dictionary[y[f]]:t.envelopes.dictionary[f];if(this.type==4&&e.drums!=null)for(let f=0;f<t.drumCount;f++){let p=e.drums[f];if(p!=null){if(this.drumsetEnvelopes[f]=t.envelopes.dictionary["twang 2"].index,p.filterEnvelope!=null){let S=h(p.filterEnvelope);S!=null&&(this.drumsetEnvelopes[f]=S.index)}if(p.spectrum!=null)for(let S=0;S<t.spectrumControlPoints;S++)this.drumsetSpectrumWaves[f].spectrum[S]=Math.max(0,Math.min(t.spectrumMax,Math.round(t.spectrumMax*+p.spectrum[S]/100)));this.drumsetSpectrumWaves[f].markCustomWaveDirty()}}if(this.type==0){let f={triangle:1,square:2,"pulse wide":3,"pulse narrow":4,sawtooth:5,"double saw":6,"double pulse":7,spiky:8,plateau:0},p={"10% pulse":22,"sunsoft bass":23,"loud pulse":24,sax:25,guitar:26,"atari bass":28,"atari pulse":29,"1% pulse":30,"curved sawtooth":31,viola:32,brass:33,"acoustic bass":34,lyre:35,"ramp pulse":36,piccolo:37,squaretooth:38,flatline:39,"pnryshk a (u5)":40,"pnryshk b (riff)":41},S={"shrill lute":42,"shrill bass":44,"nes pulse":45,"saw bass":46,euphonium:47,"shrill pulse":48,"r-sawtooth":49,recorder:50,"narrow saw":51,"deep square":52,"ring pulse":53,"double sine":54,contrabass:55,"double bass":56},x={"semi-square":63,"deep square":64,squaretal:40,"saw wide":65,"saw narrow ":66,"deep sawtooth":67,sawtal:68,pulse:69,"triple pulse":70,"high pulse":71,"deep pulse":72},w={test1:56,"pokey 4bit lfsr":57,"pokey 5step bass":58,"isolated spiky":59,"unnamed 1":60,"unnamed 2":61,"guitar string":75,intense:76,"buzz wave":77,"pokey square":57,"pokey bass":58,"banana wave":83,"test 1":84,"test 2":84,"real snare":85,"earthbound o. guitar":86},v={kick:87,snare:88,piano1:89,WOW:90,overdrive:91,trumpet:92,saxophone:93,orchestrahit:94,"detached violin":95,synth:96,sonic3snare:97,"come on":98,choir:99,overdriveguitar:100,flute:101,"legato violin":102,"tremolo violin":103,"amen break":104,"pizzicato violin":105,"tim allen grunt":106,tuba:107,loopingcymbal:108,standardkick:109,standardsnare:110,closedhihat:111,foothihat:112,openhihat:113,crashcymbal:114,pianoC4:115,"liver pad":116,marimba:117,susdotwav:118,wackyboxtts:119};this.chipWave=-1;let P=e.wave;for(let B of[f,p,S,x,w,v])if(this.chipWave==-1&&B[P]!=null&&t.chipWaves[B[P]]!=null){this.chipWave=B[P];break}if(this.chipWave==-1){let B=t.chipWaves.findIndex(L=>L.name==P);B!=-1&&(this.chipWave=B)}this.chipWave==-1&&(this.chipWave=1)}if(this.type==1||this.type==11){if(this.type==1)this.algorithm=t.algorithms.findIndex(f=>f.name==e.algorithm),this.algorithm==-1&&(this.algorithm=0),this.feedbackType=t.feedbacks.findIndex(f=>f.name==e.feedbackType),this.feedbackType==-1&&(this.feedbackType=0);else{if(this.algorithm6Op=t.algorithms6Op.findIndex(f=>f.name==e.algorithm),this.algorithm6Op==-1&&(this.algorithm6Op=1),this.algorithm6Op==0?this.customAlgorithm.set(e.customAlgorithm.carrierCount,e.customAlgorithm.mods):this.customAlgorithm.fromPreset(this.algorithm6Op),this.feedbackType6Op=t.feedbacks6Op.findIndex(f=>f.name==e.feedbackType),this.feedbackType6Op==-1){let f=he([{name:"2\u27F2 3\u27F2",indices:[[],[2],[3],[],[],[]]},{name:"3\u27F2 4\u27F2",indices:[[],[],[3],[4],[],[]]},{name:"4\u27F2 5\u27F2",indices:[[],[],[],[4],[5],[]]},{name:"5\u27F2 6\u27F2",indices:[[],[],[],[],[5],[6]]},{name:"1\u27F2 6\u27F2",indices:[[1],[],[],[],[],[6]]},{name:"1\u27F2 3\u27F2",indices:[[1],[],[3],[],[],[]]},{name:"1\u27F2 4\u27F2",indices:[[1],[],[],[4],[],[]]},{name:"1\u27F2 5\u27F2",indices:[[1],[],[],[],[5],[]]},{name:"4\u27F2 6\u27F2",indices:[[],[],[],[4],[],[6]]},{name:"2\u27F2 6\u27F2",indices:[[],[2],[],[],[],[6]]},{name:"3\u27F2 6\u27F2",indices:[[],[],[3],[],[],[6]]},{name:"4\u27F2 5\u27F2 6\u27F2",indices:[[],[],[],[4],[5],[6]]},{name:"1\u27F2 3\u27F2 6\u27F2",indices:[[1],[],[3],[],[],[6]]},{name:"2\u21925",indices:[[],[],[],[],[2],[]]},{name:"2\u21926",indices:[[],[],[],[],[],[2]]},{name:"3\u21925",indices:[[],[],[],[],[3],[]]},{name:"3\u21926",indices:[[],[],[],[],[],[3]]},{name:"4\u21926",indices:[[],[],[],[],[],[4]]},{name:"5\u21926",indices:[[],[],[],[],[],[5]]},{name:"1\u21923\u21924",indices:[[],[],[1],[],[3],[]]},{name:"2\u21925\u21926",indices:[[],[],[],[],[2],[5]]},{name:"2\u21924\u21926",indices:[[],[],[],[2],[],[4]]},{name:"4\u21925\u21926",indices:[[],[],[],[],[4],[5]]},{name:"3\u21924\u21925\u21926",indices:[[],[],[],[3],[4],[5]]},{name:"2\u21923\u21924\u21925\u21926",indices:[[],[1],[2],[3],[4],[5]]},{name:"1\u21922\u21923\u21924\u21925\u21926",indices:[[],[1],[2],[3],[4],[5]]}]),p=f[f.findIndex(S=>S.name==e.feedbackType)].indices;p!=null?(this.feedbackType6Op=0,this.customFeedbackType.set(p)):this.feedbackType6Op=1}this.feedbackType6Op==0&&e.customFeedback!=null?this.customFeedbackType.set(e.customFeedback.mods):this.customFeedbackType.fromPreset(this.feedbackType6Op)}e.feedbackAmplitude!=null?this.feedbackAmplitude=A(0,t.operatorAmplitudeMax+1,e.feedbackAmplitude|0):this.feedbackAmplitude=0;for(let f=0;f<t.operatorCount+(this.type==11?2:0);f++){let p=this.operators[f],S;if(e.operators!=null&&(S=e.operators[f]),S==null&&(S={}),p.frequency=t.operatorFrequencies.findIndex(x=>x.name==S.frequency),p.frequency==-1&&(p.frequency=0),S.amplitude!=null?p.amplitude=A(0,t.operatorAmplitudeMax+1,S.amplitude|0):p.amplitude=0,S.waveform!=null){if(u=="goldbox"&&f>3){p.waveform=0;continue}p.waveform=t.operatorWaves.findIndex(x=>x.name==S.waveform),p.waveform==-1&&(S.waveform=="square"?(p.waveform=t.operatorWaves.dictionary["pulse width"].index,p.pulseWidth=5):S.waveform=="rounded"?p.waveform=t.operatorWaves.dictionary["quasi-sine"].index:p.waveform=0)}else p.waveform=0;S.pulseWidth!=null?p.pulseWidth=S.pulseWidth|0:p.pulseWidth=5}}else if(this.type==9){if(e.customChipWave){for(let w=0;w<64;w++)this.customChipWave[w]=e.customChipWave[w];let f=0;for(let w=0;w<this.customChipWave.length;w++)f+=this.customChipWave[w];let p=f/this.customChipWave.length,S=0,x=0;for(let w=0;w<this.customChipWave.length;w++)S+=x,x=this.customChipWave[w]-p,this.customChipWaveIntegral[w]=S;this.customChipWaveIntegral[64]=0}}else if(this.type==10&&e.modChannels!=null)for(let f=0;f<t.modCount;f++)this.modChannels[f]=e.modChannels[f],this.modInstruments[f]=e.modInstruments[f],this.modulators[f]=e.modSettings[f],e.modFilterTypes!=null&&(this.modFilterTypes[f]=e.modFilterTypes[f]),e.modEnvelopeNumbers!=null&&(this.modEnvelopeNumbers[f]=e.modEnvelopeNumbers[f]);if(this.type!=10){if(this.chord==t.chords.dictionary.arpeggio.index&&e.arpeggioSpeed!=null?this.arpeggioSpeed=e.arpeggioSpeed:this.arpeggioSpeed=r?9:12,this.chord==t.chords.dictionary.monophonic.index&&e.monoChordTone!=null&&(this.monoChordTone=e.monoChordTone),e.fastTwoNoteArp!=null?this.fastTwoNoteArp=e.fastTwoNoteArp:this.fastTwoNoteArp=s,e.clicklessTransition!=null?this.clicklessTransition=e.clicklessTransition:this.clicklessTransition=!1,e.aliases!=null)this.aliases=e.aliases;else if(u=="modbox"){let f=this.addEffect(3);this.aliases=!0,f.distortion=0}else this.aliases=!1;e.noteFilterType!=null&&(this.noteFilterType=e.noteFilterType),e.noteSimpleCut!=null&&(this.noteFilterSimpleCut=e.noteSimpleCut),e.noteSimplePeak!=null&&(this.noteFilterSimplePeak=e.noteSimplePeak),e.noteFilter!=null?this.noteFilter.fromJsonObject(e.noteFilter):this.noteFilter.reset();for(let f=0;f<t.filterMorphCount;f++)Array.isArray(e["noteSubFilters"+f])&&(this.noteSubFilters[f]=new Ee,this.noteSubFilters[f].fromJsonObject(e["noteSubFilters"+f]));if(!Array.isArray(e.eqFilter)){let f={};if(e.filterCutoffHz!=null?f.filterCutoff=A(0,11,Math.round(10+2*Math.log((e.filterCutoffHz|0)/8e3)/Math.LN2)):f.filterCutoff=this.type==0?6:10,e.filterResonance!=null?f.filterResonance=A(0,8,Math.round(7*(e.filterResonance|0)/100)):f.filterResonance=0,f.filterEnvelope=h(e.filterEnvelope),f.pulseEnvelope=h(e.pulseEnvelope),f.feedbackEnvelope=h(e.feedbackEnvelope),Array.isArray(e.operators)){f.operatorEnvelopes=[];for(let w=0;w<t.operatorCount+(this.type==11?2:0);w++){let v;e.operators[w]!=null&&(v=h(e.operators[w].envelope)),f.operatorEnvelopes[w]=v??t.envelopes.dictionary.none}}if(e.filter!=null){let w=[10,6,3,0,8,5,2],v=["none","none","none","none","decay 1","decay 2","decay 3"],P=["none","bright","medium","soft","decay bright","decay medium","decay soft"],B={"sustain sharp":1,"sustain medium":2,"sustain soft":3,"decay sharp":4},L=B[e.filter]!=null?B[e.filter]:P.indexOf(e.filter);L==-1&&(L=0),f.filterCutoff=w[L],f.filterEnvelope=h(v[L]),f.filterResonance=0}this.convertLegacySettings(f,!0)}if(Array.isArray(e.envelopes)){let f=e.envelopes;for(let p=0;p<f.length&&!(this.envelopeCount>=t.maxEnvelopeCount);p++){let S=new Zt(this.isNoiseInstrument);S.fromJsonObject(f[p],u);let x;e.pitchEnvelopeStart!=null&&e.pitchEnvelopeStart!=null?x=e.pitchEnvelopeStart:e["pitchEnvelopeStart"+p]!=null&&e["pitchEnvelopeStart"+p]!=null?x=e["pitchEnvelopeStart"+p]:x=S.pitchEnvelopeStart;let w;e.pitchEnvelopeEnd!=null&&e.pitchEnvelopeEnd!=null?w=e.pitchEnvelopeEnd:e["pitchEnvelopeEnd"+p]!=null&&e["pitchEnvelopeEnd"+p]!=null?w=e["pitchEnvelopeEnd"+p]:w=S.pitchEnvelopeEnd;let v;e["envelopeInverse"+p]!=null&&e["envelopeInverse"+p]!=null?v=e["envelopeInverse"+p]:e.pitchEnvelopeInverse!=null&&e.pitchEnvelopeInverse!=null&&t.envelopes[S.envelope].name=="pitch"?v=e.pitchEnvelopeInverse:v=S.inverse;let P;e.discreteEnvelope!=null?P=e.discreteEnvelope:P=S.discrete,this.addEnvelope(S.target,S.index,S.envelope,!0,x,w,v,S.perEnvelopeSpeed,S.perEnvelopeLowerBound,S.perEnvelopeUpperBound,S.steps,S.seed,S.waveform,P)}}}b===0&&(e.isUsingAdvancedLoopControls!=null?(this.isUsingAdvancedLoopControls=e.isUsingAdvancedLoopControls,this.chipWaveLoopStart=e.chipWaveLoopStart,this.chipWaveLoopEnd=e.chipWaveLoopEnd,this.chipWaveLoopMode=e.chipWaveLoopMode,this.chipWavePlayBackwards=e.chipWavePlayBackwards,this.chipWaveStartOffset=e.chipWaveStartOffset):(this.isUsingAdvancedLoopControls=!1,this.chipWaveLoopStart=0,this.chipWaveLoopEnd=t.rawRawChipWaves[this.chipWave].samples.length-1,this.chipWaveLoopMode=0,this.chipWavePlayBackwards=!1,this.chipWaveStartOffset=0),this.chipWaveInStereo=e.chipWaveInStereo)}getLargestControlPointCount(e){let a;if(e){a=this.noteFilter.controlPointCount;for(let n=0;n<t.filterMorphCount;n++)this.noteSubFilters[n]!=null&&this.noteSubFilters[n].controlPointCount>a&&(a=this.noteSubFilters[n].controlPointCount)}else{a=this.effects[0].eqFilter.controlPointCount;for(let n=0;n<this.effectCount;n++)if(this.effects[n]!=null&&this.effects[n].type==5)for(let r=0;r<t.filterMorphCount;r++)this.effects[n].eqSubFilters[r]!=null&&this.effects[n].eqSubFilters[r].controlPointCount>a&&(a=this.effects[n].eqSubFilters[r].controlPointCount)}return a}static frequencyFromPitch(e){return 440*Math.pow(2,(e-69)/12)}addEffect(e){let a=new cn(e);return this.effects.push(a),this.effectCount++,a}removeEffect(e){for(let a=0;a<this.effectCount;a++)if(this.effects[a]!=null&&this.effects[a].type==e){this.effects.splice(a,1);break}this.effectCount--}effectsIncludeType(e){for(let a=0;a<this.effects.length;a++)if(this.effects[a]!=null&&this.effects[a].type==e)return!0;return!1}addEnvelope(e,a,n,r,s=0,o=-1,c=!1,u=-1,b=0,l=1,g=2,m=2,y=0,h=!1){o=o!=-1?o:this.isNoiseInstrument?t.drumCount-1:t.maxPitch,u=u!=-1?u:r?1:t.envelopes[n].speed;let f=!1;if(this.supportsEnvelopeTarget(e,a)||(f=!0),this.envelopeCount>=t.maxEnvelopeCount)throw new Error;for(;this.envelopes.length<=this.envelopeCount;)this.envelopes[this.envelopes.length]=new Zt(this.isNoiseInstrument);let p=this.envelopes[this.envelopeCount];p.target=f?t.instrumentAutomationTargets.dictionary.none.index:e,p.index=f?0:a,r?p.envelope=n:p.envelope=A(0,t.newEnvelopes.length,t.envelopes[n].type),p.pitchEnvelopeStart=s,p.pitchEnvelopeEnd=o,p.inverse=c,p.perEnvelopeSpeed=u,p.perEnvelopeLowerBound=b,p.perEnvelopeUpperBound=l,p.steps=g,p.seed=m,p.waveform=y,p.discrete=h,this.envelopeCount++}supportsEnvelopeTarget(e,a){let n=t.instrumentAutomationTargets[e];if(n.computeIndex==null&&n.name!="none"||a>=n.maxCount||n.compatibleInstruments!=null&&n.compatibleInstruments.indexOf(this.type)==-1||n.effect!=null&&!this.effectsIncludeType(n.effect)||n.mdeffect!=null&&(this.mdeffects&1<<n.mdeffect)==0)return!1;if(n.isFilter){let r=this.noteFilter.controlPointCount;if(this.noteFilterType&&(r=1),a>=r)return!1}return!((n.name=="operatorFrequency"||n.name=="operatorAmplitude")&&a>=4+(this.type==11?2:0))}clearInvalidEnvelopeTargets(){for(let e=0;e<this.envelopeCount;e++){let a=this.envelopes[e].target,n=this.envelopes[e].index;this.supportsEnvelopeTarget(a,n)||(this.envelopes[e].target=t.instrumentAutomationTargets.dictionary.none.index,this.envelopes[e].index=0)}}getTransition(){return Wt(this.mdeffects)?t.transitions[this.transition]:this.type==10?t.transitions.dictionary.interrupt:t.transitions.dictionary.normal}getFadeInSeconds(){return this.type==4?0:Gn(this.fadeIn)}getFadeOutTicks(){return this.type==4?t.drumsetFadeOutTicks:Un(this.fadeOut)}getChord(){return Ot(this.mdeffects)?t.chords[this.chord]:t.chords.dictionary.simultaneous}getDrumsetEnvelope(e){if(this.type!=4)throw new Error("Can't getDrumsetEnvelope() for non-drumset.");return t.envelopes[this.drumsetEnvelopes[e]]}};var yt=class{octave=0;instruments=[];patterns=[];bars=[];muted=!1;visible=!0;name="";color=0};var ct=class{Y=1;Z=[void 0];ee=0;K=0;J=0;pushFront(e){this.J>=this.Y&&this.pe(),this.K=this.K-1&this.ee,this.Z[this.K]=e,this.J++}pushBack(e){this.J>=this.Y&&this.pe(),this.Z[this.K+this.J&this.ee]=e,this.J++}popFront(){if(this.J<=0)throw new Error("No elements left to pop.");let e=this.Z[this.K];return this.Z[this.K]=void 0,this.K=this.K+1&this.ee,this.J--,e}popBack(){if(this.J<=0)throw new Error("No elements left to pop.");this.J--;let e=this.K+this.J&this.ee,a=this.Z[e];return this.Z[e]=void 0,a}peakFront(){if(this.J<=0)throw new Error("No elements left to pop.");return this.Z[this.K]}peakBack(){if(this.J<=0)throw new Error("No elements left to pop.");return this.Z[this.K+this.J-1&this.ee]}count(){return this.J}set(e,a){if(e<0||e>=this.J)throw new Error("Invalid index");this.Z[this.K+e&this.ee]=a}get(e){if(e<0||e>=this.J)throw new Error("Invalid index");return this.Z[this.K+e&this.ee]}remove(e){if(e<0||e>=this.J)throw new Error("Invalid index");if(e<=this.J>>1){for(;e>0;)this.set(e,this.get(e-1)),e--;this.popFront()}else{for(e++;e<this.J;)this.set(e-1,this.get(e)),e++;this.popBack()}}pe(){if(this.Y>=1073741824)throw new Error(`wtf?? requested more than ${this.Y} elements in deque`);this.Y=this.Y<<1;let e=this.Z,a=new Array(this.Y),n=this.J|0,r=this.K|0;for(let s=0;s<n;s++)a[s]=e[r+s&this.ee];for(let s=n;s<this.Y;s++)a[s]=void 0;this.K=0,this.Z=a,this.ee=this.Y-1}};var Qi=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);var we=class i{static version="v1";static versionDisplayName="DragonBox!";static releaseNotesURL="./patch_notes.html";static isOnMac=/^Mac/i.test(navigator.platform)||/Mac OS X/i.test(navigator.userAgent)||/^(iPhone|iPad|iPod)/i.test(navigator.platform)||/(iPhone|iPad|iPod)/i.test(navigator.userAgent);static ctrlSymbol=i.isOnMac?"\u2318":"Ctrl+";static ctrlName=i.isOnMac?"command":"control";static customSamples;static presetCategories=he([{name:"Custom Instruments",presets:he([{name:_e[0],customType:0},{name:_e[1],customType:1},{name:_e[2],customType:2},{name:_e[3],customType:3},{name:_e[4],customType:4},{name:_e[5],customType:5},{name:_e[6],customType:6},{name:_e[7],customType:7},{name:_e[8],customType:8},{name:_e[9],customType:9},{name:_e[11],customType:11}])},{name:"Retro Presets",presets:he([{name:"square wave",midiProgram:80,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"square",unison:"none",envelopes:[]}},{name:"triangle wave",midiProgram:71,settings:{type:"chip",eqFilter:[],effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1,chord:"arpeggio",wave:"triangle",unison:"none",envelopes:[]}},{name:"square lead",midiProgram:80,generalMidi:!0,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",wave:"square",unison:"hum",envelopes:[]}},{name:"sawtooth lead 1",midiProgram:81,generalMidi:!0,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",wave:"sawtooth",unison:"shimmer",envelopes:[]}},{name:"sawtooth lead 2",midiProgram:81,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1}],effects:["vibrato","aliasing"],vibrato:"light",transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"hum",envelopes:[]}},{name:"chip noise",midiProgram:116,isNoise:!0,settings:{type:"noise",transition:"hard",effects:["aliasing"],chord:"arpeggio",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"steady",wave:"retro"}},{name:"supersaw lead",midiProgram:81,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:2}],effects:["reverb"],reverb:67,fadeInSeconds:0,fadeOutTicks:-6,pulseWidth:50,dynamism:100,spread:58,shape:0,envelopes:[]}},{name:"FM twang",midiProgram:32,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:0},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1}]}},{name:"FM bass",midiProgram:36,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"custom interval",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"2\xD7",amplitude:11},{frequency:"1\xD7",amplitude:7},{frequency:"1\xD7",amplitude:9},{frequency:"20\xD7",amplitude:3}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 2",index:3}]}},{name:"FM flute",midiProgram:73,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:6},{frequency:"1\xD7",amplitude:0},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"twang 2",index:1}]}},{name:"FM organ",midiProgram:16,settings:{type:"FM",eqFilter:[],effects:["vibrato"],vibrato:"delayed",transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"custom interval",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:14},{frequency:"2\xD7",amplitude:14},{frequency:"1\xD7",amplitude:11},{frequency:"2\xD7",amplitude:11}],envelopes:[]}},{name:"FM sine",midiProgram:55,settings:{type:"FM",eqFilter:[],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,effects:[],panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine"},{frequency:"1\xD7",amplitude:0,waveform:"sine"},{frequency:"1\xD7",amplitude:0,waveform:"sine"},{frequency:"1\xD7",amplitude:0,waveform:"sine"}],envelopes:[]}},{name:"NES Pulse",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",vibrato:"none",envelopes:[],customChipWave:[-24,-24,-24,-24,-23,-23,-23,-23,-22,-22,-22,-22,-21,-21,-21,-21,-20,-20,-20,-20,-19,-19,-19,-19,-18,-18,-18,-18,-17,-17,-17,-17,24,24,24,24,23,23,23,23,22,22,22,22,21,21,21,21,20,20,20,20,19,19,19,19,18,18,18,18,17,17,17,17]}},{name:"Gameboy Pulse",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-20,-17,-15,-13,-13,-11,-11,-11,-9,-9,-9,-9,-7,-7,-7,-7,-7,-5,-5,-5,-5,-5,-5,-3,-3,-3,-3,-3,-3,-3,-3,24,20,17,15,13,13,11,11,11,9,9,9,9,7,7,7,7,7,5,5,5,5,5,5,3,3,3,3,3,3,3,3]}},{name:"VRC6 Sawtooth",midiProgram:81,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-20,-16,-13,-10,-8,-6,-5,-4,-4,0,0,0,0,4,4,4,4,4,4,8,8,8,8,8,8,8,8,12,12,12,12,12,12,12,12,16,16,16,16,16,16,16,16,20,20,20,20,20,20,20,20,24,24,24,24,24,24,24,24,24,24,24,24]}},{name:"Atari Square",midiProgram:80,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-24,-24,-23,-23,-23,-22,-22,-22,-21,-21,-21,-20,-20,-20,-19,-19,-19,-18,-18,-18,-17,-17,-17,-16,-16,-16,-15,-15,-15,-14,-14,-14,-13,-13,-13,24,24,24,23,23,23,22,22,22,21,21,21,20,20,20,19,19,19,18,18,18,17,17,17,16,16,15,15]}},{name:"Atari Bass",midiProgram:36,settings:{type:"custom chip",effects:["aliasing"],transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,-24,-24,-24,24,24,24,-24,-24,-24,24,24,24,-24,-24,-24,24,24,-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,-24,-24,24,24,24,24,24,-24,-24,-24,-24,24,24,-24,-24,24,24]}},{name:"Sunsoft Bass",midiProgram:36,settings:{type:"custom chip",effects:["aliasing"],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"arpeggio",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5}],unison:"none",envelopes:[],customChipWave:[24,24,15,15,9,9,-4,-4,0,0,-13,-13,-19,-19,-24,-24,-24,-24,-10,-10,0,0,-7,-7,-7,-7,0,0,6,6,-4,-4,3,3,-4,-4,3,3,3,3,9,9,15,15,15,15,6,6,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,3,3,12,12,24,24]}}])},{name:"Keyboard Presets",presets:he([{name:"grand piano 1",midiProgram:0,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:2e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.125}],reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,100,86,86,86,71,71,71,0,86,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],unison:"piano",stringSustain:79,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}},{name:"bright piano",midiProgram:1,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.7071},{type:"high-pass",cutoffHz:148.65,linearGain:.5},{type:"peak",cutoffHz:3363.59,linearGain:1.4142}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",harmonics:[100,100,86,86,71,71,0,71,71,71,71,71,71,14,57,57,57,57,57,57,29,57,57,57,57,57,57,57],unison:"piano",stringSustain:86,envelopes:[]}},{name:"electric grand",midiProgram:2,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"1/8 pulse",unison:"shimmer",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"honky-tonk piano",midiProgram:3,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,100,86,71,86,71,43,71,43,43,57,57,57,29,57,57,57,57,57,57,43,57,57,57,43,43,43,43],unison:"honky tonk",stringSustain:71,envelopes:[]}},{name:"electric piano 1",midiProgram:4,generalMidi:!0,settings:{type:"harmonics",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:.5}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",harmonics:[86,100,100,71,71,57,57,43,43,43,29,29,29,14,14,14,0,0,0,0,0,57,0,0,0,0,0,0],unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"electric piano 2",midiProgram:5,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:12},{frequency:"1\xD7",amplitude:6},{frequency:"1\xD7",amplitude:9},{frequency:"16\xD7",amplitude:6}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:3}]}},{name:"harpsichord",midiProgram:6,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:250,linearGain:.3536},{type:"peak",cutoffHz:11313.71,linearGain:2.8284}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",harmonics:[100,100,100,86,57,86,86,86,86,57,57,71,71,86,86,71,71,86,86,71,71,71,71,71,71,71,71,71],unison:"none",stringSustain:79,envelopes:[]}},{name:"clavinet",midiProgram:7,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.3536}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"3\u27F2",feedbackAmplitude:6,operators:[{frequency:"3\xD7",amplitude:15},{frequency:"~1\xD7",amplitude:6},{frequency:"8\xD7",amplitude:4},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"},{target:"feedbackAmplitude",envelope:"twang 2"}]}},{name:"dulcimer",midiProgram:15,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,100,100,86,100,86,57,100,100,86,100,86,100,86,100,71,57,71,71,100,86,71,86,86,100,86,86,86],unison:"piano",stringSustain:79,envelopes:[]}},{name:"grand piano 2",midiProgram:0,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:2e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.125}],reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",harmonics:[100,86,86,86,86,71,71,57,0,57,29,43,57,57,57,43,43,0,29,43,43,43,43,43,43,29,0,29],unison:"piano",stringSustain:79,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}},{name:"grand piano 3",midiProgram:0,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:148.65,linearGain:.7071},{type:"peak",cutoffHz:1681.79,linearGain:4},{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"peak",cutoffHz:3363.59,linearGain:4},{type:"peak",cutoffHz:2378.41,linearGain:.25}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:125,linearGain:.0884}],reverb:67,fadeInSeconds:0,fadeOutTicks:48,harmonics:[100,100,86,86,86,71,71,71,0,71,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],unison:"piano",stringSustain:86,stringSustainType:"acoustic",envelopes:[{target:"noteFilterFreq",envelope:"note size",index:0},{target:"noteFilterFreq",envelope:"twang 1",index:1},{target:"noteFilterFreq",envelope:"twang 1",index:1}]}}])},{name:"Idiophone Presets",presets:he([{name:"celesta",midiProgram:8,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~1\xD7",amplitude:11,envelope:"custom"},{frequency:"8\xD7",amplitude:6,envelope:"custom"},{frequency:"20\xD7",amplitude:3,envelope:"twang 1"},{frequency:"3\xD7",amplitude:1,envelope:"twang 2"}]}},{name:"glockenspiel",midiProgram:9,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:193,effects:["panning","chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:2,operators:[{frequency:"1\xD7",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"5\xD7",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"8\xD7",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"20\xD7",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"feedbackAmplitude",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"music box 1",midiProgram:10,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,0,0,100,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,71,0],unison:"none",stringSustain:64,envelopes:[]}},{name:"music box 2",midiProgram:10,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:.7071}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,57,57,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,0],unison:"none",stringSustain:29,envelopes:[]}},{name:"vibraphone",midiProgram:11,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u21922\u21923\u21924",feedbackAmplitude:3,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:9,envelope:"custom"},{frequency:"~1\xD7",amplitude:9,envelope:"custom"},{frequency:"9\xD7",amplitude:3,envelope:"custom"},{frequency:"4\xD7",amplitude:9,envelope:"custom"}]}},{name:"marimba",midiProgram:12,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:197,effects:["panning","chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:6,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1\u20032\u2190(3\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"4\xD7",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"13\xD7",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2}],isDrum:!1}},{name:"kalimba",midiProgram:108,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:198,effects:["panning","chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:7,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:.5}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"5\xD7",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"20\xD7",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2}],isDrum:!1}},{name:"xylophone",midiProgram:13,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1\xD7",amplitude:9,envelope:"custom"},{frequency:"6\xD7",amplitude:9,envelope:"custom"},{frequency:"11\xD7",amplitude:9,envelope:"custom"},{frequency:"20\xD7",amplitude:6,envelope:"twang 1"}]}},{name:"tubular bell",midiProgram:14,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.5},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:96,chord:"strum",harmonics:[43,71,0,100,0,100,0,86,0,0,86,0,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,14],unison:"shimmer",stringSustain:86,envelopes:[]}},{name:"bell synth",midiProgram:14,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~2\xD7",amplitude:10,envelope:"custom"},{frequency:"7\xD7",amplitude:6,envelope:"twang 3"},{frequency:"20\xD7",amplitude:1,envelope:"twang 1"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"rain drop",midiProgram:96,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1\xD7",amplitude:12,envelope:"custom"},{frequency:"6\xD7",amplitude:4,envelope:"custom"},{frequency:"20\xD7",amplitude:3,envelope:"twang 1"},{frequency:"1\xD7",amplitude:6,envelope:"tremolo1"}]}},{name:"crystal",midiProgram:98,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"delayed",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:4,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:10,envelope:"custom"},{frequency:"3\xD7",amplitude:7,envelope:"custom"},{frequency:"6\xD7",amplitude:4,envelope:"custom"},{frequency:"13\xD7",amplitude:4,envelope:"custom"}]}},{name:"tinkle bell",midiProgram:112,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u21922\u21923\u21924",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"~2\xD7",amplitude:7,envelope:"custom"},{frequency:"5\xD7",amplitude:7,envelope:"custom"},{frequency:"7\xD7",amplitude:7,envelope:"custom"},{frequency:"16\xD7",amplitude:7,envelope:"custom"}]}},{name:"agogo",midiProgram:113,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:205,effects:["panning","chord type","note filter","reverb"],chord:"strum",fastTwoNoteArp:!0,arpeggioSpeed:12,noteFilterType:!0,noteSimpleCut:8,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u21924",feedbackAmplitude:15,operators:[{frequency:"2\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"5\xD7",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"8\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"13\xD7",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"feedbackAmplitude",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}}])},{name:"Guitar Presets",presets:he([{name:"nylon guitar",midiProgram:24,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u21902\u21903\u21904",feedbackType:"3\u27F2",feedbackAmplitude:6,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:6,envelope:"steady"},{frequency:"5\xD7",amplitude:2,envelope:"steady"},{frequency:"7\xD7",amplitude:4,envelope:"steady"}]}},{name:"steel guitar",midiProgram:25,generalMidi:!0,settings:{type:"Picked String",eqFilter:[],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",harmonics:[100,100,86,71,71,71,86,86,71,57,43,43,43,57,57,57,57,57,43,43,43,43,43,43,43,43,43,43],unison:"none",stringSustain:71,envelopes:[]}},{name:"jazz guitar",midiProgram:26,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,57,71,71,43,57,71,57,43,29,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},{name:"clean guitar",midiProgram:27,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[86,100,100,100,86,57,86,100,100,100,71,57,43,71,86,71,57,57,71,71,71,71,57,57,57,57,57,43]}},{name:"muted guitar",midiProgram:28,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:7,feedbackEnvelope:"twang 2",operators:[{frequency:"1\xD7",amplitude:13,envelope:"custom"},{frequency:"1\xD7",amplitude:4,envelope:"twang 3"},{frequency:"4\xD7",amplitude:4,envelope:"twang 2"},{frequency:"16\xD7",amplitude:4,envelope:"twang 1"}]}}])},{name:"Picked Bass Presets",presets:he([{name:"acoustic bass",midiProgram:32,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,86,71,71,71,71,57,57,57,57,43,43,43,43,43,29,29,29,29,29,29,14,14,14,14,14,14,14]}},{name:"fingered bass",midiProgram:33,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,86,71,57,71,43,57,29,29,29,29,29,29,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0]}},{name:"picked bass",midiProgram:34,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"3\u27F2",feedbackAmplitude:4,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:5,envelope:"steady"},{frequency:"11\xD7",amplitude:1,envelope:"twang 3"},{frequency:"1\xD7",amplitude:9,envelope:"steady"}]}},{name:"fretless bass",midiProgram:35,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:1e3,filterResonance:14,filterEnvelope:"flare 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,71,57,57,71,71,71,57,57,57,57,57,57,57,43,43,43,43,43,43,43,43,29,29,14]}},{name:"slap bass 1",midiProgram:36,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,100,100,100,86,71,57,29,29,43,43,57,71,57,29,29,43,57,57,57,43,43,43,57,71,71,71,71]}},{name:"slap bass 2",midiProgram:37,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u21902\u21903\u21904",feedbackType:"3\u27F2",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"3\xD7",amplitude:13,envelope:"custom"},{frequency:"1\xD7",amplitude:7,envelope:"steady"},{frequency:"13\xD7",amplitude:3,envelope:"steady"},{frequency:"1\xD7",amplitude:11,envelope:"steady"}]}},{name:"bass synth 1",midiProgram:38,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"3\u27F2\u20034\u27F2",feedbackAmplitude:9,feedbackEnvelope:"twang 2",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"custom"},{frequency:"1\xD7",amplitude:14,envelope:"twang 1"},{frequency:"~1\xD7",amplitude:13,envelope:"twang 2"}]}},{name:"bass synth 2",midiProgram:39,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:1e3,filterResonance:57,filterEnvelope:"punch",vibrato:"none",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u21922",feedbackAmplitude:4,feedbackEnvelope:"twang 3",operators:[{frequency:"1\xD7",amplitude:9,envelope:"custom"},{frequency:"1\xD7",amplitude:9,envelope:"steady"},{frequency:"3\xD7",amplitude:0,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"bass & lead",midiProgram:87,generalMidi:!0,settings:{type:"chip",transition:"hard",effects:"reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:86,filterEnvelope:"twang 2",wave:"sawtooth",interval:"shimmer",vibrato:"none"}},{name:"dubstep yoi yoi",midiProgram:87,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.7071}],effects:["note filter","bitcrusher"],noteFilter:[{type:"low-pass",cutoffHz:594.6,linearGain:11.3137}],bitcrusherOctave:1.5,bitcrusherQuantization:0,transition:"slide",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"arpeggio",wave:"sawtooth",unison:"none",envelopes:[{target:"noteFilterFreq",envelope:"flare 2",index:0}]}}])},{name:"Picked String Presets",presets:he([{name:"pizzicato strings",midiProgram:45,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:1e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:7,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"3\xD7",amplitude:11,envelope:"custom"},{frequency:"6\xD7",amplitude:9,envelope:"custom"},{frequency:"~1\xD7",amplitude:10,envelope:"steady"}]}},{name:"harp",midiProgram:46,generalMidi:!0,settings:{type:"FM",transition:"hard fade",effects:"reverb",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"3\u27F2",feedbackAmplitude:6,feedbackEnvelope:"twang 2",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"4\xD7",amplitude:6,envelope:"custom"},{frequency:"~2\xD7",amplitude:3,envelope:"steady"},{frequency:"1\xD7",amplitude:6,envelope:"steady"}]}},{name:"sitar",midiProgram:104,generalMidi:!0,settings:{type:"FM",transition:"hard fade",effects:"reverb",chord:"strum",filterCutoffHz:8e3,filterResonance:57,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:14,envelope:"twang 3"},{frequency:"9\xD7",amplitude:3,envelope:"twang 3"},{frequency:"16\xD7",amplitude:9,envelope:"swell 3"}]}},{name:"banjo",midiProgram:105,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"2\u27F2",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"4\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"steady"},{frequency:"11\xD7",amplitude:3,envelope:"twang 3"},{frequency:"1\xD7",amplitude:11,envelope:"steady"}]}},{name:"ukulele",midiProgram:105,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"3\u27F2",feedbackAmplitude:5,feedbackEnvelope:"twang 1",operators:[{frequency:"2\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:6,envelope:"steady"},{frequency:"9\xD7",amplitude:4,envelope:"twang 2"},{frequency:"1\xD7",amplitude:11,envelope:"steady"}]}},{name:"shamisen",midiProgram:106,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"3\u27F2",feedbackAmplitude:9,feedbackEnvelope:"twang 3",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:12,envelope:"steady"},{frequency:"16\xD7",amplitude:4,envelope:"twang 3"},{frequency:"1\xD7",amplitude:7,envelope:"steady"}]}},{name:"koto",midiProgram:107,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:5,feedbackEnvelope:"twang 2",operators:[{frequency:"~1\xD7",amplitude:12,envelope:"custom"},{frequency:"6\xD7",amplitude:10,envelope:"custom"},{frequency:"4\xD7",amplitude:8,envelope:"twang 3"},{frequency:"~2\xD7",amplitude:8,envelope:"twang 3"}]}}])},{name:"Distortion Presets",presets:he([{name:"overdrive guitar",midiProgram:29,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"peak",cutoffHz:840.9,linearGain:.5}],effects:["note filter","distortion"],noteFilter:[{type:"high-pass",cutoffHz:297.3,linearGain:2},{type:"low-pass",cutoffHz:2378.41,linearGain:.7071}],distortion:71,transition:"normal",fadeInSeconds:0,fadeOutTicks:12,chord:"strum",harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"distortion guitar",midiProgram:30,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071},{type:"high-pass",cutoffHz:210.22,linearGain:1},{type:"low-pass",cutoffHz:5656.85,linearGain:1},{type:"peak",cutoffHz:594.6,linearGain:.3536},{type:"peak",cutoffHz:1e3,linearGain:.25}],effects:["note filter","distortion","reverb"],noteFilter:[{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"low-pass",cutoffHz:2e3,linearGain:1}],distortion:86,reverb:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:12,chord:"strum",harmonics:[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],unison:"none",stringSustain:71,envelopes:[{target:"noteFilterFreq",envelope:"note size",index:1}]}},{name:"charango synth",midiProgram:84,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:1}],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u21922\u21923\u21924",feedbackAmplitude:8,operators:[{frequency:"3\xD7",amplitude:13},{frequency:"~1\xD7",amplitude:5},{frequency:"4\xD7",amplitude:6},{frequency:"3\xD7",amplitude:7}],envelopes:[{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"guitar harmonics",midiProgram:31,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:2}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1\u2190(2\u20023)\u21904",feedbackType:"1\u27F2",feedbackAmplitude:2,operators:[{frequency:"4\xD7",amplitude:12},{frequency:"16\xD7",amplitude:5},{frequency:"1\xD7",amplitude:2},{frequency:"~1\xD7",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:1},{target:"operatorAmplitude",envelope:"punch",index:2},{target:"operatorAmplitude",envelope:"twang 1",index:3}]}},{name:"PWM overdrive",midiProgram:29,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:1.4142}],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",pulseWidth:17.67767,envelopes:[{target:"pulseWidth",envelope:"punch"}]}},{name:"PWM distortion",midiProgram:30,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:2}],effects:["vibrato"],vibrato:"delayed",transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",pulseWidth:50,envelopes:[{target:"pulseWidth",envelope:"swell 1"}]}},{name:"FM overdrive",midiProgram:29,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u21922",feedbackAmplitude:2,operators:[{frequency:"~1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:12},{frequency:"~2\xD7",amplitude:6},{frequency:"1\xD7",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"twang 1",index:2},{target:"operatorAmplitude",envelope:"swell 3",index:3},{target:"feedbackAmplitude",envelope:"punch"}]}},{name:"FM distortion",midiProgram:30,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:2}],effects:["reverb"],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"strum",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u21922",feedbackAmplitude:4,operators:[{frequency:"~1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:11},{frequency:"1\xD7",amplitude:9},{frequency:"~2\xD7",amplitude:4}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:2},{target:"operatorAmplitude",envelope:"swell 3",index:3}]}}])},{name:"Bellows Presets",presets:he([{name:"drawbar organ 1",midiProgram:16,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[86,86,0,86,0,0,0,86,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"drawbar organ 2",midiProgram:16,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[86,29,71,86,71,14,0,100,0,0,0,86,0,0,0,71,0,0,0,57,0,0,0,29,0,0,0,0]}},{name:"percussive organ",midiProgram:17,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:515,effects:["panning","vibrato","note filter","chorus","reverb"],vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!0,noteSimpleCut:8,noteSimplePeak:1,noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:.5}],pan:0,panDelay:10,chorus:100,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:2,operators:[{frequency:"1\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"4\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"6\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"punch",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"feedbackAmplitude",envelope:"flare",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"rock organ",midiProgram:18,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"hard",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"punch",vibrato:"delayed",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:2,feedbackEnvelope:"flare 1",operators:[{frequency:"1\xD7",amplitude:9,envelope:"custom"},{frequency:"4\xD7",amplitude:9,envelope:"custom"},{frequency:"6\xD7",amplitude:9,envelope:"custom"},{frequency:"2\xD7",amplitude:5,envelope:"steady"}]}},{name:"pipe organ",midiProgram:19,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",transition:"cross fade",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:5,feedbackEnvelope:"steady",operators:[{frequency:"1\xD7",amplitude:8,envelope:"custom"},{frequency:"2\xD7",amplitude:9,envelope:"custom"},{frequency:"4\xD7",amplitude:9,envelope:"custom"},{frequency:"8\xD7",amplitude:8,envelope:"custom"}]}},{name:"reed organ",midiProgram:20,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[71,86,100,86,71,100,57,71,71,71,43,43,43,71,43,71,57,57,57,57,57,57,57,29,43,29,29,14]}},{name:"accordion",midiProgram:21,generalMidi:!0,settings:{type:"chip",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"swell 1",wave:"double saw",interval:"honky tonk",vibrato:"none"}},{name:"bandoneon",midiProgram:23,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",interval:"hum",vibrato:"none",harmonics:[86,86,86,57,71,86,57,71,71,71,57,43,57,43,71,43,71,57,57,43,43,43,57,43,43,29,29,29]}},{name:"bagpipe",midiProgram:109,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"punch",interval:"hum",vibrato:"none",harmonics:[71,86,86,100,100,86,57,100,86,71,71,71,57,57,57,71,57,71,57,71,43,57,57,43,43,43,43,43]}}])},{name:"String Presets",presets:he([{name:"violin 1",midiProgram:40,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["vibrato","reverb"],vibrato:"delayed",reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:6,chord:"simultaneous",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"1\u21922",feedbackAmplitude:5,operators:[{frequency:"4\xD7",amplitude:9},{frequency:"3\xD7",amplitude:9},{frequency:"2\xD7",amplitude:7},{frequency:"7\xD7",amplitude:5}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:3},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"viola",midiProgram:41,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:8,feedbackEnvelope:"swell 1",operators:[{frequency:"2\xD7",amplitude:11,envelope:"custom"},{frequency:"7\xD7",amplitude:7,envelope:"custom"},{frequency:"13\xD7",amplitude:4,envelope:"custom"},{frequency:"1\xD7",amplitude:5,envelope:"steady"}]}},{name:"cello",midiProgram:42,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:.1768},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"peak",cutoffHz:4756.83,linearGain:5.6569}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.0884}],reverb:67,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:12,chord:"simultaneous",algorithm:"(1\u20022)\u21903\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:3,operators:[{frequency:"16\xD7",amplitude:5},{frequency:"~1\xD7",amplitude:10},{frequency:"1\xD7",amplitude:9},{frequency:"6\xD7",amplitude:3}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"operatorAmplitude",envelope:"swell 1",index:3}]}},{name:"contrabass",midiProgram:43,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1\u20022)\u21903\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"16\xD7",amplitude:5,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"steady"},{frequency:"6\xD7",amplitude:3,envelope:"swell 1"}]}},{name:"fiddle",midiProgram:110,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"3\u27F2\u20034\u27F2",feedbackAmplitude:5,feedbackEnvelope:"twang 1",operators:[{frequency:"2\xD7",amplitude:10,envelope:"custom"},{frequency:"8\xD7",amplitude:8,envelope:"custom"},{frequency:"1\xD7",amplitude:8,envelope:"steady"},{frequency:"16\xD7",amplitude:3,envelope:"steady"}]}},{name:"tremolo strings",midiProgram:44,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,effects:["panning","note filter","chorus","reverb"],noteFilterType:!0,noteSimpleCut:6,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.1768}],pan:0,panDelay:10,chorus:100,reverb:0,fadeInSeconds:.0125,fadeOutTicks:72,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u21922\u21923\u21924",feedbackAmplitude:12,operators:[{frequency:"1\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"4\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"7\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:4,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"strings",midiProgram:48,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"4\u27F2",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4\xD7",amplitude:9,envelope:"custom"},{frequency:"3\xD7",amplitude:9,envelope:"custom"},{frequency:"2\xD7",amplitude:7,envelope:"steady"},{frequency:"7\xD7",amplitude:3,envelope:"swell 1"}]}},{name:"slow strings",midiProgram:49,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:1414,filterResonance:0,filterEnvelope:"swell 2",vibrato:"none",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"4\u27F2",feedbackAmplitude:6,feedbackEnvelope:"flare 3",operators:[{frequency:"4\xD7",amplitude:10,envelope:"custom"},{frequency:"3\xD7",amplitude:10,envelope:"custom"},{frequency:"2\xD7",amplitude:7,envelope:"steady"},{frequency:"7\xD7",amplitude:4,envelope:"swell 1"}]}},{name:"strings synth 1",midiProgram:50,generalMidi:!0,settings:{type:"chip",transition:"soft fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:1414,filterResonance:43,filterEnvelope:"steady",wave:"sawtooth",interval:"hum",vibrato:"delayed"}},{name:"strings synth 2",midiProgram:51,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:12,feedbackEnvelope:"swell 1",operators:[{frequency:"3\xD7",amplitude:6,envelope:"custom"},{frequency:"2\xD7",amplitude:7,envelope:"custom"},{frequency:"1\xD7",amplitude:8,envelope:"custom"},{frequency:"1\xD7",amplitude:9,envelope:"custom"}]}},{name:"orchestra hit 1",midiProgram:55,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"custom",vibrato:"none",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:14,feedbackEnvelope:"twang 3",operators:[{frequency:"1\xD7",amplitude:15,envelope:"twang 3"},{frequency:"2\xD7",amplitude:15,envelope:"flare 3"},{frequency:"4\xD7",amplitude:15,envelope:"flare 2"},{frequency:"8\xD7",amplitude:15,envelope:"flare 1"}]}},{name:"violin 2",midiProgram:40,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:2828,linearGain:1.4142},{type:"high-pass",cutoffHz:105.11,linearGain:.3536}],effects:["vibrato","reverb"],vibrato:"light",reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:6,chord:"simultaneous",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"4\u27F2",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4\xD7",amplitude:15,envelope:"custom"},{frequency:"3\xD7",amplitude:13,envelope:"custom"},{frequency:"2\xD7",amplitude:7,envelope:"steady"},{frequency:"7\xD7",amplitude:8,envelope:"swell 1"}]}},{name:"orchestra hit 2",midiProgram:55,midiSubharmonicOctaves:1,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:588,effects:["panning","vibrato","note filter","chorus","reverb"],vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!0,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.5}],pan:0,panDelay:10,chorus:100,reverb:0,fadeInSeconds:.0125,fadeOutTicks:72,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:14,operators:[{frequency:"1\xD7",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:14,waveform:"sine",pulseWidth:5},{frequency:"3\xD7",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"4\xD7",amplitude:14,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"supersaw string",midiProgram:41,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1.4142},{type:"low-pass",cutoffHz:3363.59,linearGain:.1768}],effects:["note filter","reverb"],noteFilter:[{type:"high-pass",cutoffHz:500,linearGain:.1768}],reverb:33,fadeInSeconds:.0263,fadeOutTicks:6,pulseWidth:35.35534,dynamism:83,spread:8,shape:50,envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0}]}},{name:"supersaw string 2",midiProgram:41,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5},{type:"high-pass",cutoffHz:594.6,linearGain:.25},{type:"peak",cutoffHz:2e3,linearGain:2.8284},{type:"peak",cutoffHz:4756.83,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5},{type:"high-pass",cutoffHz:594.6,linearGain:.25},{type:"peak",cutoffHz:2e3,linearGain:2.8284},{type:"peak",cutoffHz:4756.83,linearGain:2}],effects:["note filter","chorus","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:1}],chorus:57,reverb:42,fadeInSeconds:.0575,fadeOutTicks:-6,pulseWidth:50,dynamism:67,spread:58,shape:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"pulseWidth",envelope:"flare 2"}]}}])},{name:"Vocal Presets",presets:he([{name:"choir soprano",midiProgram:94,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2},{type:"peak",cutoffHz:1189.21,linearGain:5.6569},{type:"high-pass",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:.25},{type:"low-pass",cutoffHz:6727.17,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:33,fadeInSeconds:.0413,fadeOutTicks:24,harmonics:[100,100,86,57,29,29,57,71,57,29,14,14,14,29,43,57,43,29,14,14,14,14,14,14,0,0,0,0],unison:"none",envelopes:[]}},{name:"choir tenor",midiProgram:52,generalMidi:!0,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:707.11,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:48,chord:"simultaneous",harmonics:[86,100,100,86,71,57,43,29,29,29,29,43,43,43,29,29,29,29,29,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"choir bass",midiProgram:52,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:11.3137},{type:"peak",cutoffHz:594.6,linearGain:5.6569},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:11.3137}],effects:["vibrato","chorus","reverb"],vibrato:"shaky",chorus:100,reverb:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:48,chord:"simultaneous",harmonics:[71,86,100,100,86,86,57,43,29,29,29,29,29,29,43,43,43,43,43,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"solo soprano",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2},{type:"peak",cutoffHz:1189.21,linearGain:5.6569},{type:"high-pass",cutoffHz:707.11,linearGain:2.8284},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:.25}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,harmonics:[86,100,86,43,14,14,57,71,57,14,14,14,14,14,43,57,43,14,14,14,14,14,14,14,0,0,0,0],unison:"none",envelopes:[]}},{name:"solo tenor",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"peak",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:707.11,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"high-pass",cutoffHz:297.3,linearGain:.7071},{type:"low-pass",cutoffHz:2828.43,linearGain:11.3137}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,harmonics:[86,100,100,86,71,57,43,29,29,29,29,43,43,43,29,29,29,29,29,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"solo bass",midiProgram:85,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:5.6569},{type:"peak",cutoffHz:594.6,linearGain:8},{type:"peak",cutoffHz:1681.79,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:840.9,linearGain:8},{type:"high-pass",cutoffHz:210.22,linearGain:1.4142}],effects:["vibrato","reverb"],vibrato:"shaky",reverb:33,transition:"normal",fadeInSeconds:.0263,fadeOutTicks:12,chord:"simultaneous",harmonics:[71,86,100,100,86,86,57,43,29,29,29,29,29,29,43,43,43,43,43,29,29,29,29,14,14,14,14,14],unison:"none",envelopes:[]}},{name:"voice ooh",midiProgram:53,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:1414,filterResonance:57,filterEnvelope:"steady",interval:"union",vibrato:"shaky",harmonics:[100,57,43,43,14,14,0,0,0,14,29,29,14,0,14,29,29,14,0,0,0,0,0,0,0,0,0,0]}},{name:"voice synth",midiProgram:54,generalMidi:!0,settings:{type:"chip",transition:"medium fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:57,filterEnvelope:"steady",wave:"rounded",interval:"union",vibrato:"light"}},{name:"vox synth lead",midiProgram:85,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",vibrato:"light",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u21922\u21923\u21924",feedbackAmplitude:2,feedbackEnvelope:"punch",operators:[{frequency:"2\xD7",amplitude:10,envelope:"custom"},{frequency:"9\xD7",amplitude:5,envelope:"custom"},{frequency:"20\xD7",amplitude:1,envelope:"custom"},{frequency:"~1\xD7",amplitude:4,envelope:"steady"}]}},{name:"tiny robot",midiProgram:85,settings:{type:"FM",eqFilter:[],effects:["vibrato","reverb"],vibrato:"delayed",reverb:33,transition:"slide",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:2,operators:[{frequency:"2\xD7",amplitude:15},{frequency:"1\xD7",amplitude:7},{frequency:"~1\xD7",amplitude:7},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:1},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"yowie",midiProgram:85,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,effects:["panning","note filter","reverb"],noteFilterType:!0,noteSimpleCut:6,noteSimplePeak:6,noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:4}],pan:0,panDelay:10,reverb:0,fadeInSeconds:.0413,fadeOutTicks:6,algorithm:"1\u21902\u2190(3\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:12,operators:[{frequency:"2\xD7",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"16\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:1},{target:"feedbackAmplitude",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"mouse",midiProgram:85,settings:{type:"FM",eqFilter:[],effects:["vibrato","reverb"],vibrato:"light",reverb:33,transition:"slide in pattern",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:5,operators:[{frequency:"2\xD7",amplitude:13},{frequency:"5\xD7",amplitude:12},{frequency:"1\xD7",amplitude:0},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"noteVolume",envelope:"note size"},{target:"feedbackAmplitude",envelope:"flare 2"}]}},{name:"gumdrop",midiProgram:85,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"2\xD7",amplitude:15,envelope:"punch"},{frequency:"4\xD7",amplitude:15,envelope:"punch"},{frequency:"7\xD7",amplitude:15,envelope:"punch"},{frequency:"1\xD7",amplitude:10,envelope:"twang 1"}]}},{name:"echo drop",midiProgram:102,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"~2\xD7",amplitude:11,envelope:"custom"},{frequency:"~1\xD7",amplitude:5,envelope:"steady"},{frequency:"11\xD7",amplitude:2,envelope:"steady"},{frequency:"16\xD7",amplitude:5,envelope:"swell 3"}]}},{name:"dark choir",midiProgram:85,settings:{type:"spectrum",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",spectrum:[43,14,14,14,14,14,14,100,14,14,14,57,14,14,100,14,43,14,43,14,14,43,14,29,14,29,14,14,29,0]}}])},{name:"Brass Presets",presets:he([{name:"trumpet",midiProgram:56,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:9,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:8,envelope:"steady"},{frequency:"1\xD7",amplitude:5,envelope:"flare 2"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"trombone",midiProgram:57,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"2\u27F2",feedbackAmplitude:7,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:8,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"tuba",midiProgram:58,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"2\u27F2",feedbackAmplitude:8,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:6,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"muted trumpet",midiProgram:59,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2.8284},{type:"peak",cutoffHz:4e3,linearGain:2.8284}],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1}],reverb:33,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:5,operators:[{frequency:"1\xD7",amplitude:13},{frequency:"1\xD7",amplitude:5},{frequency:"9\xD7",amplitude:5},{frequency:"13\xD7",amplitude:7}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 1"},{target:"operatorAmplitude",envelope:"swell 1",index:3},{target:"feedbackAmplitude",envelope:"flare 2"}]}},{name:"french horn",midiProgram:60,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:1},{type:"peak",cutoffHz:2378.41,linearGain:2.8284}],effects:["reverb"],reverb:33,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:3,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:12},{frequency:"1\xD7",amplitude:10},{frequency:"~1\xD7",amplitude:8}],envelopes:[{target:"operatorAmplitude",envelope:"swell 1",index:2},{target:"operatorAmplitude",envelope:"flare 2",index:3},{target:"feedbackAmplitude",envelope:"swell 1"}]}},{name:"brass section",midiProgram:61,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:12,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"swell 1"},{frequency:"~1\xD7",amplitude:10,envelope:"swell 1"}]}},{name:"brass synth 1",midiProgram:62,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:11,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:14,envelope:"custom"},{frequency:"1\xD7",amplitude:12,envelope:"flare 1"},{frequency:"~1\xD7",amplitude:8,envelope:"flare 2"}]}},{name:"brass synth 2",midiProgram:63,generalMidi:!0,settings:{type:"FM",transition:"soft",effects:"reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:9,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"flare 1"},{frequency:"~1\xD7",amplitude:7,envelope:"flare 1"}]}},{name:"pulse brass",midiProgram:62,settings:{type:"PWM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",pulseWidth:50,pulseEnvelope:"flare 3",vibrato:"none"}}])},{name:"Reed Presets",presets:he([{name:"soprano sax",midiProgram:64,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u21902\u21903\u21904",feedbackType:"4\u27F2",feedbackAmplitude:5,feedbackEnvelope:"swell 1",operators:[{frequency:"1\xD7",amplitude:13,envelope:"custom"},{frequency:"4\xD7",amplitude:4,envelope:"swell 1"},{frequency:"1\xD7",amplitude:7,envelope:"steady"},{frequency:"5\xD7",amplitude:4,envelope:"punch"}]}},{name:"alto sax",midiProgram:65,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:4,feedbackEnvelope:"punch",operators:[{frequency:"1\xD7",amplitude:13,envelope:"custom"},{frequency:"1\xD7",amplitude:6,envelope:"steady"},{frequency:"4\xD7",amplitude:6,envelope:"swell 1"},{frequency:"1\xD7",amplitude:12,envelope:"steady"}]}},{name:"tenor sax",midiProgram:66,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u21902\u21903\u21904",feedbackType:"1\u27F2",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"2\xD7",amplitude:12,envelope:"custom"},{frequency:"3\xD7",amplitude:7,envelope:"steady"},{frequency:"1\xD7",amplitude:3,envelope:"steady"},{frequency:"8\xD7",amplitude:3,envelope:"steady"}]}},{name:"baritone sax",midiProgram:67,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:2,feedbackEnvelope:"swell 2",operators:[{frequency:"1\xD7",amplitude:12,envelope:"custom"},{frequency:"8\xD7",amplitude:4,envelope:"steady"},{frequency:"4\xD7",amplitude:5,envelope:"steady"},{frequency:"1\xD7",amplitude:4,envelope:"punch"}]}},{name:"sax synth",midiProgram:64,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"4\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:15,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"shehnai",midiProgram:111,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:3,feedbackEnvelope:"steady",operators:[{frequency:"4\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:8,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"oboe",midiProgram:68,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"swell 1",vibrato:"none",algorithm:"1\u20032\u2190(3\u20024)",feedbackType:"2\u27F2",feedbackAmplitude:2,feedbackEnvelope:"tremolo5",operators:[{frequency:"1\xD7",amplitude:7,envelope:"custom"},{frequency:"4\xD7",amplitude:12,envelope:"custom"},{frequency:"1\xD7",amplitude:6,envelope:"steady"},{frequency:"6\xD7",amplitude:2,envelope:"steady"}]}},{name:"english horn",midiProgram:69,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u20032\u2190(3\u20024)",feedbackType:"2\u27F2",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"4\xD7",amplitude:12,envelope:"custom"},{frequency:"2\xD7",amplitude:10,envelope:"custom"},{frequency:"1\xD7",amplitude:8,envelope:"punch"},{frequency:"8\xD7",amplitude:4,envelope:"steady"}]}},{name:"bassoon",midiProgram:70,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:707,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"2\xD7",amplitude:11,envelope:"custom"},{frequency:"1\xD7",amplitude:6,envelope:"steady"},{frequency:"6\xD7",amplitude:6,envelope:"swell 1"},{frequency:"1\xD7",amplitude:0,envelope:"steady"}]}},{name:"clarinet",midiProgram:71,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}},{name:"harmonica",midiProgram:22,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,preset:778,effects:["panning","note filter","reverb"],noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],pan:0,panDelay:10,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:9,operators:[{frequency:"2\xD7",amplitude:14,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2},{target:"feedbackAmplitude",envelope:"tremolo2",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}}])},{name:"Flute Presets",presets:he([{name:"flute 1",midiProgram:73,generalMidi:!0,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:9656.85,linearGain:.5}],eqFilterType:!0,eqSimpleCut:9,eqSimplePeak:1,envelopeSpeed:12,discreteEnvelope:!1,preset:832,eqSubFilters1:[],effects:["panning","reverb"],pan:0,panDelay:10,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"4\u27F2",feedbackAmplitude:7,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"~1\xD7",amplitude:1,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"punch",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"feedbackAmplitude",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:7,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"recorder",midiProgram:74,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 2",interval:"union",vibrato:"none",harmonics:[100,43,57,43,57,43,43,43,43,43,43,43,43,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},{name:"whistle",midiProgram:78,generalMidi:!0,settings:{type:"harmonics",effects:"chorus & reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",interval:"union",vibrato:"delayed",harmonics:[100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"ocarina",midiProgram:79,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,14,57,14,29,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"piccolo",midiProgram:72,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u21903\u20032\u21904",feedbackType:"4\u27F2",feedbackAmplitude:15,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"1\xD7",amplitude:10,envelope:"custom"},{frequency:"~2\xD7",amplitude:3,envelope:"punch"},{frequency:"~1\xD7",amplitude:5,envelope:"punch"}]}},{name:"shakuhachi",midiProgram:77,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"steady",vibrato:"delayed",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"3\u21924",feedbackAmplitude:15,feedbackEnvelope:"steady",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"2\xD7",amplitude:3,envelope:"punch"},{frequency:"~1\xD7",amplitude:4,envelope:"twang 1"},{frequency:"20\xD7",amplitude:15,envelope:"steady"}]}},{name:"pan flute",midiProgram:75,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:5.6569}],effects:["note filter","reverb"],noteFilter:[{type:"high-pass",cutoffHz:4756.83,linearGain:.7071}],reverb:33,fadeInSeconds:.0125,fadeOutTicks:-3,spectrum:[100,0,0,0,0,0,0,14,0,0,0,71,0,0,14,0,57,0,29,14,29,14,14,29,14,29,14,14,29,14],envelopes:[{target:"noteFilterFreq",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"punch"}]}},{name:"blown bottle",midiProgram:76,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:7,feedbackEnvelope:"twang 1",operators:[{frequency:"1\xD7",amplitude:15,envelope:"custom"},{frequency:"3\xD7",amplitude:4,envelope:"custom"},{frequency:"6\xD7",amplitude:2,envelope:"custom"},{frequency:"11\xD7",amplitude:2,envelope:"custom"}]}},{name:"calliope",midiProgram:82,generalMidi:!0,settings:{type:"spectrum",transition:"cross fade",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"steady",spectrum:[100,0,0,0,0,0,0,86,0,0,0,71,0,0,57,0,43,0,29,14,14,29,14,14,14,14,14,14,14,14]}},{name:"chiffer",midiProgram:83,generalMidi:!0,settings:{type:"spectrum",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"punch",spectrum:[86,0,0,0,0,0,0,71,0,0,0,71,0,0,57,0,57,0,43,14,14,43,14,29,14,29,29,29,29,14]}},{name:"breath noise",midiProgram:121,generalMidi:!0,settings:{type:"spectrum",eqFilter:[],effects:["chord type","note filter","reverb"],chord:"strum",noteFilter:[{type:"high-pass",cutoffHz:840.9,linearGain:.3536},{type:"low-pass",cutoffHz:16e3,linearGain:.3536}],reverb:33,fadeInSeconds:.0413,fadeOutTicks:12,spectrum:[71,0,0,0,0,0,0,29,0,0,0,71,0,0,29,0,100,29,14,29,100,29,100,14,14,71,0,29,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"}]}},{name:"flute 2",midiProgram:73,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"seamless",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"delayed",harmonics:[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}}])},{name:"Pad Presets",presets:he([{name:"new age pad",midiProgram:88,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:3,operators:[{frequency:"2\xD7",amplitude:14},{frequency:"~1\xD7",amplitude:4},{frequency:"6\xD7",amplitude:3},{frequency:"13\xD7",amplitude:3}],envelopes:[{target:"operatorAmplitude",envelope:"swell 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"feedbackAmplitude",envelope:"swell 3"}]}},{name:"warm pad",midiProgram:89,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:7,operators:[{frequency:"1\xD7",amplitude:14},{frequency:"1\xD7",amplitude:6},{frequency:"1\xD7",amplitude:0},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 3"},{target:"operatorAmplitude",envelope:"swell 1",index:1}]}},{name:"polysynth pad",midiProgram:90,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["vibrato","note filter","chorus"],vibrato:"delayed",noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1}],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"sawtooth",unison:"honky tonk",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"space voice pad",midiProgram:91,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:5.6569},{type:"peak",cutoffHz:2828.43,linearGain:5.6569},{type:"peak",cutoffHz:1414.21,linearGain:.1768}],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:5,operators:[{frequency:"1\xD7",amplitude:10},{frequency:"2\xD7",amplitude:8},{frequency:"3\xD7",amplitude:7},{frequency:"11\xD7",amplitude:2}],envelopes:[{target:"operatorAmplitude",envelope:"punch",index:3},{target:"feedbackAmplitude",envelope:"swell 2"}]}},{name:"bowed glass pad",midiProgram:92,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:10},{frequency:"2\xD7",amplitude:12},{frequency:"3\xD7",amplitude:7},{frequency:"7\xD7",amplitude:4}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"flare 3",index:3}]}},{name:"metallic pad",midiProgram:93,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:13,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"~1\xD7",amplitude:9},{frequency:"1\xD7",amplitude:7},{frequency:"11\xD7",amplitude:7}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"swell 2",index:2},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"sweep pad",midiProgram:95,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:4}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",wave:"sawtooth",unison:"hum",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 3"}]}},{name:"atmosphere",midiProgram:99,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],effects:["chorus","reverb"],chorus:100,reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"strum",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"3\u27F2\u20034\u27F2",feedbackAmplitude:3,operators:[{frequency:"1\xD7",amplitude:14},{frequency:"~1\xD7",amplitude:10},{frequency:"3\xD7",amplitude:7},{frequency:"1\xD7",amplitude:7}],envelopes:[{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"operatorAmplitude",envelope:"twang 2",index:2},{target:"operatorAmplitude",envelope:"twang 3",index:3}]}},{name:"brightness",midiProgram:100,generalMidi:!0,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:2}],effects:["chorus"],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",harmonics:[100,86,86,86,43,57,43,71,43,43,43,57,43,43,57,71,57,43,29,43,57,57,43,29,29,29,29,14],unison:"octave",stringSustain:86,envelopes:[]}},{name:"goblins",midiProgram:101,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:2828.43,linearGain:11.3137}],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],chorus:100,transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"simultaneous",algorithm:"1\u21902\u21903\u21904",feedbackType:"1\u27F2",feedbackAmplitude:10,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"4\xD7",amplitude:5},{frequency:"1\xD7",amplitude:10},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 2"},{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"operatorAmplitude",envelope:"tremolo1",index:2},{target:"feedbackAmplitude",envelope:"flare 3"}]}},{name:"sci-fi",midiProgram:103,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:9513.66,linearGain:2.8284}],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:48,chord:"simultaneous",algorithm:"(1\u20022)\u21903\u21904",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:8,operators:[{frequency:"~1\xD7",amplitude:13},{frequency:"2\xD7",amplitude:10},{frequency:"5\xD7",amplitude:5},{frequency:"11\xD7",amplitude:8}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"tremolo5",index:3},{target:"feedbackAmplitude",envelope:"twang 3"}]}},{name:"flutter pad",midiProgram:90,settings:{type:"FM",eqFilter:[],effects:["vibrato","note filter","chorus"],vibrato:"delayed",noteFilter:[{type:"low-pass",cutoffHz:4e3,linearGain:4}],chorus:100,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",algorithm:"(1\u20022)\u2190(3\u20024)",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:9,operators:[{frequency:"1\xD7",amplitude:13},{frequency:"5\xD7",amplitude:7},{frequency:"7\xD7",amplitude:5},{frequency:"~1\xD7",amplitude:6}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"},{target:"operatorAmplitude",envelope:"tremolo1",index:2},{target:"operatorAmplitude",envelope:"punch",index:3}]}},{name:"feedback pad",midiProgram:89,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:2378.41,linearGain:8}],effects:[],transition:"normal",fadeInSeconds:.0575,fadeOutTicks:96,chord:"custom interval",algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:8,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:15},{frequency:"1\xD7",amplitude:15},{frequency:"~1\xD7",amplitude:15}],envelopes:[{target:"feedbackAmplitude",envelope:"swell 2"}]}},{name:"supersaw pad",midiProgram:93,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768}],effects:["reverb"],reverb:100,fadeInSeconds:.0263,fadeOutTicks:24,pulseWidth:50,dynamism:100,spread:58,shape:0,envelopes:[]}}])},{name:"Drum Presets",presets:he([{name:"standard drumset",midiProgram:116,isNoise:!0,settings:{type:"drumset",effects:"reverb",drums:[{filterEnvelope:"twang 1",spectrum:[57,71,71,86,86,86,71,71,71,71,57,57,57,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29,29]},{filterEnvelope:"twang 1",spectrum:[0,0,0,100,71,71,57,86,57,57,57,71,43,43,57,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43]},{filterEnvelope:"twang 1",spectrum:[0,0,0,0,100,57,43,43,29,57,43,29,71,43,43,43,43,57,43,43,43,43,43,43,43,43,29,43,43,43]},{filterEnvelope:"twang 1",spectrum:[0,0,0,0,0,71,57,43,43,43,57,57,43,29,57,43,43,43,29,43,57,43,43,43,43,43,43,29,43,43]},{filterEnvelope:"decay 2",spectrum:[0,14,29,43,86,71,29,43,43,43,43,29,71,29,71,29,43,43,43,43,57,43,43,57,43,43,43,57,57,57]},{filterEnvelope:"decay 1",spectrum:[0,0,14,14,14,14,29,29,29,43,43,43,57,57,57,71,71,71,71,71,71,71,71,57,57,57,57,43,43,43]},{filterEnvelope:"twang 3",spectrum:[43,43,43,71,29,29,43,43,43,29,43,43,43,29,29,43,43,29,29,29,57,14,57,43,43,57,43,43,57,57]},{filterEnvelope:"decay 3",spectrum:[29,43,43,43,43,29,29,43,29,29,43,29,14,29,43,29,43,29,57,29,43,57,43,71,43,71,57,57,71,71]},{filterEnvelope:"twang 3",spectrum:[43,29,29,43,29,29,29,57,29,29,29,57,43,43,29,29,57,43,43,43,71,43,43,71,57,71,71,71,71,71]},{filterEnvelope:"decay 3",spectrum:[57,57,57,43,57,57,43,43,57,43,43,43,71,57,43,57,86,71,57,86,71,57,86,100,71,86,86,86,86,86]},{filterEnvelope:"flare 1",spectrum:[0,0,14,14,14,14,29,29,29,43,43,43,57,57,71,71,86,86,100,100,100,100,100,100,100,100,86,57,29,0]},{filterEnvelope:"decay 2",spectrum:[14,14,14,14,29,14,14,29,14,43,14,43,57,86,57,57,100,57,43,43,57,100,57,43,29,14,0,0,0,0]}]}},{name:"steel pan",midiProgram:114,generalMidi:!0,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:62.5,linearGain:.1768}],effects:["note filter","chorus","reverb"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],chorus:67,reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:24,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"~1\xD7",amplitude:14},{frequency:"7\xD7",amplitude:3},{frequency:"3\xD7",amplitude:5},{frequency:"4\xD7",amplitude:4}],envelopes:[{target:"noteFilterAllFreqs",envelope:"decay 2"},{target:"operatorAmplitude",envelope:"flare 1",index:1},{target:"operatorAmplitude",envelope:"flare 2",index:2},{target:"operatorAmplitude",envelope:"swell 2",index:3}]}},{name:"steel pan synth",midiProgram:114,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"simultaneous",algorithm:"1\u20032\u20033\u21904",feedbackType:"1\u27F2",feedbackAmplitude:5,operators:[{frequency:"~1\xD7",amplitude:12},{frequency:"2\xD7",amplitude:15},{frequency:"4\xD7",amplitude:14},{frequency:"~1\xD7",amplitude:3}],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"},{target:"operatorAmplitude",envelope:"note size",index:0},{target:"operatorAmplitude",envelope:"note size",index:1},{target:"operatorAmplitude",envelope:"flare 1",index:2},{target:"operatorAmplitude",envelope:"flare 2",index:3},{target:"feedbackAmplitude",envelope:"flare 1"}]}},{name:"timpani",midiProgram:47,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"peak",cutoffHz:6727.17,linearGain:5.6569}],effects:["pitch shift","note filter","reverb"],pitchShiftSemitones:15,noteFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.5}],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",spectrum:[100,0,0,0,86,0,0,71,0,14,43,14,43,43,0,29,43,29,29,29,43,29,43,29,43,43,43,43,43,43],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 1"},{target:"pitchShift",envelope:"twang 1"}]}},{name:"dark strike",midiProgram:47,settings:{type:"spectrum",eqFilter:[],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.7071}],reverb:33,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",spectrum:[0,0,14,14,14,29,29,43,43,86,43,43,43,29,86,29,29,29,86,29,14,14,14,14,0,0,0,0,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}},{name:"woodblock",midiProgram:115,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",spectrum:[0,14,29,43,43,57,86,86,71,57,57,43,43,57,86,86,43,43,71,57,57,57,57,57,86,86,71,71,71,71]}},{name:"taiko drum",midiProgram:116,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"twang 1",spectrum:[71,100,100,43,43,71,71,43,43,43,43,43,43,57,29,57,43,57,43,43,57,43,43,43,43,43,43,43,43,43]}},{name:"melodic drum",midiProgram:117,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-1.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"twang 1",spectrum:[100,71,71,57,57,43,43,71,43,43,43,57,43,43,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29]}},{name:"drum synth",midiProgram:118,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"decay 1",spectrum:[100,86,71,57,43,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29]}},{name:"tom-tom",midiProgram:116,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",spectrum:[100,29,14,0,0,86,14,43,29,86,29,14,29,57,43,43,43,43,57,43,43,43,29,57,43,43,43,43,43,43]}},{name:"metal pipe",midiProgram:117,isNoise:!0,midiSubharmonicOctaves:-1.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"twang 2",spectrum:[29,43,86,43,43,43,43,43,100,29,14,14,100,14,14,0,0,0,0,0,14,29,29,14,0,0,14,29,0,0]}},{name:"synth kick",midiProgram:47,settings:{type:"FM",eqFilter:[],effects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-6,chord:"simultaneous",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"8\xD7",amplitude:15},{frequency:"1\xD7",amplitude:0},{frequency:"1\xD7",amplitude:0},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"twang 2"}]}}])},{name:"Novelty Presets",presets:he([{name:"guitar fret noise",midiProgram:120,generalMidi:!0,settings:{type:"spectrum",eqFilter:[{type:"high-pass",cutoffHz:1e3,linearGain:.1768}],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:5.6569}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"simultaneous",spectrum:[0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,29,14,0,0,43,0,43,0,71,43,0,57,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 1"},{target:"noteVolume",envelope:"twang 2"}]}},{name:"fifth saw lead",midiProgram:86,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:1.4142}],chorus:67,transition:"normal",fadeInSeconds:0,fadeOutTicks:48,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 3"}]}},{name:"fifth swell",midiProgram:86,midiSubharmonicOctaves:1,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:2}],chorus:100,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"swell 3"}]}},{name:"soundtrack",midiProgram:97,generalMidi:!0,settings:{type:"chip",eqFilter:[],effects:["note filter","chorus"],noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],chorus:67,transition:"normal",fadeInSeconds:.0413,fadeOutTicks:72,chord:"simultaneous",wave:"sawtooth",unison:"fifth",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 3"}]}},{name:"reverse cymbal",midiProgram:119,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",effects:"none",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"swell 3",spectrum:[29,57,57,29,57,57,29,29,43,29,29,43,29,29,57,57,14,57,14,57,71,71,57,86,57,100,86,86,86,86]}},{name:"seashore",midiProgram:122,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",transition:"soft fade",effects:"reverb",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"swell 3",spectrum:[14,14,29,29,43,43,43,57,57,57,57,57,57,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,57]}},{name:"bird tweet",midiProgram:123,generalMidi:!0,settings:{type:"harmonics",eqFilter:[],effects:["chord type","vibrato","reverb"],chord:"strum",vibrato:"heavy",reverb:67,fadeInSeconds:.0575,fadeOutTicks:-6,harmonics:[0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"hum",envelopes:[{target:"noteVolume",envelope:"decay 1"}]}},{name:"telephone ring",midiProgram:124,generalMidi:!0,settings:{type:"FM",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:5656.85,linearGain:1}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"arpeggio",algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"2\xD7",amplitude:12},{frequency:"1\xD7",amplitude:4},{frequency:"20\xD7",amplitude:1},{frequency:"1\xD7",amplitude:0}],envelopes:[{target:"noteFilterAllFreqs",envelope:"tremolo4"},{target:"operatorAmplitude",envelope:"tremolo1",index:1}]}},{name:"helicopter",midiProgram:125,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-.5,settings:{type:"spectrum",effects:"reverb",transition:"seamless",chord:"arpeggio",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"tremolo4",spectrum:[14,43,43,57,57,57,71,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,71,71,71,57,57]}},{name:"applause",midiProgram:126,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",effects:"reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"swell 3",spectrum:[14,14,29,29,29,43,43,57,71,71,86,86,86,71,71,57,57,57,71,86,86,86,86,86,71,71,57,57,57,57]}},{name:"gunshot",midiProgram:127,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:1414,filterResonance:29,filterEnvelope:"twang 1",spectrum:[14,29,43,43,57,57,57,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,57,57,57,57,43]}},{name:"scoot",midiProgram:92,settings:{type:"chip",eqFilter:[],effects:["note filter"],noteFilter:[{type:"low-pass",cutoffHz:707.11,linearGain:4}],transition:"normal",fadeInSeconds:.0125,fadeOutTicks:-3,chord:"simultaneous",wave:"double saw",unison:"shimmer",envelopes:[{target:"noteFilterAllFreqs",envelope:"flare 1"}]}},{name:"buzz saw",midiProgram:30,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],effects:[],transition:"normal",fadeInSeconds:.0263,fadeOutTicks:-3,chord:"custom interval",algorithm:"1\u21902\u21903\u21904",feedbackType:"1\u27F2",feedbackAmplitude:4,operators:[{frequency:"5\xD7",amplitude:13},{frequency:"1\xD7",amplitude:10},{frequency:"~1\xD7",amplitude:6},{frequency:"11\xD7",amplitude:12}],envelopes:[]}},{name:"mosquito",midiProgram:93,settings:{type:"PWM",eqFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:2}],effects:["vibrato"],vibrato:"shaky",transition:"normal",fadeInSeconds:.0575,fadeOutTicks:-6,chord:"simultaneous",pulseWidth:4.41942,envelopes:[{target:"pulseWidth",envelope:"tremolo6"}]}},{name:"breathing",midiProgram:126,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"swell 2",spectrum:[14,14,14,29,29,29,29,29,43,29,29,43,43,43,29,29,71,43,86,86,57,100,86,86,86,86,71,86,71,57]}},{name:"klaxon synth",midiProgram:125,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"noise",effects:"reverb",transition:"slide",chord:"harmony",filterCutoffHz:2e3,filterResonance:86,filterEnvelope:"steady",wave:"buzz"}},{name:"theremin",midiProgram:40,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.7071}],effects:["vibrato","reverb"],vibrato:"heavy",reverb:33,transition:"slide in pattern",fadeInSeconds:.0263,fadeOutTicks:-6,chord:"simultaneous",harmonics:[100,71,57,43,29,29,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",envelopes:[]}},{name:"sonar ping",midiProgram:121,settings:{type:"spectrum",eqFilter:[],effects:["note filter","reverb"],noteFilter:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],reverb:33,transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72,chord:"simultaneous",spectrum:[100,43,29,29,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],envelopes:[{target:"noteFilterAllFreqs",envelope:"twang 2"}]}}])},{name:"UltraBox Presets",presets:he([{name:"nes white",midiProgram:116,generalMidi:!0,isNoise:!0,settings:{type:"noise",eqFilter:[],eqFilterType:!1,eqSimpleCut:8,eqSimplePeak:0,eqSubFilters1:[],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:0,wave:"1-bit white",envelopes:[]}},{name:"nes ping",midiProgram:116,generalMidi:!0,isNoise:!0,settings:{type:"noise",eqFilter:[],eqFilterType:!1,eqSimpleCut:8,eqSimplePeak:0,eqSubFilters1:[],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:0,wave:"1-bit metallic",envelopes:[]}},{name:"distorted pulse vocal",generalMidi:!1,settings:{type:"chip",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884}],effects:["panning","transition type","pitch shift","vibrato","note filter","bitcrusher","echo","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:0,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:840.9,linearGain:11.3137},{type:"low-pass",cutoffHz:297.3,linearGain:8},{type:"peak",cutoffHz:500,linearGain:11.3137},{type:"high-pass",cutoffHz:62.5,linearGain:1.4142},{type:"peak",cutoffHz:176.78,linearGain:11.3137},{type:"high-pass",cutoffHz:250,linearGain:11.3137}],noteSubFilters0:[{type:"high-pass",cutoffHz:840.9,linearGain:11.3137},{type:"low-pass",cutoffHz:297.3,linearGain:8},{type:"peak",cutoffHz:500,linearGain:11.3137},{type:"high-pass",cutoffHz:62.5,linearGain:1.4142},{type:"peak",cutoffHz:176.78,linearGain:11.3137},{type:"high-pass",cutoffHz:250,linearGain:11.3137}],bitcrusherOctave:6.5,bitcrusherQuantization:71,pan:0,panDelay:10,echoSustain:14,echoDelayBeats:.167,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,wave:"1/8 pulse",unison:"none",envelopes:[]}},{name:"dubsteb bwah",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","chord type"],transition:"interrupt",clicklessTransition:!1,chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:10,operators:[{frequency:"2\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"4\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:13,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"note size"},{target:"operatorAmplitude",envelope:"swell 2",index:1},{target:"operatorAmplitude",envelope:"punch",index:2},{target:"operatorAmplitude",envelope:"note size",index:3}]}},{name:"FM cool bass",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:1},{type:"peak",cutoffHz:1e3,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:1},{type:"high-pass",cutoffHz:88.39,linearGain:1},{type:"peak",cutoffHz:1e3,linearGain:.7071}],effects:["panning","transition type","note filter","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u2190(2\u20023\u21904)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"2\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"13\xD7",amplitude:11,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"operatorAmplitude",envelope:"twang 2",index:1},{target:"operatorAmplitude",envelope:"twang 3",index:2},{target:"operatorAmplitude",envelope:"twang 2",index:3}]}},{name:"FM funky bass",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.1768}],eqFilterType:!0,eqSimpleCut:5,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","reverb"],transition:"normal",clicklessTransition:!1,pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~1\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"punch"},{target:"noteVolume",envelope:"note size"}]}},{name:"talking bass",generalMidi:!1,settings:{type:"FM",eqFilter:[],effects:["chord type"],chord:"custom interval",fadeInSeconds:0,fadeOutTicks:-3,algorithm:"1\u2190(2\u20023)\u21904",feedbackType:"1\u27F2",feedbackAmplitude:15,operators:[{frequency:"1\xD7",amplitude:15},{frequency:"2\xD7",amplitude:8},{frequency:"2\xD7",amplitude:5},{frequency:"1\xD7",amplitude:12}],envelopes:[{target:"operatorAmplitude",envelope:"note size",index:2},{target:"operatorAmplitude",envelope:"note size",index:3},{target:"feedbackAmplitude",envelope:"note size"}]}},{name:"synth marimba",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"high-pass",cutoffHz:176.78,linearGain:1},{type:"peak",cutoffHz:4e3,linearGain:.5}],effects:["note filter","echo"],noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142}],echoSustain:71,echoDelayBeats:.5,fadeInSeconds:0,fadeOutTicks:-1,harmonics:[86,100,29,29,0,0,0,100,0,0,0,86,29,0,14,100,0,0,0,0,0,14,0,0,14,0,0,86],unison:"fifth",stringSustain:7,envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"}]}},{name:"italian accordian",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"low-pass",cutoffHz:6e3,linearGain:.5}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:1,eqSubFilters1:[],effects:["panning","chorus","reverb"],pan:0,panDelay:10,chorus:71,reverb:45,fadeInSeconds:.0263,fadeOutTicks:-3,wave:"square",unison:"honky tonk",customChipWave:{0:-24,1:-24,2:-24,3:-24,4:-24,5:-24,6:-24,7:-24,8:-24,9:-24,10:-24,11:-24,12:-24,13:-24,14:-24,15:-24,16:24,17:24,18:24,19:24,20:24,21:24,22:24,23:24,24:-24,25:-24,26:-24,27:-24,28:-24,29:-24,30:-24,31:-24,32:-24,33:-24,34:-24,35:-24,36:-24,37:-24,38:-24,39:-24,40:24,41:24,42:24,43:24,44:24,45:24,46:24,47:24,48:-24,49:-24,50:-24,51:-24,52:-24,53:-24,54:-24,55:-24,56:-24,57:-24,58:-24,59:-24,60:-24,61:-24,62:-24,63:-24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"chip supersaw",generalMidi:!1,settings:{type:"custom chip",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters1:[],effects:["panning","transition type","vibrato","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,chorus:29,reverb:29,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"dissonant",customChipWave:{0:22,1:22,2:16,3:6,4:0,5:-3,6:-8,7:-10,8:-13,9:-16,10:-19,11:-19,12:-20,13:-22,14:-22,15:-24,16:-24,17:-24,18:-24,19:-24,20:-24,21:-24,22:-24,23:-24,24:-24,25:-24,26:-24,27:-24,28:-24,29:-24,30:-24,31:24,32:24,33:16,34:9,35:6,36:4,37:2,38:0,39:-1,40:-3,41:-4,42:-4,43:-6,44:-6,45:-6,46:-6,47:-5,48:-5,49:-4,50:-2,51:-2,52:1,53:4,54:6,55:8,56:10,57:12,58:14,59:16,60:18,61:19,62:22,63:24},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[]}},{name:"fm supersaw",generalMidi:!1,settings:{type:"FM6op",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:1.4142},{type:"high-pass",cutoffHz:148.65,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[{type:"low-pass",cutoffHz:19027.31,linearGain:1.4142},{type:"high-pass",cutoffHz:148.65,linearGain:.7071}],effects:["panning","transition type","pitch shift","note filter","chorus","reverb"],transition:"continue",clicklessTransition:!1,pitchShiftSemitones:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],noteSubFilters1:[{type:"low-pass",cutoffHz:4756.83,linearGain:1}],pan:0,panDelay:10,chorus:71,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u20032\u20033\u20034\u20035\u20036",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:13,waveform:"sawtooth",pulseWidth:5},{frequency:"~1\xD7",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"2\xD7",amplitude:10,waveform:"sawtooth",pulseWidth:5},{frequency:"3\xD7",amplitude:7,waveform:"sawtooth",pulseWidth:5},{frequency:"4\xD7",amplitude:9,waveform:"sawtooth",pulseWidth:5},{frequency:"8\xD7",amplitude:6,waveform:"sawtooth",pulseWidth:5}],envelopes:[]}},{name:"wind",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:250.03,linearGain:11.3137}],eqFilterType:!0,eqSimpleCut:0,eqSimplePeak:7,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["transition type","reverb"],transition:"continue",clicklessTransition:!1,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u21923\u20032\u21924",feedbackAmplitude:15,operators:[{frequency:"16\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"16\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"16\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"16\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[]}},{name:"mrow",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,eqSubFilters0:[],effects:["panning","chord type","reverb"],chord:"custom interval",fastTwoNoteArp:!1,arpeggioSpeed:12,pan:0,panDelay:10,reverb:35,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:5,operators:[{frequency:"4\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:9,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"flare 1",index:0},{target:"operatorAmplitude",envelope:"note size",index:1},{target:"operatorAmplitude",envelope:"note size",index:2},{target:"operatorAmplitude",envelope:"flare 3",index:3},{target:"feedbackAmplitude",envelope:"flare 1"}]}},{name:"vocal why",generalMidi:!1,settings:{type:"harmonics",eqFilter:[],effects:["note filter","panning","reverb"],noteFilter:[{type:"low-pass",cutoffHz:840.9,linearGain:11.3137}],pan:0,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,harmonics:[100,86,29,29,14,14,0,14,14,43,71,100,100,86,71,71,57,57,43,43,43,43,43,0,0,0,0,0],unison:"octave",envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"}]}}])},{name:"Slarmoo's Box Presets",presets:he([{name:"radio fm",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:1189.21,linearGain:1.4142},{type:"high-pass",cutoffHz:74.33,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1189.21,linearGain:1.4142},{type:"high-pass",cutoffHz:74.33,linearGain:.3536}],effects:["panning","detune","vibrato","bitcrusher","reverb"],detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,bitcrusherOctave:6.5,bitcrusherQuantization:43,pan:0,panDelay:10,reverb:0,fadeInSeconds:0,fadeOutTicks:6,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2\u20032\u27F2",feedbackAmplitude:4,operators:[{frequency:"1\xD7",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"0.12\xD7",amplitude:7,waveform:"trapezoid",pulseWidth:5},{frequency:"0.5\xD7",amplitude:10,waveform:"triangle",pulseWidth:5},{frequency:"~1\xD7",amplitude:5,waveform:"triangle",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"anguished underworld",generalMidi:!1,settings:{type:"FM6op",eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.0884},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.0884},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],effects:["panning","note filter","distortion","bitcrusher","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2828.43,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2}],noteSubFilters0:[{type:"low-pass",cutoffHz:2828.43,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2}],noteSubFilters1:[{type:"low-pass",cutoffHz:1681.79,linearGain:.5}],distortion:43,aliases:!1,bitcrusherOctave:4.5,bitcrusherQuantization:43,pan:0,panDelay:10,reverb:0,fadeInSeconds:.075,fadeOutTicks:6,algorithm:"1\u20032\u21904\u20033\u2190(5\u20036)",feedbackType:"1\u21925\u20022\u21926 3\u21924",feedbackAmplitude:4,operators:[{frequency:"0.25\xD7",amplitude:14,waveform:"triangle",pulseWidth:5},{frequency:"0.5\xD7",amplitude:13,waveform:"sawtooth",pulseWidth:5},{frequency:"1\xD7",amplitude:12,waveform:"trapezoid",pulseWidth:5},{frequency:"8\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"0.75\xD7",amplitude:3,waveform:"ramp",pulseWidth:5}],envelopes:[{target:"noteFilterAllFreqs",envelope:"punch"},{target:"operatorAmplitude",envelope:"decay -1",index:5},{target:"feedbackAmplitude",envelope:"wibble 3"}],isDrum:!1}},{name:"faint sorrow",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:4240.89,linearGain:2}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:4,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","detune","vibrato","echo","reverb"],detuneCents:22,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,echoSustain:100,echoDelayBeats:.667,reverb:87,fadeInSeconds:.075,fadeOutTicks:48,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2",feedbackAmplitude:3,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"~1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"bright sorrow fm",generalMidi:!1,settings:{type:"FM",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["panning","chord type","note filter","echo","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2e3,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:2e3,linearGain:2.8284}],noteSubFilters1:[{type:"low-pass",cutoffHz:1414.21,linearGain:1.4142}],pan:0,panDelay:10,echoSustain:71,echoDelayBeats:1.333,reverb:61,fadeInSeconds:0,fadeOutTicks:48,algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2\u20032\u27F2\u20033\u27F2",feedbackAmplitude:2,operators:[{frequency:"1\xD7",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"5\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"5\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"wet sorrow fm",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","vibrato","reverb"],vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,reverb:23,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:4,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:2,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"decay 3",index:2}],isDrum:!1}},{name:"scream fm",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:2},{type:"high-pass",cutoffHz:250,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:.125},{type:"peak",cutoffHz:353.55,linearGain:.7071}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:2},{type:"high-pass",cutoffHz:250,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.3536},{type:"peak",cutoffHz:707.11,linearGain:.125},{type:"peak",cutoffHz:353.55,linearGain:.7071}],effects:["panning","detune","note filter","distortion","reverb"],detuneCents:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:1681.79,linearGain:.125},{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:11.3137}],noteSubFilters0:[{type:"high-pass",cutoffHz:1681.79,linearGain:.125},{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:11.3137}],distortion:0,aliases:!1,pan:0,panDelay:10,reverb:87,fadeInSeconds:.135,fadeOutTicks:-3,algorithm:"(1\u20022\u20023)\u21904",feedbackType:"1\u27F2 2\u27F2 3\u27F2 4\u27F2",feedbackAmplitude:11,operators:[{frequency:"4\xD7",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:3,waveform:"sine",pulseWidth:5},{frequency:"7\xD7",amplitude:5,waveform:"triangle",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"detune",envelope:"swell 1"},{target:"feedbackAmplitude",envelope:"tremolo4"}],isDrum:!1}},{name:"anguished radio fm pad",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:9513.66,linearGain:4},{type:"peak",cutoffHz:353.55,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:62.5,linearGain:.0884},{type:"peak",cutoffHz:9513.66,linearGain:4},{type:"peak",cutoffHz:353.55,linearGain:.0884}],eqSubFilters4:[],effects:["panning","detune","note filter","bitcrusher","chorus","echo","reverb"],detuneCents:-16,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],noteSubFilters1:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:11313.71,linearGain:11.3137}],noteSubFilters2:[{type:"low-pass",cutoffHz:105.11,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:11313.71,linearGain:11.3137}],noteSubFilters4:[{type:"low-pass",cutoffHz:19027.31,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:11313.71,linearGain:11.3137}],bitcrusherOctave:5.5,bitcrusherQuantization:43,pan:0,panDelay:10,chorus:29,echoSustain:43,echoDelayBeats:1,reverb:58,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u21923",feedbackAmplitude:3,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:7,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"juicy kick",generalMidi:!1,settings:{type:"FM",eqFilter:[{type:"high-pass",cutoffHz:62.5,linearGain:11.3137},{type:"low-pass",cutoffHz:5656.85,linearGain:.3536},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.0884},{type:"peak",cutoffHz:594.6,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:62.5,linearGain:11.3137},{type:"low-pass",cutoffHz:5656.85,linearGain:.3536},{type:"peak",cutoffHz:840.9,linearGain:.0884},{type:"peak",cutoffHz:1189.21,linearGain:.0884},{type:"peak",cutoffHz:594.6,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884}],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-6,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"20\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorFrequency",envelope:"twang 1",index:0},{target:"noteVolume",envelope:"twang 2"}],isDrum:!1}},{name:"good vibes supersaw",generalMidi:!1,settings:{type:"supersaw",eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:6,discreteEnvelope:!1,pitchEnvelopeStart:37,pitchEnvelopeEnd:96,pitchEnvelopeInverse:!0,eqSubFilters0:[],effects:["panning","transition type","detune","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,detuneCents:30,pan:0,panDelay:10,chorus:14,reverb:23,fadeInSeconds:.0263,fadeOutTicks:12,pulseWidth:26,decimalOffset:0,dynamism:33,spread:33,shape:17,envelopes:[{target:"supersawShape",envelope:"pitch"},{target:"detune",envelope:"tremolo2"}],isDrum:!1}},{name:"ethereal",generalMidi:!1,isNoise:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"peak",cutoffHz:4e3,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:88.39,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:4,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:4e3,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884},{type:"peak",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:88.39,linearGain:1.4142}],eqSubFilters1:[],effects:["panning","transition type","chord type","pitch shift","detune","vibrato","note filter","bitcrusher","chorus","reverb"],transition:"continue",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:36,vibrato:"custom",vibratoDepth:.12,vibratoDelay:36,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:2828.43,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.7071}],noteSubFilters0:[{type:"peak",cutoffHz:2828.43,linearGain:.0884},{type:"peak",cutoffHz:2e3,linearGain:.0884},{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"high-pass",cutoffHz:420.45,linearGain:.7071}],bitcrusherOctave:4.5,bitcrusherQuantization:43,pan:0,panDelay:10,chorus:71,reverb:100,fadeInSeconds:0,fadeOutTicks:-1,spectrum:[43,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,0],unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,pitchEnvelopeStart2:0,pitchEnvelopeEnd2:96,envelopeInverse2:!1,envelopes:[{target:"noteVolume",envelope:"note size"},{target:"detune",envelope:"tremolo3"},{target:"bitcrusherQuantization",envelope:"note size"}],isDrum:!1}},{name:"walrus wuh",generalMidi:!1,settings:{type:"supersaw",eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25},{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"peak",cutoffHz:3363.59,linearGain:.0884},{type:"peak",cutoffHz:74.33,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,pitchEnvelopeStart:0,pitchEnvelopeEnd:96,pitchEnvelopeInverse:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25},{type:"high-pass",cutoffHz:353.55,linearGain:2},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"peak",cutoffHz:3363.59,linearGain:.0884},{type:"peak",cutoffHz:74.33,linearGain:2.8284}],effects:["panning","note filter","bitcrusher","chorus","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.125}],noteSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.125}],bitcrusherOctave:4,bitcrusherQuantization:71,pan:0,panDelay:10,chorus:86,reverb:32,fadeInSeconds:.0263,fadeOutTicks:48,pulseWidth:50,decimalOffset:0,dynamism:100,spread:50,shape:0,envelopes:[{target:"noteVolume",envelope:"punch"},{target:"bitcrusherQuantization",envelope:"decay 3"}],isDrum:!1}},{name:"saturnic",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4240.89,linearGain:2}],eqFilterType:!0,eqSimpleCut:8,eqSimplePeak:4,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","vibrato","chorus","echo","reverb"],vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,pan:0,panDelay:10,chorus:100,echoSustain:71,echoDelayBeats:.5,reverb:45,fadeInSeconds:.0125,fadeOutTicks:72,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:15,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"glassy harmonics",generalMidi:!1,settings:{type:"harmonics",volume:0,eqFilter:[{type:"low-pass",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:840.9,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:1e3,linearGain:11.3137},{type:"peak",cutoffHz:840.9,linearGain:.5}],effects:["panning","detune","note filter","chorus","reverb"],detuneCents:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[],noteSubFilters0:[],pan:0,panDelay:10,chorus:14,reverb:29,fadeInSeconds:0,fadeOutTicks:-3,harmonics:[100,0,43,29,0,100,0,0,0,0,0,0,0,0,14,29,14,0,14,0,0,0,0,100,0,0,14,0],unison:"none",envelopes:[],isDrum:!1}},{name:"plucked",generalMidi:!1,settings:{type:"Picked String",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.0884}],effects:["panning","transition type","echo","reverb"],transition:"interrupt",clicklessTransition:!1,pan:0,panDelay:10,echoSustain:100,echoDelayBeats:1.333,reverb:26,fadeInSeconds:0,fadeOutTicks:24,harmonics:[100,86,57,0,0,57,57,57,86,57,57,43,43,43,29,29,14,14,29,14,14,14,29,100,57,43,14,14],unison:"none",stringSustain:14,envelopes:[],isDrum:!1}},{name:"spectrum wind",generalMidi:!1,isNoise:!0,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:19027.31,linearGain:.7071}],eqFilterType:!0,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","note filter","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:1.4142}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:1.4142}],pan:0,panDelay:10,reverb:87,fadeInSeconds:0,fadeOutTicks:12,spectrum:[29,0,0,0,0,0,0,71,0,0,0,14,57,14,0,57,57,0,0,57,0,71,14,29,100,71,0,100,14,86],unison:"none",envelopes:[],isDrum:!0}},{name:"hi-hat",generalMidi:!1,isNoise:!0,settings:{type:"noise",volume:0,eqFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqSubFilters1:[{type:"low-pass",cutoffHz:16e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqSubFilters2:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],eqSubFilters3:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"high-pass",cutoffHz:4756.83,linearGain:.1768}],effects:["panning"],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,wave:"white",unison:"none",envelopes:[],isDrum:!0}},{name:"jungle bass",generalMidi:!1,isNoise:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884},{type:"peak",cutoffHz:148.65,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884},{type:"peak",cutoffHz:148.65,linearGain:.0884}],effects:["panning","vibrato","note filter","chorus","reverb"],vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:74.33,linearGain:.0884}],noteSubFilters0:[{type:"low-pass",cutoffHz:297.3,linearGain:1},{type:"peak",cutoffHz:74.33,linearGain:.0884}],pan:0,panDelay:10,chorus:14,reverb:3,fadeInSeconds:0,fadeOutTicks:48,algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u21942 3\u21944",feedbackAmplitude:3,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:13,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"8\xD7",amplitude:11,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,pitchEnvelopeStart2:12,pitchEnvelopeEnd2:28,envelopeInverse2:!1,envelopes:[{target:"operatorFrequency",envelope:"swell 3",index:0},{target:"operatorAmplitude",envelope:"swell 3",index:1},{target:"noteFilterFreq",envelope:"pitch",index:0}],isDrum:!1}},{name:"beach tide",generalMidi:!1,isNoise:!1,settings:{type:"harmonics",volume:0,eqFilter:[{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:13454.34,linearGain:.1768},{type:"peak",cutoffHz:8e3,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:13454.34,linearGain:.1768},{type:"peak",cutoffHz:8e3,linearGain:.0884}],effects:["panning","transition type","chord type","note filter","chorus","reverb"],transition:"continue",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:1},{type:"peak",cutoffHz:5656.85,linearGain:.1768}],noteSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:1},{type:"peak",cutoffHz:5656.85,linearGain:.1768}],pan:0,panDelay:10,chorus:14,reverb:32,fadeInSeconds:.0938,fadeOutTicks:72,harmonics:[86,86,71,57,57,43,43,43,29,29,14,14,14,0,0,57,0,0,0,0,0,0,0,0,0,0,0,0],unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,envelopes:[{target:"noteFilterAllFreqs",envelope:"pitch"}],isDrum:!1}},{name:"starlight",generalMidi:!1,isNoise:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.0884}],effects:["panning","transition type","vibrato","bitcrusher","echo","reverb"],transition:"continue",clicklessTransition:!1,vibrato:"light",vibratoDepth:.15,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,bitcrusherOctave:5.5,bitcrusherQuantization:29,pan:0,panDelay:10,echoSustain:29,echoDelayBeats:1,reverb:13,fadeInSeconds:0,fadeOutTicks:24,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"distant monument",generalMidi:!1,isNoise:!1,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:1},{type:"peak",cutoffHz:11313.71,linearGain:.25},{type:"peak",cutoffHz:500,linearGain:.125},{type:"peak",cutoffHz:210.22,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:5.6569}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:1},{type:"peak",cutoffHz:11313.71,linearGain:.25},{type:"peak",cutoffHz:500,linearGain:.125},{type:"peak",cutoffHz:210.22,linearGain:5.6569},{type:"peak",cutoffHz:840.9,linearGain:5.6569}],effects:["panning","transition type","chord type","detune","bitcrusher","chorus","echo","reverb"],transition:"normal",clicklessTransition:!1,chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:24,bitcrusherOctave:2.5,bitcrusherQuantization:14,pan:0,panDelay:10,chorus:86,echoSustain:71,echoDelayBeats:1,reverb:35,fadeInSeconds:.0413,fadeOutTicks:12,wave:"modbox pnryshk a (u5)",unison:"detune",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:11,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,envelopes:[{target:"noteVolume",envelope:"punch"},{target:"noteVolume",envelope:"twang 1"}],isDrum:!1}},{name:"mercurial",generalMidi:!1,isNoise:!1,settings:{type:"FM6op",volume:0,eqFilter:[{type:"low-pass",cutoffHz:11313.71,linearGain:.5},{type:"peak",cutoffHz:88.39,linearGain:2.8284},{type:"peak",cutoffHz:1189.21,linearGain:.1768}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:11313.71,linearGain:.5},{type:"peak",cutoffHz:88.39,linearGain:2.8284},{type:"peak",cutoffHz:1189.21,linearGain:.1768}],eqSubFilters1:[],effects:["panning","distortion","chorus"],distortion:43,aliases:!1,pan:0,panDelay:10,chorus:43,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"Custom",feedbackType:"1\u27F2",feedbackAmplitude:8,customAlgorithm:{mods:[[3],[5],[4],[],[6],[]],carrierCount:2},operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"0.5\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"~2\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:9,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:2,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorFrequency",envelope:"linear",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"distortion",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:20,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"air hiss",generalMidi:!1,isNoise:!0,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.25}],eqFilterType:!0,eqSimpleCut:7,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","note filter","distortion","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"high-pass",cutoffHz:2828.43,linearGain:.3536}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"high-pass",cutoffHz:2828.43,linearGain:.3536}],distortion:71,aliases:!1,pan:0,panDelay:10,reverb:6,fadeInSeconds:0,fadeOutTicks:-24,spectrum:[57,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,57,71,86,100,100,100,100,86,71,71,43],unison:"none",envelopes:[],isDrum:!0}},{name:"spectral phaser",generalMidi:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536},{type:"high-pass",cutoffHz:74.33,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:10,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["panning","note filter","distortion","bitcrusher","chorus","echo","reverb"],noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"peak",cutoffHz:9513.66,linearGain:5.6569},{type:"peak",cutoffHz:5656.85,linearGain:.0884},{type:"peak",cutoffHz:2828.43,linearGain:4},{type:"peak",cutoffHz:1414.21,linearGain:.125},{type:"peak",cutoffHz:707.11,linearGain:4},{type:"peak",cutoffHz:353.55,linearGain:.1768},{type:"peak",cutoffHz:148.65,linearGain:4},{type:"peak",cutoffHz:88.39,linearGain:.1768}],noteSubFilters0:[{type:"peak",cutoffHz:9513.66,linearGain:5.6569},{type:"peak",cutoffHz:5656.85,linearGain:.0884},{type:"peak",cutoffHz:2828.43,linearGain:4},{type:"peak",cutoffHz:1414.21,linearGain:.125},{type:"peak",cutoffHz:707.11,linearGain:4},{type:"peak",cutoffHz:353.55,linearGain:.1768},{type:"peak",cutoffHz:148.65,linearGain:4},{type:"peak",cutoffHz:88.39,linearGain:.1768}],distortion:14,aliases:!1,bitcrusherOctave:6,bitcrusherQuantization:14,pan:0,panDelay:10,chorus:100,echoSustain:86,echoDelayBeats:1,reverb:32,fadeInSeconds:0,fadeOutTicks:48,spectrum:[86,0,0,0,57,0,0,71,0,0,0,86,0,0,57,0,43,0,43,0,0,43,0,29,0,29,14,14,29,14],unison:"piano",envelopes:[{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.07,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:0},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.06,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:1},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.05,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.04,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.09,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:4},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.08,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:5},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:6},{target:"noteFilterFreq",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:.03,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:7},{target:"distortion",envelope:"none",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:.3}],isDrum:!1}},{name:"shaker",generalMidi:!1,isNoise:!0,settings:{type:"noise",volume:0,eqFilter:[{type:"high-pass",cutoffHz:4e3,linearGain:5.6569},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"low-pass",cutoffHz:11313.71,linearGain:8},{type:"peak",cutoffHz:2378.41,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:6,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:4e3,linearGain:5.6569},{type:"peak",cutoffHz:4756.83,linearGain:.0884},{type:"low-pass",cutoffHz:11313.71,linearGain:8},{type:"peak",cutoffHz:2378.41,linearGain:.25}],effects:["panning","transition type","detune","distortion","bitcrusher","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,detuneCents:30,distortion:43,aliases:!1,bitcrusherOctave:2.5,bitcrusherQuantization:43,pan:0,panDelay:10,chorus:43,echoSustain:29,echoDelayBeats:1,reverb:23,fadeInSeconds:.0263,fadeOutTicks:96,wave:"deep",unison:"none",envelopes:[{target:"detune",envelope:"tremolo2",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"bitcrusherQuantization",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteVolume",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteVolume",envelope:"flare",pitchEnvelopeStart:0,pitchEnvelopeEnd:12,inverse:!1,perEnvelopeSpeed:64,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!0}},{name:"distant sorrow",generalMidi:!1,settings:{type:"harmonics",volume:0,eqFilter:[{type:"high-pass",cutoffHz:707.11,linearGain:4},{type:"peak",cutoffHz:5656.85,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:707.11,linearGain:4},{type:"peak",cutoffHz:5656.85,linearGain:.5}],effects:["panning","transition type","detune","vibrato","note filter","echo","reverb"],transition:"interrupt",clicklessTransition:!1,detuneCents:0,vibrato:"custom",vibratoDepth:.2,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25}],pan:0,panDelay:10,echoSustain:100,echoDelayBeats:1,reverb:74,fadeInSeconds:0,fadeOutTicks:24,harmonics:[86,71,57,43,43,29,57,0,14,0,29,29,29,29,29,43,43,43,43,43,57,57,57,0,57,57,0,0],unison:"none",envelopes:[{target:"noteVolume",envelope:"fall",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:10,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteFilterAllFreqs",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2.5,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:2}],isDrum:!1}},{name:"metallic kick",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:28,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.5}],effects:["panning"],pan:0,panDelay:0,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u2190(2\u20023\u20024)",feedbackType:"1\u21922\u21923\u21924",feedbackAmplitude:15,operators:[{frequency:"8\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"256x",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"128x",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"256x",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorFrequency",envelope:"twang",inverse:!1,perEnvelopeSpeed:16,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:0},{target:"noteVolume",envelope:"twang",inverse:!1,perEnvelopeSpeed:3.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"feedbackAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:256,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:256,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:1},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:256,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"operatorAmplitude",envelope:"twang",inverse:!1,perEnvelopeSpeed:256,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2}],isDrum:!1}},{name:"chimes",generalMidi:!1,settings:{type:"Picked String",volume:0,eqFilter:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:5656.85,linearGain:.0884},{type:"peak",cutoffHz:8e3,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:5656.85,linearGain:.0884},{type:"peak",cutoffHz:8e3,linearGain:2.8284}],effects:["panning","chord type","detune","note filter","bitcrusher","chorus","echo","reverb"],chord:"strum",fastTwoNoteArp:!1,arpeggioSpeed:12,detuneCents:24,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:2378.41,linearGain:.5}],noteSubFilters1:[{type:"low-pass",cutoffHz:2378.41,linearGain:1}],bitcrusherOctave:4,bitcrusherQuantization:29,pan:0,panDelay:0,chorus:29,echoSustain:86,echoDelayBeats:.667,reverb:84,fadeInSeconds:0,fadeOutTicks:48,harmonics:[0,100,71,71,29,0,57,86,0,0,0,0,71,29,0,0,57,0,0,86,0,0,0,100,0,100,0,57],unison:"none",stringSustain:36,envelopes:[{target:"noteFilterAllFreqs",envelope:"twang",inverse:!1,perEnvelopeSpeed:2,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"bitcrusherQuantization",envelope:"swell",inverse:!1,perEnvelopeSpeed:4.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"bitcrusherQuantization",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"stringSustain",envelope:"random",inverse:!1,perEnvelopeSpeed:16,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:1,steps:14,seed:2,waveform:0},{target:"detune",envelope:"pitch",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,pitchEnvelopeStart:0,pitchEnvelopeEnd:96}],isDrum:!1}},{name:"supersaw bass",generalMidi:!1,settings:{type:"supersaw",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.5}],effects:["panning","note filter","distortion","chorus","reverb"],noteFilterType:!0,noteSimpleCut:9,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:7231.23,linearGain:1}],distortion:14,aliases:!1,pan:0,panDelay:10,chorus:29,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,pulseWidth:50,decimalOffset:0,dynamism:100,spread:67,shape:0,envelopes:[{target:"noteFilterAllFreqs",envelope:"swell",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"ascension",generalMidi:!1,isNoise:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:420.45,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:420.45,linearGain:.25}],eqSubFilters1:[],effects:["panning","granular","chorus","reverb"],granular:7,grainSize:44,grainAmounts:9,grainRange:37,pan:0,panDelay:10,chorus:71,reverb:19,fadeInSeconds:0,fadeOutTicks:24,spectrum:[43,0,0,57,0,0,14,100,29,0,0,100,29,0,100,0,57,29,86,14,14,100,14,0,14,14,0,0,43,0],unison:"voiced",envelopes:[{target:"noteVolume",envelope:"swell",inverse:!1,perEnvelopeSpeed:.7,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"panning",envelope:"lfo",inverse:!1,perEnvelopeSpeed:.3,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,waveform:2,steps:6}],isDrum:!1}},{name:"liminal",generalMidi:!1,isNoise:!1,settings:{type:"supersaw",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142},{type:"high-pass",cutoffHz:840.9,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:1.4142},{type:"high-pass",cutoffHz:840.9,linearGain:.25}],effects:["panning","detune","vibrato","note filter","granular","distortion","bitcrusher","chorus","reverb"],detuneCents:8,vibrato:"custom",vibratoDepth:.48,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,noteFilterType:!0,noteSimpleCut:6,noteSimplePeak:2,noteFilter:[{type:"low-pass",cutoffHz:2196.8,linearGain:1}],noteSubFilters1:[{type:"low-pass",cutoffHz:2196.8,linearGain:1}],granular:6,grainSize:49,grainAmounts:10,grainRange:40,distortion:57,aliases:!1,bitcrusherOctave:5,bitcrusherQuantization:0,pan:38,panDelay:10,chorus:29,reverb:48,fadeInSeconds:0,fadeOutTicks:72,pulseWidth:30,decimalOffset:0,dynamism:17,spread:83,shape:67,envelopes:[{target:"noteVolume",envelope:"twang",inverse:!1,perEnvelopeSpeed:17,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"pulseWidth",envelope:"twang",inverse:!1,perEnvelopeSpeed:1.3333,perEnvelopeLowerBound:.1,perEnvelopeUpperBound:1,discrete:!1},{target:"distortion",envelope:"random",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:.2,perEnvelopeUpperBound:1,discrete:!0,steps:8,seed:2,waveform:2},{target:"panning",envelope:"lfo",inverse:!1,perEnvelopeSpeed:.3333,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1,waveform:2,steps:2},{target:"noteVolume",envelope:"swell",inverse:!1,perEnvelopeSpeed:18,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"granular",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}}])},{name:"Slarmoo's Box Chip Presets",presets:he([{name:"Slarmoo's Pulse",midiProgram:80,settings:{type:"PWM",volume:0,eqFilter:[],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[],effects:["panning","transition type","chord type","detune"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:8,detuneCents:24,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,pulseWidth:50,decimalOffset:0,unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,envelopes:[{target:"detune",envelope:"pitch"}],isDrum:!1}},{name:"discovery square",midiProgram:80,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.3536}],effects:["panning","bitcrusher"],bitcrusherOctave:5.5,bitcrusherQuantization:57,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,wave:"square",unison:"octave",isUsingAdvancedLoopControls:!1,chipWaveLoopStart:0,chipWaveLoopEnd:2,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[],isDrum:!1}},{name:"VRC6 Sawtooth alt",midiProgram:81,settings:{type:"custom chip",volume:0,eqFilter:[{type:"high-pass",cutoffHz:62.5,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:62.5,linearGain:.5}],effects:["panning","transition type","chord type","pitch shift","detune","vibrato","distortion"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:12,pitchShiftSemitones:12,detuneCents:0,vibrato:"none",vibratoDepth:0,vibratoDelay:0,vibratoSpeed:10,vibratoType:0,distortion:0,aliases:!1,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-1,wave:"square",unison:"none",customChipWave:{0:-1,1:-1,2:-1,3:-1,4:-1,5:-1,6:-1,7:-1,8:-1,9:-5,10:-5,11:-5,12:-4,13:-4,14:-4,15:-3,16:-3,17:-3,18:-7,19:-7,20:-6,21:-6,22:-5,23:-5,24:-4,25:-4,26:-4,27:-7,28:-7,29:-6,30:-6,31:-5,32:-5,33:-4,34:-4,35:-4,36:-8,37:-8,38:-7,39:-7,40:-6,41:-6,42:-5,43:-5,44:-4,45:-4,46:21,47:20,48:18,49:17,50:16,51:14,52:13,53:12,54:11,55:7,56:6,57:6,58:5,59:5,60:5,61:4,62:4,63:4},customChipWaveIntegral:{0:0,1:0,2:0,3:0,4:0,5:0,6:0,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:0,16:0,17:0,18:0,19:0,20:0,21:0,22:0,23:0,24:0,25:0,26:0,27:0,28:0,29:0,30:0,31:0,32:0,33:0,34:0,35:0,36:0,37:0,38:0,39:0,40:0,41:0,42:0,43:0,44:0,45:0,46:0,47:0,48:0,49:0,50:0,51:0,52:0,53:0,54:0,55:0,56:0,57:0,58:0,59:0,60:0,61:0,62:0,63:0,64:0},envelopes:[],isDrum:!1}},{name:"pulse arps",midiProgram:80,settings:{type:"PWM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:16e3,linearGain:.125},{type:"high-pass",cutoffHz:840.9,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:7,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:16e3,linearGain:.125},{type:"high-pass",cutoffHz:840.9,linearGain:2}],effects:["panning","transition type","chord type","detune","chorus","echo"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!0,arpeggioSpeed:8,detuneCents:64,pan:58,panDelay:10,chorus:43,echoSustain:71,echoDelayBeats:.333,fadeInSeconds:0,fadeOutTicks:-1,pulseWidth:50,decimalOffset:0,unison:"none",envelopes:[{target:"detune",envelope:"pitch",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,pitchEnvelopeStart:0,pitchEnvelopeEnd:96},{target:"pulseWidth",envelope:"pitch",inverse:!0,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,pitchEnvelopeStart:24,pitchEnvelopeEnd:83},{target:"panning",envelope:"lfo",inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,waveform:0,steps:2},{target:"noteVolume",envelope:"twang",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"chorus",envelope:"twang",inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}}])},{name:"Slarmoo's Box Instrumental Presets",presets:he([{name:"rusty flute",midiProgram:73,settings:{type:"FM",eqFilter:[{type:"peak",cutoffHz:13454.34,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:13454.34,linearGain:2.8284}],effects:["panning","transition type","detune","distortion","reverb"],transition:"normal",clicklessTransition:!1,detuneCents:-7,distortion:14,aliases:!1,pan:0,panDelay:10,reverb:100,fadeInSeconds:0,fadeOutTicks:96,algorithm:"1\u21902\u21903\u21904",feedbackType:"3\u21924",feedbackAmplitude:8,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"2\xD7",amplitude:4,waveform:"sine",pulseWidth:5},{frequency:"20\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[],isDrum:!1}},{name:"bitcrushed piano",midiProgram:4,settings:{type:"chip",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2.8284},{type:"high-pass",cutoffHz:74.33,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2.8284},{type:"high-pass",cutoffHz:74.33,linearGain:.5}],effects:["panning","transition type","detune","distortion","bitcrusher","reverb"],transition:"continue",clicklessTransition:!1,detuneCents:0,distortion:29,aliases:!0,bitcrusherOctave:4,bitcrusherQuantization:43,pan:0,panDelay:0,reverb:0,fadeInSeconds:0,fadeOutTicks:-3,wave:"triangle",unison:"none",isUsingAdvancedLoopControls:!0,chipWaveLoopStart:0,chipWaveLoopEnd:32,chipWaveLoopMode:0,chipWavePlayBackwards:!1,chipWaveStartOffset:0,envelopes:[{target:"bitcrusherQuantization",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:.6,perEnvelopeUpperBound:1,discrete:!1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"detuned piano",midiProgram:3,settings:{type:"Picked String",volume:0,eqFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.25},{type:"peak",cutoffHz:840.9,linearGain:2.8284}],effects:["panning","transition type","detune","vibrato","note filter","bitcrusher"],transition:"continue",clicklessTransition:!1,detuneCents:44,vibrato:"custom",vibratoDepth:.04,vibratoDelay:13,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:420.45,linearGain:1}],noteSubFilters0:[{type:"high-pass",cutoffHz:420.45,linearGain:1}],bitcrusherOctave:4,bitcrusherQuantization:14,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,harmonics:[86,86,71,71,57,57,43,29,14,29,29,29,29,29,29,29,29,43,43,43,43,43,29,14,14,0,0,0],unison:"custom",unisonVoices:2,unisonSpread:.26,unisonOffset:0,unisonExpression:1,unisonSign:1,stringSustain:79,envelopes:[{target:"detune",envelope:"random",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:49,waveform:1},{target:"noteVolume",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1.6667,perEnvelopeLowerBound:.4,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0},{target:"unison",envelope:"random",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:20,waveform:1},{target:"noteFilterAllFreqs",envelope:"pitch",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!0,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0}],isDrum:!1}},{name:"pan flute 2",midiProgram:75,isNoise:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"peak",cutoffHz:2828.43,linearGain:2},{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:8e3,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"peak",cutoffHz:2828.43,linearGain:2},{type:"high-pass",cutoffHz:594.6,linearGain:.3536},{type:"low-pass",cutoffHz:8e3,linearGain:.5}],effects:["panning","transition type","note filter","bitcrusher","reverb"],transition:"continue",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],noteSubFilters0:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],noteSubFilters1:[{type:"low-pass",cutoffHz:9513.66,linearGain:.5}],bitcrusherOctave:6,bitcrusherQuantization:57,pan:0,panDelay:10,reverb:16,fadeInSeconds:.0125,fadeOutTicks:-6,spectrum:[100,29,14,14,57,0,0,71,0,86,57,43,57,71,14,29,14,14,14,100,71,14,14,14,14,86,43,14,0,0],unison:"none",pitchEnvelopeStart0:0,pitchEnvelopeEnd0:96,envelopeInverse0:!1,pitchEnvelopeStart1:0,pitchEnvelopeEnd1:96,envelopeInverse1:!1,pitchEnvelopeStart2:0,pitchEnvelopeEnd2:96,envelopeInverse2:!1,envelopes:[{target:"noteFilterAllFreqs",envelope:"note size"},{target:"bitcrusherQuantization",envelope:"note size"},{target:"noteVolume",envelope:"note size"}],isDrum:!1}},{name:"trumpet 2",midiProgram:56,settings:{type:"FM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:3049.17,linearGain:1.4142}],eqFilterType:!0,eqSimpleCut:7,eqSimplePeak:3,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","detune","vibrato","note filter","distortion","chorus","reverb"],detuneCents:-64,vibrato:"custom",vibratoDepth:.68,vibratoDelay:17,vibratoSpeed:12,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.5},{type:"peak",cutoffHz:3363.59,linearGain:.1768},{type:"high-pass",cutoffHz:1e3,linearGain:.1768}],noteSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.5},{type:"peak",cutoffHz:3363.59,linearGain:.1768},{type:"high-pass",cutoffHz:1e3,linearGain:.1768}],distortion:29,aliases:!1,pan:0,panDelay:10,chorus:14,reverb:0,fadeInSeconds:.0263,fadeOutTicks:-3,algorithm:"1\u20032\u2190(3\u20024)",feedbackType:"1\u27F2",feedbackAmplitude:9,operators:[{frequency:"0.75\xD7",amplitude:14,waveform:"pulse width",pulseWidth:2},{frequency:"1\xD7",amplitude:14,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:8,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"operatorAmplitude",envelope:"flare",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:3},{target:"feedbackAmplitude",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:32,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorFrequency",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:128,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:0},{target:"noteFilterFreq",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:2.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:2},{target:"noteVolume",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"detune",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!0,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"harp 2",midiProgram:46,settings:{type:"FM6op",volume:0,eqFilter:[{type:"low-pass",cutoffHz:13454.34,linearGain:.0884},{type:"peak",cutoffHz:1e3,linearGain:2.8284},{type:"high-pass",cutoffHz:62.5,linearGain:.25},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:13454.34,linearGain:.0884},{type:"peak",cutoffHz:1e3,linearGain:2.8284},{type:"high-pass",cutoffHz:62.5,linearGain:.25},{type:"high-pass",cutoffHz:148.65,linearGain:.5}],eqSubFilters1:[],effects:["panning","detune","note filter","echo","reverb"],detuneCents:-23,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:105.11,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:6727.17,linearGain:.0884},{type:"peak",cutoffHz:105.11,linearGain:2.8284}],pan:0,panDelay:10,echoSustain:29,echoDelayBeats:1.083,reverb:74,fadeInSeconds:0,fadeOutTicks:-1,algorithm:"1\u21904\u20032\u21905\u20033\u21906",feedbackType:"1\u27F2",feedbackAmplitude:5,operators:[{frequency:"1\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:5,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"4\xD7",amplitude:6,waveform:"sine",pulseWidth:5},{frequency:"6\xD7",amplitude:12,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:2,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:4,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"operatorFrequency",envelope:"tremolo",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:1},{target:"detune",envelope:"decay",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:7,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1},{target:"noteFilterFreq",envelope:"tremolo2",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:1,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:0},{target:"operatorAmplitude",envelope:"twang",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:8,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,index:4},{target:"operatorAmplitude",envelope:"swell",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!0,perEnvelopeSpeed:8,perEnvelopeLowerBound:.4,perEnvelopeUpperBound:1,index:0},{target:"noteVolume",envelope:"punch",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"electric guitar 1",midiProgram:30,settings:{type:"FM",volume:0,eqFilter:[{type:"high-pass",cutoffHz:1189.21,linearGain:2},{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"high-pass",cutoffHz:1189.21,linearGain:2},{type:"low-pass",cutoffHz:4e3,linearGain:1.4142},{type:"peak",cutoffHz:707.11,linearGain:.0884},{type:"peak",cutoffHz:420.45,linearGain:.0884}],effects:["panning","chord type","vibrato","note filter","distortion","reverb"],chord:"monophonic",fastTwoNoteArp:!1,arpeggioSpeed:12,monoChordTone:0,vibrato:"delayed",vibratoDepth:.3,vibratoDelay:18.5,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1414.21,linearGain:4},{type:"high-pass",cutoffHz:594.6,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:1414.21,linearGain:4},{type:"high-pass",cutoffHz:594.6,linearGain:1}],distortion:100,aliases:!1,pan:0,panDelay:0,reverb:6,fadeInSeconds:0,fadeOutTicks:24,algorithm:"1\u20032\u20033\u20034",feedbackType:"1\u27F2",feedbackAmplitude:0,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sawtooth",pulseWidth:5},{frequency:"2\xD7",amplitude:0,waveform:"sawtooth",pulseWidth:5},{frequency:"4\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"0.25\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"noteVolume",envelope:"punch",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"vibratoDepth",envelope:"rise",inverse:!1,perEnvelopeSpeed:9,perEnvelopeLowerBound:1,perEnvelopeUpperBound:2,discrete:!1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"distortion",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}},{name:"electric guitar 2",midiProgram:30,settings:{type:"PWM",volume:0,eqFilter:[{type:"low-pass",cutoffHz:3363.59,linearGain:5.6569},{type:"high-pass",cutoffHz:1681.79,linearGain:.25},{type:"peak",cutoffHz:5656.85,linearGain:2}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,eqSubFilters0:[{type:"low-pass",cutoffHz:3363.59,linearGain:5.6569},{type:"high-pass",cutoffHz:1681.79,linearGain:.25},{type:"peak",cutoffHz:5656.85,linearGain:2}],effects:["panning","chord type","vibrato","note filter","distortion","bitcrusher","chorus","reverb"],chord:"monophonic",fastTwoNoteArp:!1,arpeggioSpeed:12,monoChordTone:0,vibrato:"custom",vibratoDepth:.68,vibratoDelay:22,vibratoSpeed:10,vibratoType:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1e3,linearGain:2.8284}],noteSubFilters0:[{type:"low-pass",cutoffHz:1e3,linearGain:2.8284}],distortion:43,aliases:!1,bitcrusherOctave:6.5,bitcrusherQuantization:71,pan:0,panDelay:0,chorus:14,reverb:13,fadeInSeconds:0,fadeOutTicks:24,pulseWidth:50,decimalOffset:0,unison:"none",envelopes:[{target:"noteFilterAllFreqs",envelope:"rise",inverse:!1,perEnvelopeSpeed:.3333,perEnvelopeLowerBound:.8,perEnvelopeUpperBound:1,discrete:!1},{target:"pulseWidth",envelope:"twang",inverse:!0,perEnvelopeSpeed:2.25,perEnvelopeLowerBound:.5,perEnvelopeUpperBound:.9,discrete:!1},{target:"noteVolume",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1},{target:"bitcrusherQuantization",envelope:"note size",inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,discrete:!1}],isDrum:!1}}])},{name:"Slarmoo's Box Novelty Presets",presets:he([{name:"bitcrushed artifacts",generalMidi:!1,settings:{type:"Picked String",eqFilter:[{type:"low-pass",cutoffHz:9656.85,linearGain:.5}],eqFilterType:!0,eqSimpleCut:9,eqSimplePeak:1,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","distortion","bitcrusher","echo"],distortion:71,aliases:!1,bitcrusherOctave:2,bitcrusherQuantization:86,pan:0,panDelay:10,echoSustain:0,echoDelayBeats:1,fadeInSeconds:0,fadeOutTicks:-6,harmonics:[0,0,0,0,0,0,0,57,0,0,0,0,0,0,100,43,0,0,14,86,0,14,0,0,0,0,0,86],unison:"none",stringSustain:14,envelopes:[],isDrum:!1}},{name:"whistle 2",midiProgram:78,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:2110.37,linearGain:1.4142}],eqFilterType:!0,eqSimpleCut:6,eqSimplePeak:3,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters1:[],effects:["panning","transition type","pitch shift","note filter","distortion","echo","reverb"],transition:"normal",clicklessTransition:!1,pitchShiftSemitones:11,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1414.21,linearGain:2},{type:"high-pass",cutoffHz:88.39,linearGain:2},{type:"peak",cutoffHz:1681.79,linearGain:4}],noteSubFilters0:[{type:"low-pass",cutoffHz:1414.21,linearGain:2},{type:"high-pass",cutoffHz:88.39,linearGain:2},{type:"peak",cutoffHz:1681.79,linearGain:4}],distortion:43,aliases:!1,pan:0,panDelay:10,echoSustain:57,echoDelayBeats:1.083,reverb:87,fadeInSeconds:.0575,fadeOutTicks:-1,harmonics:[57,0,0,0,0,0,0,0,0,86,57,0,0,0,0,0,0,0,86,0,0,0,57,29,0,29,100,0],unison:"none",envelopes:[{target:"pitchShift",envelope:"decay 1"}],isDrum:!1}},{name:"frog wuh",generalMidi:!1,settings:{type:"spectrum",eqFilter:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:6727.17,linearGain:8},{type:"low-pass",cutoffHz:13454.34,linearGain:.125}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:594.6,linearGain:.5},{type:"peak",cutoffHz:6727.17,linearGain:8},{type:"low-pass",cutoffHz:13454.34,linearGain:.125}],eqSubFilters1:[],effects:["panning","pitch shift","note filter"],pitchShiftSemitones:0,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"low-pass",cutoffHz:1e3,linearGain:1}],noteSubFilters0:[{type:"low-pass",cutoffHz:1e3,linearGain:1}],pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:-3,spectrum:[100,29,14,29,0,14,0,71,0,43,14,71,0,0,71,14,100,0,71,0,43,86,43,0,43,0,0,43,29,29],envelopes:[{target:"pitchShift",envelope:"twang 1"},{target:"noteFilterAllFreqs",envelope:"twang 1"}],isDrum:!1}},{name:"stationary harmonics",generalMidi:!1,settings:{type:"harmonics",eqFilter:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.5}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"low-pass",cutoffHz:4756.83,linearGain:.3536},{type:"high-pass",cutoffHz:353.55,linearGain:1},{type:"peak",cutoffHz:1189.21,linearGain:.5}],effects:["panning","transition type","chord type","vibrato"],transition:"continue",clicklessTransition:!1,chord:"simultaneous",fastTwoNoteArp:!1,arpeggioSpeed:12,vibrato:"shaky",vibratoDepth:.1,vibratoDelay:0,vibratoSpeed:10,vibratoType:1,pan:0,panDelay:10,fadeInSeconds:0,fadeOutTicks:12,harmonics:[100,0,57,29,14,57,29,29,14,14,29,43,14,14,14,0,14,29,29,14,0,0,14,0,0,29,14,14],unison:"stationary",envelopes:[],isDrum:!1}},{name:"dead souls",generalMidi:!1,settings:{type:"spectrum",volume:0,eqFilter:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"high-pass",cutoffHz:353.55,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:1.4142}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!0,eqSubFilters0:[{type:"low-pass",cutoffHz:8e3,linearGain:.1768},{type:"high-pass",cutoffHz:353.55,linearGain:.0884},{type:"peak",cutoffHz:707.11,linearGain:1.4142}],effects:["panning","transition type","chord type","pitch shift","detune","distortion","chorus","reverb"],transition:"interrupt",clicklessTransition:!1,chord:"arpeggio",fastTwoNoteArp:!1,arpeggioSpeed:12,pitchShiftSemitones:24,detuneCents:-200,distortion:100,aliases:!1,pan:0,panDelay:10,chorus:14,reverb:35,fadeInSeconds:0,fadeOutTicks:-1,spectrum:[100,71,43,43,29,29,29,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,14,14,0,0],unison:"none",envelopes:[{target:"pitchShift",envelope:"random",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:24,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1.2,steps:16,seed:37,waveform:0},{target:"noteVolume",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0},{target:"detune",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!0,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0},{target:"distortion",envelope:"note size",pitchEnvelopeStart:0,pitchEnvelopeEnd:96,inverse:!1,perEnvelopeSpeed:0,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1,steps:2,seed:2,waveform:0}],isDrum:!1}},{name:"flutter",generalMidi:!1,settings:{type:"FM",volume:0,eqFilter:[{type:"high-pass",cutoffHz:707.11,linearGain:1},{type:"peak",cutoffHz:6727.17,linearGain:2.8284}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:707.11,linearGain:1},{type:"peak",cutoffHz:6727.17,linearGain:2.8284}],effects:["panning","transition type","chorus","reverb","ring mod"],transition:"interrupt",clicklessTransition:!1,ringMod:100,ringModHz:100,ringModWaveformIndex:0,pan:0,panDelay:0,chorus:14,reverb:10,fadeInSeconds:0,fadeOutTicks:12,algorithm:"1\u21903\u20032\u21904",feedbackType:"1\u27F2",feedbackAmplitude:3,operators:[{frequency:"1\xD7",amplitude:15,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:10,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5},{frequency:"1\xD7",amplitude:0,waveform:"sine",pulseWidth:5}],envelopes:[{target:"ringModulationHz",envelope:"fall",inverse:!1,perEnvelopeSpeed:1.5,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1.9},{target:"noteVolume",envelope:"blip",inverse:!1,perEnvelopeSpeed:.25,perEnvelopeLowerBound:0,perEnvelopeUpperBound:1}],isDrum:!1}},{name:"vinyl",generalMidi:!1,settings:{type:"noise",volume:0,eqFilter:[{type:"high-pass",cutoffHz:1414.21,linearGain:.3536},{type:"low-pass",cutoffHz:1189.21,linearGain:.25}],eqFilterType:!1,eqSimpleCut:10,eqSimplePeak:0,envelopeSpeed:12,discreteEnvelope:!1,eqSubFilters0:[{type:"high-pass",cutoffHz:1414.21,linearGain:.3536},{type:"low-pass",cutoffHz:1189.21,linearGain:.25}],effects:["panning","transition type","note filter","distortion","bitcrusher","chorus","echo","reverb"],transition:"interrupt",clicklessTransition:!1,noteFilterType:!1,noteSimpleCut:10,noteSimplePeak:0,noteFilter:[{type:"high-pass",cutoffHz:250,linearGain:.5},{type:"low-pass",cutoffHz:8e3,linearGain:1}],noteSubFilters0:[{type:"high-pass",cutoffHz:250,linearGain:.5},{type:"low-pass",cutoffHz:8e3,linearGain:1}],distortion:14,aliases:!1,bitcrusherOctave:5.5,bitcrusherQuantization:14,pan:0,panDelay:10,chorus:29,echoSustain:14,echoDelayBeats:.083,reverb:32,fadeInSeconds:0,fadeOutTicks:24,wave:"crackling",unison:"none",envelopes:[],isDrum:!1}}])}]);static valueToPreset(e){let a=e>>6,n=e&63;return i.presetCategories[a]?.presets[n]}static midiProgramToPresetValue(e){for(let a=0;a<i.presetCategories.length;a++){let n=i.presetCategories[a];for(let r=0;r<n.presets.length;r++){let s=n.presets[r];if(s.generalMidi&&s.midiProgram==e)return(a<<6)+r}}return null}static nameToPresetValue(e){for(let a=0;a<i.presetCategories.length;a++){let n=i.presetCategories[a];for(let r=0;r<n.presets.length;r++)if(n.presets[r].name==e)return(a<<6)+r}return null}static instrumentToPreset(e){return i.presetCategories[0].presets.dictionary?.[_e?.[e]]}};function Yn(i,e){i.push(T[e>>>6*5&3]),i.push(T[e>>>6*4&63]),i.push(T[e>>>6*3&63]),i.push(T[e>>>6*2&63]),i.push(T[e>>>6*1&63]),i.push(T[e>>>6*0&63])}function un(i,e){let a=0;return a|=k[i.charCodeAt(e++)]<<6*5,a|=k[i.charCodeAt(e++)]<<6*4,a|=k[i.charCodeAt(e++)]<<6*3,a|=k[i.charCodeAt(e++)]<<6*2,a|=k[i.charCodeAt(e++)]<<6*1,a|=k[i.charCodeAt(e++)]<<6*0,a}function bt(i,e,a,n,r,s){i.push(T[e]),i.push(T[+(a>0)]);let o=Math.round(Math.abs(a)*1e3),c=Math.floor(o/63);i.push(T[o%63],T[c%63],T[Math.floor(c/63)]),i.push(T[+(n>0)]);let u=Math.round(Math.abs(n)*1e3),b=Math.floor(u/63);i.push(T[u%63],T[b%63],T[Math.floor(b/63)]),i.push(T[+(r>0)]);let l=Math.round(Math.abs(r)*1e3);i.push(T[l%63],T[Math.floor(l/63)]),i.push(T[+(s>0)]);let g=Math.round(Math.abs(s)*1e3);i.push(T[g%63],T[Math.floor(g/63)])}function xr(i){let e=A(0,t.keys.length,i),a=0;return i===12?(e=0,a=1):i===13?(e=6,a=-1):i===14?(e=0,a=-1):i===15&&(e=5,a=-1),[e,a]}var T=[48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,45,95],k=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,0,0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0,0,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,0,0,0,0,63,0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,0,0,0,0],Ye=class{_=[];se=0;constructor(e,a,n){for(let r=a;r<n;r++){let s=k[e.charCodeAt(r)];this._.push(s>>5&1),this._.push(s>>4&1),this._.push(s>>3&1),this._.push(s>>2&1),this._.push(s>>1&1),this._.push(s&1)}}read(e){let a=0;for(;e>0;)a=a<<1,a+=this._[this.se++],e--;return a}readLongTail(e,a){let n=e,r=a;for(;this._[this.se++];)n+=1<<r,r++;for(;r>0;)r--,this._[this.se++]&&(n+=1<<r);return n}readPartDuration(){return this.readLongTail(1,3)}readLegacyPartDuration(){return this.readLongTail(1,2)}readPinCount(){return this.readLongTail(1,0)}readPitchInterval(){return this.read(1)?-this.readLongTail(1,3):this.readLongTail(1,3)}},gt=class{te=0;_=[];clear(){this.te=0}write(e,a){for(e--;e>=0;)this._[this.te++]=a>>>e&1,e--}writeLongTail(e,a,n){if(n<e)throw new Error("value out of bounds");n-=e;let r=a;for(;n>=1<<r;)this._[this.te++]=1,n-=1<<r,r++;for(this._[this.te++]=0;r>0;)r--,this._[this.te++]=n>>>r&1}writePartDuration(e){this.writeLongTail(1,3,e)}writePinCount(e){this.writeLongTail(1,0,e)}writePitchInterval(e){e<0?(this.write(1,1),this.writeLongTail(1,3,-e)):(this.write(1,0),this.writeLongTail(1,3,e))}concat(e){for(let a=0;a<e.te;a++)this._[this.te++]=e._[a]}encodeBase64(e){for(let a=0;a<this.te;a+=6){let n=this._[a]<<5|this._[a+1]<<4|this._[a+2]<<3|this._[a+3]<<2|this._[a+4]<<1|this._[a+5];e.push(T[n])}return e}lengthBase64(){return Math.ceil(this.te/6)}},Xt=class i{static ye=t.jsonFormat;static be=2;static ge=9;static ve=1;static Se=6;static xe=1;static Fe=4;static Ce=1;static Ie=5;static we=1;static le=5;static ke=100;title;scale;scaleCustom=[];key;octave;tempo;reverb;beatsPerBar;barCount;patternsPerChannel;rhythm;layeredInstruments;patternInstruments;loopStart;loopLength;pitchChannelCount;noiseChannelCount;modChannelCount;channels=[];limitDecay=4;limitRise=4e3;compressionThreshold=1;limitThreshold=1;compressionRatio=1;limitRatio=1;masterGain=1;inVolumeCap=0;outVolumeCap=0;outVolumeCapL=0;outVolumeCapR=0;eqFilter=new Ee;eqFilterType=!1;eqFilterSimpleCut=t.filterSimpleCutRange-1;eqFilterSimplePeak=0;eqSubFilters=[];tmpEqFilterStart;tmpEqFilterEnd;constructor(e){e!=null?this.fromBase64String(e):this.initToDefault(!0)}getNewNoteVolume=(e,a,n,r)=>{if(!e||a==null||n==null||r==null)return t.noteSizeMax;{r=t.modCount-r-1;let s=this.channels[a].instruments[n],o=t.modulators[s.modulators[r]].newNoteVol,c=s.modulators[r],u=t.modulators.dictionary.tempo.index;if(c==u&&(o=this.tempo-t.modulators[u].convertRealFactor),!t.modulators[c].forSong&&s.modInstruments[r][0]<this.channels[s.modChannels[r][0]].instruments.length){let b=t.modulators.dictionary.chorus.index,l=t.modulators.dictionary.reverb.index,g=t.modulators.dictionary.gain.index,m=t.modulators.dictionary.pan.index,y=t.modulators.dictionary["pan delay"].index,h=t.modulators.dictionary.distortion.index,f=t.modulators.dictionary.detune.index,p=t.modulators.dictionary["vibrato depth"].index,S=t.modulators.dictionary["vibrato speed"].index,x=t.modulators.dictionary["vibrato delay"].index,w=t.modulators.dictionary["arp speed"].index,v=t.modulators.dictionary["bit crush"].index,P=t.modulators.dictionary["freq crush"].index,B=t.modulators.dictionary.echo.index,L=t.modulators.dictionary["echo delay"].index,E=t.modulators.dictionary["echo ping pong"].index,D=t.modulators.dictionary["pitch shift"].index,R=t.modulators.dictionary["ring modulation"].index,N=t.modulators.dictionary["ring mod hertz"].index,z=t.modulators.dictionary.granular.index,W=t.modulators.dictionary["grain freq"].index,H=t.modulators.dictionary["grain size"].index,U=t.modulators.dictionary["grain range"].index,G=t.modulators.dictionary["envelope speed"].index,d=t.modulators.dictionary["individual envelope speed"].index,F=t.modulators.dictionary["individual envelope lower bound"].index,C=t.modulators.dictionary["individual envelope upper bound"].index,I=s.modInstruments[r][0],M=this.channels[s.modChannels[r][0]].instruments[I].effectCount;switch(c){case b:o=this.channels[s.modChannels[r][0]].instruments[I].effects[M].chorus-t.modulators[b].convertRealFactor;break;case l:o=this.channels[s.modChannels[r][0]].instruments[I].effects[M].reverb-t.modulators[l].convertRealFactor;break;case g:o=this.channels[s.modChannels[r][0]].instruments[I].effects[M].gain-t.modulators[g].convertRealFactor;break;case m:o=this.channels[s.modChannels[r][0]].instruments[I].effects[M].pan-t.modulators[m].convertRealFactor;break;case y:o=this.channels[s.modChannels[r][0]].instruments[I].effects[M].panDelay-t.modulators[y].convertRealFactor;break;case h:o=this.channels[s.modChannels[r][0]].instruments[I].effects[M].distortion-t.modulators[h].convertRealFactor;break;case f:o=this.channels[s.modChannels[r][0]].instruments[I].detune;break;case p:o=Math.round(this.channels[s.modChannels[r][0]].instruments[I].vibratoDepth*25-t.modulators[p].convertRealFactor);break;case S:o=this.channels[s.modChannels[r][0]].instruments[I].vibratoSpeed-t.modulators[S].convertRealFactor;break;case x:o=this.channels[s.modChannels[r][0]].instruments[I].vibratoDelay-t.modulators[x].convertRealFactor;break;case w:o=this.channels[s.modChannels[r][0]].instruments[I].arpeggioSpeed-t.modulators[w].convertRealFactor;break;case v:o=this.channels[s.modChannels[r][0]].instruments[I].effects[M].bitcrusherQuantization-t.modulators[v].convertRealFactor;break;case P:o=this.channels[s.modChannels[r][0]].instruments[I].effects[M].bitcrusherFreq-t.modulators[P].convertRealFactor;break;case B:o=this.channels[s.modChannels[r][0]].instruments[I].effects[M].echoSustain-t.modulators[B].convertRealFactor;break;case L:o=this.channels[s.modChannels[r][0]].instruments[I].effects[M].echoDelay-t.modulators[L].convertRealFactor;break;case E:o=this.channels[s.modChannels[r][0]].instruments[I].effects[M].echoPingPong-t.modulators[E].convertRealFactor;break;case D:o=this.channels[s.modChannels[r][0]].instruments[I].pitchShift;break;case R:o=this.channels[s.modChannels[r][0]].instruments[I].effects[M].ringModulation-t.modulators[R].convertRealFactor;break;case N:o=this.channels[s.modChannels[r][0]].instruments[I].effects[M].ringModulationHz-t.modulators[N].convertRealFactor;break;case z:o=this.channels[s.modChannels[r][0]].instruments[I].effects[M].granular-t.modulators[z].convertRealFactor;break;case W:o=this.channels[s.modChannels[r][0]].instruments[I].effects[M].grainAmounts-t.modulators[W].convertRealFactor;break;case H:o=this.channels[s.modChannels[r][0]].instruments[I].effects[M].grainSize-t.modulators[H].convertRealFactor;break;case U:o=this.channels[s.modChannels[r][0]].instruments[I].effects[M].grainRange-t.modulators[U].convertRealFactor;break;case G:o=this.channels[s.modChannels[r][0]].instruments[I].envelopeSpeed-t.modulators[G].convertRealFactor;break;case d:o=t.perEnvelopeSpeedToIndices[this.channels[s.modChannels[r][0]].instruments[I].envelopes[s.modEnvelopeNumbers[r]].perEnvelopeSpeed]-t.modulators[d].convertRealFactor;break;case F:o=this.channels[s.modChannels[r][0]].instruments[I].envelopes[s.modEnvelopeNumbers[r]].perEnvelopeLowerBound-t.modulators[F].convertRealFactor;break;case C:o=this.channels[s.modChannels[r][0]].instruments[I].envelopes[s.modEnvelopeNumbers[r]].perEnvelopeUpperBound-t.modulators[C].convertRealFactor;break}}return o??t.noteSizeMax}};getVolumeCap=(e,a,n,r)=>{if(!e||a==null||n==null||r==null)return t.noteSizeMax;{r=t.modCount-r-1;let s=this.channels[a].instruments[n],o=t.modulators[s.modulators[r]],c=o.maxRawVol;return c!=null?((o.name=="post eq"||o.name=="pre eq"||o.name=="song eq")&&(c=t.filterMorphCount-1,s.modFilterTypes[r]>0&&s.modFilterTypes[r]%2?c=t.filterFreqRange:s.modFilterTypes[r]>0&&(c=t.filterGainRange)),c):t.noteSizeMax}};getVolumeCapForSetting=(e,a,n)=>{if(e){let r=t.modulators[a].maxRawVol;return r!=null?(n!=null&&(t.modulators[a].name=="post eq"||t.modulators[a].name=="pre eq"||t.modulators[a].name=="song eq")&&(r=t.filterMorphCount-1,n>0&&n%2?r=t.filterFreqRange:n>0&&(r=t.filterGainRange)),r):t.noteSizeMax}else return t.noteSizeMax};getChannelCount(){return this.pitchChannelCount+this.noiseChannelCount+this.modChannelCount}getMaxInstrumentsPerChannel(){return Math.max(this.layeredInstruments?t.layeredInstrumentCountMax:t.instrumentCountMin,this.patternInstruments?t.patternInstrumentCountMax:t.instrumentCountMin)}getMaxInstrumentsPerPattern(e){return this.getMaxInstrumentsPerPatternForChannel(this.channels[e])}getMaxInstrumentsPerPatternForChannel(e){return this.layeredInstruments?Math.min(t.layeredInstrumentCountMax,e.instruments.length):1}getChannelIsNoise(e){return e>=this.pitchChannelCount&&e<this.pitchChannelCount+this.noiseChannelCount}getChannelIsMod(e){return e>=this.pitchChannelCount+this.noiseChannelCount}static secondsToFadeInSetting(e){return A(0,t.fadeInRange,Math.round((-.95+Math.sqrt(.9025+.2*e/.0125))/.1))}static ticksToFadeOutSetting(e){let a=t.fadeOutTicks[0];if(e<=a)return 0;for(let n=1;n<t.fadeOutTicks.length;n++){let r=t.fadeOutTicks[n];if(e<=r)return e<(a+r)/2?n-1:n;a=r}return t.fadeOutTicks.length-1}initToDefault(e=!0){this.scale=1,this.scaleCustom=[!0,!1,!0,!0,!1,!1,!1,!0,!0,!1,!0,!0],this.key=0,this.octave=0,this.loopStart=0,this.loopLength=4,this.tempo=151,this.reverb=0,this.beatsPerBar=8,this.barCount=16,this.patternsPerChannel=8,this.rhythm=1,this.layeredInstruments=!1,this.patternInstruments=!1,this.eqFilter.reset();for(let a=0;a<t.filterMorphCount-1;a++)this.eqSubFilters[a]=null;if(this.title="Untitled",document.title=this.title+" - "+we.versionDisplayName,e){this.pitchChannelCount=4,this.noiseChannelCount=1,this.modChannelCount=0;for(let a=0;a<this.getChannelCount();a++){let n=a>=this.pitchChannelCount&&a<this.pitchChannelCount+this.noiseChannelCount,r=a>=this.pitchChannelCount+this.noiseChannelCount;this.channels.length<=a&&(this.channels[a]=new yt,this.channels[a].color=a);let s=this.channels[a];s.octave=Math.max(4-a,0);for(let o=0;o<this.patternsPerChannel;o++)s.patterns.length<=o?s.patterns[o]=new nt:s.patterns[o].reset();s.patterns.length=this.patternsPerChannel;for(let o=0;o<t.instrumentCountMin;o++)s.instruments.length<=o&&(s.instruments[o]=new Ne(n,r)),s.instruments[o].setTypeAndReset(r?10:n?2:0,n,r);s.instruments.length=t.instrumentCountMin;for(let o=0;o<this.barCount;o++)s.bars[o]=o<16?1:0;s.bars.length=this.barCount}this.channels.length=this.getChannelCount()}}toBase64String(){let e,a=[];a.push(i.ke),a.push(T[i.le]),a.push(78);var n=encodeURIComponent(this.title);a.push(T[n.length>>6],T[n.length&63]);for(let h=0;h<n.length;h++)a.push(n.charCodeAt(h));if(a.push(110,T[this.pitchChannelCount],T[this.noiseChannelCount],T[this.modChannelCount]),a.push(115,T[this.scale]),this.scale==t.scales.dictionary.Custom.index)for(var r=1;r<t.pitchesPerOctave;r++)a.push(T[this.scaleCustom[r]?1:0]);if(a.push(107,T[this.key],T[this.octave-t.octaveMin]),a.push(108,T[this.loopStart>>6],T[this.loopStart&63]),a.push(101,T[this.loopLength-1>>6],T[this.loopLength-1&63]),a.push(116,T[this.tempo>>6],T[this.tempo&63]),a.push(97,T[this.beatsPerBar-1]),a.push(103,T[this.barCount-1>>6],T[this.barCount-1&63]),a.push(106,T[this.patternsPerChannel-1>>6],T[this.patternsPerChannel-1&63]),a.push(114,T[this.rhythm]),a.push(79),this.compressionRatio!=1||this.limitRatio!=1||this.limitRise!=4e3||this.limitDecay!=4||this.limitThreshold!=1||this.compressionThreshold!=1||this.masterGain!=1?(a.push(T[Math.round(this.compressionRatio<1?this.compressionRatio*10:10+(this.compressionRatio-1)*60)]),a.push(T[Math.round(this.limitRatio<1?this.limitRatio*10:9+this.limitRatio)]),a.push(T[this.limitDecay]),a.push(T[Math.round((this.limitRise-2e3)/250)]),a.push(T[Math.round(this.compressionThreshold*20)]),a.push(T[Math.round(this.limitThreshold*20)]),a.push(T[Math.round(this.masterGain*50)>>6],T[Math.round(this.masterGain*50)&63])):a.push(T[63]),a.push(99),this.eqFilter==null)a.push(T[0]),console.log("Null post eq settings detected in toBase64String for song");else{a.push(T[this.eqFilter.controlPointCount]);for(let h=0;h<this.eqFilter.controlPointCount;h++){let f=this.eqFilter.controlPoints[h];a.push(T[f.type],T[Math.round(f.freq)],T[Math.round(f.gain)])}}let s=0;for(let h=0;h<t.filterMorphCount-1;h++)s|=+(this.eqSubFilters[h+1]!=null)<<h;a.push(T[s>>6],T[s&63]);for(let h=0;h<t.filterMorphCount-1;h++)if(s&1<<h){a.push(T[this.eqSubFilters[h+1].controlPointCount]);for(let f=0;f<this.eqSubFilters[h+1].controlPointCount;f++){let p=this.eqSubFilters[h+1].controlPoints[f];a.push(T[p.type],T[Math.round(p.freq)],T[Math.round(p.gain)])}}a.push(85);for(let h=0;h<this.getChannelCount();h++){var o=encodeURIComponent(this.channels[h].name);a.push(T[o.length>>6],T[o.length&63]);for(let f=0;f<o.length;f++)a.push(o.charCodeAt(f));a.push(T[this.channels[h].color%60])}if(a.push(105,T[this.layeredInstruments<<1|this.patternInstruments]),this.layeredInstruments||this.patternInstruments)for(let h=0;h<this.getChannelCount();h++)a.push(T[this.channels[h].instruments.length-t.instrumentCountMin]);a.push(111);for(let h=0;h<this.pitchChannelCount;h++)a.push(T[this.channels[h].octave]);for(let h=0;h<this.getChannelCount();h++)for(let f=0;f<this.channels[h].instruments.length;f++){let p=this.channels[h].instruments[f];if(a.push(84,T[p.type]),a.push(118,T[p.volume+t.volumeRange/2>>6],T[p.volume+t.volumeRange/2&63]),a.push(117,T[p.preset>>6],T[p.preset&63]),a.push(102),a.push(T[+p.noteFilterType]),p.noteFilterType)a.push(T[p.noteFilterSimpleCut]),a.push(T[p.noteFilterSimplePeak]);else{if(p.noteFilter==null)a.push(T[0]),console.log("Null pre eq settings detected in toBase64String for channelIndex "+h+", instrumentIndex "+f);else{a.push(T[p.noteFilter.controlPointCount]);for(let x=0;x<p.noteFilter.controlPointCount;x++){let w=p.noteFilter.controlPoints[x];a.push(T[w.type],T[Math.round(w.freq)],T[Math.round(w.gain)])}}let S=0;for(let x=0;x<t.filterMorphCount-1;x++)S|=+(p.noteSubFilters[x+1]!=null)<<x;a.push(T[S>>6],T[S&63]);for(let x=0;x<t.filterMorphCount-1;x++)if(S&1<<x){a.push(T[p.noteSubFilters[x+1].controlPointCount]);for(let w=0;w<p.noteSubFilters[x+1].controlPointCount;w++){let v=p.noteSubFilters[x+1].controlPoints[w];a.push(T[v.type],T[Math.round(v.freq)],T[Math.round(v.gain)])}}}a.push(113,T[p.effectCount]);for(let S=0;S<p.effectCount;S++){if(p.effects[S]!=null)a.push(T[p.effects[S].type&63]);else{a.push(T[0]);continue}let x=p.effects[S];if(x.type==5)if(a.push(T[+x.eqFilterType]),x.eqFilterType)a.push(T[x.eqFilterSimpleCut]),a.push(T[x.eqFilterSimplePeak]);else{if(x.eqFilter==null)a.push(T[0]),console.log("Null post eq settings detected in toBase64String for channelIndex "+h+", instrumentIndex "+f);else{a.push(T[x.eqFilter.controlPointCount]);for(let v=0;v<x.eqFilter.controlPointCount;v++){let P=x.eqFilter.controlPoints[v];a.push(T[P.type],T[Math.round(P.freq)],T[Math.round(P.gain)])}}let w=0;for(let v=0;v<t.filterMorphCount-1;v++)w|=+(x.eqSubFilters[v+1]!=null)<<v;a.push(T[w>>6],T[w&63]);for(let v=0;v<t.filterMorphCount-1;v++)if(w&1<<v){a.push(T[x.eqSubFilters[v+1].controlPointCount]);for(let P=0;P<x.eqSubFilters[v+1].controlPointCount;P++){let B=x.eqSubFilters[v+1].controlPoints[P];a.push(T[B.type],T[Math.round(B.freq)],T[Math.round(B.gain)])}}}else x.type==3?(a.push(T[x.distortion]),a.push(T[+p.aliases])):x.type==4?a.push(T[x.bitcrusherFreq],T[x.bitcrusherQuantization]):x.type==9?a.push(T[x.gain>>6],T[x.gain&63]):x.type==2?(a.push(T[x.pan>>6],T[x.pan&63]),a.push(T[x.panDelay]),a.push(T[x.panMode])):x.type==10?(a.push(T[x.flanger]),a.push(T[x.flangerSpeed]),a.push(T[x.flangerDepth]),a.push(T[x.flangerFeedback])):x.type==1?a.push(T[x.chorus]):x.type==6?a.push(T[x.echoSustain],T[x.echoDelay],T[x.echoPingPong>>6],T[x.echoPingPong&63]):x.type==0?a.push(T[x.reverb]):x.type==8?(a.push(T[x.granular]),a.push(T[x.grainSize]),a.push(T[x.grainAmounts]),a.push(T[x.grainRange])):x.type==7&&(a.push(T[x.ringModulation]),a.push(T[x.ringModulationHz]),a.push(T[x.ringModWaveformIndex]),a.push(T[x.ringModPulseWidth]),a.push(T[x.ringModHzOffset-t.rmHzOffsetMin>>6],T[x.ringModHzOffset-t.rmHzOffsetMin&63]))}if(a.push(T[p.mdeffects&63]),Wt(p.mdeffects)&&a.push(T[p.transition]),Ot(p.mdeffects)&&(a.push(T[p.chord]),p.chord==t.chords.dictionary.arpeggio.index&&(a.push(T[p.arpeggioSpeed]),a.push(T[+p.fastTwoNoteArp])),p.chord==t.chords.dictionary.monophonic.index&&a.push(T[p.monoChordTone])),Et(p.mdeffects)&&a.push(T[p.pitchShift]),Mt(p.mdeffects)&&a.push(T[p.detune-t.detuneMin>>6],T[p.detune-t.detuneMin&63]),Dt(p.mdeffects)&&(a.push(T[p.vibrato]),p.vibrato==t.vibratos.length&&(a.push(T[Math.round(p.vibratoDepth*25)]),a.push(T[p.vibratoSpeed]),a.push(T[Math.round(p.vibratoDelay)]),a.push(T[p.vibratoType]))),p.type!=4&&(a.push(100,T[p.fadeIn],T[p.fadeOut]),a.push(T[+p.clicklessTransition])),p.type==5||p.type==7){a.push(72);let S=new gt;for(let x=0;x<t.harmonicsControlPoints;x++)S.write(t.harmonicsControlPointBits,p.harmonicsWave.harmonics[x]);S.encodeBase64(a)}if(p.type==0){p.chipWave>186?(a.push(119,T[p.chipWave-186]),a.push(T[3])):p.chipWave>124?(a.push(119,T[p.chipWave-124]),a.push(T[2])):p.chipWave>62?(a.push(119,T[p.chipWave-62]),a.push(T[1])):(a.push(119,T[p.chipWave]),a.push(T[0])),a.push(104,T[p.unison]),p.unison==t.unisons.length&&bt(a,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign),a.push(121);let S=A(0,32,p.chipWaveLoopMode)<<1|(p.isUsingAdvancedLoopControls?1:0);a.push(T[S]);let x=A(0,32,0)<<2|(p.chipWaveInStereo?1:0)<<1|(p.chipWavePlayBackwards?1:0);a.push(T[x]),Yn(a,p.chipWaveLoopStart),Yn(a,p.chipWaveLoopEnd),Yn(a,p.chipWaveStartOffset)}else if(p.type==1||p.type==11){if(p.type==1)a.push(65,T[p.algorithm]),a.push(70,T[p.feedbackType]);else{if(a.push(65,T[p.algorithm6Op]),p.algorithm6Op==0){a.push(67,T[p.customAlgorithm.carrierCount]),a.push(113);for(let S=0;S<p.customAlgorithm.modulatedBy.length;S++){for(let x=0;x<p.customAlgorithm.modulatedBy[S].length;x++)a.push(T[p.customAlgorithm.modulatedBy[S][x]]);a.push(82)}a.push(113)}if(a.push(70,T[p.feedbackType6Op]),p.feedbackType6Op==0){a.push(113);for(let S=0;S<p.customFeedbackType.indices.length;S++){for(let x=0;x<p.customFeedbackType.indices[S].length;x++)a.push(T[p.customFeedbackType.indices[S][x]]);a.push(82)}a.push(113)}}a.push(66,T[p.feedbackAmplitude]),a.push(81);for(let S=0;S<(p.type==11?6:t.operatorCount);S++)a.push(T[p.operators[S].frequency]);a.push(80);for(let S=0;S<(p.type==11?6:t.operatorCount);S++)a.push(T[p.operators[S].amplitude]);a.push(82);for(let S=0;S<(p.type==11?6:t.operatorCount);S++)a.push(T[p.operators[S].waveform]),p.operators[S].waveform==2&&a.push(T[p.operators[S].pulseWidth])}else if(p.type==9){p.chipWave>186?(a.push(119,T[p.chipWave-186]),a.push(T[3])):p.chipWave>124?(a.push(119,T[p.chipWave-124]),a.push(T[2])):p.chipWave>62?(a.push(119,T[p.chipWave-62]),a.push(T[1])):(a.push(119,T[p.chipWave]),a.push(T[0])),a.push(104,T[p.unison]),p.unison==t.unisons.length&&bt(a,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign),a.push(77);for(let S=0;S<64;S++)a.push(T[p.customChipWave[S]+24])}else if(p.type==2)a.push(119,T[p.chipNoise]),a.push(104,T[p.unison]),p.unison==t.unisons.length&&bt(a,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign);else if(p.type==3){a.push(83);let S=new gt;for(let x=0;x<t.spectrumControlPoints;x++)S.write(t.spectrumControlPointBits,p.spectrumWave.spectrum[x]);S.encodeBase64(a),a.push(104,T[p.unison]),p.unison==t.unisons.length&&bt(a,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign)}else if(p.type==4){a.push(122);for(let x=0;x<t.drumCount;x++)a.push(T[p.drumsetEnvelopes[x]]);a.push(83);let S=new gt;for(let x=0;x<t.drumCount;x++)for(let w=0;w<t.spectrumControlPoints;w++)S.write(t.spectrumControlPointBits,p.drumsetSpectrumWaves[x].spectrum[w]);S.encodeBase64(a),a.push(104,T[p.unison]),p.unison==t.unisons.length&&bt(a,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign)}else if(p.type==5)a.push(104,T[p.unison]),p.unison==t.unisons.length&&bt(a,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign);else if(p.type==6)a.push(87,T[p.pulseWidth]),a.push(T[p.decimalOffset>>6],T[p.decimalOffset&63]),a.push(104,T[p.unison]),p.unison==t.unisons.length&&bt(a,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign);else if(p.type==8)a.push(120,T[p.supersawDynamism],T[p.supersawSpread],T[p.supersawShape]),a.push(87,T[p.pulseWidth]),a.push(T[p.decimalOffset>>6],T[p.decimalOffset&63]);else if(p.type==7){if(t.stringSustainRange>32||!1)throw new Error("Not enough bits to represent sustain value and type in same base64 character.");a.push(104,T[p.unison]),p.unison==t.unisons.length&&bt(a,p.unisonVoices,p.unisonSpread,p.unisonOffset,p.unisonExpression,p.unisonSign),a.push(73,T[p.stringSustain|p.stringSustainType<<5])}else if(p.type!=10)throw new Error("Unknown instrument type.");a.push(69,T[p.envelopeCount]),a.push(T[p.envelopeSpeed]);for(let S=0;S<p.envelopeCount;S++){a.push(T[p.envelopes[S].target]),t.instrumentAutomationTargets[p.envelopes[S].target].maxCount>1&&a.push(T[p.envelopes[S].index]),a.push(T[p.envelopes[S].envelope]),t.newEnvelopes[p.envelopes[S].envelope].name=="pitch"?p.isNoiseInstrument?(a.push(T[p.envelopes[S].pitchEnvelopeStart]),a.push(T[p.envelopes[S].pitchEnvelopeEnd])):(a.push(T[p.envelopes[S].pitchEnvelopeStart>>6],T[p.envelopes[S].pitchEnvelopeStart&63]),a.push(T[p.envelopes[S].pitchEnvelopeEnd>>6],T[p.envelopes[S].pitchEnvelopeEnd&63])):t.newEnvelopes[p.envelopes[S].envelope].name=="random"?(a.push(T[p.envelopes[S].steps]),a.push(T[p.envelopes[S].seed]),a.push(T[p.envelopes[S].waveform])):t.newEnvelopes[p.envelopes[S].envelope].name=="lfo"&&(a.push(T[p.envelopes[S].waveform]),(p.envelopes[S].waveform==5||p.envelopes[S].waveform==6)&&a.push(T[p.envelopes[S].steps]));let x=+p.envelopes[S].discrete;x=x<<1,x+=+p.envelopes[S].inverse,a.push(T[x]?T[x]:T[0]),t.newEnvelopes[p.envelopes[S].envelope].name!="pitch"&&t.newEnvelopes[p.envelopes[S].envelope].name!="note size"&&t.newEnvelopes[p.envelopes[S].envelope].name!="punch"&&t.newEnvelopes[p.envelopes[S].envelope].name!="none"&&a.push(T[t.perEnvelopeSpeedToIndices[p.envelopes[S].perEnvelopeSpeed]]),a.push(T[p.envelopes[S].perEnvelopeLowerBound*10]),a.push(T[p.envelopes[S].perEnvelopeUpperBound*10])}}a.push(98),e=new gt;let c=0;for(;1<<c<this.patternsPerChannel+1;)c++;for(let h=0;h<this.getChannelCount();h++)for(let f=0;f<this.barCount;f++)e.write(c,this.channels[h].bars[f]);e.encodeBase64(a),a.push(112),e=new gt;let u=new gt,b=i.getNeededBits(t.noteSizeMax);for(let h=0;h<this.getChannelCount();h++){let f=this.channels[h],p=this.getMaxInstrumentsPerPattern(h),S=this.getChannelIsNoise(h),x=this.getChannelIsMod(h),w=i.getNeededBits(p-t.instrumentCountMin),v=i.getNeededBits(f.instruments.length-1);if(x){let D=i.getNeededBits(this.getMaxInstrumentsPerChannel()+2);for(let R=0;R<f.instruments.length;R++){let N=this.channels[h].instruments[R];for(let z=0;z<t.modCount;z++){let W=N.modChannels[z],H=N.modInstruments[z],U=N.modulators[z],G=N.modFilterTypes[z],d=N.modEnvelopeNumbers[z],F=t.modulators[U].forSong?2:0;if(U==t.modulators.dictionary.none.index&&(F=3),e.write(2,F),F==0||F==1){e.write(8,W.length);for(let C=0;C<W.length;C++)e.write(8,W[C]);e.write(8,H.length);for(let C=0;C<H.length;C++)e.write(D,H[C])}F!=3&&e.write(6,U),(t.modulators[N.modulators[z]].name=="post eq"||t.modulators[N.modulators[z]].name=="pre eq"||t.modulators[N.modulators[z]].name=="song eq")&&e.write(6,G),(t.modulators[N.modulators[z]].name=="individual envelope speed"||t.modulators[N.modulators[z]].name=="reset envelope"||t.modulators[N.modulators[z]].name=="individual envelope lower bound"||t.modulators[N.modulators[z]].name=="individual envelope upper bound")&&e.write(6,d)}}}let P=S||x?0:f.octave*t.pitchesPerOctave,B=S?4:P,L=x?[0,1,2,3,4,5]:S?[4,6,7,2,3,8,0,10]:[0,7,12,19,24,-5,-12],E=[];for(let D=0;D<L.length;D++)L[D]+=P;for(let D of f.patterns){if(this.patternInstruments){let R=ze(t.instrumentCountMin,p,D.instruments.length);e.write(w,R-t.instrumentCountMin);for(let N=0;N<R;N++)e.write(v,D.instruments[N])}if(D.notes.length>0){e.write(1,1);let R=0;for(let N of D.notes){N.start<R&&x&&(e.write(2,0),e.write(1,1),e.writePartDuration(R-N.start)),N.start>R&&(e.write(2,0),x&&e.write(1,0),e.writePartDuration(N.start-R)),u.clear(),N.pitches.length==1?u.write(1,0):(u.write(1,1),u.write(3,N.pitches.length-2)),N.chipWaveStartOffset==0?u.write(1,0):(u.write(1,1),u.write(31,N.chipWaveStartOffset)),u.writePinCount(N.pins.length-1),x?u.write(11,N.pins[0].size):u.write(b,N.pins[0].size);let z=0,W=N.pitches[0],H=W,U=[];for(let C=1;C<N.pins.length;C++){let I=N.pins[C],M=W+I.interval;H!=M?(u.write(1,1),U.push(M),H=M):u.write(1,0),u.writePartDuration(I.time-z),z=I.time,x?u.write(11,I.size):u.write(b,I.size)}let G=String.fromCharCode.apply(null,u.encodeBase64([])),d=E.indexOf(G);d==-1?(e.write(2,1),e.concat(u)):(e.write(1,1),e.writeLongTail(0,0,d),E.splice(d,1)),E.unshift(G),E.length>10&&E.pop();let F=N.pitches.concat(U);for(let C=0;C<F.length;C++){let I=F[C],M=L.indexOf(I);if(M==-1){let q=0,O=B;if(O<I)for(;O!=I;)O++,L.indexOf(O)==-1&&q++;else for(;O!=I;)O--,L.indexOf(O)==-1&&q--;e.write(1,0),e.writePitchInterval(q)}else e.write(1,1),e.write(4,M),L.splice(M,1);L.unshift(I),L.length>16&&L.pop(),C==N.pitches.length-1?B=N.pitches[0]:B=I}N.start==0&&e.write(1,N.continuesLastPattern?1:0),R=N.end}R<this.beatsPerBar*t.partsPerBeat+ +x&&(e.write(2,0),x&&e.write(1,0),e.writePartDuration(this.beatsPerBar*t.partsPerBeat+ +x-R))}else e.write(1,0)}}let l=e.lengthBase64(),g=[];for(;l>0;)g.unshift(T[l&63]),l=l>>6;a.push(T[g.length]),Array.prototype.push.apply(a,g),e.encodeBase64(a);let m=64e3,y="";if(we.customSamples!=null&&we.customSamples.length>0&&(y="|"+we.customSamples.join("|")),a.length<m)return String.fromCharCode.apply(null,a)+y;{let h="";for(let f=0;f<a.length;f+=m)h+=String.fromCharCode.apply(null,a.slice(f,f+m));return h+y}}static ae(e){return e==0?e=1:e==1&&(e=0),t.envelopes[A(0,t.envelopes.length,e)]}fromBase64String(e,a="auto"){if(e==null||e==""){i.ue(),this.initToDefault(!0);return}let n=0;for(;e.charCodeAt(n)<=32;)n++;if(e.charCodeAt(n)==35&&n++,e.charCodeAt(n)==123){this.fromJsonObject(JSON.parse(n==0?e:e.substring(n)),a);return}let r=e.charCodeAt(n),s=!1,o=!1,c=!1,u=!1,b=!1,l=!1;r==116?(l=!0,b=!0,n++):r==106?(o=!0,n++):r==103?(c=!0,n++):r==117?(u=!0,n++):r==100?(o=!0,n++):r==97?(u=!0,n++):r==115?(b=!0,n++):s=!0;let g=k[e.charCodeAt(n++)];if(s&&(g==-1||g>i.ge||g<i.be)||o&&(g==-1||g>i.Se||g<i.ve)||c&&(g==-1||g>i.Fe||g<i.xe)||u&&(g==-1||g>i.Ie||g<i.Ce)||(b||l)&&(g==-1||g>i.le||g<i.we))return;let m=g<2,y=g<3,h=g<4,f=g<5,p=g<6,S=g<7,x=g<8,w=g<9;this.initToDefault(s&&w||o&&f||h&&c);let v=s&&w||o&&f,P=!1;if(b||u||c){e=e.replaceAll("%7C","|");var B=e.split("|");if(e=B.shift(),we.customSamples==null||we.customSamples.join(", ")!=B.join(", ")){i.ie();let d=!1,F=!1,C=!1,I=[],M=[];ve.statusTable={},ve.urlTable={},ve.totalSamples=0,ve.samplesLoaded=0,kt.dispatchEvent(new it(ve.totalSamples,ve.samplesLoaded));for(let q of B)if(q.toLowerCase()==="legacysamples")d||(d=!0,I.push(q),tt(0));else if(q.toLowerCase()==="nintariboxsamples")F||(F=!0,I.push(q),tt(1));else if(q.toLowerCase()==="mariopaintboxsamples")C||(C=!0,I.push(q),tt(2));else{let O=y;if(!i.de(q,I,M,ve,O))continue}if(I.length>0&&(we.customSamples=I),M.length>0){let q=he(M);we.presetCategories[we.presetCategories.length]={name:"Custom Sample Presets",presets:q,index:we.presetCategories.length}}}}if(y&&s){for(let d of this.channels)d.instruments[0].transition=t.transitions.dictionary.interrupt.index,d.instruments[0].mdeffects|=8;this.channels[3].instruments[0].chipNoise=0}let L=null;if(s&&w||o&&f||h&&c){L=[];for(let d=L.length;d<this.getChannelCount();d++){L[d]=[];for(let F=0;F<t.instrumentCountMin;F++)L[d][F]={}}}let E=0,D=0,R=-1,N,z=!1,W=!1;for(;n<e.length;)switch(N=e.charCodeAt(n++)){case 78:{var H=(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)];this.title=decodeURIComponent(e.substring(n,n+H)),document.title=this.title+" - "+we.versionDisplayName,n+=H}break;case 110:{this.pitchChannelCount=k[e.charCodeAt(n++)],this.noiseChannelCount=k[e.charCodeAt(n++)],s||o&&m?this.modChannelCount=0:this.modChannelCount=k[e.charCodeAt(n++)],this.pitchChannelCount=ze(t.pitchChannelCountMin,t.pitchChannelCountMax,this.pitchChannelCount),this.noiseChannelCount=ze(t.noiseChannelCountMin,t.noiseChannelCountMax,this.noiseChannelCount),this.modChannelCount=ze(t.modChannelCountMin,t.modChannelCountMax,this.modChannelCount);for(let d=this.channels.length;d<this.getChannelCount();d++)this.channels[d]=new yt;if(this.channels.length=this.getChannelCount(),s&&w||o&&f||h&&c)for(let d=L.length;d<this.getChannelCount();d++){L[d]=[];for(let F=0;F<t.instrumentCountMin;F++)L[d][F]={}}}break;case 115:{if(this.scale=A(0,t.scales.length,k[e.charCodeAt(n++)]),this.scale==t.scales.dictionary.Custom.index)for(var U=1;U<t.pitchesPerOctave;U++)this.scaleCustom[U]=k[e.charCodeAt(n++)]==1;s&&(this.scale=0)}break;case 107:if(S&&s)this.key=A(0,t.keys.length,11-k[e.charCodeAt(n++)]),this.octave=0;else if(s||o)this.key=A(0,t.keys.length,k[e.charCodeAt(n++)]),this.octave=0;else if(c||y&&u){let d=k[e.charCodeAt(n++)],[F,C]=xr(d);this.key=F,this.octave=C}else this.key=A(0,t.keys.length,k[e.charCodeAt(n++)]),this.octave=A(t.octaveMin,t.octaveMax+1,k[e.charCodeAt(n++)]+t.octaveMin);break;case 108:f&&s?this.loopStart=k[e.charCodeAt(n++)]:this.loopStart=(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)];break;case 101:f&&s?this.loopLength=k[e.charCodeAt(n++)]:this.loopLength=(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)]+1;break;case 116:h&&s?this.tempo=[95,120,151,190][k[e.charCodeAt(n++)]]:S&&s?this.tempo=[88,95,103,111,120,130,140,151,163,176,190,206,222,240,259][k[e.charCodeAt(n++)]]:this.tempo=k[e.charCodeAt(n++)]<<6|k[e.charCodeAt(n++)],this.tempo=A(t.tempoMin,t.tempoMax+1,this.tempo);break;case 109:w&&s?(E=k[e.charCodeAt(n++)]*12,E=A(0,t.reverbRange,E)):(o&&f||h&&c)&&(E=k[e.charCodeAt(n++)],E=A(0,t.reverbRange,E));break;case 97:y&&s?this.beatsPerBar=[6,7,8,9,10][k[e.charCodeAt(n++)]]:this.beatsPerBar=k[e.charCodeAt(n++)]+1,this.beatsPerBar=Math.max(t.beatsPerBarMin,Math.min(t.beatsPerBarMax,this.beatsPerBar));break;case 103:{let d=(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)]+1;this.barCount=ze(t.barCountMin,t.barCountMax,d);for(let F=0;F<this.getChannelCount();F++){for(let C=this.channels[F].bars.length;C<this.barCount;C++)this.channels[F].bars[C]=C<4?1:0;this.channels[F].bars.length=this.barCount}}break;case 106:{let d;x&&s?d=k[e.charCodeAt(n++)]+1:d=(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)]+1,this.patternsPerChannel=ze(1,t.barCountMax,d);let F=this.getChannelCount();for(let C=0;C<F;C++){let I=this.channels[C].patterns;for(let M=I.length;M<this.patternsPerChannel;M++)I[M]=new nt;I.length=this.patternsPerChannel}}break;case 105:if(w&&s||o&&f||h&&c){let d=ze(t.instrumentCountMin,t.patternInstrumentCountMax,k[e.charCodeAt(n++)]+t.instrumentCountMin);this.layeredInstruments=!1,this.patternInstruments=d>1;for(let F=0;F<this.getChannelCount();F++){let C=F>=this.pitchChannelCount&&F<this.pitchChannelCount+this.noiseChannelCount,I=F>=this.pitchChannelCount+this.noiseChannelCount;for(let M=this.channels[F].instruments.length;M<d;M++)this.channels[F].instruments[M]=new Ne(C,I);if(this.channels[F].instruments.length=d,p&&s)for(let M=0;M<d;M++)this.channels[F].instruments[M].setTypeAndReset(C?2:0,C,I);for(let M=L[F].length;M<d;M++)L[F][M]={}}}else{let d=k[e.charCodeAt(n++)];this.layeredInstruments=(d&2)!=0,this.patternInstruments=(d&1)!=0;for(let F=0;F<this.getChannelCount();F++){let C=1;(this.layeredInstruments||this.patternInstruments)&&(C=ze(t.instrumentCountMin,this.getMaxInstrumentsPerChannel(),k[e.charCodeAt(n++)]+t.instrumentCountMin));let I=this.channels[F],M=this.getChannelIsNoise(F),q=this.getChannelIsMod(F);for(let O=I.instruments.length;O<C;O++)I.instruments[O]=new Ne(M,q);I.instruments.length=C}}break;case 114:if(!u&&!b){let d=k[e.charCodeAt(n++)];this.rhythm=A(0,t.rhythms.length,d),(o&&y||s)&&((this.rhythm==t.rhythms.dictionary["\xF73 (triplets)"].index||this.rhythm==t.rhythms.dictionary["\xF76"].index)&&(z=!0),this.rhythm>=t.rhythms.dictionary["\xF76"].index&&(W=!0))}else if(b&&h||u&&f){let d=[1,1,0,1,2,3,4,5];this.rhythm=A(0,t.rhythms.length,d[k[e.charCodeAt(n++)]])}else this.rhythm=A(0,t.rhythms.length,k[e.charCodeAt(n++)]);break;case 111:if(y&&s){let d=k[e.charCodeAt(n++)];this.channels[d].octave=A(0,t.pitchOctaves,k[e.charCodeAt(n++)]+1),d>=this.pitchChannelCount&&(this.channels[d].octave=0)}else if(w&&s||o&&f||h&&c)for(let d=0;d<this.getChannelCount();d++)this.channels[d].octave=A(0,t.pitchOctaves,k[e.charCodeAt(n++)]+1),d>=this.pitchChannelCount&&(this.channels[d].octave=0);else{for(let d=0;d<this.pitchChannelCount;d++)this.channels[d].octave=A(0,t.pitchOctaves,k[e.charCodeAt(n++)]);for(let d=this.pitchChannelCount;d<this.getChannelCount();d++)this.channels[d].octave=0}break;case 84:{R++,R>=this.channels[D].instruments.length&&(D++,R=0),ze(0,this.channels.length-1,D);let d=this.channels[D].instruments[R],F=ze(0,11,k[e.charCodeAt(n++)]);if(o&&f||h&&c?(F==7||F==8)&&(F+=2):(o&&p||c&&!h||u&&f)&&(F==8||F==9||F==10)&&(F+=1),d.setTypeAndReset(F,D>=this.pitchChannelCount&&D<this.pitchChannelCount+this.noiseChannelCount,D>=this.pitchChannelCount+this.noiseChannelCount),(S&&s||m&&o)&&(F==0||F==9||F==6)){d.aliases=!0;let C=d.addEffect(3);C.distortion=0}z&&(d.arpeggioSpeed=9),W&&(d.fastTwoNoteArp=!0),S&&s&&d.chord!=t.chords.dictionary.simultaneous.index&&(d.mdeffects|=16)}break;case 117:{let d=k[e.charCodeAt(n++)]<<6|k[e.charCodeAt(n++)];this.channels[D].instruments[R].preset=d,o&&f||h&&c?this.channels[D].instruments[R].preset==7&&(this.channels[D].instruments[R].preset=9,this.channels[D].instruments[R].type=9):(o&&p||u&&f)&&(this.channels[D].instruments[R].preset==8&&(this.channels[D].instruments[R].preset=9,this.channels[D].instruments[R].type=9),this.channels[D].instruments[R].preset==10&&(this.channels[D].instruments[R].preset=11,this.channels[D].instruments[R].type=11)),s&&d==we.nameToPresetValue("grand piano 1")&&(this.channels[D].instruments[R].preset=we.nameToPresetValue("grand piano 3"))}break;case 119:if(y&&s){let d=[1,2,3,4,5,6,7,8,0],F=k[e.charCodeAt(n++)],C=this.channels[F].instruments[0];C.chipWave=A(0,t.chipWaves.length,d[k[e.charCodeAt(n++)]]|0),C.convertLegacySettings(L[F][0],v)}else if(p&&s){let d=[1,2,3,4,5,6,7,8,0];for(let F=0;F<this.getChannelCount();F++)for(let C of this.channels[F].instruments)F>=this.pitchChannelCount?C.chipNoise=A(0,t.chipNoises.length,k[e.charCodeAt(n++)]):C.chipWave=A(0,t.chipWaves.length,d[k[e.charCodeAt(n++)]]|0)}else if(S&&s){let d=[1,2,3,4,5,6,7,8,0];D>=this.pitchChannelCount?this.channels[D].instruments[R].chipNoise=A(0,t.chipNoises.length,k[e.charCodeAt(n++)]):this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,d[k[e.charCodeAt(n++)]]|0)}else if(this.channels[D].instruments[R].type==2)this.channels[D].instruments[R].chipNoise=A(0,t.chipNoises.length,k[e.charCodeAt(n++)]);else if(b||u){let d=k[e.charCodeAt(n++)],F=k[e.charCodeAt(n++)];F==3?this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,d+186):F==2?this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,d+124):F==1?this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,d+62):this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,d)}else this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,k[e.charCodeAt(n++)]);break;case 102:if(w&&s||f&&o||h&&c)if(S&&s){let d=[10,6,3,0,8,5,2],F=["none","none","none","none","decay 1","decay 2","decay 3"];if(y&&s){let C=k[e.charCodeAt(n++)],I=this.channels[C].instruments[0],M=L[C][0],q=[1,3,4,5][A(0,d.length,k[e.charCodeAt(n++)])];M.filterCutoff=d[q],M.filterResonance=0,M.filterEnvelope=t.envelopes.dictionary[F[q]],I.convertLegacySettings(M,v)}else if(p&&s)for(let C=0;C<this.getChannelCount();C++)for(let I=0;I<this.channels[C].instruments.length;I++){let M=this.channels[C].instruments[I],q=L[C][I],O=A(0,d.length,k[e.charCodeAt(n++)]+1);C<this.pitchChannelCount?(q.filterCutoff=d[O],q.filterResonance=0,q.filterEnvelope=t.envelopes.dictionary[F[O]]):(q.filterCutoff=10,q.filterResonance=0,q.filterEnvelope=t.envelopes.dictionary.none),M.convertLegacySettings(q,v)}else{let C=A(0,d.length,k[e.charCodeAt(n++)]),I=this.channels[D].instruments[R],M=L[D][R];M.filterCutoff=d[C],M.filterResonance=0,M.filterEnvelope=t.envelopes.dictionary[F[C]],I.convertLegacySettings(M,v)}}else{let F=this.channels[D].instruments[R],C=L[D][R];C.filterCutoff=A(0,11,k[e.charCodeAt(n++)]),F.convertLegacySettings(C,v)}else{let d=this.channels[D].instruments[R],F=k[e.charCodeAt(n++)];if(l)if(F==0){d.noteFilterType=!1,F=k[e.charCodeAt(n++)];let C=F;d.noteFilter.controlPointCount=A(0,t.filterMaxPoints+1,C);for(let M=d.noteFilter.controlPoints.length;M<d.noteFilter.controlPointCount;M++)d.noteFilter.controlPoints[M]=new Pe;for(let M=0;M<d.noteFilter.controlPointCount;M++){let q=d.noteFilter.controlPoints[M];q.type=A(0,3,k[e.charCodeAt(n++)]),q.freq=A(0,t.filterFreqRange,k[e.charCodeAt(n++)]),q.gain=A(0,t.filterGainRange,k[e.charCodeAt(n++)])}for(let M=d.noteFilter.controlPointCount;M<C;M++)n+=3;d.noteSubFilters[0]=d.noteFilter;let I=k[e.charCodeAt(n++)]<<6|k[e.charCodeAt(n++)];for(let M=0;M<t.filterMorphCount-1;M++)if(I&1<<M){let q=k[e.charCodeAt(n++)];d.noteSubFilters[M+1]==null&&(d.noteSubFilters[M+1]=new Ee),d.noteSubFilters[M+1].controlPointCount=A(0,t.filterMaxPoints+1,q);for(let O=d.noteSubFilters[M+1].controlPoints.length;O<d.noteSubFilters[M+1].controlPointCount;O++)d.noteSubFilters[M+1].controlPoints[O]=new Pe;for(let O=0;O<d.noteSubFilters[M+1].controlPointCount;O++){let j=d.noteSubFilters[M+1].controlPoints[O];j.type=A(0,3,k[e.charCodeAt(n++)]),j.freq=A(0,t.filterFreqRange,k[e.charCodeAt(n++)]),j.gain=A(0,t.filterGainRange,k[e.charCodeAt(n++)])}for(let O=d.noteSubFilters[M+1].controlPointCount;O<q;O++)n+=3}}else d.noteFilterType=!0,d.noteFilterSimpleCut=A(0,t.filterSimpleCutRange,k[e.charCodeAt(n++)]),d.noteFilterSimplePeak=A(0,t.filterSimplePeakRange,k[e.charCodeAt(n++)]);else{let C=d.addEffect(5);if(s||F==0){C.eqFilterType=!1,(o||c||u||b)&&(F=k[e.charCodeAt(n++)]);let I=F;C.eqFilter.controlPointCount=A(0,t.filterMaxPoints+1,I);for(let M=C.eqFilter.controlPoints.length;M<C.eqFilter.controlPointCount;M++)C.eqFilter.controlPoints[M]=new Pe;for(let M=0;M<C.eqFilter.controlPointCount;M++){let q=C.eqFilter.controlPoints[M];q.type=A(0,3,k[e.charCodeAt(n++)]),q.freq=A(0,t.filterFreqRange,k[e.charCodeAt(n++)]),q.gain=A(0,t.filterGainRange,k[e.charCodeAt(n++)])}for(let M=C.eqFilter.controlPointCount;M<I;M++)n+=3;if(C.eqSubFilters[0]=C.eqFilter,o&&!f||c&&!h||u||b){let M=k[e.charCodeAt(n++)]<<6|k[e.charCodeAt(n++)];for(let q=0;q<t.filterMorphCount-1;q++)if(M&1<<q){let O=k[e.charCodeAt(n++)];C.eqSubFilters[q+1]==null&&(C.eqSubFilters[q+1]=new Ee),C.eqSubFilters[q+1].controlPointCount=A(0,t.filterMaxPoints+1,O);for(let j=C.eqSubFilters[q+1].controlPoints.length;j<C.eqSubFilters[q+1].controlPointCount;j++)C.eqSubFilters[q+1].controlPoints[j]=new Pe;for(let j=0;j<C.eqSubFilters[q+1].controlPointCount;j++){let te=C.eqSubFilters[q+1].controlPoints[j];te.type=A(0,3,k[e.charCodeAt(n++)]),te.freq=A(0,t.filterFreqRange,k[e.charCodeAt(n++)]),te.gain=A(0,t.filterGainRange,k[e.charCodeAt(n++)])}for(let j=C.eqSubFilters[q+1].controlPointCount;j<O;j++)n+=3}}}else C.eqFilterType=!0,C.eqFilterSimpleCut=A(0,t.filterSimpleCutRange,k[e.charCodeAt(n++)]),C.eqFilterSimplePeak=A(0,t.filterSimplePeakRange,k[e.charCodeAt(n++)])}}break;case 121:if(b||u)if(y&&u){let d=un(e,n);n+=6;let F=e.slice(n,n+d);n+=d;let C=JSON.parse(atob(F));for(let I of C){let M=I.channel,q=I.instrument,O=I.info,j=this.channels[M].instruments[q];j.isUsingAdvancedLoopControls=O.isUsingAdvancedLoopControls,j.chipWaveLoopStart=O.chipWaveLoopStart,j.chipWaveLoopEnd=O.chipWaveLoopEnd,j.chipWaveLoopMode=O.chipWaveLoopMode,j.chipWavePlayBackwards=O.chipWavePlayBackwards,j.chipWaveStartOffset=O.chipWaveStartOffset}}else{let d=k[e.charCodeAt(n++)],F=!!(d&1),C=d>>1,I=k[e.charCodeAt(n++)],M=!!(I&2),q=!!(I&1),O=un(e,n);n+=6;let j=un(e,n);n+=6;let te=un(e,n);n+=6;let ee=this.channels[D].instruments[R];ee.isUsingAdvancedLoopControls=F,ee.chipWaveLoopStart=O,ee.chipWaveLoopEnd=j,ee.chipWaveLoopMode=C,ee.chipWavePlayBackwards=q,ee.chipWaveStartOffset=te,ee.chipWaveInStereo=M}else if(c&&!h&&p)document.URL.substring(document.URL.length-13).toLowerCase()!="legacysamples"&&(P||(P=!0,t.willReloadForCustomSamples=!0,we.customSamples=["legacySamples"],tt(0))),this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,k[e.charCodeAt(n++)]+125);else if(w&&s||o&&f||h&&c){let F=this.channels[D].instruments[R],C=L[D][R];C.filterResonance=A(0,8,k[e.charCodeAt(n++)]),F.convertLegacySettings(C,v)}break;case 122:{let d=this.channels[D].instruments[R],F=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11];if(w&&s||f&&o||h&&c)if(d.type==4)for(let C=0;C<t.drumCount;C++){let I=k[e.charCodeAt(n++)];(m&&c||!c&&!u&&!b)&&(I=F[I]),d.drumsetEnvelopes[C]=i.ae(I).index}else{let C=L[D][R],I=k[e.charCodeAt(n++)];(m&&c||!c&&!u&&!b)&&(I=F[I]),C.filterEnvelope=i.ae(I),d.convertLegacySettings(C,v)}else for(let C=0;C<t.drumCount;C++){let I=k[e.charCodeAt(n++)];(m&&c||!c&&!u&&!b)&&(I=F[I]),!b&&I>=2&&I++,d.drumsetEnvelopes[C]=A(0,t.envelopes.length,I)}}break;case 87:{let d=this.channels[D].instruments[R];if(d.pulseWidth=A(0,t.pulseWidthRange+ +o+1,k[e.charCodeAt(n++)]),s&&(d.pulseWidth=Math.round(Math.pow(.5,(7-d.pulseWidth)*t.pulseWidthStepPower)*t.pulseWidthRange)),w&&s||f&&o||h&&c){let F=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],C=L[D][R],I=k[e.charCodeAt(n++)];(m&&c||!c&&!u&&!b)&&(I=F[I]),C.pulseEnvelope=i.ae(I),d.convertLegacySettings(C,v)}(u&&!h||b)&&(d.decimalOffset=A(0,100,(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)]))}break;case 73:{let d=this.channels[D].instruments[R],F=k[e.charCodeAt(n++)];d.stringSustain=A(0,t.stringSustainRange,F&31),d.stringSustainType=t.enableAcousticSustain?A(0,2,F>>5):0}break;case 100:if(w&&s||o&&f||h&&c){let d=[{transition:"interrupt",fadeInSeconds:0,fadeOutTicks:-1},{transition:"normal",fadeInSeconds:0,fadeOutTicks:-3},{transition:"normal",fadeInSeconds:.025,fadeOutTicks:-3},{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3},{transition:"normal",fadeInSeconds:.04,fadeOutTicks:6},{transition:"normal",fadeInSeconds:0,fadeOutTicks:48},{transition:"normal",fadeInSeconds:.0125,fadeOutTicks:72},{transition:"normal",fadeInSeconds:.06,fadeOutTicks:96},{transition:"slide in pattern",fadeInSeconds:.025,fadeOutTicks:-3}];if(y&&s){let F=k[e.charCodeAt(n++)],C=d[A(0,d.length,k[e.charCodeAt(n++)])],I=this.channels[F].instruments[0];I.fadeIn=ht(C.fadeInSeconds),I.fadeOut=ft(C.fadeOutTicks),I.transition=t.transitions.dictionary[C.transition].index,I.transition!=t.transitions.dictionary.normal.index&&(I.mdeffects|=8)}else if(p&&s)for(let F=0;F<this.getChannelCount();F++)for(let C of this.channels[F].instruments){let I=d[A(0,d.length,k[e.charCodeAt(n++)])];C.fadeIn=ht(I.fadeInSeconds),C.fadeOut=ft(I.fadeOutTicks),C.transition=t.transitions.dictionary[I.transition].index,C.transition!=t.transitions.dictionary.normal.index&&(C.mdeffects|=8)}else if(h&&!c&&!u&&!b||s){let F=d[A(0,d.length,k[e.charCodeAt(n++)])],C=this.channels[D].instruments[R];C.fadeIn=ht(F.fadeInSeconds),C.fadeOut=ft(F.fadeOutTicks),C.transition=t.transitions.dictionary[F.transition].index,C.transition!=t.transitions.dictionary.normal.index&&(C.mdeffects|=8)}else{let F=d[A(0,d.length,k[e.charCodeAt(n++)])],C=this.channels[D].instruments[R];C.fadeIn=ht(F.fadeInSeconds),C.fadeOut=ft(F.fadeOutTicks),C.transition=t.transitions.dictionary[F.transition].index,k[e.charCodeAt(n++)]>0&&(C.legacyTieOver=!0),C.clicklessTransition=!!k[e.charCodeAt(n++)],(C.transition!=t.transitions.dictionary.normal.index||C.clicklessTransition)&&(C.mdeffects|=8)}}else{let d=this.channels[D].instruments[R];d.fadeIn=A(0,t.fadeInRange,k[e.charCodeAt(n++)]),d.fadeOut=A(0,t.fadeOutTicks.length,k[e.charCodeAt(n++)]),(o||c||u||b)&&(d.clicklessTransition=!!k[e.charCodeAt(n++)])}break;case 99:if(w&&s||o&&f||h&&c)if(S&&s)if(y&&s){let d=[0,3,2,0],F=["none","none","none","tremolo2"],C=k[e.charCodeAt(n++)],I=A(0,d.length,k[e.charCodeAt(n++)]),M=this.channels[C].instruments[0],q=L[C][0];M.vibrato=d[I],(q.filterEnvelope==null||q.filterEnvelope.type==0)&&(q.filterEnvelope=t.envelopes.dictionary[F[I]],M.convertLegacySettings(q,v)),M.vibrato!=t.vibratos.dictionary.none.index&&(M.mdeffects|=4)}else if(p&&s){let d=[0,1,2,3,0,0],F=["none","none","none","none","tremolo5","tremolo2"];for(let C=0;C<this.getChannelCount();C++)for(let I=0;I<this.channels[C].instruments.length;I++){let M=A(0,d.length,k[e.charCodeAt(n++)]),q=this.channels[C].instruments[I],O=L[C][I];if(q.vibrato=d[M],(O.filterEnvelope==null||O.filterEnvelope.type==0)&&(O.filterEnvelope=t.envelopes.dictionary[F[M]],q.convertLegacySettings(O,v)),q.vibrato!=t.vibratos.dictionary.none.index&&(q.mdeffects|=4),(E!=0||o&&f||h&&c)&&!this.getChannelIsNoise(C)){let j=q.addEffect(0);j.reverb=E}}}else{let d=[0,1,2,3,0,0],F=["none","none","none","none","tremolo5","tremolo2"],C=A(0,d.length,k[e.charCodeAt(n++)]),I=this.channels[D].instruments[R],M=L[D][R];if(I.vibrato=d[C],(M.filterEnvelope==null||M.filterEnvelope.type==0)&&(M.filterEnvelope=t.envelopes.dictionary[F[C]],I.convertLegacySettings(M,v)),I.vibrato!=t.vibratos.dictionary.none.index&&(I.mdeffects|=4),E!=0||o&&f||h&&c){let q=I.addEffect(0);q.reverb=E}}else{let d=this.channels[D].instruments[R],F=A(0,t.vibratos.length+1,k[e.charCodeAt(n++)]);d.vibrato=F,d.vibrato!=t.vibratos.dictionary.none.index&&(d.mdeffects|=4),F==t.vibratos.length?(d.vibratoDepth=A(0,t.modulators.dictionary["vibrato depth"].maxRawVol+1,k[e.charCodeAt(n++)])/50,d.vibratoSpeed=A(0,t.modulators.dictionary["vibrato speed"].maxRawVol+1,k[e.charCodeAt(n++)]),d.vibratoDelay=A(0,t.modulators.dictionary["vibrato delay"].maxRawVol+1,k[e.charCodeAt(n++)])/2,d.vibratoType=A(0,t.vibratoTypes.length,k[e.charCodeAt(n++)]),d.mdeffects|=4):(d.vibratoDepth=t.vibratos[d.vibrato].amplitude,d.vibratoSpeed=10,d.vibratoDelay=t.vibratos[d.vibrato].delayTicks/2,d.vibratoType=t.vibratos[d.vibrato].type)}else if(b&&!h){let d=k[e.charCodeAt(n++)];this.eqFilter.controlPointCount=A(0,t.filterMaxPoints+1,d);for(let C=this.eqFilter.controlPoints.length;C<this.eqFilter.controlPointCount;C++)this.eqFilter.controlPoints[C]=new Pe;for(let C=0;C<this.eqFilter.controlPointCount;C++){let I=this.eqFilter.controlPoints[C];I.type=A(0,3,k[e.charCodeAt(n++)]),I.freq=A(0,t.filterFreqRange,k[e.charCodeAt(n++)]),I.gain=A(0,t.filterGainRange,k[e.charCodeAt(n++)])}for(let C=this.eqFilter.controlPointCount;C<d;C++)n+=3;this.eqSubFilters[0]=this.eqFilter;let F=k[e.charCodeAt(n++)]<<6|k[e.charCodeAt(n++)];for(let C=0;C<t.filterMorphCount-1;C++)if(F&1<<C){let I=k[e.charCodeAt(n++)];this.eqSubFilters[C+1]==null&&(this.eqSubFilters[C+1]=new Ee),this.eqSubFilters[C+1].controlPointCount=A(0,t.filterMaxPoints+1,I);for(let M=this.eqSubFilters[C+1].controlPoints.length;M<this.eqSubFilters[C+1].controlPointCount;M++)this.eqSubFilters[C+1].controlPoints[M]=new Pe;for(let M=0;M<this.eqSubFilters[C+1].controlPointCount;M++){let q=this.eqSubFilters[C+1].controlPoints[M];q.type=A(0,3,k[e.charCodeAt(n++)]),q.freq=A(0,t.filterFreqRange,k[e.charCodeAt(n++)]),q.gain=A(0,t.filterGainRange,k[e.charCodeAt(n++)])}for(let M=this.eqSubFilters[C+1].controlPointCount;M<I;M++)n+=3}}break;case 71:if(o&&f||h&&c){let d=this.channels[D].instruments[R];d.arpeggioSpeed=A(0,t.modulators.dictionary["arp speed"].maxRawVol+1,k[e.charCodeAt(n++)]),d.fastTwoNoteArp=!!k[e.charCodeAt(n++)]}break;case 104:if(y&&s){let d=k[e.charCodeAt(n++)],F=this.channels[d].instruments[0];F.unison=A(0,t.unisons.length,k[e.charCodeAt(n++)]),F.unisonVoices=t.unisons[F.unison].voices,F.unisonSpread=t.unisons[F.unison].spread,F.unisonOffset=t.unisons[F.unison].offset,F.unisonExpression=t.unisons[F.unison].expression,F.unisonSign=t.unisons[F.unison].sign}else if(p&&s)for(let d=0;d<this.getChannelCount();d++)for(let F of this.channels[d].instruments){let C=k[e.charCodeAt(n++)],I=A(0,t.unisons.length,C);C==8&&(I=2,F.chord=3),F.unison=I,F.unisonVoices=t.unisons[F.unison].voices,F.unisonSpread=t.unisons[F.unison].spread,F.unisonOffset=t.unisons[F.unison].offset,F.unisonExpression=t.unisons[F.unison].expression,F.unisonSign=t.unisons[F.unison].sign}else if(S&&s){let d=k[e.charCodeAt(n++)],F=A(0,t.unisons.length,d),C=this.channels[D].instruments[R];d==8&&(F=2,C.chord=3),C.unison=F,C.unisonVoices=t.unisons[C.unison].voices,C.unisonSpread=t.unisons[C.unison].spread,C.unisonOffset=t.unisons[C.unison].offset,C.unisonExpression=t.unisons[C.unison].expression,C.unisonSign=t.unisons[C.unison].sign}else{let d=this.channels[D].instruments[R];d.unison=A(0,t.unisons.length+1,k[e.charCodeAt(n++)]);let F=f||!b?27:t.unisons.length;if((u&&!f||b)&&d.unison==F){d.unison=t.unisons.length,d.unisonVoices=k[e.charCodeAt(n++)];let C=k[e.charCodeAt(n++)],I=k[e.charCodeAt(n++)]+(k[e.charCodeAt(n++)]+k[e.charCodeAt(n++)]*63)*63,M=k[e.charCodeAt(n++)],q=k[e.charCodeAt(n++)]+(k[e.charCodeAt(n++)]+k[e.charCodeAt(n++)]*63)*63,O=k[e.charCodeAt(n++)],j=k[e.charCodeAt(n++)]+k[e.charCodeAt(n++)]*63,te=k[e.charCodeAt(n++)],ee=k[e.charCodeAt(n++)]+k[e.charCodeAt(n++)]*63;d.unisonSpread=I/1e3,C==0&&(d.unisonSpread*=-1),d.unisonOffset=q/1e3,M==0&&(d.unisonOffset*=-1),d.unisonExpression=j/1e3,O==0&&(d.unisonExpression*=-1),d.unisonSign=ee/1e3,te==0&&(d.unisonSign*=-1)}else d.unisonVoices=t.unisons[d.unison].voices,d.unisonSpread=t.unisons[d.unison].spread,d.unisonOffset=t.unisons[d.unison].offset,d.unisonExpression=t.unisons[d.unison].expression,d.unisonSign=t.unisons[d.unison].sign}break;case 67:if(w&&s||o&&f||h&&c){let d=this.channels[D].instruments[R];d.chord=A(0,t.chords.length,k[e.charCodeAt(n++)]),d.chord!=t.chords.dictionary.simultaneous.index&&(d.mdeffects|=16)}break;case 113:{let d=this.channels[D].instruments[R];if(w&&s||o&&f||h&&c){d.addEffect(k[e.charCodeAt(n++)]&2047);let F=L[D][R];d.convertLegacySettings(F,v)}else{let F=k[e.charCodeAt(n++)];if(l){d.effects=[];for(let C=0;C<F;C++){let I=d.addEffect(k[e.charCodeAt(n++)]);if(I.type==5){let M=k[e.charCodeAt(n++)];if(M==0){I.eqFilterType=!1,M=k[e.charCodeAt(n++)],I.eqFilter.controlPointCount=A(0,t.filterMaxPoints+1,M);for(let O=I.eqFilter.controlPoints.length;O<I.eqFilter.controlPointCount;O++)I.eqFilter.controlPoints[O]=new Pe;for(let O=0;O<I.eqFilter.controlPointCount;O++){let j=I.eqFilter.controlPoints[O];j.type=A(0,3,k[e.charCodeAt(n++)]),j.freq=A(0,t.filterFreqRange,k[e.charCodeAt(n++)]),j.gain=A(0,t.filterGainRange,k[e.charCodeAt(n++)])}for(let O=I.eqFilter.controlPointCount;O<M;O++)n+=3;I.eqSubFilters[0]=I.eqFilter;let q=k[e.charCodeAt(n++)]<<6|k[e.charCodeAt(n++)];for(let O=0;O<t.filterMorphCount-1;O++)if(q&1<<O){let j=k[e.charCodeAt(n++)];I.eqSubFilters[O+1]==null&&(I.eqSubFilters[O+1]=new Ee),I.eqSubFilters[O+1].controlPointCount=A(0,t.filterMaxPoints+1,j);for(let te=I.eqSubFilters[O+1].controlPoints.length;te<I.eqSubFilters[O+1].controlPointCount;te++)I.eqSubFilters[O+1].controlPoints[te]=new Pe;for(let te=0;te<I.eqSubFilters[O+1].controlPointCount;te++){let ee=I.eqSubFilters[O+1].controlPoints[te];ee.type=A(0,3,k[e.charCodeAt(n++)]),ee.freq=A(0,t.filterFreqRange,k[e.charCodeAt(n++)]),ee.gain=A(0,t.filterGainRange,k[e.charCodeAt(n++)])}for(let te=I.eqSubFilters[O+1].controlPointCount;te<j;te++)n+=3}}else I.eqFilterType=!0,I.eqFilter.reset(),I.eqFilterSimpleCut=A(0,t.filterSimpleCutRange,k[e.charCodeAt(n++)]),I.eqFilterSimplePeak=A(0,t.filterSimplePeakRange,k[e.charCodeAt(n++)])}I.type==3&&(l?I.distortion=A(0,t.distortionRange,k[e.charCodeAt(n++)]):I.distortion=A(0,t.distortionRange,k[e.charCodeAt(n++)])*2,(o&&!f||c||u||b)&&(d.aliases=!!k[e.charCodeAt(n++)])),I.type==4&&(I.bitcrusherFreq=A(0,t.bitcrusherFreqRange,k[e.charCodeAt(n++)]),I.bitcrusherQuantization=A(0,t.bitcrusherQuantizationRange,k[e.charCodeAt(n++)])),I.type==2&&(s?I.pan=A(0,t.panMax+1,Math.round(k[e.charCodeAt(n++)]*(t.panMax/8))):I.pan=A(0,t.panMax+1,(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)]),(o&&!m||c||u||b)&&(I.panDelay=k[e.charCodeAt(n++)]),l&&(I.panMode=k[e.charCodeAt(n++)])),I.type==10&&(I.flanger=A(0,t.flangerRange,k[e.charCodeAt(n++)]),I.flangerSpeed=A(0,t.flangerSpeedRange,k[e.charCodeAt(n++)]),I.flangerDepth=A(0,t.flangerDepthRange,k[e.charCodeAt(n++)]),I.flangerFeedback=A(0,t.flangerFeedbackRange,k[e.charCodeAt(n++)])),I.type==1&&(l?I.chorus=A(0,t.chorusRange/2+1,k[e.charCodeAt(n++)]):s?I.chorus=A(0,t.chorusRange/2+1,k[e.charCodeAt(n++)])*4:I.chorus=A(0,t.chorusRange,k[e.charCodeAt(n++)])*2),I.type==9&&(I.gain=A(0,t.volumeRange,(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)])),I.type==6&&(l?I.echoSustain=A(0,t.echoSustainRange,k[e.charCodeAt(n++)]):I.echoSustain=A(0,t.echoSustainRange/3,k[e.charCodeAt(n++)])*3,I.echoDelay=A(0,t.echoDelayRange,k[e.charCodeAt(n++)]),I.echoPingPong=A(0,t.panMax+1,(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)])),I.type==0&&(s?I.reverb=A(0,t.reverbRange,Math.round(k[e.charCodeAt(n++)]*t.reverbRange/3)):I.reverb=A(0,t.reverbRange,k[e.charCodeAt(n++)])),I.type==8&&(I.granular=k[e.charCodeAt(n++)],I.grainSize=k[e.charCodeAt(n++)],I.grainAmounts=k[e.charCodeAt(n++)],I.grainRange=k[e.charCodeAt(n++)]),I.type==7&&(I.ringModulation=A(0,t.ringModRange,k[e.charCodeAt(n++)]),I.ringModulationHz=A(0,t.ringModHzRange,k[e.charCodeAt(n++)]),I.ringModWaveformIndex=A(0,t.operatorWaves.length,k[e.charCodeAt(n++)]),I.ringModPulseWidth=A(0,t.pulseWidthRange,k[e.charCodeAt(n++)]),I.ringModHzOffset=A(t.rmHzOffsetMin,t.rmHzOffsetMax+1,(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)]))}d.mdeffects=k[e.charCodeAt(n++)]}else{let C=[0,1,2,3,4,5,6,0,1,2,3,4,5,7,8],I=0;if(b&&!f){let M=new Ye(e,n,n+18);for(let q=0;q<18;q++)I=M.read(1),q>6&&q<13?d.mdeffects&=C[I]:I==1&&d.addEffect(C[q])}else{let M=new Ye(e,n,n+12);for(let q=0;q<12;q++)I=M.read(1),q>6?d.mdeffects&=C[I]:I==1&&d.addEffect(C[q])}}Wt(d.mdeffects)&&(d.transition=A(0,t.transitions.length,k[e.charCodeAt(n++)])),Ot(d.mdeffects)&&(d.chord=A(0,t.chords.length,k[e.charCodeAt(n++)]),d.chord==t.chords.dictionary.arpeggio.index&&(o||c||u||b)&&(d.arpeggioSpeed=k[e.charCodeAt(n++)],d.fastTwoNoteArp=!!k[e.charCodeAt(n++)]),d.chord==t.chords.dictionary.monophonic.index&&b&&!f&&(d.monoChordTone=k[e.charCodeAt(n++)])),Et(d.mdeffects)&&(d.pitchShift=A(0,t.pitchShiftRange,k[e.charCodeAt(n++)])),Mt(d.mdeffects)&&(s?(d.detune=A(t.detuneMin,t.detuneMax+1,k[e.charCodeAt(n++)]),d.detune=Math.round((d.detune-9)*(Math.abs(d.detune-9)+1)/2+t.detuneCenter)):d.detune=A(t.detuneMin,t.detuneMax+1,(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)])),Dt(d.mdeffects)&&(d.vibrato=A(0,t.vibratos.length+1,k[e.charCodeAt(n++)]),d.vibrato==t.vibratos.length&&(o||c||u||b)?(d.vibratoDepth=A(0,t.modulators.dictionary["vibrato depth"].maxRawVol+1,k[e.charCodeAt(n++)])/25,d.vibratoSpeed=A(0,t.modulators.dictionary["vibrato speed"].maxRawVol+1,k[e.charCodeAt(n++)]),d.vibratoDelay=A(0,t.modulators.dictionary["vibrato delay"].maxRawVol+1,k[e.charCodeAt(n++)]),d.vibratoType=A(0,t.vibratoTypes.length,k[e.charCodeAt(n++)])):(d.vibratoDepth=t.vibratos[d.vibrato].amplitude,d.vibratoSpeed=10,d.vibratoDelay=t.vibratos[d.vibrato].delayTicks/2,d.vibratoType=t.vibratos[d.vibrato].type))}}break;case 118:if(y&&s){let d=k[e.charCodeAt(n++)],F=this.channels[d].instruments[0];F.volume=Math.round(A(-t.volumeRange/2,1,-k[e.charCodeAt(n++)]*5))}else if(p&&s)for(let d=0;d<this.getChannelCount();d++)for(let F of this.channels[d].instruments)F.volume=Math.round(A(-t.volumeRange/2,1,-k[e.charCodeAt(n++)]*5));else if(S&&s){let d=this.channels[D].instruments[R];d.volume=Math.round(A(-t.volumeRange/2,1,-k[e.charCodeAt(n++)]*5))}else if(s){let d=this.channels[D].instruments[R];d.volume=Math.round(A(-t.volumeRange/2,1,-k[e.charCodeAt(n++)]*25/7))}else if(l){let d=this.channels[D].instruments[R];d.volume=Math.round(A(-t.volumeRange/2,t.volumeRange/2+1,(k[e.charCodeAt(n++)]<<6|k[e.charCodeAt(n++)])-t.volumeRange/2))}else{let d=this.channels[D].instruments[R];d.volume=Math.round(A(-t.volumeRange/2,t.volumeRange/2+1,(k[e.charCodeAt(n++)]<<6|k[e.charCodeAt(n++)])-t.volumeRange/2)*2)}break;case 76:break;case 68:{let d=this.channels[D].instruments[R];(o&&f||h&&c)&&(d.detune=A(t.detuneMin,t.detuneMax+1,((k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)])*4),d.mdeffects|=2)}break;case 77:{let d=this.channels[D].instruments[R];for(let q=0;q<64;q++)d.customChipWave[q]=A(-24,25,k[e.charCodeAt(n++)]-24);let F=0;for(let q=0;q<d.customChipWave.length;q++)F+=d.customChipWave[q];let C=F/d.customChipWave.length,I=0,M=0;for(let q=0;q<d.customChipWave.length;q++)I+=M,M=d.customChipWave[q]-C,d.customChipWaveIntegral[q]=I;d.customChipWaveIntegral[64]=0}break;case 79:{let d=k[e.charCodeAt(n++)];d==63?this.restoreLimiterDefaults():(this.compressionRatio=d<10?d/10:1+(d-10)/60,d=k[e.charCodeAt(n++)],this.limitRatio=d<10?d/10:d-9,this.limitDecay=k[e.charCodeAt(n++)],this.limitRise=k[e.charCodeAt(n++)]*250+2e3,this.compressionThreshold=k[e.charCodeAt(n++)]/20,this.limitThreshold=k[e.charCodeAt(n++)]/20,this.masterGain=((k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)])/50)}break;case 85:for(let d=0;d<this.getChannelCount();d++){var G;h&&!c&&!u&&!b?G=k[e.charCodeAt(n++)]:G=(k[e.charCodeAt(n++)]<<6)+k[e.charCodeAt(n++)],this.channels[d].name=decodeURIComponent(e.substring(n,n+G)),n+=G,l&&(this.channels[d].color=k[e.charCodeAt(n++)])}break;case 65:{let d=this.channels[D].instruments[R];if(d.type==1)d.algorithm=A(0,t.algorithms.length,k[e.charCodeAt(n++)]);else if(d.algorithm6Op=A(0,t.algorithms6Op.length,k[e.charCodeAt(n++)]),d.customAlgorithm.fromPreset(d.algorithm6Op),e.charCodeAt(n)==67){let F=A(1,t.operatorCount+2+1,k[e.charCodeAt(n+1)]);n++;let C=[];if(e.charCodeAt(n+1)==113){n++;let I=0;for(n++;e.charCodeAt(n)!=113;){C[I]=[];let M=0;for(;e.charCodeAt(n)!=82;)C[I][M]=A(1,t.operatorCount+3,k[e.charCodeAt(n)]),M++,n++;I++,n++}d.customAlgorithm.set(F,C),n++}}if(w&&s||f&&o||h&&c){let F=L[D][R];d.convertLegacySettings(F,v)}}break;case 120:if(c&&!h&&p){let d=k[e.charCodeAt(n++)];d+62>85&&document.URL.substring(document.URL.length-13).toLowerCase()!="legacysamples"&&(P||(P=!0,t.willReloadForCustomSamples=!0,we.customSamples=["legacySamples"],tt(0))),d+62>78?this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,d+63):d+62>67?this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,d+61):d+62==67?this.channels[D].instruments[R].chipWave=40:this.channels[D].instruments[R].chipWave=A(0,t.chipWaves.length,d+62)}else{let d=this.channels[D].instruments[R];d.supersawDynamism=A(0,t.supersawDynamismMax+1,k[e.charCodeAt(n++)]),d.supersawSpread=A(0,t.supersawSpreadMax+1,k[e.charCodeAt(n++)]),d.supersawShape=A(0,t.supersawShapeMax+1,k[e.charCodeAt(n++)])}break;case 70:{let d=this.channels[D].instruments[R];if(d.type==1)d.feedbackType=A(0,t.feedbacks.length,k[e.charCodeAt(n++)]);else{d.feedbackType6Op=A(0,t.feedbacks6Op.length,k[e.charCodeAt(n++)]),d.customFeedbackType.fromPreset(d.feedbackType6Op);let F=[];if(e.charCodeAt(n)==113){let C=0;for(n++;e.charCodeAt(n)!=113;){F[C]=[];let I=0;for(;e.charCodeAt(n)!=82;)F[C][I]=A(1,t.operatorCount+2,k[e.charCodeAt(n)]),I++,n++;C++,n++}d.customFeedbackType.set(F),n++}}}break;case 66:this.channels[D].instruments[R].feedbackAmplitude=A(0,t.operatorAmplitudeMax+1,k[e.charCodeAt(n++)]);break;case 86:if(w&&s||f&&o||h&&c){let d=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],F=this.channels[D].instruments[R],C=L[D][R],I=k[e.charCodeAt(n++)];(m&&c||!c&&!u&&!b)&&(I=d[I]),C.feedbackEnvelope=i.ae(k[I]),F.convertLegacySettings(C,v)}break;case 81:{let d=this.channels[D].instruments[R];if(y&&c){let F=[4,5,6,7,8,10,12,13,14,15,16,18,20,22,24,2,1,9,17,19,21,23,0,3];for(let C=0;C<(d.type==11?6:t.operatorCount);C++)d.operators[C].frequency=F[A(0,F.length,k[e.charCodeAt(n++)])]}else if(!c&&!u&&!b){let F=[4,5,6,7,8,10,12,13,14,15,16,18,20,23,27,2,1,9,17,19,21,23,0,3];for(let C=0;C<(d.type==11?6:t.operatorCount);C++)d.operators[C].frequency=F[A(0,F.length,k[e.charCodeAt(n++)])]}else for(let F=0;F<(d.type==11?6:t.operatorCount);F++)d.operators[F].frequency=A(0,t.operatorFrequencies.length,k[e.charCodeAt(n++)])}break;case 80:{let d=this.channels[D].instruments[R];for(let F=0;F<(d.type==11?6:t.operatorCount);F++)d.operators[F].amplitude=A(0,t.operatorAmplitudeMax+1,k[e.charCodeAt(n++)])}break;case 69:{let d=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,27,28,29,32,33,34,31,11],F=[0,1,2,4,5,6,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,58,59,60],C=[0,1,2,3,4,5,6,7,8,8,9,10,11,12,13,14],I=this.channels[D].instruments[R];if(w&&s||f&&o||h&&c){let M=L[D][R];M.operatorEnvelopes=[];for(let q=0;q<(I.type==11?6:t.operatorCount);q++){let O=k[e.charCodeAt(n++)];(m&&c||s)&&(O=d[O]),o&&(O=F[O]),M.operatorEnvelopes[q]=i.ae(O)}I.convertLegacySettings(M,v)}else{let M=A(0,t.maxEnvelopeCount+1,k[e.charCodeAt(n++)]),q=!1;(o&&!p||u&&!f||b)&&(I.envelopeSpeed=A(0,t.modulators.dictionary["envelope speed"].maxRawVol+1,k[e.charCodeAt(n++)]),(!b||f)&&(q=!!k[e.charCodeAt(n++)]));for(let ee=0;ee<M;ee++){let be=A(0,t.instrumentAutomationTargets.length,k[e.charCodeAt(n++)]),Ie=0,_=t.instrumentAutomationTargets[be].maxCount;_>1&&(Ie=A(0,_,k[e.charCodeAt(n++)]));let V=k[e.charCodeAt(n++)];(m&&c||s)&&(V=d[V]),o&&(V=F[V]),!b&&V>=2&&V++;let K=!1,Q=1;!b||y?(K=!0,Q=t.envelopes[V].speed,V=t.envelopes[V].type):h&&V>=3&&V++;let Z=!1;(b&&!y&&h||K)&&(V==9&&(Z=!0),V=C[V]);let ae=A(0,b&&!y||K?t.newEnvelopes.length:t.envelopes.length,V),fe=0,ie=t.maxPitch,ye=!1;Q=b&&!y?t.newEnvelopes[ae].speed:Q;let re=0,ue=1,le=2,oe=2,ce=0;if(b&&!h&&(t.newEnvelopes[ae].name=="lfo"?(ce=A(0,7,k[e.charCodeAt(n++)]),(ce==5||ce==6)&&(le=A(1,t.randomEnvelopeStepsMax+1,k[e.charCodeAt(n++)]))):t.newEnvelopes[ae].name=="random"&&(le=A(1,t.randomEnvelopeStepsMax+1,k[e.charCodeAt(n++)]),oe=A(1,t.randomEnvelopeSeedMax+1,k[e.charCodeAt(n++)]),ce=A(0,4,k[e.charCodeAt(n++)]))),b&&!y){if(t.newEnvelopes[ae].name=="pitch")if(I.isNoiseInstrument)fe=A(0,t.drumCount,k[e.charCodeAt(n++)]),ie=A(0,t.drumCount,k[e.charCodeAt(n++)]);else{let $=k[e.charCodeAt(n++)];fe=A(0,t.maxPitch+1,$*64+k[e.charCodeAt(n++)]),$=k[e.charCodeAt(n++)],ie=A(0,t.maxPitch+1,$*64+k[e.charCodeAt(n++)])}let X=k[e.charCodeAt(n++)];b&&!f&&(q=X>>1==1),ye=(X&1)==1,t.newEnvelopes[ae].name!="pitch"&&t.newEnvelopes[ae].name!="note size"&&t.newEnvelopes[ae].name!="punch"&&t.newEnvelopes[ae].name!="none"&&(Q=t.perEnvelopeSpeedIndices[k[e.charCodeAt(n++)]]),re=k[e.charCodeAt(n++)]/10,ue=k[e.charCodeAt(n++)]/10}if((!b||h)&&Z&&(ce=0,ye?(ue=Math.floor(ue/2*10)/10,re=Math.floor(re/2*10)/10):(ue=Math.floor((.5+(ue-re)/2)*10)/10,re=.5)),I.addEnvelope(be,Ie,ae,!0,fe,ie,ye,Q,re,ue,le,oe,ce,q),b&&y&&!m){let X=k[e.charCodeAt(n++)];I.envelopes[ee].pitchEnvelopeStart=X*64+k[e.charCodeAt(n++)],X=k[e.charCodeAt(n++)],I.envelopes[ee].pitchEnvelopeEnd=X*64+k[e.charCodeAt(n++)],I.envelopes[ee].inverse=k[e.charCodeAt(n++)]==1}}let O=0,j=t.maxPitch,te=!1;if(b&&m){let ee=k[e.charCodeAt(n++)];O=ee*64+k[e.charCodeAt(n++)],ee=k[e.charCodeAt(n++)],j=ee*64+k[e.charCodeAt(n++)],te=k[e.charCodeAt(n++)]===1;for(let be=0;be<M;be++)I.envelopes[be].pitchEnvelopeStart=O,I.envelopes[be].pitchEnvelopeEnd=j,I.envelopes[be].inverse=t.envelopes[I.envelopes[be].envelope].name=="pitch"?te:!1}}}break;case 82:{let d=this.channels[D].instruments[R];if(y&&c)for(let F=0;F<t.operatorCount;F++){let C=[0,1,3,2,2,2,4,5],I=A(0,C.length,k[e.charCodeAt(n++)]);I==3?d.operators[F].pulseWidth=5:I==4?d.operators[F].pulseWidth=4:I==5&&(d.operators[F].pulseWidth=6),d.operators[F].waveform=C[I]}else for(let F=0;F<(d.type==11?6:t.operatorCount);F++){if(o){let C=[0,1,3,2,4,5];d.operators[F].waveform=C[A(0,t.operatorWaves.length,k[e.charCodeAt(n++)])]}else d.operators[F].waveform=A(0,t.operatorWaves.length,k[e.charCodeAt(n++)]);d.operators[F].waveform==2&&(d.operators[F].pulseWidth=A(0,t.pwmOperatorWaves.length,k[e.charCodeAt(n++)]))}}break;case 83:{let d=this.channels[D].instruments[R];if(d.type==3){let F=Math.ceil(t.spectrumControlPoints*t.spectrumControlPointBits/6),C=new Ye(e,n,n+F);for(let I=0;I<t.spectrumControlPoints;I++)d.spectrumWave.spectrum[I]=C.read(t.spectrumControlPointBits);d.spectrumWave.markCustomWaveDirty(),n+=F}else if(d.type==4){let F=Math.ceil(t.drumCount*t.spectrumControlPoints*t.spectrumControlPointBits/6),C=new Ye(e,n,n+F);for(let I=0;I<t.drumCount;I++){for(let M=0;M<t.spectrumControlPoints;M++)d.drumsetSpectrumWaves[I].spectrum[M]=C.read(t.spectrumControlPointBits);d.drumsetSpectrumWaves[I].markCustomWaveDirty()}n+=F}else throw new Error("Unhandled instrument type for spectrum song tag code.")}break;case 72:{let d=this.channels[D].instruments[R],F=Math.ceil(t.harmonicsControlPoints*t.harmonicsControlPointBits/6),C=new Ye(e,n,n+F);for(let I=0;I<t.harmonicsControlPoints;I++)d.harmonicsWave.harmonics[I]=C.read(t.harmonicsControlPointBits);d.harmonicsWave.markCustomWaveDirty(),n+=F}break;case 88:if(o&&f||c&&h){let d=this.channels[D].instruments[R];if(d.aliases=!!k[e.charCodeAt(n++)],d.aliases){let F=d.addEffect(3);F.distortion=0}}else if(u||b){let d=this.channels[D].instruments[R];d.decimalOffset=A(0,51,k[e.charCodeAt(n++)])}break;case 98:{let d;if(y&&s){let F=k[e.charCodeAt(n++)],C=k[e.charCodeAt(n++)];d=Math.ceil(C*.5);let I=new Ye(e,n,n+d);for(let M=0;M<C;M++)this.channels[F].bars[M]=I.read(3)+1}else if(f&&s){let F=0;for(;1<<F<this.patternsPerChannel;)F++;d=Math.ceil(this.getChannelCount()*this.barCount*F/6);let C=new Ye(e,n,n+d);for(let I=0;I<this.getChannelCount();I++)for(let M=0;M<this.barCount;M++)this.channels[I].bars[M]=C.read(F)+1}else{let F=0;for(;1<<F<this.patternsPerChannel+1;)F++;d=Math.ceil(this.getChannelCount()*this.barCount*F/6);let C=new Ye(e,n,n+d);for(let I=0;I<this.getChannelCount();I++)for(let M=0;M<this.barCount;M++)this.channels[I].bars[M]=C.read(F)}n+=d}break;case 112:{let d=0,F,C=!(h&&o||s),I=C?4:3,M=C?16:8;if(y&&s)F=k[e.charCodeAt(n++)],n++,d=k[e.charCodeAt(n++)],d=d<<6,d+=k[e.charCodeAt(n++)];else{F=0;let _=ze(1,4,k[e.charCodeAt(n++)]);for(;_>0;)d=d<<6,d+=k[e.charCodeAt(n++)],_--}let q=new Ye(e,n,n+d);n+=d;let O=i.getNeededBits(t.noteSizeMax),j=-1,te=-1,ee=-1,be=o,Ie=30;for(;;){let _=this.channels[F],V=this.getChannelIsNoise(F),K=this.getChannelIsMod(F),Q=this.getMaxInstrumentsPerPattern(F),Z=i.getNeededBits(Q-t.instrumentCountMin),ae=i.getNeededBits(_.instruments.length-1);if(K){let le=f&&o||h&&c,oe=le?ae:i.getNeededBits(this.getMaxInstrumentsPerChannel()+2);for(let ce=0;ce<_.instruments.length;ce++){let X=_.instruments[ce];for(let $=0;$<t.modCount;$++){let de=q.read(2);switch(de){case 0:let ge=q.read(8);for(let Y=0;Y<ge;Y++)X.modChannels[$][Y]=A(0,this.pitchChannelCount+this.noiseChannelCount+1,q.read(8));let Fe=q.read(8);for(let Y=0;Y<Fe;Y++)X.modInstruments[$][Y]=A(0,this.channels[X.modChannels[$][Y]].instruments.length+2,q.read(oe));break;case 1:X.modChannels[$][0]=this.pitchChannelCount+A(0,this.noiseChannelCount+1,q.read(8)),X.modInstruments[$][0]=A(0,this.channels[X.modChannels[$][0]].instruments.length+2,q.read(ae));break;case 2:X.modChannels[$][0]=-1;break;case 3:X.modChannels[$][0]=-2;break}if(de!=3&&(X.modulators[$]=q.read(6)),!le&&(t.modulators[X.modulators[$]].name=="post eq"||t.modulators[X.modulators[$]].name=="pre eq"||t.modulators[X.modulators[$]].name=="song eq")&&(X.modFilterTypes[$]=q.read(6)),(t.modulators[X.modulators[$]].name=="individual envelope speed"||t.modulators[X.modulators[$]].name=="reset envelope"||t.modulators[X.modulators[$]].name=="individual envelope lower bound"||t.modulators[X.modulators[$]].name=="individual envelope upper bound")&&(X.modEnvelopeNumbers[$]=q.read(6)),le&&X.modChannels[$][0]>=0){let ge=this.channels[X.modChannels[$][0]].instruments[X.modInstruments[$][0]].effectsIncludeType(5);X.modulators[$]==7?(ge?X.modulators[$]=t.modulators.dictionary["note filt cut"].index:X.modulators[$]=t.modulators.dictionary["eq filt cut"].index,X.modFilterTypes[$]=1):X.modulators[$]==8&&(ge?X.modulators[$]=t.modulators.dictionary["note filt peak"].index:X.modulators[$]=t.modulators.dictionary["eq filt peak"].index,X.modFilterTypes[$]=2)}else le&&X.modulators[$]==t.modulators.dictionary["song reverb"].index&&(j=F,te=ce,ee=$);le&&t.modulators[X.modulators[$]].associatedEffect!=11&&this.channels[X.modChannels[$][0]].instruments[X.modInstruments[$][0]].addEffect(t.modulators[X.modulators[$]].associatedEffect)}}}let fe=[];for(let le=0;le<_.instruments.length;le++){fe[le]=[];for(let oe=0;oe<t.modCount;oe++)fe[le][t.modCount-1-oe]=1+3*+((f&&o||h&&c)&&K&&_.instruments[le].modulators[oe]==t.modulators.dictionary.detune.index)}let ie=V||K?0:_.octave*12,ye=V||K?4:ie,re=K?[0,1,2,3,4,5]:V?[4,6,7,2,3,8,0,10]:[0,7,12,19,24,-5,-12],ue=[];for(let le=0;le<re.length;le++)re[le]+=ie;for(let le=0;le<this.patternsPerChannel;le++){let oe=_.patterns[le];if(w&&s||f&&o||h&&c)oe.instruments[0]=ze(0,_.instruments.length-1,q.read(ae)),oe.instruments.length=1;else if(this.patternInstruments){let de=ze(t.instrumentCountMin,Q,q.read(Z)+t.instrumentCountMin);for(let ge=0;ge<de;ge++)oe.instruments[ge]=ze(0,_.instruments.length-1+ +K*2,q.read(ae));oe.instruments.length=de}else oe.instruments[0]=0,oe.instruments.length=t.instrumentCountMin;if(!(s&&y)&&q.read(1)==0){oe.notes.length=0;continue}let ce=0,X=oe.notes,$=0;for(;ce<this.beatsPerBar*t.partsPerBeat+ +K;){let de=q.read(1)==1,ge=!1,Fe=0;if(de?Fe=ze(0,ue.length-1,q.readLongTail(0,0)):ge=q.read(1)==1,!de&&!ge)if(K){let Y=q.read(1)==1,me=q.readPartDuration();Y?ce-=me:ce+=me}else{let Y=S&&s?q.readLegacyPartDuration()*t.partsPerBeat/t.rhythms[this.rhythm].stepsPerBeat:q.readPartDuration();ce+=Y}else{let Y;if(de)Y=ue[Fe],ue.splice(Fe,1);else{if(Y={},C)q.read(1)==1?Y.pitchCount=q.read(3)+2:Y.pitchCount=1;else for(Y.pitchCount=1;Y.pitchCount<4&&q.read(1)==1;)Y.pitchCount++;l?q.read(1)==1&&(Y.startOffset=q.read(31)):Y.startOffset=0,Y.pinCount=q.readPinCount(),s?Y.initialSize=q.read(2)*2:K?Y.initialSize=q.read(11):Y.initialSize=q.read(O),Y.pins=[],Y.length=0,Y.bendCount=0;for(let Ce=0;Ce<Y.pinCount;Ce++){let qe={};qe.pitchBend=q.read(1)==1,qe.pitchBend&&Y.bendCount++,Y.length+=S&&s?q.readLegacyPartDuration()*t.partsPerBeat/t.rhythms[this.rhythm].stepsPerBeat:q.readPartDuration(),qe.time=Y.length,s?qe.size=q.read(2)*2:K?qe.size=q.read(11):qe.size=q.read(O),Y.pins.push(qe)}}ue.unshift(Y),ue.length>10&&ue.pop();let me;X.length<=$?(me=new st(0,ce,ce+Y.length,Y.initialSize,!1,Y.startOffset),X[$++]=me):(me=X[$++],me.start=ce,me.end=ce+Y.length,me.pins[0].size=Y.initialSize);let Se,Me=0,Ae=[];for(let Ce=0;Ce<Y.pitchCount+Y.bendCount;Ce++){if(q.read(1)==1){let Be=ze(0,re.length-1,q.read(I));Se=re[Be],re.splice(Be,1)}else{let Be=q.readPitchInterval();Se=ye;let We=Be;for(;We>0;){for(Se++;re.indexOf(Se)!=-1;)Se++;We--}for(;We<0;){for(Se--;re.indexOf(Se)!=-1;)Se--;We++}}re.unshift(Se),re.length>M&&re.pop(),Ce<Y.pitchCount?me.pitches[Me++]=Se:Ae.push(Se),Ce==Y.pitchCount-1?ye=me.pitches[0]:ye=Se}me.pitches.length=Me,Ae.unshift(me.pitches[0]);let De=K&&_.instruments[oe.instruments[0]].modulators[t.modCount-1-me.pitches[0]]===t.modulators.dictionary.tempo.index,ke=0;be&&De&&(ke=Ie-t.tempoMin),K&&(me.pins[0].size+=ke,me.pins[0].size*=fe[oe.instruments[0]][me.pitches[0]]);let Le=1;for(let Ce of Y.pins){Ce.pitchBend&&Ae.shift();let qe=Ae[0]-me.pitches[0];if(me.pins.length<=Le)K?me.pins[Le++]=At(qe,Ce.time,Ce.size*fe[oe.instruments[0]][me.pitches[0]]+ke):me.pins[Le++]=At(qe,Ce.time,Ce.size);else{let Be=me.pins[Le++];Be.interval=qe,Be.time=Ce.time,K?Be.size=Ce.size*fe[oe.instruments[0]][me.pitches[0]]+ke:Be.size=Ce.size}}me.pins.length=Le,me.start==0&&(w&&s||f&&o||h&&c?h&&!u&&!b||s?me.continuesLastPattern=!1:me.continuesLastPattern=_.instruments[oe.instruments[0]].legacyTieOver:me.continuesLastPattern=q.read(1)==1),ce=ze(0,this.beatsPerBar*t.partsPerBeat,me.end)}}X.length=$}if(y&&s)break;if(F++,F>=this.getChannelCount())break}if((o&&f||h&&c)&&ee>=0){for(let _=0;_<this.channels.length;_++)for(let V=0;V<this.channels[_].instruments.length;V++)if(this.channels[_].instruments[V].effectsIncludeType(0),j==_&&te==V){let Q=this.channels[_].bars[0];if(Q>0){let Z=this.channels[_].patterns[Q-1],ae=6;for(let fe of Z.notes)fe.pitches[0]==t.modCount-1-ee&&(ae=Math.min(ae,fe.start));ae>0&&Z.notes.push(new st(t.modCount-1-ee,0,ae,E))}else if(this.channels[_].patterns.length<t.barCountMax){let Z=new nt;if(this.channels[_].patterns.push(Z),this.channels[_].bars[0]=this.channels[_].patterns.length,this.channels[_].patterns.length>this.patternsPerChannel){for(let ae=0;ae<this.channels.length;ae++)this.channels[ae].patterns.length<=this.patternsPerChannel&&this.channels[ae].patterns.push(new nt);this.patternsPerChannel++}Z.instruments.length=1,Z.instruments[0]=te,Z.notes.length=0,Z.notes.push(new st(t.modCount-1-ee,0,6,E))}}}}break;default:throw new Error("Unrecognized song tag code "+String.fromCharCode(N)+" at index "+(n-1)+" "+e.substring(0,n))}t.willReloadForCustomSamples&&(window.location.hash=this.toBase64String(),setTimeout(()=>{location.reload()},50))}static Pe(e){try{return!!new URL(e)}catch{return!1}}static de(e,a,n,r,s){let c=t.chipWaves[0].samples,u=t.chipWaves[0].samplesR||t.chipWaves[0].samples,b=t.rawRawChipWaves[0].samples,l=t.rawRawChipWaves[0].samplesR||t.chipWaves[0].samples,g=a.length;a.push(e);let m=t.chipWaves.length,y=e,h=44100,f=!1,p=60,S=!1,x=null,w=null,v=null,P=null,B=!1,L=!1,E=!1,D=e.indexOf("!"),R=-1;if(D===0&&(R=e.indexOf("!",D+1),R!==-1)){let z=e.slice(D+1,R).split(",");for(let W of z){let H=W.charAt(0),U=W.slice(1,W.length);H==="s"?h=A(8e3,96001,Qt(U,44100)):H==="r"?p=Qt(U,60):H==="p"?f=!0:H==="a"?(x=Jt(U,null),x!=null&&(S=!0)):H==="b"?(w=Jt(U,null),w!=null&&(S=!0)):H==="c"?(v=Jt(U,null),v!=null&&(S=!0)):H==="d"?(P=Jt(U,null),P!=null&&(P=A(0,4,P),S=!0)):H==="e"?(B=!0,S=!0):H==="f"&&(L=!0,S=!0)}y=e.slice(R+1,e.length),E=!0}let N=null;if(i.Pe(y))N=new URL(y);else return alert(e+" is not a valid url"),!1;if(s&&!E&&N!=null){let z=function(){y=e.slice(0,e.indexOf(",")),N=new URL(y),h=A(8e3,96001,Qt(e.slice(e.indexOf(",")+1),44100))},W=function(){y=e.slice(0,e.indexOf("!")),N=new URL(y),p=Qt(e.slice(e.indexOf("!")+1),60)};e.indexOf("@")!=-1&&(y=e.replaceAll("@",""),N=new URL(y),f=!0),e.indexOf(",")!=-1&&e.indexOf("!")!=-1?e.indexOf(",")<e.indexOf("!")?(W(),z()):(z(),W()):(e.indexOf(",")!=-1&&z(),e.indexOf("!")!=-1&&W())}if(N!=null){let z=y,W=[];h!==44100&&W.push("s"+h),p!==60&&W.push("r"+p),f&&W.push("p"),S&&(x!=null&&W.push("a"+x),w!=null&&W.push("b"+w),v!=null&&W.push("c"+v),P!=null&&W.push("d"+P),B&&W.push("e"),L&&W.push("f")),W.length>0&&(z="!"+W.join(",")+"!"+y),a[g]=z;let H;H=decodeURIComponent(N.pathname.replace(/^([^\/]*\/)+/,""));let U=1;t.chipWaves[m]={name:H,expression:U,isCustomSampled:!0,isPercussion:f,rootKey:p,sampleRate:h,samples:c,samplesR:u,index:m},t.rawChipWaves[m]={name:H,expression:U,isCustomSampled:!0,isPercussion:f,rootKey:p,sampleRate:h,samples:b,samplesR:l,index:m},t.rawRawChipWaves[m]={name:H,expression:U,isCustomSampled:!0,isPercussion:f,rootKey:p,sampleRate:h,samples:b,samplesR:l,index:m};let G={type:"chip",eqFilter:[],effects:[],mdeffects:[],transition:"normal",fadeInSeconds:0,fadeOutTicks:-3,chord:"harmony",wave:H,unison:"none",envelopes:[],chipWaveInStereo:!0};S&&(G.isUsingAdvancedLoopControls=!0,G.chipWaveLoopStart=x??0,G.chipWaveLoopEnd=w??2,G.chipWaveLoopMode=P??0,G.chipWavePlayBackwards=B,G.chipWaveStartOffset=v??0);let d={index:0,name:H,midiProgram:80,settings:G};n.push(d),t.willReloadForCustomSamples||Fa(y,m,G,{isUsingAdvancedLoopControls:S,chipWaveLoopStart:x,chipWaveLoopEnd:w,chipWaveLoopMode:P,chipWavePlayBackwards:B,chipWaveStartOffset:v},h),r.statusTable[m]=0,r.urlTable[m]=y,r.totalSamples++}return!0}static ie(){t.chipWaves=he(t.chipWaves.slice(0,t.firstIndexForSamplesInChipWaveList)),t.rawChipWaves=he(t.rawChipWaves.slice(0,t.firstIndexForSamplesInChipWaveList)),t.rawRawChipWaves=he(t.rawRawChipWaves.slice(0,t.firstIndexForSamplesInChipWaveList))}static ue(){we.customSamples=null,i.ie(),ve.statusTable={},ve.urlTable={},ve.totalSamples=0,ve.samplesLoaded=0,kt.dispatchEvent(new it(ve.totalSamples,ve.samplesLoaded))}toJsonObject(e=!0,a=1,n=!0){let r=[];for(let o=0;o<this.getChannelCount();o++){let c=this.channels[o],u=[],b=this.getChannelIsNoise(o),l=this.getChannelIsMod(o);for(let h of c.instruments)u.push(h.toJsonObject());let g=[];for(let h of c.patterns)g.push(h.toJsonObject(this,c,l));let m=[];if(e)for(let h=0;h<this.loopStart;h++)m.push(c.bars[h]);for(let h=0;h<a;h++)for(let f=this.loopStart;f<this.loopStart+this.loopLength;f++)m.push(c.bars[f]);if(n)for(let h=this.loopStart+this.loopLength;h<this.barCount;h++)m.push(c.bars[h]);let y={type:l?"mod":b?"drum":"pitch",name:c.name,instruments:u,patterns:g,sequence:m};b||(y.octaveScrollBar=c.octave-1),r.push(y)}let s={name:this.title,format:i.ye,version:i.le,scale:t.scales[this.scale].name,customScale:this.scaleCustom,key:t.keys[this.key].name,keyOctave:this.octave,introBars:this.loopStart,loopBars:this.loopLength,beatsPerBar:this.beatsPerBar,ticksPerBeat:t.rhythms[this.rhythm].stepsPerBeat,beatsPerMinute:this.tempo,reverb:this.reverb,masterGain:this.masterGain,compressionThreshold:this.compressionThreshold,limitThreshold:this.limitThreshold,limitDecay:this.limitDecay,limitRise:this.limitRise,limitRatio:this.limitRatio,compressionRatio:this.compressionRatio,songEq:this.eqFilter.toJsonObject(),layeredInstruments:this.layeredInstruments,patternInstruments:this.patternInstruments,channels:r};for(let o=0;o<t.filterMorphCount-1;o++)s["songEq"+o]=this.eqSubFilters[o];return we.customSamples!=null&&we.customSamples.length>0&&(s.customSamples=we.customSamples),s}fromJsonObject(e,a="auto"){if(this.initToDefault(!0),!e)return;a=="auto"&&e.format=="BeepBox"&&(e.riff!=null&&(a="modbox"),e.masterGain!=null&&(a="jummbox"));let n=(a=="auto"?e.format:a).toLowerCase();if(e.name!=null&&(this.title=e.name),e.customSamples!=null){let y=e.customSamples;if(we.customSamples==null||we.customSamples.join(", ")!=y.join(", ")){t.willReloadForCustomSamples=!0,i.ie();let h=!1,f=!1,p=!1,S=[],x=[];for(let w of y)w.toLowerCase()==="legacysamples"?h||(h=!0,S.push(w),tt(0)):w.toLowerCase()==="nintariboxsamples"?f||(f=!0,S.push(w),tt(1)):w.toLowerCase()==="mariopaintboxsamples"?p||(p=!0,S.push(w),tt(2)):i.de(w,S,x,ve,!1);if(S.length>0&&(we.customSamples=S),x.length>0){let w=he(x);we.presetCategories[we.presetCategories.length]={name:"Custom Sample Presets",presets:w,index:we.presetCategories.length}}}}else{let y=!1;if(e.channels!=null)for(let h=0;h<e.channels.length;h++){let f=e.channels[h];if(f.type==="pitch"&&Array.isArray(f.instruments)){let p=f.instruments;for(let S=0;S<p.length;S++){let x=p[S];if(x.type!=="chip"||x.wave==null)continue;let w=x.wave,v=["paandorasbox kick","paandorasbox snare","paandorasbox piano1","paandorasbox WOW","paandorasbox overdrive","paandorasbox trumpet","paandorasbox saxophone","paandorasbox orchestrahit","paandorasbox detatched violin","paandorasbox synth","paandorasbox sonic3snare","paandorasbox come on","paandorasbox choir","paandorasbox overdriveguitar","paandorasbox flute","paandorasbox legato violin","paandorasbox tremolo violin","paandorasbox amen break","paandorasbox pizzicato violin","paandorasbox tim allen grunt","paandorasbox tuba","paandorasbox loopingcymbal","paandorasbox standardkick","paandorasbox standardsnare","paandorasbox closedhihat","paandorasbox foothihat","paandorasbox openhihat","paandorasbox crashcymbal","paandorasbox pianoC4","paandorasbox liver pad","paandorasbox marimba","paandorasbox susdotwav","paandorasbox wackyboxtts","paandorasbox peppersteak_1","paandorasbox peppersteak_2","paandorasbox vinyl_noise","paandorasbeta slap bass","paandorasbeta HD EB overdrive guitar","paandorasbeta sunsoft bass","paandorasbeta masculine choir","paandorasbeta feminine choir","paandorasbeta tololoche","paandorasbeta harp","paandorasbeta pan flute","paandorasbeta krumhorn","paandorasbeta timpani","paandorasbeta crowd hey","paandorasbeta wario land 4 brass","paandorasbeta wario land 4 rock organ","paandorasbeta wario land 4 DAOW","paandorasbeta wario land 4 hour chime","paandorasbeta wario land 4 tick","paandorasbeta kirby kick","paandorasbeta kirby snare","paandorasbeta kirby bongo","paandorasbeta kirby click","paandorasbeta sonor kick","paandorasbeta sonor snare","paandorasbeta sonor snare (left hand)","paandorasbeta sonor snare (right hand)","paandorasbeta sonor high tom","paandorasbeta sonor low tom","paandorasbeta sonor hihat (closed)","paandorasbeta sonor hihat (half opened)","paandorasbeta sonor hihat (open)","paandorasbeta sonor hihat (open tip)","paandorasbeta sonor hihat (pedal)","paandorasbeta sonor crash","paandorasbeta sonor crash (tip)","paandorasbeta sonor ride"],P=["pandoraasbox kick","pandoraasbox snare","pandoraasbox piano1","pandoraasbox WOW","pandoraasbox overdrive","pandoraasbox trumpet","pandoraasbox saxophone","pandoraasbox orchestrahit","pandoraasbox detatched violin","pandoraasbox synth","pandoraasbox sonic3snare","pandoraasbox come on","pandoraasbox choir","pandoraasbox overdriveguitar","pandoraasbox flute","pandoraasbox legato violin","pandoraasbox tremolo violin","pandoraasbox amen break","pandoraasbox pizzicato violin","pandoraasbox tim allen grunt","pandoraasbox tuba","pandoraasbox loopingcymbal","pandoraasbox standardkick","pandoraasbox standardsnare","pandoraasbox closedhihat","pandoraasbox foothihat","pandoraasbox openhihat","pandoraasbox crashcymbal","pandoraasbox pianoC4","pandoraasbox liver pad","pandoraasbox marimba","pandoraasbox susdotwav","pandoraasbox wackyboxtts","pandoraasbox peppersteak_1","pandoraasbox peppersteak_2","pandoraasbox vinyl_noise","pandoraasbeta slap bass","pandoraasbeta HD EB overdrive guitar","pandoraasbeta sunsoft bass","pandoraasbeta masculine choir","pandoraasbeta feminine choir","pandoraasbeta tololoche","pandoraasbeta harp","pandoraasbeta pan flute","pandoraasbeta krumhorn","pandoraasbeta timpani","pandoraasbeta crowd hey","pandoraasbeta wario land 4 brass","pandoraasbeta wario land 4 rock organ","pandoraasbeta wario land 4 DAOW","pandoraasbeta wario land 4 hour chime","pandoraasbeta wario land 4 tick","pandoraasbeta kirby kick","pandoraasbeta kirby snare","pandoraasbeta kirby bongo","pandoraasbeta kirby click","pandoraasbeta sonor kick","pandoraasbeta sonor snare","pandoraasbeta sonor snare (left hand)","pandoraasbeta sonor snare (right hand)","pandoraasbeta sonor high tom","pandoraasbeta sonor low tom","pandoraasbeta sonor hihat (closed)","pandoraasbeta sonor hihat (half opened)","pandoraasbeta sonor hihat (open)","pandoraasbeta sonor hihat (open tip)","pandoraasbeta sonor hihat (pedal)","pandoraasbeta sonor crash","pandoraasbeta sonor crash (tip)","pandoraasbeta sonor ride"],B=["kick","snare","piano1","WOW","overdrive","trumpet","saxophone","orchestrahit","detatched violin","synth","sonic3snare","come on","choir","overdriveguitar","flute","legato violin","tremolo violin","amen break","pizzicato violin","tim allen grunt","tuba","loopingcymbal","standardkick","standardsnare","closedhihat","foothihat","openhihat","crashcymbal","pianoC4","liver pad","marimba","susdotwav","wackyboxtts"];v.includes(w)?y=!0:P.includes(w)?(y=!0,x.wave=v[P.findIndex(L=>L===w)]):B.includes(w)&&((w==="trumpet"||w==="flute")&&n!="paandorasbox"||(y=!0,x.wave=v[B.findIndex(L=>L===w)]))}}}y?(t.willReloadForCustomSamples=!0,i.ie(),tt(0),we.customSamples=["legacySamples"]):we.customSamples!=null&&we.customSamples.length>0&&(t.willReloadForCustomSamples=!0,i.ue())}if(this.scale=0,e.scale!=null){let y={"romani :)":"double harmonic :)","romani :(":"double harmonic :(","dbl harmonic :)":"double harmonic :)","dbl harmonic :(":"double harmonic :(",enigma:"strange"},h=y[e.scale]!=null?y[e.scale]:e.scale,f=t.scales.findIndex(p=>p.name==h);if(f!=-1&&(this.scale=f),this.scale==t.scales.dictionary.Custom.index&&e.customScale!=null)for(var r of e.customScale.keys())this.scaleCustom[r]=e.customScale[r]}if(e.key!=null){if(typeof e.key=="number")this.key=(e.key+1200>>>0)%t.keys.length;else if(typeof e.key=="string"){let y=e.key;if(y==="C+")this.key=0,this.octave=1;else if(y==="G- (actually F#-)")this.key=6,this.octave=-1;else if(y==="C-")this.key=0,this.octave=-1;else if(y==="oh no (F-)")this.key=5,this.octave=-1;else{let h=y.charAt(0).toUpperCase(),f=y.charAt(1).toLowerCase(),p={C:0,D:2,E:4,F:5,G:7,A:9,B:11},S={"#":1,"\u266F":1,b:-1,"\u266D":-1},x=p[h],w=S[f];x!=null&&(w!=null&&(x+=w),x<0&&(x+=12),x=x%12,this.key=x)}}}e.beatsPerMinute!=null&&(this.tempo=A(t.tempoMin,t.tempoMax+1,e.beatsPerMinute|0)),e.keyOctave!=null&&(this.octave=A(t.octaveMin,t.octaveMax+1,e.keyOctave|0));let s=0;e.reverb!=null&&(s=A(0,32,e.reverb|0)),e.beatsPerBar!=null&&(this.beatsPerBar=Math.max(t.beatsPerBarMin,Math.min(t.beatsPerBarMax,e.beatsPerBar|0)));let o=4;e.ticksPerBeat!=null&&(o=e.ticksPerBeat|0||4,this.rhythm=t.rhythms.findIndex(y=>y.stepsPerBeat==o),this.rhythm==-1&&(this.rhythm=1)),e.masterGain!=null?this.masterGain=Math.max(0,Math.min(5,e.masterGain||0)):this.masterGain=1,e.limitThreshold!=null?this.limitThreshold=Math.max(0,Math.min(2,e.limitThreshold||0)):this.limitThreshold=1,e.compressionThreshold!=null?this.compressionThreshold=Math.max(0,Math.min(1.1,e.compressionThreshold||0)):this.compressionThreshold=1,e.limitRise!=null?this.limitRise=Math.max(2e3,Math.min(1e4,e.limitRise||0)):this.limitRise=4e3,e.limitDecay!=null?this.limitDecay=Math.max(1,Math.min(30,e.limitDecay||0)):this.limitDecay=4,e.limitRatio!=null?this.limitRatio=Math.max(0,Math.min(11,e.limitRatio||0)):this.limitRatio=1,e.compressionRatio!=null?this.compressionRatio=Math.max(0,Math.min(1.168,e.compressionRatio||0)):this.compressionRatio=1,e.songEq!=null?this.eqFilter.fromJsonObject(e.songEq):this.eqFilter.reset();for(let y=0;y<t.filterMorphCount-1;y++)e["songEq"+y]?this.eqSubFilters[y]=e["songEq"+y]:this.eqSubFilters[y]=null;let c=1,u=1,b=1;if(e.channels!=null)for(let y of e.channels)y.instruments&&(c=Math.max(c,y.instruments.length|0)),y.patterns&&(u=Math.max(u,y.patterns.length|0)),y.sequence&&(b=Math.max(b,y.sequence.length|0));e.layeredInstruments!=null?this.layeredInstruments=!!e.layeredInstruments:this.layeredInstruments=!1,e.patternInstruments!=null?this.patternInstruments=!!e.patternInstruments:this.patternInstruments=c>1,this.patternsPerChannel=Math.min(u,t.barCountMax),this.barCount=Math.min(b,t.barCountMax),e.introBars!=null&&(this.loopStart=A(0,this.barCount,e.introBars|0)),e.loopBars!=null&&(this.loopLength=A(1,this.barCount-this.loopStart+1,e.loopBars|0));let l=[],g=[],m=[];if(e.channels!=null)for(let y=0;y<e.channels.length;y++){let h=e.channels[y],f=new yt,p=!1,S=!1;if(h.type!=null?(p=h.type=="drum",S=h.type=="mod"):p=y>=3,p?g.push(f):S?m.push(f):l.push(f),h.octaveScrollBar!=null&&(f.octave=A(0,t.pitchOctaves,(h.octaveScrollBar|0)+1),p&&(f.octave=0)),h.name!=null?f.name=h.name:f.name="",Array.isArray(h.instruments)){let x=h.instruments;for(let w=0;w<x.length&&!(w>=this.getMaxInstrumentsPerChannel());w++){let v=new Ne(p,S);f.instruments[w]=v,v.fromJsonObject(x[w],p,S,!1,!1,s,n)}}for(let x=0;x<this.patternsPerChannel;x++){let w=new nt;f.patterns[x]=w;let v;h.patterns&&(v=h.patterns[x]),v!=null&&w.fromJsonObject(v,this,f,o,p,S,n)}f.patterns.length=this.patternsPerChannel;for(let x=0;x<this.barCount;x++)f.bars[x]=h.sequence!=null?Math.min(this.patternsPerChannel,h.sequence[x]>>>0):0;f.bars.length=this.barCount}l.length>t.pitchChannelCountMax&&(l.length=t.pitchChannelCountMax),g.length>t.noiseChannelCountMax&&(g.length=t.noiseChannelCountMax),m.length>t.modChannelCountMax&&(m.length=t.modChannelCountMax),this.pitchChannelCount=l.length,this.noiseChannelCount=g.length,this.modChannelCount=m.length,this.channels.length=0,Array.prototype.push.apply(this.channels,l),Array.prototype.push.apply(this.channels,g),Array.prototype.push.apply(this.channels,m),t.willReloadForCustomSamples&&(window.location.hash=this.toBase64String(),setTimeout(()=>{location.reload()},50))}getPattern(e,a){if(a<0||a>=this.barCount)return null;let n=this.channels[e].bars[a];return n==0?null:this.channels[e].patterns[n-1]}getBeatsPerMinute(){return this.tempo}static getNeededBits(e){return 32-Math.clz32(Math.ceil(e+1)-1)}restoreLimiterDefaults(){this.compressionRatio=1,this.limitRatio=1,this.limitRise=4e3,this.limitDecay=4,this.limitThreshold=1,this.compressionThreshold=1,this.masterGain=1}};var dn=class{instruments=[];muted=!1;singleSeamlessInstrument=null};function Xn(i,e){for(let a=0;a<i.length;a++)i[a]*=e}function Fr(i){return!!i&&!(i&i-1)}function Ra(i){if(!Fr(i))throw new Error("FFT array length must be a power of 2.");return Math.round(Math.log(i)/Math.log(2))}function Cr(i,e){let a=Ra(e);if(a>16)throw new Error("FFT array length must not be greater than 2^16.");let n=16-a;for(let r=0;r<e;r++){let s;if(s=(r&43690)>>1|(r&21845)<<1,s=(s&52428)>>2|(s&13107)<<2,s=(s&61680)>>4|(s&3855)<<4,s=(s>>8|(s&255)<<8)>>n,s>r){let o=i[r];i[r]=i[s],i[s]=o}}}function mn(i,e){let a=Ra(e);if(e<4)throw new Error("FFT array length must be at least 4.");for(let n=a-1;n>=2;n--){let r=1<<n,s=r>>1,o=r<<1,c=Math.PI*2/o,u=Math.cos(c),b=Math.sin(c),l=2*u;for(let g=0;g<e;g+=o){let m=g,y=m+s,h=m+r,f=h+s,p=h+r,S=i[m],x=i[h];i[m]=S+x,i[y]*=2,i[h]=S-x,i[f]*=2;let w=u,v=-b,P=1,B=0;for(let L=1;L<s;L++){let E=m+L,D=h-L,R=h+L,N=p-L,z=i[E],W=i[D],H=i[R],U=i[N],G=z-W,d=H+U;i[E]=z+W,i[D]=U-H,i[R]=G*w-d*v,i[N]=d*w+G*v;let F=l*w-P,C=l*v-B;P=w,B=v,w=F,v=C}}}for(let n=0;n<e;n+=4){let r=n+1,s=n+2,o=n+3,c=i[n],u=i[r]*2,b=i[s],l=i[o]*2,g=c+b,m=c-b;i[n]=g+u,i[r]=g-u,i[s]=m+l,i[o]=m-l}Cr(i,e)}var hn=class{delayLinePosition;ageInSamples;maxAgeInSamples;delay;parabolicEnvelopeAmplitude;parabolicEnvelopeSlope;parabolicEnvelopeCurve;rcbEnvelopeAmplitude;rcbEnvelopeAttackIndex;rcbEnvelopeReleaseIndex;rcbEnvelopeSustain;constructor(){this.delayLinePosition=0,this.ageInSamples=0,this.maxAgeInSamples=0,this.delay=0,this.parabolicEnvelopeAmplitude=0,this.parabolicEnvelopeSlope=0,this.parabolicEnvelopeCurve=0,this.rcbEnvelopeAmplitude=0,this.rcbEnvelopeAttackIndex=0,this.rcbEnvelopeReleaseIndex=0,this.rcbEnvelopeSustain=0}initializeParabolicEnvelope(e,a){this.parabolicEnvelopeAmplitude=0;let n=1/e,r=n*n;this.parabolicEnvelopeSlope=4*a*(n-r),this.parabolicEnvelopeCurve=-8*a*r}updateParabolicEnvelope(){this.parabolicEnvelopeAmplitude+=this.parabolicEnvelopeSlope,this.parabolicEnvelopeSlope+=this.parabolicEnvelopeCurve}initializeRCBEnvelope(e,a){this.rcbEnvelopeAttackIndex=Math.floor(e/6),this.rcbEnvelopeSustain=a,this.rcbEnvelopeReleaseIndex=Math.floor(e*5/6)}updateRCBEnvelope(){this.ageInSamples<this.rcbEnvelopeAttackIndex?this.rcbEnvelopeAmplitude=1+Math.cos(Math.PI+Math.PI*(this.ageInSamples/this.rcbEnvelopeAttackIndex)*(this.rcbEnvelopeSustain/2)):this.ageInSamples>this.rcbEnvelopeReleaseIndex&&(this.rcbEnvelopeAmplitude=1+Math.cos(Math.PI*((this.ageInSamples-this.rcbEnvelopeReleaseIndex)/this.rcbEnvelopeAttackIndex))*(this.rcbEnvelopeSustain/2))}addDelay(e){this.delay=e}},fn=class{type=0;eqFilterVolume=1;eqFilterVolumeDelta=0;granularMix=1;granularMixDelta=0;granularDelayLineL=null;granularDelayLineR=null;granularDelayLineIndex=0;granularMaximumDelayTimeInSeconds=1;granularGrains;granularGrainsLength;granularMaximumGrains;usesRandomGrainLocation=!0;granularDelayLineDirty=!1;computeGrains=!0;ringModMix=0;ringModMixDelta=0;ringModPhase=0;ringModPhaseDelta=0;ringModPhaseDeltaScale=1;ringModWaveformIndex=0;ringModPulseWidth=0;ringModHzOffset=0;ringModMixFade=1;ringModMixFadeDelta=0;distortion=0;distortionDelta=0;distortionDrive=0;distortionDriveDelta=0;distortionFractionalInputL1=0;distortionFractionalInputL2=0;distortionFractionalInputL3=0;distortionFractionalInputR1=0;distortionFractionalInputR2=0;distortionFractionalInputR3=0;distortionPrevInputL=0;distortionPrevInputR=0;distortionNextOutputL=0;distortionNextOutputR=0;bitcrusherPrevInputL=0;bitcrusherPrevInputR=0;bitcrusherCurrentOutputL=0;bitcrusherCurrentOutputR=0;bitcrusherPhase=1;bitcrusherPhaseDelta=0;bitcrusherPhaseDeltaScale=1;bitcrusherScale=1;bitcrusherScaleScale=1;bitcrusherFoldLevel=1;bitcrusherFoldLevelScale=1;eqFiltersL=[];eqFiltersR=[];eqFilterCount=0;initialEqFilterInputL1=0;initialEqFilterInputR1=0;initialEqFilterInputL2=0;initialEqFilterInputR2=0;gain=1;gainDelta=0;panningDelayLineL=null;panningDelayLineR=null;panningDelayPos=0;panningVolumeL=0;panningVolumeR=0;panningVolumeDeltaL=0;panningVolumeDeltaR=0;panningOffsetL=0;panningOffsetR=0;panningOffsetDeltaL=0;panningOffsetDeltaR=0;panningMode=0;flangerDelayLineL=null;flangerDelayLineR=null;flangerDelayLineDirty=!1;flangerDelayPos=0;flanger=0;flangerDelta=0;flangerSpeed=0;flangerSpeedDelta=0;flangerDepth=0;flangerDepthDelta=0;flangerFeedback=0;flangerFeedbackDelta=0;flangerPhase=0;chorusDelayLineL=null;chorusDelayLineR=null;chorusDelayLineDirty=!1;chorusDelayPos=0;chorusPhase=0;chorusVoiceMult=0;chorusVoiceMultDelta=0;chorusCombinedMult=0;chorusCombinedMultDelta=0;echoDelayLineL=null;echoDelayLineR=null;echoDelayLineDirty=!1;echoDelayPosL=0;echoDelayPosR=0;echoDelayOffsetStart=0;echoDelayOffsetEnd=null;echoDelayOffsetRatio=0;echoDelayOffsetRatioDelta=0;echoMult=0;echoMultDelta=0;echoPingPong=0;echoShelfA1=0;echoShelfB0=0;echoShelfB1=0;echoShelfSampleL=0;echoShelfSampleR=0;echoShelfPrevInputL=0;echoShelfPrevInputR=0;reverbDelayLine=null;reverbDelayLineDirty=!1;reverbDelayPos=0;reverbMult=0;reverbMultDelta=0;reverbShelfA1=0;reverbShelfB0=0;reverbShelfB1=0;reverbShelfSample0=0;reverbShelfSample1=0;reverbShelfSample2=0;reverbShelfSample3=0;reverbShelfPrevInput0=0;reverbShelfPrevInput1=0;reverbShelfPrevInput2=0;reverbShelfPrevInput3=0;constructor(e){this.type=e,this.granularGrains=[],this.granularMaximumGrains=256;for(let a=0;a<this.granularMaximumGrains;a++)this.granularGrains.push(new hn);this.granularGrainsLength=0}reset(){if(this.chorusDelayLineDirty){for(let e=0;e<this.chorusDelayLineL.length;e++)this.chorusDelayLineL[e]=0;for(let e=0;e<this.chorusDelayLineR.length;e++)this.chorusDelayLineR[e]=0}if(this.flangerDelayLineDirty){for(let e=0;e<this.flangerDelayLineL.length;e++)this.flangerDelayLineL[e]=0;for(let e=0;e<this.flangerDelayLineR.length;e++)this.flangerDelayLineR[e]=0}if(this.echoDelayLineDirty){for(let e=0;e<this.echoDelayLineL.length;e++)this.echoDelayLineL[e]=0;for(let e=0;e<this.echoDelayLineR.length;e++)this.echoDelayLineR[e]=0}if(this.reverbDelayLineDirty)for(let e=0;e<this.reverbDelayLine.length;e++)this.reverbDelayLine[e]=0;if(this.granularDelayLineDirty){for(let e=0;e<this.granularDelayLineL.length;e++)this.granularDelayLineL[e]=0;for(let e=0;e<this.granularDelayLineR.length;e++)this.granularDelayLineR[e]=0}this.flangerPhase=0,this.chorusPhase=0,this.ringModPhase=0,this.ringModMixFade=1}allocateNecessaryBuffers(e,a,n,r){if(n.type==2&&(this.panningDelayLineL==null||this.panningDelayLineR==null||this.panningDelayLineL.length<e.panningDelayBufferSize||this.panningDelayLineR.length<e.panningDelayBufferSize)&&(this.panningDelayLineL=new Float32Array(e.panningDelayBufferSize),this.panningDelayLineR=new Float32Array(e.panningDelayBufferSize)),n.type==1&&((this.chorusDelayLineL==null||this.chorusDelayLineL.length<e.chorusDelayBufferSize)&&(this.chorusDelayLineL=new Float32Array(e.chorusDelayBufferSize)),(this.chorusDelayLineR==null||this.chorusDelayLineR.length<e.chorusDelayBufferSize)&&(this.chorusDelayLineR=new Float32Array(e.chorusDelayBufferSize))),n.type==10&&((this.flangerDelayLineL==null||this.flangerDelayLineL.length<e.flangerDelayBufferSize)&&(this.flangerDelayLineL=new Float32Array(e.flangerDelayBufferSize)),(this.flangerDelayLineR==null||this.flangerDelayLineR.length<e.flangerDelayBufferSize)&&(this.flangerDelayLineR=new Float32Array(e.flangerDelayBufferSize))),n.type==6&&this.allocateEchoBuffers(r,n.echoDelay),n.type==0&&this.reverbDelayLine==null&&(this.reverbDelayLine=new Float32Array(t.reverbDelayBufferSize)),n.type==8){this.granularMaximumDelayTimeInSeconds=2.5;let c=Je(Math.floor(2.5*e.samplesPerSecond));(this.granularDelayLineL==null||this.granularDelayLineR==null||this.granularDelayLineL.length!=c||this.granularDelayLineR.length!=c)&&(this.granularDelayLineL=new Float32Array(c),this.granularDelayLineR=new Float32Array(c),this.granularDelayLineIndex=0);let u=this.granularGrains.length;if(this.granularMaximumGrains>u)for(let b=u;b<this.granularMaximumGrains+1;b++)this.granularGrains.push(new hn);this.granularMaximumGrains<this.granularGrainsLength&&(this.granularGrainsLength=Math.round(this.granularMaximumGrains))}}allocateEchoBuffers(e,a){let n=Math.max(t.echoDelayRange>>1,a+1),s=Je(n*t.echoDelayStepTicks*e)*2;if(this.echoDelayLineL==null||this.echoDelayLineR==null)this.echoDelayLineL=new Float32Array(s),this.echoDelayLineR=new Float32Array(s);else if(this.echoDelayLineL.length<s||this.echoDelayLineR.length<s){let o=new Float32Array(s),c=new Float32Array(s),u=this.echoDelayLineL.length-1;for(let b=0;b<this.echoDelayLineL.length;b++)o[b]=this.echoDelayLineL[this.echoDelayPosL+b&u],c[b]=this.echoDelayLineR[this.echoDelayPosR+b&u];this.echoDelayPosL=this.echoDelayLineL.length,this.echoDelayPosR=this.echoDelayLineR.length,this.echoDelayLineL=o,this.echoDelayLineR=c}}deactivate(){this.bitcrusherPrevInputL=0,this.bitcrusherPrevInputR=0,this.bitcrusherCurrentOutputL=0,this.bitcrusherCurrentOutputR=0,this.bitcrusherPhase=1;for(let e=0;e<this.eqFilterCount;e++)this.eqFiltersL[e].resetOutput(),this.eqFiltersR[e].resetOutput();if(this.eqFilterCount=0,this.initialEqFilterInputL1=0,this.initialEqFilterInputR1=0,this.initialEqFilterInputL2=0,this.initialEqFilterInputR2=0,this.distortionFractionalInputL1=0,this.distortionFractionalInputL2=0,this.distortionFractionalInputL3=0,this.distortionFractionalInputR1=0,this.distortionFractionalInputR2=0,this.distortionFractionalInputR3=0,this.distortionPrevInputL=0,this.distortionPrevInputR=0,this.distortionNextOutputL=0,this.distortionNextOutputR=0,this.flangerDelayPos=0,this.panningDelayPos=0,this.panningDelayLineL!=null)for(let e=0;e<this.panningDelayLineL.length;e++)this.panningDelayLineL[e]=0;if(this.panningDelayLineR!=null)for(let e=0;e<this.panningDelayLineR.length;e++)this.panningDelayLineR[e]=0;this.echoDelayOffsetEnd=null,this.echoShelfSampleL=0,this.echoShelfSampleR=0,this.echoShelfPrevInputL=0,this.echoShelfPrevInputR=0,this.reverbShelfSample0=0,this.reverbShelfSample1=0,this.reverbShelfSample2=0,this.reverbShelfSample3=0,this.reverbShelfPrevInput0=0,this.reverbShelfPrevInput1=0,this.reverbShelfPrevInput2=0,this.reverbShelfPrevInput3=0}compute(e,a,n,r,s,o,c,u,b,l,g){let m=e.samplesPerSecond;this.type=n.type;let y=n.type==8,h=n.type==7,f=n.type==3,p=n.type==4,S=n.type==9,x=n.type==2,w=n.type==10,v=n.type==1,P=n.type==6,B=n.type==0,L=n.type==5;if(y&&(this.granularMaximumGrains=Math.pow(2,n.grainAmounts*l[53]),e.isModActive(t.modulators.dictionary["grain freq"].index,u,b)&&(this.granularMaximumGrains=Math.pow(2,e.getModValue(t.modulators.dictionary["grain freq"].index,u,b,!1)*l[53])),this.granularMaximumGrains==Math.floor(this.granularMaximumGrains)),this.allocateNecessaryBuffers(e,a,n,s),y){this.granularMix=n.granular/t.granularRange,this.computeGrains=!0;let N=this.granularMix;e.isModActive(t.modulators.dictionary.granular.index,u,b)&&(this.granularMix=e.getModValue(t.modulators.dictionary.granular.index,u,b,!1)/t.granularRange,N=e.getModValue(t.modulators.dictionary.granular.index,u,b,!0)/t.granularRange),this.granularMix*=l[52],N*=g[52],this.granularMixDelta=(N-this.granularMix)/o;for(let z=0;z<Math.ceil(Math.random()*Math.random()*10);z++)if(this.granularGrainsLength<this.granularMaximumGrains){let W=n.grainSize;e.isModActive(t.modulators.dictionary["grain size"].index,u,b)&&(W=e.getModValue(t.modulators.dictionary["grain size"].index,u,b,!1)),W*=l[54];let H=n.grainRange;e.isModActive(t.modulators.dictionary["grain range"].index,u,b)&&(H=e.getModValue(t.modulators.dictionary["grain range"].index,u,b,!1)),H*=l[55];let U=W+H,d=(W+(U-W)*Math.random())/1e3,F=Math.floor(d*m),C=this.granularDelayLineL.length,I=this.granularGrainsLength;this.granularGrainsLength++;let M=this.granularGrains[I];M.ageInSamples=0,M.maxAgeInSamples=F;let q=.02,O=2.4;M.delayLinePosition=this.usesRandomGrainLocation?(q+(O-q)*Math.random()*Math.random()*m)%(C-1):q,t.granularEnvelopeType==0?M.initializeParabolicEnvelope(M.maxAgeInSamples,1):t.granularEnvelopeType==1&&M.initializeRCBEnvelope(M.maxAgeInSamples,1),M.addDelay(Math.random()*s*4)}}if(f){let N=n.distortion,z=n.distortion;e.isModActive(t.modulators.dictionary.distortion.index,u,b)&&(N=e.getModValue(t.modulators.dictionary.distortion.index,u,b,!1),z=e.getModValue(t.modulators.dictionary.distortion.index,u,b,!0));let W=Math.min(1,l[43]*N/(t.distortionRange-1)),H=Math.min(1,g[43]*z/(t.distortionRange-1)),U=Math.pow(1-.895*(Math.pow(20,W)-1)/19,2),G=Math.pow(1-.895*(Math.pow(20,H)-1)/19,2),d=(1+2*W)/t.distortionBaseVolume,F=(1+2*H)/t.distortionBaseVolume;this.distortion=U,this.distortionDelta=(G-U)/o,this.distortionDrive=d,this.distortionDriveDelta=(F-d)/o}if(p){let N=n.bitcrusherFreq*Math.sqrt(l[45]),z=n.bitcrusherFreq*Math.sqrt(g[45]);e.isModActive(t.modulators.dictionary["freq crush"].index,u,b)&&(N=e.getModValue(t.modulators.dictionary["freq crush"].index,u,b,!1)*Math.sqrt(l[45]),z=e.getModValue(t.modulators.dictionary["freq crush"].index,u,b,!0)*Math.sqrt(g[45]));let W=n.bitcrusherQuantization*Math.sqrt(l[44]),H=n.bitcrusherQuantization*Math.sqrt(g[44]);e.isModActive(t.modulators.dictionary["bit crush"].index,u,b)&&(W=e.getModValue(t.modulators.dictionary["bit crush"].index,u,b,!1)*Math.sqrt(l[44]),H=e.getModValue(t.modulators.dictionary["bit crush"].index,u,b,!0)*Math.sqrt(g[44]));let U=t.keys[e.song.key].basePitch+t.pitchesPerOctave*e.song.octave,G=Ne.frequencyFromPitch(U+60)*Math.pow(2,(t.bitcrusherFreqRange-1-N)*t.bitcrusherOctaveStep),d=Ne.frequencyFromPitch(U+60)*Math.pow(2,(t.bitcrusherFreqRange-1-z)*t.bitcrusherOctaveStep),F=Math.min(1,G/m),C=Math.min(1,d/m);this.bitcrusherPhaseDelta=F,this.bitcrusherPhaseDeltaScale=Math.pow(C/F,1/o);let I=2*t.bitcrusherBaseVolume*Math.pow(2,1-Math.pow(2,(t.bitcrusherQuantizationRange-1-W)*.5)),M=2*t.bitcrusherBaseVolume*Math.pow(2,1-Math.pow(2,(t.bitcrusherQuantizationRange-1-H)*.5));this.bitcrusherScale=I,this.bitcrusherScaleScale=Math.pow(M/I,1/o);let q=2*t.bitcrusherBaseVolume*Math.pow(1.5,t.bitcrusherQuantizationRange-1-W),O=2*t.bitcrusherBaseVolume*Math.pow(1.5,t.bitcrusherQuantizationRange-1-H);this.bitcrusherFoldLevel=q,this.bitcrusherFoldLevelScale=Math.pow(O/q,1/o)}if(L){let N=1;if(n.eqFilterType){let H=n.eqFilter;n.eqSubFilters[1]==null&&(n.eqSubFilters[1]=new Ee);let U=n.eqSubFilters[1],G=n.eqFilterSimpleCut,d=n.eqFilterSimplePeak,F=n.eqFilterSimpleCut,C=n.eqFilterSimplePeak,I=!1;e.isModActive(t.modulators.dictionary["eq filt cut"].index,u,b)&&(G=e.getModValue(t.modulators.dictionary["eq filt cut"].index,u,b,!1),F=e.getModValue(t.modulators.dictionary["eq filt cut"].index,u,b,!0),I=!0),e.isModActive(t.modulators.dictionary["eq filt peak"].index,u,b)&&(d=e.getModValue(t.modulators.dictionary["eq filt peak"].index,u,b,!1),C=e.getModValue(t.modulators.dictionary["eq filt peak"].index,u,b,!0),I=!0);let M;if(I){H.convertLegacySettingsForSynth(G,d),U.convertLegacySettingsForSynth(F,C),M=H.controlPoints[0];let q=U.controlPoints[0];M.toCoefficients(pe.tempFilterStartCoefficients,m,1,1),q.toCoefficients(pe.tempFilterEndCoefficients,m,1,1),this.eqFiltersL.length<1&&(this.eqFiltersL[0]=new Re),this.eqFiltersR.length<1&&(this.eqFiltersR[0]=new Re),this.eqFiltersL[0].loadCoefficientsWithGradient(pe.tempFilterStartCoefficients,pe.tempFilterEndCoefficients,1/o,M.type==0),this.eqFiltersR[0].loadCoefficientsWithGradient(pe.tempFilterStartCoefficients,pe.tempFilterEndCoefficients,1/o,M.type==0)}else H.convertLegacySettingsForSynth(G,d,!0),M=H.controlPoints[0],M.toCoefficients(pe.tempFilterStartCoefficients,m,1,1),this.eqFiltersL.length<1&&(this.eqFiltersL[0]=new Re),this.eqFiltersR.length<1&&(this.eqFiltersR[0]=new Re),this.eqFiltersL[0].loadCoefficientsWithGradient(pe.tempFilterStartCoefficients,pe.tempFilterStartCoefficients,1/o,M.type==0),this.eqFiltersR[0].loadCoefficientsWithGradient(pe.tempFilterStartCoefficients,pe.tempFilterStartCoefficients,1/o,M.type==0);this.eqFilterCount=1,N*=M.getVolumeCompensationMult()}else{let H=n.tmpEqFilterStart!=null?n.tmpEqFilterStart:n.eqFilter;for(let U=0;U<H.controlPointCount;U++){let G=H.controlPoints[U],d=n.tmpEqFilterEnd!=null&&n.tmpEqFilterEnd.controlPoints[U]!=null?n.tmpEqFilterEnd.controlPoints[U]:H.controlPoints[U];G.type!=d.type&&(G=d),G.toCoefficients(pe.tempFilterStartCoefficients,m,1,1),d.toCoefficients(pe.tempFilterEndCoefficients,m,1,1),this.eqFiltersL.length<=U&&(this.eqFiltersL[U]=new Re),this.eqFiltersR.length<=U&&(this.eqFiltersR[U]=new Re),this.eqFiltersL[U].loadCoefficientsWithGradient(pe.tempFilterStartCoefficients,pe.tempFilterEndCoefficients,1/o,G.type==0),this.eqFiltersR[U].loadCoefficientsWithGradient(pe.tempFilterStartCoefficients,pe.tempFilterEndCoefficients,1/o,G.type==0),N*=G.getVolumeCompensationMult()}this.eqFilterCount=H.controlPointCount}N=Math.min(3,N);let z=N,W=N;this.eqFilterVolume=z,this.eqFilterVolumeDelta=(W-z)/o}if(x){this.panningMode=n.panMode;let N=l[42]*2-1,z=g[42]*2-1,W=n.pan,H=n.pan;e.isModActive(t.modulators.dictionary.pan.index,u,b)&&(W=e.getModValue(t.modulators.dictionary.pan.index,u,b,!1),H=e.getModValue(t.modulators.dictionary.pan.index,u,b,!0));let U=Math.max(-1,Math.min(1,(W-t.panCenter)/t.panCenter*N)),G=Math.max(-1,Math.min(1,(H-t.panCenter)/t.panCenter*z)),d=Math.cos((1+U)*Math.PI*.25)*1.414,F=Math.cos((1-U)*Math.PI*.25)*1.414,C=Math.cos((1+G)*Math.PI*.25)*1.414,I=Math.cos((1-G)*Math.PI*.25)*1.414,M=m*t.panDelaySecondsMax,q=n.panDelay,O=n.panDelay;e.isModActive(t.modulators.dictionary["pan delay"].index,u,b)&&(q=e.getModValue(t.modulators.dictionary["pan delay"].index,u,b,!1),O=e.getModValue(t.modulators.dictionary["pan delay"].index,u,b,!0));let j=U*q*M/10,te=G*O*M/10,ee=Math.max(0,j),be=Math.max(0,-j),Ie=Math.max(0,te),_=Math.max(0,-te);this.panningVolumeL=d,this.panningVolumeR=F,this.panningVolumeDeltaL=(C-d)/o,this.panningVolumeDeltaR=(I-F)/o,this.panningOffsetL=this.panningDelayPos-ee+e.panningDelayBufferSize,this.panningOffsetR=this.panningDelayPos-be+e.panningDelayBufferSize,this.panningOffsetDeltaL=(Ie-ee)/o,this.panningOffsetDeltaR=(_-be)/o}if(S){let N=l[57],z=g[57],W=n.gain,H=n.gain;e.isModActive(t.modulators.dictionary.gain.index,u,b)&&(W=e.getModValue(t.modulators.dictionary.gain.index,u,b,!1),H=e.getModValue(t.modulators.dictionary.gain.index,u,b,!0));let U=Math.min(t.gainRangeMult,N*W/(t.volumeRange/2*t.gainRangeMult))*t.gainRangeMult,G=Math.min(t.gainRangeMult,z*H/(t.volumeRange/2*t.gainRangeMult))*t.gainRangeMult;this.gain=U,this.gainDelta=(G-U)/o}if(v){let N=l[46],z=g[46],W=n.chorus,H=n.chorus;e.isModActive(t.modulators.dictionary.chorus.index,u,b)&&(W=e.getModValue(t.modulators.dictionary.chorus.index,u,b,!1),H=e.getModValue(t.modulators.dictionary.chorus.index,u,b,!0));let U=Math.min(1,N*W/(t.chorusRange-1)),G=Math.min(1,z*H/(t.chorusRange-1));U=U*.6+Math.pow(U,6)*.4,G=G*.6+Math.pow(G,6)*.4;let d=1/Math.sqrt(3*U*U+1),F=1/Math.sqrt(3*G*G+1);this.chorusVoiceMult=U,this.chorusVoiceMultDelta=(G-U)/o,this.chorusCombinedMult=d,this.chorusCombinedMultDelta=(F-d)/o}if(w){let N=l[58],z=g[58],W=n.flanger,H=n.flanger;e.isModActive(t.modulators.dictionary.flanger.index,u,b)&&(W=e.getModValue(t.modulators.dictionary.flanger.index,u,b,!1),H=e.getModValue(t.modulators.dictionary.flanger.index,u,b,!0));let U=Math.min(1,N*W/(t.flangerRange-1)),G=Math.min(1,z*H/(t.flangerRange-1)),d=l[59],F=g[59],C=n.flangerSpeed,I=n.flangerSpeed;e.isModActive(t.modulators.dictionary["flanger speed"].index,u,b)&&(C=e.getModValue(t.modulators.dictionary["flanger speed"].index,u,b,!1),I=e.getModValue(t.modulators.dictionary["flanger speed"].index,u,b,!0));let M=d*C+2,q=F*I+2,O=l[60],j=g[60],te=n.flangerDepth,ee=n.flangerDepth;e.isModActive(t.modulators.dictionary["flanger depth"].index,u,b)&&(te=e.getModValue(t.modulators.dictionary["flanger depth"].index,u,b,!1),ee=e.getModValue(t.modulators.dictionary["flanger depth"].index,u,b,!0));let be=O*te*2+2,Ie=j*ee*2+2,_=l[61],V=g[61],K=n.flangerFeedback,Q=n.flangerFeedback;e.isModActive(t.modulators.dictionary["flanger feedback"].index,u,b)&&(K=e.getModValue(t.modulators.dictionary["flanger feedback"].index,u,b,!1),Q=e.getModValue(t.modulators.dictionary["flanger feedback"].index,u,b,!0));let Z=_*K*1.5,ae=V*Q*1.5;this.flanger=U,this.flangerDelta=(G-U)/o,this.flangerSpeed=M,this.flangerSpeedDelta=(q-M)/o,this.flangerDepth=be,this.flangerDepthDelta=(Ie-be)/o,this.flangerFeedback=Math.sqrt(Z)/Math.sqrt(t.flangerFeedbackRange),this.flangerFeedbackDelta=(Math.sqrt(ae)/Math.sqrt(t.flangerFeedbackRange)-Math.sqrt(Z)/Math.sqrt(t.flangerFeedbackRange))/o}if(h){let N=n.ringModulation,z=n.ringModulation,W=l[50],H=g[50],U=Math.min(1,n.ringModulationHz/(t.ringModHzRange-1)),G=Math.min(1,n.ringModulationHz/(t.ringModHzRange-1)),d=l[51],F=g[51];e.isModActive(t.modulators.dictionary["ring modulation"].index,u,b)&&(N=e.getModValue(t.modulators.dictionary["ring modulation"].index,u,b,!1),z=e.getModValue(t.modulators.dictionary["ring modulation"].index,u,b,!0)),e.isModActive(t.modulators.dictionary["ring mod hertz"].index,u,b)&&(U=Math.min(1,Math.max(0,e.getModValue(t.modulators.dictionary["ring mod hertz"].index,u,b,!1)/(t.ringModHzRange-1))),G=Math.min(1,Math.max(0,e.getModValue(t.modulators.dictionary["ring mod hertz"].index,u,b,!1)/(t.ringModHzRange-1)))),U*=d,G*=F;let C=Math.min(1,N*W/(t.ringModRange-1)),I=Math.min(1,z*H/(t.ringModRange-1));this.ringModMix=C,this.ringModMixDelta=(I-C)/o,this.ringModHzOffset=n.ringModHzOffset;let M=Math.max(0,zn(U))/e.samplesPerSecond,q=Math.max(0,zn(G))/e.samplesPerSecond;this.ringModMixFadeDelta=0,this.ringModMixFade<0&&(this.ringModMixFade=0),M<=0&&q<=0&&this.ringModMixFade!=0?this.ringModMixFadeDelta=this.ringModMixFade/-10:M>0&&q>0&&(this.ringModMixFade=1),this.ringModPhaseDelta=M,this.ringModPhaseDeltaScale=M==0?1:Math.pow(q/M,1/o),this.ringModWaveformIndex=n.ringModWaveformIndex,this.ringModPulseWidth=n.ringModPulseWidth}let E=0,D=0;if(P){let N=l[47],z=g[47],W=n.echoSustain,H=n.echoSustain;e.isModActive(t.modulators.dictionary.echo.index,u,b)&&(W=Math.max(0,e.getModValue(t.modulators.dictionary.echo.index,u,b,!1)),H=Math.max(0,e.getModValue(t.modulators.dictionary.echo.index,u,b,!0)));let U=Math.min(1,Math.pow(N*W/t.echoSustainRange,1.1))*.9,G=Math.min(1,Math.pow(z*H/t.echoSustainRange,1.1))*.9;this.echoMult=U,this.echoMultDelta=Math.max(0,(G-U)/o),E=Math.max(U,G);let d=l[56],F=g[56],C=n.echoDelay*d,I=n.echoDelay*F;e.isModActive(t.modulators.dictionary["echo delay"].index,u,b)&&(C=e.getModValue(t.modulators.dictionary["echo delay"].index,u,b,!1)*d,I=e.getModValue(t.modulators.dictionary["echo delay"].index,u,b,!0)*F);let M=Math.round((C+1)*t.echoDelayStepTicks*s),q=Math.round((I+1)*t.echoDelayStepTicks*s);this.echoDelayOffsetEnd!=null?this.echoDelayOffsetStart=this.echoDelayOffsetEnd:this.echoDelayOffsetStart=M,this.echoDelayOffsetEnd=q,D=(this.echoDelayOffsetStart+this.echoDelayOffsetEnd)*.5/m,this.echoDelayOffsetRatio=0,this.echoDelayOffsetRatioDelta=1/o,this.echoPingPong=(n.echoPingPong/t.panMax-.5)*2;let O=2*Math.PI*t.echoShelfHz/e.samplesPerSecond;pe.tempFilterStartCoefficients.highShelf1stOrder(O,t.echoShelfGain),this.echoShelfA1=pe.tempFilterStartCoefficients.a[1],this.echoShelfB0=pe.tempFilterStartCoefficients.b[0],this.echoShelfB1=pe.tempFilterStartCoefficients.b[1]}let R=0;if(B){let N=l[48],z=g[48],W=n.reverb,H=n.reverb;e.isModActive(t.modulators.dictionary.reverb.index,u,b)&&(W=e.getModValue(t.modulators.dictionary.reverb.index,u,b,!1),H=e.getModValue(t.modulators.dictionary.reverb.index,u,b,!0)),e.isModActive(t.modulators.dictionary["song reverb"].index,u,b)&&(W*=(e.getModValue(t.modulators.dictionary["song reverb"].index,void 0,void 0,!1)-t.modulators.dictionary["song reverb"].convertRealFactor)/t.reverbRange,H*=(e.getModValue(t.modulators.dictionary["song reverb"].index,void 0,void 0,!0)-t.modulators.dictionary["song reverb"].convertRealFactor)/t.reverbRange);let U=Math.min(1,Math.pow(N*W/t.reverbRange,.667))*.425,G=Math.min(1,Math.pow(z*H/t.reverbRange,.667))*.425;this.reverbMult=U,this.reverbMultDelta=(G-U)/o,R=Math.max(U,G);let d=2*Math.PI*t.reverbShelfHz/e.samplesPerSecond;pe.tempFilterStartCoefficients.highShelf1stOrder(d,t.reverbShelfGain),this.reverbShelfA1=pe.tempFilterStartCoefficients.a[1],this.reverbShelfB0=pe.tempFilterStartCoefficients.b[0],this.reverbShelfB1=pe.tempFilterStartCoefficients.b[1]}if(!r.tonesAddedInThisTick&&!r.flushingDelayLines){let z=-Math.log2(.00390625);if(v&&(r.delayDuration+=t.chorusMaxDelay),w&&(r.delayDuration+=t.flangerMaxDelay),P){let W=Math.pow(E,1/D),U=-1/Math.log2(W)*z;r.delayDuration+=U}if(B){let W=R*2,H=t.reverbDelayBufferSize/4/m,U=Math.pow(W,1/H),d=-1/Math.log2(U)*z;r.delayDuration+=d}y&&(this.computeGrains=!1)}else v&&(r.totalDelaySamples+=e.chorusDelayBufferSize),w&&(r.totalDelaySamples+=e.flangerDelayBufferSize),P&&(r.totalDelaySamples+=this.echoDelayLineL.length),B&&(r.totalDelaySamples+=t.reverbDelayBufferSize),y&&(r.totalDelaySamples+=this.granularMaximumDelayTimeInSeconds)}};var wr;function vt(i,e=0){let a=typeof i=="string"?(wr??=new TextEncoder).encode(i):i,n=a,r=e+374761393&4294967295,s=0;if(n.length>=16){let c=[e+2654435761+2246822519&4294967295,e+2246822519&4294967295,e+0&4294967295,e-2654435761&4294967295],u=a,b=u.length-16,l=0;for(s=0;(s&4294967280)<=b;s+=4){let g=s,m=u[g+0]+(u[g+1]<<8),y=u[g+2]+(u[g+3]<<8),h=m*2246822519+(y*2246822519<<16),f=c[l]+h&4294967295;f=f<<13|f>>>19;let p=f&65535,S=f>>>16;c[l]=p*2654435761+(S*2654435761<<16)&4294967295,l=l+1&3}r=(c[0]<<1|c[0]>>>31)+(c[1]<<7|c[1]>>>25)+(c[2]<<12|c[2]>>>20)+(c[3]<<18|c[3]>>>14)&4294967295}r=r+a.length&4294967295;let o=a.length-4;for(;s<=o;s+=4){let c=s,u=n[c+0]+(n[c+1]<<8),b=n[c+2]+(n[c+3]<<8),l=u*3266489917+(b*3266489917<<16);r=r+l&4294967295,r=r<<17|r>>>15,r=(r&65535)*668265263+((r>>>16)*668265263<<16)&4294967295}for(;s<n.length;++s){let c=n[s];r=r+c*374761393,r=r<<11|r>>>21,r=(r&65535)*2654435761+((r>>>16)*2654435761<<16)&4294967295}return r=r^r>>>15,r=((r&65535)*2246822519&4294967295)+((r>>>16)*2246822519<<16),r=r^r>>>13,r=((r&65535)*3266489917&4294967295)+((r>>>16)*3266489917<<16),r=r^r>>>16,r<0?r+4294967296:r}var Lt=class i{noteSecondsStart=[];noteSecondsStartUnscaled=0;noteSecondsEnd=[];noteSecondsEndUnscaled=0;noteTicksStart=0;noteTicksEnd=0;noteSizeStart=t.noteSizeMax;noteSizeEnd=t.noteSizeMax;prevNoteSize=t.noteSizeMax;nextNoteSize=t.noteSizeMax;ne=t.noteSizeMax;prevNoteSecondsStart=[];prevNoteSecondsStartUnscaled=0;prevNoteSecondsEnd=[];prevNoteSecondsEndUnscaled=0;prevNoteTicksStart=0;prevNoteTicksEnd=0;ce=t.noteSizeMax;tickTimeEnd=[];drumsetFilterEnvelopeStart=0;drumsetFilterEnvelopeEnd=0;prevSlideStart=!1;prevSlideEnd=!1;nextSlideStart=!1;nextSlideEnd=!1;prevSlideRatioStart=0;prevSlideRatioEnd=0;nextSlideRatioStart=0;nextSlideRatioEnd=0;startPinTickAbsolute=null;startPinTickDefaultPitch=null;startPinTickPitch=null;envelopeStarts=[];envelopeEnds=[];me=[];oe=0;lowpassCutoffDecayVolumeCompensation=1;constructor(){let e=62;for(let a=0;a<e;a++)this.envelopeStarts[a]=1,this.envelopeEnds[a]=1;this.reset()}reset(){for(let e=0;e<t.maxEnvelopeCount+1;e++)this.noteSecondsEnd[e]=0,this.prevNoteSecondsEnd[e]=0;this.noteSecondsEndUnscaled=0,this.noteTicksEnd=0,this.ne=t.noteSizeMax,this.prevNoteSecondsEndUnscaled=0,this.prevNoteTicksEnd=0,this.ce=t.noteSizeMax,this.oe=0,this.drumsetFilterEnvelopeStart=0,this.drumsetFilterEnvelopeEnd=0,this.startPinTickAbsolute=null,this.startPinTickDefaultPitch=null,this.startPinTickPitch=null}computeEnvelopes(e,a,n,r,s,o,c,u,b,l,g){let m=s,y=e.getTransition();if(o!=null&&o.atNoteStart&&!y.continues&&!o.forceContinueAtStart){this.prevNoteSecondsEndUnscaled=this.noteSecondsEndUnscaled,this.prevNoteTicksEnd=this.noteTicksEnd,this.ce=this.ne,this.noteSecondsEndUnscaled=0,this.noteTicksEnd=0;for(let _=0;_<t.maxEnvelopeCount+1;_++)this.prevNoteSecondsEnd[_]=this.noteSecondsEnd[_],this.noteSecondsEnd[_]=0}o!=null&&(o.note!=null?this.ne=o.note.pins[o.note.pins.length-1].size:this.ne=t.noteSizeMax);let h=[],f=r+1,p=[],S=this.noteSecondsEndUnscaled,x=[],w=S+m,v=this.noteTicksEnd,P=v+1,B=[],L=[],E=this.prevNoteSecondsEndUnscaled,D=E+m,R=this.prevNoteTicksEnd,N=R+1,z=1/(t.ticksPerPart*t.partsPerBeat),W=[],H=[],U=this.ne,G=this.ne,d=this.ce,F=0,C=!1,I=!1,M=!1,q=!1,O=0,j=0,te=0,ee=0;if(o==null&&(this.startPinTickAbsolute=null,this.startPinTickDefaultPitch=null),o!=null&&o.note!=null&&!o.passedEndOfNote){let _=o.note.getEndPinIndex(a),V=o.note.pins[_-1],K=o.note.pins[_],Q=(o.note.start+V.time)*t.ticksPerPart;(this.startPinTickAbsolute==null||!(y.continues||y.slides)&&o.passedEndOfNote)&&(this.startPinTickAbsolute=Q+b.computeTicksSinceStart(!0)),(this.startPinTickDefaultPitch==null||o.passedEndOfNote)&&(this.startPinTickDefaultPitch=this.getPitchValue(e,o,u,!1)),o.passedEndOfNote||(this.startPinTickPitch=this.getPitchValue(e,o,u,!0));let Z=(o.note.start+K.time)*t.ticksPerPart,ae=(r-Q)/(Z-Q),fe=(f-Q)/(Z-Q);if(U=V.size+(K.size-V.size)*ae,G=V.size+(K.size-V.size)*fe,y.slides){let ie=o.noteStartPart*t.ticksPerPart,ye=o.noteEndPart*t.ticksPerPart,ue=(ye-ie)*.5,le=Math.min(ue,y.slideTicks);o.prevNote!=null&&!o.forceContinueAtStart&&(r-ie<le&&(C=!0,O=.5*(1-(r-ie)/le)),f-ie<le&&(I=!0,j=.5*(1-(f-ie)/le))),o.nextNote!=null&&!o.forceContinueAtEnd&&(F=o.nextNote.pins[0].size,ye-r<le&&(M=!0,te=.5*(1-(ye-r)/le)),ye-f<le&&(q=!0,ee=.5*(1-(ye-f)/le)))}}let be=1,Ie=!1;for(let _=0;_<=e.envelopeCount;_++){let V,K,Q,Z=!1,ae=!1,fe=1,ie=1,ye=fe*ie,re=0,ue=1,le=0,oe=2,ce=2,X=0,$=this.startPinTickAbsolute||0,de=this.startPinTickDefaultPitch||0;if(_==e.envelopeCount){if(Ie)break;V=t.instrumentAutomationTargets.dictionary.noteVolume,K=0,Q=t.newEnvelopes.dictionary["note size"]}else{let Fe=e.envelopes[_];V=t.instrumentAutomationTargets[Fe.target],K=Fe.index,Q=t.newEnvelopes[Fe.envelope],Z=e.envelopes[_].inverse,ae=e.envelopes[_].discrete,fe=e.envelopes[_].perEnvelopeSpeed,ie=Math.pow(e.envelopeSpeed,2)/144,ye=fe*ie,re=e.envelopes[_].perEnvelopeLowerBound,ue=e.envelopes[_].perEnvelopeUpperBound,b.isModActive(t.modulators.dictionary["individual envelope lower bound"].index,l,g)&&e.envelopes[_].tempEnvelopeLowerBound!=null&&(re=e.envelopes[_].tempEnvelopeLowerBound),b.isModActive(t.modulators.dictionary["individual envelope upper bound"].index,l,g)&&e.envelopes[_].tempEnvelopeUpperBound!=null&&(ue=e.envelopes[_].tempEnvelopeUpperBound),re<=ue||(re=0,ue=1),le=b.computeTicksSinceStart(),oe=e.envelopes[_].steps,ce=e.envelopes[_].seed,e.envelopes[_].waveform>=(Q.name=="lfo"?7:4)&&(e.envelopes[_].waveform=0),X=e.envelopes[_].waveform,c[_]||(c[_]=0);let Y=s*c[_];n[_]||(n[_]=0),h[_]=n[_]?n[_]+c[_]:c[_],p[_]=this.noteSecondsEnd[_]?this.noteSecondsEnd[_]:0,B[_]=this.prevNoteSecondsEnd[_]?this.prevNoteSecondsEnd[_]:0,x[_]=p[_]?p[_]+Y:Y,L[_]=B[_]?B[_]+Y:Y,W[_]=n[_]?z*n[_]:z,H[_]=h[_]?z*h[_]:z,Q.type==1&&(Ie=!0)}let ge=Q.type==2?this.computePitchEnvelope(e,_,this.startPinTickPitch||this.getPitchValue(e,o,u,!0)):0;if(V.computeIndex!=null){let Fe=V.computeIndex+K,Y=i.computeEnvelope(Q,ye,ie,S,p[_],W[_],le,U,ge,Z,re,ue,!1,oe,ce,X,de,$);if(C){let Se=i.computeEnvelope(Q,ye,ie,E,B[_],W[_],le,d,ge,Z,re,ue,!1,oe,ce,X,de,$);Y+=(Se-Y)*O}if(M){let Se=i.computeEnvelope(Q,ye,ie,0,0,W[_],le,F,ge,Z,re,ue,!1,oe,ce,X,de,$);Y+=(Se-Y)*te}let me=Y;if(ae==!1){if(me=i.computeEnvelope(Q,ye,ie,w,x[_],H[_],le,G,ge,Z,re,ue,!1,oe,ce,X,de,$),I){let Se=i.computeEnvelope(Q,ye,ie,D,L[_],H[_],le,d,ge,Z,re,ue,!1,oe,ce,X,de,$);me+=(Se-me)*j}if(q){let Se=i.computeEnvelope(Q,ye,ie,0,0,H[_],le,F,ge,Z,re,ue,!1,oe,ce,X,de,$);me+=(Se-me)*ee}}if(this.envelopeStarts[Fe]*=Y,this.envelopeEnds[Fe]*=me,this.me[this.oe++]=Fe,V.isFilter){let Se=e.tmpNoteFilterStart!=null?e.tmpNoteFilterStart:e.noteFilter;Se.controlPointCount>K&&Se.controlPoints[K].type==0&&(be=Math.max(be,i.getLowpassCutoffDecayVolumeCompensation(Q,fe)))}}}this.noteSecondsStartUnscaled=S,this.noteSecondsEndUnscaled=w,this.noteTicksStart=v,this.noteTicksEnd=P,this.prevNoteSecondsStartUnscaled=E,this.prevNoteSecondsEndUnscaled=D,this.prevNoteTicksStart=R,this.prevNoteTicksEnd=N;for(let _=0;_<t.maxEnvelopeCount+1;_++)this.noteSecondsStart[_]=p[_],this.noteSecondsEnd[_]=x[_],this.prevNoteSecondsStart[_]=B[_],this.prevNoteSecondsEnd[_]=L[_];this.prevNoteSize=d,this.nextNoteSize=F,this.noteSizeStart=U,this.noteSizeEnd=G,this.prevSlideStart=C,this.prevSlideEnd=I,this.nextSlideStart=M,this.nextSlideEnd=q,this.prevSlideRatioStart=O,this.prevSlideRatioEnd=j,this.nextSlideRatioStart=te,this.nextSlideRatioEnd=ee,this.lowpassCutoffDecayVolumeCompensation=be}clearEnvelopes(){for(let e=0;e<this.oe;e++){let a=this.me[e];this.envelopeStarts[a]=1,this.envelopeEnds[a]=1}this.oe=0}static computeEnvelope(e,a,n,r,s,o,c,u,b,l,g,m,y=!1,h,f,p,S,x){let w=y?e.speed:1,v=m-g;switch(e.type){case 0:return m;case 1:return l?m-pe.noteSizeToVolumeMult(u)*v:pe.noteSizeToVolumeMult(u)*v+g;case 2:return b;case 3:let P=4294967295,B=h;switch(p){case 0:if(B<=1)return 1;let D=vt((a==0?0:Math.floor(c*a/256))+"",f);return l?m-v*(B/(B-1))*Math.floor(D*B/(P+1))/B:v*(B/(B-1))*Math.floor(D*B/(P+1))/B+g;case 1:let R=vt(S+"",f);return l?m-v*R/(P+1):v*R/(P+1)+g;case 2:if(B<=1)return 1;let N=vt(x+"",f);return l?m-v*(B/(B-1))*Math.floor(N*B/(P+1))/B:v*(B/(B-1))*Math.floor(N*B/(P+1))/B+g;case 3:let z=vt((a==0?0:Math.floor(c*a/256))+"",f),W=vt((a==0?0:Math.floor((c*a+256)/256))+"",f),H=z*(1-c*a/256%1)+W*(c*a/256%1);return l?m-v*H/(P+1):v*H/(P+1)+g;default:throw new Error("Unrecognized operator envelope waveform type: "+p)}case 6:return l?m-v*(1/(1+s*w)):v/(1+s*w)+g;case 7:return l?v/(1+s*w)+g:m-v/(1+s*w);case 8:switch(p){case 0:return l?m/2+v*Math.cos(o*2*Math.PI*w)*.5+g/2:m/2-v*Math.cos(o*2*Math.PI*w)*.5+g/2;case 1:return l?Math.cos(o*2*Math.PI*w+3*Math.PI/2)<0?m:g:Math.cos(o*2*Math.PI*w+3*Math.PI/2)<0?g:m;case 2:return l?m/2-v/Math.PI*Math.asin(Math.sin(Math.PI/2+o*Math.PI*2*w))+g/2:m/2+v/Math.PI*Math.asin(Math.sin(Math.PI/2+o*Math.PI*2*w))+g/2;case 3:return l?m-o*w%1*v:o*w%1*v+g;case 4:let D=0;return l?D=m/2-v*2/Math.PI*Math.asin(Math.sin(Math.PI/2+o*Math.PI*2*w))+g/2:D=m/2+v*2/Math.PI*Math.asin(Math.sin(Math.PI/2+o*Math.PI*2*w))+g/2,Math.max(g,Math.min(m,D));case 5:if(h<=1)return 1;let R=o*w%1;return l?m-Math.floor(R*h)*v/(h-1):Math.floor(R*h)*v/(h-1)+g;case 6:if(h<=1)return 1;let N=.5+(l?-1:1)*(1/Math.PI)*Math.asin(Math.sin(Math.PI/2+o*Math.PI*2*w));return Math.round(N*(h-1))*v/(h-1)+g;default:throw new Error("Unrecognized operator envelope waveform type: "+p)}case 9:return l?m/4+v*Math.cos(o*2*Math.PI*w)*.25+g/4:.5+m/4-v*Math.cos(o*2*Math.PI*w)*.25-g/4;case 4:return l?Math.max(0,m+1-Math.max(1-g,1-m-r*n*10)):Math.max(1+g,1+m-r*n*10);case 5:let L=.25/Math.sqrt(w*a);return l?m-v*(r<L?r/L:1/(1+(r-L)*w*a)):v*(r<L?r/L:1/(1+(r-L)*w*a))+g;case 10:return l?m-v*Math.pow(2,-w*s):v*Math.pow(2,-w*s)+g;case 14:return l?m-v*+(r<.25/Math.sqrt(w*a)):v*+(r<.25/Math.sqrt(w*a))+g;case 11:let E=.5-Math.cos(o*w)*.5;return E=1/(1+s*(w-E/(1.5/w))),E=E>0?E:0,l?m-v*E:v*E+g;case 12:{let D=1-s/(16/w);return D=D>0?D:0,l?m-v*D:v*D+g}case 13:{let D=s/(16/w);return D=D<1?D:1,l?m-v*D:v*D+g}case 15:return l?Math.min(Math.max(g,m-v*Math.sqrt(Math.max(1-w*s/2,0))),m):Math.max(g,v*Math.sqrt(Math.max(1-w*s/2,0))+g);default:throw new Error("Unrecognized operator envelope type.")}}getPitchValue(e,a,n,r=!0){if(a&&a.pitchCount>=1){let s=e.getChord(),o=s.arpeggiates,c=s.name=="monophonic",u=Math.floor(n.arpTime/t.ticksPerArpeggio),b=a.pitches[o?zt(a.pitchCount,e.fastTwoNoteArp,u):c?e.monoChordTone:0];return r&&a.lastInterval!=b?b+a.lastInterval:b}return 0}computePitchEnvelope(e,a,n=0){let r=0,s=t.maxPitch,o=!1,c=0,u=1;e.isNoiseInstrument&&(s=t.drumCount-1),a<e.envelopeCount&&a!==-2&&(r=e.envelopes[a].pitchEnvelopeStart,s=e.envelopes[a].pitchEnvelopeEnd,o=e.envelopes[a].inverse,c=e.envelopes[a].perEnvelopeLowerBound,u=e.envelopes[a].perEnvelopeUpperBound),r>s&&(r=0,s=e.isNoiseInstrument?t.drumCount-1:t.maxPitch);let b=s-r+1;return o?n<=r?u:n>=s?c:u-(n-r)*(u-c)/b:n<=r?c:n>=s?u:(n-r)*(u-c)/b+c}static getLowpassCutoffDecayVolumeCompensation(e,a=1){return e.type==10?1.25+.025*a:e.type==6?1+.02*a:1}computeDrumsetEnvelopes(e,a,n,r,s){function c(l,g,m,y){return i.computeEnvelope(a,1,1,l,g,m,0,y,1,!1,0,1,!0,2,2,0,1,0)}let u=c(this.noteSecondsStartUnscaled,this.noteSecondsStartUnscaled,n*r,this.noteSizeStart);if(this.prevSlideStart){let l=c(this.prevNoteSecondsStartUnscaled,this.prevNoteSecondsStartUnscaled,n*r,this.prevNoteSize);u+=(l-u)*this.prevSlideRatioStart}if(this.nextSlideStart){let l=c(0,0,n*r,this.nextNoteSize);u+=(l-u)*this.nextSlideRatioStart}let b=u;if(b=c(this.noteSecondsEndUnscaled,this.noteSecondsEndUnscaled,n*s,this.noteSizeEnd),this.prevSlideEnd){let l=c(this.prevNoteSecondsEndUnscaled,this.prevNoteSecondsEndUnscaled,n*s,this.prevNoteSize);b+=(l-b)*this.prevSlideRatioEnd}if(this.nextSlideEnd){let l=c(0,0,n*s,this.nextNoteSize);b+=(l-b)*this.nextSlideRatioEnd}this.drumsetFilterEnvelopeStart=u,this.drumsetFilterEnvelopeEnd=b}};var yn=class{wave=null;re=-1;getCustomWave(e,a){if(this.re==e.hash)return this.wave;this.re=e.hash;let n=t.spectrumNoiseLength;(this.wave==null||this.wave.length!=n+1)&&(this.wave=new Float32Array(n+1));let r=this.wave;for(let l=0;l<n;l++)r[l]=0;let s=14,o=.25,c=[0,1/7,Math.log2(5/4),3/7,Math.log2(3/2),5/7,6/7];function u(l){return a+Math.floor(l/t.spectrumControlPointsPerOctave)+c[(l+t.spectrumControlPointsPerOctave)%t.spectrumControlPointsPerOctave]}let b=1;for(let l=0;l<t.spectrumControlPoints+1;l++){let g=l<=0?0:e.spectrum[l-1],m=l>=t.spectrumControlPoints?e.spectrum[t.spectrumControlPoints-1]:e.spectrum[l],y=u(l-1),h=u(l);l>=t.spectrumControlPoints&&(h=s+(h-s)*o),!(g==0&&m==0)&&(b+=.02*wt(r,n,y,h,g/t.spectrumMax,m/t.spectrumMax,-.5))}return e.spectrum[t.spectrumControlPoints-1]>0&&(b+=.02*wt(r,n,s+(u(t.spectrumControlPoints)-s)*o,s,e.spectrum[t.spectrumControlPoints-1]/t.spectrumMax,0,-.5)),mn(r,n),Xn(r,5/(Math.sqrt(n)*Math.pow(b,.75))),r[n]=r[0],r}},ea=class{wave=null;re=-1;he;getCustomWave(e,a){if(this.re==e.hash&&this.he==a)return this.wave;this.re=e.hash,this.he=a;let n=a==7?t.harmonicsRenderedForPickedString:t.harmonicsRendered,r=t.harmonicsWavelength,s=sn(0,null,null);(this.wave==null||this.wave.length!=r+1)&&(this.wave=new Float32Array(r+1));let o=this.wave;for(let l=0;l<r;l++)o[l]=0;let c=-.25,u=1;for(let l=0;l<n;l++){let g=l+1,m=l<t.harmonicsControlPoints?e.harmonics[l]:e.harmonics[t.harmonicsControlPoints-1];l>=t.harmonicsControlPoints&&(m*=1-(l-t.harmonicsControlPoints)/(n-t.harmonicsControlPoints));let y=m/t.harmonicsMax,h=Math.pow(2,m-t.harmonicsMax+1)*Math.sqrt(y);l<t.harmonicsControlPoints&&(u+=h),h*=Math.pow(g,c),h*=s[l+589],o[r-g]=h}mn(o,r);let b=1/Math.pow(u,.7);for(let l=0;l<o.length;l++)o[l]*=b;return Ca(o),o[r]=o[0],o}},bn=class{delayLine=null;delayIndex;allPassSample;allPassPrevInput;sustainFilterSample;sustainFilterPrevOutput2;sustainFilterPrevInput1;sustainFilterPrevInput2;fractionalDelaySample;prevDelayLength;delayLengthDelta;delayResetOffset;allPassG=0;allPassGDelta=0;sustainFilterA1=0;sustainFilterA1Delta=0;sustainFilterA2=0;sustainFilterA2Delta=0;sustainFilterB0=0;sustainFilterB0Delta=0;sustainFilterB1=0;sustainFilterB1Delta=0;sustainFilterB2=0;sustainFilterB2Delta=0;constructor(){this.reset()}reset(){this.delayIndex=-1,this.allPassSample=0,this.allPassPrevInput=0,this.sustainFilterSample=0,this.sustainFilterPrevOutput2=0,this.sustainFilterPrevInput1=0,this.sustainFilterPrevInput2=0,this.fractionalDelaySample=0,this.prevDelayLength=-1,this.delayResetOffset=0}update(e,a,n,r,s,o,c,u){let b=2*Math.PI*t.pickedStringDispersionCenterFreq/e.samplesPerSecond,l=this.prevDelayLength,g=n.phaseDeltas[r],m=n.phaseDeltaScales[r],y=g*Math.pow(m,s),h=Math.PI*2*g,f=Math.PI*2*y,p=h*2,S=f*2,x=Math.min(Math.PI,h*t.pickedStringDispersionFreqMult*Math.pow(b/h,t.pickedStringDispersionFreqScale)),w=Math.min(Math.PI,f*t.pickedStringDispersionFreqMult*Math.pow(b/f,t.pickedStringDispersionFreqScale)),v=2*Math.PI*t.pickedStringShelfHz/e.samplesPerSecond,P=(Math.pow(100,o)-1)/99,B=(Math.pow(100,c)-1)/99,L=u==1?.25:0,E=15.6,D=3*e.samplesPerSecond/48e3,R=Math.pow(.5,P*Math.pow(v/(h*E),1+2*L)*E),N=Math.pow(.5,B*Math.pow(v/(f*E),1+2*L)*E),z=Math.pow(R,.002),W=Math.pow(N,.002);pe.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(x),e.tempFrequencyResponse.analyze(pe.tempFilterStartCoefficients,p);let H=pe.tempFilterStartCoefficients.b[0],U=-e.tempFrequencyResponse.angle()/p;pe.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(w),e.tempFrequencyResponse.analyze(pe.tempFilterEndCoefficients,S);let G=pe.tempFilterEndCoefficients.b[0],d=-e.tempFrequencyResponse.angle()/S,F;($=>($[$.bright=0]="bright",$[$.normal=1]="normal",$[$.resonant=2]="resonant"))(F||={});let C=u==0?0:1;if(C==0){let oe=Math.pow(R,t.stringDecayRate),ce=Math.pow(N,t.stringDecayRate);pe.tempFilterStartCoefficients.highShelf2ndOrder(v,oe,.5),pe.tempFilterEndCoefficients.highShelf2ndOrder(v,ce,.5)}else{let oe=Math.pow(C==1?0:1,.25),ce=Math.pow(D*D*h*3.3*48e3/e.samplesPerSecond,.5+L)/D/Math.pow(P,.5),X=Math.pow(D*D*f*3.3*48e3/e.samplesPerSecond,.5+L)/D/Math.pow(B,.5),$=ce*Math.pow(2,.5-1.75*(1-Math.pow(1-oe,.85))),de=X*Math.pow(2,.5-1.75*(1-Math.pow(1-oe,.85))),ge=Math.pow(2,-Math.pow(2,-Math.pow(oe,.9))),Fe=Math.pow(2,-Math.pow(2,-Math.pow(oe,.9)));pe.tempFilterStartCoefficients.lowPass2ndOrderButterworth($n($),ge),pe.tempFilterEndCoefficients.lowPass2ndOrderButterworth($n(de),Fe)}e.tempFrequencyResponse.analyze(pe.tempFilterStartCoefficients,p);let I=pe.tempFilterStartCoefficients.a[1],M=pe.tempFilterStartCoefficients.a[2],q=pe.tempFilterStartCoefficients.b[0]*z,O=pe.tempFilterStartCoefficients.b[1]*z,j=pe.tempFilterStartCoefficients.b[2]*z,te=-e.tempFrequencyResponse.angle()/p;e.tempFrequencyResponse.analyze(pe.tempFilterEndCoefficients,S);let ee=pe.tempFilterEndCoefficients.a[1],be=pe.tempFilterEndCoefficients.a[2],Ie=pe.tempFilterEndCoefficients.b[0]*W,_=pe.tempFilterEndCoefficients.b[1]*W,V=pe.tempFilterEndCoefficients.b[2]*W,K=-e.tempFrequencyResponse.angle()/S,Q=1/g,Z=1/y,ae=Math.ceil(Math.max(Q,Z)*2),fe=Q-U-te,ie=Z-d-K;this.prevDelayLength=fe,this.delayLengthDelta=(ie-fe)/s,this.allPassG=H,this.sustainFilterA1=I,this.sustainFilterA2=M,this.sustainFilterB0=q,this.sustainFilterB1=O,this.sustainFilterB2=j,this.allPassGDelta=(G-H)/s,this.sustainFilterA1Delta=(ee-I)/s,this.sustainFilterA2Delta=(be-M)/s,this.sustainFilterB0Delta=(Ie-q)/s,this.sustainFilterB1Delta=(_-O)/s,this.sustainFilterB2Delta=(V-j)/s;let ye=Math.abs(Math.log2(fe/l))>.01,re=this.delayIndex==-1||ye;if(this.delayLine==null||this.delayLine.length<=ae){let oe=Math.ceil(2*e.samplesPerSecond/Ne.frequencyFromPitch(12)),ce=new Float32Array(Je(Math.max(oe,ae)));if(!re&&this.delayLine!=null){let X=this.delayLine.length-1>>0,$=this.delayIndex+this.delayResetOffset;this.delayIndex=this.delayLine.length-this.delayResetOffset;for(let de=0;de<this.delayLine.length;de++)ce[de]=this.delayLine[$+de&X]}this.delayLine=ce}let ue=this.delayLine,le=ue.length-1>>0;if(re){this.delayIndex=0,this.allPassSample=0,this.allPassPrevInput=0,this.sustainFilterSample=0,this.sustainFilterPrevOutput2=0,this.sustainFilterPrevInput1=0,this.sustainFilterPrevInput2=0,this.fractionalDelaySample=0;let oe=-fe,ce=Math.floor(oe-Q/2),X=Math.ceil(ce+Q*2);this.delayResetOffset=X;for(let De=ce;De<=X;De++)ue[De&le]=0;let $=a.waveL,de=$.length-1,ge=de/Q,Fe=Math.min(Q*.2,e.samplesPerSecond*.003),Y=Math.ceil(oe),me=oe+Q+Fe,Se=me,Me=(Y-oe)*ge,Ae=0;for(let De=Y;De<=Se;De++){let ke=Me|0,Le=ke%de,Ce=$[Le],qe=Me-ke;Ce+=($[Le+1]-Ce)*qe;let Be=(Ce-Ae)/ge,We=Math.min(1,(De-oe)/Fe),Xe=Math.min(1,(me-De)/Fe),Oe=We*Xe,Ze=Oe*Oe*(3-2*Oe);ue[De&le]+=Be*Ze,Ae=Ce,Me+=ge}}}},jt=class i{awake=!1;computed=!1;tonesAddedInThisTick=!1;flushingDelayLines=!1;deactivateAfterThisTick=!1;attentuationProgress=0;flushedSamples=0;activeTones=new ct;activeModTones=new ct;releasedTones=new ct;liveInputTones=new ct;type=0;synthesizer=null;waveL=null;waveR=null;isStereo=!1;isUsingAdvancedLoopControls=!1;chipWaveLoopStart=0;chipWaveLoopEnd=0;chipWaveLoopMode=0;chipWavePlayBackwards=!1;chipWaveStartOffset=0;chipWaveInStereo=!1;noisePitchFilterMult=1;unison=null;unisonVoices=1;unisonSpread=0;unisonOffset=0;unisonExpression=1.4;unisonSign=1;chord=null;effects=[];volumeScale=0;aliases=!1;arpTime=0;vibratoTime=0;nextVibratoTime=0;envelopeTime=[];mixVolume=1;mixVolumeDelta=0;delayDuration=0;totalDelaySamples=0;delayInputMult=0;delayInputMultDelta=0;spectrumWave=new yn;harmonicsWave=new ea;drumsetSpectrumWaves=[];constructor(){for(let e=0;e<t.drumCount;e++)this.drumsetSpectrumWaves[e]=new yn}envelopeComputer=new Lt;allocateNecessaryBuffers(e,a,n){for(let r=0;r<a.effects.length;r++)if(this.effects[r]!=null){let s=a.effects[r];this.effects[r].allocateNecessaryBuffers(e,a,s,n)}}deactivate(){for(let e=0;e<this.effects.length;e++)this.effects[e]!=null&&this.effects[e].deactivate();this.volumeScale=1,this.aliases=!1,this.awake=!1,this.flushingDelayLines=!1,this.deactivateAfterThisTick=!1,this.attentuationProgress=0,this.flushedSamples=0}resetAllEffects(){this.deactivate(),this.vibratoTime=0,this.nextVibratoTime=0,this.arpTime=0;for(let e=0;e<t.maxEnvelopeCount+1;e++)this.envelopeTime[e]=0;this.envelopeComputer.reset();for(let e=0;e<this.effects.length;e++)this.effects[e]!=null&&this.effects[e].reset()}compute(e,a,n,r,s,o,c){this.computed=!0,this.type=a.type,this.synthesizer=pe.getInstrumentSynthFunction(a),this.unison=t.unisons[a.unison],this.chord=a.getChord(),this.noisePitchFilterMult=t.chipNoises[a.chipNoise].pitchFilterMult,this.aliases=a.aliases,this.volumeScale=1,this.delayDuration=0,this.totalDelaySamples=0;for(let v=0;v<a.effects.length;v++)this.effects[v]==null&&(this.effects[v]=new fn(a.effects[v].type));this.effects.length=a.effects.length,this.allocateNecessaryBuffers(e,a,n);let u=e.samplesPerSecond;this.updateWaves(a,u);let l=e.getTicksIntoBar(),g=n/e.samplesPerSecond,m=e.getCurrentPart(),y=[];for(let v=0;v<t.maxEnvelopeCount;v++)y[v]=0;let h=t.arpSpeedScale[a.envelopeSpeed];e.isModActive(t.modulators.dictionary["envelope speed"].index,o,c)&&(h=Math.max(0,Math.min(t.arpSpeedScale.length-1,e.getModValue(t.modulators.dictionary["envelope speed"].index,o,c,!1))),Number.isInteger(h)?h=t.arpSpeedScale[h]:h=(1-h%1)*t.arpSpeedScale[Math.floor(h)]+h%1*t.arpSpeedScale[Math.ceil(h)]);for(let v=0;v<a.envelopeCount;v++){let P=a.envelopes[v].perEnvelopeSpeed;e.isModActive(t.modulators.dictionary["individual envelope speed"].index,o,c)&&a.envelopes[v].tempEnvelopeSpeed!=null&&(P=a.envelopes[v].tempEnvelopeSpeed),y[v]=h*P}this.envelopeComputer.computeEnvelopes(a,m,this.envelopeTime,l,g,s,y,this,e,o,c);let f=this.envelopeComputer.envelopeStarts,p=this.envelopeComputer.envelopeEnds;for(let v=0;v<a.effects.length;v++)if(this.effects[v]!=null){let P=a.effects[v];this.effects[v].compute(e,a,P,this,n,r,s,o,c,f,p)}this.mixVolume=f[1]*pe.instrumentVolumeToVolumeMult(a.volume);let S=p[1]*pe.instrumentVolumeToVolumeMult(a.volume);if(e.isModActive(t.modulators.dictionary["post volume"].index,o,c)){let v=e.getModValue(t.modulators.dictionary["post volume"].index,o,c,!1),P=e.getModValue(t.modulators.dictionary["post volume"].index,o,c,!0);this.mixVolume*=v<=0?(v+t.volumeRange/2)/(t.volumeRange/2):pe.instrumentVolumeToVolumeMult(v),S*=P<=0?(P+t.volumeRange/2)/(t.volumeRange/2):pe.instrumentVolumeToVolumeMult(P)}e.isModActive(t.modulators.dictionary["song volume"].index)&&(this.mixVolume*=e.getModValue(t.modulators.dictionary["song volume"].index,void 0,void 0,!1)/100,S*=e.getModValue(t.modulators.dictionary["song volume"].index,void 0,void 0,!0)/100),this.mixVolumeDelta=(S-this.mixVolume)/r;let x=1,w=1;if(this.tonesAddedInThisTick)this.attentuationProgress=0,this.flushedSamples=0,this.flushingDelayLines=!1;else if(this.flushingDelayLines)x=0,w=0,this.flushedSamples+=r,this.flushedSamples>=this.totalDelaySamples&&(this.deactivateAfterThisTick=!0);else{this.attentuationProgress==0;let P=n/u/this.delayDuration,B=this.attentuationProgress+P;B>=1&&(w=0),this.attentuationProgress=B,this.attentuationProgress>=1&&(this.flushingDelayLines=!0)}this.delayInputMult=x,this.delayInputMultDelta=(w-x)/r,this.envelopeComputer.clearEnvelopes()}updateWaves(e,a){if(this.volumeScale=1,e.type==0)this.waveL=this.aliases?t.rawChipWaves[e.chipWave].samples:t.chipWaves[e.chipWave].samples,this.waveR=this.aliases?t.rawChipWaves[e.chipWave].samplesR||t.rawChipWaves[e.chipWave].samples:t.chipWaves[e.chipWave].samplesR||t.chipWaves[e.chipWave].samples,this.isUsingAdvancedLoopControls=e.isUsingAdvancedLoopControls,this.chipWaveLoopStart=e.chipWaveLoopStart,this.chipWaveLoopEnd=e.chipWaveLoopEnd,this.chipWaveLoopMode=e.chipWaveLoopMode,this.chipWavePlayBackwards=e.chipWavePlayBackwards,this.chipWaveStartOffset=e.chipWaveStartOffset,this.chipWaveInStereo=e.chipWaveInStereo,this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==6)this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==9)this.waveL=this.aliases?e.customChipWave:e.customChipWaveIntegral,this.waveR=this.aliases?e.customChipWave:e.customChipWaveIntegral,this.volumeScale=.05,this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==2)this.waveL=sn(e.chipNoise,mn,Xn),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==5)this.waveL=this.harmonicsWave.getCustomWave(e.harmonicsWave,e.type),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==7)this.waveL=this.harmonicsWave.getCustomWave(e.harmonicsWave,e.type),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==3)this.waveL=this.spectrumWave.getCustomWave(e.spectrumWave,8),this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign;else if(e.type==4){for(let n=0;n<t.drumCount;n++)this.drumsetSpectrumWaves[n].getCustomWave(e.drumsetSpectrumWaves[n],i.Ee(n));this.waveL=null,this.unisonVoices=e.unisonVoices,this.unisonSpread=e.unisonSpread,this.unisonOffset=e.unisonOffset,this.unisonExpression=e.unisonExpression,this.unisonSign=e.unisonSign}else this.waveL=null}getDrumsetWave(e){if(this.type==4)return this.drumsetSpectrumWaves[e].wave;throw new Error("Unhandled instrument type in getDrumsetWave")}static drumsetIndexReferenceDelta(e){return Ne.frequencyFromPitch(t.spectrumBasePitch+e*6)/44100}static Ee(e){return 15+Math.log2(i.drumsetIndexReferenceDelta(e))}effectsIncludeType(e){for(let a=0;a<this.effects.length;a++)if(this.effects[a]!=null&&this.effects[a].type==e)return!0;return!1}};var ta=class{activeEvents=[];listeners={};constructor(){this.activeEvents=[],this.listeners={}}raise(e,a,n){if(this.listeners[e]!=null){this.activeEvents.push(e);for(let r=0;r<this.listeners[e].length;r++)this.listeners[e][r](a,n);this.activeEvents.pop()}}listen(e,a){this.listeners[e]==null&&(this.listeners[e]=[]),this.listeners[e].push(a)}unlisten(e,a){if(this.listeners[e]==null)return;let n=this.listeners[e].indexOf(a);n!=-1&&this.listeners[e].splice(n,1)}unlistenAll(e){this.listeners[e]!=null&&(this.listeners[e]=[])}},gn=new ta;var St=1e-24,na=class{instrumentIndex;pitches=Array(t.maxChordSize+2).fill(0);pitchCount=0;chordSize=0;drumsetPitch=null;note=null;prevNote=null;nextNote=null;prevNotePitchIndex=0;nextNotePitchIndex=0;freshlyAllocated=!0;atNoteStart=!1;isOnLastTick=!1;passedEndOfNote=!1;forceContinueAtStart=!1;forceContinueAtEnd=!1;noteStartPart=0;noteEndPart=0;ticksSinceReleased=0;liveInputSamplesHeld=0;lastInterval=0;chipWaveStartOffset=0;noiseSample=0;noiseSampleA=0;noiseSampleB=0;stringSustainStart=0;stringSustainEnd=0;noiseSamples=[];phases=[];operatorWaves=[];phaseDeltas=[];directions=[];chipWaveCompletions=[];chipWavePrevWavesL=[];chipWavePrevWavesR=[];chipWaveCompletionsLastWaveL=[];chipWaveCompletionsLastWaveR=[];phaseDeltaScales=[];expression=0;expressionDelta=0;operatorExpressions=[];operatorExpressionDeltas=[];prevPitchExpressions=Array(t.maxPitchOrOperatorCount).fill(null);prevVibrato=null;prevStringDecay=null;pulseWidth=0;pulseWidthDelta=0;decimalOffset=0;supersawDynamism=0;supersawDynamismDelta=0;supersawUnisonDetunes=[];supersawShape=0;supersawShapeDelta=0;supersawDelayLength=0;supersawDelayLengthDelta=0;supersawDelayLine=null;supersawDelayIndex=-1;supersawPrevPhaseDelta=null;pickedStrings=[];noteFiltersL=[];noteFiltersR=[];noteFilterCount=0;initialNoteFilterInputL1=0;initialNoteFilterInputR1=0;initialNoteFilterInputL2=0;initialNoteFilterInputR2=0;specialIntervalExpressionMult=1;feedbackOutputs=[];feedbackMult=0;feedbackDelta=0;stereoVolumeLStart=0;stereoVolumeRStart=0;stereoVolumeLDelta=0;stereoVolumeRDelta=0;stereoDelayStart=0;stereoDelayEnd=0;stereoDelayDelta=0;customVolumeStart=0;customVolumeEnd=0;filterResonanceStart=0;filterResonanceDelta=0;isFirstOrder=!1;envelopeComputer=new Lt;constructor(){this.reset()}reset(){for(let e=0;e<t.unisonVoicesMax;e++)this.noiseSamples[e]=0;for(let e=0;e<t.maxPitchOrOperatorCount;e++)this.phases[e]=0,this.directions[e]=1,this.chipWaveCompletions[e]=0,this.chipWavePrevWavesL[e]=0,this.chipWavePrevWavesR[e]=0,this.chipWaveCompletionsLastWaveL[e]=0,this.chipWaveCompletionsLastWaveR[e]=0,this.operatorWaves[e]=t.operatorWaves[0],this.feedbackOutputs[e]=0,this.prevPitchExpressions[e]=null;for(let e=0;e<this.noteFilterCount;e++)this.noteFiltersL[e].resetOutput(),this.noteFiltersR[e].resetOutput();this.noteFilterCount=0,this.initialNoteFilterInputL1=0,this.initialNoteFilterInputR1=0,this.initialNoteFilterInputL2=0,this.initialNoteFilterInputR2=0,this.liveInputSamplesHeld=0,this.supersawDelayIndex=-1;for(let e of this.pickedStrings)e.reset();this.envelopeComputer.reset(),this.prevVibrato=null,this.prevStringDecay=null,this.supersawPrevPhaseDelta=null,this.drumsetPitch=null}},pe=class i{syncSongState(){let e=this.song.getChannelCount();for(let a=this.channels.length;a<e;a++)this.channels[a]=new dn;this.channels.length=e;for(let a=0;a<e;a++){let n=this.song.channels[a],r=this.channels[a];for(let s=r.instruments.length;s<n.instruments.length;s++)r.instruments[s]=new jt;if(r.instruments.length=n.instruments.length,r.muted!=n.muted&&(r.muted=n.muted,r.muted))for(let s of r.instruments)s.resetAllEffects()}}initModFilters(e){if(e!=null){e.tmpEqFilterStart=e.eqFilter,e.tmpEqFilterEnd=null;for(let a=0;a<e.getChannelCount();a++)for(let n=0;n<e.channels[a].instruments.length;n++){let r=e.channels[a].instruments[n];for(let s=0;s<e.channels[a].instruments[n].effects.length;s++){let o=e.channels[a].instruments[n].effects[s];o.tmpEqFilterStart=o.eqFilter,o.tmpEqFilterEnd=null}r.tmpNoteFilterStart=r.noteFilter,r.tmpNoteFilterEnd=null}}}warmUpSynthesizer(e){if(e!=null){this.syncSongState();let n=this.getSamplesPerTick();for(let r=0;r<e.getChannelCount();r++)for(let s=0;s<e.channels[r].instruments.length;s++){let o=e.channels[r].instruments[s],c=this.channels[r].instruments[s];i.getInstrumentSynthFunction(o),c.vibratoTime=0,c.nextVibratoTime=0;for(let u=0;u<t.maxEnvelopeCount+1;u++)c.envelopeTime[u]=0;c.arpTime=0,c.updateWaves(o,this.samplesPerSecond),c.allocateNecessaryBuffers(this,o,n)}}var a=new Float32Array(1);this.isPlayingSong=!0,this.synthesize(a,a,1,!0),this.isPlayingSong=!1}computeLatestModValues(){if(this.song!=null&&this.song.modChannelCount>0){let e=[],a=[];this.modValues=[],this.nextModValues=[],this.modInsValues=[],this.nextModInsValues=[],this.heldMods=[];for(let r=0;r<this.song.pitchChannelCount+this.song.noiseChannelCount;r++){a[r]=[],this.modInsValues[r]=[],this.nextModInsValues[r]=[];for(let s=0;s<this.song.channels[r].instruments.length;s++)this.modInsValues[r][s]=[],this.nextModInsValues[r][s]=[],a[r][s]=[]}let n=this.beat*t.partsPerBeat+this.part;for(let r=this.song.pitchChannelCount+this.song.noiseChannelCount;r<this.song.getChannelCount();r++)if(!this.song.channels[r].muted){let s;for(let o=this.bar;o>=0;o--)if(s=this.song.getPattern(r,o),s!=null){let c=s.instruments[0],u=this.song.channels[r].instruments[c],b=[],l=[],g=o==this.bar?n:this.findPartsInBar(o);for(let m of s.notes)if(m.start<=g&&(b[t.modCount-1-m.pitches[0]]==null||m.end>b[t.modCount-1-m.pitches[0]]))if(m.start==g&&(b[t.modCount-1-m.pitches[0]]=m.start,l[t.modCount-1-m.pitches[0]]=m.pins[0].size),m.end<=g)b[t.modCount-1-m.pitches[0]]=m.end,l[t.modCount-1-m.pitches[0]]=m.pins[m.pins.length-1].size;else{b[t.modCount-1-m.pitches[0]]=g;for(let y=0;y<m.pins.length;y++)if(m.pins[y].time+m.start>g){let h=m.pins[y].time-m.pins[y-1].time,f=g-m.start-m.pins[y-1].time,p=m.pins[y].size-m.pins[y-1].size;l[t.modCount-1-m.pitches[0]]=Math.round(m.pins[y-1].size+p*f/h),y=m.pins.length}}for(let m=0;m<t.modCount;m++)if(b[m]!=null)if(t.modulators[u.modulators[m]].forSong){let y=u.modulators[m]==t.modulators.dictionary["song eq"].index;if(e[u.modulators[m]]==null||o*t.partsPerBeat*this.song.beatsPerBar+b[m]>e[u.modulators[m]]){if(y){let h=this.song;if(u.modFilterTypes[m]==0)h.tmpEqFilterStart=h.eqSubFilters[l[m]];else{for(let f=0;f<t.filterMorphCount;f++)h.tmpEqFilterStart!=null&&h.tmpEqFilterStart==h.eqSubFilters[f]&&(h.tmpEqFilterStart=new Ee,h.tmpEqFilterStart.fromJsonObject(h.eqSubFilters[f].toJsonObject()),f=t.filterMorphCount);h.tmpEqFilterStart!=null&&Math.floor((u.modFilterTypes[m]-1)/2)<h.tmpEqFilterStart.controlPointCount&&(u.modFilterTypes[m]%2?h.tmpEqFilterStart.controlPoints[Math.floor((u.modFilterTypes[m]-1)/2)].freq=l[m]:h.tmpEqFilterStart.controlPoints[Math.floor((u.modFilterTypes[m]-1)/2)].gain=l[m])}h.tmpEqFilterEnd=h.tmpEqFilterStart}for(let h=0;h<u.modChannels[m].length;h++)this.setModValue(l[m],l[m],u.modChannels[m][h],u.modInstruments[m][h],u.modulators[m]);e[u.modulators[m]]=o*t.partsPerBeat*this.song.beatsPerBar+b[m]}}else{let y=[],h=[];if(u.modInstruments[m][0]==this.song.channels[u.modChannels[m][0]].instruments.length)for(let f=0;f<this.song.channels[u.modChannels[m][0]].instruments.length;f++)y.push(u.modChannels[m][0]),h.push(f);else if(u.modInstruments[m][0]>this.song.channels[u.modChannels[m][0]].instruments.length){let f=this.song.getPattern(u.modChannels[m][0],o);f!=null&&(y.push(u.modChannels[m][0]),h=f.instruments)}else for(let f=0;f<u.modChannels[m].length;f++)y.push(u.modChannels[m][f]),h.push(u.modInstruments[m][f]);for(let f=0;f<h.length;f++){let p=u.modulators[m]==t.modulators.dictionary["post eq"].index,S=u.modulators[m]==t.modulators.dictionary["pre eq"].index,x=u.modulators[m];if(p?x=t.modulators.length+(u.modFilterTypes[m]|0):S&&(x=t.modulators.length+1+2*t.filterMaxPoints+(u.modFilterTypes[m]|0)),a[u.modChannels[m][f]][h[f]][x]==null||o*t.partsPerBeat*this.song.beatsPerBar+b[m]>a[u.modChannels[m][f]][h[f]][x]){if(p){let w=this.song.channels[u.modChannels[m][f]].instruments[h[f]];for(let v=0;v<w.effects.length;v++){let P=w.effects[v];if(u.modFilterTypes[m]==0)P.tmpEqFilterStart=P.eqSubFilters[l[m]];else{for(let B=0;B<t.filterMorphCount;B++)P.tmpEqFilterStart!=null&&P.tmpEqFilterStart==P.eqSubFilters[B]&&(P.tmpEqFilterStart=new Ee,P.tmpEqFilterStart.fromJsonObject(P.eqSubFilters[B].toJsonObject()),B=t.filterMorphCount);P.tmpEqFilterStart!=null&&Math.floor((u.modFilterTypes[m]-1)/2)<P.tmpEqFilterStart.controlPointCount&&(u.modFilterTypes[m]%2?P.tmpEqFilterStart.controlPoints[Math.floor((u.modFilterTypes[m]-1)/2)].freq=l[m]:P.tmpEqFilterStart.controlPoints[Math.floor((u.modFilterTypes[m]-1)/2)].gain=l[m])}P.tmpEqFilterEnd=P.tmpEqFilterStart}}else if(S){let w=this.song.channels[u.modChannels[m][f]].instruments[h[f]];if(u.modFilterTypes[m]==0)w.tmpNoteFilterStart=w.noteSubFilters[l[m]];else{for(let v=0;v<t.filterMorphCount;v++)w.tmpNoteFilterStart!=null&&w.tmpNoteFilterStart==w.noteSubFilters[v]&&(w.tmpNoteFilterStart=new Ee,w.tmpNoteFilterStart.fromJsonObject(w.noteSubFilters[v].toJsonObject()),v=t.filterMorphCount);w.tmpNoteFilterStart!=null&&Math.floor((u.modFilterTypes[m]-1)/2)<w.tmpNoteFilterStart.controlPointCount&&(u.modFilterTypes[m]%2?w.tmpNoteFilterStart.controlPoints[Math.floor((u.modFilterTypes[m]-1)/2)].freq=l[m]:w.tmpNoteFilterStart.controlPoints[Math.floor((u.modFilterTypes[m]-1)/2)].gain=l[m])}w.tmpNoteFilterEnd=w.tmpNoteFilterStart}else this.setModValue(l[m],l[m],u.modChannels[m][f],h[f],x);a[u.modChannels[m][f]][h[f]][x]=o*t.partsPerBeat*this.song.beatsPerBar+b[m]}}}}}}}determineInvalidModulators(e){if(this.song!=null)for(let a=0;a<t.modCount;a++){if(e.invalidModulators[a]=!0,e.modChannels[a][0]==-1){e.modulators[a]!=0&&(e.invalidModulators[a]=!1);continue}for(let n=0;n<e.modChannels[a].length;n++){let r=this.song.channels[e.modChannels[a][n]];if(r==null)continue;let s=[];e.modInstruments[a][n]>=r.instruments.length?s=r.instruments:s=[r.instruments[e.modInstruments[a][n]]];for(let o=0;o<s.length;o++){let c=s[o],u=c.effects[0];if(c==null)continue;let b=t.modulators[e.modulators[a]].name;(!(t.modulators[e.modulators[a]].associatedEffect!=11&&!c.effectsIncludeType(t.modulators[e.modulators[a]].associatedEffect))&&!(t.modulators[e.modulators[a]].associatedMDEffect!=6&&!(c.mdeffects&1<<t.modulators[e.modulators[a]].associatedMDEffect))||c.type!=1&&c.type!=11&&(b=="fm slider 1"||b=="fm slider 2"||b=="fm slider 3"||b=="fm slider 4"||b=="fm feedback")||c.type!=11&&(b=="fm slider 5"||b=="fm slider 6")||c.type!=6&&c.type!=8&&(b=="pulse width"||b=="decimal offset")||c.type!=8&&(b=="dynamism"||b=="spread"||b=="saw shape")||!c.getChord().arpeggiates&&(b=="arp speed"||b=="reset arp")||u.eqFilterType&&b=="post eq"||!u.eqFilterType&&(b=="post eq cut"||b=="post eq peak")||b=="post eq"&&Math.floor((e.modFilterTypes[a]+1)/2)>c.getLargestControlPointCount(!1)||c.noteFilterType&&b=="pre eq"||!c.noteFilterType&&(b=="pre eq cut"||b=="pre eq peak")||b=="pre eq"&&Math.floor((e.modFilterTypes[a]+1)/2)>c.getLargestControlPointCount(!0))&&(e.invalidModulators[a]=!1,o=s.length)}}}}static operatorAmplitudeCurve(e){return(Math.pow(16,e/15)-1)/15}samplesPerSecond=44100;panningDelayBufferSize;panningDelayBufferMask;flangerDelayBufferSize;flangerDelayBufferMask;chorusDelayBufferSize;chorusDelayBufferMask;song=null;preferLowerLatency=!1;anticipatePoorPerformance=!1;liveInputDuration=0;liveBassInputDuration=0;liveInputStarted=!1;liveBassInputStarted=!1;liveInputPitches=[];liveBassInputPitches=[];liveInputChannel=0;liveBassInputChannel=0;liveInputInstruments=[];liveBassInputInstruments=[];loopRepeatCount=-1;volume=1;oscRefreshEventTimer=0;oscEnabled=!0;enableMetronome=!1;countInMetronome=!1;renderingSong=!1;heldMods=[];wantToSkip=!1;playheadInternal=0;bar=0;prevBar=null;nextBar=null;beat=0;part=0;tick=0;isAtStartOfTick=!0;isAtEndOfTick=!0;tickSampleCountdown=0;modValues=[];modInsValues=[];nextModValues=[];nextModInsValues=[];isPlayingSong=!1;isRecording=!1;liveInputEndTime=0;browserAutomaticallyClearsAudioBuffer=!0;static tempFilterStartCoefficients=new at;static tempFilterEndCoefficients=new at;tempDrumSetControlPoint=new Pe;tempFrequencyResponse=new lt;loopBarStart=-1;loopBarEnd=-1;static fmSynthFunctionCache={};static fm6SynthFunctionCache={};static effectsFunctionCache={};static pickedStringFunctionCache=Array(3).fill(void 0);channels=[];tonePool=new ct;tempMatchedPitchTones=Array(t.maxChordSize).fill(null);startedMetronome=!1;metronomeSamplesRemaining=-1;metronomeAmplitude=0;metronomePrevAmplitude=0;metronomeFilter=0;limit=0;songEqFilterVolume=1;songEqFilterVolumeDelta=0;songEqFiltersL=[];songEqFiltersR=[];songEqFilterCount=0;initialSongEqFilterInput1L=0;initialSongEqFilterInput2L=0;initialSongEqFilterInput1R=0;initialSongEqFilterInput2R=0;tempInstrumentSampleBufferL=null;tempInstrumentSampleBufferR=null;audioCtx=null;scriptNode=null;get playing(){return this.isPlayingSong}get recording(){return this.isRecording}get playhead(){return this.playheadInternal}set playhead(e){if(this.song!=null){this.playheadInternal=Math.max(0,Math.min(this.song.barCount,e));let a=this.playheadInternal;this.bar=Math.floor(a),a=this.song.beatsPerBar*(a-this.bar),this.beat=Math.floor(a),a=t.partsPerBeat*(a-this.beat),this.part=Math.floor(a),a=t.ticksPerPart*(a-this.part),this.tick=Math.floor(a),this.tickSampleCountdown=0,this.isAtStartOfTick=!0,this.prevBar=null}}getSamplesPerBar(){if(this.song==null)throw new Error;return this.getSamplesPerTick()*t.ticksPerPart*t.partsPerBeat*this.song.beatsPerBar}getTicksIntoBar(){return(this.beat*t.partsPerBeat+this.part)*t.ticksPerPart+this.tick}getCurrentPart(){return this.beat*t.partsPerBeat+this.part}findPartsInBar(e){if(this.song==null)return 0;let a=t.partsPerBeat*this.song.beatsPerBar;for(let n=this.song.pitchChannelCount+this.song.noiseChannelCount;n<this.song.getChannelCount();n++){let r=this.song.getPattern(n,e);if(r!=null){let s=this.song.channels[n].instruments[r.instruments[0]];for(let o=0;o<t.modCount;o++)if(s.modulators[o]==t.modulators.dictionary["next bar"].index)for(let c of r.notes)c.pitches[0]==t.modCount-1-o&&a>c.start&&(a=c.start)}}return a}getTotalSamples(e,a,n){if(this.song==null)return-1;let r=e?0:this.song.loopStart,s=a?this.song.barCount:this.song.loopStart+this.song.loopLength,o=!1,c=!1,u=this.song.tempo;for(let b=this.song.getChannelCount()-1;b>=this.song.pitchChannelCount+this.song.noiseChannelCount;b--)for(let l=r;l<s;l++){let g=this.song.getPattern(b,l);if(g!=null){let m=this.song.channels[b].instruments[g.instruments[0]];for(let y=0;y<t.modCount;y++)m.modulators[y]==t.modulators.dictionary.tempo.index&&(o=!0),m.modulators[y]==t.modulators.dictionary["next bar"].index&&(c=!0)}}if(r>0){let b=null,l=0;for(let g=r-1;g>=0;g--){for(let m=this.song.getChannelCount()-1;m>=this.song.pitchChannelCount+this.song.noiseChannelCount;m--){let y=this.song.getPattern(m,g);if(y!=null){let h=y.instruments[0],f=this.song.channels[m].instruments[h],p=this.findPartsInBar(g);for(let S of y.notes)if(f.modulators[t.modCount-1-S.pitches[0]]==t.modulators.dictionary.tempo.index&&S.start<p&&(b==null||S.end>b))if(S.end<=p)b=S.end,l=S.pins[S.pins.length-1].size;else{b=p;for(let x=0;x<S.pins.length;x++)if(S.pins[x].time+S.start>p){let w=S.pins[x].time-S.pins[x-1].time,v=p-S.start-S.pins[x-1].time,P=S.pins[x].size-S.pins[x-1].size;l=Math.round(S.pins[x-1].size+P*v/w),x=S.pins.length}}}}b!=null&&(u=l+t.modulators.dictionary.tempo.convertRealFactor,g=-1)}}if(o||c){let b=r,l=!1,g=0;for(;!l;){let m=t.partsPerBeat*this.song.beatsPerBar,y=0;if(c&&(m=this.findPartsInBar(b)),o){let h=!1;for(let f=this.song.getChannelCount()-1;f>=this.song.pitchChannelCount+this.song.noiseChannelCount;f--)if(h==!1){let p=this.song.getPattern(f,b);if(p!=null){let S=this.song.channels[f].instruments[p.instruments[0]];for(let x=0;x<t.modCount;x++)if(h==!1&&S.modulators[x]==t.modulators.dictionary.tempo.index&&p.notes.find(w=>w.pitches[0]==t.modCount-1-x)){h=!0,p.notes.sort(function(w,v){return w.start==v.start?w.pitches[0]-v.pitches[0]:w.start-v.start});for(let w of p.notes)if(w.pitches[0]==t.modCount-1-x&&(g+=Math.min(m-y,w.start-y)*t.ticksPerPart*this.getSamplesPerTickSpecificBPM(u),w.start<m))for(let v=1;v<w.pins.length;v++){if(w.pins[v-1].time+w.start<=m){let P=t.ticksPerPart*Math.min(m-(w.start+w.pins[v-1].time),w.pins[v].time-w.pins[v-1].time),B=w.pins[v-1].size+t.modulators.dictionary.tempo.convertRealFactor,L=w.pins[v].size+t.modulators.dictionary.tempo.convertRealFactor;w.pins[v].time+w.start>m&&(L=w.pins[v-1].size+(w.pins[v].size-w.pins[v-1].size)*(m-(w.start+w.pins[v-1].time))/(w.pins[v].time-w.pins[v-1].time)+t.modulators.dictionary.tempo.convertRealFactor);let E=t.partsPerBeat*t.ticksPerPart/60;L!=B?g+=-this.samplesPerSecond*P*(Math.log(E*L*P)-Math.log(E*B*P))/(E*(B-L)):g+=P*this.getSamplesPerTickSpecificBPM(L),u=L}y=Math.min(w.start+w.pins[v].time,m)}}}}}g+=(m-y)*t.ticksPerPart*this.getSamplesPerTickSpecificBPM(u),b++,n!=0&&b==this.song.loopStart+this.song.loopLength&&(b=this.song.loopStart,n>0&&n--),b>=s&&(l=!0)}return Math.ceil(g)}else return this.getSamplesPerBar()*this.getTotalBars(e,a,n)}getTotalBars(e,a,n=this.loopRepeatCount){if(this.song==null)throw new Error;let r=this.song.loopLength*(n+1);return e&&(r+=this.song.loopStart),a&&(r+=this.song.barCount-(this.song.loopStart+this.song.loopLength)),r}constructor(e=null){this.computeDelayBufferSizes(),e!=null&&this.setSong(e)}setSong(e){typeof e=="string"?this.song=new Xt(e):e instanceof Xt&&(this.song=e),this.prevBar=null}computeDelayBufferSizes(){this.panningDelayBufferSize=Je(this.samplesPerSecond*t.panDelaySecondsMax),this.panningDelayBufferMask=this.panningDelayBufferSize-1,this.flangerDelayBufferSize=Je(this.samplesPerSecond*t.flangerMaxDelay),this.flangerDelayBufferMask=this.flangerDelayBufferSize-1,this.chorusDelayBufferSize=Je(this.samplesPerSecond*t.chorusMaxDelay),this.chorusDelayBufferMask=this.chorusDelayBufferSize-1}activateAudio(){let e=this.anticipatePoorPerformance?this.preferLowerLatency?2048:4096:this.preferLowerLatency?512:2048;if(this.audioCtx==null||this.scriptNode==null||this.scriptNode.bufferSize!=e){this.scriptNode!=null&&this.deactivateAudio();let a=this.anticipatePoorPerformance?this.preferLowerLatency?"balanced":"playback":this.preferLowerLatency?"interactive":"balanced";this.audioCtx=this.audioCtx||new(window.AudioContext||window.webkitAudioContext)({latencyHint:a}),this.samplesPerSecond=this.audioCtx.sampleRate,this.scriptNode=this.audioCtx.createScriptProcessor?this.audioCtx.createScriptProcessor(e,0,2):this.audioCtx.createJavaScriptNode(e,0,2),this.scriptNode.onaudioprocess=this.audioProcessCallback,this.scriptNode.channelCountMode="explicit",this.scriptNode.channelInterpretation="speakers",this.scriptNode.connect(this.audioCtx.destination),this.computeDelayBufferSizes()}this.audioCtx.resume()}deactivateAudio(){this.audioCtx!=null&&this.scriptNode!=null&&(this.scriptNode.disconnect(this.audioCtx.destination),this.scriptNode=null,this.audioCtx.close&&this.audioCtx.close(),this.audioCtx=null)}maintainLiveInput(){this.activateAudio(),this.liveInputEndTime=performance.now()+1e4}play(){this.isPlayingSong||(this.initModFilters(this.song),this.computeLatestModValues(),this.activateAudio(),this.warmUpSynthesizer(this.song),this.isPlayingSong=!0)}pause(){if(this.isPlayingSong&&(this.isPlayingSong=!1,this.isRecording=!1,this.preferLowerLatency=!1,this.modValues=[],this.nextModValues=[],this.heldMods=[],this.song!=null)){this.song.inVolumeCap=0,this.song.outVolumeCap=0,this.song.outVolumeCapL=0,this.song.outVolumeCapR=0,this.song.tmpEqFilterStart=null,this.song.tmpEqFilterEnd=null;for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)this.modInsValues[e]=[],this.nextModInsValues[e]=[]}}startRecording(){this.preferLowerLatency=!0,this.isRecording=!0,this.play()}resetEffects(){if(this.limit=0,this.freeAllTones(),this.song!=null)for(let e of this.channels)for(let a of e.instruments)a.resetAllEffects()}setModValue(e,a,n,r,s){let o=e+t.modulators[s].convertRealFactor,c=a+t.modulators[s].convertRealFactor;return t.modulators[s].forSong?(this.modValues[s]==null||this.modValues[s]!=o||this.nextModValues[s]!=c)&&(this.modValues[s]=o,this.nextModValues[s]=c):(this.modInsValues[n][r][s]==null||this.modInsValues[n][r][s]!=o||this.nextModInsValues[n][r][s]!=c)&&(this.modInsValues[n][r][s]=o,this.nextModInsValues[n][r][s]=c),o}getModValue(e,a,n,r){if(t.modulators[e].forSong){if(this.modValues[e]!=null&&this.nextModValues[e]!=null)return r?this.nextModValues[e]:this.modValues[e]}else if(a!=null&&n!=null&&this.modInsValues[a][n][e]!=null&&this.nextModInsValues[a][n][e]!=null)return r?this.nextModInsValues[a][n][e]:this.modInsValues[a][n][e];return-1}isAnyModActive(e,a){for(let n=0;n<t.modulators.length;n++)if(this.modValues!=null&&this.modValues[n]!=null||this.modInsValues!=null&&this.modInsValues[e]!=null&&this.modInsValues[e][a]!=null&&this.modInsValues[e][a][n]!=null)return!0;return!1}unsetMod(e,a,n){if(this.isModActive(e)||a!=null&&n!=null&&this.isModActive(e,a,n)){this.modValues[e]=null,this.nextModValues[e]=null;for(let r=0;r<this.heldMods.length;r++)a!=null&&n!=null?this.heldMods[r].channelIndex==a&&this.heldMods[r].instrumentIndex==n&&this.heldMods[r].setting==e&&this.heldMods.splice(r,1):this.heldMods[r].setting==e&&this.heldMods.splice(r,1);a!=null&&n!=null&&(this.modInsValues[a][n][e]=null,this.nextModInsValues[a][n][e]=null)}}isFilterModActive(e,a,n,r){let s=this.song.channels[a].instruments[n];if(e){if(s.noteFilterType)return!1;if(s.tmpNoteFilterEnd!=null)return!0}else if(r){if(this?.song?.tmpEqFilterEnd!=null)return!0}else for(let o=0;o<s.effects.length;o++){let c=s.effects[o];if(c.eqFilterType)return!1;if(c.tmpEqFilterEnd!=null)return!0}return!1}isModActive(e,a,n){return t.modulators[e].forSong?this.modValues!=null&&this.modValues[e]!=null:a!=null&&n!=null&&this.modInsValues!=null&&this.modInsValues[a]!=null&&this.modInsValues[a][n]!=null?this.modInsValues[a][n][e]!=null:!1}forceHoldMods(e,a,n,r){let s=!1;for(let o=0;o<this.heldMods.length;o++)this.heldMods[o].channelIndex==a&&this.heldMods[o].instrumentIndex==n&&this.heldMods[o].setting==r&&(this.heldMods[o].volume=e,this.heldMods[o].holdFor=24,s=!0);s||this.heldMods.push({volume:e,channelIndex:a,instrumentIndex:n,setting:r,holdFor:24})}snapToStart(){this.bar=0,this.resetEffects(),this.snapToBar()}goToBar(e){this.bar=e,this.resetEffects(),this.playheadInternal=this.bar}snapToBar(){this.playheadInternal=this.bar,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=0}jumpIntoLoop(){if(this.song&&(this.bar<this.song.loopStart||this.bar>=this.song.loopStart+this.song.loopLength)){let e=this.bar;this.bar=this.song.loopStart,this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}}goToNextBar(){if(!this.song)return;this.prevBar=this.bar;let e=this.bar;this.bar++,this.bar>=this.song.barCount&&(this.bar=0),this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}goToPrevBar(){if(!this.song)return;this.prevBar=null;let e=this.bar;this.bar--,(this.bar<0||this.bar>=this.song.barCount)&&(this.bar=this.song.barCount-1),this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}getNextBar(){let e=this.bar+1;return this.isRecording?e>=this.song.barCount&&(e=this.song.barCount-1):this.bar==this.loopBarEnd&&!this.renderingSong?e=this.loopBarStart:this.loopRepeatCount!=0&&e==Math.max(this.loopBarEnd+1,this.song.loopStart+this.song.loopLength)&&(e=this.song.loopStart),e}skipBar(){if(!this.song)return;let e=this.getSamplesPerTick();this.prevBar=this.bar,this.loopBarEnd!=this.bar?this.bar++:this.bar=this.loopBarStart,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=e,this.isAtStartOfTick=!0,this.loopRepeatCount!=0&&this.bar==Math.max(this.song.loopStart+this.song.loopLength,this.loopBarEnd)&&(this.bar=this.song.loopStart,this.loopBarStart!=-1&&(this.bar=this.loopBarStart),this.loopRepeatCount>0&&this.loopRepeatCount--)}audioProcessCallback=e=>{let a=e.outputBuffer,n=a.getChannelData(0),r=a.getChannelData(1);if(this.browserAutomaticallyClearsAudioBuffer&&(n[0]!=0||r[0]!=0||n[a.length-1]!=0||r[a.length-1]!=0)&&(this.browserAutomaticallyClearsAudioBuffer=!1),!this.browserAutomaticallyClearsAudioBuffer){let s=a.length;for(let o=0;o<s;o++)n[o]=0,r[o]=0}!this.isPlayingSong&&performance.now()>=this.liveInputEndTime?this.deactivateAudio():(this.synthesize(n,r,a.length,this.isPlayingSong),this.oscEnabled&&(this.oscRefreshEventTimer<=0?(gn.raise("oscilloscopeUpdate",n,r),this.oscRefreshEventTimer=2):this.oscRefreshEventTimer--))};computeSongState(e){if(this.song==null)return;let a=Math.ceil(e),n=this.samplesPerSecond,r=1;if(this.song.eqFilterType){let c=this.song.eqFilter;this.song.eqSubFilters[1]==null&&(this.song.eqSubFilters[1]=new Ee);let u=this.song.eqSubFilters[1],b=this.song.eqFilterSimpleCut,l=this.song.eqFilterSimplePeak,g=this.song.eqFilterSimpleCut,m=this.song.eqFilterSimplePeak,y=!1,h;if(y){c.convertLegacySettingsForSynth(b,l),u.convertLegacySettingsForSynth(g,m),h=c.controlPoints[0];let f=u.controlPoints[0];h.toCoefficients(i.tempFilterStartCoefficients,n,1,1),f.toCoefficients(i.tempFilterEndCoefficients,n,1,1),this.songEqFiltersL.length<1&&(this.songEqFiltersL[0]=new Re),this.songEqFiltersL[0].loadCoefficientsWithGradient(i.tempFilterStartCoefficients,i.tempFilterEndCoefficients,1/a,h.type==0),this.songEqFiltersR.length<1&&(this.songEqFiltersR[0]=new Re),this.songEqFiltersR[0].loadCoefficientsWithGradient(i.tempFilterStartCoefficients,i.tempFilterEndCoefficients,1/a,h.type==0)}else c.convertLegacySettingsForSynth(b,l,!0),h=c.controlPoints[0],h.toCoefficients(i.tempFilterStartCoefficients,n,1,1),this.songEqFiltersL.length<1&&(this.songEqFiltersL[0]=new Re),this.songEqFiltersL[0].loadCoefficientsWithGradient(i.tempFilterStartCoefficients,i.tempFilterStartCoefficients,1/a,h.type==0),this.songEqFiltersR.length<1&&(this.songEqFiltersR[0]=new Re),this.songEqFiltersR[0].loadCoefficientsWithGradient(i.tempFilterStartCoefficients,i.tempFilterStartCoefficients,1/a,h.type==0);r*=h.getVolumeCompensationMult(),this.songEqFilterCount=1,r=Math.min(3,r)}else{let c=this.song.tmpEqFilterStart!=null?this.song.tmpEqFilterStart:this.song.eqFilter;for(let u=0;u<c.controlPointCount;u++){let b=c.controlPoints[u],l=this.song.tmpEqFilterEnd!=null&&this.song.tmpEqFilterEnd.controlPoints[u]!=null?this.song.tmpEqFilterEnd.controlPoints[u]:c.controlPoints[u];b.type!=l.type&&(b=l),b.toCoefficients(i.tempFilterStartCoefficients,n,1,1),l.toCoefficients(i.tempFilterEndCoefficients,n,1,1),this.songEqFiltersL.length<=u&&(this.songEqFiltersL[u]=new Re),this.songEqFiltersL[u].loadCoefficientsWithGradient(i.tempFilterStartCoefficients,i.tempFilterEndCoefficients,1/a,b.type==0),this.songEqFiltersR.length<=u&&(this.songEqFiltersR[u]=new Re),this.songEqFiltersR[u].loadCoefficientsWithGradient(i.tempFilterStartCoefficients,i.tempFilterEndCoefficients,1/a,b.type==0),r*=b.getVolumeCompensationMult()}this.songEqFilterCount=c.controlPointCount,r=Math.min(3,r)}let s=r,o=r;this.songEqFilterVolume=s,this.songEqFilterVolumeDelta=(o-s)/a}synthesize(e,a,n,r=!0){if(this.song==null){for(let f=0;f<n;f++)e[f]=0,a[f]=0;this.deactivateAudio();return}let s=this.song;this.song.inVolumeCap=0,this.song.outVolumeCap=0,this.song.outVolumeCapL=0,this.song.outVolumeCapR=0;let o=this.getSamplesPerTick(),c=!1;(this.tickSampleCountdown<=0||this.tickSampleCountdown>o)&&(this.tickSampleCountdown=o,this.isAtStartOfTick=!0),r&&(this.beat>=s.beatsPerBar&&(this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=o,this.isAtStartOfTick=!0,this.prevBar=this.bar,this.bar=this.getNextBar(),this.bar<=this.prevBar&&this.loopRepeatCount>0&&this.loopRepeatCount--),this.bar>=s.barCount&&(this.bar=0,this.loopRepeatCount!=-1&&(c=!0,this.pause()))),this.syncSongState(),(this.tempInstrumentSampleBufferL==null||this.tempInstrumentSampleBufferL.length<n||this.tempInstrumentSampleBufferR==null||this.tempInstrumentSampleBufferR.length<n)&&(this.tempInstrumentSampleBufferL=new Float32Array(n),this.tempInstrumentSampleBufferR=new Float32Array(n));let u=+this.volume,b=1-Math.pow(.5,this.song.limitDecay/this.samplesPerSecond),l=1-Math.pow(.5,this.song.limitRise/this.samplesPerSecond),g=+this.limit,m=[],y=-1,h=0;for(;h<n&&!c;){this.nextBar=this.getNextBar(),this.nextBar>=s.barCount&&(this.nextBar=null);let f=n-h,p=Math.ceil(this.tickSampleCountdown),S=Math.min(p,f),x=h+S;if(this.isPlayingSong||this.renderingSong){for(let v=s.pitchChannelCount+s.noiseChannelCount;v<s.getChannelCount();v++){let P=s.channels[v],B=this.channels[v];this.determineCurrentActiveTones(s,v,o,r);for(let L=0;L<P.instruments.length;L++){let E=B.instruments[L];for(let D=0;D<E.activeModTones.count();D++){let R=E.activeModTones.get(D),z=s.channels[v].instruments[R.instrumentIndex],W=t.modCount-1-R.pitches[0];(z.modulators[W]==t.modulators.dictionary["pre eq"].index||z.modulators[W]==t.modulators.dictionary["post eq"].index||z.modulators[W]==t.modulators.dictionary["song eq"].index)&&z.modFilterTypes[W]!=null&&z.modFilterTypes[W]>0||this.playModTone(s,v,o,h,S,R,!1,!1)}}}for(let v=s.pitchChannelCount+s.noiseChannelCount;v<s.getChannelCount();v++){let P=s.channels[v],B=this.channels[v];for(let L=0;L<P.instruments.length;L++){let E=B.instruments[L];for(let D=0;D<E.activeModTones.count();D++){let R=E.activeModTones.get(D),z=s.channels[v].instruments[R.instrumentIndex],W=t.modCount-1-R.pitches[0];(z.modulators[W]==t.modulators.dictionary["pre eq"].index||z.modulators[W]==t.modulators.dictionary["post eq"].index||z.modulators[W]==t.modulators.dictionary["song eq"].index)&&z.modFilterTypes[W]!=null&&z.modFilterTypes[W]>0&&this.playModTone(s,v,o,h,S,R,!1,!1)}}}}if(this.wantToSkip){let v=m.includes(this.bar);if(v&&h==y){this.pause();return}y==-1&&(y=h),v||m.push(this.bar),this.wantToSkip=!1,this.skipBar();continue}this.computeSongState(o);for(let v=0;v<s.pitchChannelCount+s.noiseChannelCount;v++){let P=s.channels[v],B=this.channels[v];this.isAtStartOfTick&&(this.determineCurrentActiveTones(s,v,o,r&&!this.countInMetronome),this.determineLiveInputTones(s,v,o));for(let L=0;L<P.instruments.length;L++){let E=P.instruments[L],D=B.instruments[L];if(this.isAtStartOfTick){let C=D.activeTones.count()+D.liveInputTones.count();for(let I=0;I<D.releasedTones.count();I++){let M=D.releasedTones.get(I);if(M.ticksSinceReleased>=Math.abs(E.getFadeOutTicks())){this.freeReleasedTone(D,I),I--;continue}let q=C>=t.maximumTonesPerChannel;this.computeTone(s,v,o,M,!0,q),C++}D.awake&&(D.computed||D.compute(this,E,o,Math.ceil(o),null,v,L),D.computed=!1,D.envelopeComputer.clearEnvelopes())}for(let C=0;C<D.activeTones.count();C++){let I=D.activeTones.get(C);this.playTone(v,h,S,I)}for(let C=0;C<D.liveInputTones.count();C++){let I=D.liveInputTones.get(C);this.playTone(v,h,S,I)}for(let C=0;C<D.releasedTones.count();C++){let I=D.releasedTones.get(C);this.playTone(v,h,S,I)}D.awake&&i.effectsSynth(this,e,a,h,S,D);let R=this.tickSampleCountdown,N=1-R/o,z=1-(R-S)/o,W=(this.beat*t.partsPerBeat+this.part)*t.ticksPerPart+this.tick,H=W/t.ticksPerPart,U=(W+1)/t.ticksPerPart,G=H+(U-H)*N,d=H+(U-H)*z,F=E.vibratoSpeed;D.vibratoTime=D.nextVibratoTime,this.isModActive(t.modulators.dictionary["vibrato speed"].index,v,L)&&(F=this.getModValue(t.modulators.dictionary["vibrato speed"].index,v,L)),F==0?(D.vibratoTime=0,D.nextVibratoTime=0):D.nextVibratoTime+=F*.1*(d-G)}}if(this.enableMetronome||this.countInMetronome)if(this.part==0){if(!this.startedMetronome){let v=s.beatsPerBar>4&&s.beatsPerBar%2==0&&this.beat==s.beatsPerBar/2,P=this.beat==0?8:v?6:4,B=this.beat==0?1600:v?1200:800,L=this.beat==0?.06:v?.05:.04,E=this.samplesPerSecond/B,D=Math.PI*2/E;this.metronomeSamplesRemaining=Math.floor(E*P),this.metronomeFilter=2*Math.cos(D),this.metronomeAmplitude=L*Math.sin(D),this.metronomePrevAmplitude=0,this.startedMetronome=!0}if(this.metronomeSamplesRemaining>0){let v=Math.min(x,h+this.metronomeSamplesRemaining);this.metronomeSamplesRemaining-=v-h;for(let P=h;P<v;P++){e[P]+=this.metronomeAmplitude,a[P]+=this.metronomeAmplitude;let B=this.metronomeFilter*this.metronomeAmplitude-this.metronomePrevAmplitude;this.metronomePrevAmplitude=this.metronomeAmplitude,this.metronomeAmplitude=B}}}else this.startedMetronome=!1;for(let v=h;v<x;v++){{let W=this.songEqFiltersL,H=this.songEqFiltersR,U=this.songEqFilterCount|0,G=+this.initialSongEqFilterInput1L,d=+this.initialSongEqFilterInput2L,F=+this.initialSongEqFilterInput1R,C=+this.initialSongEqFilterInput2R,I=i.applyFilters,M=+this.songEqFilterVolume,q=+this.songEqFilterVolumeDelta,O=e[v],j=O;j=I(j,G,d,U,W),d=G,G=O,j*=M,e[v]=j;let te=a[v],ee=te;ee=I(ee,F,C,U,H),C=F,F=te,ee*=M,a[v]=ee,M+=q,this.sanitizeFilters(W),(!(G<100)||!(d<100))&&(G=0,d=0),Math.abs(G)<St&&(G=0),Math.abs(d)<St&&(d=0),this.initialSongEqFilterInput1L=G,this.initialSongEqFilterInput2L=d,this.sanitizeFilters(H),(!(F<100)||!(C<100))&&(F=0,C=0),Math.abs(F)<St&&(F=0),Math.abs(C)<St&&(C=0),this.initialSongEqFilterInput1R=F,this.initialSongEqFilterInput2R=C}let P=e[v]*s.masterGain*s.masterGain,B=a[v]*s.masterGain*s.masterGain,L=P<0?-P:P,E=B<0?-B:B,D=L>E?L:E;this.song.inVolumeCap=this.song.inVolumeCap>D?this.song.inVolumeCap:D;let R=+(D>s.compressionThreshold)+ +(D>s.limitThreshold),N=+(R==0)*(((D+1-s.compressionThreshold)*.8+.25)*s.compressionRatio+1.05*(1-s.compressionRatio))+ +(R==1)*1.05+ +(R==2)*(1.05*((D+1-s.limitThreshold)*s.limitRatio+(1-s.limitThreshold)));g+=(N-g)*(g<N?l:b);let z=u/(g>=1?g*1.05:g*.8+.25);e[v]=P*z,a[v]=B*z,this.song.outVolumeCap=this.song.outVolumeCap>D*z?this.song.outVolumeCap:D*z,this.song.outVolumeCapL=this.song.outVolumeCapL>L*z?this.song.outVolumeCapL:L*z,this.song.outVolumeCapR=this.song.outVolumeCapR>E*z?this.song.outVolumeCapR:E*z}if(h+=S,this.isAtStartOfTick=!1,this.tickSampleCountdown-=S,this.tickSampleCountdown<=0){this.isAtStartOfTick=!0;for(let E of this.channels)for(let D of E.instruments){for(let R=0;R<D.releasedTones.count();R++){let N=D.releasedTones.get(R);N.isOnLastTick?(this.freeReleasedTone(D,R),R--):N.ticksSinceReleased++}D.deactivateAfterThisTick&&D.deactivate(),D.tonesAddedInThisTick=!1}let P=this.getTicksIntoBar(),B=o/this.samplesPerSecond,L=this.getCurrentPart();for(let E=0;E<this.song.pitchChannelCount+this.song.noiseChannelCount;E++)for(let D=0;D<this.song.channels[E].instruments.length;D++){let R=this.song.channels[E].instruments[D],N=this.channels[E].instruments[D],z=N.envelopeComputer,W=[];for(let d=0;d<t.maxEnvelopeCount;d++)W[d]=0;for(let d=0;d<R.envelopeCount;d++){let F=R.envelopeSpeed,C=R.envelopes[d].perEnvelopeSpeed;this.isModActive(t.modulators.dictionary["individual envelope speed"].index,E,D)&&R.envelopes[d].tempEnvelopeSpeed!=null&&(C=R.envelopes[d].tempEnvelopeSpeed),this.isModActive(t.modulators.dictionary["envelope speed"].index,E,D)?(F=Math.max(0,Math.min(t.arpSpeedScale.length-1,this.getModValue(t.modulators.dictionary["envelope speed"].index,E,D,!1))),Number.isInteger(F)?N.envelopeTime[d]+=t.arpSpeedScale[F]*C:N.envelopeTime[d]+=((1-F%1)*t.arpSpeedScale[Math.floor(F)]+F%1*t.arpSpeedScale[Math.ceil(F)])*C):N.envelopeTime[d]+=t.arpSpeedScale[F]*C}if(N.activeTones.count()>0){let d=N.activeTones.get(0);z.computeEnvelopes(R,L,N.envelopeTime,P,B,d,W,N,this,E,D)}let U=z.envelopeStarts[49],G=R.arpeggioSpeed;this.isModActive(t.modulators.dictionary["arp speed"].index,E,D)?(G=A(0,t.arpSpeedScale.length,U*this.getModValue(t.modulators.dictionary["arp speed"].index,E,D,!1)),Number.isInteger(G)?N.arpTime+=t.arpSpeedScale[G]:N.arpTime+=(1-G%1)*t.arpSpeedScale[Math.floor(G)]+G%1*t.arpSpeedScale[Math.ceil(G)]):(G=A(0,t.arpSpeedScale.length,U*G),Number.isInteger(G)?N.arpTime+=t.arpSpeedScale[G]:N.arpTime+=(1-G%1)*t.arpSpeedScale[Math.floor(G)]+G%1*t.arpSpeedScale[Math.ceil(G)]),z.clearEnvelopes()}for(let E=0;E<this.song.pitchChannelCount+this.song.noiseChannelCount;E++)for(let D=0;D<this.song.channels[E].instruments.length;D++){let R=this.song.channels[E].instruments[D];for(let N=0;N<R.effects.length;N++){let z=R.effects[N];z.tmpEqFilterEnd!=null?z.tmpEqFilterStart=z.tmpEqFilterEnd:z.tmpEqFilterStart=z.eqFilter}R.tmpNoteFilterEnd!=null?R.tmpNoteFilterStart=R.tmpNoteFilterEnd:R.tmpNoteFilterStart=R.noteFilter}if(s.tmpEqFilterEnd!=null?s.tmpEqFilterStart=s.tmpEqFilterEnd:s.tmpEqFilterStart=s.eqFilter,this.tick++,this.tickSampleCountdown+=o,this.tick==t.ticksPerPart){this.tick=0,this.part++,this.liveInputDuration--,this.liveBassInputDuration--;for(let E=0;E<this.heldMods.length;E++)this.heldMods[E].holdFor--,this.heldMods[E].holdFor<=0&&this.heldMods.splice(E,1);this.part==t.partsPerBeat&&(this.part=0,r&&(this.beat++,this.beat==s.beatsPerBar&&(this.beat=0,this.countInMetronome?this.countInMetronome=!1:(this.prevBar=this.bar,this.bar=this.getNextBar(),this.bar<=this.prevBar&&this.loopRepeatCount>0&&this.loopRepeatCount--,this.bar>=s.barCount&&(this.bar=0,this.loopRepeatCount!=-1&&(c=!0,this.resetEffects(),this.pause()))))))}}for(let v=0;v<t.modulators.length;v++)this.nextModValues!=null&&this.nextModValues[v]!=null&&(this.modValues[v]=this.nextModValues[v]);this.isModActive(t.modulators.dictionary.tempo.index)&&(o=this.getSamplesPerTick(),this.tickSampleCountdown=Math.min(this.tickSampleCountdown,o));for(let v=0;v<this.song.pitchChannelCount+this.song.noiseChannelCount;v++)for(let P=0;P<this.channels[v].instruments.length;P++){let B=this.channels[v].instruments[P],L=this.song.channels[v].instruments[P];B.nextVibratoTime=B.nextVibratoTime%(t.vibratoTypes[L.vibratoType].period/(t.ticksPerPart*o/this.samplesPerSecond)),B.arpTime=B.arpTime%(2520*t.ticksPerArpeggio);for(let E=0;E<L.envelopeCount;E++)B.envelopeTime[E]=B.envelopeTime[E]%(t.partsPerBeat*t.ticksPerPart*this.song.beatsPerBar)}let w=this.song.getMaxInstrumentsPerChannel();for(let v=0;v<t.modulators.length;v++)for(let P=0;P<this.song.pitchChannelCount+this.song.noiseChannelCount;P++)for(let B=0;B<w;B++)this.nextModInsValues!=null&&this.nextModInsValues[P]!=null&&this.nextModInsValues[P][B]!=null&&this.nextModInsValues[P][B][v]!=null&&(this.modInsValues[P][B][v]=this.nextModInsValues[P][B][v])}(!Number.isFinite(g)||Math.abs(g)<St)&&(g=0),this.limit=g,r&&!this.countInMetronome&&(this.playheadInternal=(((this.tick+1-this.tickSampleCountdown/o)/2+this.part)/t.partsPerBeat+this.beat)/s.beatsPerBar+this.bar)}freeTone(e){this.tonePool.pushBack(e)}newTone(){if(this.tonePool.count()>0){let e=this.tonePool.popBack();return e.freshlyAllocated=!0,e}return new na}releaseTone(e,a){e.releasedTones.pushFront(a),a.atNoteStart=!1,a.passedEndOfNote=!0}freeReleasedTone(e,a){this.freeTone(e.releasedTones.get(a)),e.releasedTones.remove(a)}freeAllTones(){for(let e of this.channels)for(let a of e.instruments){for(;a.activeTones.count()>0;)this.freeTone(a.activeTones.popBack());for(;a.activeModTones.count()>0;)this.freeTone(a.activeModTones.popBack());for(;a.releasedTones.count()>0;)this.freeTone(a.releasedTones.popBack());for(;a.liveInputTones.count()>0;)this.freeTone(a.liveInputTones.popBack())}}determineLiveInputTones(e,a,n){let r=e.channels[a],s=this.channels[a],o=this.liveInputPitches,c=this.liveBassInputPitches;(this.liveInputPitches.length>0||this.liveBassInputPitches.length>0)&&this.computeLatestModValues();for(let u=0;u<r.instruments.length;u++){let b=s.instruments[u],l=b.liveInputTones,g=0;if(this.liveInputDuration>0&&a==this.liveInputChannel&&o.length>0&&this.liveInputInstruments.indexOf(u)!=-1){let m=r.instruments[u];if(m.getChord().singleTone){let y;l.count()<=g?(y=this.newTone(),l.pushBack(y)):!m.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(b,l.get(g)),y=this.newTone(),l.set(g,y)):y=l.get(g),g++;for(let h=0;h<o.length;h++)y.pitches[h]=o[h];y.pitchCount=o.length,y.chordSize=1,y.instrumentIndex=u,y.note=y.prevNote=y.nextNote=null,y.atNoteStart=this.liveInputStarted,y.forceContinueAtStart=!1,y.forceContinueAtEnd=!1,this.computeTone(e,a,n,y,!1,!1)}else{this.moveTonesIntoOrderedTempMatchedList(l,o);for(let y=0;y<o.length;y++){let h;this.tempMatchedPitchTones[g]!=null?(h=this.tempMatchedPitchTones[g],this.tempMatchedPitchTones[g]=null,(h.pitchCount!=1||h.pitches[0]!=o[y])&&(this.releaseTone(b,h),h=this.newTone()),l.pushBack(h)):(h=this.newTone(),l.pushBack(h)),g++,h.pitches[0]=o[y],h.pitchCount=1,h.chordSize=o.length,h.instrumentIndex=u,h.note=h.prevNote=h.nextNote=null,h.atNoteStart=this.liveInputStarted,h.forceContinueAtStart=!1,h.forceContinueAtEnd=!1,this.computeTone(e,a,n,h,!1,!1)}}}if(this.liveBassInputDuration>0&&a==this.liveBassInputChannel&&c.length>0&&this.liveBassInputInstruments.indexOf(u)!=-1){let m=r.instruments[u];if(m.getChord().singleTone){let y;l.count()<=g?(y=this.newTone(),l.pushBack(y)):!m.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(b,l.get(g)),y=this.newTone(),l.set(g,y)):y=l.get(g),g++;for(let h=0;h<c.length;h++)y.pitches[h]=c[h];y.pitchCount=c.length,y.chordSize=1,y.instrumentIndex=u,y.note=y.prevNote=y.nextNote=null,y.atNoteStart=this.liveBassInputStarted,y.forceContinueAtStart=!1,y.forceContinueAtEnd=!1,this.computeTone(e,a,n,y,!1,!1)}else{this.moveTonesIntoOrderedTempMatchedList(l,c);for(let y=0;y<c.length;y++){let h;this.tempMatchedPitchTones[g]!=null?(h=this.tempMatchedPitchTones[g],this.tempMatchedPitchTones[g]=null,(h.pitchCount!=1||h.pitches[0]!=c[y])&&(this.releaseTone(b,h),h=this.newTone()),l.pushBack(h)):(h=this.newTone(),l.pushBack(h)),g++,h.pitches[0]=c[y],h.pitchCount=1,h.chordSize=c.length,h.instrumentIndex=u,h.note=h.prevNote=h.nextNote=null,h.atNoteStart=this.liveBassInputStarted,h.forceContinueAtStart=!1,h.forceContinueAtEnd=!1,this.computeTone(e,a,n,h,!1,!1)}}}for(;l.count()>g;)this.releaseTone(b,l.popBack());this.clearTempMatchedPitchTones(g,b)}this.liveInputStarted=!1,this.liveBassInputStarted=!1}adjacentPatternHasCompatibleInstrumentTransition(e,a,n,r,s,o,c,u,b,l){if(e.patternInstruments&&r.instruments.indexOf(s)==-1){if(n.instruments.length>1||r.instruments.length>1)return null;let g=a.instruments[r.instruments[0]];if(l)return g.getChord();let m=g.getTransition();return o.includeAdjacentPatterns&&m.includeAdjacentPatterns&&m.slides==o.slides?g.getChord():null}else return l||o.includeAdjacentPatterns?c:null}static adjacentNotesHaveMatchingPitches(e,a){if(e.pitches.length!=a.pitches.length)return!1;let n=e.pins[e.pins.length-1].interval;for(let r of e.pitches)if(a.pitches.indexOf(r+n)==-1)return!1;return!0}moveTonesIntoOrderedTempMatchedList(e,a){for(let n=0;n<e.count();n++){let r=e.get(n),s=r.pitches[0]+r.lastInterval;for(let o=0;o<a.length;o++)if(a[o]==s){this.tempMatchedPitchTones[o]=r,e.remove(n),n--;break}}for(;e.count()>0;){let n=e.popFront();for(let r=0;r<this.tempMatchedPitchTones.length;r++)if(this.tempMatchedPitchTones[r]==null){this.tempMatchedPitchTones[r]=n;break}}}determineCurrentActiveTones(e,a,n,r){let s=e.channels[a],o=this.channels[a],c=e.getPattern(a,this.bar),u=this.getCurrentPart(),b=this.tick+t.ticksPerPart*u;if(r&&e.getChannelIsMod(a)){let l=[],g=[],m=[],y=t.modCount;for(;y--;)l.push(null),g.push(null),m.push(null);if(c!=null&&!s.muted)for(let x=0;x<c.notes.length;x++)c.notes[x].end<=u?(g[c.notes[x].pitches[0]]==null||c.notes[x].end>g[c.notes[x].pitches[0]].start)&&(g[c.notes[x].pitches[0]]=c.notes[x]):c.notes[x].start<=u&&c.notes[x].end>u?l[c.notes[x].pitches[0]]=c.notes[x]:c.notes[x].start>u&&(m[c.notes[x].pitches[0]]==null||c.notes[x].start<m[c.notes[x].pitches[0]].start)&&(m[c.notes[x].pitches[0]]=c.notes[x]);let h=0,f=e.patternInstruments&&c!=null?c.instruments[0]:0,p=o.instruments[f],S=p.activeModTones;for(let x=0;x<t.modCount;x++){if(l[x]!=null&&(g[x]!=null&&g[x].end!=l[x].start&&(g[x]=null),m[x]!=null&&m[x].start!=l[x].end&&(m[x]=null)),o.singleSeamlessInstrument!=null&&o.singleSeamlessInstrument!=f&&o.singleSeamlessInstrument<o.instruments.length){let w=o.instruments[o.singleSeamlessInstrument],v=o.instruments[f];for(;w.activeModTones.count()>0;)v.activeModTones.pushFront(w.activeModTones.popBack())}if(o.singleSeamlessInstrument=f,l[x]!=null){let w=g[x],v=m[x],P=!1,B=!1,L=t.ticksPerPart*l[x].start==b&&this.isAtStartOfTick,E;if(S.count()<=h)E=this.newTone(),S.pushBack(E);else if(L&&w==null){let D=S.get(h);D.isOnLastTick?this.freeTone(D):this.releaseTone(p,D),E=this.newTone(),S.set(h,E)}else E=S.get(h);h++;for(let D=0;D<l[x].pitches.length;D++)E.pitches[D]=l[x].pitches[D];E.pitchCount=l[x].pitches.length,E.chordSize=1,E.instrumentIndex=f,E.note=l[x],E.noteStartPart=l[x].start,E.noteEndPart=l[x].end,E.prevNote=w,E.nextNote=v,E.prevNotePitchIndex=0,E.nextNotePitchIndex=0,E.atNoteStart=L,E.passedEndOfNote=!1,E.forceContinueAtStart=P,E.forceContinueAtEnd=B}}for(;S.count()>h;){let x=S.popBack(),w=e.channels[a];if(x.instrumentIndex<w.instruments.length&&!x.isOnLastTick){let v=this.channels[a].instruments[x.instrumentIndex];this.releaseTone(v,x)}else this.freeTone(x)}}else if(!e.getChannelIsMod(a)){let l=null,g=null,m=null;if(r&&c!=null&&!s.muted&&(!this.isRecording||this.liveInputChannel!=a)){for(let y=0;y<c.notes.length;y++)if(c.notes[y].end<=u)g=c.notes[y];else if(c.notes[y].start<=u&&c.notes[y].end>u)l=c.notes[y];else if(c.notes[y].start>u){m=c.notes[y];break}l!=null&&(g!=null&&g.end!=l.start&&(g=null),m!=null&&m.start!=l.end&&(m=null))}if(c!=null&&(!e.layeredInstruments||s.instruments.length==1||e.patternInstruments&&c.instruments.length==1)){let y=e.patternInstruments?c.instruments[0]:0;if(o.singleSeamlessInstrument!=null&&o.singleSeamlessInstrument!=y&&o.singleSeamlessInstrument<o.instruments.length){let h=o.instruments[o.singleSeamlessInstrument],f=o.instruments[y];for(;h.activeTones.count()>0;)f.activeTones.pushFront(h.activeTones.popBack())}o.singleSeamlessInstrument=y}else o.singleSeamlessInstrument=null;for(let y=0;y<s.instruments.length;y++){let h=o.instruments[y],f=h.activeTones,p=0;if(l!=null&&(!e.patternInstruments||c.instruments.indexOf(y)!=-1)){let S=s.instruments[y],x=g,w=m,v=t.partsPerBeat*e.beatsPerBar,P=S.getTransition(),B=S.getChord(),L=!1,E=!1,D=0,R=0;if(l.start==0){let N=this.prevBar==null?null:e.getPattern(a,this.prevBar);if(N!=null){let z=N.notes.length<=0?null:N.notes[N.notes.length-1];if(z!=null&&z.end==v){let W=l.continuesLastPattern&&i.adjacentNotesHaveMatchingPitches(z,l),H=this.adjacentPatternHasCompatibleInstrumentTransition(e,s,c,N,y,P,B,l,z,W);H!=null&&(x=z,D=H.singleTone?1:x.pitches.length,L=W)}}}else x!=null&&(D=B.singleTone?1:x.pitches.length);if(l.end==v){let N=this.nextBar==null?null:e.getPattern(a,this.nextBar);if(N!=null){let z=N.notes.length<=0?null:N.notes[0];if(z!=null&&z.start==0){let W=z.continuesLastPattern&&i.adjacentNotesHaveMatchingPitches(l,z),H=this.adjacentPatternHasCompatibleInstrumentTransition(e,s,c,N,y,P,B,l,z,W);H!=null&&(w=z,R=H.singleTone?1:w.pitches.length,E=W)}}}else w!=null&&(R=B.singleTone?1:w.pitches.length);if(B.singleTone){let N=t.ticksPerPart*l.start==b,z;if(f.count()<=p)z=this.newTone(),f.pushBack(z);else if(N&&(!(P.isSeamless||S.clicklessTransition)&&!L||x==null)){let W=f.get(p);W.isOnLastTick?this.freeTone(W):this.releaseTone(h,W),z=this.newTone(),f.set(p,z)}else z=f.get(p);p++;for(let W=0;W<l.pitches.length;W++)z.pitches[W]=l.pitches[W];z.pitchCount=l.pitches.length,z.chordSize=1,z.instrumentIndex=y,z.note=l,z.noteStartPart=l.start,z.noteEndPart=l.end,z.prevNote=x,z.nextNote=w,z.prevNotePitchIndex=0,z.nextNotePitchIndex=0,z.atNoteStart=N,z.passedEndOfNote=!1,z.forceContinueAtStart=L,z.forceContinueAtEnd=E,this.computeTone(e,a,n,z,!1,!1)}else{let N=S.getTransition();(N.isSeamless&&!N.slides&&B.strumParts==0||L)&&t.ticksPerPart*l.start==b&&x!=null&&this.moveTonesIntoOrderedTempMatchedList(f,l.pitches);let z=0;for(let W=0;W<l.pitches.length;W++){let H=D>W?x:null,U=l,G=R>W?w:null,d=U.start+z,F=!1;if(d>u)if(f.count()>W&&(N.isSeamless||L)&&H!=null)G=U,U=H,H=null,d=U.start+z,F=!0;else break;let C=U.end;(N.isSeamless||L)&&G!=null&&(C=Math.min(t.partsPerBeat*this.song.beatsPerBar,C+z)),(!N.continues&&!L||H==null)&&(z+=B.strumParts);let I=t.ticksPerPart*d==b,M;if(this.tempMatchedPitchTones[p]!=null)M=this.tempMatchedPitchTones[p],this.tempMatchedPitchTones[p]=null,f.pushBack(M);else if(f.count()<=p)M=this.newTone(),f.pushBack(M);else if(I&&(!N.isSeamless&&!L||H==null)){let q=f.get(p);q.isOnLastTick?this.freeTone(q):this.releaseTone(h,q),M=this.newTone(),f.set(p,M)}else M=f.get(p);p++,M.pitches[0]=U.pitches[W],M.pitchCount=1,M.chordSize=U.pitches.length,M.instrumentIndex=y,M.note=U,M.noteStartPart=d,M.noteEndPart=C,M.prevNote=H,M.nextNote=G,M.prevNotePitchIndex=W,M.nextNotePitchIndex=W,M.atNoteStart=I,M.passedEndOfNote=F,M.forceContinueAtStart=L&&H!=null,M.forceContinueAtEnd=E&&G!=null,this.computeTone(e,a,n,M,!1,!1)}}(P.continues&&f.count()<=0||l.pitches.length<=0)&&h.envelopeComputer.reset()}for(;f.count()>p;){let S=f.popBack(),x=e.channels[a];if(S.instrumentIndex<x.instruments.length&&!S.isOnLastTick){let w=o.instruments[S.instrumentIndex];this.releaseTone(w,S)}else this.freeTone(S)}this.clearTempMatchedPitchTones(p,h)}}}clearTempMatchedPitchTones(e,a){for(let n=e;n<this.tempMatchedPitchTones.length;n++){let r=this.tempMatchedPitchTones[n];r!=null&&(r.isOnLastTick?this.freeTone(r):this.releaseTone(a,r),this.tempMatchedPitchTones[n]=null)}}playTone(e,a,n,r){let o=this.channels[e].instruments[r.instrumentIndex];o.synthesizer!=null&&o.synthesizer(this,a,n,r,o),r.envelopeComputer.clearEnvelopes(),o.envelopeComputer.clearEnvelopes()}playModTone(e,a,n,r,s,o,c,u){let l=e.channels[a].instruments[o.instrumentIndex];if(o.note!=null){let g=this.getTicksIntoBar(),m=g/t.ticksPerPart,y=(g+1)/t.ticksPerPart,h=this.tickSampleCountdown,f=1-h/n,p=1-(h-s)/n,S=m+(y-m)*f,x=m+(y-m)*p,w=t.ticksPerPart*S,v=t.ticksPerPart*x,P=o.note.getEndPinIndex(this.getCurrentPart()),B=o.note.pins[P-1],L=o.note.pins[P],E=(o.note.start+B.time)*t.ticksPerPart,D=(o.note.start+L.time)*t.ticksPerPart,R=(w-E)/(D-E),N=(v-E)/(D-E);o.expression=B.size+(L.size-B.size)*R,o.expressionDelta=B.size+(L.size-B.size)*N-o.expression,i.modSynth(this,r,s,o,l)}}static computeChordExpression(e){return 1/((e-1)*.25+1)}computeTone(e,a,n,r,s,o){let c=Math.ceil(n),u=e.channels[a],b=this.channels[a],l=u.instruments[r.instrumentIndex],g=b.instruments[r.instrumentIndex];g.awake=!0,g.tonesAddedInThisTick=!0,g.computed||g.compute(this,l,n,c,r,a,r.instrumentIndex);let m=l.getTransition(),y=l.getChord(),h=y.singleTone?1:i.computeChordExpression(r.chordSize),f=e.getChannelIsNoise(a),p=f?t.noiseInterval:1,S=t.ticksPerPart*n/this.samplesPerSecond,x=1/this.samplesPerSecond,w=1/t.partsPerBeat,v=this.getTicksIntoBar(),P=v/t.ticksPerPart,B=(v+1)/t.ticksPerPart,L=this.getCurrentPart(),E=1;r.specialIntervalExpressionMult=1;let D=o,R=0,N=0,z=1,W=1,H=h,U=h,G=16,d=t.keys[e.key].basePitch+t.pitchesPerOctave*e.octave,F=1,C=48;if(l.type==3)F=t.spectrumBaseExpression,f&&(d=t.spectrumBasePitch,F*=2),G=t.spectrumBasePitch,C=28;else if(l.type==4)d=t.spectrumBasePitch,F=t.drumsetBaseExpression,G=d;else if(l.type==2)d=f?t.chipNoises[l.chipNoise].basePitch:d+t.chipNoises[l.chipNoise].basePitch-12,F=t.noiseBaseExpression,G=d,C=t.chipNoises[l.chipNoise].isSoft?24:60;else if(l.type==1||l.type==11)F=t.fmBaseExpression;else if(l.type==0)F=t.chipBaseExpression,t.chipWaves[l.chipWave].isCustomSampled?t.chipWaves[l.chipWave].isPercussion?d=-84.37+Math.log2(t.chipWaves[l.chipWave].samples.length/t.chipWaves[l.chipWave].sampleRate)*-12-(-60+t.chipWaves[l.chipWave].rootKey):d+=-96.37+Math.log2(t.chipWaves[l.chipWave].samples.length/t.chipWaves[l.chipWave].sampleRate)*-12-(-60+t.chipWaves[l.chipWave].rootKey):t.chipWaves[l.chipWave].isSampled&&!t.chipWaves[l.chipWave].isPercussion?d=d-63+t.chipWaves[l.chipWave].extraSampleDetune:t.chipWaves[l.chipWave].isSampled&&t.chipWaves[l.chipWave].isPercussion&&(d=-51+t.chipWaves[l.chipWave].extraSampleDetune);else if(l.type==9)F=t.chipBaseExpression;else if(l.type==5)F=t.harmonicsBaseExpression;else if(l.type==6)F=t.pwmBaseExpression;else if(l.type==8)F=t.supersawBaseExpression;else if(l.type==7)F=t.pickedStringBaseExpression;else if(l.type==10)F=1,G=0,C=1,d=0;else throw new Error("Unknown instrument type in computeTone.");if((r.atNoteStart&&!m.isSeamless&&!r.forceContinueAtStart||r.freshlyAllocated)&&(r.reset(),r.note!=null&&(r.chipWaveStartOffset=r.note.chipWaveStartOffset),g.envelopeComputer.reset(),l.type==0&&l.isUsingAdvancedLoopControls)){let V=t.rawRawChipWaves[l.chipWave].samples.length-1,K=(r.chipWaveStartOffset+l.chipWaveStartOffset)/V,Q=.999999999999999;for(let Z=0;Z<t.maxPitchOrOperatorCount;Z++)r.phases[Z]=l.chipWavePlayBackwards?Math.max(0,Math.min(Q,K)):Math.max(0,K),r.directions[Z]=l.chipWavePlayBackwards?-1:1,r.chipWaveCompletions[Z]=0,r.chipWavePrevWavesL[Z]=0,r.chipWavePrevWavesR[Z]=0,r.chipWaveCompletionsLastWaveL[Z]=0,r.chipWaveCompletionsLastWaveR[Z]=0}r.freshlyAllocated=!1;for(let V=0;V<t.maxPitchOrOperatorCount;V++)r.phaseDeltas[V]=0,r.phaseDeltaScales[V]=0,r.operatorExpressions[V]=0,r.operatorExpressionDeltas[V]=0;r.expression=0,r.expressionDelta=0;for(let V=0;V<(l.type==11?6:t.operatorCount);V++)r.operatorWaves[V]=i.getOperatorWave(l.operators[V].waveform,l.operators[V].pulseWidth);if(s){let V=r.ticksSinceReleased,K=r.ticksSinceReleased+1;R=N=r.lastInterval;let Q=Math.abs(l.getFadeOutTicks());z=i.noteSizeToVolumeMult((1-V/Q)*t.noteSizeMax),W=i.noteSizeToVolumeMult((1-K/Q)*t.noteSizeMax),o&&(W=0),r.ticksSinceReleased+1>=Q&&(D=!0)}else if(r.note==null)z=W=1,r.lastInterval=0,r.ticksSinceReleased=0,r.liveInputSamplesHeld+=c;else{let V=r.note,K=r.nextNote,Q=r.noteStartPart,Z=r.noteEndPart,ae=V.getEndPinIndex(L),fe=V.pins[ae-1],ie=V.pins[ae],ye=Q*t.ticksPerPart,re=Z*t.ticksPerPart,ue=(V.start+fe.time)*t.ticksPerPart,le=(V.start+ie.time)*t.ticksPerPart;r.ticksSinceReleased=0;let oe=L*t.ticksPerPart+this.tick,ce=oe+1,X=oe-ye,$=ce-ye,de=Math.min(1,(oe-ue)/(le-ue)),ge=Math.min(1,(ce-ue)/(le-ue));if(z=1,W=1,R=fe.interval+(ie.interval-fe.interval)*de,N=fe.interval+(ie.interval-fe.interval)*ge,r.lastInterval=N,!m.isSeamless&&!r.forceContinueAtEnd||K==null){let Fe=-l.getFadeOutTicks();if(Fe>0){let Y=re-ye;z*=Math.min(1,(Y-X)/Fe),W*=Math.min(1,(Y-$)/Fe),ce>=ye+Y&&(D=!0)}}}r.isOnLastTick=D;let I=l.noteFilter,M,q;if(l.noteFilterType){let V=l.noteFilter;l.noteSubFilters[1]==null&&(l.noteSubFilters[1]=new Ee);let K=l.noteSubFilters[1],Q=l.noteFilterSimpleCut,Z=l.noteFilterSimplePeak,ae=l.noteFilterSimpleCut,fe=l.noteFilterSimplePeak,ie=!1;this.isModActive(t.modulators.dictionary["note filt cut"].index,a,r.instrumentIndex)&&(Q=this.getModValue(t.modulators.dictionary["note filt cut"].index,a,r.instrumentIndex,!1),ae=this.getModValue(t.modulators.dictionary["note filt cut"].index,a,r.instrumentIndex,!0),ie=!0),this.isModActive(t.modulators.dictionary["note filt peak"].index,a,r.instrumentIndex)&&(Z=this.getModValue(t.modulators.dictionary["note filt peak"].index,a,r.instrumentIndex,!1),fe=this.getModValue(t.modulators.dictionary["note filt peak"].index,a,r.instrumentIndex,!0),ie=!0),V.convertLegacySettingsForSynth(Q,Z,!ie),K.convertLegacySettingsForSynth(ae,fe,!ie),M=V.controlPoints[0],q=K.controlPoints[0],l.noteFilter=V,l.tmpNoteFilterStart=V}let O=r.envelopeComputer,j=[];for(let V=0;V<t.maxEnvelopeCount;V++)j[V]=0;for(let V=0;V<l.envelopeCount;V++){let K=l.envelopes[V].perEnvelopeSpeed;this.isModActive(t.modulators.dictionary["individual envelope speed"].index,a,r.instrumentIndex)&&l.envelopes[V].tempEnvelopeSpeed!=null&&(K=l.envelopes[V].tempEnvelopeSpeed);let Q=t.arpSpeedScale[l.envelopeSpeed]*K;this.isModActive(t.modulators.dictionary["envelope speed"].index,a,r.instrumentIndex)&&(Q=Math.max(0,Math.min(t.arpSpeedScale.length-1,this.getModValue(t.modulators.dictionary["envelope speed"].index,a,r.instrumentIndex,!1))),Number.isInteger(Q)?Q=t.arpSpeedScale[Q]*K:Q=(1-Q%1)*t.arpSpeedScale[Math.floor(Q)]+Q%1*t.arpSpeedScale[Math.ceil(Q)]*K),j[V]=Q}O.computeEnvelopes(l,L,g.envelopeTime,t.ticksPerPart*P,n/this.samplesPerSecond,r,j,g,this,a,r.instrumentIndex);let te=r.envelopeComputer.envelopeStarts,ee=r.envelopeComputer.envelopeEnds;if(l.noteFilter=I,m.continues&&(r.prevNote==null||r.note==null)&&g.envelopeComputer.reset(),r.note!=null&&m.slides){let V=r.prevNote,K=r.nextNote;if(V!=null){let Q=V.pitches[r.prevNotePitchIndex]+V.pins[V.pins.length-1].interval-r.pitches[0];if(O.prevSlideStart&&(R+=Q*O.prevSlideRatioStart),O.prevSlideEnd&&(N+=Q*O.prevSlideRatioEnd),!y.singleTone){let Z=V.pitches.length-r.chordSize;O.prevSlideStart&&(H=i.computeChordExpression(r.chordSize+Z*O.prevSlideRatioStart)),O.prevSlideEnd&&(U=i.computeChordExpression(r.chordSize+Z*O.prevSlideRatioEnd))}}if(K!=null){let Q=K.pitches[r.nextNotePitchIndex]-(r.pitches[0]+r.note.pins[r.note.pins.length-1].interval);if(O.nextSlideStart&&(R+=Q*O.nextSlideRatioStart),O.nextSlideEnd&&(N+=Q*O.nextSlideRatioEnd),!y.singleTone){let Z=K.pitches.length-r.chordSize;O.nextSlideStart&&(H=i.computeChordExpression(r.chordSize+Z*O.nextSlideRatioStart)),O.nextSlideEnd&&(U=i.computeChordExpression(r.chordSize+Z*O.nextSlideRatioEnd))}}}if(Et(l.mdeffects)){let V=t.justIntonationSemitones[l.pitchShift]/p,K=1,Q=1;this.isModActive(t.modulators.dictionary["pitch shift"].index,a,r.instrumentIndex)&&(V=t.justIntonationSemitones[t.justIntonationSemitones.length-1],K=this.getModValue(t.modulators.dictionary["pitch shift"].index,a,r.instrumentIndex,!1)/t.pitchShiftCenter,Q=this.getModValue(t.modulators.dictionary["pitch shift"].index,a,r.instrumentIndex,!0)/t.pitchShiftCenter);let Z=te[19],ae=ee[19];R+=V*Z*K,N+=V*ae*Q}if(Mt(l.mdeffects)||this.isModActive(t.modulators.dictionary["song detune"].index,a,r.instrumentIndex)){let V=te[20],K=ee[20],Q=l.detune,Z=l.detune;this.isModActive(t.modulators.dictionary.detune.index,a,r.instrumentIndex)&&(Q=this.getModValue(t.modulators.dictionary.detune.index,a,r.instrumentIndex,!1)+t.detuneCenter,Z=this.getModValue(t.modulators.dictionary.detune.index,a,r.instrumentIndex,!0)+t.detuneCenter),this.isModActive(t.modulators.dictionary["song detune"].index,a,r.instrumentIndex)&&(Q+=4*this.getModValue(t.modulators.dictionary["song detune"].index,a,r.instrumentIndex,!1),Z+=4*this.getModValue(t.modulators.dictionary["song detune"].index,a,r.instrumentIndex,!0)),R+=Kt(Q)*V*t.pitchesPerOctave/(12*100),N+=Kt(Z)*K*t.pitchesPerOctave/(12*100)}if(Dt(l.mdeffects)){let V,K,Q;l.vibrato==t.vibratos.length?(V=l.vibratoDelay*2,l.vibratoDelay==t.modulators.dictionary["vibrato delay"].maxRawVol&&(V=Number.POSITIVE_INFINITY),K=l.vibratoDepth,Q=K):(V=t.vibratos[l.vibrato].delayTicks,K=t.vibratos[l.vibrato].amplitude,Q=K),this.isModActive(t.modulators.dictionary["vibrato delay"].index,a,r.instrumentIndex)&&(V=this.getModValue(t.modulators.dictionary["vibrato delay"].index,a,r.instrumentIndex,!1)*2,V==t.modulators.dictionary["vibrato delay"].maxRawVol*2&&(V=Number.POSITIVE_INFINITY)),this.isModActive(t.modulators.dictionary["vibrato depth"].index,a,r.instrumentIndex)&&(K=this.getModValue(t.modulators.dictionary["vibrato depth"].index,a,r.instrumentIndex,!1)/25,Q=this.getModValue(t.modulators.dictionary["vibrato depth"].index,a,r.instrumentIndex,!0)/25);let Z;if(r.prevVibrato!=null)Z=r.prevVibrato;else{let ie=i.getLFOAmplitude(l,S*g.vibratoTime),ye=te[21];if(Z=K*ie*ye,V>0){let re=V-O.noteTicksStart;Z*=Math.max(0,Math.min(1,1-re/2))}}let ae=i.getLFOAmplitude(l,S*g.nextVibratoTime),fe=ee[21];if(l.type!=10){let ie=Q*ae*fe;if(V>0){let ye=V-O.noteTicksEnd;ie*=Math.max(0,Math.min(1,1-ye/2))}r.prevVibrato=ie,R+=Z,N+=ie}}if(!m.isSeamless&&!r.forceContinueAtStart||r.prevNote==null){let V=l.getFadeInSeconds();V>0&&(z*=Math.min(1,O.noteSecondsStartUnscaled/V),W*=Math.min(1,O.noteSecondsEndUnscaled/V))}l.type==4&&r.drumsetPitch==null&&(r.drumsetPitch=r.pitches[0],r.note!=null&&(r.drumsetPitch+=r.note.pickMainInterval()),r.drumsetPitch=Math.max(0,Math.min(t.drumCount-1,r.drumsetPitch)));let be=O.lowpassCutoffDecayVolumeCompensation,Ie=te[2],_=ee[2];if(l.noteFilterType){let V=te[22],K=ee[22],Q=te[30],Z=ee[30];M.toCoefficients(i.tempFilterStartCoefficients,this.samplesPerSecond,Ie*V,Q),q.toCoefficients(i.tempFilterEndCoefficients,this.samplesPerSecond,_*K,Z),r.noteFiltersL.length<1&&(r.noteFiltersL[0]=new Re),r.noteFiltersR.length<1&&(r.noteFiltersR[0]=new Re),r.noteFiltersL[0].loadCoefficientsWithGradient(i.tempFilterStartCoefficients,i.tempFilterEndCoefficients,1/c,M.type==0),r.noteFiltersR[0].loadCoefficientsWithGradient(i.tempFilterStartCoefficients,i.tempFilterEndCoefficients,1/c,M.type==0),be*=M.getVolumeCompensationMult(),r.noteFilterCount=1}else{let V=l.tmpNoteFilterStart!=null?l.tmpNoteFilterStart:l.noteFilter;for(let K=0;K<V.controlPointCount;K++){let Q=te[22+K],Z=ee[22+K],ae=te[30+K],fe=ee[30+K],ie=V.controlPoints[K],ye=l.tmpNoteFilterEnd!=null&&l.tmpNoteFilterEnd.controlPoints[K]!=null?l.tmpNoteFilterEnd.controlPoints[K]:V.controlPoints[K];ie.type!=ye.type&&(ie=ye),ie.toCoefficients(i.tempFilterStartCoefficients,this.samplesPerSecond,Ie*Q,ae),ye.toCoefficients(i.tempFilterEndCoefficients,this.samplesPerSecond,_*Z,fe),r.noteFiltersL.length<=K&&(r.noteFiltersL[K]=new Re),r.noteFiltersR.length<=K&&(r.noteFiltersR[K]=new Re),r.noteFiltersL[K].loadCoefficientsWithGradient(i.tempFilterStartCoefficients,i.tempFilterEndCoefficients,1/c,ie.type==0),r.noteFiltersR[K].loadCoefficientsWithGradient(i.tempFilterStartCoefficients,i.tempFilterEndCoefficients,1/c,ie.type==0),be*=ie.getVolumeCompensationMult()}r.noteFilterCount=V.controlPointCount}if(l.type==4){let V=r.envelopeComputer,K=l.getDrumsetEnvelope(r.drumsetPitch);be*=Lt.getLowpassCutoffDecayVolumeCompensation(K),V.computeDrumsetEnvelopes(l,K,w,P,B);let Q=V.drumsetFilterEnvelopeStart,Z=V.drumsetFilterEnvelopeEnd,ae=this.tempDrumSetControlPoint;ae.type=0,ae.gain=Pe.getRoundedSettingValueFromLinearGain(.5),ae.freq=Pe.getRoundedSettingValueFromHz(8e3),ae.toCoefficients(i.tempFilterStartCoefficients,this.samplesPerSecond,Q*(1+Q),1),ae.toCoefficients(i.tempFilterEndCoefficients,this.samplesPerSecond,Z*(1+Z),1),r.noteFiltersL.length==r.noteFilterCount&&(r.noteFiltersL[r.noteFilterCount]=new Re),r.noteFiltersR.length==r.noteFilterCount&&(r.noteFiltersR[r.noteFilterCount]=new Re),r.noteFiltersL[r.noteFilterCount].loadCoefficientsWithGradient(i.tempFilterStartCoefficients,i.tempFilterEndCoefficients,1/c,!0),r.noteFiltersR[r.noteFilterCount].loadCoefficientsWithGradient(i.tempFilterStartCoefficients,i.tempFilterEndCoefficients,1/c,!0),r.noteFilterCount++}if(be=Math.min(3,be),l.type==1||l.type==11){let V=1,K=0,Q=0,Z=y.arpeggiates,ae=y.name=="monophonic";if(r.pitchCount>1&&Z){let $=Math.floor(g.arpTime/t.ticksPerArpeggio);Q=r.pitches[zt(r.pitchCount,l.fastTwoNoteArp,$)]-r.pitches[0]}let fe=l.type==11?l.customAlgorithm.carrierCount:t.algorithms[l.algorithm].carrierCount;for(let $=0;$<(l.type==11?6:t.operatorCount);$++){let de=l.type==11?l.customAlgorithm.associatedCarrier[$]-1:t.algorithms[l.algorithm].associatedCarrier[$]-1,ge=r.pitches[Z?0:ae?l.monoChordTone:$<r.pitchCount?$:de<r.pitchCount?de:0],Fe=t.operatorFrequencies[l.operators[$].frequency].mult,Y=t.operatorCarrierInterval[de]+Q,me=d+(ge+R)*p+Y,Se=d+(ge+N)*p+Y,Me=Ne.frequencyFromPitch(me),Ae=Ne.frequencyFromPitch(Se),De=t.operatorFrequencies[l.operators[$].frequency].hzOffset,ke=Fe*Me+De,Le=Fe*Ae+De,Ce=te[6+$],qe=ee[6+$],Be,We;Ce!=1||qe!=1?(Be=Math.pow(2,Math.log2(ke/Me)*Ce)*Me,We=Math.pow(2,Math.log2(Le/Ae)*qe)*Ae):(Be=ke,We=Le),r.phaseDeltas[$]=Be*x,r.phaseDeltaScales[$]=Math.pow(We/Be,1/c);let Xe=l.operators[$].amplitude,Oe=l.operators[$].amplitude;$<4?this.isModActive(t.modulators.dictionary["fm slider 1"].index+$,a,r.instrumentIndex)&&(Xe*=this.getModValue(t.modulators.dictionary["fm slider 1"].index+$,a,r.instrumentIndex,!1)/15,Oe*=this.getModValue(t.modulators.dictionary["fm slider 1"].index+$,a,r.instrumentIndex,!0)/15):this.isModActive(t.modulators.dictionary["fm slider 5"].index+$-4,a,r.instrumentIndex)&&(Xe*=this.getModValue(t.modulators.dictionary["fm slider 5"].index+$-4,a,r.instrumentIndex,!1)/15,Oe*=this.getModValue(t.modulators.dictionary["fm slider 5"].index+$-4,a,r.instrumentIndex,!0)/15);let Ze=i.operatorAmplitudeCurve(Xe),je=i.operatorAmplitudeCurve(Oe),et=Ze*t.operatorFrequencies[l.operators[$].frequency].amplitudeSign,ut=je*t.operatorFrequencies[l.operators[$].frequency].amplitudeSign,Ge=et,Ue=ut;if($<fe){let Ve;r.prevPitchExpressions[$]!=null?Ve=r.prevPitchExpressions[$]:Ve=Math.pow(2,-(me-G)/C);let He=Math.pow(2,-(Se-G)/C);r.prevPitchExpressions[$]=He,Ge*=Ve,Ue*=He,K+=je}else Ge*=t.sineWaveLength*1.5,Ue*=t.sineWaveLength*1.5,V*=1-Math.min(1,l.operators[$].amplitude/15);if(Ge*=te[12+$],Ue*=ee[12+$],this.isModActive(t.modulators.dictionary["pre volume"].index,a,r.instrumentIndex)){let Ve=this.getModValue(t.modulators.dictionary["pre volume"].index,a,r.instrumentIndex,!1),He=this.getModValue(t.modulators.dictionary["pre volume"].index,a,r.instrumentIndex,!0);Ge*=Ve<=0?(Ve+t.volumeRange/2)/(t.volumeRange/2):i.instrumentVolumeToVolumeMult(Ve),Ue*=He<=0?(He+t.volumeRange/2)/(t.volumeRange/2):i.instrumentVolumeToVolumeMult(He)}r.operatorExpressions[$]=Ge,r.operatorExpressionDeltas[$]=(Ue-Ge)/c}V*=(Math.pow(2,2-1.4*l.feedbackAmplitude/15)-1)/3,V*=1-Math.min(1,Math.max(0,K-1)/2),V=1+V*3;let ie=F*V*be*z*H*te[0],ye=F*V*be*W*U*ee[0];ae&&r.pitchCount<=l.monoChordTone&&(ie=0,ye=0),r.expression=ie,r.expressionDelta=(ye-ie)/c;let re=l.feedbackAmplitude,ue=l.feedbackAmplitude;this.isModActive(t.modulators.dictionary["fm feedback"].index,a,r.instrumentIndex)&&(re*=this.getModValue(t.modulators.dictionary["fm feedback"].index,a,r.instrumentIndex,!1)/15,ue*=this.getModValue(t.modulators.dictionary["fm feedback"].index,a,r.instrumentIndex,!0)/15);let le=t.sineWaveLength*.3*re/15,oe=t.sineWaveLength*.3*ue/15,ce=le*te[18],X=oe*ee[18];r.feedbackMult=ce,r.feedbackDelta=(X-ce)/c}else{let V=Math.pow(2,(N-R)*p/12),K=Math.pow(V,1/c),Q=y.name=="monophonic",Z=r.pitches[0];if(r.pitchCount>1&&(y.arpeggiates||y.customInterval||Q)){let $=Math.floor(g.arpTime/t.ticksPerArpeggio);if(y.customInterval){let de=r.pitches[1+zt(r.pitchCount-1,l.fastTwoNoteArp,$)]-r.pitches[0];E=Math.pow(2,de/12),r.specialIntervalExpressionMult=Math.pow(2,-de/C)}else y.arpeggiates?Z=r.pitches[zt(r.pitchCount,l.fastTwoNoteArp,$)]:Z=r.pitches[l.monoChordTone]}let ae=d+(Z+R)*p,fe=d+(Z+N)*p,ie;r.prevPitchExpressions[0]!=null?ie=r.prevPitchExpressions[0]:ie=Math.pow(2,-(ae-G)/C);let ye=Math.pow(2,-(fe-G)/C);r.prevPitchExpressions[0]=ye;let re=F*be;if(l.type==2&&(re*=t.chipNoises[l.chipNoise].expression),l.type==0&&(re*=t.chipWaves[l.chipWave].expression),l.type==6){let $=Nn(l.pulseWidth),de=$,ge=$;this.isModActive(t.modulators.dictionary["pulse width"].index,a,r.instrumentIndex)&&(de=this.getModValue(t.modulators.dictionary["pulse width"].index,a,r.instrumentIndex,!1)/(t.pulseWidthRange*2),ge=this.getModValue(t.modulators.dictionary["pulse width"].index,a,r.instrumentIndex,!0)/(t.pulseWidthRange*2));let Fe=de*te[3],Y=ge*ee[3];r.pulseWidth=Fe,r.pulseWidthDelta=(Y-Fe)/c;let me=l.decimalOffset;this.isModActive(t.modulators.dictionary["decimal offset"].index,a,r.instrumentIndex)&&(me=this.getModValue(t.modulators.dictionary["decimal offset"].index,a,r.instrumentIndex,!1));let Se=me*te[38];r.decimalOffset=Se,r.pulseWidth-=r.decimalOffset/1e4}if(l.type==7){let $=l.stringSustain,de=l.stringSustain;this.isModActive(t.modulators.dictionary.sustain.index,a,r.instrumentIndex)&&($=this.getModValue(t.modulators.dictionary.sustain.index,a,r.instrumentIndex,!1),de=this.getModValue(t.modulators.dictionary.sustain.index,a,r.instrumentIndex,!0)),r.stringSustainStart=$,r.stringSustainEnd=de,re*=Math.pow(2,.7*(1-$/(t.stringSustainRange-1)))}let ue=Ne.frequencyFromPitch(ae);if(l.type==0||l.type==9||l.type==5||l.type==7||l.type==3||l.type==6||l.type==2||l.type==4){let $=l.unisonVoices,de=l.unisonSpread,ge=l.unisonOffset,Fe=l.unisonExpression,Y=l.type==7?1:$/2;re*=Fe*Y;let me=te[5],Se=ee[5],Me=Math.pow(2,(ge+de)*me/12),Ae=Math.pow(2,(ge+de)*Se/12);r.phaseDeltas[0]=ue*x*Me,r.phaseDeltaScales[0]=K*Math.pow(Ae/Me,1/c);let De=$==1?1:$-1;for(let ke=1;ke<$;ke++){let Le=Math.pow(2,(ge+de-2*ke*de/De)*me/12)*E,Ce=Math.pow(2,(ge+de-2*ke*de/De)*Se/12)*E;r.phaseDeltas[ke]=ue*x*Le,r.phaseDeltaScales[ke]=K*Math.pow(Ce/Le,1/c)}for(let ke=$;ke<t.unisonVoicesMax;ke++)r.phaseDeltas[ke]=r.phaseDeltas[0],r.phaseDeltaScales[ke]=r.phaseDeltaScales[0]}else r.phaseDeltas[0]=ue*x,r.phaseDeltaScales[0]=K;let le=1,oe=1;if(l.type==8){let $=1/Math.sqrt(t.supersawVoiceCount),de=l.supersawDynamism/t.supersawDynamismMax,ge=l.supersawDynamism/t.supersawDynamismMax;this.isModActive(t.modulators.dictionary.dynamism.index,a,r.instrumentIndex)&&(de=this.getModValue(t.modulators.dictionary.dynamism.index,a,r.instrumentIndex,!1)/t.supersawDynamismMax,ge=this.getModValue(t.modulators.dictionary.dynamism.index,a,r.instrumentIndex,!0)/t.supersawDynamismMax);let Fe=1-Math.pow(Math.max(0,1-de*te[39]),.2),Y=1-Math.pow(Math.max(0,1-ge*ee[39]),.2),me=Math.pow(2,Math.log2($)*Fe),Se=Math.pow(2,Math.log2($)*Y),Me=Math.sqrt((1/Math.pow(me,2)-1)/(t.supersawVoiceCount-1)),Ae=Math.sqrt((1/Math.pow(Se,2)-1)/(t.supersawVoiceCount-1));r.supersawDynamism=Me,r.supersawDynamismDelta=(Ae-Me)/c;let De=r.supersawDelayIndex==-1;if(De){let $e=0;for(let Te=0;Te<t.supersawVoiceCount;Te++)r.phases[Te]=$e,$e+=-Math.log(Math.random());let on=1+(t.supersawVoiceCount-1)*Me,Nt=0;for(let Te=0;Te<t.supersawVoiceCount;Te++){let Ct=Te==0?1:Me,It=r.phases[Te]/$e;r.phases[Te]=It,Nt+=(It-.5)*Ct}let Ft=1,Ln=0;for(let Te=t.supersawVoiceCount-1;Te>=0;Te--){let Ct=1-r.phases[Te],It=Ct-Ln;if(Nt<0){let xa=-Nt/on;if(xa<It){Ft=Ln+xa;break}}let cr=Te==0?1:Me;Nt+=It*on-cr,Ln=Ct}for(let Te=0;Te<t.supersawVoiceCount;Te++)r.phases[Te]+=Ft;for(let Te=1;Te<t.supersawVoiceCount-1;Te++){let Ct=Te+Math.floor(Math.random()*(t.supersawVoiceCount-Te)),It=r.phases[Te];r.phases[Te]=r.phases[Ct],r.phases[Ct]=It}}let ke=l.supersawSpread/t.supersawSpreadMax,Le=ke,Ce=ke;this.isModActive(t.modulators.dictionary.spread.index,a,r.instrumentIndex)&&(Le=this.getModValue(t.modulators.dictionary.spread.index,a,r.instrumentIndex,!1)/t.supersawSpreadMax,Ce=this.getModValue(t.modulators.dictionary.spread.index,a,r.instrumentIndex,!0)/t.supersawSpreadMax);let qe=Le*te[40],Be=Ce*ee[40],We=(qe+Be)*.5,Xe=Math.pow(1-Math.sqrt(Math.max(0,1-We)),1.75);for(let $e=0;$e<t.supersawVoiceCount;$e++){let Ut=$e==0?0:Math.pow((($e+1>>1)-.5+.025*(($e&2)-1))/(t.supersawVoiceCount>>1),1.1)*(($e&1)*2-1);r.supersawUnisonDetunes[$e]=Math.pow(2,Xe*Ut/12)}let Oe=l.supersawShape/t.supersawShapeMax,Ze=Oe*te[41],je=Oe*ee[41];this.isModActive(t.modulators.dictionary["saw shape"].index,a,r.instrumentIndex)&&(Ze=this.getModValue(t.modulators.dictionary["saw shape"].index,a,r.instrumentIndex,!1)/t.supersawShapeMax,je=this.getModValue(t.modulators.dictionary["saw shape"].index,a,r.instrumentIndex,!0)/t.supersawShapeMax);let et=Ze*te[41],ut=je*ee[41];r.supersawShape=et,r.supersawShapeDelta=(ut-et)/c;let Ge=l.decimalOffset;this.isModActive(t.modulators.dictionary["decimal offset"].index,a,r.instrumentIndex)&&(Ge=this.getModValue(t.modulators.dictionary["decimal offset"].index,a,r.instrumentIndex,!1));let Ue=Ge*te[38];r.decimalOffset=Ue;let Ve=Nn(l.pulseWidth),He=Ve,xt=Ve;this.isModActive(t.modulators.dictionary["pulse width"].index,a,r.instrumentIndex)&&(He=this.getModValue(t.modulators.dictionary["pulse width"].index,a,r.instrumentIndex,!1)/(t.pulseWidthRange*2),xt=this.getModValue(t.modulators.dictionary["pulse width"].index,a,r.instrumentIndex,!0)/(t.pulseWidthRange*2));let fa=He*te[3],ya=xt*ee[3];fa-=Ue/1e4,ya-=Ue/1e4;let lr=r.supersawPrevPhaseDelta!=null?r.supersawPrevPhaseDelta:ue*x,ba=ue*x*V;r.supersawPrevPhaseDelta=ba;let An=fa/lr,ga=ya/ba;r.supersawDelayLength=An,r.supersawDelayLengthDelta=(ga-An)/c;let va=Math.ceil(Math.max(An,ga))+2;if(r.supersawDelayLine==null||r.supersawDelayLine.length<=va){let $e=Math.ceil(.5*this.samplesPerSecond/Ne.frequencyFromPitch(24)),Ut=new Float32Array(Je(Math.max($e,va)));if(!De&&r.supersawDelayLine!=null){let on=r.supersawDelayLine.length-1>>0,Nt=r.supersawDelayIndex;for(let Ft=0;Ft<r.supersawDelayLine.length;Ft++)Ut[Ft]=r.supersawDelayLine[Nt+Ft&on]}r.supersawDelayLine=Ut,r.supersawDelayIndex=r.supersawDelayLine.length}else De&&(r.supersawDelayLine.fill(0),r.supersawDelayIndex=r.supersawDelayLine.length);let Sa=t.pwmBaseExpression/t.supersawBaseExpression;le*=(1+(Sa-1)*et)/Math.sqrt(1+(t.supersawVoiceCount-1)*Me*Me),oe*=(1+(Sa-1)*ut)/Math.sqrt(1+(t.supersawVoiceCount-1)*Ae*Ae)}let ce=re*z*H*ie*te[0]*le,X=re*W*U*ye*ee[0]*oe;if(this.isModActive(t.modulators.dictionary["pre volume"].index,a,r.instrumentIndex)){let $=this.getModValue(t.modulators.dictionary["pre volume"].index,a,r.instrumentIndex,!1),de=this.getModValue(t.modulators.dictionary["pre volume"].index,a,r.instrumentIndex,!0);ce*=$<=0?($+t.volumeRange/2)/(t.volumeRange/2):i.instrumentVolumeToVolumeMult($),X*=de<=0?(de+t.volumeRange/2)/(t.volumeRange/2):i.instrumentVolumeToVolumeMult(de)}if(Q&&r.pitchCount<=l.monoChordTone&&(ce=0,X=0,g.awake=!1),r.expression=ce,r.expressionDelta=(X-ce)/c,l.type==7){let $;if(r.prevStringDecay!=null)$=r.prevStringDecay;else{let Y=r.envelopeComputer.envelopeStarts[4];$=1-Math.min(1,Y*r.stringSustainStart/(t.stringSustainRange-1))}let de=r.envelopeComputer.envelopeEnds[4],ge=1-Math.min(1,de*r.stringSustainEnd/(t.stringSustainRange-1));r.prevStringDecay=ge;let Fe=l.unisonVoices;for(let Y=r.pickedStrings.length;Y<Fe;Y++)r.pickedStrings[Y]=new bn;if(r.atNoteStart&&!m.continues&&!r.forceContinueAtStart)for(let Y of r.pickedStrings)Y.delayIndex=-1;for(let Y=0;Y<Fe;Y++)r.pickedStrings[Y].update(this,g,r,Y,c,$,ge,l.stringSustainType)}}}static getLFOAmplitude(e,a){let n=0;for(let r of t.vibratoTypes[e.vibratoType].periodsSeconds)n+=Math.sin(Math.PI*2*a/r);return n}static getInstrumentSynthFunction(e){if(e.type==1){let a=e.algorithm+"_"+e.feedbackType;if(i.fmSynthFunctionCache[a]==null){let n=[];for(let s of i.fmSourceTemplate)if(s.indexOf("// CARRIER OUTPUTS")!=-1){let o=[];for(let c=0;c<t.algorithms[e.algorithm].carrierCount;c++)o.push("operator"+c+"Scaled");n.push(s.replace("/*operator#Scaled*/",o.join(" + ")))}else if(s.indexOf("// INSERT OPERATOR COMPUTATION HERE")!=-1)for(let o=t.operatorCount-1;o>=0;o--)for(let c of i.operatorSourceTemplate)if(c.indexOf("/* + operator@Scaled*/")!=-1){let u="";for(let l of t.algorithms[e.algorithm].modulatedBy[o])u+=" + operator"+(l-1)+"Scaled";let b=t.feedbacks[e.feedbackType].indices[o];if(b.length>0){u+=" + feedbackMult * (";let l=[];for(let g of b)l.push("operator"+(g-1)+"Output");u+=l.join(" + ")+")"}n.push(c.replace(/\#/g,o+"").replace("/* + operator@Scaled*/",u))}else n.push(c.replace(/\#/g,o+""));else if(s.indexOf("#")!=-1)for(let o=0;o<t.operatorCount;o++)n.push(s.replace(/\#/g,o+""));else n.push(s);let r="return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {"+n.join(`
`)+"}";i.fmSynthFunctionCache[a]=new Function("Config","Synth",r)(t,i)}return i.fmSynthFunctionCache[a]}else{if(e.type==0)return e.isUsingAdvancedLoopControls?i.loopableChipSynth:i.chipSynth;if(e.type==9)return i.chipSynth;if(e.type==5)return i.harmonicsSynth;if(e.type==6)return i.pulseWidthSynth;if(e.type==8)return i.supersawSynth;if(e.type==7)return i.pickedStringSynth;if(e.type==2)return i.noiseSynth;if(e.type==3)return i.spectrumSynth;if(e.type==4)return i.drumsetSynth;if(e.type==10)return i.modSynth;if(e.type==11){let a=e.customAlgorithm.name+"_"+e.customFeedbackType.name;if(i.fm6SynthFunctionCache[a]==null){let n=[];for(let s of i.fmSourceTemplate)if(s.indexOf("// CARRIER OUTPUTS")!=-1){let o=[];for(let c=0;c<e.customAlgorithm.carrierCount;c++)o.push("operator"+c+"Scaled");n.push(s.replace("/*operator#Scaled*/",o.join(" + ")))}else if(s.indexOf("// INSERT OPERATOR COMPUTATION HERE")!=-1)for(let o=t.operatorCount+2-1;o>=0;o--)for(let c of i.operatorSourceTemplate)if(c.indexOf("/* + operator@Scaled*/")!=-1){let u="";for(let l of e.customAlgorithm.modulatedBy[o])u+=" + operator"+(l-1)+"Scaled";let b=e.customFeedbackType.indices[o];if(b.length>0){u+=" + feedbackMult * (";let l=[];for(let g of b)l.push("operator"+(g-1)+"Output");u+=l.join(" + ")+")"}n.push(c.replace(/\#/g,o+"").replace("/* + operator@Scaled*/",u))}else n.push(c.replace(/\#/g,o+""));else if(s.indexOf("#")!=-1)for(let o=0;o<t.operatorCount+2;o++)n.push(s.replace(/\#/g,o+""));else n.push(s);let r="return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {"+n.join(`
`)+"}";i.fm6SynthFunctionCache[a]=new Function("Config","Synth",r)(t,i)}return i.fm6SynthFunctionCache[a]}else throw new Error("Unrecognized instrument type: "+e.type)}}static wrap(e,a){return(e%a+a)%a}static loopableChipSynth(e,a,n,r,s){let o=s.effectsIncludeType(3)&&s.aliases,c=e.tempInstrumentSampleBufferL,u=e.tempInstrumentSampleBufferR,b=s.waveL,l=s.waveR,g=s.volumeScale,m=o&&s.type==8?b.length:b.length-1,y=Math.max(0,Math.min(m,s.chipWaveLoopEnd)),h=Math.max(0,Math.min(y-1,s.chipWaveLoopStart)),f=y-h;f<2&&(h=0,y=m,f=m);let p=s.chipWaveLoopMode,S=s.chipWavePlayBackwards,x=r.specialIntervalExpressionMult*s.unisonSign;s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(r.phases[1]=r.phases[0]);let w=r.phaseDeltas[0]*m,v=r.phaseDeltas[1]*m,P=r.directions[0],B=r.directions[1],L=r.chipWaveCompletions[0],E=r.chipWaveCompletions[1];(p===3||p===2||p===0)&&(S?(P=-1,B=-1):(P=1,B=1)),(p===0||p===1)&&(L=0,E=0);let D=r.chipWaveCompletionsLastWaveL[0],R=r.chipWaveCompletionsLastWaveL[1],N=r.chipWaveCompletionsLastWaveR[0],z=r.chipWaveCompletionsLastWaveR[1],W=1e3,H=+r.phaseDeltaScales[0],U=+r.phaseDeltaScales[1],G=+r.expression,d=+r.expressionDelta,F=i.wrap(r.phases[0],1)*m,C=i.wrap(r.phases[1],1)*m,I=0,M=0,q=0,O=0;if(!o){let ye=Math.floor(F),re=Math.floor(C),ue=i.wrap(ye,m),le=i.wrap(re,m),oe=F-ye,ce=C-re;I=+b[ue],M=+b[le],q=+l[ue],O=+l[le],I+=(b[i.wrap(ue+1,m)]-I)*oe,M+=(b[i.wrap(le+1,m)]-M)*ce,q+=(l[i.wrap(ue+1,m)]-q)*oe,O+=(l[i.wrap(le+1,m)]-O)*ce}let j=r.noteFiltersL,te=r.noteFiltersR,ee=r.noteFilterCount|0,be=+r.initialNoteFilterInputL1,Ie=+r.initialNoteFilterInputR1,_=+r.initialNoteFilterInputL2,V=+r.initialNoteFilterInputR2,K=i.applyFilters,Q=a+n,Z=r.chipWavePrevWavesL[0],ae=r.chipWavePrevWavesL[1],fe=r.chipWavePrevWavesR[0],ie=r.chipWavePrevWavesR[1];for(let ye=a;ye<Q;ye++){L>0&&L<W&&L++,E>0&&E<W&&E++;let re=0;F+=w*P,C+=v*B,p===2?(P===1?F>m&&(L<=0&&(D=Z,N=fe,L++),re=1):P===-1&&F<0&&(L<=0&&(D=Z,N=fe,L++),re=1),B===1?C>m&&(E<=0&&(R=ae,z=ie,E++),re=1):P===-1&&C<0&&(E<=0&&(R=ae,z=ie,E++),re=1)):p===3?(P===1?F>y&&(L<=0&&(D=Z,N=fe,L++),re=1):P===-1&&F<h&&(L<=0&&(D=Z,N=fe,L++),re=1),B===1?C>y&&(E<=0&&(R=ae,z=ie,E++),re=1):P===-1&&C<h&&(E<=0&&(R=ae,z=ie,E++),re=1)):p===0?(P===1?F>y&&(F=h+i.wrap(F-y,f),re=1):P===-1&&F<h&&(F=y-i.wrap(h-F,f),re=1),B===1?C>y&&(C=h+i.wrap(C-y,f),re=1):B===-1&&C<h&&(C=y-i.wrap(h-C,f),re=1)):p===1&&(P===1?F>y&&(F=y-i.wrap(F-y,f),P=-1,re=1):P===-1&&F<h&&(F=h+i.wrap(h-F,f),P=1,re=1),B===1?C>y&&(C=y-i.wrap(C-y,f),B=-1,re=1):B===-1&&C<h&&(C=h+i.wrap(h-C,f),B=1,re=1));let ue=0,le=0,oe=0,ce=0,X=0,$=0;if(o){ue=b[i.wrap(Math.floor(F),m)],le=b[i.wrap(Math.floor(C),m)],oe=l[i.wrap(Math.floor(F),m)],ce=l[i.wrap(Math.floor(C),m)],Z=ue,ae=le,fe=oe,ie=ce;let me=L>0?(W-Math.min(L,W))/W:1,Se=E>0?(W-Math.min(E,W))/W:1;X=0,L>0?(X+=D*me,$+=D*me):(X+=ue,$+=oe),E>0?(X+=R*Se,$+=z*Se):(X+=le,$+=ce)}else{let me=Math.floor(F),Se=Math.floor(C),Me=i.wrap(me,m),Ae=i.wrap(Se,m),De=b[Me],ke=b[Ae],Le=l[Me],Ce=l[Ae],qe=F-me,Be=C-Se;if(De+=(b[i.wrap(Me+1,m)]-De)*qe,ke+=(b[i.wrap(Ae+1,m)]-ke)*Be,Le+=(l[i.wrap(Me+1,m)]-Le)*qe,Ce+=(l[i.wrap(Ae+1,m)]-Ce)*Be,!(p===0&&h===0&&y===m)&&re!==0){let Oe=0,Ze=0,je=0,et=0,ut=Math.max(0,F-w*P),Ge=Math.max(0,C-v*B),Ue=Math.floor(ut),Ve=Math.floor(Ge),He=i.wrap(Ue,m),xt=i.wrap(Ve,m);Oe=b[He],Ze=b[xt],je=l[He],et=l[xt],Oe+=(b[i.wrap(He+1,m)]-Oe)*(ut-Ue)*P,Ze+=(b[i.wrap(xt+1,m)]-Ze)*(Ge-Ve)*B,je+=(l[i.wrap(He+1,m)]-je)*(ut-Ue)*P,et+=(l[i.wrap(xt+1,m)]-et)*(Ge-Ve)*B,I=Oe,M=Ze,q=je,O=et}p===1&&re!==0?(ue=Z,le=ae,oe=fe,ce=ie):(ue=(De-I)/(w*P),le=(ke-M)/(v*B),oe=(Le-q)/(w*P),ce=(Ce-O)/(v*B)),Z=ue,ae=le,fe=oe,ie=ce,I=De,M=ke,q=Le,O=Ce;let We=L>0?(W-Math.min(L,W))/W:1,Xe=E>0?(W-Math.min(E,W))/W:1;L>0?(X+=D*We,$+=N*We):(X+=ue,$+=oe),E>0?(X+=R*Xe,$+=z*Xe):(X+=le*x,$+=ce*x)}let de=K(X*g,be,_,ee,j),ge=K($*g,Ie,V,ee,te);_=be,V=Ie,be=X*g,Ie=$*g,w*=H,v*=U;let Fe=de*G,Y=ge*G;G+=d,c[ye]+=Fe,u[ye]+=Y}r.phases[0]=F/m,r.phases[1]=C/m,r.phaseDeltas[0]=w/m,r.phaseDeltas[1]=v/m,r.directions[0]=P,r.directions[1]=B,r.chipWaveCompletions[0]=L,r.chipWaveCompletions[1]=E,r.chipWavePrevWavesL[0]=Z,r.chipWavePrevWavesL[1]=ae,r.chipWavePrevWavesR[0]=fe,r.chipWavePrevWavesR[1]=ie,r.chipWaveCompletionsLastWaveL[0]=D,r.chipWaveCompletionsLastWaveL[1]=R,r.chipWaveCompletionsLastWaveR[0]=N,r.chipWaveCompletionsLastWaveR[1]=z,r.expression=G,e.sanitizeFilters(j),e.sanitizeFilters(te),r.initialNoteFilterInputL1=be,r.initialNoteFilterInputR1=Ie,r.initialNoteFilterInputL2=_,r.initialNoteFilterInputR2=V}static chipSynth(e,a,n,r,s){let o=s.effectsIncludeType(5)&&s.aliases,c=e.tempInstrumentSampleBufferL,u=e.tempInstrumentSampleBufferR,b=s.waveL,l=s.waveR,g=s.volumeScale,m=o&&s.type==8?b.length:b.length-1,y=r.specialIntervalExpressionMult*s.unisonSign;s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(r.phases[1]=r.phases[0]);let h=r.phaseDeltas[0]*m,f=r.phaseDeltas[1]*m,p=+r.phaseDeltaScales[0],S=+r.phaseDeltaScales[1],x=+r.expression,w=+r.expressionDelta,v=r.phases[0]%1*m,P=r.phases[1]%1*m,B=r.noteFiltersL,L=r.noteFiltersR,E=r.noteFilterCount|0,D=+r.initialNoteFilterInputL1,R=+r.initialNoteFilterInputR1,N=+r.initialNoteFilterInputL2,z=+r.initialNoteFilterInputR2,W=i.applyFilters,H=0,U=0,G=0,d=0;if(!o){let C=v|0,I=P|0,M=C%m,q=I%m,O=v-C,j=P-I;H=+b[M],U=+b[q],G=+l[M],d=+l[q],H+=(b[M+1]-H)*O,U+=(b[q+1]-U)*j,G+=(l[M+1]-G)*O,d+=(l[q+1]-d)*j}let F=a+n;for(let C=a;C<F;C++){v+=h,P+=f;let I,M,q,O,j,te;if(o)I=b[(0|v)%m],M=b[(0|P)%m],q=l[(0|v)%m],O=l[(0|P)%m],j=I+M,te=q+O;else{let V=v|0,K=P|0,Q=V%m,Z=K%m,ae=b[Q],fe=b[Z],ie=l[Q],ye=l[Z],re=v-V,ue=P-K;ae+=(b[Q+1]-ae)*re,fe+=(b[Z+1]-fe)*ue,ie+=(l[Q+1]-ie)*re,ye+=(l[Z+1]-ye)*ue,I=(ae-H)/h,M=(fe-U)/f,q=(ie-G)/h,O=(ye-d)/f,H=ae,U=fe,G=ie,d=ye,j=I+M*y,te=q+O*y}let ee=W(j*g,D,N,E,B),be=W(te*g,R,z,E,L);N=D,z=R,D=j*g,R=te*g,h*=p,f*=S;let Ie=ee*x,_=be*x;x+=w,c[C]+=Ie,u[C]+=_}r.phases[0]=v/m,r.phases[1]=P/m,r.phaseDeltas[0]=h/m,r.phaseDeltas[1]=f/m,r.expression=x,e.sanitizeFilters(B),e.sanitizeFilters(L),r.initialNoteFilterInputL1=D,r.initialNoteFilterInputR1=R,r.initialNoteFilterInputL2=N,r.initialNoteFilterInputR2=z}static harmonicsSynth(e,a,n,r,s){let o=e.tempInstrumentSampleBufferL,c=s.waveL,u=c.length-1,b=r.specialIntervalExpressionMult*s.unisonSign;s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(r.phases[1]=r.phases[0]);let l=r.phaseDeltas[0]*u,g=r.phaseDeltas[1]*u,m=+r.phaseDeltaScales[0],y=+r.phaseDeltaScales[1],h=+r.expression,f=+r.expressionDelta,p=r.phases[0]%1*u,S=r.phases[1]%1*u,x=r.noteFiltersL,w=r.noteFilterCount|0,v=+r.initialNoteFilterInputL1,P=+r.initialNoteFilterInputL2,B=i.applyFilters,L=p|0,E=S|0,D=L%u,R=E%u,N=p-L,z=S-E,W=+c[D],H=+c[R];W+=(c[D+1]-W)*N,H+=(c[R+1]-H)*z;let U=a+n;for(let G=a;G<U;G++){p+=l,S+=g;let d=p|0,F=S|0,C=d%u,I=F%u,M=c[C],q=c[I],O=p-d,j=S-F;M+=(c[C+1]-M)*O,q+=(c[I+1]-q)*j;let te=(M-W)/l,ee=(q-H)/g;W=M,H=q;let be=te+ee*b,Ie=B(be,v,P,w,x);P=v,v=be,l*=m,g*=y;let _=Ie*h;h+=f,o[G]+=_}r.phases[0]=p/u,r.phases[1]=S/u,r.phaseDeltas[0]=l/u,r.phaseDeltas[1]=g/u,r.expression=h,e.sanitizeFilters(x),r.initialNoteFilterInputL1=v,r.initialNoteFilterInputL2=P}static pickedStringSynth(e,a,n,r,s){let o=s.unisonVoices,c=i.pickedStringFunctionCache[o];if(c==null){let u="return (synth, bufferIndex, runLength, tone, instrumentState) => {";u+=`
				const Config = beepbox.Config;
				const Synth = beepbox.Synth;
                const data = synth.tempInstrumentSampleBufferL;
				
				let pickedString# = tone.pickedStrings[#];
				let allPassSample# = +pickedString#.allPassSample;
				let allPassPrevInput# = +pickedString#.allPassPrevInput;
				let sustainFilterSample# = +pickedString#.sustainFilterSample;
				let sustainFilterPrevOutput2# = +pickedString#.sustainFilterPrevOutput2;
				let sustainFilterPrevInput1# = +pickedString#.sustainFilterPrevInput1;
				let sustainFilterPrevInput2# = +pickedString#.sustainFilterPrevInput2;
				let fractionalDelaySample# = +pickedString#.fractionalDelaySample;
				const delayLine# = pickedString#.delayLine;
				const delayBufferMask# = (delayLine#.length - 1) >> 0;
				let delayIndex# = pickedString#.delayIndex|0;
				delayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;
				let delayLength# = +pickedString#.prevDelayLength;
				const delayLengthDelta# = +pickedString#.delayLengthDelta;
				let allPassG# = +pickedString#.allPassG;
				let sustainFilterA1# = +pickedString#.sustainFilterA1;
				let sustainFilterA2# = +pickedString#.sustainFilterA2;
				let sustainFilterB0# = +pickedString#.sustainFilterB0;
				let sustainFilterB1# = +pickedString#.sustainFilterB1;
				let sustainFilterB2# = +pickedString#.sustainFilterB2;
				const allPassGDelta# = +pickedString#.allPassGDelta;
				const sustainFilterA1Delta# = +pickedString#.sustainFilterA1Delta;
				const sustainFilterA2Delta# = +pickedString#.sustainFilterA2Delta;
				const sustainFilterB0Delta# = +pickedString#.sustainFilterB0Delta;
				const sustainFilterB1Delta# = +pickedString#.sustainFilterB1Delta;
				const sustainFilterB2Delta# = +pickedString#.sustainFilterB2Delta;
				
				let expression = +tone.expression;
				const expressionDelta = +tone.expressionDelta;
				
				const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;
				const delayResetOffset# = pickedString#.delayResetOffset|0;
				
				const filters = tone.noteFiltersL;
				const filterCount = tone.noteFilterCount|0;
				let initialFilterInput1 = +tone.initialNoteFilterInputL1;
				let initialFilterInput2 = +tone.initialNoteFilterInputL2;
				const applyFilters = Synth.applyFilters;
				
				const stopIndex = bufferIndex + runLength;
				for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {
					const targetSampleTime# = delayIndex# - delayLength#;
					const lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.
					const upperIndex# = lowerIndex# + 1;
					const fractionalDelay# = upperIndex# - targetSampleTime#;
					const fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay
					const prevInput# = delayLine#[lowerIndex# & delayBufferMask#];
					const input# = delayLine#[upperIndex# & delayBufferMask#];
					fractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;
					
					allPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;
					allPassPrevInput# = fractionalDelaySample#;
					
					const sustainFilterPrevOutput1# = sustainFilterSample#;
					sustainFilterSample# = sustainFilterB0# * allPassSample# + sustainFilterB1# * sustainFilterPrevInput1# + sustainFilterB2# * sustainFilterPrevInput2# - sustainFilterA1# * sustainFilterSample# - sustainFilterA2# * sustainFilterPrevOutput2#;
					sustainFilterPrevOutput2# = sustainFilterPrevOutput1#;
					sustainFilterPrevInput2# = sustainFilterPrevInput1#;
					sustainFilterPrevInput1# = allPassSample#;
					
					delayLine#[delayIndex# & delayBufferMask#] += sustainFilterSample#;
					delayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;
					delayIndex#++;
					
					const inputSample = (`;let b=[];for(let l=0;l<o;l++)b.push("fractionalDelaySample"+l+(l!=0?" * unisonSign":""));u+=b.join(" + "),u+=`) * expression;
					const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);
					initialFilterInput2 = initialFilterInput1;
					initialFilterInput1 = inputSample;
                    data[sampleIndex] += sample;
					
					expression += expressionDelta;
					delayLength# += delayLengthDelta#;
					allPassG# += allPassGDelta#;
					sustainFilterA1# += sustainFilterA1Delta#;
					sustainFilterA2# += sustainFilterA2Delta#;
					sustainFilterB0# += sustainFilterB0Delta#;
					sustainFilterB1# += sustainFilterB1Delta#;
					sustainFilterB2# += sustainFilterB2Delta#;
				}
				
				// Avoid persistent denormal or NaN values in the delay buffers and filter history.
				const epsilon = (1.0e-24);
				if (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;
				if (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;
				if (!Number.isFinite(sustainFilterSample#) || Math.abs(sustainFilterSample#) < epsilon) sustainFilterSample# = 0.0;
				if (!Number.isFinite(sustainFilterPrevOutput2#) || Math.abs(sustainFilterPrevOutput2#) < epsilon) sustainFilterPrevOutput2# = 0.0;
				if (!Number.isFinite(sustainFilterPrevInput1#) || Math.abs(sustainFilterPrevInput1#) < epsilon) sustainFilterPrevInput1# = 0.0;
				if (!Number.isFinite(sustainFilterPrevInput2#) || Math.abs(sustainFilterPrevInput2#) < epsilon) sustainFilterPrevInput2# = 0.0;
				if (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;
				pickedString#.allPassSample = allPassSample#;
				pickedString#.allPassPrevInput = allPassPrevInput#;
				pickedString#.sustainFilterSample = sustainFilterSample#;
				pickedString#.sustainFilterPrevOutput2 = sustainFilterPrevOutput2#;
				pickedString#.sustainFilterPrevInput1 = sustainFilterPrevInput1#;
				pickedString#.sustainFilterPrevInput2 = sustainFilterPrevInput2#;
				pickedString#.fractionalDelaySample = fractionalDelaySample#;
				pickedString#.delayIndex = delayIndex#;
				pickedString#.prevDelayLength = delayLength#;
				pickedString#.allPassG = allPassG#;
				pickedString#.sustainFilterA1 = sustainFilterA1#;
				pickedString#.sustainFilterA2 = sustainFilterA2#;
				pickedString#.sustainFilterB0 = sustainFilterB0#;
				pickedString#.sustainFilterB1 = sustainFilterB1#;
				pickedString#.sustainFilterB2 = sustainFilterB2#;
				
				tone.expression = expression;
				
				synth.sanitizeFilters(filters);
				tone.initialNoteFilterInputL1 = initialFilterInput1;
				tone.initialNoteFilterInputL2 = initialFilterInput2;
			}`,u=u.replace(/^.*\#.*$/mg,l=>{let g=[];for(let m=0;m<o;m++)g.push(l.replace(/\#/g,String(m)));return g.join(`
`)}),c=new Function("Config","Synth",u)(t,i),i.pickedStringFunctionCache[o]=c}c(e,a,n,r,s)}static effectsSynth(e,a,n,r,s,o){let c=o.effectsIncludeType(3),u=o.effectsIncludeType(4),b=o.effectsIncludeType(5),l=o.effectsIncludeType(9),g=o.effectsIncludeType(2),m=o.effectsIncludeType(10),y=o.effectsIncludeType(1),h=o.effectsIncludeType(6),f=o.effectsIncludeType(0),p=o.effectsIncludeType(8),S=o.effectsIncludeType(7),x=o.chipWaveInStereo&&(o.synthesizer==i.loopableChipSynth||o.synthesizer==i.chipSynth),w="";for(let P of o.effects)P!=null&&(w=w+P.type.toString(),P.type==2&&(w=w+P.panningMode.toString()));let v=i.effectsFunctionCache[w];if(v==null){let P="return (synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) => {",B=y||f||h||p||m;P+=`
            let effectState = instrumentState.effects[0]

            const tempInstrumentSampleBufferL = synth.tempInstrumentSampleBufferL;
            const tempInstrumentSampleBufferR = synth.tempInstrumentSampleBufferR;

            let mixVolume = +instrumentState.mixVolume;
            const mixVolumeDelta = +instrumentState.mixVolumeDelta;
            `,B&&(P+=`

                let delayInputMult = +instrumentState.delayInputMult;
                const delayInputMultDelta = +instrumentState.delayInputMultDelta;`),b&&(P+=`

                let filtersL = [];
                let filtersR = [];

                let filterCount = [];
                let initialFilterInputL1 = [];
                let initialFilterInputR1 = [];
                let initialFilterInputL2 = [];
                let initialFilterInputR2 = [];
                let inputSampleL = [];
                let inputSampleR = [];
                const applyFilters = Synth.applyFilters;`,P+=`

                let eqFilterVolume = [];
                let eqFilterVolumeDelta = [];
                `),c&&(P+=`

                const distortionBaseVolume = +Config.distortionBaseVolume;
                let distortion = [];
                let distortionDelta = [];
                let distortionDrive = [];
                let distortionDriveDelta = [];
                const distortionFractionalResolution = 4.0;
                const distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;
                const distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;
                const distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;
                const distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;
                const distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay
                const distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay
                const distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay
                const distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;
                const distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;
                const distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;
                const distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;
                const distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;
                const distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;

                let distortionFractionalInputL1 = [];
                let distortionFractionalInputL2 = [];
                let distortionFractionalInputL3 = [];
                let distortionFractionalInputR1 = [];
                let distortionFractionalInputR2 = [];
                let distortionFractionalInputR3 = [];
                let distortionPrevInputL = [];
                let distortionPrevInputR = [];
                let distortionNextOutputL = [];
                let distortionNextOutputR = [];

                let distortionReverse = [];
                let distortionNextInputL = [];
                let distortionNextInputR = [];
                let distortionOutputL1 = [];
                let distortionOutputL2 = [];
                let distortionOutputL3 = [];
                let distortionOutputR1 = [];
                let distortionOutputR2 = [];
                let distortionOutputR3 = [];`),u&&(P+=`

                let bitcrusherPrevInputL = [];
                let bitcrusherPrevInputR = [];
                let bitcrusherCurrentOutputL = [];
                let bitcrusherCurrentOutputR = [];
                let bitcrusherPhase = [];
                let bitcrusherPhaseDelta = [];
                let bitcrusherPhaseDeltaScale = [];
                let bitcrusherScale = [];
                let bitcrusherScaleScale = [];
                let bitcrusherFoldLevel = [];
                let bitcrusherFoldLevelScale = [];

                let lerpedInputL = [];
                let lerpedInputR = [];

                let bitcrusherWrapLevel = [];
                let wrappedSampleL = [];
                let wrappedSampleR = [];
                let foldedSampleL = [];
                let foldedSampleR = [];
                let scaledSampleL = [];
                let scaledSampleR = [];
                let oldValueL = [];
                let oldValueR = [];
                let newValueL = [];
                let newValueR = [];`),m&&(P+=`

                const flangerMask = synth.flangerDelayBufferMask >>> 0;
                let flangerDelayLineL = [];
                let flangerDelayLineR = [];
                let flangerDelayPos = [];

                let flanger = [];
                let flangerDelta = [];
                let flangerSpeed = [];
                let flangerSpeedDelta = [];
                let flangerDepth = [];
                let flangerDepthDelta = [];
                let flangerFeedback = [];
                let flangerFeedbackDelta = [];

                let flangerPhase = [];
                let flangerRange = [];

                let flangerTapIndexL = [];
                let flangerTapIndexR = [];
                let flangerTapEndL = [];
                let flangerTapEndR = [];
                let flangerTapDeltaL = [];
                let flangerTapDeltaR = [];

                let flangerTapRatioL = []; // you don't know how happy i am that this variable exists
                let flangerTapRatioR = [];
                let flangerTapLA = [];
                let flangerTapLB = [];
                let flangerTapRA = [];
                let flangerTapRB = [];
                let flangerTapL = [];
                let flangerTapR = [];`),y&&(P+=`

                const chorusMask = synth.chorusDelayBufferMask >>> 0;
                let chorusDelayLineL = [];
                let chorusDelayLineR = [];
                let chorusDelayPos = [];

                let chorusVoiceMult = [];
                let chorusVoiceMultDelta = [];
                let chorusCombinedMult = [];
                let chorusCombinedMultDelta = [];

                const chorusDuration = +Config.chorusPeriodSeconds;
                const chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);
                const chorusRange = synth.samplesPerSecond * Config.chorusDelayRange;
                const chorusOffset0 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[0][0] * chorusRange;
                const chorusOffset1 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[0][1] * chorusRange;
                const chorusOffset2 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[0][2] * chorusRange;
                const chorusOffset3 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[1][0] * chorusRange;
                const chorusOffset4 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[1][1] * chorusRange;
                const chorusOffset5 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[1][2] * chorusRange;

                let chorusPhase = [];
                let chorusTap0Index = [];
                let chorusTap1Index = [];
                let chorusTap2Index = [];
                let chorusTap3Index = [];
                let chorusTap4Index = [];
                let chorusTap5Index = [];
                let chorusTap0End = [];
                let chorusTap1End = [];
                let chorusTap2End = [];
                let chorusTap3End = [];
                let chorusTap4End = [];
                let chorusTap5End = [];
                let chorusTap0Delta = [];
                let chorusTap1Delta = [];
                let chorusTap2Delta = [];
                let chorusTap3Delta = [];
                let chorusTap4Delta = [];
                let chorusTap5Delta = [];

                let chorusTap0Ratio = [];
                let chorusTap1Ratio = [];
                let chorusTap2Ratio = [];
                let chorusTap3Ratio = [];
                let chorusTap4Ratio = [];
                let chorusTap5Ratio = [];
                let chorusTap0A = [];
                let chorusTap0B = [];
                let chorusTap1A = [];
                let chorusTap1B = [];
                let chorusTap2A = [];
                let chorusTap2B = [];
                let chorusTap3A = [];
                let chorusTap3B = [];
                let chorusTap4A = [];
                let chorusTap4B = [];
                let chorusTap5A = [];
                let chorusTap5B = [];
                let chorusTap0 = [];
                let chorusTap1 = [];
                let chorusTap2 = [];
                let chorusTap3 = [];
                let chorusTap4 = [];
                let chorusTap5 = [];`),h&&(P+=`
                let echoMult = [];
                let echoMultDelta = [];

                let echoDelayLineL = [];
                let echoDelayLineR = [];
                let echoMask = [];

                let echoDelayPosL = [];
                let echoDelayPosR = [];
                let echoDelayOffsetStart = [];
                let echoDelayOffsetEnd   = [];
                let echoDelayOffsetRatio = [];
                let echoDelayOffsetRatioDelta = [];
                let echoPingPong = [];

                let echoShelfA1 = [];
                let echoShelfB0 = [];
                let echoShelfB1 = [];
                let echoShelfSampleL = [];
                let echoShelfSampleR = [];
                let echoShelfPrevInputL = [];
                let echoShelfPrevInputR = [];

                let echoNextInputL = [];
                let echoNextInputR = [];
                let echoTapStartIndexL = [];
                let echoTapStartIndexR = [];
                let echoTapEndIndexL   = [];
                let echoTapEndIndexR   = [];
                let echoTapStartL = [];
                let echoTapEndL   = [];
                let echoTapStartR = [];
                let echoTapEndR   = [];
                let echoTapL = [];
                let echoTapR = [];`),f&&(P+=`

                const reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.
                let reverbDelayLine = [];
                let reverbDelayPos = [];

                let reverb = [];
                let reverbDelta = [];

                let reverbShelfA1 = [];
                let reverbShelfB0 = [];
                let reverbShelfB1 = [];
                let reverbShelfSample0 = [];
                let reverbShelfSample1 = [];
                let reverbShelfSample2 = [];
                let reverbShelfSample3 = [];
                let reverbShelfPrevInput0 = [];
                let reverbShelfPrevInput1 = [];
                let reverbShelfPrevInput2 = [];
                let reverbShelfPrevInput3 = [];

                let reverbDelayPos1 = [];
                let reverbDelayPos2 = [];
                let reverbDelayPos3 = [];
                let reverbSample0 = [];
                let reverbSample1 = [];
                let reverbSample2 = [];
                let reverbSample3 = [];
                let reverbTemp0 = [];
                let reverbTemp1 = [];
                let reverbTemp2 = [];
                let reverbTemp3 = [];
                let reverbShelfInput0 = [];
                let reverbShelfInput1 = [];
                let reverbShelfInput2 = [];
                let reverbShelfInput3 = [];`),S&&(P+=`

                let ringModMix = [];
                let ringModMixDelta = [];
                let ringModPhase = [];
                let ringModPhaseDelta = [];
                let ringModPhaseDeltaScale = [];
                let ringModWaveformIndex = [];
                let ringModMixFade = [];
                let ringModMixFadeDelta = [];

                let ringModPulseWidth = [];

                let waveform = [];
                let waveformLength = [];
                let ringModOutputL = [];
                let ringModOutputR = [];
                let ringModMixF = [];
                `),g&&(P+=`

                const panningMask = synth.panningDelayBufferMask >>> 0;
                let panningDelayLineL = [];
                let panningDelayLineR = [];
                let panningDelayPos = [];
                let panningVolumeL      = [];
                let panningVolumeR      = [];
                let panningVolumeDeltaL = [];
                let panningVolumeDeltaR = [];
                let panningOffsetL      = [];
                let panningOffsetR      = [];
                let panningOffsetDeltaL = [];
                let panningOffsetDeltaR = [];
                let panningRatioL  = [];
                let panningRatioR  = [];
                let panningTapLA   = [];
                let panningTapLB   = [];
                let panningTapRA   = [];
                let panningTapRB   = [];
                let panningTapL    = [];
                let panningTapR    = [];`),l&&(P+=`

                let gain = [];
                let gainDelta = [];`),p&&(P+=`

                let granularWet = [];
                let granularMixDelta = [];
                let granularDry = [];
                let granularDelayLineL = [];
                let granularDelayLineR = [];
                let granularGrains = [];
                let granularGrainCount = [];
                let granularDelayLineLength = [];
                let granularDelayLineMask = [];
                let granularDelayLineIndex = [];
                let usesRandomGrainLocation = [];
                let computeGrains = [];
                let granularOutputL = [];
                let granularOutputR = [];
                `);for(let L=0;L<o.effects.length;L++){let E=o.effects[L];P+=`

                effectState = instrumentState.effects[`+L+`];
                effectIndex = `+L+`;
                `,p&&E.type==8?P+=`

                    granularWet[effectIndex] = effectState.granularMix;
                    granularMixDelta[effectIndex] = effectState.granularMixDelta;
                    granularDry[effectIndex] = 1.0 - granularWet[effectIndex];
                    granularDelayLineL[effectIndex] = effectState.granularDelayLineL;
                    granularDelayLineR[effectIndex] = effectState.granularDelayLineR;
                    granularGrains[effectIndex] = effectState.granularGrains;
                    granularGrainCount[effectIndex] = effectState.granularGrainsLength;
                    granularDelayLineLength[effectIndex] = granularDelayLineL.length;
                    granularDelayLineMask[effectIndex] = granularDelayLineLength[effectIndex] - 1;
                    granularDelayLineIndex[effectIndex] = effectState.granularDelayLineIndex;
                    usesRandomGrainLocation[effectIndex] = effectState.usesRandomGrainLocation;
                    computeGrains[effectIndex] = effectState.computeGrains;
                    effectState.granularDelayLineDirty = true;
                    `:c&&E.type==3?P+=`

                    distortion[effectIndex] = effectState.distortion;
                    distortionDelta[effectIndex] = effectState.distortionDelta;
                    distortionDrive[effectIndex] = effectState.distortionDrive;
                    distortionDriveDelta[effectIndex] = effectState.distortionDriveDelta;
                    distortionReverse[effectIndex] = 1.0 - distortion[effectIndex];

                    distortionFractionalInputL1[effectIndex] = +effectState.distortionFractionalInputL1;
                    distortionFractionalInputL2[effectIndex] = +effectState.distortionFractionalInputL2;
                    distortionFractionalInputL3[effectIndex] = +effectState.distortionFractionalInputL3;
                    distortionFractionalInputR1[effectIndex] = +effectState.distortionFractionalInputR1;
                    distortionFractionalInputR2[effectIndex] = +effectState.distortionFractionalInputR2;
                    distortionFractionalInputR3[effectIndex] = +effectState.distortionFractionalInputR3;
                    distortionPrevInputL[effectIndex] = +effectState.distortionPrevInputL;
                    distortionPrevInputR[effectIndex] = +effectState.distortionPrevInputR;
                    distortionNextOutputL[effectIndex] = +effectState.distortionNextOutputL;
                    distortionNextOutputR[effectIndex] = +effectState.distortionNextOutputR;`:u&&E.type==4?P+=`

                    bitcrusherPrevInputL[effectIndex] = +effectState.bitcrusherPrevInputL;
                    bitcrusherPrevInputR[effectIndex] = +effectState.bitcrusherPrevInputR;
                    bitcrusherCurrentOutputL[effectIndex] = +effectState.bitcrusherCurrentOutputL;
                    bitcrusherCurrentOutputR[effectIndex] = +effectState.bitcrusherCurrentOutputR;
                    bitcrusherPhase[effectIndex] = +effectState.bitcrusherPhase;
                    bitcrusherPhaseDelta[effectIndex] = +effectState.bitcrusherPhaseDelta;
                    bitcrusherPhaseDeltaScale[effectIndex] = +effectState.bitcrusherPhaseDeltaScale;
                    bitcrusherScale[effectIndex] = +effectState.bitcrusherScale;
                    bitcrusherScaleScale[effectIndex] = +effectState.bitcrusherScaleScale;
                    bitcrusherFoldLevel[effectIndex] = +effectState.bitcrusherFoldLevel;
                    bitcrusherFoldLevelScale[effectIndex] = +effectState.bitcrusherFoldLevelScale;`:S&&E.type==7?P+=`

                    ringModMix[effectIndex] = +effectState.ringModMix;
                    ringModMixDelta[effectIndex] = +effectState.ringModMixDelta;
                    ringModPhase[effectIndex] = +effectState.ringModPhase;
                    ringModPhaseDelta[effectIndex] = +effectState.ringModPhaseDelta;
                    ringModPhaseDeltaScale[effectIndex] = +effectState.ringModPhaseDeltaScale;
                    ringModWaveformIndex[effectIndex] = +effectState.ringModWaveformIndex;
                    ringModMixFade[effectIndex] = +effectState.ringModMixFade;
                    ringModMixFadeDelta[effectIndex] = +effectState.ringModMixFadeDelta;

                    ringModPulseWidth[effectIndex] = +effectState.ringModPulseWidth;

                    waveform[effectIndex] = Config.operatorWaves[ringModWaveformIndex[effectIndex]].samples;
                    if (ringModWaveformIndex[effectIndex] == 2) {
                        waveform[effectIndex] = Synth.getOperatorWave(ringModWaveformIndex[effectIndex], ringModPulseWidth[effectIndex]).samples;
                    }
                    waveformLength[effectIndex] = waveform[effectIndex].length - 1;
                    `:b&&E.type==5?(P+=`

                    filtersL[effectIndex] = effectState.eqFiltersL;
                    filtersR[effectIndex] = effectState.eqFiltersR;
                    filterCount[effectIndex] = effectState.eqFilterCount|0;
                    initialFilterInputL1[effectIndex] = +effectState.initialEqFilterInputL1;
                    initialFilterInputR1[effectIndex] = +effectState.initialEqFilterInputR1;
                    initialFilterInputL2[effectIndex] = +effectState.initialEqFilterInputL2;
                    initialFilterInputR2[effectIndex] = +effectState.initialEqFilterInputR2;`,P+=`

                    eqFilterVolume[effectIndex] = +effectState.eqFilterVolume;
                    eqFilterVolumeDelta[effectIndex] = +effectState.eqFilterVolumeDelta;`):g&&E.type==2?P+=`

                    panningDelayLineL[effectIndex] = effectState.panningDelayLineL;
                    panningDelayLineR[effectIndex] = effectState.panningDelayLineR;
                    panningDelayPos[effectIndex] = effectState.panningDelayPos & panningMask;
                    panningVolumeL[effectIndex]      = +effectState.panningVolumeL;
                    panningVolumeR[effectIndex]      = +effectState.panningVolumeR;
                    panningVolumeDeltaL[effectIndex] = +effectState.panningVolumeDeltaL;
                    panningVolumeDeltaR[effectIndex] = +effectState.panningVolumeDeltaR;
                    panningOffsetL[effectIndex]      = +effectState.panningOffsetL;
                    panningOffsetR[effectIndex]      = +effectState.panningOffsetR;
                    panningOffsetDeltaL[effectIndex] = 1.0 - effectState.panningOffsetDeltaL;
                    panningOffsetDeltaR[effectIndex] = 1.0 - effectState.panningOffsetDeltaR;`:m&&E.type==10?P+=`

                    flangerDelayLineL[effectIndex] = effectState.flangerDelayLineL;
                    flangerDelayLineR[effectIndex] = effectState.flangerDelayLineR;
                    flangerDelayPos[effectIndex] = effectState.flangerDelayPos & flangerMask;

                    flanger[effectIndex] = effectState.flanger;
                    flangerDelta[effectIndex] = effectState.flangerDelta;
                    flangerSpeed[effectIndex] = effectState.flangerSpeed;
                    flangerSpeedDelta[effectIndex] = effectState.flangerSpeedDelta;
                    flangerDepth[effectIndex] = effectState.flangerDepth;
                    flangerDepthDelta[effectIndex] = effectState.flangerDepthDelta;
                    flangerFeedback[effectIndex] = effectState.flangerFeedback;
                    flangerFeedbackDelta[effectIndex] = effectState.flangerFeedbackDelta;

                    flangerPhase[effectIndex] = effectState.flangerPhase % (Math.PI * 2.0);
                    flangerRange[effectIndex] = flangerDepth[effectIndex];

                    flangerTapIndexL[effectIndex] = flangerDelayPos[effectIndex] - flangerRange[effectIndex] - flangerRange[effectIndex] * Math.cos(flangerPhase[effectIndex]);
                    flangerTapIndexR[effectIndex] = flangerDelayPos[effectIndex] - flangerRange[effectIndex] - flangerRange[effectIndex] * Math.sin(flangerPhase[effectIndex]);
                    flangerPhase[effectIndex] += flangerSpeed[effectIndex] * Config.flangerPeriodMult * runLength;
                    flangerTapEndL[effectIndex] = flangerDelayPos[effectIndex] - flangerRange[effectIndex] - flangerRange[effectIndex] * Math.cos(flangerPhase[effectIndex]) + runLength;
                    flangerTapEndR[effectIndex] = flangerDelayPos[effectIndex] - flangerRange[effectIndex] - flangerRange[effectIndex] * Math.sin(flangerPhase[effectIndex]) + runLength;
                    flangerTapDeltaL[effectIndex] = (flangerTapEndL[effectIndex] - flangerTapIndexL[effectIndex]) / runLength;
                    flangerTapDeltaR[effectIndex] = (flangerTapEndR[effectIndex] - flangerTapIndexR[effectIndex]) / runLength;`:y&&E.type==1?P+=`

                    chorusDelayLineL[effectIndex] = effectState.chorusDelayLineL;
                    chorusDelayLineR[effectIndex] = effectState.chorusDelayLineR;
                    effectState.chorusDelayLineDirty = true;
                    chorusDelayPos[effectIndex] = effectState.chorusDelayPos & chorusMask;

                    chorusVoiceMult[effectIndex] = +effectState.chorusVoiceMult;
                    chorusVoiceMultDelta[effectIndex] = +effectState.chorusVoiceMultDelta;
                    chorusCombinedMult[effectIndex] = +effectState.chorusCombinedMult;
                    chorusCombinedMultDelta[effectIndex] = +effectState.chorusCombinedMultDelta;

                    chorusPhase[effectIndex] = effectState.chorusPhase % (Math.PI * 2.0);
                    chorusTap0Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset0 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][0]);
                    chorusTap1Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset1 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][1]);
                    chorusTap2Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset2 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][2]);
                    chorusTap3Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset3 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][0]);
                    chorusTap4Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset4 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][1]);
                    chorusTap5Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset5 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][2]);
                    chorusPhase[effectIndex] += chorusAngle * runLength;
                    chorusTap0End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset0 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][0]) + runLength;
                    chorusTap1End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset1 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][1]) + runLength;
                    chorusTap2End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset2 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][2]) + runLength;
                    chorusTap3End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset3 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][0]) + runLength;
                    chorusTap4End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset4 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][1]) + runLength;
                    chorusTap5End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset5 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][2]) + runLength;
                    chorusTap0Delta[effectIndex] = (chorusTap0End[effectIndex] - chorusTap0Index[effectIndex]) / runLength;
                    chorusTap1Delta[effectIndex] = (chorusTap1End[effectIndex] - chorusTap1Index[effectIndex]) / runLength;
                    chorusTap2Delta[effectIndex] = (chorusTap2End[effectIndex] - chorusTap2Index[effectIndex]) / runLength;
                    chorusTap3Delta[effectIndex] = (chorusTap3End[effectIndex] - chorusTap3Index[effectIndex]) / runLength;
                    chorusTap4Delta[effectIndex] = (chorusTap4End[effectIndex] - chorusTap4Index[effectIndex]) / runLength;
                    chorusTap5Delta[effectIndex] = (chorusTap5End[effectIndex] - chorusTap5Index[effectIndex]) / runLength;`:h&&E.type==6?P+=`
                    echoMult[effectIndex] = +effectState.echoMult;
                    echoMultDelta[effectIndex] = +effectState.echoMultDelta;

                    echoDelayLineL[effectIndex] = effectState.echoDelayLineL;
                    echoDelayLineR[effectIndex] = effectState.echoDelayLineR;
                    echoMask[effectIndex] = (echoDelayLineL[effectIndex].length - 1) >>> 0;
                    effectState.echoDelayLineDirty = true;

                    echoDelayPosL[effectIndex] = effectState.echoDelayPosL & echoMask[effectIndex];
                    echoDelayPosR[effectIndex] = effectState.echoDelayPosR & echoMask[effectIndex];
                    echoDelayOffsetStart[effectIndex] = (echoDelayLineL[effectIndex].length - effectState.echoDelayOffsetStart) & echoMask[effectIndex];
                    echoDelayOffsetEnd[effectIndex]   = (echoDelayLineL[effectIndex].length - effectState.echoDelayOffsetEnd) & echoMask[effectIndex];
                    echoDelayOffsetRatio[effectIndex] = +effectState.echoDelayOffsetRatio;
                    echoDelayOffsetRatioDelta[effectIndex] = +effectState.echoDelayOffsetRatioDelta;
                    echoPingPong[effectIndex] = effectState.echoPingPong;

                    echoShelfA1[effectIndex] = +effectState.echoShelfA1;
                    echoShelfB0[effectIndex] = +effectState.echoShelfB0;
                    echoShelfB1[effectIndex] = +effectState.echoShelfB1;
                    echoShelfSampleL[effectIndex] = +effectState.echoShelfSampleL;
                    echoShelfSampleR[effectIndex] = +effectState.echoShelfSampleR;
                    echoShelfPrevInputL[effectIndex] = +effectState.echoShelfPrevInputL;
                    echoShelfPrevInputR[effectIndex] = +effectState.echoShelfPrevInputR;`:f&&E.type==0?P+=`

                    reverbDelayLine[effectIndex] = effectState.reverbDelayLine;
                    effectState.reverbDelayLineDirty = true;
                    reverbDelayPos[effectIndex] = effectState.reverbDelayPos & reverbMask;

                    reverb[effectIndex] = +effectState.reverbMult;
                    reverbDelta[effectIndex] = +effectState.reverbMultDelta;

                    reverbShelfA1[effectIndex] = +effectState.reverbShelfA1;
                    reverbShelfB0[effectIndex] = +effectState.reverbShelfB0;
                    reverbShelfB1[effectIndex] = +effectState.reverbShelfB1;
                    reverbShelfSample0[effectIndex] = +effectState.reverbShelfSample0;
                    reverbShelfSample1[effectIndex] = +effectState.reverbShelfSample1;
                    reverbShelfSample2[effectIndex] = +effectState.reverbShelfSample2;
                    reverbShelfSample3[effectIndex] = +effectState.reverbShelfSample3;
                    reverbShelfPrevInput0[effectIndex] = +effectState.reverbShelfPrevInput0;
                    reverbShelfPrevInput1[effectIndex] = +effectState.reverbShelfPrevInput1;
                    reverbShelfPrevInput2[effectIndex] = +effectState.reverbShelfPrevInput2;
                    reverbShelfPrevInput3[effectIndex] = +effectState.reverbShelfPrevInput3;`:l&&E.type==9&&(P+=`

                    gain[effectIndex] = +effectState.gain;
                    gainDelta[effectIndex] = +effectState.gainDelta;`)}x?P+=`

                const stopIndex = bufferIndex + runLength;
                for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {
                    let sample = 0.0;
                    let sampleL = tempInstrumentSampleBufferL[sampleIndex];
                    let sampleR = tempInstrumentSampleBufferR[sampleIndex];
                    tempInstrumentSampleBufferL[sampleIndex] = 0.0;
                    tempInstrumentSampleBufferR[sampleIndex] = 0.0;`:P+=`

                const stopIndex = bufferIndex + runLength;
                for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {
                    let sampleL = tempInstrumentSampleBufferL[sampleIndex];
                    let sampleR = tempInstrumentSampleBufferL[sampleIndex];
                    tempInstrumentSampleBufferL[sampleIndex] = 0.0;
                    tempInstrumentSampleBufferR[sampleIndex] = 0.0;`;for(let L=0;L<o.effects.length;L++){let E=o.effects[L];P+=`

                effectIndex = `+L+`;
                `,u&&E.type==4?P+=`

                    bitcrusherPhase[effectIndex] += bitcrusherPhaseDelta[effectIndex];
                    if (bitcrusherPhase[effectIndex] < 1.0) {
                        bitcrusherPrevInputL[effectIndex] = sampleL;
                        bitcrusherPrevInputR[effectIndex] = sampleR;
                        sampleL = bitcrusherCurrentOutputL[effectIndex];
                        sampleR = bitcrusherCurrentOutputR[effectIndex];
                    } else {
                        bitcrusherPhase[effectIndex] = bitcrusherPhase[effectIndex] % 1.0;

                        lerpedInputL[effectIndex] = sampleL + (bitcrusherPrevInputL[effectIndex] - sampleL) * (bitcrusherPhase[effectIndex] / bitcrusherPhaseDelta[effectIndex]);
                        lerpedInputR[effectIndex] = sampleR + (bitcrusherPrevInputR[effectIndex] - sampleR) * (bitcrusherPhase[effectIndex] / bitcrusherPhaseDelta[effectIndex]);
                        bitcrusherPrevInputL[effectIndex] = sampleL;
                        bitcrusherPrevInputR[effectIndex] = sampleR;

                        bitcrusherWrapLevel[effectIndex] = bitcrusherFoldLevel[effectIndex] * 4.0;
                        wrappedSampleL[effectIndex] = (((lerpedInputL[effectIndex] + bitcrusherFoldLevel[effectIndex]) % bitcrusherWrapLevel[effectIndex]) + bitcrusherWrapLevel[effectIndex]) % bitcrusherWrapLevel[effectIndex];
                        wrappedSampleR[effectIndex] = (((lerpedInputR[effectIndex] + bitcrusherFoldLevel[effectIndex]) % bitcrusherWrapLevel[effectIndex]) + bitcrusherWrapLevel[effectIndex]) % bitcrusherWrapLevel[effectIndex];
                        foldedSampleL[effectIndex] = bitcrusherFoldLevel[effectIndex] - Math.abs(bitcrusherFoldLevel[effectIndex] * 2.0 - wrappedSampleL[effectIndex]);
                        foldedSampleR[effectIndex] = bitcrusherFoldLevel[effectIndex] - Math.abs(bitcrusherFoldLevel[effectIndex] * 2.0 - wrappedSampleR[effectIndex]);
                        scaledSampleL[effectIndex] = foldedSampleL[effectIndex] / bitcrusherScale[effectIndex];
                        scaledSampleR[effectIndex] = foldedSampleR[effectIndex] / bitcrusherScale[effectIndex];
                        oldValueL[effectIndex] = bitcrusherCurrentOutputL[effectIndex];
                        oldValueR[effectIndex] = bitcrusherCurrentOutputR[effectIndex];
                        newValueL[effectIndex] = (((scaledSampleL[effectIndex] > 0 ? scaledSampleL[effectIndex] + 1 : scaledSampleL[effectIndex])|0)-.5) * bitcrusherScale[effectIndex];
                        newValueR[effectIndex] = (((scaledSampleR[effectIndex] > 0 ? scaledSampleR[effectIndex] + 1 : scaledSampleR[effectIndex])|0)-.5) * bitcrusherScale[effectIndex];

                        sampleL = oldValueL[effectIndex] + (newValueL[effectIndex] - oldValueL[effectIndex]) * (bitcrusherPhase[effectIndex] / bitcrusherPhaseDelta[effectIndex]);
                        sampleR = oldValueR[effectIndex] + (newValueR[effectIndex] - oldValueR[effectIndex]) * (bitcrusherPhase[effectIndex] / bitcrusherPhaseDelta[effectIndex]);
                        bitcrusherCurrentOutputL[effectIndex] = newValueL[effectIndex];
                        bitcrusherCurrentOutputR[effectIndex] = newValueR[effectIndex];
                    }
                    bitcrusherPhaseDelta[effectIndex] *= bitcrusherPhaseDeltaScale[effectIndex];
                    bitcrusherScale[effectIndex] *= bitcrusherScaleScale[effectIndex];
                    bitcrusherFoldLevel[effectIndex] *= bitcrusherFoldLevelScale[effectIndex];`:c&&E.type==3?P+=`

                    distortionNextInputL[effectIndex] = sampleL * distortionDrive[effectIndex];
                    distortionNextInputR[effectIndex] = sampleR * distortionDrive[effectIndex];
                    sampleL = distortionNextOutputL[effectIndex];
                    sampleR = distortionNextOutputR[effectIndex];
                    distortionNextOutputL[effectIndex] = distortionNextInputL[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionNextInputL[effectIndex]) + distortion[effectIndex]);
                    distortionNextOutputR[effectIndex] = distortionNextInputR[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionNextInputR[effectIndex]) + distortion[effectIndex]);
                    distortionFractionalInputL1[effectIndex] = distortionFractionalDelayG1 * distortionNextInputL[effectIndex] + distortionPrevInputL[effectIndex] - distortionFractionalDelayG1 * distortionFractionalInputL1[effectIndex];
                    distortionFractionalInputL2[effectIndex] = distortionFractionalDelayG2 * distortionNextInputL[effectIndex] + distortionPrevInputL[effectIndex] - distortionFractionalDelayG2 * distortionFractionalInputL2[effectIndex];
                    distortionFractionalInputL3[effectIndex] = distortionFractionalDelayG3 * distortionNextInputL[effectIndex] + distortionPrevInputL[effectIndex] - distortionFractionalDelayG3 * distortionFractionalInputL3[effectIndex];
                    distortionFractionalInputR1[effectIndex] = distortionFractionalDelayG1 * distortionNextInputR[effectIndex] + distortionPrevInputR[effectIndex] - distortionFractionalDelayG1 * distortionFractionalInputR1[effectIndex];
                    distortionFractionalInputR2[effectIndex] = distortionFractionalDelayG2 * distortionNextInputR[effectIndex] + distortionPrevInputR[effectIndex] - distortionFractionalDelayG2 * distortionFractionalInputR2[effectIndex];
                    distortionFractionalInputR3[effectIndex] = distortionFractionalDelayG3 * distortionNextInputR[effectIndex] + distortionPrevInputR[effectIndex] - distortionFractionalDelayG3 * distortionFractionalInputR3[effectIndex];
                    distortionOutputL1[effectIndex] = distortionFractionalInputL1[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputL1[effectIndex]) + distortion[effectIndex]);
                    distortionOutputL2[effectIndex] = distortionFractionalInputL2[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputL2[effectIndex]) + distortion[effectIndex]);
                    distortionOutputL3[effectIndex] = distortionFractionalInputL3[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputL3[effectIndex]) + distortion[effectIndex]);
                    distortionOutputR1[effectIndex] = distortionFractionalInputR1[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputR1[effectIndex]) + distortion[effectIndex]);
                    distortionOutputR2[effectIndex] = distortionFractionalInputR2[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputR2[effectIndex]) + distortion[effectIndex]);
                    distortionOutputR3[effectIndex] = distortionFractionalInputR3[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputR3[effectIndex]) + distortion[effectIndex]);
                    distortionNextOutputL[effectIndex] += distortionOutputL1[effectIndex] * distortionNextOutputWeight1 + distortionOutputL2[effectIndex] * distortionNextOutputWeight2 + distortionOutputL3[effectIndex] * distortionNextOutputWeight3;
                    distortionNextOutputR[effectIndex] += distortionOutputR1[effectIndex] * distortionNextOutputWeight1 + distortionOutputR2[effectIndex] * distortionNextOutputWeight2 + distortionOutputR3[effectIndex] * distortionNextOutputWeight3;
                    sampleL += distortionOutputL1[effectIndex] * distortionPrevOutputWeight1 + distortionOutputL2[effectIndex] * distortionPrevOutputWeight2 + distortionOutputL3[effectIndex] * distortionPrevOutputWeight3;
                    sampleR += distortionOutputR1[effectIndex] * distortionPrevOutputWeight1 + distortionOutputR2[effectIndex] * distortionPrevOutputWeight2 + distortionOutputR3[effectIndex] * distortionPrevOutputWeight3;
                    sampleL *= distortionOversampleCompensation;
                    sampleR *= distortionOversampleCompensation;
                    distortionPrevInputL[effectIndex] = distortionNextInputL[effectIndex];
                    distortionPrevInputR[effectIndex] = distortionNextInputR[effectIndex];
                    distortion[effectIndex] += distortionDelta[effectIndex];
                    distortionDrive[effectIndex] += distortionDriveDelta[effectIndex];`:l&&E.type==9?P+=`

                    sampleL *= gain[effectIndex];
                    sampleR *= gain[effectIndex];
                    `:g&&E.type==2?(P+=`

                    panningDelayLineL[effectIndex][panningDelayPos[effectIndex]] = sampleL;
                    panningDelayLineR[effectIndex][panningDelayPos[effectIndex]] = sampleR;
                    panningRatioL[effectIndex]  = panningOffsetL[effectIndex] % 1;
                    panningRatioR[effectIndex]  = panningOffsetR[effectIndex] % 1;
                    panningTapLA[effectIndex]   = panningDelayLineL[effectIndex][(panningOffsetL[effectIndex]) & panningMask];
                    panningTapLB[effectIndex]   = panningDelayLineL[effectIndex][(panningOffsetL[effectIndex] + 1) & panningMask];
                    panningTapRA[effectIndex]   = panningDelayLineR[effectIndex][(panningOffsetR[effectIndex]) & panningMask];
                    panningTapRB[effectIndex]   = panningDelayLineR[effectIndex][(panningOffsetR[effectIndex] + 1) & panningMask];
                    panningTapL[effectIndex]    = panningTapLA[effectIndex] + (panningTapLB[effectIndex] - panningTapLA[effectIndex]) * panningRatioL[effectIndex];
                    panningTapR[effectIndex]    = panningTapRA[effectIndex] + (panningTapRB[effectIndex] - panningTapRA[effectIndex]) * panningRatioR[effectIndex];
                    `,E.panningMode==0?P+=`

                    sampleL = panningTapL[effectIndex] * panningVolumeL[effectIndex];
                    sampleR = panningTapR[effectIndex] * panningVolumeR[effectIndex];
                    panningDelayPos[effectIndex] = (panningDelayPos[effectIndex] + 1) & panningMask;
                    panningVolumeL[effectIndex] += panningVolumeDeltaL[effectIndex];
                    panningVolumeR[effectIndex] += panningVolumeDeltaR[effectIndex];
                    panningOffsetL[effectIndex] += panningOffsetDeltaL[effectIndex];
                    panningOffsetR[effectIndex] += panningOffsetDeltaR[effectIndex];`:E.panningMode==1?P+=`

                    sampleL = panningTapL[effectIndex] * panningVolumeL[effectIndex] + Math.max(0, panningVolumeL[effectIndex] - panningVolumeR[effectIndex]) * panningTapR[effectIndex];
                    sampleR = panningTapR[effectIndex] * panningVolumeR[effectIndex] + Math.max(0, panningVolumeR[effectIndex] - panningVolumeL[effectIndex]) * panningTapL[effectIndex];
                    panningDelayPos[effectIndex] = (panningDelayPos[effectIndex] + 1) & panningMask;
                    panningVolumeL[effectIndex] += panningVolumeDeltaL[effectIndex];
                    panningVolumeR[effectIndex] += panningVolumeDeltaR[effectIndex];
                    panningOffsetL[effectIndex] += panningOffsetDeltaL[effectIndex];
                    panningOffsetR[effectIndex] += panningOffsetDeltaR[effectIndex];`:E.panningMode==2&&(P+=`

                    sampleL = (panningTapL[effectIndex] + panningTapR[effectIndex]) / 2.0
                    sampleR = sampleL
                    sampleL *= panningVolumeL[effectIndex];
                    sampleR *= panningVolumeR[effectIndex];
                    panningDelayPos[effectIndex] = (panningDelayPos[effectIndex] + 1) & panningMask;
                    panningVolumeL[effectIndex] += panningVolumeDeltaL[effectIndex];
                    panningVolumeR[effectIndex] += panningVolumeDeltaR[effectIndex];
                    panningOffsetL[effectIndex] += panningOffsetDeltaL[effectIndex];
                    panningOffsetR[effectIndex] += panningOffsetDeltaR[effectIndex];`)):m&&E.type==10?P+=`

                    flangerTapRatioL[effectIndex] = flangerTapIndexL[effectIndex] % 1;
                    flangerTapRatioR[effectIndex] = flangerTapIndexR[effectIndex] % 1;
                    flangerTapLA[effectIndex] = flangerDelayLineL[effectIndex][(flangerTapIndexL[effectIndex]) & flangerMask];
                    flangerTapLB[effectIndex] = flangerDelayLineL[effectIndex][(flangerTapIndexL[effectIndex] + 1) & flangerMask];
                    flangerTapRA[effectIndex] = flangerDelayLineR[effectIndex][(flangerTapIndexR[effectIndex]) & flangerMask];
                    flangerTapRB[effectIndex] = flangerDelayLineR[effectIndex][(flangerTapIndexR[effectIndex] + 1) & flangerMask];
                    flangerTapL[effectIndex] = flangerTapLA[effectIndex] + (flangerTapLB[effectIndex] - flangerTapLA[effectIndex]) * flangerTapRatioL[effectIndex];
                    flangerTapR[effectIndex] = flangerTapRA[effectIndex] + (flangerTapRB[effectIndex] - flangerTapRA[effectIndex]) * flangerTapRatioR[effectIndex];

                    flangerDelayLineL[effectIndex][flangerDelayPos[effectIndex]] = sampleL * delayInputMult;
                    flangerDelayLineR[effectIndex][flangerDelayPos[effectIndex]] = sampleR * delayInputMult;
                    sampleL = (sampleL + flanger[effectIndex] * flangerTapL[effectIndex]) * (1 - flanger[effectIndex] * Config.flangerVolumeMult);
                    sampleR = (sampleR + flanger[effectIndex] * flangerTapR[effectIndex]) * (1 - flanger[effectIndex] * Config.flangerVolumeMult);
                    flangerDelayLineL[effectIndex][flangerDelayPos[effectIndex]] = flangerDelayLineL[effectIndex][flangerDelayPos[effectIndex]] * (1 - flangerFeedback[effectIndex]) - sampleL * flangerFeedback[effectIndex];
                    flangerDelayLineR[effectIndex][flangerDelayPos[effectIndex]] = flangerDelayLineR[effectIndex][flangerDelayPos[effectIndex]] * (1 - flangerFeedback[effectIndex]) - sampleR * flangerFeedback[effectIndex];
                    flangerDelayPos[effectIndex] = (flangerDelayPos[effectIndex] + 1) & flangerMask;
                    flangerTapIndexL[effectIndex] += flangerTapDeltaL[effectIndex];
                    flangerTapIndexR[effectIndex] += flangerTapDeltaR[effectIndex];

                    flanger[effectIndex] += flangerDelta[effectIndex];
                    flangerSpeed[effectIndex] += flangerSpeedDelta[effectIndex];
                    flangerDepth[effectIndex] += flangerDepthDelta[effectIndex];
                    flangerFeedback[effectIndex] += flangerFeedbackDelta[effectIndex];`:y&&E.type==1?P+=`

                    chorusTap0Ratio[effectIndex] = chorusTap0Index[effectIndex] % 1;
                    chorusTap1Ratio[effectIndex] = chorusTap1Index[effectIndex] % 1;
                    chorusTap2Ratio[effectIndex] = chorusTap2Index[effectIndex] % 1;
                    chorusTap3Ratio[effectIndex] = chorusTap3Index[effectIndex] % 1;
                    chorusTap4Ratio[effectIndex] = chorusTap4Index[effectIndex] % 1;
                    chorusTap5Ratio[effectIndex] = chorusTap5Index[effectIndex] % 1;
                    chorusTap0A[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap0Index[effectIndex]) & chorusMask];
                    chorusTap0B[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap0Index[effectIndex] + 1) & chorusMask];
                    chorusTap1A[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap1Index[effectIndex]) & chorusMask];
                    chorusTap1B[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap1Index[effectIndex] + 1) & chorusMask];
                    chorusTap2A[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap2Index[effectIndex]) & chorusMask];
                    chorusTap2B[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap2Index[effectIndex] + 1) & chorusMask];
                    chorusTap3A[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap3Index[effectIndex]) & chorusMask];
                    chorusTap3B[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap3Index[effectIndex] + 1) & chorusMask];
                    chorusTap4A[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap4Index[effectIndex]) & chorusMask];
                    chorusTap4B[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap4Index[effectIndex] + 1) & chorusMask];
                    chorusTap5A[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap5Index[effectIndex]) & chorusMask];
                    chorusTap5B[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap5Index[effectIndex] + 1) & chorusMask];
                    chorusTap0[effectIndex] = chorusTap0A[effectIndex] + (chorusTap0B[effectIndex] - chorusTap0A[effectIndex]) * chorusTap0Ratio[effectIndex];
                    chorusTap1[effectIndex] = chorusTap1A[effectIndex] + (chorusTap1B[effectIndex] - chorusTap1A[effectIndex]) * chorusTap1Ratio[effectIndex];
                    chorusTap2[effectIndex] = chorusTap2A[effectIndex] + (chorusTap2B[effectIndex] - chorusTap2A[effectIndex]) * chorusTap2Ratio[effectIndex];
                    chorusTap3[effectIndex] = chorusTap3A[effectIndex] + (chorusTap3B[effectIndex] - chorusTap3A[effectIndex]) * chorusTap3Ratio[effectIndex];
                    chorusTap4[effectIndex] = chorusTap4A[effectIndex] + (chorusTap4B[effectIndex] - chorusTap4A[effectIndex]) * chorusTap4Ratio[effectIndex];
                    chorusTap5[effectIndex] = chorusTap5A[effectIndex] + (chorusTap5B[effectIndex] - chorusTap5A[effectIndex]) * chorusTap5Ratio[effectIndex];
                    chorusDelayLineL[effectIndex][chorusDelayPos[effectIndex]] = sampleL * delayInputMult;
                    chorusDelayLineR[effectIndex][chorusDelayPos[effectIndex]] = sampleR * delayInputMult;
                    sampleL = chorusCombinedMult[effectIndex] * (sampleL + chorusVoiceMult[effectIndex] * (chorusTap1[effectIndex] - chorusTap0[effectIndex] - chorusTap2[effectIndex]));
                    sampleR = chorusCombinedMult[effectIndex] * (sampleR + chorusVoiceMult[effectIndex] * (chorusTap4[effectIndex] - chorusTap3[effectIndex] - chorusTap5[effectIndex]));
                    chorusDelayPos[effectIndex] = (chorusDelayPos[effectIndex] + 1) & chorusMask;
                    chorusTap0Index[effectIndex] += chorusTap0Delta[effectIndex];
                    chorusTap1Index[effectIndex] += chorusTap1Delta[effectIndex];
                    chorusTap2Index[effectIndex] += chorusTap2Delta[effectIndex];
                    chorusTap3Index[effectIndex] += chorusTap3Delta[effectIndex];
                    chorusTap4Index[effectIndex] += chorusTap4Delta[effectIndex];
                    chorusTap5Index[effectIndex] += chorusTap5Delta[effectIndex];
                    chorusVoiceMult[effectIndex] += chorusVoiceMultDelta[effectIndex];
                    chorusCombinedMult[effectIndex] += chorusCombinedMultDelta[effectIndex];`:h&&E.type==6?P+=`

                    echoNextInputL[effectIndex] = (sampleL + sampleR) / 2;
                    echoNextInputR[effectIndex] = (sampleL + sampleR) / 2;
                    echoTapStartIndexL[effectIndex] = (echoDelayPosL[effectIndex] + echoDelayOffsetStart[effectIndex]) & echoMask[effectIndex];
                    echoTapStartIndexR[effectIndex] = (echoDelayPosR[effectIndex] + echoDelayOffsetStart[effectIndex]) & echoMask[effectIndex];
                    echoTapEndIndexL[effectIndex]   = (echoDelayPosL[effectIndex] + echoDelayOffsetEnd[effectIndex]) & echoMask[effectIndex];
                    echoTapEndIndexR[effectIndex]   = (echoDelayPosR[effectIndex] + echoDelayOffsetEnd[effectIndex]) & echoMask[effectIndex];
                    echoTapStartL[effectIndex] = echoDelayLineL[effectIndex][echoTapStartIndexL[effectIndex]];
                    echoTapEndL[effectIndex]   = echoDelayLineL[effectIndex][echoTapEndIndexL[effectIndex]];
                    echoTapStartR[effectIndex] = echoDelayLineR[effectIndex][echoTapStartIndexR[effectIndex]];
                    echoTapEndR[effectIndex]   = echoDelayLineR[effectIndex][echoTapEndIndexR[effectIndex]];
                    echoTapL[effectIndex] = (echoTapStartL[effectIndex] + (echoTapEndL[effectIndex] - echoTapStartL[effectIndex]) * echoDelayOffsetRatio[effectIndex]) * echoMult[effectIndex];
                    echoTapR[effectIndex] = (echoTapStartR[effectIndex] + (echoTapEndR[effectIndex] - echoTapStartR[effectIndex]) * echoDelayOffsetRatio[effectIndex]) * echoMult[effectIndex];

                    echoShelfSampleL[effectIndex] = echoShelfB0[effectIndex] * echoTapL[effectIndex] + echoShelfB1[effectIndex] * echoShelfPrevInputL[effectIndex] - echoShelfA1[effectIndex] * echoShelfSampleL[effectIndex];
                    echoShelfSampleR[effectIndex] = echoShelfB0[effectIndex] * echoTapR[effectIndex] + echoShelfB1[effectIndex] * echoShelfPrevInputR[effectIndex] - echoShelfA1[effectIndex] * echoShelfSampleR[effectIndex];
                    echoShelfPrevInputL[effectIndex] = echoTapL[effectIndex];
                    echoShelfPrevInputR[effectIndex] = echoTapR[effectIndex];
                    sampleL += echoShelfSampleL[effectIndex];
                    sampleR += echoShelfSampleR[effectIndex];

                    echoDelayLineL[effectIndex][echoDelayPosL[effectIndex]] = (sampleL * (1 - Math.abs(echoPingPong[effectIndex])) + (echoNextInputL[effectIndex] * Math.max(0, echoPingPong[effectIndex]) + echoShelfSampleR[effectIndex]) * Math.abs(echoPingPong[effectIndex])) * delayInputMult;
                    echoDelayLineR[effectIndex][echoDelayPosR[effectIndex]] = (sampleR * (1 - Math.abs(echoPingPong[effectIndex])) + (echoNextInputR[effectIndex] * Math.max(0, -echoPingPong[effectIndex]) + echoShelfSampleL[effectIndex]) * Math.abs(echoPingPong[effectIndex])) * delayInputMult;
                    echoDelayPosL[effectIndex] = (echoDelayPosL[effectIndex] + 1) & echoMask[effectIndex];
                    echoDelayPosR[effectIndex] = (echoDelayPosR[effectIndex] + 1) & echoMask[effectIndex];
                    echoDelayOffsetRatio[effectIndex] += echoDelayOffsetRatioDelta[effectIndex];
                    echoMult[effectIndex] += echoMultDelta[effectIndex];
                    `:f&&E.type==0?P+=`

                    // Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.
                    // good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268
                    // Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14
                    // Buffer offsets: 3041    -> 6426   -> 10907 -> 16384
                    reverbDelayPos1[effectIndex] = (reverbDelayPos[effectIndex] +  3041) & reverbMask;
                    reverbDelayPos2[effectIndex] = (reverbDelayPos[effectIndex] +  6426) & reverbMask;
                    reverbDelayPos3[effectIndex] = (reverbDelayPos[effectIndex] + 10907) & reverbMask;
                    reverbSample0[effectIndex] = (reverbDelayLine[effectIndex][reverbDelayPos[effectIndex]]);
                    reverbSample1[effectIndex] = reverbDelayLine[effectIndex][reverbDelayPos1[effectIndex]];
                    reverbSample2[effectIndex] = reverbDelayLine[effectIndex][reverbDelayPos2[effectIndex]];
                    reverbSample3[effectIndex] = reverbDelayLine[effectIndex][reverbDelayPos3[effectIndex]];
                    reverbTemp0[effectIndex] = -(reverbSample0[effectIndex] + sampleL) + reverbSample1[effectIndex];
                    reverbTemp1[effectIndex] = -(reverbSample0[effectIndex] + sampleR) - reverbSample1[effectIndex];
                    reverbTemp2[effectIndex] = -reverbSample2[effectIndex] + reverbSample3[effectIndex];
                    reverbTemp3[effectIndex] = -reverbSample2[effectIndex] - reverbSample3[effectIndex];
                    reverbShelfInput0[effectIndex] = (reverbTemp0[effectIndex] + reverbTemp2[effectIndex]) * reverb[effectIndex];
                    reverbShelfInput1[effectIndex] = (reverbTemp1[effectIndex] + reverbTemp3[effectIndex]) * reverb[effectIndex];
                    reverbShelfInput2[effectIndex] = (reverbTemp0[effectIndex] - reverbTemp2[effectIndex]) * reverb[effectIndex];
                    reverbShelfInput3[effectIndex] = (reverbTemp1[effectIndex] - reverbTemp3[effectIndex]) * reverb[effectIndex];
                    reverbShelfSample0[effectIndex] = reverbShelfB0[effectIndex] * reverbShelfInput0[effectIndex] + reverbShelfB1[effectIndex] * reverbShelfPrevInput0[effectIndex] - reverbShelfA1[effectIndex] * reverbShelfSample0[effectIndex];
                    reverbShelfSample1[effectIndex] = reverbShelfB0[effectIndex] * reverbShelfInput1[effectIndex] + reverbShelfB1[effectIndex] * reverbShelfPrevInput1[effectIndex] - reverbShelfA1[effectIndex] * reverbShelfSample1[effectIndex];
                    reverbShelfSample2[effectIndex] = reverbShelfB0[effectIndex] * reverbShelfInput2[effectIndex] + reverbShelfB1[effectIndex] * reverbShelfPrevInput2[effectIndex] - reverbShelfA1[effectIndex] * reverbShelfSample2[effectIndex];
                    reverbShelfSample3[effectIndex] = reverbShelfB0[effectIndex] * reverbShelfInput3[effectIndex] + reverbShelfB1[effectIndex] * reverbShelfPrevInput3[effectIndex] - reverbShelfA1[effectIndex] * reverbShelfSample3[effectIndex];
                    reverbShelfPrevInput0[effectIndex] = reverbShelfInput0[effectIndex];
                    reverbShelfPrevInput1[effectIndex] = reverbShelfInput1[effectIndex];
                    reverbShelfPrevInput2[effectIndex] = reverbShelfInput2[effectIndex];
                    reverbShelfPrevInput3[effectIndex] = reverbShelfInput3[effectIndex];
                    reverbDelayLine[effectIndex][reverbDelayPos1[effectIndex]] = reverbShelfSample0[effectIndex] * delayInputMult;
                    reverbDelayLine[effectIndex][reverbDelayPos2[effectIndex]] = reverbShelfSample1[effectIndex] * delayInputMult;
                    reverbDelayLine[effectIndex][reverbDelayPos3[effectIndex]] = reverbShelfSample2[effectIndex] * delayInputMult;
                    reverbDelayLine[effectIndex][reverbDelayPos[effectIndex] ] = reverbShelfSample3[effectIndex] * delayInputMult;
                    reverbDelayPos[effectIndex] = (reverbDelayPos[effectIndex] + 1) & reverbMask;
                    sampleL += reverbSample1[effectIndex] + reverbSample2[effectIndex] + reverbSample3[effectIndex];
                    sampleR += reverbSample0[effectIndex] + reverbSample2[effectIndex] - reverbSample3[effectIndex];
                    reverb[effectIndex] += reverbDelta[effectIndex];`:b&&E.type==5?(P+=`

                    inputSampleL[effectIndex] = sampleL;
                    inputSampleR[effectIndex] = sampleR;
                    sampleL = applyFilters(inputSampleL[effectIndex], initialFilterInputL1[effectIndex], initialFilterInputL2[effectIndex], filterCount[effectIndex], filtersL[effectIndex]);
                    sampleR = applyFilters(inputSampleR[effectIndex], initialFilterInputR1[effectIndex], initialFilterInputR2[effectIndex], filterCount[effectIndex], filtersR[effectIndex]);
                    initialFilterInputL2[effectIndex] = initialFilterInputL1[effectIndex];
                    initialFilterInputR2[effectIndex] = initialFilterInputR1[effectIndex];
                    initialFilterInputL1[effectIndex] = inputSampleL[effectIndex];
                    initialFilterInputR1[effectIndex] = inputSampleR[effectIndex];`,P+=`

                    sampleL *= eqFilterVolume[effectIndex];
                    sampleR *= eqFilterVolume[effectIndex];
                    eqFilterVolume[effectIndex] += eqFilterVolumeDelta[effectIndex];`):S&&E.type==7?P+=`

					ringModOutputL[effectIndex] = sampleL * waveform[effectIndex][(ringModPhase[effectIndex]*waveformLength[effectIndex])|0];
					ringModOutputR[effectIndex] = sampleR * waveform[effectIndex][(ringModPhase[effectIndex]*waveformLength[effectIndex])|0];
					ringModMixF[effectIndex] = Math.max(0, ringModMix[effectIndex] * ringModMixFade[effectIndex]);
					sampleL = sampleL * (1 - ringModMixF[effectIndex]) + ringModOutputL[effectIndex] * ringModMixF[effectIndex];
					sampleR = sampleR * (1 - ringModMixF[effectIndex]) + ringModOutputR[effectIndex] * ringModMixF[effectIndex];

					ringModMix[effectIndex] += ringModMixDelta[effectIndex];
					ringModPhase[effectIndex] += ringModPhaseDelta[effectIndex];
					ringModPhase[effectIndex] = ringModPhase[effectIndex] % 1.0;
					ringModPhaseDelta[effectIndex] *= ringModPhaseDeltaScale[effectIndex];
					ringModMixFade[effectIndex] += ringModMixFadeDelta[effectIndex];
					`:p&&E.type==8&&(P+=`
                    granularOutputL[effectIndex] = 0;
                    granularOutputR[effectIndex] = 0;
                    for (let grainIndex = 0; grainIndex < granularGrainCount[effectIndex]; grainIndex++) {
                        const grain = granularGrains[effectIndex][grainIndex];
                        if(computeGrains[effectIndex]) {
                            if(grain.delay > 0) {
                                grain.delay--;
                            } else {
                                const grainDelayLinePosition = grain.delayLinePosition;
                                const grainDelayLinePositionInt = grainDelayLinePosition | 0;
                                let grainAgeInSamples = grain.ageInSamples;
                                const grainMaxAgeInSamples = grain.maxAgeInSamples;
                                let grainSampleL = granularDelayLineL[effectIndex][((granularDelayLineIndex[effectIndex] + (granularDelayLineLength[effectIndex] - grainDelayLinePositionInt))    ) & granularDelayLineMask];
                                let grainSampleR = granularDelayLineR[effectIndex][((granularDelayLineIndex[effectIndex] + (granularDelayLineLength[effectIndex] - grainDelayLinePositionInt))    ) & granularDelayLineMask];
                                `,t.granularEnvelopeType==0?P+=`
                                    const grainEnvelope = grain.parabolicEnvelopeAmplitude;
                                    `:t.granularEnvelopeType==1&&(P+=`
                                    const grainEnvelope = grain.rcbEnvelopeAmplitude;
                                    `),P+=`
                                grainSampleL *= grainEnvelope;
                                grainSampleR *= grainEnvelope;
                                granularOutputL[effectIndex] += grainSampleL;
                                granularOutputR[effectIndex] += grainSampleR;
                                if (grainAgeInSamples > grainMaxAgeInSamples) {
                                    if (granularGrainCount[effectIndex] > 0) {
                                        // Faster equivalent of .pop, ignoring the order in the array.
                                        const lastGrainIndex = granularGrainCount[effectIndex] - 1;
                                        const lastGrain = granularGrains[effectIndex][lastGrainIndex];
                                        granularGrains[effectIndex][grainIndex] = lastGrain;
                                        granularGrains[effectIndex][lastGrainIndex] = grain;
                                        granularGrainCount[effectIndex]--;
                                        grainIndex--;
                                        // ^ Dangerous, since this could end up causing an infinite loop,
                                        // but should be okay in this case.
                                    }
                                } else {
                                    grainAgeInSamples++;
                                    `,t.granularEnvelopeType==0?P+=`
                                        grain.parabolicEnvelopeAmplitude += grain.parabolicEnvelopeSlope;
                                        grain.parabolicEnvelopeSlope += grain.parabolicEnvelopeCurve;
                                        `:t.granularEnvelopeType==1&&(P+=`
                                        grain.updateRCBEnvelope();
                                        `),P+=`
                                    grain.ageInSamples = grainAgeInSamples;
                                }
                            }
                        }
                    }
                    granularWet[effectIndex] += granularMixDelta[effectIndex];
                    granularDry[effectIndex] -= granularMixDelta[effectIndex];
                    granularOutputL[effectIndex] *= Config.granularOutputLoudnessCompensation;
                    granularOutputR[effectIndex] *= Config.granularOutputLoudnessCompensation;
                    granularDelayLineL[effectIndex][granularDelayLineIndex[effectIndex]] = sampleL;
                    granularDelayLineR[effectIndex][granularDelayLineIndex[effectIndex]] = sampleR;
                    granularDelayLineIndex[effectIndex] = (granularDelayLineIndex[effectIndex] + 1) & granularDelayLineMask[effectIndex];
                    sampleL = sampleL * granularDry[effectIndex] + granularOutputL[effectIndex] * granularWet[effectIndex];
                    sampleR = sampleR * granularDry[effectIndex] + granularOutputR[effectIndex] * granularWet[effectIndex];
                    `)}P+=`

                    outputDataL[sampleIndex] += sampleL * mixVolume;
                    outputDataR[sampleIndex] += sampleR * mixVolume;
                    mixVolume += mixVolumeDelta;`,B&&(P+=`

                    delayInputMult += delayInputMultDelta;`),P+=`
                }

                instrumentState.mixVolume = mixVolume;

                // Avoid persistent denormal or NaN values in the delay buffers and filter history.
                const epsilon = (1.0e-24);`,B&&(P+=`

                instrumentState.delayInputMult = delayInputMult;`);for(let L=0;L<o.effects.length;L++){let E=o.effects[L];P+=`

                effectState = instrumentState.effects[`+L+`];
                effectIndex = `+L+`;
                `,p&&E.type==8?P+=`
                        effectState.granularMix = granularWet[effectIndex];
                        effectState.granularGrainsLength = granularGrainCount[effectIndex];
                        effectState.granularDelayLineIndex = granularDelayLineIndex[effectIndex];
                    `:c&&E.type==3?P+=`

                    effectState.distortion = distortion[effectIndex];
                    effectState.distortionDrive = distortionDrive[effectIndex];

                    if (!Number.isFinite(distortionFractionalInputL1[effectIndex]) || Math.abs(distortionFractionalInputL1[effectIndex]) < epsilon) distortionFractionalInputL1[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionFractionalInputL2[effectIndex]) || Math.abs(distortionFractionalInputL2[effectIndex]) < epsilon) distortionFractionalInputL2[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionFractionalInputL3[effectIndex]) || Math.abs(distortionFractionalInputL3[effectIndex]) < epsilon) distortionFractionalInputL3[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionFractionalInputR1[effectIndex]) || Math.abs(distortionFractionalInputR1[effectIndex]) < epsilon) distortionFractionalInputR1[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionFractionalInputR2[effectIndex]) || Math.abs(distortionFractionalInputR2[effectIndex]) < epsilon) distortionFractionalInputR2[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionFractionalInputR3[effectIndex]) || Math.abs(distortionFractionalInputR3[effectIndex]) < epsilon) distortionFractionalInputR3[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionPrevInputL[effectIndex]) || Math.abs(distortionPrevInputL[effectIndex]) < epsilon) distortionPrevInputL[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionPrevInputR[effectIndex]) || Math.abs(distortionPrevInputR[effectIndex]) < epsilon) distortionPrevInputR[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionNextOutputL[effectIndex]) || Math.abs(distortionNextOutputL[effectIndex]) < epsilon) distortionNextOutputL[effectIndex] = 0.0;
                    if (!Number.isFinite(distortionNextOutputR[effectIndex]) || Math.abs(distortionNextOutputR[effectIndex]) < epsilon) distortionNextOutputR[effectIndex] = 0.0;

                    effectState.distortionFractionalInputL1 = distortionFractionalInputL1[effectIndex];
                    effectState.distortionFractionalInputL2 = distortionFractionalInputL2[effectIndex];
                    effectState.distortionFractionalInputL3 = distortionFractionalInputL3[effectIndex];
                    effectState.distortionFractionalInputR1 = distortionFractionalInputR1[effectIndex];
                    effectState.distortionFractionalInputR2 = distortionFractionalInputR2[effectIndex];
                    effectState.distortionFractionalInputR3 = distortionFractionalInputR3[effectIndex];
                    effectState.distortionPrevInputL = distortionPrevInputL[effectIndex];
                    effectState.distortionPrevInputR = distortionPrevInputR[effectIndex];
                    effectState.distortionNextOutputL = distortionNextOutputL[effectIndex];
                    effectState.distortionNextOutputR = distortionNextOutputR[effectIndex];`:u&&E.type==4?P+=`

                    if (Math.abs(bitcrusherPrevInputL[effectIndex]) < epsilon) bitcrusherPrevInputL[effectIndex] = 0.0;
                    if (Math.abs(bitcrusherPrevInputR[effectIndex]) < epsilon) bitcrusherPrevInputR[effectIndex] = 0.0;
                    if (Math.abs(bitcrusherCurrentOutputL[effectIndex]) < epsilon) bitcrusherCurrentOutputL[effectIndex] = 0.0;
                    if (Math.abs(bitcrusherCurrentOutputR[effectIndex]) < epsilon) bitcrusherCurrentOutputR[effectIndex] = 0.0;
                    effectState.bitcrusherPrevInputL = bitcrusherPrevInputL[effectIndex];
                    effectState.bitcrusherPrevInputR = bitcrusherPrevInputR[effectIndex];
                    effectState.bitcrusherCurrentOutputL = bitcrusherCurrentOutputL[effectIndex];
                    effectState.bitcrusherCurrentOutputR = bitcrusherCurrentOutputR[effectIndex];
                    effectState.bitcrusherPhase = bitcrusherPhase[effectIndex];
                    effectState.bitcrusherPhaseDelta = bitcrusherPhaseDelta[effectIndex];
                    effectState.bitcrusherScale = bitcrusherScale[effectIndex];
                    effectState.bitcrusherFoldLevel = bitcrusherFoldLevel[effectIndex];`:S&&E.type==7?P+=`
                    effectState.ringModMix = ringModMix[effectIndex];
                    effectState.ringModMixDelta = ringModMixDelta[effectIndex];
                    effectState.ringModPhase = ringModPhase[effectIndex];
                    effectState.ringModPhaseDelta = ringModPhaseDelta[effectIndex];
                    effectState.ringModPhaseDeltaScale = ringModPhaseDeltaScale[effectIndex];
                    effectState.ringModWaveformIndex = ringModWaveformIndex[effectIndex];
                    effectState.ringModPulseWidth = ringModPulseWidth[effectIndex];
                    effectState.ringModMixFade = ringModMixFade[effectIndex];
                    `:b&&E.type==5?P+=`

                        synth.sanitizeFilters(filtersL[effectIndex]);
                        synth.sanitizeFilters(filtersR[effectIndex]);
                    // The filter input here is downstream from another filter so we
                    // better make sure it's safe too.
                    if (!(initialFilterInputL1[effectIndex] < 100) || !(initialFilterInputL2[effectIndex] < 100) || !(initialFilterInputR1[effectIndex] < 100) || !(initialFilterInputR2[effectIndex] < 100)) {
                        initialFilterInputL1[effectIndex] = 0.0;
                        initialFilterInputR2[effectIndex] = 0.0;
                        initialFilterInputL1[effectIndex] = 0.0;
                        initialFilterInputR2[effectIndex] = 0.0;
                    }
                    if (Math.abs(initialFilterInputL1[effectIndex]) < epsilon) initialFilterInputL1[effectIndex] = 0.0;
                    if (Math.abs(initialFilterInputL2[effectIndex]) < epsilon) initialFilterInputL2[effectIndex] = 0.0;
                    if (Math.abs(initialFilterInputR1[effectIndex]) < epsilon) initialFilterInputR1[effectIndex] = 0.0;
                    if (Math.abs(initialFilterInputR2[effectIndex]) < epsilon) initialFilterInputR2[effectIndex] = 0.0;
                    effectState.initialEqFilterInputL1 = initialFilterInputL1[effectIndex];
                    effectState.initialEqFilterInputL2 = initialFilterInputL2[effectIndex];
                    effectState.initialEqFilterInputR1 = initialFilterInputR1[effectIndex];
                    effectState.initialEqFilterInputR2 = initialFilterInputR2[effectIndex];

                    instrumentState.eqFilterVolume = eqFilterVolume[effectIndex];`:l&&E.type==9?P+=`
                    effectState.gain = gain[effectIndex];
                    `:g&&E.type==2?P+=`

                    Synth.sanitizeDelayLine(panningDelayLineL[effectIndex], panningDelayPos[effectIndex], panningMask);
                    Synth.sanitizeDelayLine(panningDelayLineR[effectIndex], panningDelayPos[effectIndex], panningMask);
                    effectState.panningDelayPos = panningDelayPos[effectIndex];
                    effectState.panningVolumeL = panningVolumeL[effectIndex];
                    effectState.panningVolumeR = panningVolumeR[effectIndex];
                    effectState.panningOffsetL = panningOffsetL[effectIndex];
                    effectState.panningOffsetR = panningOffsetR[effectIndex];`:m&&E.type==10?P+=`

                    Synth.sanitizeDelayLine(flangerDelayLineL[effectIndex], flangerDelayPos[effectIndex], flangerMask);
                    Synth.sanitizeDelayLine(flangerDelayLineR[effectIndex], flangerDelayPos[effectIndex], flangerMask);
                    effectState.flangerPhase = flangerPhase[effectIndex];
                    effectState.flangerDelayPos = flangerDelayPos[effectIndex];
                    effectState.flanger = flanger[effectIndex];
                    effectState.flangerSpeed = flangerSpeed[effectIndex];
                    effectState.flangerDepth = flangerDepth[effectIndex];
                    effectState.flangerFeedback = flangerFeedback[effectIndex];`:y&&E.type==1?P+=`

                    Synth.sanitizeDelayLine(chorusDelayLineL[effectIndex], chorusDelayPos[effectIndex], chorusMask);
                    Synth.sanitizeDelayLine(chorusDelayLineR[effectIndex], chorusDelayPos[effectIndex], chorusMask);
                    effectState.chorusPhase = chorusPhase[effectIndex];
                    effectState.chorusDelayPos = chorusDelayPos[effectIndex];
                    effectState.chorusVoiceMult = chorusVoiceMult[effectIndex];
                    effectState.chorusCombinedMult = chorusCombinedMult[effectIndex];`:h&&E.type==6?P+=`

                    Synth.sanitizeDelayLine(echoDelayLineL[effectIndex], echoDelayPosL[effectIndex], echoMask[effectIndex]);
                    Synth.sanitizeDelayLine(echoDelayLineR[effectIndex], echoDelayPosR[effectIndex], echoMask[effectIndex]);
                    effectState.echoDelayPosL = echoDelayPosL[effectIndex];
                    effectState.echoDelayPosR = echoDelayPosR[effectIndex];
                    effectState.echoMult = echoMult[effectIndex];
                    effectState.echoDelayOffsetRatio = echoDelayOffsetRatio[effectIndex];

                    if (!Number.isFinite(echoShelfSampleL[effectIndex]) || Math.abs(echoShelfSampleL[effectIndex]) < epsilon) echoShelfSampleL[effectIndex] = 0.0;
                    if (!Number.isFinite(echoShelfSampleR[effectIndex]) || Math.abs(echoShelfSampleR[effectIndex]) < epsilon) echoShelfSampleR[effectIndex] = 0.0;
                    if (!Number.isFinite(echoShelfPrevInputL[effectIndex]) || Math.abs(echoShelfPrevInputL[effectIndex]) < epsilon) echoShelfPrevInputL[effectIndex] = 0.0;
                    if (!Number.isFinite(echoShelfPrevInputR[effectIndex]) || Math.abs(echoShelfPrevInputR[effectIndex]) < epsilon) echoShelfPrevInputR[effectIndex] = 0.0;
                    effectState.echoShelfSampleL = echoShelfSampleL[effectIndex];
                    effectState.echoShelfSampleR = echoShelfSampleR[effectIndex];
                    effectState.echoShelfPrevInputL = echoShelfPrevInputL[effectIndex];
                    effectState.echoShelfPrevInputR = echoShelfPrevInputR[effectIndex];`:f&&E.type==0&&(P+=`

                    Synth.sanitizeDelayLine(reverbDelayLine[effectIndex], reverbDelayPos[effectIndex]        , reverbMask);
                    Synth.sanitizeDelayLine(reverbDelayLine[effectIndex], reverbDelayPos[effectIndex] +  3041, reverbMask);
                    Synth.sanitizeDelayLine(reverbDelayLine[effectIndex], reverbDelayPos[effectIndex] +  6426, reverbMask);
                    Synth.sanitizeDelayLine(reverbDelayLine[effectIndex], reverbDelayPos[effectIndex] + 10907, reverbMask);
                    effectState.reverbDelayPos = reverbDelayPos[effectIndex];
                    effectState.reverbMult = reverb[effectIndex];

                    if (!Number.isFinite(reverbShelfSample0[effectIndex]) || Math.abs(reverbShelfSample0[effectIndex]) < epsilon) reverbShelfSample0[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfSample1[effectIndex]) || Math.abs(reverbShelfSample1[effectIndex]) < epsilon) reverbShelfSample1[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfSample2[effectIndex]) || Math.abs(reverbShelfSample2[effectIndex]) < epsilon) reverbShelfSample2[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfSample3[effectIndex]) || Math.abs(reverbShelfSample3[effectIndex]) < epsilon) reverbShelfSample3[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfPrevInput0[effectIndex]) || Math.abs(reverbShelfPrevInput0[effectIndex]) < epsilon) reverbShelfPrevInput0[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfPrevInput1[effectIndex]) || Math.abs(reverbShelfPrevInput1[effectIndex]) < epsilon) reverbShelfPrevInput1[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfPrevInput2[effectIndex]) || Math.abs(reverbShelfPrevInput2[effectIndex]) < epsilon) reverbShelfPrevInput2[effectIndex] = 0.0;
                    if (!Number.isFinite(reverbShelfPrevInput3[effectIndex]) || Math.abs(reverbShelfPrevInput3[effectIndex]) < epsilon) reverbShelfPrevInput3[effectIndex] = 0.0;
                    effectState.reverbShelfSample0 = reverbShelfSample0[effectIndex];
                    effectState.reverbShelfSample1 = reverbShelfSample1[effectIndex];
                    effectState.reverbShelfSample2 = reverbShelfSample2[effectIndex];
                    effectState.reverbShelfSample3 = reverbShelfSample3[effectIndex];
                    effectState.reverbShelfPrevInput0 = reverbShelfPrevInput0[effectIndex];
                    effectState.reverbShelfPrevInput1 = reverbShelfPrevInput1[effectIndex];
                    effectState.reverbShelfPrevInput2 = reverbShelfPrevInput2[effectIndex];
                    effectState.reverbShelfPrevInput3 = reverbShelfPrevInput3[effectIndex];`)}P+="}",console.log(P),v=new Function("Config","Synth",P)(t,i),i.effectsFunctionCache[w]=v}v(e,a,n,r,s,o)}static pulseWidthSynth(e,a,n,r,s){let o=e.tempInstrumentSampleBufferL,c=r.specialIntervalExpressionMult*s.unisonSign;s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(r.phases[1]=r.phases[0]);let u=r.phaseDeltas[0],b=r.phaseDeltas[1],l=+r.phaseDeltaScales[0],g=+r.phaseDeltaScales[1],m=+r.expression,y=+r.expressionDelta,h=r.phases[0]%1,f=r.phases[1]%1,p=r.pulseWidth,S=r.pulseWidthDelta,x=r.noteFiltersL,w=r.noteFilterCount|0,v=+r.initialNoteFilterInputL1,P=+r.initialNoteFilterInputL2,B=i.applyFilters,L=a+n;for(let D=a;D<L;D++){let R=h%1,N=(h+p)%1,z=f%1,W=(f+p)%1,H=N-R,U=W-z;if(!s.aliases){if(R<u){var E=R/u;H+=(E+E-E*E-1)*.5}else if(R>1-u){var E=(R-1)/u;H+=(E+E+E*E+1)*.5}if(N<u){var E=N/u;H-=(E+E-E*E-1)*.5}else if(N>1-u){var E=(N-1)/u;H-=(E+E+E*E+1)*.5}if(z<b){var E=z/b;U+=(E+E-E*E-1)*.5}else if(z>1-b){var E=(z-1)/b;U+=(E+E+E*E+1)*.5}if(W<b){var E=W/b;U-=(E+E-E*E-1)*.5}else if(W>1-b){var E=(W-1)/b;U-=(E+E+E*E+1)*.5}}let G=H+U*c,d=B(G,v,P,w,x);P=v,v=G,h+=u,f+=b,u*=l,b*=g,p+=S;let F=d*m;m+=y,o[D]+=F}r.phases[0]=h,r.phases[1]=f,r.phaseDeltas[0]=u,r.phaseDeltas[1]=b,r.expression=m,r.pulseWidth=p,e.sanitizeFilters(x),r.initialNoteFilterInputL1=v,r.initialNoteFilterInputL2=P}static supersawSynth(e,a,n,r,s){let o=e.tempInstrumentSampleBufferL,c=t.supersawVoiceCount|0,u=r.phaseDeltas[0],b=+r.phaseDeltaScales[0],l=+r.expression,g=+r.expressionDelta,m=r.phases,y=+r.supersawDynamism,h=+r.supersawDynamismDelta,f=r.supersawUnisonDetunes,p=+r.supersawShape,S=+r.supersawShapeDelta,x=+r.supersawDelayLength,w=+r.supersawDelayLengthDelta,v=r.supersawDelayLine,P=v.length-1>>0,B=r.supersawDelayIndex|0;B=(B&P)+v.length;let L=r.noteFiltersL,E=r.noteFilterCount|0,D=+r.initialNoteFilterInputL1,R=+r.initialNoteFilterInputL2,N=i.applyFilters,z=a+n;for(let H=a;H<z;H++){let U=(m[0]+u)%1,G=U-.5*(1+(c-1)*y);if(!s.aliases){if(U<u){var W=U/u;G-=(W+W-W*W-1)*.5}else if(U>1-u){var W=(U-1)/u;G-=(W+W+W*W+1)*.5}}m[0]=U;for(let be=1;be<c;be++){let Ie=u*f[be],_=(m[be]+Ie)%1;if(G+=_*y,!s.aliases){if(_<Ie){let V=_/Ie;G-=(V+V-V*V-1)*.5*y}else if(_>1-Ie){let V=(_-1)/Ie;G-=(V+V+V*V+1)*.5*y}}m[be]=_}v[B&P]=G;let d=B-x,F=d|0,C=F+1,I=d-F,M=v[F&P],q=v[C&P],O=M+(q-M)*I;B++;let j=G-O*p,te=N(j,D,R,E,L);R=D,D=j,u*=b,y+=h,p+=S,x+=w;let ee=te*l;l+=g,o[H]+=ee}r.phaseDeltas[0]=u,r.expression=l,r.supersawDynamism=y,r.supersawShape=p,r.supersawDelayLength=x,r.supersawDelayIndex=B,e.sanitizeFilters(L),r.initialNoteFilterInputL1=D,r.initialNoteFilterInputL2=R}static fmSourceTemplate=(`
		const data = synth.tempInstrumentSampleBufferL;
		const sineWave = Config.sineWave;
			
		// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.
		let operator#Phase       = +((tone.phases[#] % 1) + 1000) * `+t.sineWaveLength+`;
		let operator#PhaseDelta  = +tone.phaseDeltas[#] * `+t.sineWaveLength+`;
		let operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];
		let operator#OutputMult  = +tone.operatorExpressions[#];
		const operator#OutputDelta = +tone.operatorExpressionDeltas[#];
		let operator#Output      = +tone.feedbackOutputs[#];
        const operator#Wave      = tone.operatorWaves[#].samples;
		let feedbackMult         = +tone.feedbackMult;
		const feedbackDelta        = +tone.feedbackDelta;
        let expression = +tone.expression;
		const expressionDelta = +tone.expressionDelta;
		
		const filters = tone.noteFiltersL;
		const filterCount = tone.noteFilterCount|0;
		let initialFilterInput1 = +tone.initialNoteFilterInputL1;
		let initialFilterInput2 = +tone.initialNoteFilterInputL2;
		const applyFilters = Synth.applyFilters;
		
		const stopIndex = bufferIndex + roundedSamplesPerTick;
		for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {
				// INSERT OPERATOR COMPUTATION HERE
				const fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS
				
			const inputSample = fmOutput;
			const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);
			initialFilterInput2 = initialFilterInput1;
			initialFilterInput1 = inputSample;
				
				feedbackMult += feedbackDelta;
				operator#OutputMult += operator#OutputDelta;
				operator#Phase += operator#PhaseDelta;
			operator#PhaseDelta *= operator#PhaseDeltaScale;
			
			const output = sample * expression;
			expression += expressionDelta;

			data[sampleIndex] += output;
			}
			
			tone.phases[#] = operator#Phase / `+t.sineWaveLength+`;
			tone.phaseDeltas[#] = operator#PhaseDelta / `+t.sineWaveLength+`;
			tone.operatorExpressions[#] = operator#OutputMult;
		    tone.feedbackOutputs[#] = operator#Output;
		    tone.feedbackMult = feedbackMult;
		    tone.expression = expression;
			
		synth.sanitizeFilters(filters);
		tone.initialNoteFilterInputL1 = initialFilterInput1;
		tone.initialNoteFilterInputL2 = initialFilterInput2;
		`).split(`
`);static operatorSourceTemplate=(`
		const operator#PhaseMix = operator#Phase/* + operator@Scaled*/;
		const operator#PhaseInt = operator#PhaseMix|0;
		const operator#Index    = operator#PhaseInt & `+t.sineWaveMask+`;
		const operator#Sample   = operator#Wave[operator#Index];
		operator#Output         = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);
		const operator#Scaled   = operator#OutputMult * operator#Output;
		`).split(`
`);static noiseSynth(e,a,n,r,s){let o=e.tempInstrumentSampleBufferL,c=s.waveL,u=r.specialIntervalExpressionMult*s.unisonSign;s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(r.phases[1]=r.phases[0]);let b=r.phaseDeltas[0],l=r.phaseDeltas[1],g=+r.phaseDeltaScales[0],m=+r.phaseDeltaScales[1],y=+r.expression,h=+r.expressionDelta,f=r.phases[0]%1*t.chipNoiseLength,p=r.phases[1]%1*t.chipNoiseLength;r.phases[0]==0&&(f=Math.random()*t.chipNoiseLength,s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(p=f)),r.phases[1]==0&&!(s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval)&&(p=Math.random()*t.chipNoiseLength);let S=t.chipNoiseLength-1,x=+r.noiseSampleA,w=+r.noiseSampleB,v=r.noteFiltersL,P=r.noteFilterCount|0,B=+r.initialNoteFilterInputL1,L=+r.initialNoteFilterInputL2,E=i.applyFilters,D=Math.min(1,b*s.noisePitchFilterMult),R=Math.min(1,l*s.noisePitchFilterMult),N=a+n;for(let z=a;z<N;z++){let W=c[f&S],H=c[p&S];x+=(W-x)*D,w+=(H-w)*R;let U=x+w*u,G=E(U,B,L,P,v);L=B,B=U,f+=b,p+=l,b*=g,l*=m;let d=G*y;y+=h,o[z]+=d}r.phases[0]=f/t.chipNoiseLength,r.phases[1]=p/t.chipNoiseLength,r.phaseDeltas[0]=b,r.phaseDeltas[1]=l,r.expression=y,r.noiseSampleA=x,r.noiseSampleB=w,e.sanitizeFilters(v),r.initialNoteFilterInputL1=B,r.initialNoteFilterInputL2=L}static spectrumSynth(e,a,n,r,s){let o=e.tempInstrumentSampleBufferL,c=s.waveL,u=128,b=r.specialIntervalExpressionMult*s.unisonSign;s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(r.phases[1]=r.phases[0]);let l=r.phaseDeltas[0]*u,g=r.phaseDeltas[1]*u,m=+r.phaseDeltaScales[0],y=+r.phaseDeltaScales[1],h=+r.expression,f=+r.expressionDelta,p=+r.noiseSampleA,S=+r.noiseSampleB,x=r.noteFiltersL,w=r.noteFilterCount|0,v=+r.initialNoteFilterInputL1,P=+r.initialNoteFilterInputL2,B=i.applyFilters,L=r.phases[0]%1*t.spectrumNoiseLength,E=r.phases[1]%1*t.spectrumNoiseLength;r.phases[0]==0&&(L=i.findRandomZeroCrossing(c,t.spectrumNoiseLength)+l,s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval&&(E=L)),r.phases[1]==0&&!(s.unisonVoices==1&&s.unisonSpread==0&&!s.chord.customInterval)&&(E=i.findRandomZeroCrossing(c,t.spectrumNoiseLength)+g);let D=t.spectrumNoiseLength-1,R=Math.min(1,l),N=Math.min(1,g),z=a+n;for(let W=a;W<z;W++){let H=L|0,U=E|0,G=H&D,d=U&D,F=c[G],C=c[d],I=L-H,M=E-U;F+=(c[G+1]-F)*I,C+=(c[d+1]-C)*M,p+=(F-p)*R,S+=(C-S)*N;let q=p+S*b,O=B(q,v,P,w,x);P=v,v=q,L+=l,E+=g,l*=m,g*=y;let j=O*h;h+=f,o[W]+=j}r.phases[0]=L/t.spectrumNoiseLength,r.phases[1]=E/t.spectrumNoiseLength,r.phaseDeltas[0]=l/u,r.phaseDeltas[1]=g/u,r.expression=h,r.noiseSampleA=p,r.noiseSampleB=S,e.sanitizeFilters(x),r.initialNoteFilterInputL1=v,r.initialNoteFilterInputL2=P}static drumsetSynth(e,a,n,r,s){let o=e.tempInstrumentSampleBufferL,c=s.getDrumsetWave(r.drumsetPitch),u=jt.drumsetIndexReferenceDelta(r.drumsetPitch),b=r.phaseDeltas[0]/u,l=+r.phaseDeltaScales[0],g=+r.expression,m=+r.expressionDelta,y=r.noteFiltersL,h=r.noteFilterCount|0,f=+r.initialNoteFilterInputL1,p=+r.initialNoteFilterInputL2,S=i.applyFilters,x=r.phases[0]%1*t.spectrumNoiseLength;r.phases[0]==0&&(x=i.findRandomZeroCrossing(c,t.spectrumNoiseLength)+b);let w=t.spectrumNoiseLength-1,v=a+n;for(let P=a;P<v;P++){let B=x|0,L=B&w,E=c[L],D=x-B;E+=(c[L+1]-E)*D;let R=E,N=S(R,f,p,h,y);p=f,f=R,x+=b,b*=l;let z=N*g;g+=m,o[P]+=z}r.phases[0]=x/t.spectrumNoiseLength,r.phaseDeltas[0]=b*u,r.expression=g,e.sanitizeFilters(y),r.initialNoteFilterInputL1=f,r.initialNoteFilterInputL2=p}static modSynth(e,a,n,r,s){if(!e.song)return;let o=t.modCount-1-r.pitches[0];if(s.invalidModulators[o])return;let c=s.modulators[o],u=[],b=[];if(t.modulators[s.modulators[o]].forSong)b.push(0);else if(s.modInstruments[o][0]==e.song.channels[s.modChannels[o][0]].instruments.length)for(let l=0;l<e.song.channels[s.modChannels[o][0]].instruments.length;l++)b.push(l),u.push(0);else if(s.modInstruments[o][0]>e.song.channels[s.modChannels[o][0]].instruments.length)e.song.getPattern(s.modChannels[o][0],e.bar)!=null&&(b=e.song.getPattern(s.modChannels[o][0],e.bar).instruments,u.push(0));else for(let l=0;l<s.modChannels[o].length;l++)u.push(s.modChannels[o][l]),b.push(s.modInstruments[o][l]);for(let l=0;l<b.length;l++){e.setModValue(r.expression,r.expression+r.expressionDelta,s.modChannels[o][l],b[l],c);for(let g=0;g<e.heldMods.length;g++)t.modulators[s.modulators[o]].forSong?e.heldMods[g].setting==c&&e.setModValue(e.heldMods[g].volume,e.heldMods[g].volume,s.modChannels[o][l],b[l],c):e.heldMods[g].channelIndex==s.modChannels[o][l]&&e.heldMods[g].instrumentIndex==b[l]&&e.heldMods[g].setting==c&&e.setModValue(e.heldMods[g].volume,e.heldMods[g].volume,s.modChannels[o][l],b[l],c);if(c==t.modulators.dictionary["reset arp"].index&&e.tick==0&&r.noteStartPart==e.beat*t.partsPerBeat+e.part)e.channels[s.modChannels[o][l]].instruments[b[l]].arpTime=0;else if(c==t.modulators.dictionary["reset envelope"].index&&e.tick==0&&r.noteStartPart==e.beat*t.partsPerBeat+e.part){let g=s.modEnvelopeNumbers[o],m=e.channels[s.modChannels[o][l]].instruments[b[l]];e.song.channels[s.modChannels[o][l]].instruments[b[l]].envelopeCount>g&&(m.envelopeTime[g]=0)}else if(c==t.modulators.dictionary["next bar"].index)e.wantToSkip=!0;else if(c==t.modulators.dictionary["song eq"].index){let g=e.song,m=s.modFilterTypes[o]|0;if(m==0){let y=0,h=e.getTicksIntoBar()/t.ticksPerPart;for(;r.note.start+r.note.pins[y].time<=h;)y++;let f=(h-r.note.start+n/(e.getSamplesPerTick()*t.ticksPerPart)*t.ticksPerPart-r.note.pins[y-1].time)/(r.note.pins[y].time-r.note.pins[y-1].time);g.eqSubFilters[r.note.pins[y-1].size]!=null||g.eqSubFilters[r.note.pins[y].size]!=null?g.tmpEqFilterEnd=Ee.lerpFilters(g.eqSubFilters[r.note.pins[y-1].size],g.eqSubFilters[r.note.pins[y].size],f):g.tmpEqFilterEnd=g.eqFilter}else{for(let y=0;y<t.filterMorphCount;y++)g.tmpEqFilterEnd==g.eqSubFilters[y]&&g.tmpEqFilterEnd!=null&&(g.tmpEqFilterEnd=new Ee,g.tmpEqFilterEnd.fromJsonObject(g.eqSubFilters[y].toJsonObject()));g.tmpEqFilterEnd==null&&(g.tmpEqFilterEnd=new Ee,g.tmpEqFilterEnd.fromJsonObject(g.eqFilter.toJsonObject())),g.tmpEqFilterEnd.controlPointCount>Math.floor((m-1)/2)&&(m%2?g.tmpEqFilterEnd.controlPoints[Math.floor((m-1)/2)].freq=r.expression+r.expressionDelta:g.tmpEqFilterEnd.controlPoints[Math.floor((m-1)/2)].gain=r.expression+r.expressionDelta)}}else if(c==t.modulators.dictionary["post eq"].index){let g=e.song.channels[s.modChannels[o][l]].instruments[b[l]];for(let m=0;m<g.effects.length;m++){let y=g.effects[m];if(!y.eqFilterType){let h=s.modFilterTypes[o]|0;if(h==0){let f=0,p=e.getTicksIntoBar()/t.ticksPerPart;for(;r.note.start+r.note.pins[f].time<=p;)f++;let S=(p-r.note.start+n/(e.getSamplesPerTick()*t.ticksPerPart)*t.ticksPerPart-r.note.pins[f-1].time)/(r.note.pins[f].time-r.note.pins[f-1].time);y.eqSubFilters[r.note.pins[f-1].size]!=null||y.eqSubFilters[r.note.pins[f].size]!=null?y.tmpEqFilterEnd=Ee.lerpFilters(y.eqSubFilters[r.note.pins[f-1].size],y.eqSubFilters[r.note.pins[f].size],S):y.tmpEqFilterEnd=y.eqFilter}else{for(let f=0;f<t.filterMorphCount;f++)y.tmpEqFilterEnd==y.eqSubFilters[f]&&y.tmpEqFilterEnd!=null&&(y.tmpEqFilterEnd=new Ee,y.tmpEqFilterEnd.fromJsonObject(y.eqSubFilters[f].toJsonObject()));y.tmpEqFilterEnd==null&&(y.tmpEqFilterEnd=new Ee,y.tmpEqFilterEnd.fromJsonObject(y.eqFilter.toJsonObject())),y.tmpEqFilterEnd.controlPointCount>Math.floor((h-1)/2)&&(h%2?y.tmpEqFilterEnd.controlPoints[Math.floor((h-1)/2)].freq=r.expression+r.expressionDelta:y.tmpEqFilterEnd.controlPoints[Math.floor((h-1)/2)].gain=r.expression+r.expressionDelta)}}}}else if(c==t.modulators.dictionary["pre eq"].index){let g=e.song.channels[s.modChannels[o][l]].instruments[b[l]];if(!g.noteFilterType){let m=s.modFilterTypes[o]|0;if(m==0){let y=0,h=e.getTicksIntoBar()/t.ticksPerPart;for(;r.note.start+r.note.pins[y].time<=h;)y++;let f=(h-r.note.start+n/(e.getSamplesPerTick()*t.ticksPerPart)*t.ticksPerPart-r.note.pins[y-1].time)/(r.note.pins[y].time-r.note.pins[y-1].time);g.noteSubFilters[r.note.pins[y-1].size]!=null||g.noteSubFilters[r.note.pins[y].size]!=null?g.tmpNoteFilterEnd=Ee.lerpFilters(g.noteSubFilters[r.note.pins[y-1].size],g.noteSubFilters[r.note.pins[y].size],f):g.tmpNoteFilterEnd=g.noteFilter}else{for(let y=0;y<t.filterMorphCount;y++)g.tmpNoteFilterEnd==g.noteSubFilters[y]&&g.tmpNoteFilterEnd!=null&&(g.tmpNoteFilterEnd=new Ee,g.tmpNoteFilterEnd.fromJsonObject(g.noteSubFilters[y].toJsonObject()));g.tmpNoteFilterEnd==null&&(g.tmpNoteFilterEnd=new Ee,g.tmpNoteFilterEnd.fromJsonObject(g.noteFilter.toJsonObject())),g.tmpNoteFilterEnd.controlPointCount>Math.floor((m-1)/2)&&(m%2?g.tmpNoteFilterEnd.controlPoints[Math.floor((m-1)/2)].freq=r.expression+r.expressionDelta:g.tmpNoteFilterEnd.controlPoints[Math.floor((m-1)/2)].gain=r.expression+r.expressionDelta)}}}else if(c==t.modulators.dictionary["individual envelope speed"].index){let g=e.song.channels[s.modChannels[o][l]].instruments[b[l]],m=s.modEnvelopeNumbers[o],y=r.expression+r.expressionDelta;g.envelopeCount>m&&(Number.isInteger(y)?g.envelopes[m].tempEnvelopeSpeed=t.perEnvelopeSpeedIndices[y]:(y=(1-y%1)*t.perEnvelopeSpeedIndices[Math.floor(y)]+y%1*t.perEnvelopeSpeedIndices[Math.ceil(y)],g.envelopes[m].tempEnvelopeSpeed=y))}else if(c==t.modulators.dictionary["individual envelope lower bound"].index){let g=e.song.channels[s.modChannels[o][l]].instruments[b[l]],m=s.modEnvelopeNumbers[o],y=r.expression+r.expressionDelta;g.envelopeCount>m&&(g.envelopes[m].tempEnvelopeLowerBound=y/10)}else if(c==t.modulators.dictionary["individual envelope upper bound"].index){let g=e.song.channels[s.modChannels[o][l]].instruments[b[l]],m=s.modEnvelopeNumbers[o],y=r.expression+r.expressionDelta;g.envelopeCount>m&&(g.envelopes[m].tempEnvelopeUpperBound=y/10),console.log(g.envelopes[m])}}}static findRandomZeroCrossing(e,a){let n=Math.random()*a,r=a-1,s=n&r,o=e[s],c=16;for(let u=128;u>0;u--){let b=s+c&r,l=e[b];if(o*l<=0){for(let g=0;g<c;g++){let m=s+1&r,y=e[m];if(o*y<=0){let h=y-o;n=s,Math.abs(h)>1e-8&&(n+=-o/h),n=Math.max(0,n)%a;break}else s=m,o=y}break}else s=b,o=l}return n}static instrumentVolumeToVolumeMult(e){return e==-t.volumeRange/2?0:Math.pow(2,t.volumeLogScale*e)}static volumeMultToInstrumentVolume(e){return e<=0?-t.volumeRange/2:Math.min(t.volumeRange,Math.log(e)/Math.LN2/t.volumeLogScale)}static noteSizeToVolumeMult(e){return Math.pow(Math.max(0,e)/t.noteSizeMax,1.5)}static volumeMultToNoteSize(e){return Math.pow(Math.max(0,e),1/1.5)*t.noteSizeMax}static getOperatorWave(e,a){return e!=2?t.operatorWaves[e]:t.pwmOperatorWaves[a]}getSamplesPerTick(){if(this.song==null)return 0;let e=this.song.getBeatsPerMinute();return this.isModActive(t.modulators.dictionary.tempo.index)&&(e=this.getModValue(t.modulators.dictionary.tempo.index)),this.getSamplesPerTickSpecificBPM(e)}getSamplesPerTickSpecificBPM(e){let a=e/60,n=t.partsPerBeat*a,r=t.ticksPerPart*n;return this.samplesPerSecond/r}sanitizeFilters(e){let a=!1;for(let n of e){let r=Math.abs(n.output1),s=Math.abs(n.output2);if(!(r<100)||!(s<100)){a=!0;break}r<St&&(n.output1=0),s<St&&(n.output2=0)}if(a)for(let n of e)n.output1=0,n.output2=0}static sanitizeDelayLine(e,a,n){for(;;){a--;let r=a&n,s=Math.abs(e[r]);if(Number.isFinite(s)&&(s==0||s>=St))break;e[r]=0}}static applyFilters(e,a,n,r,s){for(let o=0;o<r;o++){let c=s[o],u=c.output1,b=c.output2,l=c.a1,g=c.a2,m=c.b0,y=c.b1,h=c.b2;e=m*e+y*a+h*n-l*u-g*b,c.a1=l+c.a1Delta,c.a2=g+c.a2Delta,c.useMultiplicativeInputCoefficients?(c.b0=m*c.b0Delta,c.b1=y*c.b1Delta,c.b2=h*c.b2Delta):(c.b0=m+c.b0Delta,c.b1=y+c.b1Delta,c.b2=h+c.b2Delta),c.output2=u,c.output1=e,n=b,a=u}return e}computeTicksSinceStart(e=!1){let a=this.song?.beatsPerBar?this.song?.beatsPerBar:8;return e?t.ticksPerPart*t.partsPerBeat*a*this.bar:this.tick+t.ticksPerPart*(this.part+t.partsPerBeat*(this.beat+a*this.bar))}};var vn=class{constructor(e,a=1){this.canvas=e;this.scale=a;this.fe=function(n,r){if(r){var s=e.getContext("2d");s.fillStyle=xe.getComputed("--editor-background"),s.fillRect(0,0,e.width,e.height),s.fillStyle=xe.getComputed("--oscilloscope-line-L");for(let o=n.length-1;o>=n.length-1-e.width/a;o--){let c=o-(n.length-1)+e.width/a,u=n[o]*(e.height/a/2)+e.height/a/2;if(s.fillRect((c-1)*a,(u-1)*a,1*a,1.5*a),c==0)break}s.fillStyle=xe.getComputed("--oscilloscope-line-R");for(let o=r.length-1;o>=r.length-1-e.width/a;o--){let c=o-(r.length-1)+e.width/a,u=r[o]*(e.height/a/2)+e.height/a/2;if(s.fillRect((c-1)*a,(u-1)*a,1*a,1.5*a),c==0)break}}},gn.listen("oscilloscopeUpdate",this.fe)}fe};var{a:Mn,button:sa,div:nn,h1:kr,input:Pr,canvas:Er}=Gt,{svg:Dn,circle:Mr,rect:Ba,path:en}=Qe,aa=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);document.head.appendChild(Gt.style({type:"text/css"},`
	body {
		color: ${xe.primaryText};
		background: ${xe.editorBackground};
	}
	h1 {
		font-weight: bold;
		font-size: 14px;
		line-height: 22px;
		text-align: initial;
		margin: 0;
	}
	a {
		font-weight: bold;
		font-size: 12px;
		line-height: 22px;
		white-space: nowrap;
		color: ${xe.linkAccent};
	}
	button {
		margin: 0;
		padding: 0;
		position: relative;
		border: none;
		border-radius: 5px;
		background: ${xe.uiWidgetBackground};
		color: ${xe.primaryText};
		cursor: pointer;
		font-size: 14px;
		font-family: inherit;
	}
	button:hover, button:focus {
		background: ${xe.uiWidgetFocus};
	}
	.playButton, .pauseButton {
		padding-left: 24px;
		padding-right: 6px;
	}
	.playButton::before {
		content: "";
		position: absolute;
		left: 6px;
		top: 50%;
		margin-top: -6px;
		width: 12px;
		height: 12px;
		pointer-events: none;
		background: ${xe.primaryText};
		-webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><path d="M 6 0 L -5 6 L -5 -6 z" fill="gray"/></svg>');
		-webkit-mask-repeat: no-repeat;
		-webkit-mask-position: center;
		mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><path d="M 6 0 L -5 6 L -5 -6 z" fill="gray"/></svg>');
		mask-repeat: no-repeat;
		mask-position: center;
	}
	.pauseButton::before {
		content: "";
		position: absolute;
		left: 6px;
		top: 50%;
		margin-top: -6px;
		width: 12px;
		height: 12px;
		pointer-events: none;
		background: ${xe.primaryText};
		-webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><rect x="-5" y="-6" width="3" height="12" fill="gray"/><rect x="2"  y="-6" width="3" height="12" fill="gray"/></svg>');
		-webkit-mask-repeat: no-repeat;
		-webkit-mask-position: center;
		mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><rect x="-5" y="-6" width="3" height="12" fill="gray"/><rect x="2"  y="-6" width="3" height="12" fill="gray"/></svg>');
		mask-repeat: no-repeat;
		mask-position: center;
	}
	
	input[type=range] {
		-webkit-appearance: none;
		appearance: none;
		height: 16px;
		margin: 0;
		cursor: pointer;
		background-color: ${xe.editorBackground};
		touch-action: pan-y;
	}
	input[type=range]:focus {
		outline: none;
	}
	input[type=range]::-webkit-slider-runnable-track {
		width: 100%;
		height: 4px;
		cursor: pointer;
		background: ${xe.uiWidgetBackground};
	}
	input[type=range]::-webkit-slider-thumb {
		height: 16px;
		width: 4px;
		border-radius: 2px;
		background: ${xe.primaryText};
		cursor: pointer;
		-webkit-appearance: none;
		margin-top: -6px;
	}
	input[type=range]:focus::-webkit-slider-runnable-track, input[type=range]:hover::-webkit-slider-runnable-track {
		background: ${xe.uiWidgetFocus};
	}
	input[type=range]::-moz-range-track {
		width: 100%;
		height: 4px;
		cursor: pointer;
		background: ${xe.uiWidgetBackground};
	}
	input[type=range]:focus::-moz-range-track, input[type=range]:hover::-moz-range-track  {
		background: ${xe.uiWidgetFocus};
	}
	input[type=range]::-moz-range-thumb {
		height: 16px;
		width: 4px;
		border-radius: 2px;
		border: none;
		background: ${xe.primaryText};
		cursor: pointer;
	}
	input[type=range]::-ms-track {
		width: 100%;
		height: 4px;
		cursor: pointer;
		background: ${xe.uiWidgetBackground};
		border-color: transparent;
	}
	input[type=range]:focus::-ms-track, input[type=range]:hover::-ms-track {
		background: ${xe.uiWidgetFocus};
	}
	input[type=range]::-ms-thumb {
		height: 16px;
		width: 4px;
		border-radius: 2px;
		background: ${xe.primaryText};
		cursor: pointer;
	}
`));var Na=Bt("colorTheme");xe.setTheme(Na===null?xe.defaultTheme:Na);var za=null,Va=(Math.random()*4294967295>>>0).toString(16),Ha=!1,xn,In=!1,pt=1,ra=0,Sn=0,se=new pe,Ga=new vn(Er({width:aa?144:288,height:aa?32:64,style:`border:2px solid ${xe.uiWidgetBackground}; overflow: hidden;`,id:"oscilloscopeAll"}),aa?1:2),Dr=Bt("showOscilloscope")!="false";Dr||(Ga.canvas.style.display="none",se.oscEnabled=!1);var Ua=kr({style:"flex-grow: 1; margin: 0 1px; margin-left: 10px; overflow: hidden;"},""),$a=Mn({target:"_top",style:"margin: 0 4px;"},"\u270E Edit"),la=Mn({href:"javascript:void(0)",style:"margin: 0 4px;"},"\u2398 Copy URL"),wn=Mn({href:"javascript:void(0)",style:"margin: 0 4px;"},"\u2933 Share"),ca=Mn({target:"_top",style:"margin: 0 4px;"},"\u21F1 Fullscreen"),an=!1,rt=sa({style:"width: 100%; height: 100%; max-height: 50px;"}),Tr=nn({style:"flex-shrink: 0; display: flex; padding: 2px; width: 80px; height: 100%; box-sizing: border-box; align-items: center;"},rt),_a=en({d:"M 4 2 L 4 0 L 7 3 L 4 6 L 4 4 Q 2 4 2 6 Q 2 8 4 8 L 4 10 Q 0 10 0 6 Q 0 2 4 2 M 8 10 L 8 12 L 5 9 L 8 6 L 8 8 Q 10 8 10 6 Q 10 4 8 4 L 8 2 Q 12 2 12 6 Q 12 10 8 10 z"}),Qa=sa({title:"loop",style:"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;"},Dn({width:12,height:12,viewBox:"0 0 12 12"},_a)),Ar=Dn({style:"flex: 0 0 12px; margin: 0 1px; width: 12px; height: 12px;",viewBox:"0 0 12 12"},en({fill:xe.uiWidgetBackground,d:"M 1 9 L 1 3 L 4 3 L 7 0 L 7 12 L 4 9 L 1 9 M 9 3 Q 12 6 9 9 L 8 8 Q 10.5 6 8 4 L 9 3 z"})),rn=Pr({title:"volume",type:"range",value:75,min:0,max:75,step:1,style:"width: 12vw; max-width: 100px; margin: 0 1px;"}),Ja=Dn({width:12,height:12,viewBox:"0 0 12 12"},Mr({cx:"5",cy:"5",r:"4.5","stroke-width":"1",stroke:"currentColor",fill:"none"}),en({stroke:"currentColor","stroke-width":"2",d:"M 8 8 L 11 11 M 5 2 L 5 8 M 2 5 L 8 5",fill:"none"})),Ka=sa({title:"zoom",style:"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;"},Ja),Ke=Dn({style:"min-width: 0; min-height: 0; touch-action: pan-y pinch-zoom;"}),Za=nn({style:`position: absolute; left: 0; top: 0; width: 2px; height: 100%; background: ${xe.playhead}; pointer-events: none;`}),ia=nn({style:"display: flex; flex-grow: 1; flex-shrink: 1; position: relative;"},Ke,Za),tn=nn({style:"display: flex; flex-grow: 1; flex-shrink: 1; height: 0; position: relative; align-items: center; overflow: hidden;"},ia),Fn,qt=[],oa=-1,Cn=Bt("notesFlashWhenPlayed")=="true",Lr=Bt("fixChannelColorOrder")!="false",qr=Qe.rect({"pointer-events":"none",width:"90%",height:"50%",x:"5%",y:"25%",fill:xe.uiWidgetBackground}),kn=Qe.rect({"pointer-events":"none",height:"50%",width:"0%",x:"5%",y:"25%",fill:"url('#volumeGrad2')"}),Pn=Qe.rect({"pointer-events":"none",width:"2px",height:"50%",x:"5%",y:"25%",fill:xe.uiWidgetFocus}),Rr=Qe.stop({"stop-color":"lime",offset:"60%"}),Br=Qe.stop({"stop-color":"orange",offset:"90%"}),Nr=Qe.stop({"stop-color":"red",offset:"100%"}),zr=Qe.linearGradient({id:"volumeGrad2",gradientUnits:"userSpaceOnUse"},Rr,Br,Nr),Wr=Qe.defs({},zr),Or=Qe.svg({style:"touch-action: none; overflow: hidden; margin: auto;",width:"160px",height:"10px",preserveAspectRatio:"none"},Wr,qr,kn,Pn);document.body.appendChild(tn);document.body.appendChild(nn({style:"flex-shrink: 0; height: 20vh; min-height: 22px; max-height: 70px; display: flex; align-items: center;"},Tr,Qa,Ar,rn,Ka,Or,Ga.canvas,Ua,$a,la,wn,ca));function Ya(i,e){try{localStorage.setItem(i,e)}catch{}}function Bt(i){try{return localStorage.getItem(i)}catch{return null}}function Vr(i,e){if(!(i.length<1)){if(e===i.length-1)i.pop();else if(e>=0&&e<i.length-1){let a=i.pop();i[e]=a}}}function Wa(i,e){se.setSong(i),se.snapToStart();let a=se.song.toBase64String();$a.href="../#"+a}function Tn(){let i=location.hash;if(!(za==i||i=="")){za=i,i.charAt(0)=="#"&&(i=i.substring(1)),ca.href=location.href;for(let e of i.split(/&(?=[a-z]+=)/g)){let a=e.indexOf("=");if(a!=-1){let n=e.substring(0,a),r=e.substring(a+1);switch(n){case"song":Wa(r,!0),se.song&&(Ua.textContent=se.song.title);break;case"loop":se.loopRepeatCount=r!="1"?0:-1,ha();break}}else Wa(i,!1)}da()}}function Hr(){da()}var En=null;function Gr(){if(!se.playing){clearInterval(En);return}let i=Bt("playerId");i!=null&&i!=Va&&(pa(),Rt(),clearInterval(En))}function Xa(){se.playing&&(xn=requestAnimationFrame(Xa),Rt(),ja()),Ha!=se.playing&&ma()}function ja(){if(se.song==null){Pn.setAttribute("x","5%"),kn.setAttribute("width","0%");return}ra--,ra<=0&&(Sn-=.03),se.song.outVolumeCap>Sn&&(Sn=se.song.outVolumeCap,ra=50),Ur(se.song.outVolumeCap,Sn),se.playing||(Pn.setAttribute("x","5%"),kn.setAttribute("width","0%"))}function Ur(i,e){kn.setAttribute("width",""+Math.min(144,i*144)),Pn.setAttribute("x",""+(8+Math.min(144,e*144)))}function pa(){se.song!=null&&(xn!=null&&cancelAnimationFrame(xn),xn=null,se.playing?(se.pause(),ja()):(se.play(),Ya("playerId",Va),Xa(),clearInterval(En),En=setInterval(Gr,100))),ma()}function er(){se.loopRepeatCount==-1?se.loopRepeatCount=0:se.loopRepeatCount=-1,ha()}function $r(){Ya("volume",rn.value),ir()}function tr(){In=!In,or(),da()}function _r(i){an=!0,nr(i)}function nr(i){an&&(i.preventDefault(),rr(i.clientX||i.pageX))}function Qr(i){an=!0,ar(i)}function ar(i){rr(i.touches[0].clientX)}function rr(i){if(an&&se.song!=null){let e=tn.getBoundingClientRect();se.playhead=se.song.barCount*(i-e.left)/(e.right-e.left),se.computeLatestModValues(),Rt()}}function ua(){an=!1}function ir(){let i=+rn.value;se.volume=Math.min(1,Math.pow(i/50,.5))*Math.pow(2,(i-75)/25)}function Rt(){if(se.song!=null){let a=se.playhead/se.song.barCount;Za.style.left=pt*a+"px";let n=tn.getBoundingClientRect();if(tn.scrollLeft=a*(pt-n.width),Cn){let r=Math.floor(se.playhead),s=se.playhead-r,o=se.song.beatsPerBar*t.partsPerBeat,c=Fn[r];if(c!=null&&r!==oa){for(var i=qt.length-1;i>=0;i--){var e=qt[i];let u=Number(e.getAttribute("note-bar"))!==r,b=e.style.opacity==="0";u&&b&&Vr(qt,i)}for(var i=0;i<c.length;i++){var e=c[i];qt.push(e)}}if(qt!=null)for(var i=0;i<qt.length;i++){var e=qt[i];let l=Number(e.getAttribute("note-start"))/o,g=Number(e.getAttribute("note-end"))/o,m=Number(e.getAttribute("note-bar"));if(s>=l&&m==r){let y=g-l;e.style.opacity=String(1-(s-l-y/2)/(y/2))}else e.style.opacity="0"}oa=r}}}function da(){if(Ke.innerHTML="",se.song==null)return;let i=tn.getBoundingClientRect(),e,a,n;if(In){e=i.height,a=Math.max(1,Math.min(t.pitchOctaves,Math.round(e/(12*2)))),n=a*12+1;let l=(e-1)/n,g=Math.max(8,l*4);pt=Math.max(i.width,g*se.song.barCount*se.song.beatsPerBar)}else{pt=i.width;let l=Math.max(1,pt/(se.song.barCount*se.song.beatsPerBar)/6);e=Math.min(i.height,l*(t.maxPitch+1)+1),a=Math.max(3,Math.min(t.pitchOctaves,Math.round(e/(12*l)))),n=a*12+1}ia.style.width=pt+"px",ia.style.height=e+"px",Ke.style.width=pt+"px",Ke.style.height=e+"px";let r=pt/se.song.barCount,s=r/(se.song.beatsPerBar*t.partsPerBeat),o=(e-1)/n,c=(e-1)/t.drumCount;for(let l=0;l<se.song.barCount+1;l++){let g=l==se.song.loopStart||l==se.song.loopStart+se.song.loopLength?xe.loopAccent:xe.uiWidgetBackground;Ke.appendChild(Ba({x:l*r-1,y:0,width:2,height:e,fill:g}))}for(let l=0;l<=a;l++)Ke.appendChild(Ba({x:0,y:l*12*o,width:pt,height:o+1,fill:xe.tonic,opacity:.75}));let u="#ffffff",b="#ffffff77";if(Cn&&(u="var(--note-flash)",b="var(--note-flash-secondary)"),Cn){Fn=[];for(let l=0;l<se.song.barCount;l++)Fn.push([]);oa=-1}for(let l=se.song.channels.length-1-se.song.modChannelCount;l>=0;l--){let g=se.song.getChannelIsNoise(l),m=g?c:o,y=se.song.channels[l].octave,f=Math.max(0,Math.min(t.pitchOctaves-a,Math.ceil(y-a*.5)))*m*12+e-m*.5-.5;for(let p=0;p<se.song.barCount;p++){let S=se.song.getPattern(l,p);if(S==null)continue;let x=p*r;for(let w=0;w<S.notes.length;w++){let v=S.notes[w];for(let P of v.pitches){let B=Oa(P,v.start,v.pins,(m+1)/2,x,f,s,m),L=en({d:B,fill:xe.getChannelColor(se.song,se.song.channels[l].color,l,Lr).primaryChannel});if(g&&(L.style.opacity=String(.6)),Ke.appendChild(L),Cn){let E=Oa(P,v.start,v.pins,(m+1)/2,x,f,s,m),D=en({d:E,fill:g?b:u});D.style.opacity="0",D.setAttribute("note-start",String(v.start)),D.setAttribute("note-end",String(v.end)),D.setAttribute("note-bar",String(p)),Ke.appendChild(D),Fn[p].push(D)}}}}}Rt()}function Oa(i,e,a,n,r,s,o,c){let u=`M ${r+o*(e+a[0].time)} ${s-i*c+n*(a[0].size/t.noteSizeMax)} `;for(let b=0;b<a.length;b++){let l=a[b],g=r+o*(e+l.time),m=s-c*(i+l.interval),y=l.size/t.noteSizeMax;u+=`L ${g} ${m-n*y} `}for(let b=a.length-1;b>=0;b--){let l=a[b],g=r+o*(e+l.time),m=s-c*(i+l.interval),y=l.size/t.noteSizeMax;u+=`L ${g} ${m+n*y} `}return u}function ma(){se.playing?(rt.classList.remove("playButton"),rt.classList.add("pauseButton"),rt.title="Pause (Space)",rt.textContent="Pause"):(rt.classList.remove("pauseButton"),rt.classList.add("playButton"),rt.title="Play (Space)",rt.textContent="Play"),Ha=se.playing}function ha(){_a.setAttribute("fill",se.loopRepeatCount==-1?xe.linkAccent:xe.uiWidgetBackground)}function or(){Ja.style.color=In?xe.linkAccent:xe.uiWidgetBackground}function Jr(i){switch(i.keyCode){case 70:se.playhead=0,se.computeLatestModValues(),Rt(),i.preventDefault();break;case 32:pa(),se.computeLatestModValues(),i.preventDefault();break;case 219:se.goToPrevBar(),se.computeLatestModValues(),Rt(),i.preventDefault();break;case 221:se.goToNextBar(),se.computeLatestModValues(),Rt(),i.preventDefault();break;case 69:case 80:i.shiftKey&&(Tn(),location.href="../#"+se.song.toBase64String(),i.preventDefault());break;case 90:case 187:case 61:case 171:case 189:case 173:tr();break;case 76:er();break;case 83:i.ctrlKey&&(Kr(),i.preventDefault());break;case 67:sr();break}}function Kr(){Tn();let i="https://tinyurl.com/api-create.php?url=";window.localStorage.getItem("shortenerStrategySelect")=="isgd"&&(i="https://is.gd/create.php?format=simple&url="),window.open(i+encodeURIComponent(new URL("#"+se.song.toBase64String(),location.href).href))}function sr(){let i;if(i=navigator,i.clipboard&&i.clipboard.writeText){i.clipboard.writeText(location.href).catch(()=>{window.prompt("Copy to clipboard:",location.href)});return}let e=document.createElement("textarea");e.textContent=location.href,document.body.appendChild(e),e.select();let a=document.execCommand("copy");e.remove(),a||window.prompt("Copy this:",location.href)}function Zr(){navigator.share({url:location.href})}top!==self?(la.style.display="none",wn.style.display="none"):(ca.style.display="none","share"in navigator||(wn.style.display="none"));Bt("volume")!=null&&(rn.value=Bt("volume"));ir();window.addEventListener("resize",Hr);window.addEventListener("keydown",Jr);Ke.addEventListener("mousedown",_r);window.addEventListener("mousemove",nr);window.addEventListener("mouseup",ua);Ke.addEventListener("touchstart",Qr);Ke.addEventListener("touchmove",ar);Ke.addEventListener("touchend",ua);Ke.addEventListener("touchcancel",ua);rt.addEventListener("click",pa);Qa.addEventListener("click",er);rn.addEventListener("input",$r);Ka.addEventListener("click",tr);la.addEventListener("click",sr);wn.addEventListener("click",Zr);window.addEventListener("hashchange",Tn);Tn();ha();or();ma();return fr(Yr);})();
/*!
Copyright (c) 2012-2022 John Nesky and contributing authors

Permission is hereby granted, free of charge, to any person obtaining a copy of 
this software and associated documentation files (the "Software"), to deal in 
the Software without restriction, including without limitation the rights to 
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies 
of the Software, and to permit persons to whom the Software is furnished to do 
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all 
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE 
SOFTWARE.
*/
//# sourceMappingURL=beepbox_player.min.js.map
