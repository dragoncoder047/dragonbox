{"version":3,"names":["_a","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","TypePresets","sampleLoadingState","constructor","statusTable","urlTable","totalSamples","samplesLoaded","SampleLoadedEvent","Event","super","SampleLoadEvents","EventTarget","sampleLoadEvents","startLoadingSample","url","chipWaveIndex","presetSettings","rawLoopOptions","customSampleRate","sampleLoaderAudioContext","AudioContext","sampleRate","closedSampleLoaderAudioContext","chipWave","Config","chipWaves","rawChipWave","rawChipWaves","rawRawChipWave","rawRawChipWaves","fetch","response","ok","arrayBuffer","Error","decodeAudioData","audioBuffer","samples","centerWave","Array","from","getChannelData","samplesR","numberOfChannels","integratedSamples","performIntegral","integratedSamplesR","length","dispatchEvent","close","catch","error","alert","loadScript","willReloadForCustomSamples","script","document","createElement","src","head","appendChild","addEventListener","event","loadBuiltInSamples","set","defaultIntegratedSamples","defaultSamples","name","expression","isSampled","isPercussion","extraSampleDetune","startIndex","index","integratedChipWave","dictionary","chipWaveSamples","kicksample","snaresample","pianosample","WOWsample","overdrivesample","trumpetsample","saxophonesample","orchhitsample","detatchedviolinsample","synthsample","sonic3snaresample","comeonsample","choirsample","overdrivensample","flutesample","legatoviolinsample","tremoloviolinsample","amenbreaksample","pizzicatoviolinsample","timallengruntsample","tubasample","loopingcymbalsample","kickdrumsample","snaredrumsample","closedhihatsample","foothihatsample","openhihatsample","crashsample","pianoC4sample","liverpadsample","marimbasample","susdotwavsample","wackyboxttssample","peppersteak1","peppersteak2","vinyl","slapbass","hdeboverdrive","sunsoftbass","masculinechoir","femininechoir","southtololoche","harp","panflute","krumhorn","timpani","crowdhey","warioland4brass","warioland4organ","warioland4daow","warioland4hourchime","warioland4tick","kirbykick","kirbysnare","kirbybongo","kirbyclick","funkkick","funksnare","funksnareleft","funksnareright","funktomhigh","funktomlow","funkhihatclosed","funkhihathalfopen","funkhihatopen","funkhihatopentip","funkhihatfoot","funkcrash","funkcrashtip","funkride","chipWaveIndexOffset","chipWaveSample","chronoperc1finalsample","synthkickfmsample","woodclicksample","acousticsnaresample","catpaintboxsample","gameboypaintboxsample","mariopaintboxsample","drumpaintboxsample","yoshipaintboxsample","starpaintboxsample","fireflowerpaintboxsample","dogpaintbox","oinkpaintbox","swanpaintboxsample","facepaintboxsample","console","log","generateSineWave","wave","Float32Array","sineWaveLength","i","Math","sin","PI","generateTriWave","asin","generateTrapezoidWave","drive","max","min","generateSquareWave","phaseWidth","centerPoint","abs","generateSawWave","inverse","generateQuasiSineWave","round","sum","average","push","centerAndNormalizeWave","magn","magnAvg","cumulative","newWave","getPulseWidthRatio","pulseWidth","pulseWidthRange","getDrumWave","inverseRealFourierTransform","scaleElementsByFactor","chipNoises","chipNoiseLength","drumBuffer","newBuffer","random","drawNoiseSpectrum","sqrt","ultraboxnewchipnoiserand","pow","clz32","b3","b4","b5","b6","b0","b1","b2","white","lastOut","waveLength","lowOctave","highOctave","lowPower","highPower","overallSlope","lowIndex","highIndex","retroWave","combinedAmplitude","lerped","log2","amplitude","radians","cos","getArpeggioPitchIndex","pitchCount","useFastTwoNoteArp","arpeggio","arpeggioPattern","arpeggioPatterns","toNameMap","array","effectsIncludeTransition","effects","effectsIncludeChord","effectsIncludePitchShift","effectsIncludeDetune","effectsIncludeVibrato","calculateRingModHertz","sliderHz","sliderHzOffset","ringModHzRange","floor","ringModMinHz","ringModMaxHz","thresholdVal","kneeVal","ratioVal","attackVal","releaseVal","jsonFormat","scales","realName","flags","keys","isWhiteKey","basePitch","blackKeyNameParents","tempoMin","tempoMax","octaveMin","octaveMax","echoDelayRange","echoDelayStepTicks","echoSustainRange","echoShelfHz","echoShelfGain","reverbShelfHz","reverbShelfGain","reverbRange","reverbDelayBufferSize","reverbDelayBufferMask","beatsPerBarMin","beatsPerBarMax","barCountMin","barCountMax","instrumentCountMin","layeredInstrumentCountMax","patternInstrumentCountMax","partsPerBeat","ticksPerPart","ticksPerArpeggio","rhythms","stepsPerBeat","roundUpThresholds","instrumentTypeNames","instrumentTypeHasSpecialInterval","chipBaseExpression","fmBaseExpression","noiseBaseExpression","spectrumBaseExpression","drumsetBaseExpression","harmonicsBaseExpression","pwmBaseExpression","supersawBaseExpression","pickedStringBaseExpression","distortionBaseVolume","bitcrusherBaseVolume","granularOutputLoudnessCompensation","raw","newArray","Object","assign","key","rawChipToIntegrated","firstIndexForSamplesInChipWaveList","pitchFilterMult","isSoft","filterFreqStep","filterFreqRange","filterFreqReferenceSetting","filterFreqReferenceHz","filterFreqMaxHz","filterFreqMinHz","filterGainRange","filterGainCenter","filterGainStep","filterMaxPoints","filterTypeNames","filterMorphCount","filterSimpleCutRange","filterSimplePeakRange","fadeInRange","fadeOutTicks","fadeOutNeutral","drumsetFadeOutTicks","transitions","isSeamless","continues","slides","slideTicks","includeAdjacentPatterns","vibratos","type","delayTicks","vibratoTypes","periodsSeconds","period","arpSpeedScale","unisons","voices","spread","offset","sign","effectNames","effectDisplayNames","effectOrder","mdeffectNames","mdeffectOrder","noteSizeMax","volumeRange","volumeLogScale","gainRangeMult","panCenter","panMax","panDelaySecondsMax","ringModRange","rmHzOffsetCenter","rmHzOffsetMax","rmHzOffsetMin","granularRange","grainSizeMin","grainSizeMax","grainSizeStep","grainRangeMax","grainAmountsMax","granularEnvelopeType","flangerRange","flangerSpeedRange","flangerDepthRange","flangerFeedbackRange","flangerMaxDelay","flangerPeriodMult","flangerVolumeMult","chorusRange","chorusPeriodSeconds","chorusDelayRange","chorusDelayOffsets","chorusPhaseOffsets","chorusMaxDelay","concat","reduce","x","y","chords","customInterval","arpeggiates","strumParts","singleTone","maxChordSize","operatorCount","maxPitchOrOperatorCount","algorithms","carrierCount","associatedCarrier","modulatedBy","algorithms6Op","operatorCarrierInterval","operatorAmplitudeMax","operatorFrequencies","mult","hzOffset","amplitudeSign","envelopes","speed","newEnvelopes","feedbacks","indices","feedbacks6Op","spectrumNoiseLength","spectrumBasePitch","spectrumControlPoints","spectrumControlPointsPerOctave","spectrumControlPointBits","spectrumMax","harmonicsControlPoints","harmonicsRendered","harmonicsRenderedForPickedString","harmonicsControlPointBits","harmonicsMax","harmonicsWavelength","pulseWidthStepPower","supersawVoiceCount","supersawDynamismMax","supersawSpreadMax","supersawShapeMax","pitchChannelCountMin","pitchChannelCountMax","noiseChannelCountMin","noiseChannelCountMax","modChannelCountMin","modChannelCountMax","noiseInterval","pitchesPerOctave","drumCount","pitchOctaves","modCount","maxPitch","maximumTonesPerChannel","justIntonationSemitones","map","pitchShiftRange","pitchShiftCenter","detuneCenter","detuneMax","detuneMin","songDetuneMin","songDetuneMax","unisonVoicesMin","unisonVoicesMax","unisonSpreadMin","unisonSpreadMax","unisonOffsetMin","unisonOffsetMax","unisonExpressionMin","unisonExpressionMax","unisonSignMin","unisonSignMax","sineWaveMask","sineWave","perEnvelopeSpeedIndices","perEnvelopeSpeedToIndices","perEnvelopeBoundMin","perEnvelopeBoundMax","randomEnvelopeSeedMax","randomEnvelopeStepsMax","pickedStringDispersionCenterFreq","pickedStringDispersionFreqScale","pickedStringDispersionFreqMult","pickedStringShelfHz","distortionRange","stringSustainRange","stringDecayRate","enableAcousticSustain","sustainTypeNames","bitcrusherFreqRange","bitcrusherOctaveStep","bitcrusherQuantizationRange","maxEnvelopeCount","defaultAutomationRange","instrumentAutomationTargets","computeIndex","displayName","interleave","isFilter","maxCount","effect","mdeffect","compatibleInstruments","operatorWaves","pwmOperatorWaves","barEditorHeight","modulators","pianoName","maxRawVol","newNoteVol","forSong","convertRealFactor","associatedEffect","associatedMDEffect","maxIndex","promptName","promptDesc","ceil","invertSliderIndicator","__values","o","s","Symbol","iterator","m","call","TypeError","__read","n","r","ar","__spread","arguments","applyElementArgs","element","args","e_1","e_2","_b","e_3","_c","args_1","args_1_1","arg","Node","createTextNode","isArray","Element","_d","_e","setAttribute","join","warn","tagName","_f","_g","styleKey","style","setProperty","e_3_1","return","removeAttribute","e_2_1","e_1_1","svgNS","HTML","_i","createRange","createContextualFragment","SVG","fragment","createDocumentFragment","svgParser","DOMParser","parseFromString","documentElement","firstChild","importNode","_loop_1","name_1","split","_loop_2","name_2","createElementNS","test","snakeCaseName","replace","ColorConfig","resetColors","colorLookup","clear","getArbitaryChannelColor","channel","usesColorFormula","base","noiseChannels","c_noiseLimit","modChannels","c_modLimit","pitchChannels","c_pitchLimit","regex","secondaryChannel","getComputed","exec","primaryChannel","secondaryNote","primaryNote","colorFormulaPitchLimit","c_colorFormulaPitchLimit","colorFormulaNoiseLimit","c_colorFormulaNoiseLimit","colorFormulaModLimit","c_colorFormulaModLimit","c_noiseSecondaryChannelHue","c_noiseSecondaryChannelHueScale","c_noiseChannelCountOverride","c_noiseSecondaryChannelSat","c_noiseSecondaryChannelSatScale","c_noiseSecondaryChannelLum","c_noiseSecondaryChannelLumScale","c_noisePrimaryChannelHue","c_noisePrimaryChannelHueScale","c_noisePrimaryChannelSat","c_noisePrimaryChannelSatScale","c_noisePrimaryChannelLum","c_noisePrimaryChannelLumScale","c_noiseSecondaryNoteHue","c_noiseSecondaryNoteHueScale","c_noiseSecondaryNoteSat","c_noiseSecondaryNoteSatScale","c_noiseSecondaryNoteLum","c_noiseSecondaryNoteLumScale","c_noisePrimaryNoteHue","c_noisePrimaryNoteHueScale","c_noisePrimaryNoteSat","c_noisePrimaryNoteSatScale","c_noisePrimaryNoteLum","c_noisePrimaryNoteLumScale","c_modSecondaryChannelHue","c_modSecondaryChannelHueScale","c_modChannelCountOverride","c_modSecondaryChannelSat","c_modSecondaryChannelSatScale","c_modSecondaryChannelLum","c_modSecondaryChannelLumScale","c_modPrimaryChannelHue","c_modPrimaryChannelHueScale","c_modPrimaryChannelSat","c_modPrimaryChannelSatScale","c_modPrimaryChannelLum","c_modPrimaryChannelLumScale","c_modSecondaryNoteHue","c_modSecondaryNoteHueScale","c_modSecondaryNoteSat","c_modSecondaryNoteSatScale","c_modSecondaryNoteLum","c_modSecondaryNoteLumScale","c_modPrimaryNoteHue","c_modPrimaryNoteHueScale","c_modPrimaryNoteSat","c_modPrimaryNoteSatScale","c_modPrimaryNoteLum","c_modPrimaryNoteLumScale","c_pitchSecondaryChannelHue","c_pitchSecondaryChannelHueScale","c_pitchChannelCountOverride","c_pitchSecondaryChannelSat","c_pitchSecondaryChannelSatScale","c_pitchSecondaryChannelLum","c_pitchSecondaryChannelLumScale","c_pitchPrimaryChannelHue","c_pitchPrimaryChannelHueScale","c_pitchPrimaryChannelSat","c_pitchPrimaryChannelSatScale","c_pitchPrimaryChannelLum","c_pitchPrimaryChannelLumScale","c_pitchSecondaryNoteHue","c_pitchSecondaryNoteHueScale","c_pitchSecondaryNoteSat","c_pitchSecondaryNoteSatScale","c_pitchSecondaryNoteLum","c_pitchSecondaryNoteLumScale","c_pitchPrimaryNoteHue","c_pitchPrimaryNoteHueScale","c_pitchPrimaryNoteSat","c_pitchPrimaryNoteSatScale","c_pitchPrimaryNoteLum","c_pitchPrimaryNoteLumScale","getComputedChannelColor","song","color","useFixedOrder","getChannelColor","has","get","pitchChannelCount","newChannelColors","noiseChannelCount","setTheme","theme","themes","undefined","defaultTheme","_styleElement","textContent","valuesToAdd","getComputedStyle","getPropertyValue","themeColor","querySelector","trim","c_invertedText","c_trackEditorBgNoiseDim","c_trackEditorBgNoise","c_trackEditorBgModDim","c_trackEditorBgMod","c_trackEditorBgPitchDim","c_trackEditorBgPitch","clamp","val","validateRange","parseFloatWithDefault","defaultValue","parseFloat","Number","isNaN","parseIntWithDefault","parseInt","fadeInSettingToSeconds","setting","secondsToFadeInSetting","seconds","fadeOutSettingToTicks","ticksToFadeOutSetting","ticks","lower","upper","detuneToCents","detune","fittingPowerOfTwo","makeNotePin","interval","time","size","Map","forest","canyon","midnight","beachcombing","roe","moonlight","autumn","fruit","sunset","toxic","portal","fusion","nebula","energized","neapolitan","poly","greyscale","blutonium","slushie","zefbox","harrybox","brucebox","nerdbox","nepbox","fogbox","foxbox","wackybox","microbox","paandorasbox","midbox","dogebox2","slarmoosbox","custom","localStorage","getItem","pageMargin","editorBackground","hoverPreview","playhead","primaryText","secondaryText","invertedText","textSelection","boxSelectionFill","loopAccent","linkAccent","uiWidgetBackground","uiWidgetFocus","pitchBackground","tonic","fifthNote","whitePianoKey","blackPianoKey","whitePianoKeyText","blackPianoKeyText","useColorFormula","pitchSecondaryChannelHue","pitchSecondaryChannelHueScale","pitchSecondaryChannelSat","pitchSecondaryChannelSatScale","pitchSecondaryChannelLum","pitchSecondaryChannelLumScale","pitchPrimaryChannelHue","pitchPrimaryChannelHueScale","pitchPrimaryChannelSat","pitchPrimaryChannelSatScale","pitchPrimaryChannelLum","pitchPrimaryChannelLumScale","pitchSecondaryNoteHue","pitchSecondaryNoteHueScale","pitchSecondaryNoteSat","pitchSecondaryNoteSatScale","pitchSecondaryNoteLum","pitchSecondaryNoteLumScale","pitchPrimaryNoteHue","pitchPrimaryNoteHueScale","pitchPrimaryNoteSat","pitchPrimaryNoteSatScale","pitchPrimaryNoteLum","pitchPrimaryNoteLumScale","modSecondaryChannelHue","modSecondaryChannelHueScale","modSecondaryChannelSat","modSecondaryChannelSatScale","modSecondaryChannelLum","modSecondaryChannelLumScale","modPrimaryChannelHue","modPrimaryChannelHueScale","modPrimaryChannelSat","modPrimaryChannelSatScale","modPrimaryChannelLum","modPrimaryChannelLumScale","modSecondaryNoteHue","modSecondaryNoteHueScale","modSecondaryNoteSat","modSecondaryNoteSatScale","modSecondaryNoteLum","modSecondaryNoteLumScale","modPrimaryNoteHue","modPrimaryNoteHueScale","modPrimaryNoteSat","modPrimaryNoteSatScale","modPrimaryNoteLum","modPrimaryNoteLumScale","noiseSecondaryChannelHue","noiseSecondaryChannelHueScale","noiseSecondaryChannelSat","noiseSecondaryChannelSatScale","noiseSecondaryChannelLum","noiseSecondaryChannelLumScale","noisePrimaryChannelHue","noisePrimaryChannelHueScale","noisePrimaryChannelSat","noisePrimaryChannelSatScale","noisePrimaryChannelLum","noisePrimaryChannelLumScale","noiseSecondaryNoteHue","noiseSecondaryNoteHueScale","noiseSecondaryNoteSat","noiseSecondaryNoteSatScale","noiseSecondaryNoteLum","noiseSecondaryNoteLumScale","noisePrimaryNoteHue","noisePrimaryNoteHueScale","noisePrimaryNoteSat","noisePrimaryNoteSatScale","noisePrimaryNoteLum","noisePrimaryNoteLumScale","trackEditorBgPitch","trackEditorBgPitchDim","trackEditorBgNoise","trackEditorBgNoiseDim","trackEditorBgMod","trackEditorBgModDim","multiplicativeModSlider","overwritingModSlider","indicatorPrimary","indicatorSecondary","select2OptGroup","inputBoxOutline","muteButtonNormal","muteButtonMod","modLabelPrimary","modLabelSecondaryText","modLabelPrimaryText","disabledNotePrimary","disabledNoteSecondary","Note","pitch","start","end","fadeout","chipWaveStartOffset","pitches","pins","continuesLastPattern","pickMainInterval","longestFlatIntervalDuration","mainInterval","pinIndex","pinA","pinB","duration","loudestSize","pin","clone","newNote","getEndPinIndex","part","endPinIndex","Pattern","notes","instruments","cloneNotes","note","reset","toJsonObject","isModChannel","noteArray","instrument","mod","volumeCap","getVolumeCapForSetting","modFilterTypes","pointArray","useVol","tick","rhythm","pitchBend","volume","forMod","noteObject","points","patternObject","patternInstruments","fromJsonObject","importedPartsPerBeat","isNoiseChannel","format","toLowerCase","instrumentCount","getMaxInstrumentsPerPatternForChannel","j","maxNoteCount","beatsPerBar","k","indexOf","startInterval","pointObject","lowestPitch","highestPitch","splice","oldMin","newMin","old","FilterCoefficients","a","b","order","linearGain0thOrder","linearGain","lowPass1stOrderButterworth","cornerRadiansPerSample","g","tan","a0","lowPass1stOrderSimplified","highPass1stOrderButterworth","highShelf1stOrder","shelfLinearGain","sqrtGain","allPass1stOrderInvertPhaseAbove","allPass1stOrderFractionalDelay","delay","lowPass2ndOrderButterworth","peakLinearGain","alpha","lowPass2ndOrderSimplified","filterResonance","feedback","highPass2ndOrderButterworth","highShelf2ndOrder","slope","A","c","Aplus","Aminus","sqrtA2Alpha","peak2ndOrder","bandWidthScale","bandWidth","FrequencyResponse","real","imag","denom","analyze","filter","radiansPerSample","analyzeComplex","realZ1","imagZ1","realNum","imagNum","realDenom","imagDenom","realZ","imagZ","imagTemp","magnitude","angle","atan2","DynamicBiquadFilter","a1","a2","a1Delta","a2Delta","b0Delta","b1Delta","b2Delta","output1","output2","useMultiplicativeInputCoefficients","resetOutput","loadCoefficientsWithGradient","deltaRate","warpInfinityToNyquist","atan","FilterSettings","controlPoints","controlPointCount","addPoint","freqSetting","gainSetting","controlPoint","FilterControlPoint","filterArray","point","cutoffHz","getHz","getLinearGain","filterObject","freq","getRoundedSettingValueFromHz","gain","getRoundedSettingValueFromLinearGain","filtersCanMorph","filterA","filterB","lerpFilters","pos","lerpedFilter","convertLegacySettings","legacyCutoffSetting","legacyResonanceSetting","legacyEnv","legacyFilterMaxRadians","legacyFilterMax","resonant","firstOrder","cutoffAtMax","legacyFilterCutoffRange","envDecays","standardSampleRate","legacyHz","legacyRadians","extraOctaves","targetRadians","curvedHz","finalHz","getHzFromSettingValue","finalRadians","legacyFilter","legacyFilterGainAtNewRadians","logGain","convertedGain","intendedGain","invertedGain","curvedRadians","legacyFilterGain","convertLegacySettingsForSynth","allowFirstOrder","getSettingValueFromHz","hz","peakMult","power","neutral","interpolatedPower","toCoefficients","freqMult","getVolumeCompensationMult","octave","gainPow","freqRelativeTo8khz","warpedFreq","warpedOctave","distanceFromCenter","freqLoudness","EnvelopeSettings","isNoiseEnvelope","target","envelope","perEnvelopeSpeed","perEnvelopeLowerBound","perEnvelopeUpperBound","tempEnvelopeSpeed","tempEnvelopeLowerBound","tempEnvelopeUpperBound","steps","seed","waveform","discrete","pitchEnvelopeStart","pitchEnvelopeEnd","envelopeObject","isTremolo2","Boolean","Effect","wetDryMix","send","eqFilter","eqFilterType","eqFilterSimpleCut","eqFilterSimplePeak","eqSubFilters","pan","panDelay","panMode","aliases","distortion","bitcrusherFreq","bitcrusherQuantization","ringModulation","ringModulationHz","ringModWaveformIndex","ringModPulseWidth","ringModHzOffset","granular","grainSize","grainAmounts","grainRange","flanger","flangerSpeed","flangerDepth","flangerFeedback","chorus","reverb","echoSustain","echoDelay","echoPingPong","Operator","frequency","copy","other","CustomAlgorithm","fromPreset","carriers","modulation","preset","CustomFeedBack","inIndices","SpectrumWave","spectrum","hash","isHarmonic","markCustomWaveDirty","hashMult","HarmonicsWave","harmonics","Instrument","isUsingAdvancedLoopControls","chipWaveLoopStart","chipWaveLoopEnd","chipWaveLoopMode","chipWavePlayBackwards","chipWaveInStereo","chipNoise","noteFilter","noteFilterType","noteFilterSimpleCut","noteFilterSimplePeak","noteSubFilters","fadeIn","fadeOut","envelopeCount","transition","pitchShift","vibrato","vibratoDepth","vibratoSpeed","vibratoDelay","vibratoType","envelopeSpeed","unison","unisonVoices","unisonSpread","unisonOffset","unisonExpression","unisonSign","effectCount","mdeffects","chord","arpeggioSpeed","monoChordTone","fastTwoNoteArp","legacyTieOver","clicklessTransition","decimalOffset","supersawDynamism","supersawSpread","supersawShape","stringSustain","stringSustainType","algorithm","feedbackType","algorithm6Op","feedbackType6Op","customAlgorithm","customFeedbackType","feedbackAmplitude","customChipWave","customChipWaveIntegral","operators","harmonicsWave","drumsetEnvelopes","drumsetSpectrumWaves","modInstruments","modEnvelopeNumbers","invalidModulators","isNoiseInstrument","spectrumWave","wavePrev","setTypeAndReset","legacySettings","forceSimpleFilter","filterCutoff","legacyFilterEnv","filterEnvelope","legacyPulseEnv","pulseEnvelope","legacyOperatorEnvelopes","operatorEnvelopes","legacyFeedbackEnv","feedbackEnvelope","noCarriersControlledByNoteSize","allCarriersControlledByNoteSize","noteSizeControlsSomethingElse","addEnvelope","instrumentObject","noteSimpleCut","noteSimplePeak","getChord","getDrumsetEnvelope","operatorArray","operator","customFeedback","Float64Array","useSlowerRhythm","legacyGlobalReverb","transitionProperty","binary","fadeInSeconds","seamless","sudden","hard","smooth","soft","slide","chordProperty","legacyChordNames","harmony","unisonProperty","legacyChorusNames","union","fifths","octaves","potentialPitchShift","vibratoProperty","legacyVibratoNames","findIndex","legacyEnvelopeNames","steady","getEnvelope","drum","legacyWaveNames","triangle","square","sawtooth","spiky","plateau","modboxWaveNames","sax","guitar","viola","brass","lyre","piccolo","squaretooth","flatline","sandboxWaveNames","euphonium","recorder","contrabass","zefboxWaveNames","squaretal","sawtal","pulse","miscWaveNames","test1","intense","paandorasboxWaveNames","kick","snare","piano1","WOW","overdrive","trumpet","saxophone","orchestrahit","synth","sonic3snare","choir","overdriveguitar","flute","tuba","loopingcymbal","standardkick","standardsnare","closedhihat","foothihat","openhihat","crashcymbal","pianoC4","marimba","susdotwav","wackyboxtts","rawName","table","potentialChipWaveIndex","feedback6Op","synthboxLegacyFeedbacks","synthboxFeedbackType","operatorObject","newEffect","addEffect","filterCutoffMaxHz","filterCutoffRange","filterResonanceRange","LN2","legacyToCutoff","legacyToEnvelope","filterNames","oldFilterNames","envelopeArray","tempEnvelope","envelopeInverse","discreteEnvelope","getLargestControlPointCount","forNoteFilter","largest","effectIndex","frequencyFromPitch","removeEffect","effectsIncludeType","makeEmpty","supportsEnvelopeTarget","envelopeSettings","automationTarget","useControlPointCount","clearInvalidEnvelopeTargets","envelopeIndex","getTransition","getFadeInSeconds","getFadeOutTicks","Channel","patterns","bars","muted","visible","Deque","_capacity","_buffer","_mask","_offset","_count","pushFront","_expandCapacity","pushBack","popFront","popBack","peakFront","peakBack","count","remove","oldBuffer","navigator","userAgent","EditorConfig","valueToPreset","presetValue","categoryIndex","presetIndex","presetCategories","presets","midiProgramToPresetValue","program","category","generalMidi","midiProgram","nameToPresetValue","presetName","instrumentToPreset","encode32BitNumber","buffer","base64IntToCharCode","decode32BitNumber","compressed","charIndex","base64CharCodeToInt","charCodeAt","encodeUnisonSettings","v","cleanS","cleanSDivided","cleanO","cleanODivided","cleanE","cleanI","convertLegacyKeyToKeyAndOctave","rawKeyIndex","version","versionDisplayName","releaseNotesURL","isOnMac","platform","ctrlSymbol","ctrlName","customType","settings","isNoise","filterCutoffHz","dynamism","shape","eqSimpleCut","eqSimplePeak","isDrum","midiSubharmonicOctaves","bitcrusherOctave","eqSubFilters0","noteSubFilters0","noteSubFilters1","eqSubFilters1","drums","pitchShiftSemitones","echoDelayBeats","detuneCents","eqSubFilters4","noteSubFilters2","noteSubFilters4","pitchEnvelopeInverse","pitchEnvelopeStart0","pitchEnvelopeEnd0","envelopeInverse0","pitchEnvelopeStart1","pitchEnvelopeEnd1","envelopeInverse1","pitchEnvelopeStart2","pitchEnvelopeEnd2","envelopeInverse2","eqSubFilters2","eqSubFilters3","mods","ringMod","ringModHz","BitFieldReader","source","stopIndex","_bits","_readIndex","read","bitCount","readLongTail","minValue","minBits","numBits","readPartDuration","readLegacyPartDuration","readPinCount","readPitchInterval","BitFieldWriter","_index","write","writeLongTail","writePartDuration","writePinCount","writePitchInterval","encodeBase64","lengthBase64","Song","string","scaleCustom","channels","limitDecay","limitRise","compressionThreshold","limitThreshold","compressionRatio","limitRatio","masterGain","inVolumeCap","outVolumeCap","outVolumeCapL","outVolumeCapR","getNewNoteVolume","isMod","modChannel","modInstrument","vol","currentIndex","tempoIndex","tempo","chorusIndex","reverbIndex","gainIndex","panningIndex","panDelayIndex","distortionIndex","detuneIndex","vibratoDepthIndex","vibratoSpeedIndex","vibratoDelayIndex","arpSpeedIndex","bitCrushIndex","freqCrushIndex","echoIndex","echoDelayIndex","echoPingPongIndex","pitchShiftIndex","ringModIndex","ringModHertzIndex","granularIndex","grainAmountIndex","grainSizeIndex","grainRangeIndex","envSpeedIndex","perEnvSpeedIndex","perEnvLowerIndex","perEnvUpperIndex","instrumentIndex","getVolumeCap","modulator","cap","modSetting","filterType","fromBase64String","initToDefault","getChannelCount","modChannelCount","getMaxInstrumentsPerChannel","layeredInstruments","getMaxInstrumentsPerPattern","channelIndex","getChannelIsNoise","getChannelIsMod","andResetChannels","scale","loopStart","loopLength","barCount","patternsPerChannel","title","pattern","bar","toBase64String","bits","_variant","_latestSlarmoosBoxVersion","encodedSongTitle","encodeURIComponent","usingSubFilterBitfield","encodedChannelName","harmonicsBits","encodedLoopMode","encodedReleaseMode","spectrumBits","checkboxValues","neededBits","shapeBits","bitsPerNoteSize","getNeededBits","maxInstrumentsPerPattern","neededInstrumentCountBits","neededInstrumentIndexBits","neededModInstrumentIndexBits","modFilter","modEnvelope","status","octaveOffset","lastPitch","recentPitches","recentShapes","curPart","shapePart","startPitch","currentPitch","pitchBends","nextPitch","shapeString","String","fromCharCode","shapeIndex","unshift","pop","allPitches","pitchIndex","pitchIter","stringLength","digits","prototype","maxApplyArgs","customSamplesStr","customSamples","slice","_envelopeFromLegacyIndex","legacyIndex","_clearSamples","JSON","parse","substring","variantTest","fromBeepBox","fromJummBox","fromGoldBox","fromUltraBox","fromSlarmoosBox","fromTheepBox","_latestBeepboxVersion","_oldestBeepboxVersion","_latestJummBoxVersion","_oldestJummBoxVersion","_latestGoldBoxVersion","_oldestGoldBoxVersion","_latestUltraBoxVersion","_oldestUltraBoxVersion","_oldestSlarmoosBoxVersion","beforeTwo","beforeThree","beforeFour","beforeFive","beforeSix","beforeSeven","beforeEight","beforeNine","willLoadLegacySamplesForOldSongs","compressed_array","replaceAll","shift","_restoreChipWaveListToDefault","willLoadLegacySamples","willLoadNintariboxSamples","willLoadMarioPaintboxSamples","customSampleUrls","customSamplePresets","parseOldSyntax","_parseAndConfigureCustomSample","customSamplePresetsMap","legacySettingsCache","command","instrumentChannelIterator","instrumentIndexIterator","useSlowerArpSpeed","songNameLength","decodeURIComponent","channelCount","instrumentsPerChannel","instrumentsFlagBits","rhythmMap","newRhythm","instrumentType","legacyWaves","chipWaveReal","chipWaveCounter","typeCheck","originalControlPointCount","originalSubfilterControlPointCount","sampleLoopInfoEncodedLength","sampleLoopInfoEncoded","sampleLoopInfo","atob","entry","info","URL","pregoldToEnvelope","aa","sustainValue","legacyEffects","legacyEnvelopes","originalValue","unisonLength","unisonSpreadNegative","unisonOffsetNegative","unisonExpressionNegative","unisonSignNegative","legacyEffectTypes","bit","nextValue","restoreLimiterDefaults","channelNameLength","carrierCountTemp","tempModArray","chipWaveForCompat","freqToGold3","freqToUltraBox","jummToUltraEnvelope","slarURL3toURL4Envelope","envelopeDiscrete","updatedEnvelopes","pitchEnvelopeCompact","instrumentPitchEnvelopeStart","instrumentPitchEnvelopeEnd","instrumentEnvelopeInverse","pre3To3g","jummToG","byteCount","subStringLength","bitStringLength","largerChords","recentPitchBitLength","recentPitchLength","bitStringLengthLength","songReverbChannel","songReverbInstrument","songReverbIndex","shouldCorrectTempoMods","jummboxTempoMin","jumfive","modChannelLength","modInstrumentLength","detuneScaleNotes","newPattern","newNotes","noteCount","useOldShape","startOffset","pinCount","initialSize","bendCount","pinObj","intervalIter","noteIsForTempoMod","tempoOffset","isBackwards","restLength","patternIndex","lowestPart","chn","window","location","setTimeout","reload","_isProperUrl","defaultIntegratedSamplesL","defaultIntegratedSamplesR","defaultSamplesL","defaultSamplesR","customSampleUrlIndex","urlSliced","isCustomPercussive","customRootKey","presetIsUsingAdvancedLoopControls","presetChipWaveLoopStart","presetChipWaveLoopEnd","presetChipWaveStartOffset","presetChipWaveLoopMode","presetChipWavePlayBackwards","presetChipWaveInStereo","parsedSampleOptions","optionsStartIndex","optionsEndIndex","rawOptions","rawOption","optionCode","charAt","optionData","parsedUrl","sliceForSampleRate","sliceForRootKey","urlWithNamedOptions","namedOptions","pathname","isCustomSampled","rootKey","customSamplePresetSettings","customSamplePreset","enableIntro","loopCount","enableOutro","channelArray","instrumentArray","patternArray","sequenceArray","l","channelObject","sequence","_format","customScale","keyOctave","introBars","loopBars","ticksPerBeat","beatsPerMinute","songEq","jsonObject","shouldLoadLegacySamples","instrumentObjects","waveName","names","oldNames","veryOldNames","includes","oldScaleNames","enigma","scaleName","letter","toUpperCase","symbol","C","D","E","F","G","B","maxInstruments","maxPatterns","maxBars","newPitchChannels","newNoiseChannels","newModChannels","getPattern","getBeatsPerMinute","maxValue","ChannelState","singleSeamlessInstrument","factor","countBits","isPowerOf2","fullArrayLength","totalPasses","pass","subStride","midSubStride","stride","radiansIncrement","cosIncrement","sinIncrement","oscillatorMultiplier","startIndexA","midIndexA","startIndexB","midIndexB","realStartA","imagStartB","cPrev","sPrev","indexA0","indexA1","indexB0","indexB1","real0","real1","imag0","imag1","tempA","tempB","cTemp","sTemp","index1","index2","index3","imag2","imag3","finalShift","temp","reverseIndexBits","Grain","delayLinePosition","ageInSamples","maxAgeInSamples","parabolicEnvelopeAmplitude","parabolicEnvelopeSlope","parabolicEnvelopeCurve","rcbEnvelopeAmplitude","rcbEnvelopeAttackIndex","rcbEnvelopeReleaseIndex","rcbEnvelopeSustain","initializeParabolicEnvelope","durationInSamples","invDuration","invDurationSquared","updateParabolicEnvelope","initializeRCBEnvelope","updateRCBEnvelope","addDelay","EffectState","eqFilterVolume","eqFilterVolumeDelta","granularMix","granularMixDelta","granularDelayLineL","granularDelayLineR","granularDelayLineIndex","granularMaximumDelayTimeInSeconds","usesRandomGrainLocation","granularDelayLineDirty","computeGrains","ringModMix","ringModMixDelta","ringModPhase","ringModPhaseDelta","ringModPhaseDeltaScale","ringModMixFade","ringModMixFadeDelta","distortionDelta","distortionDrive","distortionDriveDelta","distortionFractionalInputL1","distortionFractionalInputL2","distortionFractionalInputL3","distortionFractionalInputR1","distortionFractionalInputR2","distortionFractionalInputR3","distortionPrevInputL","distortionPrevInputR","distortionNextOutputL","distortionNextOutputR","bitcrusherPrevInputL","bitcrusherPrevInputR","bitcrusherCurrentOutputL","bitcrusherCurrentOutputR","bitcrusherPhase","bitcrusherPhaseDelta","bitcrusherPhaseDeltaScale","bitcrusherScale","bitcrusherScaleScale","bitcrusherFoldLevel","bitcrusherFoldLevelScale","eqFiltersL","eqFiltersR","eqFilterCount","initialEqFilterInputL1","initialEqFilterInputR1","initialEqFilterInputL2","initialEqFilterInputR2","gainDelta","panningDelayLineL","panningDelayLineR","panningDelayPos","panningVolumeL","panningVolumeR","panningVolumeDeltaL","panningVolumeDeltaR","panningOffsetL","panningOffsetR","panningOffsetDeltaL","panningOffsetDeltaR","panningMode","flangerDelayLineL","flangerDelayLineR","flangerDelayLineDirty","flangerDelayPos","flangerDelta","flangerSpeedDelta","flangerDepthDelta","flangerFeedbackDelta","flangerPhase","chorusDelayLineL","chorusDelayLineR","chorusDelayLineDirty","chorusDelayPos","chorusPhase","chorusVoiceMult","chorusVoiceMultDelta","chorusCombinedMult","chorusCombinedMultDelta","echoDelayLineL","echoDelayLineR","echoDelayLineDirty","echoDelayPosL","echoDelayPosR","echoDelayOffsetStart","echoDelayOffsetEnd","echoDelayOffsetRatio","echoDelayOffsetRatioDelta","echoMult","echoMultDelta","echoShelfA1","echoShelfB0","echoShelfB1","echoShelfSampleL","echoShelfSampleR","echoShelfPrevInputL","echoShelfPrevInputR","reverbDelayLine","reverbDelayLineDirty","reverbDelayPos","reverbMult","reverbMultDelta","reverbShelfA1","reverbShelfB0","reverbShelfB1","reverbShelfSample0","reverbShelfSample1","reverbShelfSample2","reverbShelfSample3","reverbShelfPrevInput0","reverbShelfPrevInput1","reverbShelfPrevInput2","reverbShelfPrevInput3","granularGrains","granularMaximumGrains","granularGrainsLength","allocateNecessaryBuffers","samplesPerTick","panningDelayBufferSize","chorusDelayBufferSize","flangerDelayBufferSize","allocateEchoBuffers","granularDelayLineSizeInSeconds","granularDelayLineSizeInSamples","samplesPerSecond","oldGrainsLength","safeEchoDelayBufferSize","newDelayLineL","newDelayLineR","oldMask","deactivate","compute","instrumentState","roundedSamplesPerTick","tone","envelopeStarts","envelopeEnds","usesGranular","usesRingModulation","usesDistortion","usesBitcrusher","usesGain","usesPanning","usesFlanger","usesChorus","usesEcho","usesReverb","usesEQFilter","isModActive","getModValue","granularMixEnd","iterations","granularMinGrainSizeInMilliseconds","granularGrainSizeInSeconds","granularGrainSizeInSamples","granularDelayLineLength","grainIndex","grain","minDelayTimeInSeconds","maxDelayTimeInSeconds","useDistortionStart","useDistortionEnd","distortionSliderStart","distortionSliderEnd","distortionStart","distortionEnd","distortionDriveStart","distortionDriveEnd","freqSettingStart","freqSettingEnd","quantizationSettingStart","quantizationSettingEnd","freqStart","freqEnd","phaseDeltaStart","phaseDeltaEnd","scaleStart","scaleEnd","foldLevelStart","foldLevelEnd","eqFilterSettingsStart","eqFilterSettingsEnd","startPoint","startSimpleFreq","startSimpleGain","endSimpleFreq","endSimpleGain","filterChanges","endPoint","Synth","tempFilterStartCoefficients","tempFilterEndCoefficients","eqFilterSettings","tmpEqFilterStart","tmpEqFilterEnd","eqFilterVolumeStart","eqFilterVolumeEnd","panEnvelopeStart","panEnvelopeEnd","usePanStart","usePanEnd","panStart","panEnd","volumeStartL","volumeStartR","volumeEndL","volumeEndR","maxDelaySamples","usePanDelayStart","usePanDelayEnd","delayStart","delayEnd","delayStartL","delayStartR","delayEndL","delayEndR","gainEnvelopeStart","gainEnvelopeEnd","useGainStart","useGainEnd","gainStart","gainEnd","chorusEnvelopeStart","chorusEnvelopeEnd","useChorusStart","useChorusEnd","chorusStart","chorusEnd","chorusCombinedMultStart","chorusCombinedMultEnd","flangerEnvelopeStart","flangerEnvelopeEnd","useFlangerStart","useFlangerEnd","flangerStart","flangerEnd","flangerSpeedEnvelopeStart","flangerSpeedEnvelopeEnd","useFlangerSpeedStart","useFlangerSpeedEnd","flangerSpeedStart","flangerSpeedEnd","flangerDepthEnvelopeStart","flangerDepthEnvelopeEnd","useFlangerDepthStart","useFlangerDepthEnd","flangerDepthStart","flangerDepthEnd","flangerFeedbackEnvelopeStart","flangerFeedbackEnvelopeEnd","useFlangerFeedbackStart","useFlangerFeedbackEnd","flangerFeedbackStart","flangerFeedbackEnd","useRingModStart","useRingModEnd","useRingModEnvelopeStart","useRingModEnvelopeEnd","useRingModHzStart","useRingModHzEnd","useRingModHzEnvelopeStart","useRingModHzEnvelopeEnd","ringModStart","ringModEnd","ringModPhaseDeltaStart","ringModPhaseDeltaEnd","maxEchoMult","averageEchoDelaySeconds","echoSustainEnvelopeStart","echoSustainEnvelopeEnd","useEchoSustainStart","useEchoSustainEnd","echoMultStart","echoMultEnd","echoDelayEnvelopeStart","echoDelayEnvelopeEnd","useEchoDelayStart","useEchoDelayEnd","tmpEchoDelayOffsetStart","tmpEchoDelayOffsetEnd","shelfRadians","maxReverbMult","reverbEnvelopeStart","reverbEnvelopeEnd","useReverbStart","useReverbEnd","reverbStart","reverbEnd","tonesAddedInThisTick","flushingDelayLines","totalDelaySamples","attenuationThreshold","halfLifeMult","delayDuration","attenuationPerSecond","echoDuration","averageMult","averageReverbDelaySeconds","reverbDuration","PRIME32_1","PRIME32_2","PRIME32_3","PRIME32_4","PRIME32_5","encoder","xxHash32","input","TextEncoder","encode","acc","accN","limit","lane","laneN0","laneN1","laneNP","acc0","acc1","EnvelopeComputer","noteSecondsStart","noteSecondsStartUnscaled","noteSecondsEnd","noteSecondsEndUnscaled","noteTicksStart","noteTicksEnd","noteSizeStart","noteSizeEnd","prevNoteSize","nextNoteSize","_noteSizeFinal","prevNoteSecondsStart","prevNoteSecondsStartUnscaled","prevNoteSecondsEnd","prevNoteSecondsEndUnscaled","prevNoteTicksStart","prevNoteTicksEnd","_prevNoteSizeFinal","tickTimeEnd","drumsetFilterEnvelopeStart","drumsetFilterEnvelopeEnd","prevSlideStart","prevSlideEnd","nextSlideStart","nextSlideEnd","prevSlideRatioStart","prevSlideRatioEnd","nextSlideRatioStart","nextSlideRatioEnd","startPinTickAbsolute","startPinTickDefaultPitch","startPinTickPitch","_modifiedEnvelopeIndices","_modifiedEnvelopeCount","lowpassCutoffDecayVolumeCompensation","computeEnvelopes","currentPart","tickTimeStart","tickTimeStartReal","secondsPerTick","timeScale","secondsPerTickUnscaled","atNoteStart","forceContinueAtStart","tickTimeEndReal","beatsPerTick","beatTimeStart","beatTimeEnd","passedEndOfNote","startPin","endPin","startPinTick","computeTicksSinceStart","getPitchValue","endPinTick","ratioStart","ratioEnd","noteStartTick","noteStartPart","noteEndTick","noteEndPart","maximumSlideTicks","prevNote","nextNote","forceContinueAtEnd","usedNoteSize","targetIndex","isDiscrete","globalEnvelopeSpeed","timeSinceStart","defaultPitch","secondsPerTickScaled","computePitchEnvelope","envelopeStart","computeEnvelope","envelopeEnd","filterSettings","tmpNoteFilterStart","getLowpassCutoffDecayVolumeCompensation","clearEnvelopes","unspedTime","beats","noteSize","isDrumset","notePinStart","boundAdjust","noteSizeToVolumeMult","hashMax","timeHash","pitchHash","noteHash","weightedAverage","trap","saw","tri","attack","lin","calculateBends","monophonic","arpTime","tonePitch","lastInterval","startNote","endNote","envelopeLowerBound","envelopeUpperBound","range","computeDrumsetEnvelopes","drumsetFilterEnvelope","beatsPerPart","partTimeStart","partTimeEnd","computeDrumsetEnvelope","SpectrumWaveState","_hash","getCustomWave","lowestOctave","pitchTweak","controlPointToOctave","value1","value2","octave1","octave2","HarmonicsWaveState","_generatedForType","combinedControlPointAmplitude","harmonicIndex","harmonicFreq","controlValue","normalizedValue","performIntegralOld","PickedString","delayLine","allPassG","allPassGDelta","sustainFilterA1","sustainFilterA1Delta","sustainFilterA2","sustainFilterA2Delta","sustainFilterB0","sustainFilterB0Delta","sustainFilterB1","sustainFilterB1Delta","sustainFilterB2","sustainFilterB2Delta","delayIndex","allPassSample","allPassPrevInput","sustainFilterSample","sustainFilterPrevOutput2","sustainFilterPrevInput1","sustainFilterPrevInput2","fractionalDelaySample","prevDelayLength","delayResetOffset","update","stringIndex","stringDecayStart","stringDecayEnd","sustainType","allPassCenter","phaseDeltas","phaseDeltaScale","phaseDeltaScales","radiansPerSampleStart","radiansPerSampleEnd","centerHarmonicStart","centerHarmonicEnd","allPassRadiansStart","allPassRadiansEnd","decayCurveStart","decayCurveEnd","register","registerShelfCenter","registerLowpassCenter","decayRateStart","decayRateEnd","expressionDecayStart","expressionDecayEnd","tempFrequencyResponse","allPassGStart","allPassPhaseDelayStart","allPassGEnd","allPassPhaseDelayEnd","brightnessType","shelfGainStart","shelfGainEnd","cornerHardness","lowpass1stOrderCutoffRadiansStart","lowpass1stOrderCutoffRadiansEnd","lowpass2ndOrderCutoffRadiansStart","lowpass2ndOrderCutoffRadiansEnd","lowpass2ndOrderGainStart","lowpass2ndOrderGainEnd","sustainFilterA1Start","sustainFilterA2Start","sustainFilterB0Start","sustainFilterB1Start","sustainFilterB2Start","sustainFilterPhaseDelayStart","sustainFilterA1End","sustainFilterA2End","sustainFilterB0End","sustainFilterB1End","sustainFilterB2End","sustainFilterPhaseDelayEnd","periodLengthStart","periodLengthEnd","minBufferLength","delayLength","delayLengthEnd","delayLengthDelta","pitchChanged","reinitializeImpulse","likelyMaximumLength","newDelayLine","oldDelayBufferMask","startCopyingFromIndex","delayBufferMask","startImpulseFrom","startZerosFrom","stopZerosAt","impulseWave","waveL","impulseWaveLength","impulsePhaseDelta","fadeDuration","startImpulseFromSample","stopImpulseAt","stopImpulseAtSample","impulsePhase","prevWaveIntegral","impulsePhaseInt","nextWaveIntegral","phaseRatio","sample","combinedFade","curvedFade","InstrumentState","awake","computed","deactivateAfterThisTick","attentuationProgress","flushedSamples","activeTones","activeModTones","releasedTones","liveInputTones","synthesizer","waveR","isStereo","noisePitchFilterMult","volumeScale","vibratoTime","nextVibratoTime","envelopeTime","mixVolume","mixVolumeDelta","delayInputMult","delayInputMultDelta","envelopeComputer","resetAllEffects","getInstrumentSynthFunction","updateWaves","getTicksIntoBar","getCurrentPart","envelopeSpeeds","useEnvelopeSpeed","isInteger","instrumentVolumeToVolumeMult","mixVolumeEnd","startVal","endVal","delayInputMultStart","delayInputMultEnd","progressInTick","progressAtEndOfTick","_drumsetIndexToSpectrumOctave","getDrumsetWave","drumsetIndexReferenceDelta","events","activeEvents","listeners","raise","eventType","eventData","extraEventData","listen","callback","unlisten","lisen","unlistenAll","epsilon","Tone","fill","chordSize","drumsetPitch","prevNotePitchIndex","nextNotePitchIndex","freshlyAllocated","isOnLastTick","ticksSinceReleased","liveInputSamplesHeld","noiseSample","noiseSampleA","noiseSampleB","stringSustainStart","stringSustainEnd","noiseSamples","phases","directions","chipWaveCompletions","chipWavePrevWavesL","chipWavePrevWavesR","chipWaveCompletionsLastWaveL","chipWaveCompletionsLastWaveR","expressionDelta","operatorExpressions","operatorExpressionDeltas","prevPitchExpressions","prevVibrato","prevStringDecay","pulseWidthDelta","supersawDynamismDelta","supersawUnisonDetunes","supersawShapeDelta","supersawDelayLength","supersawDelayLengthDelta","supersawDelayLine","supersawDelayIndex","supersawPrevPhaseDelta","pickedStrings","noteFiltersL","noteFiltersR","noteFilterCount","initialNoteFilterInputL1","initialNoteFilterInputR1","initialNoteFilterInputL2","initialNoteFilterInputR2","specialIntervalExpressionMult","feedbackOutputs","feedbackMult","feedbackDelta","stereoVolumeLStart","stereoVolumeRStart","stereoVolumeLDelta","stereoVolumeRDelta","stereoDelayStart","stereoDelayEnd","stereoDelayDelta","customVolumeStart","customVolumeEnd","filterResonanceStart","filterResonanceDelta","isFirstOrder","pickedString","syncSongState","channelState","initModFilters","tmpNoteFilterEnd","warmUpSynthesizer","getSamplesPerTick","dummyArray","isPlayingSong","synthesize","computeLatestModValues","latestModTimes","latestModInsTimes","modValues","nextModValues","modInsValues","nextModInsValues","heldMods","beat","currentBar","instrumentIdx","latestPinParts","latestPinValues","partsInBar","findPartsInBar","pinIdx","transitionLength","toNextBarLength","deltaVolume","songFilterParam","tgtSong","setModValue","usedChannels","usedInstruments","tgtPattern","eqFilterParam","noteFilterParam","modulatorAdjust","tgtInstrument","tgtEffect","determineInvalidModulators","tgtInstrumentList","str","operatorAmplitudeCurve","playing","recording","isRecording","playheadInternal","remainder","tickSampleCountdown","isAtStartOfTick","prevBar","getSamplesPerBar","getTotalSamples","loop","startBar","endBar","hasTempoMods","hasNextBarMods","prevTempo","latestTempoPin","latestTempoValue","ended","foundMod","find","sort","getSamplesPerTickSpecificBPM","tickLength","prevPinTempo","currPinTempo","bpmScalar","getTotalBars","useLoopCount","loopRepeatCount","preferLowerLatency","anticipatePoorPerformance","liveInputDuration","liveBassInputDuration","liveInputStarted","liveBassInputStarted","liveInputPitches","liveBassInputPitches","liveInputChannel","liveBassInputChannel","liveInputInstruments","liveBassInputInstruments","oscRefreshEventTimer","oscEnabled","enableMetronome","countInMetronome","renderingSong","wantToSkip","nextBar","isAtEndOfTick","liveInputEndTime","browserAutomaticallyClearsAudioBuffer","tempDrumSetControlPoint","loopBarStart","loopBarEnd","tonePool","tempMatchedPitchTones","startedMetronome","metronomeSamplesRemaining","metronomeAmplitude","metronomePrevAmplitude","metronomeFilter","songEqFilterVolume","songEqFilterVolumeDelta","songEqFiltersL","songEqFiltersR","songEqFilterCount","initialSongEqFilterInput1L","initialSongEqFilterInput2L","initialSongEqFilterInput1R","initialSongEqFilterInput2R","tempInstrumentSampleBufferL","tempInstrumentSampleBufferR","audioCtx","scriptNode","audioProcessCallback","audioProcessingEvent","outputBuffer","outputDataL","outputDataR","performance","now","deactivateAudio","computeDelayBufferSizes","setSong","panningDelayBufferMask","flangerDelayBufferMask","chorusDelayBufferMask","activateAudio","bufferSize","latencyHint","webkitAudioContext","createScriptProcessor","createJavaScriptNode","onaudioprocess","channelCountMode","channelInterpretation","connect","destination","resume","disconnect","maintainLiveInput","play","pause","startRecording","resetEffects","freeAllTones","volumeStart","volumeEnd","nextVal","isAnyModActive","unsetMod","isFilterModActive","channelIdx","forceHoldMods","found","holdFor","snapToStart","snapToBar","goToBar","jumpIntoLoop","oldBar","goToNextBar","goToPrevBar","getNextBar","skipBar","computeSongState","outputBufferLength","playSong","skippedBars","firstSkippedBufferIndex","bufferIndex","samplesLeftInBuffer","samplesLeftInTick","runLength","runEnd","determineCurrentActiveTones","playModTone","barVisited","determineLiveInputTones","tonesPlayedInThisInstrument","freeReleasedTone","shouldFadeOutFast","computeTone","playTone","effectsSynth","startRatio","endRatio","ticksIntoBar","partTimeTickStart","partTimeTickEnd","useVibratoSpeed","midBeat","periods","samplesPerPeriod","tempAmplitude","filtersL","filtersR","filterCount","initialFilterInput1L","initialFilterInput2L","initialFilterInput1R","initialFilterInput2R","applyFilters","inputSampleL","sampleL","inputSampleR","sampleR","sanitizeFilters","absL","absR","limitRange","limitTarget","limitedVolume","arpEnvelopeStart","useArpeggioSpeed","effectIdx","maxInstrumentsPerChannel","isFinite","freeTone","newTone","releaseTone","toneIndex","bassPitches","toneList","toneCount","moveTonesIntoOrderedTempMatchedList","clearTempMatchedPitchTones","adjacentPatternHasCompatibleInstrumentTransition","otherPattern","otherNote","forceContinue","otherInstrument","otherTransition","adjacentNotesHaveMatchingPitches","firstNote","secondNote","firstNoteInterval","notePitches","currentTick","prevNotes","nextNotes","fillCount","modToneCount","newInstrumentIndex","sourceInstrumentState","destInstrumentState","prevNoteForThisInstrument","nextNoteForThisInstrument","oldTone","partsPerBar","tonesInPrevNote","tonesInNextNote","prevPattern","lastNote","patternForcesContinueAtStart","chordOfCompatibleInstrument","nextPattern","nextPatternForcesContinueAtStart","strumOffsetParts","prevNoteForThisTone","noteForThisTone","nextNoteForThisTone","released","modSynth","computeChordExpression","chordExpression","intervalScale","secondsPerPart","sampleTime","specialIntervalMult","toneIsOnLastTick","intervalStart","intervalEnd","fadeExpressionStart","fadeExpressionEnd","chordExpressionStart","chordExpressionEnd","expressionReferencePitch","baseExpression","pitchDamping","chipWaveLength","firstOffset","lastOffset","getOperatorWave","startTicksSinceReleased","endTicksSinceReleased","pinStart","pinEnd","noteTicksPassedTickStart","noteTicksPassedTickEnd","pinRatioStart","pinRatioEnd","noteLengthTicks","tmpNoteFilter","noteFilterSettingsStart","noteFilterSettingsEnd","intervalDiff","chordSizeDiff","pitchShiftScalarStart","pitchShiftScalarEnd","modDetuneStart","modDetuneEnd","vibratoAmplitudeStart","vibratoAmplitudeEnd","vibratoStart","POSITIVE_INFINITY","getLFOAmplitude","ticksUntilVibratoStart","vibratoLfoEnd","vibratoDepthEnvelopeEnd","vibratoEnd","ticksUntilVibratoEnd","noteFilterExpression","noteAllFreqsEnvelopeStart","noteAllFreqsEnvelopeEnd","noteFreqEnvelopeStart","noteFreqEnvelopeEnd","notePeakEnvelopeStart","notePeakEnvelopeEnd","noteFilterSettings","drumsetEnvelopeComputer","sineExpressionBoost","totalCarrierExpression","arpeggioInterval","isMono","associatedCarrierIndex","pitchStart","pitchEnd","baseFreqStart","baseFreqEnd","targetFreqStart","targetFreqEnd","freqEnvelopeStart","freqEnvelopeEnd","amplitudeStart","amplitudeEnd","amplitudeCurveStart","amplitudeCurveEnd","expressionStart","expressionEnd","pitchExpressionStart","pitchExpressionEnd","useFeedbackAmplitudeStart","useFeedbackAmplitudeEnd","feedbackAmplitudeStart","feedbackAmplitudeEnd","feedbackStart","feedbackEnd","freqEndRatio","basePhaseDeltaScale","intervalOffset","endPitch","settingsExpressionMult","basePulseWidth","pulseWidthModStart","pulseWidthModEnd","pulseWidthStart","pulseWidthEnd","decimalOffsetModStart","decimalOffsetStart","useSustainStart","useSustainEnd","startFreq","unisonEnvelopeStart","unisonEnvelopeEnd","unisonStartA","unisonEndA","divisor","unisonStart","unisonEnd","supersawExpressionStart","supersawExpressionEnd","minFirstVoiceAmplitude","useDynamismStart","useDynamismEnd","curvedDynamismStart","curvedDynamismEnd","firstVoiceAmplitudeStart","firstVoiceAmplitudeEnd","dynamismStart","dynamismEnd","initializeSupersaw","accumulator","normalizedPhase","zeroCrossingPhase","prevDrop","nextDrop","phaseDelta","distanceToZeroCrossing","swappedIndex","baseSpreadSlider","useSpreadStart","useSpreadEnd","averageSpreadSlider","curvedSpread","baseShape","useShapeStart","useShapeEnd","shapeStart","shapeEnd","delayLengthStart","pulseExpressionRatio","sustainEnvelopeStart","sustainEnvelopeEnd","secondsIntoBar","vibratoPeriodSeconds","fingerprint","fmSynthFunctionCache","synthSource","line","fmSourceTemplate","outputs","operatorLine","operatorSourceTemplate","modulatorNumber","feedbackIndices","wrappedFmSynth","Function","loopableChipSynth","chipSynth","harmonicsSynth","pulseWidthSynth","supersawSynth","pickedStringSynth","noiseSynth","spectrumSynth","drumsetSynth","fm6SynthFunctionCache","wrappedFm6Synth","wrap","dataL","dataR","chipWaveLoopLength","phaseDeltaA","phaseDeltaB","directionA","directionB","chipWaveCompletionA","chipWaveCompletionB","lastWaveLA","lastWaveLB","lastWaveRA","lastWaveRB","chipWaveCompletionFadeLength","phaseDeltaScaleA","phaseDeltaScaleB","phaseA","phaseB","prevWaveIntegralLA","prevWaveIntegralLB","prevWaveIntegralRA","prevWaveIntegralRB","phaseAInt","phaseBInt","indexA","indexB","phaseRatioA","phaseRatioB","initialFilterInputL1","initialFilterInputR1","initialFilterInputL2","initialFilterInputR2","prevWaveLA","prevWaveLB","prevWaveRA","prevWaveRB","sampleIndex","wrapped","waveLA","waveLB","waveRA","waveRB","completionFadeA","completionFadeB","nextWaveIntegralLA","nextWaveIntegralLB","nextWaveIntegralRA","nextWaveIntegralRB","pwila","pwilb","pwira","pwirb","phaseA_","phaseB_","outputL","outputR","data","filters","initialFilterInput1","initialFilterInput2","prevWaveIntegralA","prevWaveIntegralB","nextWaveIntegralA","nextWaveIntegralB","waveA","waveB","inputSample","output","voiceCount","pickedStringFunction","pickedStringFunctionCache","pickedStringSource","sampleList","voice","lines","usesEqFilter","signature","toString","effectsFunction","effectsFunctionCache","effectsSource","usesDelays","effectState","sawPhaseA","sawPhaseB","sawPhaseC","sawPhaseD","pulseWaveA","pulseWaveB","t","dynamismDelta","unisonDetunes","shapeDelta","phase","supersawSample","detunedPhaseDelta","delaySampleTime","lowerIndex","upperIndex","delayRatio","prevDelaySample","phaseMask","pitchRelativefilterA","pitchRelativefilterB","samplesInPeriod","findRandomZeroCrossing","waveSampleA","waveSampleB","referenceDelta","phaseInt","stereoBufferIndex","envelopeTarget","tgtInstrumentState","dotTarget","lerpEndRatio","bound","indexPrev","attemptsRemaining","indexNext","waveNext","innerIndexNext","innerWaveNext","instrumentVolume","volumeMultToInstrumentVolume","volumeMult","volumeMultToNoteSize","beatsPerSecond","partsPerSecond","tickPerSecond","sanitizeDelayLine","lastIndex","mask","input1","input2","ofBar","button","div","h1","canvas","svg","circle","rect","path","isMobile","colorTheme","getLocalStorage","animationRequest","prevHash","id","pauseButtonDisplayed","zoomEnabled","timelineWidth","outVolumeHistoricTimer","outVolumeHistoricCap","oscilloscope","_EventUpdateCanvas","directlinkL","directlinkR","ctx","getContext","fillStyle","fillRect","width","height","yl","yr","display","titleText","editLink","copyLink","href","shareLink","fullscreenLink","draggingPlayhead","playButton","playButtonContainer","loopIcon","d","loopButton","viewBox","volumeIcon","volumeSlider","zoomIcon","cx","cy","stroke","zoomButton","timeline","timelineContainer","visualizationContainer","noteFlashElementsPerBar","currentNoteFlashElements","currentNoteFlashBar","notesFlashWhenPlayed","fixChannelColorOrder","outVolumeBarBg","outVolumeBar","stop1","stop","stop2","stop3","gradient","linearGradient","gradientUnits","defs","volumeBarContainer","preserveAspectRatio","setLocalStorage","setItem","removeFromUnorderedArray","lastElement","loadSong","songString","reuseParams","updatedSongString","hashUpdatedExternally","myHash","parameter","equalsIndex","paramName","renderLoopIcon","renderTimeline","body","pauseIfAnotherPlayerStartsHandle","pauseIfAnotherPlayerStarts","clearInterval","storedPlayerId","onTogglePlay","renderPlayhead","animate","requestAnimationFrame","volumeUpdate","renderPlayButton","useOutVolumeCap","historicOutCap","cancelAnimationFrame","setInterval","onToggleLoop","onToggleZoom","renderZoomIcon","onTimelineMouseMove","preventDefault","onTimelineCursorMove","clientX","pageX","onTimelineTouchMove","touches","mouseX","boundingRect","getBoundingClientRect","left","right","onTimelineCursorUp","setSynthVolume","scrollLeft","playheadBar","modPlayhead","noteFlashElementsForThisBar","outsideOfCurrentBar","getAttribute","isInvisible","opacity","noteStart","noteEnd","noteBar","dist","innerHTML","timelineHeight","windowOctaves","windowPitchCount","semitoneHeight","targetBeatWidth","targetSemitoneHeight","barWidth","partWidth","wavePitchHeight","drumPitchHeight","noteFlashColor","noteFlashColorSecondary","pitchHeight","configuredOctaveScroll","offsetY","offsetX","drawNote","noteElement","dflash","noteFlashElement","radius","classList","add","onCopyClicked","nav","clipboard","writeText","prompt","textField","select","succeeded","execCommand","top","self","keyCode","shiftKey","ctrlKey","shortenerStrategy","open","shortenUrl","share"],"sources":["../../build/synth/SynthConfig.js","../../node_modules/.pnpm/imperative-html@0.1.2/node_modules/imperative-html/dist/esm/elements-base.js","../../node_modules/.pnpm/imperative-html@0.1.2/node_modules/imperative-html/dist/esm/elements-strict.js","../../build/editor/ColorConfig.js","../../build/synth/utils.js","../../build/synth/Pattern.js","../../build/synth/filtering.js","../../build/synth/Filter.js","../../build/synth/Envelope.js","../../build/synth/Effect.js","../../build/synth/Instrument.js","../../build/synth/Channel.js","../../build/synth/Deque.js","../../build/editor/EditorConfig.js","../../build/synth/Song.js","../../build/synth/ChannelState.js","../../build/synth/FFT.js","../../build/synth/EffectState.js","../../node_modules/.pnpm/js-xxhash@4.0.0/node_modules/js-xxhash/dist/esm/xxHash32.js","../../build/synth/EnvelopeComputer.js","../../build/synth/InstrumentState.js","../../build/global/Events.js","../../build/synth/synth.js","../../build/player/main.js","../../build/global/Oscilloscope.js"],"sourcesContent":["/*!\nCopyright (c) 2012-2022 John Nesky and contributing authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nexport const TypePresets = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"pulse width\", \"picked string\", \"supersaw\", \"chip (custom)\", \"mod\", \"FM (6-op)\"];\nexport function getSampleLoadingStatusName(status) {\n    switch (status) {\n        case 0: return \"loading\";\n        case 1: return \"loaded\";\n        case 2: return \"error\";\n    }\n}\nexport class SampleLoadingState {\n    constructor() {\n        this.statusTable = {};\n        this.urlTable = {};\n        this.totalSamples = 0;\n        this.samplesLoaded = 0;\n    }\n}\nexport const sampleLoadingState = new SampleLoadingState();\nexport class SampleLoadedEvent extends Event {\n    constructor(totalSamples, samplesLoaded) {\n        super(\"sampleloaded\");\n        this.totalSamples = totalSamples;\n        this.samplesLoaded = samplesLoaded;\n    }\n}\nexport class SampleLoadEvents extends EventTarget {\n    constructor() {\n        super();\n    }\n}\nexport const sampleLoadEvents = new SampleLoadEvents();\nexport function startLoadingSample(url, chipWaveIndex, presetSettings, rawLoopOptions, customSampleRate) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const sampleLoaderAudioContext = new AudioContext({ sampleRate: customSampleRate });\n        let closedSampleLoaderAudioContext = false;\n        const chipWave = Config.chipWaves[chipWaveIndex];\n        const rawChipWave = Config.rawChipWaves[chipWaveIndex];\n        const rawRawChipWave = Config.rawRawChipWaves[chipWaveIndex];\n        if (OFFLINE) {\n            if (url.slice(0, 5) === \"file:\") {\n                const dirname = yield getDirname();\n                const joined = yield pathJoin(dirname, url.slice(5));\n                url = joined;\n            }\n        }\n        fetch(url).then((response) => {\n            if (!response.ok) {\n                sampleLoadingState.statusTable[chipWaveIndex] = 2;\n                return Promise.reject(new Error(\"Couldn't load sample\"));\n            }\n            return response.arrayBuffer();\n        }).then((arrayBuffer) => {\n            return sampleLoaderAudioContext.decodeAudioData(arrayBuffer);\n        }).then((audioBuffer) => {\n            const samples = centerWave(Array.from(audioBuffer.getChannelData(0)));\n            var samplesR = samples;\n            if (audioBuffer.numberOfChannels > 1)\n                samplesR = centerWave(Array.from(audioBuffer.getChannelData(1)));\n            else\n                samplesR = samples;\n            const integratedSamples = performIntegral(samples);\n            const integratedSamplesR = performIntegral(samplesR);\n            chipWave.samples = integratedSamples;\n            chipWave.samplesR = integratedSamplesR;\n            rawChipWave.samples = samples;\n            rawChipWave.samplesR = samplesR;\n            rawRawChipWave.samples = samples;\n            rawRawChipWave.samplesR = samplesR;\n            if (rawLoopOptions[\"isUsingAdvancedLoopControls\"]) {\n                presetSettings[\"chipWaveLoopStart\"] = rawLoopOptions[\"chipWaveLoopStart\"] != null ? rawLoopOptions[\"chipWaveLoopStart\"] : 0;\n                presetSettings[\"chipWaveLoopEnd\"] = rawLoopOptions[\"chipWaveLoopEnd\"] != null ? rawLoopOptions[\"chipWaveLoopEnd\"] : samples.length - 1;\n                presetSettings[\"chipWaveLoopMode\"] = rawLoopOptions[\"chipWaveLoopMode\"] != null ? rawLoopOptions[\"chipWaveLoopMode\"] : 0;\n                presetSettings[\"chipWavePlayBackwards\"] = rawLoopOptions[\"chipWavePlayBackwards\"];\n                presetSettings[\"chipWaveStartOffset\"] = rawLoopOptions[\"chipWaveStartOffset\"] != null ? rawLoopOptions[\"chipWaveStartOffset\"] : 0;\n            }\n            sampleLoadingState.samplesLoaded++;\n            sampleLoadingState.statusTable[chipWaveIndex] = 1;\n            sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(sampleLoadingState.totalSamples, sampleLoadingState.samplesLoaded));\n            if (!closedSampleLoaderAudioContext) {\n                closedSampleLoaderAudioContext = true;\n                sampleLoaderAudioContext.close();\n            }\n        }).catch((error) => {\n            sampleLoadingState.statusTable[chipWaveIndex] = 2;\n            alert(\"Failed to load \" + url + \":\\n\" + error);\n            if (!closedSampleLoaderAudioContext) {\n                closedSampleLoaderAudioContext = true;\n                sampleLoaderAudioContext.close();\n            }\n        });\n    });\n}\nexport function getLocalStorageItem(key, defaultValue) {\n    let value = localStorage.getItem(key);\n    if (value == null || value === \"null\" || value === \"undefined\") {\n        value = defaultValue;\n    }\n    return value;\n}\nfunction loadScript(url) {\n    const result = new Promise((resolve, reject) => {\n        if (!Config.willReloadForCustomSamples) {\n            const script = document.createElement(\"script\");\n            script.src = url;\n            document.head.appendChild(script);\n            script.addEventListener(\"load\", (event) => {\n                resolve();\n            });\n        }\n        else {\n        }\n    });\n    return result;\n}\nexport function loadBuiltInSamples(set) {\n    const defaultIndex = 0;\n    const defaultIntegratedSamples = Config.chipWaves[defaultIndex].samples;\n    const defaultSamples = Config.rawRawChipWaves[defaultIndex].samples;\n    if (set == 0) {\n        const chipWaves = [\n            { name: \"paandorasbox kick\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"paandorasbox snare\", expression: 3.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"paandorasbox piano1\", expression: 3.0, isSampled: true, isPercussion: false, extraSampleDetune: 2 },\n            { name: \"paandorasbox WOW\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\n            { name: \"paandorasbox overdrive\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -2 },\n            { name: \"paandorasbox trumpet\", expression: 3.0, isSampled: true, isPercussion: false, extraSampleDetune: 1.2 },\n            { name: \"paandorasbox saxophone\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -5 },\n            { name: \"paandorasbox orchestrahit\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 4.2 },\n            { name: \"paandorasbox detatched violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 4.2 },\n            { name: \"paandorasbox synth\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -0.8 },\n            { name: \"paandorasbox sonic3snare\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"paandorasbox come on\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\n            { name: \"paandorasbox choir\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -3 },\n            { name: \"paandorasbox overdriveguitar\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -6.2 },\n            { name: \"paandorasbox flute\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -6 },\n            { name: \"paandorasbox legato violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -28 },\n            { name: \"paandorasbox tremolo violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -33 },\n            { name: \"paandorasbox amen break\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -55 },\n            { name: \"paandorasbox pizzicato violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -11 },\n            { name: \"paandorasbox tim allen grunt\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -20 },\n            { name: \"paandorasbox tuba\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 44 },\n            { name: \"paandorasbox loopingcymbal\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -17 },\n            { name: \"paandorasbox standardkick\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -7 },\n            { name: \"paandorasbox standardsnare\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"paandorasbox closedhihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 5 },\n            { name: \"paandorasbox foothihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 4 },\n            { name: \"paandorasbox openhihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -31 },\n            { name: \"paandorasbox crashcymbal\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -43 },\n            { name: \"paandorasbox pianoC4\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -42.5 },\n            { name: \"paandorasbox liver pad\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -22.5 },\n            { name: \"paandorasbox marimba\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -15.5 },\n            { name: \"paandorasbox susdotwav\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -24.5 },\n            { name: \"paandorasbox wackyboxtts\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -17.5 },\n            { name: \"paandorasbox peppersteak_1\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -42.2 },\n            { name: \"paandorasbox peppersteak_2\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -47 },\n            { name: \"paandorasbox vinyl_noise\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -50 },\n            { name: \"paandorasbeta slap bass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -56 },\n            { name: \"paandorasbeta HD EB overdrive guitar\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -60 },\n            { name: \"paandorasbeta sunsoft bass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -18.5 },\n            { name: \"paandorasbeta masculine choir\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -50 },\n            { name: \"paandorasbeta feminine choir\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -60.5 },\n            { name: \"paandorasbeta tololoche\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -29.5 },\n            { name: \"paandorasbeta harp\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -54 },\n            { name: \"paandorasbeta pan flute\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -58 },\n            { name: \"paandorasbeta krumhorn\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -46 },\n            { name: \"paandorasbeta timpani\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -50 },\n            { name: \"paandorasbeta crowd hey\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -29 },\n            { name: \"paandorasbeta wario land 4 brass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -68 },\n            { name: \"paandorasbeta wario land 4 rock organ\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -63 },\n            { name: \"paandorasbeta wario land 4 DAOW\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -35 },\n            { name: \"paandorasbeta wario land 4 hour chime\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -47.5 },\n            { name: \"paandorasbeta wario land 4 tick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -12.5 },\n            { name: \"paandorasbeta kirby kick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n            { name: \"paandorasbeta kirby snare\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n            { name: \"paandorasbeta kirby bongo\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n            { name: \"paandorasbeta kirby click\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\n            { name: \"paandorasbeta sonor kick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28.5 },\n            { name: \"paandorasbeta sonor snare\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28.5 },\n            { name: \"paandorasbeta sonor snare (left hand)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -22.5 },\n            { name: \"paandorasbeta sonor snare (right hand)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -22.5 },\n            { name: \"paandorasbeta sonor high tom\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -41.5 },\n            { name: \"paandorasbeta sonor low tom\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -41.5 },\n            { name: \"paandorasbeta sonor hihat (closed)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -17 },\n            { name: \"paandorasbeta sonor hihat (half opened)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -21 },\n            { name: \"paandorasbeta sonor hihat (open)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -54.5 },\n            { name: \"paandorasbeta sonor hihat (open tip)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -43.5 },\n            { name: \"paandorasbeta sonor hihat (pedal)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28 },\n            { name: \"paandorasbeta sonor crash\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -51 },\n            { name: \"paandorasbeta sonor crash (tip)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -50.5 },\n            { name: \"paandorasbeta sonor ride\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46 }\n        ];\n        sampleLoadingState.totalSamples += chipWaves.length;\n        const startIndex = Config.rawRawChipWaves.length;\n        for (const chipWave of chipWaves) {\n            const chipWaveIndex = Config.rawRawChipWaves.length;\n            const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n            const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n            const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\n            Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\n            Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\n            Config.rawChipWaves[chipWaveIndex] = rawChipWave;\n            Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\n            Config.chipWaves[chipWaveIndex] = integratedChipWave;\n            Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\n            sampleLoadingState.statusTable[chipWaveIndex] = 0;\n            sampleLoadingState.urlTable[chipWaveIndex] = \"legacySamples\";\n        }\n        loadScript(\"samples.js\")\n            .then(() => loadScript(\"samples2.js\"))\n            .then(() => loadScript(\"samples3.js\"))\n            .then(() => loadScript(\"drumsamples.js\"))\n            .then(() => loadScript(\"wario_samples.js\"))\n            .then(() => loadScript(\"kirby_samples.js\"))\n            .then(() => {\n            const chipWaveSamples = [\n                centerWave(kicksample),\n                centerWave(snaresample),\n                centerWave(pianosample),\n                centerWave(WOWsample),\n                centerWave(overdrivesample),\n                centerWave(trumpetsample),\n                centerWave(saxophonesample),\n                centerWave(orchhitsample),\n                centerWave(detatchedviolinsample),\n                centerWave(synthsample),\n                centerWave(sonic3snaresample),\n                centerWave(comeonsample),\n                centerWave(choirsample),\n                centerWave(overdrivensample),\n                centerWave(flutesample),\n                centerWave(legatoviolinsample),\n                centerWave(tremoloviolinsample),\n                centerWave(amenbreaksample),\n                centerWave(pizzicatoviolinsample),\n                centerWave(timallengruntsample),\n                centerWave(tubasample),\n                centerWave(loopingcymbalsample),\n                centerWave(kickdrumsample),\n                centerWave(snaredrumsample),\n                centerWave(closedhihatsample),\n                centerWave(foothihatsample),\n                centerWave(openhihatsample),\n                centerWave(crashsample),\n                centerWave(pianoC4sample),\n                centerWave(liverpadsample),\n                centerWave(marimbasample),\n                centerWave(susdotwavsample),\n                centerWave(wackyboxttssample),\n                centerWave(peppersteak1),\n                centerWave(peppersteak2),\n                centerWave(vinyl),\n                centerWave(slapbass),\n                centerWave(hdeboverdrive),\n                centerWave(sunsoftbass),\n                centerWave(masculinechoir),\n                centerWave(femininechoir),\n                centerWave(southtololoche),\n                centerWave(harp),\n                centerWave(panflute),\n                centerWave(krumhorn),\n                centerWave(timpani),\n                centerWave(crowdhey),\n                centerWave(warioland4brass),\n                centerWave(warioland4organ),\n                centerWave(warioland4daow),\n                centerWave(warioland4hourchime),\n                centerWave(warioland4tick),\n                centerWave(kirbykick),\n                centerWave(kirbysnare),\n                centerWave(kirbybongo),\n                centerWave(kirbyclick),\n                centerWave(funkkick),\n                centerWave(funksnare),\n                centerWave(funksnareleft),\n                centerWave(funksnareright),\n                centerWave(funktomhigh),\n                centerWave(funktomlow),\n                centerWave(funkhihatclosed),\n                centerWave(funkhihathalfopen),\n                centerWave(funkhihatopen),\n                centerWave(funkhihatopentip),\n                centerWave(funkhihatfoot),\n                centerWave(funkcrash),\n                centerWave(funkcrashtip),\n                centerWave(funkride)\n            ];\n            let chipWaveIndexOffset = 0;\n            for (const chipWaveSample of chipWaveSamples) {\n                const chipWaveIndex = startIndex + chipWaveIndexOffset;\n                Config.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\n                Config.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\n                Config.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\n                sampleLoadingState.statusTable[chipWaveIndex] = 1;\n                sampleLoadingState.samplesLoaded++;\n                sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(sampleLoadingState.totalSamples, sampleLoadingState.samplesLoaded));\n                chipWaveIndexOffset++;\n            }\n        });\n    }\n    else if (set == 1) {\n        const chipWaves = [\n            { name: \"chronoperc1final\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"synthkickfm\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"mcwoodclick1\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\n            { name: \"acoustic snare\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 }\n        ];\n        sampleLoadingState.totalSamples += chipWaves.length;\n        const startIndex = Config.rawRawChipWaves.length;\n        for (const chipWave of chipWaves) {\n            const chipWaveIndex = Config.rawRawChipWaves.length;\n            const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n            const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n            const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\n            Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\n            Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\n            Config.rawChipWaves[chipWaveIndex] = rawChipWave;\n            Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\n            Config.chipWaves[chipWaveIndex] = integratedChipWave;\n            Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\n            sampleLoadingState.statusTable[chipWaveIndex] = 0;\n            sampleLoadingState.urlTable[chipWaveIndex] = \"nintariboxSamples\";\n        }\n        loadScript(\"nintaribox_samples.js\")\n            .then(() => {\n            const chipWaveSamples = [\n                centerWave(chronoperc1finalsample),\n                centerWave(synthkickfmsample),\n                centerWave(woodclicksample),\n                centerWave(acousticsnaresample)\n            ];\n            let chipWaveIndexOffset = 0;\n            for (const chipWaveSample of chipWaveSamples) {\n                const chipWaveIndex = startIndex + chipWaveIndexOffset;\n                Config.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\n                Config.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\n                Config.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\n                sampleLoadingState.statusTable[chipWaveIndex] = 1;\n                sampleLoadingState.samplesLoaded++;\n                sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(sampleLoadingState.totalSamples, sampleLoadingState.samplesLoaded));\n                chipWaveIndexOffset++;\n            }\n        });\n    }\n    else if (set == 2) {\n        const chipWaves = [\n            { name: \"cat\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -3 },\n            { name: \"gameboy\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 7 },\n            { name: \"mario\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\n            { name: \"drum\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 4 },\n            { name: \"yoshi\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -16 },\n            { name: \"star\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -16 },\n            { name: \"fire flower\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -1 },\n            { name: \"dog\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -1 },\n            { name: \"oink\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 3 },\n            { name: \"swan\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 1 },\n            { name: \"face\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -12 }\n        ];\n        sampleLoadingState.totalSamples += chipWaves.length;\n        const startIndex = Config.rawRawChipWaves.length;\n        for (const chipWave of chipWaves) {\n            const chipWaveIndex = Config.rawRawChipWaves.length;\n            const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n            const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\n            const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\n            Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\n            Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\n            Config.rawChipWaves[chipWaveIndex] = rawChipWave;\n            Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\n            Config.chipWaves[chipWaveIndex] = integratedChipWave;\n            Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\n            sampleLoadingState.statusTable[chipWaveIndex] = 0;\n            sampleLoadingState.urlTable[chipWaveIndex] = \"marioPaintboxSamples\";\n        }\n        loadScript(\"mario_paintbox_samples.js\")\n            .then(() => {\n            const chipWaveSamples = [\n                centerWave(catpaintboxsample),\n                centerWave(gameboypaintboxsample),\n                centerWave(mariopaintboxsample),\n                centerWave(drumpaintboxsample),\n                centerWave(yoshipaintboxsample),\n                centerWave(starpaintboxsample),\n                centerWave(fireflowerpaintboxsample),\n                centerWave(dogpaintbox),\n                centerWave(oinkpaintbox),\n                centerWave(swanpaintboxsample),\n                centerWave(facepaintboxsample)\n            ];\n            let chipWaveIndexOffset = 0;\n            for (const chipWaveSample of chipWaveSamples) {\n                const chipWaveIndex = startIndex + chipWaveIndexOffset;\n                Config.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\n                Config.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\n                Config.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\n                sampleLoadingState.statusTable[chipWaveIndex] = 1;\n                sampleLoadingState.samplesLoaded++;\n                sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(sampleLoadingState.totalSamples, sampleLoadingState.samplesLoaded));\n                chipWaveIndexOffset++;\n            }\n        });\n    }\n    else {\n        console.log(\"invalid set of built-in samples\");\n    }\n}\nexport class Config {\n    static generateSineWave() {\n        const wave = new Float32Array(_a.sineWaveLength + 1);\n        for (let i = 0; i < _a.sineWaveLength + 1; i++) {\n            wave[i] = Math.sin(i * Math.PI * 2.0 / _a.sineWaveLength);\n        }\n        return wave;\n    }\n    static generateTriWave() {\n        const wave = new Float32Array(_a.sineWaveLength + 1);\n        for (let i = 0; i < _a.sineWaveLength + 1; i++) {\n            wave[i] = Math.asin(Math.sin(i * Math.PI * 2.0 / _a.sineWaveLength)) / (Math.PI / 2);\n        }\n        return wave;\n    }\n    static generateTrapezoidWave(drive = 2) {\n        const wave = new Float32Array(_a.sineWaveLength + 1);\n        for (let i = 0; i < _a.sineWaveLength + 1; i++) {\n            wave[i] = Math.max(-1.0, Math.min(1.0, Math.asin(Math.sin(i * Math.PI * 2.0 / _a.sineWaveLength)) * drive));\n        }\n        return wave;\n    }\n    static generateSquareWave(phaseWidth = 0) {\n        const wave = new Float32Array(_a.sineWaveLength + 1);\n        const centerPoint = _a.sineWaveLength / 4;\n        for (let i = 0; i < _a.sineWaveLength + 1; i++) {\n            wave[i] = +((Math.abs(i - centerPoint) < phaseWidth * _a.sineWaveLength / 2)\n                || ((Math.abs(i - _a.sineWaveLength - centerPoint) < phaseWidth * _a.sineWaveLength / 2))) * 2 - 1;\n        }\n        return wave;\n    }\n    static generateSawWave(inverse = false) {\n        const wave = new Float32Array(_a.sineWaveLength + 1);\n        for (let i = 0; i < _a.sineWaveLength + 1; i++) {\n            wave[i] = ((i + (_a.sineWaveLength / 4.0)) * 2.0 / _a.sineWaveLength) % 2 - 1;\n            wave[i] = inverse ? -wave[i] : wave[i];\n        }\n        return wave;\n    }\n    static generateQuasiSineWave() {\n        const wave = new Float32Array(_a.sineWaveLength + 1);\n        for (let i = 0; i < _a.sineWaveLength + 1; i++) {\n            wave[i] = Math.round(Math.sin(i * Math.PI * 2.0 / _a.sineWaveLength));\n        }\n        return wave;\n    }\n}\n_a = Config;\nConfig.thresholdVal = -10;\nConfig.kneeVal = 40;\nConfig.ratioVal = 12;\nConfig.attackVal = 0;\nConfig.releaseVal = 0.25;\nConfig.willReloadForCustomSamples = false;\nConfig.jsonFormat = \"DragonBox\";\nConfig.scales = toNameMap([\n    { name: \"Free\", realName: \"chromatic\", flags: [true, true, true, true, true, true, true, true, true, true, true, true] },\n    { name: \"Major\", realName: \"ionian\", flags: [true, false, true, false, true, true, false, true, false, true, false, true] },\n    { name: \"Minor\", realName: \"aeolian\", flags: [true, false, true, true, false, true, false, true, true, false, true, false] },\n    { name: \"Mixolydian\", realName: \"mixolydian\", flags: [true, false, true, false, true, true, false, true, false, true, true, false] },\n    { name: \"Lydian\", realName: \"lydian\", flags: [true, false, true, false, true, false, true, true, false, true, false, true] },\n    { name: \"Dorian\", realName: \"dorian\", flags: [true, false, true, true, false, true, false, true, false, true, true, false] },\n    { name: \"Phrygian\", realName: \"phrygian\", flags: [true, true, false, true, false, true, false, true, true, false, true, false] },\n    { name: \"Locrian\", realName: \"locrian\", flags: [true, true, false, true, false, true, true, false, true, false, true, false] },\n    { name: \"Lydian Dominant\", realName: \"lydian dominant\", flags: [true, false, true, false, true, false, true, true, false, true, true, false] },\n    { name: \"Phrygian Dominant\", realName: \"phrygian dominant\", flags: [true, true, false, false, true, true, false, true, true, false, true, false] },\n    { name: \"Harmonic Major\", realName: \"harmonic major\", flags: [true, false, true, false, true, true, false, true, true, false, false, true] },\n    { name: \"Harmonic Minor\", realName: \"harmonic minor\", flags: [true, false, true, true, false, true, false, true, true, false, false, true] },\n    { name: \"Melodic Minor\", realName: \"melodic minor\", flags: [true, false, true, true, false, true, false, true, false, true, false, true] },\n    { name: \"Blues Major\", realName: \"blues major\", flags: [true, false, true, true, true, false, false, true, false, true, false, false] },\n    { name: \"Blues\", realName: \"blues\", flags: [true, false, false, true, false, true, true, true, false, false, true, false] },\n    { name: \"Altered\", realName: \"altered\", flags: [true, true, false, true, true, false, true, false, true, false, true, false] },\n    { name: \"Major Pentatonic\", realName: \"major pentatonic\", flags: [true, false, true, false, true, false, false, true, false, true, false, false] },\n    { name: \"Minor Pentatonic\", realName: \"minor pentatonic\", flags: [true, false, false, true, false, true, false, true, false, false, true, false] },\n    { name: \"Whole Tone\", realName: \"whole tone\", flags: [true, false, true, false, true, false, true, false, true, false, true, false] },\n    { name: \"Octatonic\", realName: \"octatonic\", flags: [true, false, true, true, false, true, true, false, true, true, false, true] },\n    { name: \"Hexatonic\", realName: \"hexatonic\", flags: [true, false, false, true, true, false, false, true, true, false, false, true] },\n    { name: \"No Dabbing (MB)\", realName: \"no dabbing\", flags: [true, true, false, true, true, true, true, true, true, false, true, false] },\n    { name: \"Jacked Toad (TB)\", realName: \"jacked toad\", flags: [true, false, true, true, false, true, true, true, true, false, true, true] },\n    { name: \"Test Scale (TB)\", realName: \"**t\", flags: [true, true, false, false, false, true, true, false, false, true, true, false] },\n    { name: \"Custom\", realName: \"custom\", flags: [true, false, true, true, false, false, false, true, true, false, true, true] },\n]);\nConfig.keys = toNameMap([\n    { name: \"C\", isWhiteKey: true, basePitch: 12 },\n    { name: \"C♯\", isWhiteKey: false, basePitch: 13 },\n    { name: \"D\", isWhiteKey: true, basePitch: 14 },\n    { name: \"D♯\", isWhiteKey: false, basePitch: 15 },\n    { name: \"E\", isWhiteKey: true, basePitch: 16 },\n    { name: \"F\", isWhiteKey: true, basePitch: 17 },\n    { name: \"F♯\", isWhiteKey: false, basePitch: 18 },\n    { name: \"G\", isWhiteKey: true, basePitch: 19 },\n    { name: \"G♯\", isWhiteKey: false, basePitch: 20 },\n    { name: \"A\", isWhiteKey: true, basePitch: 21 },\n    { name: \"A♯\", isWhiteKey: false, basePitch: 22 },\n    { name: \"B\", isWhiteKey: true, basePitch: 23 },\n]);\nConfig.blackKeyNameParents = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1];\nConfig.tempoMin = 1;\nConfig.tempoMax = 2000;\nConfig.octaveMin = -2;\nConfig.octaveMax = 2;\nConfig.echoDelayRange = 24;\nConfig.echoDelayStepTicks = 4;\nConfig.echoSustainRange = 24;\nConfig.echoShelfHz = 4000.0;\nConfig.echoShelfGain = Math.pow(2.0, -0.5);\nConfig.reverbShelfHz = 8000.0;\nConfig.reverbShelfGain = Math.pow(2.0, -1.5);\nConfig.reverbRange = 32;\nConfig.reverbDelayBufferSize = 16384;\nConfig.reverbDelayBufferMask = _a.reverbDelayBufferSize - 1;\nConfig.beatsPerBarMin = 1;\nConfig.beatsPerBarMax = 64;\nConfig.barCountMin = 1;\nConfig.barCountMax = 1024;\nConfig.instrumentCountMin = 1;\nConfig.layeredInstrumentCountMax = 10;\nConfig.patternInstrumentCountMax = 10;\nConfig.partsPerBeat = 24;\nConfig.ticksPerPart = 2;\nConfig.ticksPerArpeggio = 3;\nConfig.arpeggioPatterns = [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7]];\nConfig.rhythms = toNameMap([\n    { name: \"÷3 (triplets)\", stepsPerBeat: 3, roundUpThresholds: [5, 12, 18] },\n    { name: \"÷4 (standard)\", stepsPerBeat: 4, roundUpThresholds: [3, 9, 17, 21] },\n    { name: \"÷6\", stepsPerBeat: 6, roundUpThresholds: null },\n    { name: \"÷8\", stepsPerBeat: 8, roundUpThresholds: null },\n    { name: \"÷12\", stepsPerBeat: 12, roundUpThresholds: null },\n    { name: \"freehand\", stepsPerBeat: 24, roundUpThresholds: null },\n]);\nConfig.instrumentTypeNames = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"Picked String\", \"supersaw\", \"custom chip\", \"mod\", \"FM6op\"];\nConfig.instrumentTypeHasSpecialInterval = [true, true, false, false, false, true, false, false, false, false, false];\nConfig.chipBaseExpression = 0.03375;\nConfig.fmBaseExpression = 0.03;\nConfig.noiseBaseExpression = 0.19;\nConfig.spectrumBaseExpression = 0.3;\nConfig.drumsetBaseExpression = 0.45;\nConfig.harmonicsBaseExpression = 0.025;\nConfig.pwmBaseExpression = 0.04725;\nConfig.supersawBaseExpression = 0.061425;\nConfig.pickedStringBaseExpression = 0.025;\nConfig.distortionBaseVolume = 0.011;\nConfig.bitcrusherBaseVolume = 0.010;\nConfig.granularOutputLoudnessCompensation = 0.5;\nConfig.rawChipWaves = toNameMap([\n    { name: \"rounded\", expression: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2]) },\n    { name: \"triangle\", expression: 1.0, samples: centerWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 7.0 / 15.0, 9.0 / 15.0, 11.0 / 15.0, 13.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 13.0 / 15.0, 11.0 / 15.0, 9.0 / 15.0, 7.0 / 15.0, 5.0 / 15.0, 3.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -3.0 / 15.0, -5.0 / 15.0, -7.0 / 15.0, -9.0 / 15.0, -11.0 / 15.0, -13.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -13.0 / 15.0, -11.0 / 15.0, -9.0 / 15.0, -7.0 / 15.0, -5.0 / 15.0, -3.0 / 15.0, -1.0 / 15.0]) },\n    { name: \"square\", expression: 0.5, samples: centerWave([1.0, -1.0]) },\n    { name: \"1/4 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0]) },\n    { name: \"1/8 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n    { name: \"sawtooth\", expression: 0.65, samples: centerWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\n    { name: \"double saw\", expression: 0.5, samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\n    { name: \"double pulse\", expression: 0.4, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\n    { name: \"spiky\", expression: 0.4, samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0]) },\n    { name: \"sine\", expression: 0.88, samples: centerAndNormalizeWave([8.0, 9.0, 11.0, 12.0, 13.0, 14.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 4.0, 5.0, 6.0]) },\n    { name: \"flute\", expression: 0.8, samples: centerAndNormalizeWave([3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 13.0, 14.0, 15.0, 15.0, 14.0, 13.0, 11.0, 8.0, 5.0, 3.0]) },\n    { name: \"harp\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 3.0, 3.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 8.0, 9.0, 11.0, 11.0, 13.0, 13.0, 15.0, 15.0, 14.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 7.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0]) },\n    { name: \"sharp clarinet\", expression: 0.38, samples: centerAndNormalizeWave([0.0, 0.0, 0.0, 1.0, 1.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 7.0, 9.0, 9.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) },\n    { name: \"soft clarinet\", expression: 0.45, samples: centerAndNormalizeWave([0.0, 1.0, 5.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 11.0, 11.0, 12.0, 13.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\n    { name: \"alto sax\", expression: 0.3, samples: centerAndNormalizeWave([5.0, 5.0, 6.0, 4.0, 3.0, 6.0, 8.0, 7.0, 2.0, 1.0, 5.0, 6.0, 5.0, 4.0, 5.0, 7.0, 9.0, 11.0, 13.0, 14.0, 14.0, 14.0, 14.0, 13.0, 10.0, 8.0, 7.0, 7.0, 4.0, 3.0, 4.0, 2.0]) },\n    { name: \"bassoon\", expression: 0.35, samples: centerAndNormalizeWave([9.0, 9.0, 7.0, 6.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 11.0, 13.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 5.0, 11.0, 14.0]) },\n    { name: \"trumpet\", expression: 0.22, samples: centerAndNormalizeWave([10.0, 11.0, 8.0, 6.0, 5.0, 5.0, 5.0, 6.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 11.0, 14.0]) },\n    { name: \"electric guitar\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 12.0, 12.0, 10.0, 6.0, 6.0, 8.0, 0.0, 2.0, 4.0, 8.0, 10.0, 9.0, 10.0, 1.0, 7.0, 11.0, 3.0, 6.0, 6.0, 8.0, 13.0, 14.0, 2.0, 0.0, 12.0, 8.0, 4.0, 13.0, 11.0, 10.0, 13.0]) },\n    { name: \"organ\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 10.0, 12.0, 11.0, 14.0, 7.0, 5.0, 5.0, 12.0, 10.0, 10.0, 9.0, 12.0, 6.0, 4.0, 5.0, 13.0, 12.0, 12.0, 10.0, 12.0, 5.0, 2.0, 2.0, 8.0, 6.0, 6.0, 5.0, 8.0, 3.0, 2.0, 1.0]) },\n    { name: \"pan flute\", expression: 0.35, samples: centerAndNormalizeWave([1.0, 4.0, 7.0, 6.0, 7.0, 9.0, 7.0, 7.0, 11.0, 12.0, 13.0, 15.0, 13.0, 11.0, 11.0, 12.0, 13.0, 10.0, 7.0, 5.0, 3.0, 6.0, 10.0, 7.0, 3.0, 3.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]) },\n    { name: \"glitch\", expression: 0.5, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0]) },\n    { name: \"trapezoid\", expression: 1.0, samples: centerWave([1.0 / 15.0, 6.0 / 15.0, 10.0 / 15.0, 14.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 14.0 / 15.0, 10.0 / 15.0, 6.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -6.0 / 15.0, -10.0 / 15.0, -14.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -14.0 / 15.0, -10.0 / 15.0, -6.0 / 15.0, -1.0 / 15.0,]) },\n    { name: \"modbox 10% pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n    { name: \"modbox sunsoft bass\", expression: 1.0, samples: centerAndNormalizeWave([0.0, 0.1875, 0.3125, 0.5625, 0.5, 0.75, 0.875, 1.0, 1.0, 0.6875, 0.5, 0.625, 0.625, 0.5, 0.375, 0.5625, 0.4375, 0.5625, 0.4375, 0.4375, 0.3125, 0.1875, 0.1875, 0.375, 0.5625, 0.5625, 0.5625, 0.5625, 0.5625, 0.4375, 0.25, 0.0]) },\n    { name: \"modbox loud pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.7, 0.1, 0.1, 0, 0, 0, 0, 0, 0.1, 0.2, 0.15, 0.25, 0.125, 0.215, 0.345, 4.0]) },\n    { name: \"modbox sax\", expression: 0.5, samples: centerAndNormalizeWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 9.0, 0.06]) },\n    { name: \"modbox guitar\", expression: 0.5, samples: centerAndNormalizeWave([-0.5, 3.5, 3.0, -0.5, -0.25, -1.0]) },\n    { name: \"modbox sine\", expression: 0.5, samples: centerAndNormalizeWave([0.0, 0.05, 0.125, 0.2, 0.25, 0.3, 0.425, 0.475, 0.525, 0.625, 0.675, 0.725, 0.775, 0.8, 0.825, 0.875, 0.9, 0.925, 0.95, 0.975, 0.98, 0.99, 0.995, 1, 0.995, 0.99, 0.98, 0.975, 0.95, 0.925, 0.9, 0.875, 0.825, 0.8, 0.775, 0.725, 0.675, 0.625, 0.525, 0.475, 0.425, 0.3, 0.25, 0.2, 0.125, 0.05, 0.0, -0.05, -0.125, -0.2, -0.25, -0.3, -0.425, -0.475, -0.525, -0.625, -0.675, -0.725, -0.775, -0.8, -0.825, -0.875, -0.9, -0.925, -0.95, -0.975, -0.98, -0.99, -0.995, -1, -0.995, -0.99, -0.98, -0.975, -0.95, -0.925, -0.9, -0.875, -0.825, -0.8, -0.775, -0.725, -0.675, -0.625, -0.525, -0.475, -0.425, -0.3, -0.25, -0.2, -0.125, -0.05]) },\n    { name: \"modbox atari bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]) },\n    { name: \"modbox atari pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\n    { name: \"modbox 1% pulse\", expression: 0.5, samples: centerAndNormalizeWave},\n    { name: \"modbox curved sawtooth\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 1.0 / 2.0, 1.0 / 3.0, 1.0 / 4.0]) },\n    { name: \"modbox viola\", expression: 0.45, samples: centerAndNormalizeWave([-0.9, -1.0, -0.85, -0.775, -0.7, -0.6, -0.5, -0.4, -0.325, -0.225, -0.2, -0.125, -0.1, -0.11, -0.125, -0.15, -0.175, -0.18, -0.2, -0.21, -0.22, -0.21, -0.2, -0.175, -0.15, -0.1, -0.5, 0.75, 0.11, 0.175, 0.2, 0.25, 0.26, 0.275, 0.26, 0.25, 0.225, 0.2, 0.19, 0.18, 0.19, 0.2, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.275, 0.28, 0.29, 0.3, 0.29, 0.28, 0.27, 0.26, 0.25, 0.225, 0.2, 0.175, 0.15, 0.1, 0.075, 0.0, -0.01, -0.025, 0.025, 0.075, 0.2, 0.3, 0.475, 0.6, 0.75, 0.85, 0.85, 1.0, 0.99, 0.95, 0.8, 0.675, 0.475, 0.275, 0.01, -0.15, -0.3, -0.475, -0.5, -0.6, -0.71, -0.81, -0.9, -1.0, -0.9]) },\n    { name: \"modbox brass\", expression: 0.45, samples: centerAndNormalizeWave([-1.0, -0.95, -0.975, -0.9, -0.85, -0.8, -0.775, -0.65, -0.6, -0.5, -0.475, -0.35, -0.275, -0.2, -0.125, -0.05, 0.0, 0.075, 0.125, 0.15, 0.20, 0.21, 0.225, 0.25, 0.225, 0.21, 0.20, 0.19, 0.175, 0.125, 0.10, 0.075, 0.06, 0.05, 0.04, 0.025, 0.04, 0.05, 0.10, 0.15, 0.225, 0.325, 0.425, 0.575, 0.70, 0.85, 0.95, 1.0, 0.9, 0.675, 0.375, 0.2, 0.275, 0.4, 0.5, 0.55, 0.6, 0.625, 0.65, 0.65, 0.65, 0.65, 0.64, 0.6, 0.55, 0.5, 0.4, 0.325, 0.25, 0.15, 0.05, -0.05, -0.15, -0.275, -0.35, -0.45, -0.55, -0.65, -0.7, -0.78, -0.825, -0.9, -0.925, -0.95, -0.975]) },\n    { name: \"modbox acoustic bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.0, 0.1, -0.1, -0.2, -0.4, -0.3, -1.0]) },\n    { name: \"modbox lyre\", expression: 0.45, samples: centerAndNormalizeWave([1.0, -1.0, 4.0, 2.15, 4.13, 5.15, 0.0, -0.05, 1.0]) },\n    { name: \"modbox ramp pulse\", expression: 0.5, samples: centerAndNormalizeWave([6.1, -2.9, 1.4, -2.9]) },\n    { name: \"modbox piccolo\", expression: 0.5, samples: centerAndNormalizeWave([1, 4, 2, 1, -0.1, -1, -0.12]) },\n    { name: \"modbox squaretooth\", expression: 0.5, samples: centerAndNormalizeWave([0.2, 1.0, 2.6, 1.0, 0.0, -2.4]) },\n    { name: \"modbox flatline\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]) },\n    { name: \"modbox pnryshk a (u5)\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]) },\n    { name: \"modbox pnryshk b (riff)\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -0.9, 0.8, -0.7, 0.6, -0.5, 0.4, -0.3, 0.2, -0.1, 0.0, -0.1, 0.2, -0.3, 0.4, -0.5, 0.6, -0.7, 0.8, -0.9, 1.0]) },\n    { name: \"sandbox shrill lute\", expression: 0.94, samples: centerAndNormalizeWave([1.0, 1.5, 1.25, 1.2, 1.3, 1.5]) },\n    { name: \"sandbox bassoon\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]) },\n    { name: \"sandbox shrill bass\", expression: 0.5, samples: centerAndNormalizeWave([0, 1, 0, 0, 1, 0, 1, 0, 0, 0]) },\n    { name: \"sandbox nes pulse\", expression: 0.4, samples: centerAndNormalizeWave([2.1, -2.2, 1.2, 3]) },\n    { name: \"sandbox saw bass\", expression: 0.25, samples: centerAndNormalizeWave([1, 1, 1, 1, 0, 2, 1, 2, 3, 1, -2, 1, 4, 1, 4, 2, 1, 6, -3, 4, 2, 1, 5, 1, 4, 1, 5, 6, 7, 1, 6, 1, 4, 1, 9]) },\n    { name: \"sandbox euphonium\", expression: 0.3, samples: centerAndNormalizeWave([0, 1, 2, 1, 2, 1, 4, 2, 5, 0, -2, 1, 5, 1, 2, 1, 2, 4, 5, 1, 5, -2, 5, 10, 1]) },\n    { name: \"sandbox shrill pulse\", expression: 0.3, samples: centerAndNormalizeWave([4 - 2, 0, 4, 1, 4, 6, 7, 3]) },\n    { name: \"sandbox r-sawtooth\", expression: 0.2, samples: centerAndNormalizeWave([6.1, -2.9, 1.4, -2.9]) },\n    { name: \"sandbox recorder\", expression: 0.2, samples: centerAndNormalizeWave([5.0, -5.1, 4.0, -4.1, 3.0, -3.1, 2.0, -2.1, 1.0, -1.1, 6.0]) },\n    { name: \"sandbox narrow saw\", expression: 1.2, samples: centerAndNormalizeWave([0.1, 0.13 / -0.1, 0.13 / -0.3, 0.13 / -0.5, 0.13 / -0.7, 0.13 / -0.9, 0.13 / -0.11, 0.13 / -0.31, 0.13 / -0.51, 0.13 / -0.71, 0.13 / -0.91, 0.13 / -0.12, 0.13 / -0.32, 0.13 / -0.52, 0.13 / -0.72, 0.13 / -0.92, 0.13 / -0.13, 0.13 / 0.13, 0.13 / 0.92, 0.13 / 0.72, 0.13 / 0.52, 0.13 / 0.32, 0.13 / 0.12, 0.13 / 0.91, 0.13 / 0.71, 0.13 / 0.51, 0.13 / 0.31, 0.13 / 0.11, 0.13 / 0.9, 0.13 / 0.7, 0.13 / 0.5, 0.13 / 0.3, 0.13]) },\n    { name: \"sandbox deep square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 2.25, 1.0, -1.0, -2.25, -1.0]) },\n    { name: \"sandbox ring pulse\", expression: 1.0, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n    { name: \"sandbox double sine\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.8, 1.7, 1.6, 1.5, 1.4, 1.3, 1.2, 1.1, 1.0, 0.0, -1.0, -1.1, -1.2, -1.3, -1.4, -1.5, -1.6, -1.7, -1.8, -1.9, -1.8, -1.7, -1.6, -1.5, -1.4, -1.3, -1.2, -1.1, -1.0]) },\n    { name: \"sandbox contrabass\", expression: 0.5, samples: centerAndNormalizeWave([4.20, 6.9, 1.337, 6.66]) },\n    { name: \"sandbox double bass\", expression: 0.4, samples: centerAndNormalizeWave([0.0, 0.1875, 0.3125, 0.5625, 0.5, 0.75, 0.875, 1.0, -1.0, -0.6875, -0.5, -0.625, -0.625, -0.5, -0.375, -0.5625, -0.4375, -0.5625, -0.4375, -0.4375, -0.3125, -0.1875, 0.1875, 0.375, 0.5625, -0.5625, 0.5625, 0.5625, 0.5625, 0.4375, 0.25, 0.0]) },\n    { name: \"haileybox test1\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.5, -1.0]) },\n    { name: \"brucebox pokey 4bit lfsr\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0]) },\n    { name: \"brucebox pokey 5step bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1.0, -1.0, 1.0]) },\n    { name: \"brucebox isolated spiky\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1.0, -1.0, 1.0, -1.0]) },\n    { name: \"nerdbox unnamed 1\", expression: 0.5, samples: centerAndNormalizeWave([0.2, 0.8 / 0.2, 0.7, -0.4, -1.0, 0.5, -0.5 / 0.6]) },\n    { name: \"nerdbox unnamed 2\", expression: 0.5, samples: centerAndNormalizeWave([2.0, 5.0 / 55.0, -9.0, 6.5 / 6.5, -55.0, 18.5 / -26.0]) },\n    { name: \"zefbox semi-square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 1.5, 2.0, 2.5, 2.5, 2.5, 2.0, 1.5, 1.0]) },\n    { name: \"zefbox deep square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 2.25, 1.0, -1.0, -2.25, -1.0]) },\n    { name: \"zefbox squaretal\", expression: 0.7, samples: centerAndNormalizeWave([1.5, 1.0, 1.5, -1.5, -1.0, -1.5]) },\n    { name: \"zefbox saw wide\", expression: 0.65, samples: centerAndNormalizeWave([0.0, -0.4, -0.8, -1.2, -1.6, -2.0, 0.0, -0.4, -0.8, -1.2, -1.6]) },\n    { name: \"zefbox saw narrow\", expression: 0.65, samples: centerAndNormalizeWave([1, 0.5, 1, 0.5, 1, 0.5, 1, 2, 1, 2, 1]) },\n    { name: \"zefbox deep sawtooth\", expression: 0.5, samples: centerAndNormalizeWave([0, 2, 3, 4, 4.5, 5, 5.5, 6, 6.25, 6.5, 6.75, 7, 6.75, 6.5, 6.25, 6, 5.5, 5, 4.5, 4, 3, 2, 1]) },\n    { name: \"zefbox sawtal\", expression: 0.3, samples: centerAndNormalizeWave([1.5, 1.0, 1.25, -0.5, 1.5, -0.5, 0.0, -1.5, 1.5, 0.0, 0.5, -1.5, 0.5, 1.25, -1.0, -1.5]) },\n    { name: \"zefbox deep sawtal\", expression: 0.7, samples: centerAndNormalizeWave([0.75, 0.25, 0.5, -0.5, 0.5, -0.5, -0.25, -0.75]) },\n    { name: \"zefbox pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -2.0, -2.0, -1.5, -1.5, -1.25, -1.25, -1.0, -1.0]) },\n    { name: \"zefbox triple pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.5, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.5]) },\n    { name: \"zefbox high pulse\", expression: 0.2, samples: centerAndNormalizeWave([1, -2, 2, -3, 3, -4, 5, -4, 3, -3, 2, -2, 1]) },\n    { name: \"zefbox deep pulse\", expression: 0.2, samples: centerAndNormalizeWave([1, 2, 2, -2, -2, -3, -4, -4, -5, -5, -5, -5, 0, -1, -2]) },\n    { name: \"wackybox guitar string\", expression: 0.6, samples: centerAndNormalizeWave([0, 63, 63, 63, 63, 19, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 11, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 27, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 34, 63, 63, 63, 63]) },\n    { name: \"wackybox intense\", expression: 0.6, samples: centerAndNormalizeWave([36, 25, 33, 35, 18, 51, 22, 40, 27, 37, 31, 33, 25, 29, 41, 23, 31, 31, 45, 20, 37, 23, 29, 26, 42, 29, 33, 26, 31, 27, 40, 25, 40, 26, 37, 24, 41, 32, 0, 32, 33, 29, 32, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31]) },\n    { name: \"wackybox buzz wave\", expression: 0.6, samples: centerAndNormalizeWave([0, 1, 1, 2, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9, 8, 8, 8, 11, 15, 23, 62, 61, 60, 58, 56, 56, 54, 53, 52, 50, 49, 48, 47, 47, 45, 45, 45, 44, 44, 43, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 53]) },\n    { name: \"todbox 1/3 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0]) },\n    { name: \"todbox 1/5 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0]) },\n    { name: \"todbox slap bass\", expression: 0.5, samples: centerAndNormalizeWave([1, 0.5, 0, 0.5, 1.25, 0.5, -0.25, 0.1, -0.1, 0.1, 1.1, 2.1, 3, 3.5, 2.9, 3.3, 2.7, 2.9, 2.3, 2, 1.9, 1.8, 1, 0.7, 0.9, 0.8, 0.4, 0.1, 0.0, 0.2, 0.4, 0.6, 0.5, 0.8]) },\n    { name: \"todbox harsh wave\", expression: 0.45, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, 0.5, 0.5, 0.5, 0.7, 0.39, 1.3, 0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n    { name: \"todbox accordian\", expression: 0.5, samples: centerAndNormalizeWave([0, 1, 1, 2, 2, 1.5, 1.5, 0.8, 0, -2, -3.25, -4, -4.5, -5.5, -6, -5.75, -5.5, -5, -5, -5, -6, -6, -6, -5, -4, -3, -2, -1, 0.75, 1, 2, 3, 4, 5, 6, 6.5, 7.5, 8, 7.75, 6, 5.25, 5, 5, 5, 5, 5, 4.25, 3.75, 3.25, 2.75, 1.25, -0.75, -2, -0.75, 1.25, 1.25, 2, 2, 2, 2, 1.5, -1, -2, -1, 1.5, 2, 2.75, 2.75, 2.75, 3, 2.75, -1, -2, -2.5, -2, -1, -2.25, -2.75, -2, -3, -1.75, 1, 2, 3.5, 4, 5.25, 6, 8, 9.75, 10, 9.5, 9, 8.5, 7.5, 6.5, 5.25, 5, 4.5, 4, 4, 4, 3.25, 2.5, 2, 1, -0.5, -2, -3.5, -4, -4, -4, -3.75, -3, -2, -1]) },\n    { name: \"todbox beta banana wave\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0]) },\n    { name: \"todbox beta test wave\", expression: 0.5, samples: centerAndNormalizeWave([56, 0, -52, 16, 3, 3, 2, -35, 20, 147, -53, 0, 0, 5, -6]) },\n    { name: \"todbox beta real snare\", expression: 1.0, samples: centerAndNormalizeWave([0.00000, -0.01208, -0.02997, -0.04382, -0.06042, -0.07529, -0.09116, -0.10654, -0.12189, -0.13751, -0.15289, -0.16849, -0.18387, -0.19974, -0.21484, -0.23071, -0.24557, -0.26144, -0.27731, -0.29141, -0.30350, -0.32416, -0.34406, -0.32947, -0.31158, -0.33725, -0.37579, -0.39746, -0.40201, -0.40906, -0.44180, -0.47229, -0.47379, -0.47733, -0.45239, -0.33954, -0.22894, -0.22443, -0.32138, -0.46371, -0.57178, -0.61081, -0.59998, -0.61459, -0.62189, -0.43979, -0.19217, -0.12643, -0.17252, -0.20956, -0.20981, -0.19217, -0.22845, -0.34332, -0.50629, -0.64307, -0.72922, -0.81384, -0.87857, -0.90149, -0.88687, -0.86169, -0.87781, -0.80478, -0.52493, -0.31308, -0.33249, -0.39395, -0.39017, -0.30301, -0.19949, -0.13071, -0.02493, 0.14307, 0.34961, 0.52542, 0.63223, 0.68613, 0.74710, 0.87305, 0.98184, 0.98889, 0.97052, 0.99066, 0.99747, 0.99344, 0.99469, 0.99393, 0.99570, 0.99393, 0.99521, 0.99469, 0.99420, 0.99521, 0.99420, 0.99521, 0.99469, 0.99469, 0.99521, 0.99420, 0.99545, 0.99445, 0.99469, 0.99493, 0.99420, 0.99521, 0.99393, 0.99493, 0.99469, 0.99445, 0.99570, 0.99445, 0.99521, 0.99469, 0.99469, 0.99521, 0.99420, 0.99545, 0.99445, 0.99445, 0.99493, 0.99420, 0.99545, 0.99420, 0.99493, 0.99493, 0.99420, 0.99545, 0.99445, 0.99521, 0.99469, 0.99445, 0.99545, 0.99368, 0.99393, 0.99445, 0.99268, 0.97983, 0.97229, 0.95944, 0.88486, 0.76773, 0.64481, 0.53098, 0.39847, 0.19318, -0.03827, -0.20325, -0.39319, -0.68765, -0.88461, -0.93448, -0.96069, -0.97681, -0.98715, -0.99042, -0.99142, -0.99091, -0.99142, -0.99219, -0.99091, -0.99219, -0.99066, -0.99142, -0.99142, -0.99118, -0.99191, -0.99066, -0.99191, -0.99142, -0.99142, -0.99191, -0.99091, -0.99219, -0.99118, -0.99142, -0.99167, -0.99091, -0.99219, -0.99091, -0.99167, -0.99142, -0.99091, -0.99191, -0.99091, -0.99191, -0.99142, -0.99118, -0.99191, -0.99066, -0.99191, -0.99118, -0.99142, -0.99191, -0.99066, -0.99191, -0.99091, -0.99167, -0.99191, -0.99118, -0.99219, -0.99091, -0.99191, -0.99142, -0.99142, -0.99243, -0.98865, -0.98764, -0.99219, -0.98083, -0.92517, -0.92770, -0.91486, -0.59042, -0.15189, 0.02945, 0.05667, 0.06195, 0.00629, -0.18008, -0.56497, -0.88010, -0.92770, -0.92871, -0.97705, -0.99167, -0.98663, -0.99118, -0.99042, -0.99219, -0.99142, -0.99118, -0.98941, -0.99219, -1.00000, -0.97580, -0.95993, -0.99948, -0.98236, -0.84659, -0.74860, -0.70679, -0.59747, -0.48035, -0.41687, -0.36826, -0.29745, -0.18185, -0.06219, 0.02164, 0.07907, 0.13123, 0.18033, 0.19620, 0.15692, 0.14053, 0.20251, 0.27530, 0.30905, 0.29092, 0.27252, 0.30402, 0.32416, 0.32214, 0.35239, 0.39670, 0.43198, 0.49420, 0.58487, 0.64154, 0.65967, 0.67050, 0.67026, 0.66522, 0.65540, 0.66119, 0.70627, 0.75842, 0.78738, 0.78940, 0.78763, 0.80402, 0.85944, 0.94559, 0.98990, 0.98160, 0.98007, 0.99368, 0.99393, 0.98538, 0.97580, 0.97101, 0.93802, 0.81812, 0.64633, 0.46649, 0.28613, 0.14685, 0.08966, 0.12543, 0.20325, 0.24557, 0.18866, 0.02795, -0.20175, -0.44205, -0.58713, -0.57629, -0.41385, -0.14255, 0.18033, 0.47882, 0.68311, 0.72314, 0.62064, 0.48309, 0.43073, 0.53577, 0.72794, 0.90250, 0.97354, 0.97000, 0.98083, 0.99191, 0.99319, 0.99493, 0.99393, 0.99521, 0.99393, 0.99545, 0.99420, 0.99493, 0.99493, 0.99445, 0.99545, 0.99420, 0.99545, 0.99243, 0.98917, 0.98386, 0.97781, 0.95844, 0.89066, 0.81561, 0.78134, 0.77277, 0.75995, 0.73022, 0.67126, 0.57178, 0.47000, 0.38361, 0.29419, 0.20703, 0.14734, 0.15866, 0.25162, 0.35818, 0.45062, 0.56750, 0.69748, 0.81232, 0.89697, 0.95062, 0.97656, 0.98615, 0.99191, 0.99219, 0.99243, 0.99368, 0.99368, 0.97028, 0.95566, 0.94559, 0.82617, 0.59973, 0.38361, 0.23901, 0.15338, 0.12921, 0.11206, 0.04382, -0.12946, -0.43552, -0.72644, -0.89847, -0.95465, -0.95541, -0.97229, -0.99268, -0.99319, -0.98840, -0.99142, -0.99167, -0.99091, -0.98840, -0.98965, -0.99368, -0.97455, -0.95010, -0.94684, -0.96219, -0.98514, -0.99243, -0.98889, -0.98917, -0.99142, -0.99219, -0.99091, -0.99191, -0.99142, -0.99142, -0.99191, -0.99066, -0.99167, -0.99091, -0.99142, -0.99191, -0.99091, -0.99191, -0.99091, -0.99167, -0.99167, -0.99091, -0.99219, -0.99091, -0.99191, -0.99142, -0.99118, -0.99191, -0.99066, -0.99191, -0.99091, -0.99118, -0.99243, -0.98941, -0.98462, -0.96976, -0.96320, -0.96194, -0.87305, -0.66196, -0.44809, -0.29495, -0.18085, -0.11813, -0.11334, -0.18564, -0.34885, -0.58237, -0.80450, -0.93726, -0.97806, -0.97354, -0.97531, -0.98990, -0.99368, -0.98941, -0.99219, -0.99091, -0.99142, -0.99167, -0.99091, -0.99191, -0.99118, -0.99219, -0.98236, -0.97781, -0.97656, -0.95135, -0.87204, -0.71335, -0.52139, -0.34232, -0.17783, -0.00906, 0.14886, 0.30450, 0.48889, 0.67404, 0.84030, 0.94128, 0.97681, 0.98462, 0.98337, 0.99142, 0.99521, 0.99493, 0.99420, 0.99445, 0.99521, 0.99393, 0.99545, 0.99445, 0.99521, 0.99521, 0.99445, 0.99570, 0.99445, 0.99521, 0.99469, 0.99445, 0.99521, 0.99420, 0.99521, 0.99445, 0.99445, 0.99521, 0.99445, 0.99545, 0.99445, 0.99469, 0.99493, 0.99393, 0.99493, 0.99445, 0.99393, 0.98285, 0.97781, 0.97479, 0.92844, 0.82114, 0.66095, 0.52417, 0.46826, 0.46722, 0.47934, 0.47379, 0.47076, 0.48209, 0.42014, 0.25439, 0.10074, -0.00302, -0.08966, -0.16068, -0.21436, -0.22040, -0.15137, -0.00476, 0.18536, 0.37631, 0.52292, 0.62164, 0.70425, 0.74835, 0.72366, 0.63928, 0.52567, 0.40805, 0.35666, 0.42896, 0.60175, 0.80200, 0.92743, 0.96548, 0.97632, 0.98337, 0.99066, 0.99521, 0.99420, 0.99368, 0.99292, 0.98840, 0.98083, 0.96774, 0.93323, 0.85440, 0.69470, 0.47202, 0.20425, -0.08890, -0.36423, -0.60025, -0.77481, -0.90173, -0.96017, -0.97028, -0.98108, -0.98840, -0.99219, -0.98990, -0.99219, -0.99142, -0.99142, -0.99219, -0.99091, -0.99243, -0.99066, -0.99142, -0.99142, -0.99118, -0.99191, -0.99066, -0.99167, -0.99142, -0.99142, -0.99219, -0.99091, -0.99191, -0.99118, -0.99142, -0.99191, -0.99091, -0.99191, -0.99091, -0.99167, -0.99191, -0.99118, -0.99219, -0.99091, -0.99167, -0.99142, -0.99142, -0.99219, -0.99091, -0.99191, -0.99142, -0.99118, -0.98917, -0.99042, -0.99445, -0.97330, -0.95590, -0.96219, -0.89670, -0.72241, -0.55112, -0.44809, -0.39319, -0.37833, -0.35641, -0.26270, -0.14230, -0.11282, -0.13525, -0.11536, -0.09671, -0.11511, -0.18060, -0.26874, -0.33374, -0.42215, -0.51358, -0.44785, -0.30450, -0.28613, -0.30527, -0.25037, -0.15390, -0.08286, -0.11157, -0.12592, -0.00327, 0.13803, 0.19141, 0.12820, 0.01788, -0.03952, -0.12592, -0.26773, -0.34634, -0.31384, -0.18060, -0.01080, 0.13574, 0.26120, 0.36975, 0.46573, 0.55087, 0.63626, 0.73022, 0.83072, 0.92014, 0.97177, 0.98587, 0.98413, 0.99167, 0.99445, 0.99292, 0.99219, 0.98740, 0.98007, 0.96472, 0.92239, 0.82166, 0.69067, 0.57959, 0.54962, 0.59695, 0.64255, 0.64633, 0.60629, 0.55942, 0.54910, 0.58966, 0.61887, 0.56952, 0.54181, 0.59518, 0.63248, 0.63876, 0.65463, 0.73398, 0.88312, 0.96927, 0.97101, 0.97958, 0.99344, 0.99420, 0.99268, 0.99493, 0.99469, 0.99445, 0.99521, 0.99445, 0.99545, 0.99420, 0.99493, 0.99493, 0.99420, 0.99545, 0.99420, 0.99493, 0.99420, 0.99393, 0.99420, 0.98840, 0.98309, 0.98309, 0.96069, 0.88461, 0.79370, 0.72064, 0.65765, 0.59998, 0.53247, 0.49268, 0.48615, 0.44205, 0.38034, 0.36447, 0.38715, 0.39294, 0.32645, 0.19595, 0.07782, -0.05893, -0.27832, -0.48309, -0.62619, -0.72995, -0.79999, -0.84583, -0.82166, -0.73575, -0.67227, -0.65491, -0.64960, -0.66397, -0.70175, -0.72894, -0.74658, -0.76724, -0.79520, -0.82846, -0.86523, -0.90527, -0.94382, -0.89948, -0.69849, -0.47479, -0.31662, -0.15414, -0.00729, 0.07077, 0.08237, 0.04431, -0.02292, -0.11761, -0.24307, -0.36926, -0.45087, -0.46170, -0.40250, -0.30679, -0.17529, 0.00000, 0.14331, 0.24179, 0.36774, 0.49545, 0.56522, 0.57907, 0.56775, 0.53851, 0.51132, 0.48688, 0.41913, 0.26044, 0.00955, -0.26297, -0.46396, -0.62341, -0.82214, -0.94684, -0.96774, -0.97531, -0.98413, -0.99017, -0.98990, -0.99219, -0.99066, -0.99142, -0.99167, -0.99118, -0.99219, -0.98990, -0.99118, -0.99368, -0.99142, -0.97757, -0.97403, -0.98007, -0.96170, -0.86826, -0.67783, -0.52719, -0.48788, -0.45490, -0.43146, -0.47681, -0.54105, -0.57983, -0.60904, -0.62317, -0.59949, -0.55566, -0.52063, -0.52115, -0.55112, -0.56244, -0.58337, -0.65540, -0.73373, -0.77228, -0.74759, -0.68890, -0.64609, -0.61887, -0.58060, -0.50351, -0.40729, -0.33929, -0.35110, -0.42944, -0.47028, -0.42267, -0.32718, -0.20224, -0.05640, 0.04556, 0.10529, 0.17630, 0.26169, 0.33197, 0.32138, 0.23776, 0.20956, 0.23148, 0.20352, 0.23325, 0.39267, 0.52719, 0.58438, 0.62289, 0.66345, 0.70023, 0.66296, 0.54330, 0.42618, 0.33475, 0.24533, 0.14105, 0.03851, 0.01358, 0.09143, 0.22845, 0.34961, 0.41711, 0.48740, 0.58914, 0.69519, 0.78186, 0.84357, 0.89822, 0.95389, 0.98135, 0.98615, 0.99167, 0.99243, 0.99445, 0.99420, 0.99469, 0.99493, 0.99393, 0.99545, 0.99445, 0.99521, 0.99469, 0.99445, 0.99521, 0.99420, 0.99469, 0.98965, 0.98715, 0.98563, 0.96295, 0.91736, 0.86624, 0.82367, 0.77554, 0.68411, 0.53549, 0.38916, 0.26120, 0.11435, -0.04053, -0.18161, -0.23172, -0.19394, -0.15237, -0.10730, -0.02997, 0.08588, 0.22620, 0.34305, 0.44104, 0.55740, 0.65765, 0.71259, 0.69217, 0.65363, 0.69748, 0.79572, 0.89368, 0.95514, 0.97733, 0.98413, 0.98816, 0.99243, 0.99445, 0.99243, 0.97302, 0.96674, 0.97983, 0.90378, 0.71005, 0.51056, 0.40451, 0.40982, 0.41559, 0.32996, 0.24356, 0.18866, 0.11411, 0.05365, 0.01157, -0.03247, -0.09216, -0.16095, -0.23248, -0.31662, -0.39771, -0.48663, -0.59647, -0.71536, -0.82013, -0.85287, -0.82947, -0.84937, -0.92215, -0.97177, -0.98663, -0.98816, -0.98438, -0.99091, -0.99219, -0.99091, -0.99191, -0.99042, -0.99191, -0.99091, -0.99142, -0.99191, -0.99091, -0.99191, -0.99091, -0.99167, -0.99142]) },\n    { name: \"ultrabox shortened od guitar\", expression: 0.5, samples: centerAndNormalizeWave([-0.82785, -0.67621, -0.40268, -0.43817, -0.45468, -0.22531, -0.18329, 0.24750, 0.71246, 0.52155, 0.56082, 0.48395, 0.33990, 0.46957, 0.27744, 0.42313, 0.47104, 0.18796, 0.12930, -0.13901, -0.07431, -0.16348, -0.74857, -0.73206, -0.35181, -0.26227, -0.41882, -0.27786, -0.19806, -0.19867, 0.18643, 0.24808, 0.08847, -0.06964, 0.06912, 0.20474, -0.05304, 0.29416, 0.31967, 0.14243, 0.27521, -0.23932, -0.14752, 0.12360, -0.26123, -0.26111, 0.06616, 0.26520, 0.08090, 0.15240, 0.16254, -0.12061, 0.04562, 0.00131, 0.04050, 0.08182, -0.21729, -0.17041, -0.16312, -0.08563, 0.06390, 0.05099, 0.05627, 0.02728, 0.00726, -0.13028, -0.05673, -0.14969, -0.17645, 0.35492, 0.16766, -0.00897, 0.24326, -0.00461, -0.04456, 0.01776, -0.04950, -0.01221, 0.02039, 0.07684, 0.13397, 0.39850, 0.35962, 0.13754, 0.42310, 0.27161, -0.17609, 0.03659, 0.10635, -0.21909, -0.22046, -0.20258, -0.40973, -0.40280, -0.40521, -0.66284]) },\n]);\nConfig.chipWaves = rawChipToIntegrated(_a.rawChipWaves);\nConfig.rawRawChipWaves = _a.rawChipWaves;\nConfig.firstIndexForSamplesInChipWaveList = _a.chipWaves.length;\nConfig.chipNoises = toNameMap([\n    { name: \"retro\", expression: 0.25, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"white\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n    { name: \"clang\", expression: 0.4, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"buzz\", expression: 0.3, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"hollow\", expression: 1.5, basePitch: 96, pitchFilterMult: 1.0, isSoft: true, samples: null },\n    { name: \"shine\", expression: 1.0, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"deep\", expression: 1.5, basePitch: 120, pitchFilterMult: 1024.0, isSoft: true, samples: null },\n    { name: \"cutter\", expression: 0.005, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"metallic\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"static\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"1-bit white\", expression: 0.5, basePitch: 74.41, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"1-bit metallic\", expression: 0.5, basePitch: 86.41, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"crackling\", expression: 0.9, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    { name: \"pink\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n    { name: \"brownian\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n]);\nConfig.filterFreqStep = 1.0 / 4.0;\nConfig.filterFreqRange = 34;\nConfig.filterFreqReferenceSetting = 28;\nConfig.filterFreqReferenceHz = 8000.0;\nConfig.filterFreqMaxHz = _a.filterFreqReferenceHz * Math.pow(2.0, _a.filterFreqStep * (_a.filterFreqRange - 1 - _a.filterFreqReferenceSetting));\nConfig.filterFreqMinHz = 8.0;\nConfig.filterGainRange = 15;\nConfig.filterGainCenter = 7;\nConfig.filterGainStep = 1.0 / 2.0;\nConfig.filterMaxPoints = 8;\nConfig.filterTypeNames = [\"low-pass\", \"high-pass\", \"peak\"];\nConfig.filterMorphCount = 10;\nConfig.filterSimpleCutRange = 11;\nConfig.filterSimplePeakRange = 8;\nConfig.fadeInRange = 10;\nConfig.fadeOutTicks = [-24, -12, -6, -3, -1, 6, 12, 24, 48, 72, 96];\nConfig.fadeOutNeutral = 4;\nConfig.drumsetFadeOutTicks = 48;\nConfig.transitions = toNameMap([\n    { name: \"normal\", isSeamless: false, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: false },\n    { name: \"interrupt\", isSeamless: true, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\n    { name: \"continue\", isSeamless: true, continues: true, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\n    { name: \"slide\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: true },\n    { name: \"slide in pattern\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: false }\n]);\nConfig.vibratos = toNameMap([\n    { name: \"none\", amplitude: 0.0, type: 0, delayTicks: 0 },\n    { name: \"light\", amplitude: 0.15, type: 0, delayTicks: 0 },\n    { name: \"delayed\", amplitude: 0.3, type: 0, delayTicks: 37 },\n    { name: \"heavy\", amplitude: 0.45, type: 0, delayTicks: 0 },\n    { name: \"shaky\", amplitude: 0.1, type: 1, delayTicks: 0 },\n]);\nConfig.vibratoTypes = toNameMap([\n    { name: \"normal\", periodsSeconds: [0.14], period: 0.14 },\n    { name: \"shaky\", periodsSeconds: [0.11, 1.618 * 0.11, 3 * 0.11], period: 266.97 },\n]);\nConfig.arpSpeedScale = [0, 0.0625, 0.125, 0.2, 0.25, 1 / 3, 0.4, 0.5, 2 / 3, 0.75, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.15, 4.3, 4.5, 4.8, 5, 5.5, 6, 8];\nConfig.unisons = toNameMap([\n    { name: \"none\", voices: 1, spread: 0.0, offset: 0.0, expression: 1.4, sign: 1.0 },\n    { name: \"shimmer\", voices: 2, spread: 0.018, offset: 0.0, expression: 0.8, sign: 1.0 },\n    { name: \"hum\", voices: 2, spread: 0.045, offset: 0.0, expression: 1.0, sign: 1.0 },\n    { name: \"honky tonk\", voices: 2, spread: 0.09, offset: 0.0, expression: 1.0, sign: 1.0 },\n    { name: \"dissonant\", voices: 2, spread: 0.25, offset: 0.0, expression: 0.9, sign: 1.0 },\n    { name: \"fifth\", voices: 2, spread: 3.5, offset: 3.5, expression: 0.9, sign: 1.0 },\n    { name: \"octave\", voices: 2, spread: 6.0, offset: 6.0, expression: 0.8, sign: 1.0 },\n    { name: \"bowed\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: -1.0 },\n    { name: \"piano\", voices: 2, spread: 0.01, offset: 0.0, expression: 1.0, sign: 0.7 },\n    { name: \"warbled\", voices: 2, spread: 0.25, offset: 0.05, expression: 0.9, sign: -0.8 },\n    { name: \"hecking gosh\", voices: 2, spread: 6.25, offset: -6.0, expression: 0.8, sign: -0.7 },\n    { name: \"spinner\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: 1.0 },\n    { name: \"detune\", voices: 1, spread: 0.0, offset: 0.25, expression: 1.0, sign: 1.0 },\n    { name: \"rising\", voices: 2, spread: 1.0, offset: 0.7, expression: 0.95, sign: 1.0 },\n    { name: \"vibrate\", voices: 2, spread: 3.5, offset: 7, expression: 0.975, sign: 1.0 },\n    { name: \"fourths\", voices: 2, spread: 4, offset: 4, expression: 0.95, sign: 1.0 },\n    { name: \"bass\", voices: 1, spread: 0, offset: -7, expression: 1.0, sign: 1.0 },\n    { name: \"dirty\", voices: 2, spread: 0, offset: 0.1, expression: 0.975, sign: 1.0 },\n    { name: \"stationary\", voices: 2, spread: 3.5, offset: 0.0, expression: 0.9, sign: 1.0 },\n    { name: \"recurve\", voices: 2, spread: 0.005, offset: 0.0, expression: 1.0, sign: 1.0 },\n    { name: \"voiced\", voices: 2, spread: 9.5, offset: 0.0, expression: 1.0, sign: 1.0 },\n    { name: \"fluctuate\", voices: 2, spread: 12, offset: 0.0, expression: 1.0, sign: 1.0 },\n    { name: \"thin\", voices: 1, spread: 0.0, offset: 50.0, expression: 1.0, sign: 1.0 },\n    { name: \"inject\", voices: 2, spread: 6.0, offset: 0.4, expression: 1.0, sign: 1.0 },\n    { name: \"askewed\", voices: 2, spread: 0.0, offset: 0.42, expression: 0.7, sign: 1.0 },\n    { name: \"resonance\", voices: 2, spread: 0.0025, offset: 0.1, expression: 0.8, sign: -1.5 },\n    { name: \"FART\", voices: 2, spread: 13, offset: -5, expression: 1.0, sign: -3 },\n    { name: \"augmented\", voices: 4, spread: 6, offset: 6, expression: 0.5, sign: 1.0 },\n    { name: \"diminished\", voices: 5, spread: 6, offset: 6, expression: 0.4, sign: 1.0 },\n    { name: \"chorus\", voices: 9, spread: 0.22, offset: 0, expression: 0.15, sign: 1.0 },\n    { name: \"block\", voices: 9, spread: 6, offset: 6, expression: 0.15, sign: 0.8 },\n    { name: \"extraterrestrial\", voices: 6, spread: 15.2, offset: -6, expression: 0.35, sign: 0.7 },\n    { name: \"bow\", voices: 9, spread: 0.006, offset: 0, expression: 0.15, sign: 0.5 }\n]);\nConfig.effectNames = [\"reverb\", \"chorus\", \"panning\", \"distortion\", \"bitcrusher\", \"post eq\", \"echo\", \"ring mod\", \"granular\", \"gain\", \"flanger\"];\nConfig.effectDisplayNames = [\"Reverb\", \"Chorus\", \"Panning\", \"Distortion\", \"Bitcrusher\", \"Post EQ\", \"Echo\", \"Ring Mod\", \"Granular\", \"Gain\", \"Flanger\"];\nConfig.effectOrder = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nConfig.mdeffectNames = [\"pitch shift\", \"detune\", \"vibrato\", \"transition type\", \"chord type\", \"note range\"];\nConfig.mdeffectOrder = [3, 4, 0, 1, 2, 5];\nConfig.noteSizeMax = 6;\nConfig.volumeRange = 100;\nConfig.volumeLogScale = 0.0714;\nConfig.gainRangeMult = 2;\nConfig.panCenter = 50;\nConfig.panMax = _a.panCenter * 2;\nConfig.panDelaySecondsMax = 0.001;\nConfig.ringModRange = 8;\nConfig.ringModHzRange = 64;\nConfig.ringModMinHz = 20;\nConfig.ringModMaxHz = 4400;\nConfig.rmHzOffsetCenter = 200;\nConfig.rmHzOffsetMax = 400;\nConfig.rmHzOffsetMin = 0;\nConfig.granularRange = 10;\nConfig.grainSizeMin = 40;\nConfig.grainSizeMax = 2000;\nConfig.grainSizeStep = 40;\nConfig.grainRangeMax = 1600;\nConfig.grainAmountsMax = 10;\nConfig.granularEnvelopeType = 0;\nConfig.flangerRange = 24;\nConfig.flangerSpeedRange = 16;\nConfig.flangerDepthRange = 16;\nConfig.flangerFeedbackRange = 16;\nConfig.flangerMaxDelay = 0.0034 * 4.35;\nConfig.flangerPeriodMult = 0.000004;\nConfig.flangerVolumeMult = 0.45;\nConfig.chorusRange = 24;\nConfig.chorusPeriodSeconds = 2.0;\nConfig.chorusDelayRange = 0.0034;\nConfig.chorusDelayOffsets = [[1.51, 2.10, 3.35], [1.47, 2.15, 3.25]];\nConfig.chorusPhaseOffsets = [[0.0, 2.1, 4.2], [3.2, 5.3, 1.0]];\nConfig.chorusMaxDelay = _a.chorusDelayRange * (1.0 + _a.chorusDelayOffsets[0].concat(_a.chorusDelayOffsets[1]).reduce((x, y) => Math.max(x, y)));\nConfig.chords = toNameMap([\n    { name: \"simultaneous\", customInterval: false, arpeggiates: false, strumParts: 0, singleTone: false },\n    { name: \"strum\", customInterval: false, arpeggiates: false, strumParts: 1, singleTone: false },\n    { name: \"arpeggio\", customInterval: false, arpeggiates: true, strumParts: 0, singleTone: true },\n    { name: \"custom interval\", customInterval: true, arpeggiates: false, strumParts: 0, singleTone: true },\n    { name: \"monophonic\", customInterval: false, arpeggiates: false, strumParts: 0, singleTone: true }\n]);\nConfig.maxChordSize = 9;\nConfig.operatorCount = 4;\nConfig.maxPitchOrOperatorCount = Math.max(_a.maxChordSize, _a.operatorCount + 2);\nConfig.algorithms = toNameMap([\n    { name: \"1←(2 3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], []] },\n    { name: \"1←(2 3←4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [], [4], []] },\n    { name: \"1←2←(3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3, 4], [], []] },\n    { name: \"1←(2 3)←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [4], [4], []] },\n    { name: \"1←2←3←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3], [4], []] },\n    { name: \"1←3 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3], [4], [], []] },\n    { name: \"1 2←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3, 4], [], []] },\n    { name: \"1 2←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3], [4], []] },\n    { name: \"(1 2)←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3], [3], [4], []] },\n    { name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4], [3, 4], [], []] },\n    { name: \"1 2 3←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[], [], [4], []] },\n    { name: \"(1 2 3)←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4], [4], [4], []] },\n    { name: \"1 2 3 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[], [], [], []] },\n    { name: \"1←(2 3) 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[2, 3], [4], [], []] },\n    { name: \"1←(2 (3 (4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[2, 3, 4], [3, 4], [4], []] },\n]);\nConfig.algorithms6Op = toNameMap([\n    { name: \"Custom\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [], [], [], [], []] },\n    { name: \"1←2←3←4←5←6\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2], [3], [4], [5], [6], []] },\n    { name: \"1←3 2←4←5←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4], [], [5], [6], []] },\n    { name: \"1←3←4 2←5←6\", carrierCount: 2, associatedCarrier: [1, 1, 1, 2, 2, 2], modulatedBy: [[3], [5], [4], [], [6], []] },\n    { name: \"1←4 2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [5], [6], [], [], []] },\n    { name: \"1←3 2←(4 5←6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5], [], [], [6], []] },\n    { name: \"1←(3 4) 2←5←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3, 4], [5], [], [], [6], []] },\n    { name: \"1←3 2←(4 5 6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5, 6], [], [], [], []] },\n    { name: \"1←3 2←(4 5)←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5], [], [6], [6], []] },\n    { name: \"1←3 2←4←(5 6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4], [], [5, 6], [], []] },\n    { name: \"1←(2 3 4 5 6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [], [], [], [], []] },\n    { name: \"1←(2 3←5 4←6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [5], [6], [], []] },\n    { name: \"1←(2 3 4←5←6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], [5], [6], []] },\n    { name: \"1←4←5 (2 3)←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [6], [6], [5], [], []] },\n    { name: \"1←(3 4)←5 2←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3, 4], [6], [5], [5], [], []] },\n    { name: \"(1 2)←4 3←(5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [4], [5, 6], [], [], []] },\n    { name: \"(1 2)←5 (3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[5], [5], [6], [6], [], []] },\n    { name: \"(1 2 3)←(4 5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4, 5, 6], [4, 5, 6], [4, 5, 6], [], [], []] },\n    { name: \"1←5 (2 3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[5], [6], [6], [6], [], []] },\n    { name: \"1 2←5 (3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [5], [6], [6], [], []] },\n    { name: \"1 2 (3 4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [6], [6], [6], []] },\n    { name: \"1 2 3 (4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [], [6], [6], []] },\n    { name: \"1 2←4 3←(5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3, 3, 3], modulatedBy: [[], [4], [5, 6], [], [], []] },\n    { name: \"1←4 2←(5 6) 3\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3, 3, 3,], modulatedBy: [[4], [5, 6], [], [], [], []] },\n    { name: \"1 2 3←5 4←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [], [5], [6], [], []] },\n    { name: \"1 (2 3)←5←6 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4,], modulatedBy: [[], [5], [5], [], [6], []] },\n    { name: \"1 2 3←5←6 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [], [5, 6], [], [], []] },\n    { name: \"(1 2 3 4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[6], [6], [6], [6], [6], []] },\n    { name: \"1 2 3 4 5←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [], [], [6], []] },\n    { name: \"1 2 3 4 5 6\", carrierCount: 6, associatedCarrier: [1, 2, 3, 4, 5, 6], modulatedBy: [[], [], [], [], [], []] },\n    { name: \"1←(2 (3 (4 (5 (6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[2, 3, 4, 5, 6], [3, 4, 5, 6], [4, 5, 6], [5, 6], [6], []] },\n    { name: \"1←(2(3(4(5(6\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [3, 4, 5, 6], [4, 5, 6], [5, 6], [6], []] },\n    { name: \"1←4(2←5(3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [3, 5], [6], [], [], []] },\n    { name: \"1←4(2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [5], [6], [], [], []] },\n]);\nConfig.operatorCarrierInterval = [0.0, 0.04, -0.073, 0.091, 0.061, 0.024];\nConfig.operatorAmplitudeMax = 15;\nConfig.operatorFrequencies = toNameMap([\n    { name: \"0.12×\", mult: 0.125, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"0.25×\", mult: 0.25, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"0.5×\", mult: 0.5, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"0.75×\", mult: 0.75, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: -1.0 },\n    { name: \"2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: -1.0 },\n    { name: \"3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"3.5×\", mult: 3.5, hzOffset: -0.05, amplitudeSign: 1.0 },\n    { name: \"4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"~4×\", mult: 4.0, hzOffset: -2.4, amplitudeSign: -1.0 },\n    { name: \"5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"10×\", mult: 10.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"12×\", mult: 12.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"14×\", mult: 14.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"15×\", mult: 15.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"17×\", mult: 17.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"18×\", mult: 18.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"19×\", mult: 19.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"~20×\", mult: 20.0, hzOffset: -5.0, amplitudeSign: -1.0 },\n    { name: \"25×\", mult: 25.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"50×\", mult: 50.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"75×\", mult: 75.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"100×\", mult: 100.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"128×\", mult: 128.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    { name: \"256×\", mult: 250.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n]);\nConfig.envelopes = toNameMap([\n    { name: \"none\", type: 0, speed: 0.0 },\n    { name: \"note size\", type: 1, speed: 0.0 },\n    { name: \"pitch\", type: 2, speed: 0.0 },\n    { name: \"punch\", type: 4, speed: 0.0 },\n    { name: \"flare -1\", type: 5, speed: 128.0 },\n    { name: \"flare 1\", type: 5, speed: 32.0 },\n    { name: \"flare 2\", type: 5, speed: 8.0 },\n    { name: \"flare 3\", type: 5, speed: 2.0 },\n    { name: \"twang -1\", type: 6, speed: 128.0 },\n    { name: \"twang 1\", type: 6, speed: 32.0 },\n    { name: \"twang 2\", type: 6, speed: 8.0 },\n    { name: \"twang 3\", type: 6, speed: 2.0 },\n    { name: \"swell -1\", type: 7, speed: 128.0 },\n    { name: \"swell 1\", type: 7, speed: 32.0 },\n    { name: \"swell 2\", type: 7, speed: 8.0 },\n    { name: \"swell 3\", type: 7, speed: 2.0 },\n    { name: \"tremolo0\", type: 8, speed: 8.0 },\n    { name: \"tremolo1\", type: 8, speed: 4.0 },\n    { name: \"tremolo2\", type: 8, speed: 2.0 },\n    { name: \"tremolo3\", type: 8, speed: 1.0 },\n    { name: \"tremolo4\", type: 9, speed: 4.0 },\n    { name: \"tremolo5\", type: 9, speed: 2.0 },\n    { name: \"tremolo6\", type: 9, speed: 1.0 },\n    { name: \"decay -1\", type: 10, speed: 40.0 },\n    { name: \"decay 1\", type: 10, speed: 10.0 },\n    { name: \"decay 2\", type: 10, speed: 7.0 },\n    { name: \"decay 3\", type: 10, speed: 4.0 },\n    { name: \"wibble-1\", type: 11, speed: 128.0 },\n    { name: \"wibble 1\", type: 11, speed: 24.0 },\n    { name: \"wibble 2\", type: 11, speed: 12.0 },\n    { name: \"wibble 3\", type: 11, speed: 4.0 },\n    { name: \"linear-2\", type: 12, speed: 256.0 },\n    { name: \"linear-1\", type: 12, speed: 128.0 },\n    { name: \"linear 1\", type: 12, speed: 32.0 },\n    { name: \"linear 2\", type: 12, speed: 8.0 },\n    { name: \"linear 3\", type: 12, speed: 2.0 },\n    { name: \"rise -2\", type: 13, speed: 256.0 },\n    { name: \"rise -1\", type: 13, speed: 128.0 },\n    { name: \"rise 1\", type: 13, speed: 32.0 },\n    { name: \"rise 2\", type: 13, speed: 8.0 },\n    { name: \"rise 3\", type: 13, speed: 2.0 },\n    { name: \"flute 1\", type: 11, speed: 16.0 },\n    { name: \"flute 2\", type: 11, speed: 8.0 },\n    { name: \"flute 3\", type: 11, speed: 4.0 },\n    { name: \"tripolo1\", type: 8, speed: 9.0 },\n    { name: \"tripolo2\", type: 8, speed: 6.0 },\n    { name: \"tripolo3\", type: 8, speed: 3.0 },\n    { name: \"tripolo4\", type: 9, speed: 9.0 },\n    { name: \"tripolo5\", type: 9, speed: 6.0 },\n    { name: \"tripolo6\", type: 9, speed: 3.0 },\n    { name: \"pentolo1\", type: 8, speed: 10.0 },\n    { name: \"pentolo2\", type: 8, speed: 5.0 },\n    { name: \"pentolo3\", type: 8, speed: 2.5 },\n    { name: \"pentolo4\", type: 9, speed: 10.0 },\n    { name: \"pentolo5\", type: 9, speed: 5.0 },\n    { name: \"pentolo6\", type: 9, speed: 2.5 },\n    { name: \"flutter 1\", type: 8, speed: 14.0 },\n    { name: \"flutter 2\", type: 9, speed: 11.0 },\n    { name: \"water-y flutter\", type: 8, speed: 9.0 },\n    { name: \"blip 1\", type: 14, speed: 6.0 },\n    { name: \"blip 2\", type: 14, speed: 16.0 },\n    { name: \"blip 3\", type: 14, speed: 32.0 },\n    { name: \"fall 1\", type: 15, speed: 8.0 },\n    { name: \"fall 2\", type: 15, speed: 4.0 },\n    { name: \"fall 3\", type: 15, speed: 2.0 },\n]);\nConfig.newEnvelopes = toNameMap([\n    { name: \"none\", type: 0, speed: 0.0 },\n    { name: \"note size\", type: 1, speed: 0.0 },\n    { name: \"pitch\", type: 2, speed: 0.0 },\n    { name: \"random\", type: 3, speed: 4.0 },\n    { name: \"punch\", type: 4, speed: 0.0 },\n    { name: \"flare\", type: 5, speed: 32.0 },\n    { name: \"twang\", type: 6, speed: 32.0 },\n    { name: \"swell\", type: 7, speed: 32.0 },\n    { name: \"lfo\", type: 8, speed: 4.0 },\n    { name: \"decay\", type: 10, speed: 10.0 },\n    { name: \"wibble\", type: 11, speed: 24.0 },\n    { name: \"linear\", type: 12, speed: 32.0 },\n    { name: \"rise\", type: 13, speed: 32.0 },\n    { name: \"blip\", type: 14, speed: 6.0 },\n    { name: \"fall\", type: 15, speed: 2.0 },\n]);\nConfig.feedbacks = toNameMap([\n    { name: \"1⟲\", indices: [[1], [], [], []] },\n    { name: \"2⟲\", indices: [[], [2], [], []] },\n    { name: \"3⟲\", indices: [[], [], [3], []] },\n    { name: \"4⟲\", indices: [[], [], [], [4]] },\n    { name: \"1⟲ 2⟲\", indices: [[1], [2], [], []] },\n    { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4]] },\n    { name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], []] },\n    { name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4]] },\n    { name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]] },\n    { name: \"1→2\", indices: [[], [1], [], []] },\n    { name: \"1→3\", indices: [[], [], [1], []] },\n    { name: \"1→4\", indices: [[], [], [], [1]] },\n    { name: \"2→3\", indices: [[], [], [2], []] },\n    { name: \"2→4\", indices: [[], [], [], [2]] },\n    { name: \"3→4\", indices: [[], [], [], [3]] },\n    { name: \"1→3 2→4\", indices: [[], [], [1], [2]] },\n    { name: \"1→4 2→3\", indices: [[], [], [2], [1]] },\n    { name: \"1→2→3→4\", indices: [[], [1], [2], [3]] },\n    { name: \"1↔2 3↔4\", indices: [[2], [1], [4], [3]] },\n    { name: \"1↔4 2↔3\", indices: [[4], [3], [2], [1]] },\n    { name: \"2→1→4→3→2\", indices: [[2], [3], [4], [1]] },\n    { name: \"1→2→3→4→1\", indices: [[4], [1], [2], [3]] },\n    { name: \"(1 2 3)→4\", indices: [[], [], [], [1, 2, 3]] },\n    { name: \"ALL\", indices: [[1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]] },\n]);\nConfig.feedbacks6Op = toNameMap([\n    { name: \"Custom\", indices: [[2, 3, 4, 5, 6], [], [], [], [], []] },\n    { name: \"1⟲\", indices: [[1], [], [], [], [], []] },\n    { name: \"2⟲\", indices: [[], [2], [], [], [], []] },\n    { name: \"3⟲\", indices: [[], [], [3], [], [], []] },\n    { name: \"4⟲\", indices: [[], [], [], [4], [], []] },\n    { name: \"5⟲\", indices: [[], [], [], [], [5], []] },\n    { name: \"6⟲\", indices: [[], [], [], [], [], [6]] },\n    { name: \"1⟲ 2⟲\", indices: [[1], [2], [], [], [], []] },\n    { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4], [], []] },\n    { name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], [], [], []] },\n    { name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4], [], []] },\n    { name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4], [], []] },\n    { name: \"1⟲ 2⟲ 3⟲ 4⟲ 5⟲\", indices: [[1], [2], [3], [4], [5], []] },\n    { name: \"1⟲ 2⟲ 3⟲ 4⟲ 5⟲ 6⟲\", indices: [[1], [2], [3], [4], [5], [6]] },\n    { name: \"1→2\", indices: [[], [1], [], [], [], []] },\n    { name: \"1→3\", indices: [[], [], [1], [], [], []] },\n    { name: \"1→4\", indices: [[], [], [], [1], [], []] },\n    { name: \"1→5\", indices: [[], [], [], [], [1], []] },\n    { name: \"1→6\", indices: [[], [], [], [], [], [1]] },\n    { name: \"2→3\", indices: [[], [], [2], [], [], []] },\n    { name: \"2→4\", indices: [[], [], [], [2], [], []] },\n    { name: \"3→4\", indices: [[], [], [], [3], [], []] },\n    { name: \"4→5\", indices: [[], [], [], [], [4], []] },\n    { name: \"1→4 2→5 3→6\", indices: [[], [], [], [1], [2], [3]] },\n    { name: \"1→5 2→6 3→4\", indices: [[], [], [], [3], [1], [2]] },\n    { name: \"1→2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\n    { name: \"2→1→6→5→4→3→2\", indices: [[2], [3], [4], [5], [6], [1]] },\n    { name: \"1→2→3→4→5→6→1\", indices: [[6], [1], [2], [3], [4], [5]] },\n    { name: \"1↔2 3↔4 5↔6\", indices: [[2], [1], [4], [3], [6], [5]] },\n    { name: \"1↔4 2↔5 3↔6\", indices: [[4], [5], [6], [1], [2], [3]] },\n    { name: \"(1,2,3,4,5)→6\", indices: [[], [], [], [], [], [1, 2, 3, 4, 5]] },\n    { name: \"ALL\", indices: [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]] },\n]);\nConfig.chipNoiseLength = 1 << 15;\nConfig.spectrumNoiseLength = 1 << 15;\nConfig.spectrumBasePitch = 24;\nConfig.spectrumControlPoints = 30;\nConfig.spectrumControlPointsPerOctave = 7;\nConfig.spectrumControlPointBits = 3;\nConfig.spectrumMax = (1 << _a.spectrumControlPointBits) - 1;\nConfig.harmonicsControlPoints = 28;\nConfig.harmonicsRendered = 64;\nConfig.harmonicsRenderedForPickedString = 1 << 8;\nConfig.harmonicsControlPointBits = 3;\nConfig.harmonicsMax = (1 << _a.harmonicsControlPointBits) - 1;\nConfig.harmonicsWavelength = 1 << 11;\nConfig.pulseWidthRange = 50;\nConfig.pulseWidthStepPower = 0.5;\nConfig.supersawVoiceCount = 7;\nConfig.supersawDynamismMax = 6;\nConfig.supersawSpreadMax = 12;\nConfig.supersawShapeMax = 6;\nConfig.pitchChannelCountMin = 1;\nConfig.pitchChannelCountMax = 60;\nConfig.noiseChannelCountMin = 0;\nConfig.noiseChannelCountMax = 60;\nConfig.modChannelCountMin = 0;\nConfig.modChannelCountMax = 60;\nConfig.noiseInterval = 6;\nConfig.pitchesPerOctave = 12;\nConfig.drumCount = 12;\nConfig.pitchOctaves = 8;\nConfig.modCount = 6;\nConfig.maxPitch = _a.pitchOctaves * _a.pitchesPerOctave;\nConfig.maximumTonesPerChannel = _a.maxChordSize * 2;\nConfig.justIntonationSemitones = [1.0 / 2.0, 8.0 / 15.0, 9.0 / 16.0, 3.0 / 5.0, 5.0 / 8.0, 2.0 / 3.0, 32.0 / 45.0, 3.0 / 4.0, 4.0 / 5.0, 5.0 / 6.0, 8.0 / 9.0, 15.0 / 16.0, 1.0, 16.0 / 15.0, 9.0 / 8.0, 6.0 / 5.0, 5.0 / 4.0, 4.0 / 3.0, 45.0 / 32.0, 3.0 / 2.0, 8.0 / 5.0, 5.0 / 3.0, 16.0 / 9.0, 15.0 / 8.0, 2.0].map(x => Math.log2(x) * _a.pitchesPerOctave);\nConfig.pitchShiftRange = _a.justIntonationSemitones.length;\nConfig.pitchShiftCenter = _a.pitchShiftRange >> 1;\nConfig.detuneCenter = 200;\nConfig.detuneMax = 400;\nConfig.detuneMin = 0;\nConfig.songDetuneMin = 0;\nConfig.songDetuneMax = 500;\nConfig.unisonVoicesMin = 1;\nConfig.unisonVoicesMax = 9;\nConfig.unisonSpreadMin = -96;\nConfig.unisonSpreadMax = 96;\nConfig.unisonOffsetMin = -96;\nConfig.unisonOffsetMax = 96;\nConfig.unisonExpressionMin = -2;\nConfig.unisonExpressionMax = 2;\nConfig.unisonSignMin = -2;\nConfig.unisonSignMax = 2;\nConfig.sineWaveLength = 1 << 8;\nConfig.sineWaveMask = _a.sineWaveLength - 1;\nConfig.sineWave = _a.generateSineWave();\nConfig.perEnvelopeSpeedIndices = [0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.2, 0.25, 0.3, 0.3333, 0.4, 0.5, 0.6, 0.6667, 0.7, 0.75, 0.8, 0.9, 1, 1.25, 1.3333, 1.5, 1.6667, 1.75, 2, 2.25, 2.5, 2.75, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 32, 40, 64, 128, 256];\nConfig.perEnvelopeSpeedToIndices = {\n    0: 0,\n    0.01: 1,\n    0.02: 2,\n    0.03: 3,\n    0.04: 4,\n    0.05: 5,\n    0.06: 6,\n    0.07: 7,\n    0.08: 8,\n    0.09: 9,\n    0.1: 10,\n    0.2: 11,\n    0.25: 12,\n    0.3: 13,\n    0.3333: 14,\n    0.4: 15,\n    0.5: 16,\n    0.6: 17,\n    0.6667: 18,\n    0.7: 19,\n    0.75: 20,\n    0.8: 21,\n    0.9: 22,\n    1: 23,\n    1.25: 24,\n    1.3333: 25,\n    1.5: 26,\n    1.6667: 27,\n    1.75: 28,\n    2: 29,\n    2.25: 30,\n    2.5: 31,\n    2.75: 32,\n    3: 33,\n    3.5: 34,\n    4: 35,\n    4.5: 36,\n    5: 37,\n    5.5: 38,\n    6: 39,\n    6.5: 40,\n    7: 41,\n    7.5: 42,\n    8: 43,\n    8.5: 44,\n    9: 45,\n    9.5: 46,\n    10: 47,\n    11: 48,\n    12: 49,\n    13: 50,\n    14: 51,\n    15: 52,\n    16: 53,\n    17: 54,\n    18: 55,\n    19: 56,\n    20: 57,\n    24: 58,\n    32: 59,\n    40: 60,\n    64: 61,\n    128: 62,\n    256: 63,\n};\nConfig.perEnvelopeBoundMin = 0;\nConfig.perEnvelopeBoundMax = 2;\nConfig.randomEnvelopeSeedMax = 63;\nConfig.randomEnvelopeStepsMax = 24;\nConfig.pickedStringDispersionCenterFreq = 6000.0;\nConfig.pickedStringDispersionFreqScale = 0.3;\nConfig.pickedStringDispersionFreqMult = 4.0;\nConfig.pickedStringShelfHz = 4000.0;\nConfig.distortionRange = 16;\nConfig.stringSustainRange = 15;\nConfig.stringDecayRate = 0.12;\nConfig.enableAcousticSustain = false;\nConfig.sustainTypeNames = [\"bright\", \"acoustic\"];\nConfig.bitcrusherFreqRange = 14;\nConfig.bitcrusherOctaveStep = 0.5;\nConfig.bitcrusherQuantizationRange = 8;\nConfig.maxEnvelopeCount = 16;\nConfig.defaultAutomationRange = 13;\nConfig.instrumentAutomationTargets = toNameMap([\n    { name: \"none\", computeIndex: null, displayName: \"none\", interleave: false, isFilter: false, maxCount: 1, effect: null, mdeffect: null, compatibleInstruments: null },\n    { name: \"noteVolume\", computeIndex: 0, displayName: \"pre volume\", interleave: false, isFilter: false, maxCount: 1, effect: null, mdeffect: null, compatibleInstruments: null },\n    { name: \"mixVolume\", computeIndex: 1, displayName: \"post volume\", interleave: false, isFilter: false, maxCount: 1, effect: null, mdeffect: null, compatibleInstruments: null },\n    { name: \"pulseWidth\", computeIndex: 3, displayName: \"pulse width\", interleave: false, isFilter: false, maxCount: 1, effect: null, mdeffect: null, compatibleInstruments: [6, 8] },\n    { name: \"stringSustain\", computeIndex: 4, displayName: \"sustain\", interleave: false, isFilter: false, maxCount: 1, effect: null, mdeffect: null, compatibleInstruments: [7] },\n    { name: \"unison\", computeIndex: 5, displayName: \"unison\", interleave: false, isFilter: false, maxCount: 1, effect: null, mdeffect: null, compatibleInstruments: [0, 5, 7, 9, 6, 2, 3, 4] },\n    { name: \"operatorFrequency\", computeIndex: 6, displayName: \"fm# freq\", interleave: true, isFilter: false, maxCount: _a.operatorCount + 2, effect: null, mdeffect: null, compatibleInstruments: [1, 11] },\n    { name: \"operatorAmplitude\", computeIndex: 12, displayName: \"fm# volume\", interleave: false, isFilter: false, maxCount: _a.operatorCount + 2, effect: null, mdeffect: null, compatibleInstruments: [1, 11] },\n    { name: \"feedbackAmplitude\", computeIndex: 18, displayName: \"fm feedback\", interleave: false, isFilter: false, maxCount: 1, effect: null, mdeffect: null, compatibleInstruments: [1, 11] },\n    { name: \"pitchShift\", computeIndex: 19, displayName: \"pitch shift\", interleave: false, isFilter: false, maxCount: 1, effect: null, mdeffect: 0, compatibleInstruments: null },\n    { name: \"detune\", computeIndex: 20, displayName: \"detune\", interleave: false, isFilter: false, maxCount: 1, effect: null, mdeffect: 1, compatibleInstruments: null },\n    { name: \"vibratoDepth\", computeIndex: 21, displayName: \"vibrato depth\", interleave: false, isFilter: false, maxCount: 1, effect: null, mdeffect: 2, compatibleInstruments: null },\n    { name: \"noteFilterAllFreqs\", computeIndex: 2, displayName: \"pre eq freqs\", interleave: false, isFilter: true, maxCount: 1, effect: null, mdeffect: null, compatibleInstruments: null },\n    { name: \"noteFilterFreq\", computeIndex: 22, displayName: \"pre eq # freq\", interleave: false, isFilter: true, maxCount: _a.filterMaxPoints, effect: null, mdeffect: null, compatibleInstruments: null },\n    { name: \"decimalOffset\", computeIndex: 38, displayName: \"decimal offset\", interleave: false, isFilter: false, maxCount: 1, effect: null, mdeffect: null, compatibleInstruments: [6, 8] },\n    { name: \"supersawDynamism\", computeIndex: 39, displayName: \"dynamism\", interleave: false, isFilter: false, maxCount: 1, effect: null, mdeffect: null, compatibleInstruments: [8] },\n    { name: \"supersawSpread\", computeIndex: 40, displayName: \"spread\", interleave: false, isFilter: false, maxCount: 1, effect: null, mdeffect: null, compatibleInstruments: [8] },\n    { name: \"supersawShape\", computeIndex: 41, displayName: \"saw↔pulse\", interleave: false, isFilter: false, maxCount: 1, effect: null, mdeffect: null, compatibleInstruments: [8] },\n    { name: \"gain\", computeIndex: 57, displayName: \"gain\", interleave: false, isFilter: false, maxCount: 1, effect: 9, mdeffect: null, compatibleInstruments: null },\n    { name: \"panning\", computeIndex: 42, displayName: \"panning\", interleave: false, isFilter: false, maxCount: 1, effect: 2, mdeffect: null, compatibleInstruments: null },\n    { name: \"distortion\", computeIndex: 43, displayName: \"distortion\", interleave: false, isFilter: false, maxCount: 1, effect: 3, mdeffect: null, compatibleInstruments: null },\n    { name: \"bitcrusherQuantization\", computeIndex: 44, displayName: \"bitcrush\", interleave: false, isFilter: false, maxCount: 1, effect: 4, mdeffect: null, compatibleInstruments: null },\n    { name: \"bitcrusherFrequency\", computeIndex: 45, displayName: \"freq crush\", interleave: false, isFilter: false, maxCount: 1, effect: 4, mdeffect: null, compatibleInstruments: null },\n    { name: \"flanger\", computeIndex: 58, displayName: \"flanger\", interleave: false, isFilter: false, maxCount: 1, effect: 10, mdeffect: null, compatibleInstruments: null },\n    { name: \"flangerSpeed\", computeIndex: 58, displayName: \"flanger speed\", interleave: false, isFilter: false, maxCount: 1, effect: 10, mdeffect: null, compatibleInstruments: null },\n    { name: \"flangerDepth\", computeIndex: 58, displayName: \"flanger depth\", interleave: false, isFilter: false, maxCount: 1, effect: 10, mdeffect: null, compatibleInstruments: null },\n    { name: \"flangerFeedback\", computeIndex: 58, displayName: \"flanger feedback\", interleave: false, isFilter: false, maxCount: 1, effect: 10, mdeffect: null, compatibleInstruments: null },\n    { name: \"chorus\", computeIndex: 46, displayName: \"chorus\", interleave: false, isFilter: false, maxCount: 1, effect: 1, mdeffect: null, compatibleInstruments: null },\n    { name: \"echoSustain\", computeIndex: 47, displayName: \"echo\", interleave: false, isFilter: false, maxCount: 1, effect: 6, mdeffect: null, compatibleInstruments: null },\n    { name: \"reverb\", computeIndex: 48, displayName: \"reverb\", interleave: false, isFilter: false, maxCount: 1, effect: 0, mdeffect: null, compatibleInstruments: null },\n    { name: \"arpeggioSpeed\", computeIndex: 49, displayName: \"arpeggio speed\", interleave: false, isFilter: false, maxCount: 1, effect: null, mdeffect: 4, compatibleInstruments: null },\n    { name: \"ringModulation\", computeIndex: 50, displayName: \"ring mod\", interleave: false, isFilter: false, maxCount: 1, effect: 7, mdeffect: null, compatibleInstruments: null },\n    { name: \"ringModulationHz\", computeIndex: 51, displayName: \"ring mod hz\", interleave: false, isFilter: false, maxCount: 1, effect: 7, mdeffect: null, compatibleInstruments: null },\n    { name: \"granular\", computeIndex: 52, displayName: \"granular\", interleave: false, isFilter: false, maxCount: 1, effect: 8, mdeffect: null, compatibleInstruments: null },\n    { name: \"grainFreq\", computeIndex: 53, displayName: \"grain freq\", interleave: false, isFilter: false, maxCount: 1, effect: 8, mdeffect: null, compatibleInstruments: null },\n    { name: \"grainSize\", computeIndex: 54, displayName: \"grain size\", interleave: false, isFilter: false, maxCount: 1, effect: 8, mdeffect: null, compatibleInstruments: null },\n    { name: \"grainRange\", computeIndex: 55, displayName: \"grain range\", interleave: false, isFilter: false, maxCount: 1, effect: 8, mdeffect: null, compatibleInstruments: null },\n    { name: \"echoDelay\", computeIndex: 56, displayName: \"echo delay\", interleave: false, isFilter: false, maxCount: 1, effect: 6, mdeffect: null, compatibleInstruments: null },\n]);\nConfig.operatorWaves = toNameMap([\n    { name: \"sine\", samples: _a.sineWave },\n    { name: \"triangle\", samples: _a.generateTriWave() },\n    { name: \"pulse width\", samples: _a.generateSquareWave(0.5) },\n    { name: \"sawtooth\", samples: _a.generateSawWave() },\n    { name: \"ramp\", samples: _a.generateSawWave(true) },\n    { name: \"trapezoid\", samples: _a.generateTrapezoidWave(2) },\n    { name: \"quasi-sine\", samples: _a.generateQuasiSineWave() },\n]);\nConfig.pwmOperatorWaves = toNameMap([\n    { name: \"1%\", samples: _a.generateSquareWave(0.01) },\n    { name: \"5%\", samples: _a.generateSquareWave(0.05) },\n    { name: \"12.5%\", samples: _a.generateSquareWave(0.125) },\n    { name: \"25%\", samples: _a.generateSquareWave(0.25) },\n    { name: \"33%\", samples: _a.generateSquareWave(1 / 3) },\n    { name: \"50%\", samples: _a.generateSquareWave(0.5) },\n    { name: \"66%\", samples: _a.generateSquareWave(2 / 3) },\n    { name: \"75%\", samples: _a.generateSquareWave(0.75) },\n    { name: \"87.5%\", samples: _a.generateSquareWave(0.875) },\n    { name: \"95%\", samples: _a.generateSquareWave(0.95) },\n    { name: \"99%\", samples: _a.generateSquareWave(0.99) },\n]);\nConfig.barEditorHeight = 10;\nConfig.modulators = toNameMap([\n    { name: \"none\", pianoName: \"None\", maxRawVol: 6, newNoteVol: 6, forSong: true, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"No Mod Setting\", promptDesc: [\"No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.\", \"[$LO - $HI]\"] },\n    { name: \"song volume\", pianoName: \"Volume\", maxRawVol: 100, newNoteVol: 100, forSong: true, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Song Volume\", promptDesc: [\"This setting affects the overall volume of the song, just like the main volume slider.\", \"At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"tempo\", pianoName: \"Tempo\", maxRawVol: _a.tempoMax - _a.tempoMin, newNoteVol: Math.ceil((_a.tempoMax - _a.tempoMin) / 2), forSong: true, convertRealFactor: _a.tempoMin, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Song Tempo\", promptDesc: [\"This setting controls the speed your song plays at, just like the tempo slider.\", \"When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.\", \"Note that you can make a 'swing' effect by rapidly changing between two tempo values.\", \"[OVERWRITING] [$LO - $HI] [BPM]\"] },\n    { name: \"song reverb\", pianoName: \"Reverb\", maxRawVol: _a.reverbRange * 2, newNoteVol: _a.reverbRange, forSong: true, convertRealFactor: -_a.reverbRange, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Song Reverb\", promptDesc: [\"This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.\", \"At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\"] },\n    { name: \"next bar\", pianoName: \"Next Bar\", maxRawVol: 1, newNoteVol: 1, forSong: true, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Go To Next Bar\", promptDesc: [\"This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.\", \"This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.\", \"You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.\", \"[$LO - $HI]\"] },\n    { name: \"pre volume\", pianoName: \"Note Vol.\", maxRawVol: _a.volumeRange, newNoteVol: Math.ceil(_a.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-_a.volumeRange / 2.0), associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Pre Volume\", promptDesc: [\"This setting affects the volume of your instrument as if its note size had been scaled.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, pre volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'post volume' modulator instead, which will always just scale the volume with no added effects.\", \"For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'post volume' modulator anyhow. However, as mentioned, it works more like changing pre volume.\", \"[MULTIPLICATIVE] [$LO - $HI]\"] },\n    { name: \"gain\", pianoName: \"Gain\", maxRawVol: _a.volumeRange / 2 * _a.gainRangeMult, newNoteVol: Math.ceil(_a.volumeRange / 2 * _a.gainRangeMult / 2), forSong: false, convertRealFactor: 0, associatedEffect: 9, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Gain\", promptDesc: [\"This setting controls the gain of your instrument.\", \"At $LO, the instrument is muted, at $MID it will be unchanged, and at $HI, it will have maximum gain.\", \"[OVERWRITING] [$LO - $HI] [L-R]\"] },\n    { name: \"pan\", pianoName: \"Pan\", maxRawVol: _a.panMax, newNoteVol: Math.ceil(_a.panMax / 2), forSong: false, convertRealFactor: 0, associatedEffect: 2, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Panning\", promptDesc: [\"This setting controls the panning of your instrument, just like the panning slider.\", \"At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.\", \"[OVERWRITING] [$LO - $HI] [L-R]\"] },\n    { name: \"reverb\", pianoName: \"Reverb\", maxRawVol: _a.reverbRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 0, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Reverb\", promptDesc: [\"This setting controls the reverb of your insturment, just like the reverb slider.\", \"At $LO, your instrument will have no reverb. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"distortion\", pianoName: \"Distortion\", maxRawVol: _a.distortionRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 3, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Distortion\", promptDesc: [\"This setting controls the amount of distortion for your instrument, just like the distortion slider.\", \"At $LO, your instrument will have no distortion. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"fm slider 1\", pianoName: \"FM 1\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"FM Slider 1\", promptDesc: [\"This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"fm slider 2\", pianoName: \"FM 2\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"FM Slider 2\", promptDesc: [\"This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"fm slider 3\", pianoName: \"FM 3\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"FM Slider 3\", promptDesc: [\"This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"fm slider 4\", pianoName: \"FM 4\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"FM Slider 4\", promptDesc: [\"This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"fm feedback\", pianoName: \"FM Feedbck\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"FM Feedback\", promptDesc: [\"This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"pulse width\", pianoName: \"Pulse Width\", maxRawVol: _a.pulseWidthRange, newNoteVol: _a.pulseWidthRange, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Pulse Width\", promptDesc: [\"This setting controls the width of this instrument's pulse wave, just like the pulse width slider.\", \"At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).\", \"Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.\", \"[OVERWRITING] [$LO - $HI] [%Duty]\"] },\n    { name: \"detune\", pianoName: \"Detune\", maxRawVol: _a.detuneMax - _a.detuneMin, newNoteVol: _a.detuneCenter, forSong: false, convertRealFactor: -_a.detuneCenter, associatedEffect: 11, associatedMDEffect: 1, maxIndex: 0,\n        promptName: \"Instrument Detune\", promptDesc: [\"This setting controls the detune for this instrument, just like the detune slider.\", \"At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.\", \"[OVERWRITING] [$LO - $HI] [cents]\"] },\n    { name: \"vibrato depth\", pianoName: \"Vibrato Depth\", maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 2, maxIndex: 0,\n        promptName: \"Vibrato Depth\", promptDesc: [\"This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.\", \"At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.\", \"[OVERWRITING] [$LO - $HI] [pitch ÷25]\"] },\n    { name: \"song detune\", pianoName: \"Detune\", maxRawVol: _a.songDetuneMax - _a.songDetuneMin, newNoteVol: Math.ceil((_a.songDetuneMax - _a.songDetuneMin) / 2), forSong: true, convertRealFactor: -250, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Song Detune\", promptDesc: [\"This setting controls the overall detune of the entire song. There is no associated slider.\", \"At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [cents x4]\"] },\n    { name: \"vibrato speed\", pianoName: \"Vibrato Speed\", maxRawVol: 30, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 2, maxIndex: 0,\n        promptName: \"Vibrato Speed\", promptDesc: [\"This setting controls the speed your instrument will vibrato at, just like the slider.\", \"A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"vibrato delay\", pianoName: \"Vibrato Delay\", maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 2, maxIndex: 0,\n        promptName: \"Vibrato Delay\", promptDesc: [\"This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.\", \"A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).\", \"[OVERWRITING] [$LO - $HI] [beats ÷24]\"] },\n    { name: \"arp speed\", pianoName: \"Arp Speed\", maxRawVol: 50, newNoteVol: 12, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 4, maxIndex: 0,\n        promptName: \"Arpeggio Speed\", promptDesc: [\"This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.\", \"Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.\",\n            \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\", \"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"pan delay\", pianoName: \"Pan Delay\", maxRawVol: 20, newNoteVol: 10, forSong: false, convertRealFactor: 0, associatedEffect: 2, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Panning Delay\", promptDesc: [\"This setting controls the delay applied to panning for your instrument, just like the pan delay slider.\", \"With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"reset arp\", pianoName: \"Reset Arp\", maxRawVol: 1, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 4, maxIndex: 0,\n        promptName: \"Reset Arpeggio\", promptDesc: [\"This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.\", \"This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.\", \"[$LO - $HI]\"] },\n    { name: \"post eq\", pianoName: \"PostEQ\", maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"EQ Filter\", promptDesc: [\"This setting controls a few separate things for your instrument's EQ filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"pre eq\", pianoName: \"PreEQ\", maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 5, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Note Filter\", promptDesc: [\"This setting controls a few separate things for your instrument's note filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"bit crush\", pianoName: \"Bitcrush\", maxRawVol: _a.bitcrusherQuantizationRange - 1, newNoteVol: Math.round(_a.bitcrusherQuantizationRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: 4, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Bit Crush\", promptDesc: [\"This setting controls the bit crush of your instrument, just like the bit crush slider.\", \"At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"freq crush\", pianoName: \"Freq Crush\", maxRawVol: _a.bitcrusherFreqRange - 1, newNoteVol: Math.round(_a.bitcrusherFreqRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: 4, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Frequency Crush\", promptDesc: [\"This setting controls the frequency crush of your instrument, just like the freq crush slider.\", \"At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"echo\", pianoName: \"Echo\", maxRawVol: _a.echoSustainRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 6, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Echo Sustain\", promptDesc: [\"This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.\", \"At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"echo delay\", pianoName: \"Echo Delay\", maxRawVol: _a.echoDelayRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 6, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Echo Delay\", promptDesc: [\"This setting controls the echo delay of your instrument, just like the echo delay slider.\", \"At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.\", \"[OVERWRITING] [$LO - $HI] [~beats ÷12]\"]\n    },\n    { name: \"echo ping pong\", pianoName: \"Ping-Pong\", maxRawVol: _a.panMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 6, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Ping Pong\", promptDesc: [\"This setting controls the echo ping-pong of your instrument, just like the echo delay slider.\", \"At $LO, the echo will start fully from the left-ear side. At $MID there will be no echo ping pong, and at $HI, it will start coming fully from the right.\", \"[OVERWRITING] [$LO - $HI] [L-R]\"]\n    },\n    { name: \"flanger\", pianoName: \"Flanger\", maxRawVol: _a.flangerRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 10, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Flanger\", promptDesc: [\"This setting controls the flanger strength of your instrument, just like the flanger slider.\", \"At $LO, the flanger effect will be disabled. The strength of the flanger effect increases up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"flanger speed\", pianoName: \"Flanger Spd\", maxRawVol: _a.flangerSpeedRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 10, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Flanger Speed\", promptDesc: [\"This setting controls the flanger speed of your instrument, just like the flanger speed slider.\"] },\n    { name: \"flanger depth\", pianoName: \"Flanger Dpth\", maxRawVol: _a.flangerDepthRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 10, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Flanger Depth\", promptDesc: [\"This setting controls the flanger depth of your instrument, just like the flanger depth slider.\"] },\n    { name: \"flanger feedback\", pianoName: \"Flanger Fbck\", maxRawVol: _a.flangerFeedbackRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 10, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Flanger Feedback\", promptDesc: [\"This setting controls the flanger feedback of your instrument, just like the flanger feedback slider.\"] },\n    { name: \"chorus\", pianoName: \"Chorus\", maxRawVol: _a.chorusRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 1, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Chorus\", promptDesc: [\"This setting controls the chorus strength of your instrument, just like the chorus slider.\", \"At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"post eq cut\", pianoName: \"PostEQ Cut\", maxRawVol: _a.filterSimpleCutRange - 1, newNoteVol: _a.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"EQ Filter Cutoff Frequency\", promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"post eq peak\", pianoName: \"PostEQ Peak\", maxRawVol: _a.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"EQ Filter Peak Gain\", promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"pre eq cut\", pianoName: \"PreEQ Cut\", maxRawVol: _a.filterSimpleCutRange - 1, newNoteVol: _a.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: 5, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Note Filter Cutoff Frequency\", promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"pre eq peak\", pianoName: \"PreEQ Peak\", maxRawVol: _a.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 5, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Note Filter Peak Gain\", promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"pitch shift\", pianoName: \"Pitch Shift\", maxRawVol: _a.pitchShiftRange - 1, newNoteVol: _a.pitchShiftCenter, forSong: false, convertRealFactor: -_a.pitchShiftCenter, associatedEffect: 11, associatedMDEffect: 0, maxIndex: 0,\n        promptName: \"Pitch Shift\", promptDesc: [\"This setting controls the pitch offset of your instrument, just like the pitch shift slider.\", \"At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.\", \"[OVERWRITING] [$LO - $HI] [pitch]\"] },\n    { name: \"sustain\", pianoName: \"Sustain\", maxRawVol: _a.stringSustainRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Picked String Sustain\", promptDesc: [\"This setting controls the sustain of your picked string instrument, just like the sustain slider.\", \"At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"post volume\", pianoName: \"Mix Vol.\", maxRawVol: _a.volumeRange, newNoteVol: Math.ceil(_a.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-_a.volumeRange / 2.0), associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Instrument Post Volume\", promptDesc: [\"This setting affects the volume of your instrument as if its volume slider had been moved.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.\", \"[MULTIPLICATIVE] [$LO - $HI]\"] },\n    { name: \"fm slider 5\", pianoName: \"FM 5\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"FM Slider 5\", promptDesc: [\"This setting affects the strength of the fifth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"fm slider 6\", pianoName: \"FM 6\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"FM Slider 6\", promptDesc: [\"This setting affects the strength of the sixth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n    { name: \"decimal offset\", pianoName: \"Decimal Offset\", maxRawVol: 99, newNoteVol: 0, forSong: false, convertRealFactor: 0, invertSliderIndicator: true, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Decimal Offset\", promptDesc: [\"This setting controls the decimal offset that is subtracted from the pulse width; use this for creating values like 12.5 or 6.25.\", \"[$LO - $HI]\"] },\n    { name: \"envelope speed\", pianoName: \"EnvelopeSpd\", maxRawVol: 50, newNoteVol: 12, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Envelope Speed\", promptDesc: [\"This setting controls how fast all of the envelopes for the instrument play.\", \"At $LO, your instrument's envelopes will be frozen, and at values near there they will change very slowly. At 12, the envelopes will work as usual, performing at normal speed. This increases up to $HI, where the envelopes will change very quickly. The speeds are given below:\",\n            \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\", \"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"dynamism\", pianoName: \"Dynamism\", maxRawVol: _a.supersawDynamismMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Supersaw Dynamism\", promptDesc: [\"This setting controls the supersaw dynamism of your instrument, just like the dynamism slider.\", \"At $LO, your instrument will have only a single pulse contributing. Increasing this will raise the contribution of other waves which is similar to a chorus effect. The effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"spread\", pianoName: \"Spread\", maxRawVol: _a.supersawSpreadMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Supersaw Spread\", promptDesc: [\"This setting controls the supersaw spread of your instrument, just like the spread slider.\", \"At $LO, all the pulses in your supersaw will be at the same frequency. Increasing this value raises the frequency spread of the contributing waves, up to a dissonant spread at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"saw shape\", pianoName: \"Saw Shape\", maxRawVol: _a.supersawShapeMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Supersaw Shape\", promptDesc: [\"This setting controls the supersaw shape of your instrument, just like the Saw↔Pulse slider.\", \"As the slider's name implies, this effect will give you a sawtooth wave at $LO, and a full pulse width wave at $HI. Values in between will be a blend of the two.\", \"[OVERWRITING] [$LO - $HI] [%]\"] },\n    { name: \"individual envelope speed\", pianoName: \"IndvEnvSpd\", maxRawVol: 63, newNoteVol: 23, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: _a.maxEnvelopeCount - 1,\n        promptName: \"Individual Envelope Speed\", promptDesc: [\"This setting controls how fast the specified envelope of the instrument will play.\", \"At $LO, your the envelope will be frozen, and at values near there they will change very slowly. At 23, the envelope will work as usual, performing at normal speed. This increases up to $HI, where the envelope will change very quickly. The speeds are given below:\",\n            \"[0-4]: x0, x0.01, x0.02, x0.03, x0.04,\", \"[5-9]: x0.05, x0.06, x0.07, x0.08, x0.09,\", \"[10-14]: x0.1, x0.2, x0.25, x0.3, x0.33,\", \"[15-19]: x0.4, x0.5, x0.6, x0.6667, x0.7,\", \"[20-24]: x0.75, x0.8, x0.9, x1, x1.25,\", \"[25-29]: x1.3333, x1.5, x1.6667, x1.75, x2,\", \"[30-34]: x2.25, x2.5, x2.75, x3, x3.5,\", \"[35-39]: x4, x4.5, x5, x5.5, x6,\", \"[40-44]: x6.5, x7, x7.5, x8, x8.5,\", \"[45-49]: x9, x9.5, x10, x11, x12\", \"[50-54]: x13, x14, x15, x16, x17\", \"[55-59]: x18, x19, x20, x24, x32\", \"[60-63]: x40, x64, x128, x256\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"song eq\", pianoName: \"Song EQ\", maxRawVol: 10, newNoteVol: 0, forSong: true, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Song EQ Filter\", promptDesc: [\"This setting overwrites every instrument's eq filter. You can do this in a few separate ways, similar to the per instrument eq filter modulator.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"reset envelope\", pianoName: \"ResetEnv\", maxRawVol: 1, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: _a.maxEnvelopeCount - 1,\n        promptName: \"Reset Envelope\", promptDesc: [\"This setting functions a lot like the reset arp modulator. Wherever a note is placed, the envelope of this instrument at the specified index will reset at the very start of that note. \", \"[$LO - $HI]\",] },\n    { name: \"ring modulation\", pianoName: \"Ring Mod\", maxRawVol: _a.ringModRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 7, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Ring Modulation\", promptDesc: [\"This setting controls the Ring Modulation effect in your instrument.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"ring mod hertz\", pianoName: \"Ring Mod(Hz)\", maxRawVol: _a.ringModHzRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 7, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Ring Modulation (Hertz)\", promptDesc: [\"This setting controls the Hertz (Hz) used in the Ring Modulation effect in your instrument.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"granular\", pianoName: \"Granular\", maxRawVol: _a.granularRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 8, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Granular\", promptDesc: [\"This setting controls the granular effect in your instrument.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"grain freq\", pianoName: \"Grain #\", maxRawVol: _a.grainAmountsMax, newNoteVol: 8, forSong: false, convertRealFactor: 0, associatedEffect: 8, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Grain Count\", promptDesc: [\"This setting controls the density of grains for the granular effect on your instrument.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"grain size\", pianoName: \"Grain Size\", maxRawVol: _a.grainSizeMax / _a.grainSizeStep, newNoteVol: _a.grainSizeMin / _a.grainSizeStep, forSong: false, convertRealFactor: 0, associatedEffect: 8, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Grain Size\", promptDesc: [\"This setting controls the grain size of the granular effect in your instrument.\", \"The number shown in the mod channel is multiplied by \" + _a.grainSizeStep + \" to get the actual grain size.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"grain range\", pianoName: \"Grain Range\", maxRawVol: _a.grainRangeMax / _a.grainSizeStep, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 8, associatedMDEffect: 6, maxIndex: 0,\n        promptName: \"Grain Range\", promptDesc: [\"This setting controls the range of values for your grain size of the granular effect in your instrument, from no variation to a lot\", \"The number shown in the mod channel is multiplied by \" + _a.grainSizeStep + \" to get the actual grain size.\", \"[OVERWRITING] [$LO - $HI]\"] },\n    { name: \"individual envelope lower bound\", pianoName: \"IndvEnvLow\", maxRawVol: _a.perEnvelopeBoundMax * 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: _a.maxEnvelopeCount - 1,\n        promptName: \"Individual Envelope Lower Bound\", promptDesc: [\"This setting controls the envelope lower bound\", \"At $LO, your the envelope will output an upper envelope bound to 0, and at $HI your envelope will output an upper envelope bound to 2.\", \"This settings will not work if your lower envelope bound is higher than your upper envelope bound\",] },\n    { name: \"individual envelope upper bound\", pianoName: \"IndvEnvUp\", maxRawVol: _a.perEnvelopeBoundMax * 10, newNoteVol: 10, forSong: false, convertRealFactor: 0, associatedEffect: 11, associatedMDEffect: 6, maxIndex: _a.maxEnvelopeCount - 1,\n        promptName: \"Individual Envelope Upper Bound\", promptDesc: [\"This setting controls the envelope upper bound\", \"At $LO, your the envelope will output a 0 to lower envelope bound, and at $HI your envelope will output a 2 to lower envelope bound.\", \"This settings will not work if your lower envelope bound is higher than your upper envelope bound\",] },\n]);\nfunction centerWave(wave) {\n    let sum = 0.0;\n    for (let i = 0; i < wave.length; i++)\n        sum += wave[i];\n    const average = sum / wave.length;\n    for (let i = 0; i < wave.length; i++)\n        wave[i] -= average;\n    performIntegral(wave);\n    wave.push(0);\n    return new Float32Array(wave);\n}\nfunction centerAndNormalizeWave(wave) {\n    let magn = 0.0;\n    centerWave(wave);\n    for (let i = 0; i < wave.length - 1; i++) {\n        magn += Math.abs(wave[i]);\n    }\n    const magnAvg = magn / (wave.length - 1);\n    for (let i = 0; i < wave.length - 1; i++) {\n        wave[i] = wave[i] / magnAvg;\n    }\n    return new Float32Array(wave);\n}\nexport function performIntegral(wave) {\n    let cumulative = 0.0;\n    let newWave = new Float32Array(wave.length);\n    for (let i = 0; i < wave.length; i++) {\n        newWave[i] = cumulative;\n        cumulative += wave[i];\n    }\n    return newWave;\n}\nexport function performIntegralOld(wave) {\n    let cumulative = 0.0;\n    for (let i = 0; i < wave.length; i++) {\n        const temp = wave[i];\n        wave[i] = cumulative;\n        cumulative += temp;\n    }\n}\nexport function getPulseWidthRatio(pulseWidth) {\n    return pulseWidth / (Config.pulseWidthRange * 2);\n}\nexport function getDrumWave(index, inverseRealFourierTransform, scaleElementsByFactor) {\n    let wave = Config.chipNoises[index].samples;\n    if (wave == null) {\n        wave = new Float32Array(Config.chipNoiseLength + 1);\n        Config.chipNoises[index].samples = wave;\n        if (index == 0) {\n            let drumBuffer = 1;\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n                let newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 1 << 14;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 1) {\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = Math.random() * 2.0 - 1.0;\n            }\n        }\n        else if (index == 2) {\n            let drumBuffer = 1;\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n                let newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 2 << 14;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 3) {\n            let drumBuffer = 1;\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n                let newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 10 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 4) {\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 10, 11, 1, 1, 0);\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 11, 14, .6578, .6578, 0);\n            inverseRealFourierTransform(wave, Config.chipNoiseLength);\n            scaleElementsByFactor(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\n        }\n        else if (index == 5) {\n            var drumBuffer = 1;\n            for (var i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n                var newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 10 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 6) {\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 1, 10, 1, 1, 0);\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 20, 14, -2, -2, 0);\n            inverseRealFourierTransform(wave, Config.chipNoiseLength);\n            scaleElementsByFactor(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\n        }\n        else if (index == 7) {\n            var drumBuffer = 1;\n            for (var i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 4.0 * (Math.random() * 14 + 1) - 8.0;\n                var newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 15 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 8) {\n            var drumBuffer = 1;\n            for (var i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) / 2.0 - 0.5;\n                var newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer -= 10 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 9) {\n            let drumBuffer = 1;\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.1;\n                let newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 8 ^ 2 << 16;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 10) {\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = Math.round(Math.random());\n            }\n        }\n        else if (index == 11) {\n            var drumBuffer = 1;\n            for (var i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = Math.round((drumBuffer & 1));\n                var newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer -= 10 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        }\n        else if (index == 12) {\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                var ultraboxnewchipnoiserand = Math.random();\n                wave[i] = Math.pow(ultraboxnewchipnoiserand, Math.clz32(ultraboxnewchipnoiserand));\n            }\n        }\n        else if (index == 13) {\n            var b0 = 0, b1 = 0, b2 = 0, b3, b4, b5, b6;\n            b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                var white = Math.random() * 2 - 1;\n                b0 = 0.99886 * b0 + white * 0.0555179;\n                b1 = 0.99332 * b1 + white * 0.0750759;\n                b2 = 0.96900 * b2 + white * 0.1538520;\n                b3 = 0.86650 * b3 + white * 0.3104856;\n                b4 = 0.55000 * b4 + white * 0.5329522;\n                b5 = -0.7616 * b5 - white * 0.0168980;\n                wave[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n                wave[i] *= 0.44;\n                b6 = white * 0.115926;\n            }\n        }\n        else if (index == 14) {\n            var lastOut = 0.0;\n            for (let i = 0; i < Config.chipNoiseLength; i++) {\n                var white = Math.random() * 2 - 1;\n                wave[i] = (lastOut + (0.02 * white)) / 1.02;\n                lastOut = wave[i];\n                wave[i] *= 14;\n            }\n        }\n        else {\n            throw new Error(\"Unrecognized drum index: \" + index);\n        }\n        wave[Config.chipNoiseLength] = wave[0];\n    }\n    return wave;\n}\nexport function drawNoiseSpectrum(wave, waveLength, lowOctave, highOctave, lowPower, highPower, overallSlope) {\n    const referenceOctave = 11;\n    const referenceIndex = 1 << referenceOctave;\n    const lowIndex = Math.pow(2, lowOctave) | 0;\n    const highIndex = Math.min(waveLength >> 1, Math.pow(2, highOctave) | 0);\n    const retroWave = getDrumWave(0, null, null);\n    let combinedAmplitude = 0.0;\n    for (let i = lowIndex; i < highIndex; i++) {\n        let lerped = lowPower + (highPower - lowPower) * (Math.log2(i) - lowOctave) / (highOctave - lowOctave);\n        let amplitude = Math.pow(2, (lerped - 1) * 7 + 1) * lerped;\n        amplitude *= Math.pow(i / referenceIndex, overallSlope);\n        combinedAmplitude += amplitude;\n        amplitude *= retroWave[i];\n        const radians = 0.61803398875 * i * i * Math.PI * 2.0;\n        wave[i] = Math.cos(radians) * amplitude;\n        wave[waveLength - i] = Math.sin(radians) * amplitude;\n    }\n    return combinedAmplitude;\n}\nexport function getArpeggioPitchIndex(pitchCount, useFastTwoNoteArp, arpeggio) {\n    let arpeggioPattern = Config.arpeggioPatterns[pitchCount - 1];\n    if (arpeggioPattern != null) {\n        if (pitchCount == 2 && useFastTwoNoteArp == false) {\n            arpeggioPattern = [0, 0, 1, 1];\n        }\n        return arpeggioPattern[arpeggio % arpeggioPattern.length];\n    }\n    else {\n        return arpeggio % pitchCount;\n    }\n}\nexport function toNameMap(array) {\n    const dictionary = {};\n    for (let i = 0; i < array.length; i++) {\n        const value = array[i];\n        value.index = i;\n        dictionary[value.name] = value;\n    }\n    const result = array;\n    result.dictionary = dictionary;\n    return result;\n}\nexport function effectsIncludeTransition(effects) {\n    return (effects & (1 << 3)) != 0;\n}\nexport function effectsIncludeChord(effects) {\n    return (effects & (1 << 4)) != 0;\n}\nexport function effectsIncludePitchShift(effects) {\n    return (effects & (1 << 0)) != 0;\n}\nexport function effectsIncludeDetune(effects) {\n    return (effects & (1 << 1)) != 0;\n}\nexport function effectsIncludeVibrato(effects) {\n    return (effects & (1 << 2)) != 0;\n}\nexport function effectsIncludeNoteRange(effects) {\n    return (effects & (1 << 5)) != 0;\n}\nexport function calculateRingModHertz(sliderHz, sliderHzOffset = 0) {\n    if (sliderHz == 0)\n        return 0;\n    if (sliderHz > 0)\n        sliderHz -= 1 / Config.ringModHzRange;\n    if (sliderHz > 1 / Config.ringModHzRange)\n        sliderHz += 1 / Config.ringModHzRange;\n    return Math.floor(Config.ringModMinHz * Math.pow(Config.ringModMaxHz / Config.ringModMinHz, sliderHz));\n}\nexport function rawChipToIntegrated(raw) {\n    const newArray = new Array(raw.length);\n    const dictionary = {};\n    for (let i = 0; i < newArray.length; i++) {\n        newArray[i] = Object.assign([], raw[i]);\n        const value = newArray[i];\n        value.index = i;\n        dictionary[value.name] = value;\n    }\n    for (let key in dictionary) {\n        dictionary[key].samples = performIntegral(dictionary[key].samples);\n    }\n    const result = newArray;\n    result.dictionary = dictionary;\n    return result;\n}\n//# sourceMappingURL=SynthConfig.js.map","var __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nexport function applyElementArgs(element, args) {\n    var e_1, _a, e_2, _b, e_3, _c;\n    try {\n        for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {\n            var arg = args_1_1.value;\n            if (arg instanceof Node) {\n                element.appendChild(arg);\n            }\n            else if (typeof arg === \"string\") {\n                element.appendChild(document.createTextNode(arg));\n            }\n            else if (typeof arg === \"function\") {\n                applyElementArgs(element, [arg()]);\n            }\n            else if (Array.isArray(arg)) {\n                applyElementArgs(element, arg);\n            }\n            else if (arg && typeof Symbol !== \"undefined\" && typeof arg[Symbol.iterator] === \"function\") {\n                applyElementArgs(element, __spread(arg));\n            }\n            else if (arg && arg.constructor === Object && element instanceof Element) {\n                try {\n                    for (var _d = (e_2 = void 0, __values(Object.keys(arg))), _e = _d.next(); !_e.done; _e = _d.next()) {\n                        var key = _e.value;\n                        var value = arg[key];\n                        if (key === \"class\") {\n                            if (typeof value === \"string\") {\n                                element.setAttribute(\"class\", value);\n                            }\n                            else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n                                element.setAttribute(\"class\", __spread(value).join(\" \"));\n                            }\n                            else {\n                                console.warn(\"Invalid \" + key + \" value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n                            }\n                        }\n                        else if (key === \"style\") {\n                            if (value && value.constructor === Object) {\n                                try {\n                                    for (var _f = (e_3 = void 0, __values(Object.keys(value))), _g = _f.next(); !_g.done; _g = _f.next()) {\n                                        var styleKey = _g.value;\n                                        if (styleKey in element.style) {\n                                            element.style[styleKey] = value[styleKey];\n                                        }\n                                        else {\n                                            element.style.setProperty(styleKey, value[styleKey]);\n                                        }\n                                    }\n                                }\n                                catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                                finally {\n                                    try {\n                                        if (_g && !_g.done && (_c = _f.return)) _c.call(_f);\n                                    }\n                                    finally { if (e_3) throw e_3.error; }\n                                }\n                            }\n                            else {\n                                element.setAttribute(key, value);\n                            }\n                        }\n                        else if (typeof (value) === \"function\") {\n                            element[key] = value;\n                        }\n                        else if (typeof (value) === \"boolean\") {\n                            if (value)\n                                element.setAttribute(key, \"\");\n                            else\n                                element.removeAttribute(key);\n                        }\n                        else {\n                            element.setAttribute(key, value);\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_e && !_e.done && (_b = _d.return)) _b.call(_d);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                element.appendChild(document.createTextNode(arg));\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return element;\n}\nexport var svgNS = \"http://www.w3.org/2000/svg\";\nexport function parseHTML() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return document.createRange().createContextualFragment(args.join());\n}\nexport function parseSVG() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var fragment = document.createDocumentFragment();\n    var svgParser = new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + args.join() + \"</svg>\", \"image/svg+xml\").documentElement;\n    while (svgParser.firstChild !== null) {\n        document.importNode(svgParser.firstChild, true);\n        fragment.appendChild(svgParser.firstChild);\n    }\n    return fragment;\n}\nexport function replaceScriptWith() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var currentScript = document.currentScript;\n    if (currentScript == null) {\n        if (document.readyState === \"loading\") {\n            var scripts = document.getElementsByTagName(\"script\");\n            currentScript = scripts[scripts.length - 1];\n        }\n        if (currentScript == null) {\n            console.warn(\"Couldn't replace script because no script is currently being parsed and executed, maybe this is happening in a callback function or event handler instead?\");\n            return;\n        }\n    }\n    if (currentScript.parentNode === null) {\n        console.warn(\"Couldn't replace script element because it is not attached to a parent anymore, did you try to replace the same script more than once?\");\n        return;\n    }\n    currentScript.parentNode.replaceChild(applyElementArgs(document.createDocumentFragment(), args), currentScript);\n}\nexport function applyToElement(element) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (!(element instanceof Element || element instanceof DocumentFragment)) {\n        console.warn(\"Couldn't apply to provided argument because it's not an element or DocumentFragment.\");\n        return element;\n    }\n    return applyElementArgs(element, args);\n}\n//# sourceMappingURL=elements-base.js.map","var __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar e_1, _a, e_2, _b;\nimport { applyElementArgs, svgNS, parseHTML, parseSVG, replaceScriptWith, applyToElement } from \"./elements-base.js\";\nexport { replaceScriptWith, applyToElement };\nexport var HTML = parseHTML;\nexport var SVG = parseSVG;\nvar _loop_1 = function (name_1) {\n    HTML[name_1] = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return applyElementArgs(document.createElement(name_1), args);\n    };\n};\ntry {\n    for (var _c = __values(\"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr\".split(\" \")), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var name_1 = _d.value;\n        _loop_1(name_1);\n    }\n}\ncatch (e_1_1) { e_1 = { error: e_1_1 }; }\nfinally {\n    try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n    }\n    finally { if (e_1) throw e_1.error; }\n}\nvar _loop_2 = function (name_2) {\n    SVG[name_2] = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return applyElementArgs(document.createElementNS(svgNS, name_2), args);\n    };\n    if (/-/.test(name_2)) {\n        var snakeCaseName = name_2.replace(/-/g, \"_\");\n        SVG[snakeCaseName] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return applyElementArgs(document.createElementNS(svgNS, name_2), args);\n        };\n    }\n};\ntry {\n    for (var _e = __values(\"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern\".split(\" \")), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var name_2 = _f.value;\n        _loop_2(name_2);\n    }\n}\ncatch (e_2_1) { e_2 = { error: e_2_1 }; }\nfinally {\n    try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n    }\n    finally { if (e_2) throw e_2.error; }\n}\n//# sourceMappingURL=elements-strict.js.map","import { toNameMap, Config } from \"../synth/SynthConfig\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nexport class ColorConfig {\n    static resetColors() {\n        this.colorLookup.clear();\n    }\n    static getArbitaryChannelColor(type, channel) {\n        if (!this.usesColorFormula) {\n            let base;\n            switch (type) {\n                case (\"noise\"): {\n                    base = ColorConfig.noiseChannels[(channel % this.c_noiseLimit) % ColorConfig.noiseChannels.length];\n                    break;\n                }\n                case (\"mod\"): {\n                    base = ColorConfig.modChannels[(channel % this.c_modLimit) % ColorConfig.modChannels.length];\n                    break;\n                }\n                case (\"pitch\"):\n                default: {\n                    base = ColorConfig.pitchChannels[(channel % this.c_pitchLimit) % ColorConfig.pitchChannels.length];\n                    break;\n                }\n            }\n            var regex = /\\(([^\\,)]+)/;\n            let newChannelSecondary = ColorConfig.getComputed(regex.exec(base.secondaryChannel)[1]);\n            let newChannelPrimary = ColorConfig.getComputed(regex.exec(base.primaryChannel)[1]);\n            let newNoteSecondary = ColorConfig.getComputed(regex.exec(base.secondaryNote)[1]);\n            let newNotePrimary = ColorConfig.getComputed(regex.exec(base.primaryNote)[1]);\n            return { secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n        }\n        let colorFormulaPitchLimit = this.c_colorFormulaPitchLimit;\n        let colorFormulaNoiseLimit = this.c_colorFormulaNoiseLimit;\n        let colorFormulaModLimit = this.c_colorFormulaModLimit;\n        switch (type) {\n            case (\"noise\"): {\n                let newChannelSecondary = \"hsl(\" + ((this.c_noiseSecondaryChannelHue + ((channel * this.c_noiseSecondaryChannelHueScale) / this.c_noiseChannelCountOverride) * 256) % colorFormulaNoiseLimit) + \",\"\n                    + (this.c_noiseSecondaryChannelSat + channel * this.c_noiseSecondaryChannelSatScale) + \"%,\"\n                    + (this.c_noiseSecondaryChannelLum + channel * this.c_noiseSecondaryChannelLumScale) + \"%)\";\n                let newChannelPrimary = \"hsl(\" + ((this.c_noisePrimaryChannelHue + ((channel * this.c_noisePrimaryChannelHueScale) / this.c_noiseChannelCountOverride) * 256) % colorFormulaNoiseLimit) + \",\"\n                    + (this.c_noisePrimaryChannelSat + channel * this.c_noisePrimaryChannelSatScale) + \"%,\"\n                    + (this.c_noisePrimaryChannelLum + channel * this.c_noisePrimaryChannelLumScale) + \"%)\";\n                let newNoteSecondary = \"hsl(\" + ((this.c_noiseSecondaryNoteHue + ((channel * this.c_noiseSecondaryNoteHueScale) / this.c_noiseChannelCountOverride) * 256) % colorFormulaNoiseLimit) + \",\"\n                    + (this.c_noiseSecondaryNoteSat + channel * this.c_noiseSecondaryNoteSatScale) + \"%,\"\n                    + (this.c_noiseSecondaryNoteLum + channel * this.c_noiseSecondaryNoteLumScale) + \"%)\";\n                let newNotePrimary = \"hsl(\" + ((this.c_noisePrimaryNoteHue + ((channel * this.c_noisePrimaryNoteHueScale) / this.c_noiseChannelCountOverride) * 256) % colorFormulaNoiseLimit) + \",\"\n                    + (this.c_noisePrimaryNoteSat + channel * this.c_noisePrimaryNoteSatScale) + \"%,\"\n                    + (this.c_noisePrimaryNoteLum + channel * this.c_noisePrimaryNoteLumScale) + \"%)\";\n                let newChannelColors = { secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                return newChannelColors;\n            }\n            case (\"mod\"): {\n                let newChannelSecondary = \"hsl(\" + ((this.c_modSecondaryChannelHue + ((channel * this.c_modSecondaryChannelHueScale) / this.c_modChannelCountOverride) * 256) % colorFormulaModLimit) + \",\"\n                    + (this.c_modSecondaryChannelSat + channel * this.c_modSecondaryChannelSatScale) + \"%,\"\n                    + (this.c_modSecondaryChannelLum + channel * this.c_modSecondaryChannelLumScale) + \"%)\";\n                let newChannelPrimary = \"hsl(\" + ((this.c_modPrimaryChannelHue + ((channel * this.c_modPrimaryChannelHueScale) / this.c_modChannelCountOverride) * 256) % colorFormulaModLimit) + \",\"\n                    + (this.c_modPrimaryChannelSat + channel * this.c_modPrimaryChannelSatScale) + \"%,\"\n                    + (this.c_modPrimaryChannelLum + channel * this.c_modPrimaryChannelLumScale) + \"%)\";\n                let newNoteSecondary = \"hsl(\" + ((this.c_modSecondaryNoteHue + ((channel * this.c_modSecondaryNoteHueScale) / this.c_modChannelCountOverride) * 256) % colorFormulaModLimit) + \",\"\n                    + (this.c_modSecondaryNoteSat + channel * this.c_modSecondaryNoteSatScale) + \"%,\"\n                    + (this.c_modSecondaryNoteLum + channel * this.c_modSecondaryNoteLumScale) + \"%)\";\n                let newNotePrimary = \"hsl(\" + ((this.c_modPrimaryNoteHue + ((channel * this.c_modPrimaryNoteHueScale) / this.c_modChannelCountOverride) * 256) % colorFormulaModLimit) + \",\"\n                    + (this.c_modPrimaryNoteSat + channel * this.c_modPrimaryNoteSatScale) + \"%,\"\n                    + (this.c_modPrimaryNoteLum + channel * this.c_modPrimaryNoteLumScale) + \"%)\";\n                let newChannelColors = { secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                return newChannelColors;\n            }\n            case (\"pitch\"):\n            default: {\n                let newChannelSecondary = \"hsl(\" + ((this.c_pitchSecondaryChannelHue + (channel * this.c_pitchSecondaryChannelHueScale / this.c_pitchChannelCountOverride) * 256) % colorFormulaPitchLimit) + \",\"\n                    + (this.c_pitchSecondaryChannelSat * (1 - (this.c_pitchSecondaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (this.c_pitchSecondaryChannelLum * (1 - (this.c_pitchSecondaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\n                let newChannelPrimary = \"hsl(\" + ((this.c_pitchPrimaryChannelHue + (channel * this.c_pitchPrimaryChannelHueScale / this.c_pitchChannelCountOverride) * 256) % colorFormulaPitchLimit) + \",\"\n                    + (this.c_pitchPrimaryChannelSat * (1 - (this.c_pitchPrimaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (this.c_pitchPrimaryChannelLum * (1 - (this.c_pitchPrimaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\n                let newNoteSecondary = \"hsl(\" + ((this.c_pitchSecondaryNoteHue + (channel * this.c_pitchSecondaryNoteHueScale / this.c_pitchChannelCountOverride) * 256) % colorFormulaPitchLimit) + \",\"\n                    + (this.c_pitchSecondaryNoteSat * (1 - (this.c_pitchSecondaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (this.c_pitchSecondaryNoteLum * (1 - (this.c_pitchSecondaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\n                let newNotePrimary = \"hsl(\" + ((this.c_pitchPrimaryNoteHue + (channel * this.c_pitchPrimaryNoteHueScale / this.c_pitchChannelCountOverride) * 256) % colorFormulaPitchLimit) + \",\"\n                    + (this.c_pitchPrimaryNoteSat * (1 - (this.c_pitchPrimaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\n                    + (this.c_pitchPrimaryNoteLum * (1 - (this.c_pitchPrimaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\n                let newChannelColors = { secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                return newChannelColors;\n            }\n        }\n    }\n    static getComputedChannelColor(song, color, channel, useFixedOrder) {\n        if (!this.usesColorFormula) {\n            let base = ColorConfig.getChannelColor(song, color, channel, useFixedOrder);\n            var regex = /\\(([^\\,)]+)/;\n            let newChannelSecondary = ColorConfig.getComputed(regex.exec(base.secondaryChannel)[1]);\n            let newChannelPrimary = ColorConfig.getComputed(regex.exec(base.primaryChannel)[1]);\n            let newNoteSecondary = ColorConfig.getComputed(regex.exec(base.secondaryNote)[1]);\n            let newNotePrimary = ColorConfig.getComputed(regex.exec(base.primaryNote)[1]);\n            return { secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n        }\n        else {\n            return ColorConfig.getChannelColor(song, color, channel, useFixedOrder);\n        }\n    }\n    ;\n    static getChannelColor(song, color, channel, useFixedOrder) {\n        if (!this.usesColorFormula) {\n            if (!useFixedOrder) {\n                if (channel < song.pitchChannelCount) {\n                    return ColorConfig.pitchChannels[(color % this.c_pitchLimit) % ColorConfig.pitchChannels.length];\n                }\n                else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\n                    return ColorConfig.noiseChannels[(color % this.c_noiseLimit) % ColorConfig.noiseChannels.length];\n                }\n                else {\n                    return ColorConfig.modChannels[(color % this.c_modLimit) % ColorConfig.modChannels.length];\n                }\n            }\n            else {\n                if (channel < song.pitchChannelCount) {\n                    return ColorConfig.pitchChannels[(channel % this.c_pitchLimit) % ColorConfig.pitchChannels.length];\n                }\n                else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\n                    return ColorConfig.noiseChannels[((channel - song.pitchChannelCount) % this.c_noiseLimit) % ColorConfig.noiseChannels.length];\n                }\n                else {\n                    return ColorConfig.modChannels[((channel - song.pitchChannelCount - song.noiseChannelCount) % this.c_modLimit) % ColorConfig.modChannels.length];\n                }\n            }\n        }\n        else {\n            if (useFixedOrder)\n                color = channel;\n            if (ColorConfig.colorLookup.has(color)) {\n                return ColorConfig.colorLookup.get(color);\n            }\n            else {\n                let colorFormulaPitchLimit = this.c_colorFormulaPitchLimit;\n                let colorFormulaNoiseLimit = this.c_colorFormulaNoiseLimit;\n                let colorFormulaModLimit = this.c_colorFormulaModLimit;\n                if (channel < song.pitchChannelCount) {\n                    let newChannelSecondary = \"hsl(\" + ((this.c_pitchSecondaryChannelHue + (color * this.c_pitchSecondaryChannelHueScale / this.c_pitchChannelCountOverride) * 256) % colorFormulaPitchLimit) + \",\"\n                        + (this.c_pitchSecondaryChannelSat * (1 - (this.c_pitchSecondaryChannelSatScale * Math.floor(color / 9)))) + \"%,\"\n                        + (this.c_pitchSecondaryChannelLum * (1 - (this.c_pitchSecondaryChannelLumScale * Math.floor(color / 9)))) + \"%)\";\n                    let newChannelPrimary = \"hsl(\" + ((this.c_pitchPrimaryChannelHue + (color * this.c_pitchPrimaryChannelHueScale / this.c_pitchChannelCountOverride) * 256) % colorFormulaPitchLimit) + \",\"\n                        + (this.c_pitchPrimaryChannelSat * (1 - (this.c_pitchPrimaryChannelSatScale * Math.floor(color / 9)))) + \"%,\"\n                        + (this.c_pitchPrimaryChannelLum * (1 - (this.c_pitchPrimaryChannelLumScale * Math.floor(color / 9)))) + \"%)\";\n                    let newNoteSecondary = \"hsl(\" + ((this.c_pitchSecondaryNoteHue + (color * this.c_pitchSecondaryNoteHueScale / this.c_pitchChannelCountOverride) * 256) % colorFormulaPitchLimit) + \",\"\n                        + (this.c_pitchSecondaryNoteSat * (1 - (this.c_pitchSecondaryNoteSatScale * Math.floor(color / 9)))) + \"%,\"\n                        + (this.c_pitchSecondaryNoteLum * (1 - (this.c_pitchSecondaryNoteLumScale * Math.floor(color / 9)))) + \"%)\";\n                    let newNotePrimary = \"hsl(\" + ((this.c_pitchPrimaryNoteHue + (color * this.c_pitchPrimaryNoteHueScale / this.c_pitchChannelCountOverride) * 256) % colorFormulaPitchLimit) + \",\"\n                        + (this.c_pitchPrimaryNoteSat * (1 - (this.c_pitchPrimaryNoteSatScale * Math.floor(color / 9)))) + \"%,\"\n                        + (this.c_pitchPrimaryNoteLum * (1 - (this.c_pitchPrimaryNoteLumScale * Math.floor(color / 9)))) + \"%)\";\n                    let newChannelColors = { secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                    ColorConfig.colorLookup.set(color, newChannelColors);\n                    return newChannelColors;\n                }\n                else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\n                    let newChannelSecondary = \"hsl(\" + ((this.c_noiseSecondaryChannelHue + (((color - song.pitchChannelCount) * this.c_noiseSecondaryChannelHueScale) / this.c_noiseChannelCountOverride) * 256) % colorFormulaNoiseLimit) + \",\"\n                        + (this.c_noiseSecondaryChannelSat + color * this.c_noiseSecondaryChannelSatScale) + \"%,\"\n                        + (this.c_noiseSecondaryChannelLum + color * this.c_noiseSecondaryChannelLumScale) + \"%)\";\n                    let newChannelPrimary = \"hsl(\" + ((this.c_noisePrimaryChannelHue + (((color - song.pitchChannelCount) * this.c_noisePrimaryChannelHueScale) / this.c_noiseChannelCountOverride) * 256) % colorFormulaNoiseLimit) + \",\"\n                        + (this.c_noisePrimaryChannelSat + color * this.c_noisePrimaryChannelSatScale) + \"%,\"\n                        + (this.c_noisePrimaryChannelLum + color * this.c_noisePrimaryChannelLumScale) + \"%)\";\n                    let newNoteSecondary = \"hsl(\" + ((this.c_noiseSecondaryNoteHue + (((color - song.pitchChannelCount) * this.c_noiseSecondaryNoteHueScale) / this.c_noiseChannelCountOverride) * 256) % colorFormulaNoiseLimit) + \",\"\n                        + (this.c_noiseSecondaryNoteSat + color * this.c_noiseSecondaryNoteSatScale) + \"%,\"\n                        + (this.c_noiseSecondaryNoteLum + color * this.c_noiseSecondaryNoteLumScale) + \"%)\";\n                    let newNotePrimary = \"hsl(\" + ((this.c_noisePrimaryNoteHue + (((color - song.pitchChannelCount) * this.c_noisePrimaryNoteHueScale) / this.c_noiseChannelCountOverride) * 256) % colorFormulaNoiseLimit) + \",\"\n                        + (this.c_noisePrimaryNoteSat + color * this.c_noisePrimaryNoteSatScale) + \"%,\"\n                        + (this.c_noisePrimaryNoteLum + color * this.c_noisePrimaryNoteLumScale) + \"%)\";\n                    let newChannelColors = { secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                    ColorConfig.colorLookup.set(color, newChannelColors);\n                    return newChannelColors;\n                }\n                else {\n                    let newChannelSecondary = \"hsl(\" + ((this.c_modSecondaryChannelHue + (((color - song.pitchChannelCount - song.noiseChannelCount) * this.c_modSecondaryChannelHueScale) / this.c_modChannelCountOverride) * 256) % colorFormulaModLimit) + \",\"\n                        + (this.c_modSecondaryChannelSat + color * this.c_modSecondaryChannelSatScale) + \"%,\"\n                        + (this.c_modSecondaryChannelLum + color * this.c_modSecondaryChannelLumScale) + \"%)\";\n                    let newChannelPrimary = \"hsl(\" + ((this.c_modPrimaryChannelHue + (((color - song.pitchChannelCount - song.noiseChannelCount) * this.c_modPrimaryChannelHueScale) / this.c_modChannelCountOverride) * 256) % colorFormulaModLimit) + \",\"\n                        + (this.c_modPrimaryChannelSat + color * this.c_modPrimaryChannelSatScale) + \"%,\"\n                        + (this.c_modPrimaryChannelLum + color * this.c_modPrimaryChannelLumScale) + \"%)\";\n                    let newNoteSecondary = \"hsl(\" + ((this.c_modSecondaryNoteHue + (((color - song.pitchChannelCount - song.noiseChannelCount) * this.c_modSecondaryNoteHueScale) / this.c_modChannelCountOverride) * 256) % colorFormulaModLimit) + \",\"\n                        + (this.c_modSecondaryNoteSat + color * this.c_modSecondaryNoteSatScale) + \"%,\"\n                        + (this.c_modSecondaryNoteLum + color * this.c_modSecondaryNoteLumScale) + \"%)\";\n                    let newNotePrimary = \"hsl(\" + ((this.c_modPrimaryNoteHue + (((color - song.pitchChannelCount - song.noiseChannelCount) * this.c_modPrimaryNoteHueScale) / this.c_modChannelCountOverride) * 256) % colorFormulaModLimit) + \",\"\n                        + (this.c_modPrimaryNoteSat + color * this.c_modPrimaryNoteSatScale) + \"%,\"\n                        + (this.c_modPrimaryNoteLum + color * this.c_modPrimaryNoteLumScale) + \"%)\";\n                    let newChannelColors = { secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                    ColorConfig.colorLookup.set(color, newChannelColors);\n                    return newChannelColors;\n                }\n            }\n        }\n    }\n    static setTheme(name) {\n        let theme = this.themes[name];\n        if (theme == undefined)\n            theme = ColorConfig.defaultTheme;\n        this._styleElement.textContent = theme;\n        let valuesToAdd = \":root{\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--oscilloscope-line-L\") == \"\")\n            valuesToAdd += \"--oscilloscope-line-L:var(--primary-text,white);\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--oscilloscope-line-R\") == \"\")\n            valuesToAdd += \"--oscilloscope-line-R:var(--text-selection,rgba(119,68,255,0.99));\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--text-enabled-icon\") == \"\")\n            valuesToAdd += \"--text-enabled-icon:✓ ;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--text-disabled-icon\") == \"\")\n            valuesToAdd += \"--text-disabled-icon:　;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--text-spacing-icon\") == \"\")\n            valuesToAdd += \"--text-spacing-icon:　;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--note-flash\") == \"\")\n            valuesToAdd += \"--note-flash:#ffffff;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--note-flash-secondary\") == \"\")\n            valuesToAdd += \"--note-flash-secondary:#ffffff77;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-channel-limit\") == \"\")\n            valuesToAdd += \"--pitch-channel-limit:\" + Config.pitchChannelCountMax + \";\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise-channel-limit\") == \"\")\n            valuesToAdd += \"--noise-channel-limit:\" + Config.noiseChannelCountMax + \";\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod-channel-limit\") == \"\")\n            valuesToAdd += \"--mod-channel-limit:\" + Config.modChannelCountMax + \";\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--formula-pitch-channel-limit\") == \"\")\n            valuesToAdd += \"--formula-pitch-channel-limit:360;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--formula-noise-channel-limit\") == \"\")\n            valuesToAdd += \"--formula-noise-channel-limit:360;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--formula-mod-channel-limit\") == \"\")\n            valuesToAdd += \"--formula-mod-channel-limit:360;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--editor-background\") == \"\")\n            valuesToAdd += \"--editor-background:black;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--ui-widget-background\") == \"\")\n            valuesToAdd += \"--ui-widget-background:#444;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--loop-accent\") == \"\")\n            valuesToAdd += \"--loop-accent:#74f;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--box-selection-fill\") == \"\")\n            valuesToAdd += \"--box-selection-fill:rgba(255,255,255,0.2);\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--primary-text\") == \"\")\n            valuesToAdd += \"--primary-text:white;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--inverted-text\") == \"\")\n            valuesToAdd += \"--inverted-text:black;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch\") == \"\")\n            valuesToAdd += \"--track-editor-bg-pitch:#444;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch-dim\") == \"\")\n            valuesToAdd += \"--track-editor-bg-pitch-dim:#333;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise\") == \"\")\n            valuesToAdd += \"--track-editor-bg-noise:#444;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise-dim\") == \"\")\n            valuesToAdd += \"--track-editor-bg-noise-dim:#333;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod\") == \"\")\n            valuesToAdd += \"--track-editor-bg-mod:#234;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod-dim\") == \"\")\n            valuesToAdd += \"--track-editor-bg-mod-dim:#123;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mute-button-normal\") == \"\")\n            valuesToAdd += \"--mute-button-normal:#ffa033;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mute-button-mod\") == \"\")\n            valuesToAdd += \"--mute-button-mod:#9a6bff;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch1-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch1-secondary-channel:#0099A1;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch1-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch1-primary-channel:#25F3FF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch1-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch1-secondary-note:#00BDC7;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch1-primary-note\") == \"\")\n            valuesToAdd += \"--pitch1-primary-note:#92F9FF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch2-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch2-secondary-channel:#A1A100;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch2-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch2-primary-channel:#FFFF25;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch2-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch2-secondary-note:#C7C700;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch2-primary-note\") == \"\")\n            valuesToAdd += \"--pitch2-primary-note:#FFFF92;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch3-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch3-secondary-channel:#C75000;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch3-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch3-primary-channel:#FF9752;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch3-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch3-secondary-note:#FF771C;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch3-primary-note\") == \"\")\n            valuesToAdd += \"--pitch3-primary-note:#FFCDAB;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch4-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch4-secondary-channel:#00A100;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch4-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch4-primary-channel:#50FF50;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch4-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch4-secondary-note:#00C700;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch4-primary-note\") == \"\")\n            valuesToAdd += \"--pitch4-primary-note:#A0FFA0;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch5-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch5-secondary-channel:#D020D0;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch5-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch5-primary-channel:#FF90FF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch5-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch5-secondary-note:#E040E0;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch5-primary-note\") == \"\")\n            valuesToAdd += \"--pitch5-primary-note:#FFC0FF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch6-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch6-secondary-channel:#7777B0;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch6-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch6-primary-channel:#A0A0FF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch6-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch6-secondary-note:#8888D0;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch6-primary-note\") == \"\")\n            valuesToAdd += \"--pitch6-primary-note:#D0D0FF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch7-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch7-secondary-channel:#8AA100;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch7-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch7-primary-channel:#DEFF25;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch7-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch7-secondary-note:#AAC700;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch7-primary-note\") == \"\")\n            valuesToAdd += \"--pitch7-primary-note:#E6FF92;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch8-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch8-secondary-channel:#DF0019;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch8-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch8-primary-channel:#FF98A4;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch8-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch8-secondary-note:#FF4E63;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch8-primary-note\") == \"\")\n            valuesToAdd += \"--pitch8-primary-note:#FFB2BB;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch9-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch9-secondary-channel:#00A170;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch9-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch9-primary-channel:#50FFC9;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch9-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch9-secondary-note:#00C78A;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch9-primary-note\") == \"\")\n            valuesToAdd += \"--pitch9-primary-note:#83FFD9;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch10-secondary-channel\") == \"\")\n            valuesToAdd += \"--pitch10-secondary-channel:#A11FFF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch10-primary-channel\") == \"\")\n            valuesToAdd += \"--pitch10-primary-channel:#CE8BFF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch10-secondary-note\") == \"\")\n            valuesToAdd += \"--pitch10-secondary-note:#B757FF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--pitch10-primary-note\") == \"\")\n            valuesToAdd += \"--pitch10-primary-note:#DFACFF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise1-secondary-channel\") == \"\")\n            valuesToAdd += \"--noise1-secondary-channel:#6F6F6F;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise1-primary-channel\") == \"\")\n            valuesToAdd += \"--noise1-primary-channel:#AAAAAA;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise1-secondary-note\") == \"\")\n            valuesToAdd += \"--noise1-secondary-note:#A7A7A7;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise1-primary-note\") == \"\")\n            valuesToAdd += \"--noise1-primary-note:#E0E0E0;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise2-secondary-channel\") == \"\")\n            valuesToAdd += \"--noise2-secondary-channel:#996633;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise2-primary-channel\") == \"\")\n            valuesToAdd += \"--noise2-primary-channel:#DDAA77;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise2-secondary-note\") == \"\")\n            valuesToAdd += \"--noise2-secondary-note:#CC9966;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise2-primary-note\") == \"\")\n            valuesToAdd += \"--noise2-primary-note:#F0D0BB;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise3-secondary-channel\") == \"\")\n            valuesToAdd += \"--noise3-secondary-channel:#4A6D8F;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise3-primary-channel\") == \"\")\n            valuesToAdd += \"--noise3-primary-channel:#77AADD;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise3-secondary-note\") == \"\")\n            valuesToAdd += \"--noise3-secondary-note:#6F9FCF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise3-primary-note\") == \"\")\n            valuesToAdd += \"--noise3-primary-note:#BBD7FF;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise4-secondary-channel\") == \"\")\n            valuesToAdd += \"--noise4-secondary-channel:#7A4F9A;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise4-primary-channel\") == \"\")\n            valuesToAdd += \"--noise4-primary-channel:#AF82D2;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise4-secondary-note\") == \"\")\n            valuesToAdd += \"--noise4-secondary-note:#9E71C1;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise4-primary-note\") == \"\")\n            valuesToAdd += \"--noise4-primary-note:#D4C1EA;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise5-secondary-channel\") == \"\")\n            valuesToAdd += \"--noise5-secondary-channel:#607837;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise5-primary-channel\") == \"\")\n            valuesToAdd += \"--noise5-primary-channel:#A2BB77;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise5-secondary-note\") == \"\")\n            valuesToAdd += \"--noise5-secondary-note:#91AA66;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--noise5-primary-note\") == \"\")\n            valuesToAdd += \"--noise5-primary-note:#C5E2B2;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod1-secondary-channel\") == \"\")\n            valuesToAdd += \"--mod1-secondary-channel:#339955;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod1-primary-channel\") == \"\")\n            valuesToAdd += \"--mod1-primary-channel:#77fc55;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod1-secondary-note\") == \"\")\n            valuesToAdd += \"--mod1-secondary-note:#77ff8a;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod1-primary-note\") == \"\")\n            valuesToAdd += \"--mod1-primary-note:#cdffee;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod2-secondary-channel\") == \"\")\n            valuesToAdd += \"--mod2-secondary-channel:#993355;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod2-primary-channel\") == \"\")\n            valuesToAdd += \"--mod2-primary-channel:#f04960;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod2-secondary-note\") == \"\")\n            valuesToAdd += \"--mod2-secondary-note:#f057a0;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod2-primary-note\") == \"\")\n            valuesToAdd += \"--mod2-primary-note:#ffb8de;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod3-secondary-channel\") == \"\")\n            valuesToAdd += \"--mod3-secondary-channel:#553399;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod3-primary-channel\") == \"\")\n            valuesToAdd += \"--mod3-primary-channel:#8855fc;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod3-secondary-note\") == \"\")\n            valuesToAdd += \"--mod3-secondary-note:#aa64ff;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod3-primary-note\") == \"\")\n            valuesToAdd += \"--mod3-primary-note:#f8ddff;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod4-secondary-channel\") == \"\")\n            valuesToAdd += \"--mod4-secondary-channel:#a86436;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod4-primary-channel\") == \"\")\n            valuesToAdd += \"--mod4-primary-channel:#c8a825;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod4-secondary-note\") == \"\")\n            valuesToAdd += \"--mod4-secondary-note:#e8ba46;\";\n        if (getComputedStyle(this._styleElement).getPropertyValue(\"--mod4-primary-note\") == \"\")\n            valuesToAdd += \"--mod4-primary-note:#fff6d3;\";\n        valuesToAdd += \"}\";\n        this._styleElement.textContent = valuesToAdd + this._styleElement.textContent;\n        const themeColor = document.querySelector(\"meta[name='theme-color']\");\n        if (themeColor != null) {\n            themeColor.setAttribute(\"content\", getComputedStyle(document.documentElement).getPropertyValue('--ui-widget-background'));\n        }\n        this.resetColors();\n        this.usesColorFormula = (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"true\");\n        this.c_pitchLimit = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-channel-limit\");\n        this.c_noiseLimit = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-channel-limit\");\n        this.c_modLimit = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-channel-limit\");\n        this.c_colorFormulaPitchLimit = +getComputedStyle(this._styleElement).getPropertyValue(\"--formula-pitch-channel-limit\");\n        this.c_colorFormulaNoiseLimit = +getComputedStyle(this._styleElement).getPropertyValue(\"--formula-noise-channel-limit\");\n        this.c_colorFormulaModLimit = +getComputedStyle(this._styleElement).getPropertyValue(\"--formula-mod-channel-limit\");\n        this.c_invertedText = getComputedStyle(this._styleElement).getPropertyValue(\"--inverted-text\");\n        this.c_trackEditorBgNoiseDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise-dim\");\n        this.c_trackEditorBgNoise = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise\");\n        this.c_trackEditorBgModDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod-dim\");\n        this.c_trackEditorBgMod = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod\");\n        this.c_trackEditorBgPitchDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch-dim\");\n        this.c_trackEditorBgPitch = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch\");\n        if (this.usesColorFormula) {\n            this.c_pitchSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\n            this.c_pitchSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\n            this.c_pitchSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\n            this.c_pitchSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\n            this.c_pitchSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\n            this.c_pitchSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\n            this.c_pitchPrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\n            this.c_pitchPrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\n            this.c_pitchPrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\n            this.c_pitchPrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\n            this.c_pitchPrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\n            this.c_pitchPrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\n            this.c_pitchSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\n            this.c_pitchSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\n            this.c_pitchSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\n            this.c_pitchSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\n            this.c_pitchSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\n            this.c_pitchSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\n            this.c_pitchPrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\n            this.c_pitchPrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\n            this.c_pitchPrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\n            this.c_pitchPrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\n            this.c_pitchPrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\n            this.c_pitchPrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\n            this.c_noiseSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\n            this.c_noiseSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\n            this.c_noiseSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\n            this.c_noiseSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\n            this.c_noiseSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\n            this.c_noiseSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\n            this.c_noisePrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\n            this.c_noisePrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\n            this.c_noisePrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\n            this.c_noisePrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\n            this.c_noisePrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\n            this.c_noisePrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\n            this.c_noiseSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\n            this.c_noiseSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\n            this.c_noiseSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\n            this.c_noiseSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\n            this.c_noiseSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\n            this.c_noiseSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\n            this.c_noisePrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\n            this.c_noisePrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\n            this.c_noisePrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\n            this.c_noisePrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\n            this.c_noisePrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\n            this.c_noisePrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\n            this.c_modSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\n            this.c_modSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\n            this.c_modSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\n            this.c_modSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\n            this.c_modSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\n            this.c_modSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\n            this.c_modPrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\n            this.c_modPrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\n            this.c_modPrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\n            this.c_modPrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\n            this.c_modPrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\n            this.c_modPrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\n            this.c_modSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\n            this.c_modSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\n            this.c_modSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\n            this.c_modSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\n            this.c_modSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\n            this.c_modSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\n            this.c_modPrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\n            this.c_modPrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\n            this.c_modPrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\n            this.c_modPrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\n            this.c_modPrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\n            this.c_modPrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\n            if (getComputedStyle(this._styleElement).getPropertyValue(\"--formula-pitch-channel-count-override\") != \"\")\n                this.c_pitchChannelCountOverride = +getComputedStyle(this._styleElement).getPropertyValue(\"--formula-pitch-channel-count-override\");\n            if (getComputedStyle(this._styleElement).getPropertyValue(\"--formula-noise-channel-count-override\") != \"\")\n                this.c_noiseChannelCountOverride = +getComputedStyle(this._styleElement).getPropertyValue(\"--formula-noise-channel-count-override\");\n            if (getComputedStyle(this._styleElement).getPropertyValue(\"--formula-mod-channel-count-override\") != \"\")\n                this.c_modChannelCountOverride = +getComputedStyle(this._styleElement).getPropertyValue(\"--formula-mod-channel-count-override\");\n        }\n    }\n    static getComputed(name) {\n        return getComputedStyle(this._styleElement).getPropertyValue(name);\n    }\n}\nColorConfig.colorLookup = new Map();\nColorConfig.usesColorFormula = false;\nColorConfig.defaultTheme = \"modbox classic\";\nColorConfig.themes = {\n    \"dark classic\": ``,\n    \"dark competition\": `\n\t\t\t\t:root {\n\t\t\t\t\t--hover-preview: #ddd;\n\t\t\t\t\t--playhead: #ddd;\n\t\t\t\t\t--primary-text: #ddd;\n\t\t\t\t\t--secondary-text: #8e695b;\n\t\t\t\t\t--text-selection: rgba(169,0,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(221,221,221,0.2);\n\t\t\t\t\t--loop-accent: #bf15ba;\n\t\t\t\t\t--link-accent: #f888ff;\n\t\t\t\t\t--ui-widget-background: #443a3a;\n\t\t\t\t\t--pitch-background: #353333;\n\t\t\t\t\t--tonic: #884a44;\n\t\t\t\t\t--fifth-note: #415498;\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\n\t\t\t}\n\t\t`,\n    \"light classic\": `\n\t\t\t:root {\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t--page-margin: #685d88;\n\t\t\t\t--editor-background: white;\n\t\t\t\t--hover-preview: black;\n\t\t\t\t--playhead: rgba(0,0,0,0.5);\n\t\t\t\t--primary-text: black;\n\t\t\t\t--secondary-text: #777;\n\t\t\t\t--inverted-text: white;\n\t\t\t\t--text-selection: rgba(200,170,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\n\t\t\t\t--loop-accent: #98f;\n\t\t\t\t--link-accent: #74f;\n\t\t\t\t--ui-widget-background: #ececec;\n\t\t\t\t--ui-widget-focus: #eee;\n\t\t\t\t--pitch-background: #ececec;\n\t\t\t\t--tonic: #f0d6b6;\n\t\t\t\t--fifth-note: #bbddf0;\n\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t--black-piano-key: #666;\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\n\t\t\t\t\t--multiplicative-mod-slider: #789;\n\t\t\t\t\t--overwriting-mod-slider: #987;\n\t\t\t\t\t--indicator-primary: #98f;\n\t\t\t\t\t--indicator-secondary: #cde;\n\t\t\t\t\t--select2-opt-group: #cecece;\n\t\t\t\t\t--input-box-outline: #ddd;\n\t\t\t\t\t--mute-button-normal: #c0b47f;\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\n\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\n\t\t\t\t--pitch1-primary-channel:   #00A0BD;\n\t\t\t\t--pitch1-secondary-note:    #34C2DC;\n\t\t\t\t--pitch1-primary-note:      #00758A;\n\t\t\t\t--pitch2-secondary-channel: #E3C941;\n\t\t\t\t--pitch2-primary-channel:   #B49700;\n\t\t\t\t--pitch2-secondary-note:    #D1B628;\n\t\t\t\t--pitch2-primary-note:      #836E00;\n\t\t\t\t--pitch3-secondary-channel: #FF9D61;\n\t\t\t\t--pitch3-primary-channel:   #E14E00;\n\t\t\t\t--pitch3-secondary-note:    #F67D3C;\n\t\t\t\t--pitch3-primary-note:      #B64000;\n\t\t\t\t--pitch4-secondary-channel: #4BE24B;\n\t\t\t\t--pitch4-primary-channel:   #00A800;\n\t\t\t\t--pitch4-secondary-note:    #2DC82D;\n\t\t\t\t--pitch4-primary-note:      #008000;\n\t\t\t\t--pitch5-secondary-channel: #FF90FF;\n\t\t\t\t--pitch5-primary-channel:   #E12EDF;\n\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\n\t\t\t\t--pitch5-primary-note:      #A600A5;\n\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\n\t\t\t\t--pitch6-primary-channel:   #6969FD;\n\t\t\t\t--pitch6-secondary-note:    #9393FE;\n\t\t\t\t--pitch6-primary-note:      #4A4AD7;\n\t\t\t\t--pitch7-secondary-channel: #C2D848;\n\t\t\t\t--pitch7-primary-channel:   #8EA800;\n\t\t\t\t--pitch7-secondary-note:    #B0C82D;\n\t\t\t\t--pitch7-primary-note:      #6C8000;\n\t\t\t\t--pitch8-secondary-channel: #FF90A4;\n\t\t\t\t--pitch8-primary-channel:   #E12E4D;\n\t\t\t\t--pitch8-secondary-note:    #EC6E85;\n\t\t\t\t--pitch8-primary-note:      #A6001D;\n\t\t\t\t--pitch9-secondary-channel: #41E3B5;\n\t\t\t\t--pitch9-primary-channel:   #00B481;\n\t\t\t\t--pitch9-secondary-note:    #28D1A1;\n\t\t\t\t--pitch9-primary-note:      #00835E;\n\t\t\t\t--pitch10-secondary-channel:#CA77FF;\n\t\t\t\t--pitch10-primary-channel:  #9609FF;\n\t\t\t\t--pitch10-secondary-note:   #B54FFF;\n\t\t\t\t--pitch10-primary-note:     #8400E3;\n\t\t\t\t--noise1-secondary-channel: #C1C1C1;\n\t\t\t\t--noise1-primary-channel:   #898989;\n\t\t\t\t--noise1-secondary-note:    #ADADAD;\n\t\t\t\t--noise1-primary-note:      #6C6C6C;\n\t\t\t\t--noise2-secondary-channel: #E8BB8C;\n\t\t\t\t--noise2-primary-channel:   #BD7D3A;\n\t\t\t\t--noise2-secondary-note:    #D1A374;\n\t\t\t\t--noise2-primary-note:      #836342;\n\t\t\t\t--noise3-secondary-channel: #9BC4EB;\n\t\t\t\t--noise3-primary-channel:   #4481BE;\n\t\t\t\t--noise3-secondary-note:    #7CA7D3;\n\t\t\t\t--noise3-primary-note:      #476685;\n\t\t\t\t--noise4-secondary-channel: #C5A5E0;\n\t\t\t\t--noise4-primary-channel:   #8553AE;\n\t\t\t\t--noise4-secondary-note:    #B290CC;\n\t\t\t\t--noise4-primary-note:      #684F7D;\n\t\t\t\t--noise5-secondary-channel: #B8CE93;\n\t\t\t\t--noise5-primary-channel:   #87A74F;\n\t\t\t\t--noise5-secondary-note:    #ABC183;\n\t\t\t\t--noise5-primary-note:      #68784C;\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\n\t\t\t\t\t--mod4-primary-note:        #a86810;\n\t\t\t\t\t--mod-label-primary:        #dddddd;\n\t\t\t\t\t--mod-label-secondary-text: #777;\n\t\t\t\t\t--disabled-note-primary:    #666;\n\t\t\t\t\t--disabled-note-secondary:  #aaa;\n\t\t\t}\n\t\t\t\n\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t}\n\n\t\t\t\t.select2-selection__rendered {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\n\t\t\t\t.promptContainerBG::before {\n\t\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\n\t\t\t\t}\t\n\t\t`,\n    \"jummbox classic\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #040410;\n\t\t\t\t\t--editor-background: #040410;\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t\t--secondary-text: #84859a;\n\t\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t\t--ui-widget-background: #393e4f;\n\t\t\t\t\t--ui-widget-focus: #6d6886;\n\t\t\t\t\t--pitch-background: #393e4f;\n\t\t\t\t\t--tonic: #725491;\n\t\t\t\t\t--fifth-note: #54547a;\n\t\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t\t--black-piano-key: #666;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t\t\t--track-editor-bg-mod: #283560;\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t\t--indicator-primary: #9c64f7;\n\t\t\t\t\t--indicator-secondary: #393e4f;\n\t\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t\t--input-box-outline: #222;\n\t\t\t\t\t--mute-button-normal: #dda85d;\n\t\t\t\t\t--mute-button-mod: #886eae;\n\t\t\t\t\t--mod-label-primary: #282840;\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.5;\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.5;\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.5;\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.5;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 0;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 0;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 0;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 192;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 192;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 192;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #91879f;\n\t\t\t\t\t--disabled-note-secondary:  #6a677a;\n\t\t\t\t}\n\t\t\t`,\n    \"forest\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #010c03;\n\t\t\t\t\t--editor-background: #010c03;\n\t\t\t\t\t--hover-preview: #efe;\n\t\t\t\t\t--playhead: rgba(232, 255, 232, 0.9);\n\t\t\t\t\t--primary-text: #efe;\n\t\t\t\t\t--secondary-text: #70A070;\n\t\t\t\t\t--inverted-text: #280228;\n\t\t\t\t\t--text-selection: rgba(255,68,199,0.99);\n\t\t\t\t\t--box-selection-fill: #267aa3;\n\t\t\t\t\t--loop-accent: #ffe845;\n\t\t\t\t\t--link-accent: #9f8;\n\t\t\t\t\t--ui-widget-background: #203829;\n\t\t\t\t\t--ui-widget-focus: #487860;\n\t\t\t\t\t--pitch-background: #203829;\n\t\t\t\t\t--tonic: #2b8d20;\n\t\t\t\t\t--fifth-note: #385840;\n\t\t\t\t\t--white-piano-key: #bda;\n\t\t\t\t\t--black-piano-key: #573;\n                    --black-piano-key-text: #ffffff;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #254820;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #102819;\n\t\t\t\t\t--track-editor-bg-noise: #304050;\n\t\t\t\t\t--track-editor-bg-noise-dim: #102030;\n\t\t\t\t\t--track-editor-bg-mod: #506030;\n\t\t\t\t\t--track-editor-bg-mod-dim: #2a300a;\n\t\t\t\t\t--multiplicative-mod-slider: #205c8f;\n\t\t\t\t\t--overwriting-mod-slider: #20ac6f;\n\t\t\t\t\t--indicator-primary: #dcd866;\n\t\t\t\t\t--indicator-secondary: #203829;\n\t\t\t\t\t--select2-opt-group: #1a6f5a;\n\t\t\t\t\t--input-box-outline: #242;\n\t\t\t\t\t--mute-button-normal: #49e980;\n\t\t\t\t\t--mute-button-mod: #c2e502;\n\t\t\t\t\t--mod-label-primary: #133613;\n\t\t\t\t\t--mod-label-secondary-text: rgb(27, 126, 40);\n\t\t\t\t\t--mod-label-primary-text: #efe;\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\n\t\t\t\t\t--pitch-primary-note-hue: 120;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 80;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 200;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\n\t\t\t\t\t--noise-primary-channel-sat: 48;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 65;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 200;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 33;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 200;\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 64;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 40;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\n\t\t\t\t\t--mod-primary-channel-sat: 60;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 40;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\n\t\t\t\t\t--mod-secondary-note-sat: 62;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 55;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 40;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\n\t\t\t\t\t--mod-primary-note-sat: 66;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #536e5c;\n\t\t\t\t\t--disabled-note-secondary:  #395440;\n\t\t\t\t}\n\t\t\t`,\n    \"canyon\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #0a0000;\n\t\t\t\t\t--editor-background: #0a0000;\n\t\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\n\t\t\t\t\t--primary-text: #f5d6bf;\n\t\t\t\t\t--secondary-text: #934050;\n\t\t\t\t\t--inverted-text: #290505;\n\t\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\n\t\t\t\t\t--box-selection-fill: #94044870;\n\t\t\t\t\t--loop-accent: #ff1e1e;\n\t\t\t\t\t--link-accent: #da7b76;\n\t\t\t\t\t--ui-widget-background: #533137;\n\t\t\t\t\t--ui-widget-focus: #743e4b;\n\t\t\t\t\t--pitch-background: #4f3939;\n\t\t\t\t\t--tonic: #9e4145;\n\t\t\t\t\t--fifth-note: #5b3e6b;\n\t\t\t\t\t--white-piano-key: #d89898;\n\t\t\t\t\t--black-piano-key: #572b29;\n                    --black-piano-key-text: #ffffff;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #5e3a41;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #281d1c;\n\t\t\t\t\t--track-editor-bg-noise: #3a3551;\n\t\t\t\t\t--track-editor-bg-noise-dim: #272732;\n\t\t\t\t\t--track-editor-bg-mod: #552045;\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\n\t\t\t\t\t--multiplicative-mod-slider: #9f6095;\n\t\t\t\t\t--overwriting-mod-slider: #b55050;\n\t\t\t\t\t--indicator-primary: #f2f764;\n\t\t\t\t\t--indicator-secondary: #4f3939;\n\t\t\t\t\t--select2-opt-group: #673030;\n\t\t\t\t\t--input-box-outline: #443131;\n\t\t\t\t\t--mute-button-normal: #d81833;\n\t\t\t\t\t--mute-button-mod: #9e2691;\n\t\t\t\t\t--mod-label-primary: #5f2b39;\n\t\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\n\t\t\t\t\t--mod-label-primary-text: #e6caed;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\n\t\t\t\t\t--pitch-secondary-channel-sat: 73.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\n\t\t\t\t\t--pitch-primary-channel-sat: 90;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\n\t\t\t\t\t--pitch-secondary-note-sat: 83.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 35;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 60;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 60;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 60;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 60;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 222;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 222;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 222;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 54;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 222;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 75;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #515164;\n\t\t\t\t\t--disabled-note-secondary:  #2a2a3a;\n\t\t\t\t}\n\t\t\t`,\n    \"midnight\": `\n\t\t:root {\n\t\t\t--page-margin: #000;\n\t\t\t--editor-background: #000;\n\t\t\t--hover-preview: #757575;\n\t\t\t--playhead: #fff;\n\t\t\t--primary-text: #fff;\n\t\t\t--secondary-text: #acacac;\n\t\t\t--inverted-text: #290505;\n\t\t\t--text-selection: rgba(155, 155, 155, 0.99);\n\t\t\t--box-selection-fill: #79797970;\n\t\t\t--loop-accent: #646464;\n\t\t\t--link-accent: #707070;\n\t\t\t--ui-widget-background: #353535;\n\t\t\t--ui-widget-focus: #464646;\n\t\t\t--pitch-background: #222121;\n\t\t\t--tonic: #555955;\n\t\t\t--fifth-note: #1a1818;\n\t\t\t--white-piano-key: #a89e9e;\n\t\t\t--black-piano-key: #2d2424;\n            --black-piano-key-text: #ffffff;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #373737;\n\t\t\t--track-editor-bg-pitch-dim: #131313;\n\t\t\t--track-editor-bg-noise: #484848;\n\t\t\t--track-editor-bg-noise-dim: #131313;\n\t\t\t--track-editor-bg-mod: #373737;\n\t\t\t--track-editor-bg-mod-dim: #131313;\n\t\t\t--multiplicative-mod-slider: #555;\n\t\t\t--overwriting-mod-slider: #464545;\n\t\t\t--indicator-primary: #e0e0e0;\n\t\t\t--indicator-secondary: #404040;\n\t\t\t--select2-opt-group: #3c3b3b;\n\t\t\t--input-box-outline: #757575;\n\t\t\t--mute-button-normal: #8e8d8d;\n\t\t\t--mute-button-mod: #ddd;\n\t\t\t--mod-label-primary: #262526;\n\t\t\t--mod-label-secondary-text: rgb(227, 222, 225);\n\t\t\t--mod-label-primary-text: #b9b9b9;\n\t\t\t--pitch-secondary-channel-hue: 240;\n\t\t\t--pitch-secondary-channel-hue-scale: 228;\n\t\t\t--pitch-secondary-channel-sat: 73.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 25;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 240;\n\t\t\t--pitch-primary-channel-hue-scale: 228;\n\t\t\t--pitch-primary-channel-sat: 80;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 60.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 240;\n\t\t\t--pitch-secondary-note-hue-scale: 228;\n\t\t\t--pitch-secondary-note-sat: 73.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 32;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 240;\n\t\t\t--pitch-primary-note-hue-scale: 228;\n\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 80.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 160;\n\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 160;\n\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 160;\n\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 160;\n\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 62;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 30;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 62;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 62;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 34;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 62;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 96;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 75;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary:    #66a;\n\t\t\t--disabled-note-secondary:  #447;\n\t\t}\n\t`,\n    \"jummbox light\": `\n\t\t\t\t:root {\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t\t--page-margin: #cab1d3;\n\t\t\t\t\t--editor-background: #f4f4f4;\n\t\t\t\t\t--hover-preview: #2d26a2;\n\t\t\t\t\t--playhead: rgb(20 25 153 / 90%);\n\t\t\t\t\t--primary-text: #b686c3;\n\t\t\t\t\t--secondary-text: #970f38;\n\t\t\t\t\t--inverted-text: #fefdff;\n\t\t\t\t\t--text-selection: rgb(56 21 8 / 99%);\n\t\t\t\t\t--box-selection-fill: rgb(20 203 160 / 61%);\n\t\t\t\t\t--loop-accent: #09dc0e;\n\t\t\t\t\t--link-accent: #3ee669;\n\t\t\t\t\t--ui-widget-background: #0e0a42;\n\t\t\t\t\t--ui-widget-focus: #380c42;\n\t\t\t\t\t--pitch-background: #8daf96;\n\t\t\t\t\t--tonic: #a16fb1;\n\t\t\t\t\t--fifth-note: #d08c8c;\n\t\t\t\t\t--white-piano-key: #fbffee;\n\t\t\t\t\t--black-piano-key: #c9d8e5;\n\t\t\t\t\t--white-piano-key-text: #101160;\n\t\t\t\t\t--black-piano-key-text: #231b03;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #34456a;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #88afad;\n\t\t\t\t\t--track-editor-bg-noise: #564566;\n\t\t\t\t\t--track-editor-bg-noise-dim: #aaa;\n\t\t\t\t\t--track-editor-bg-mod: #7f779d;\n\t\t\t\t\t--track-editor-bg-mod-dim: #aaa;\n\t\t\t\t\t--multiplicative-mod-slider: #807caf;\n\t\t\t\t\t--overwriting-mod-slider: #909cdf;\n\t\t\t\t\t--indicator-primary: #ae38ff;\n\t\t\t\t\t--indicator-secondary: #5c8dbb;\n\t\t\t\t\t--select2-opt-group: #581b50;\n\t\t\t\t\t--input-box-outline: #6f7074;\n\t\t\t\t\t--mute-button-normal: #db1e00;\n\t\t\t\t\t--mute-button-mod: #883bf9;\n\t\t\t\t\t--mod-label-primary: #525297;\n\t\t\t\t\t--mod-label-secondary-text: rgb(197 147 245);\n\t\t\t\t\t--mod-label-primary-text: #a3aae9;\n                    --pitch-secondary-channel-hue: 26;\n                    --pitch-secondary-channel-hue-scale: 214.5;\n                    --pitch-secondary-channel-sat: 74.3;\n                    --pitch-secondary-channel-sat-scale: -0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 55;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 26;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 214.5;\n\t\t\t\t\t--pitch-primary-channel-sat: 74;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: -0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 65.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: -0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 26;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 214.5;\n\t\t\t\t\t--pitch-secondary-note-sat: 74.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: -0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 70;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: -0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 26;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 214.5;\n\t\t\t\t\t--pitch-primary-note-sat: 85;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 64.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: -0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 220;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 62;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: -0.1;\n\t\t\t\t\t--noise-primary-channel-hue: 220;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 53;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 53.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: -0.1;\n\t\t\t\t\t--noise-secondary-note-hue: 220;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 58.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 85;\n\t\t\t\t\t--noise-secondary-note-lum-scale: -1;\n\t\t\t\t\t--noise-primary-note-hue: 220;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 56.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 54;\n\t\t\t\t\t--noise-primary-note-lum-scale: -1;\n\t\t\t\t\t--mod-secondary-channel-hue: 90;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 60;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 90;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 89;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 65;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 90;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 79;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 95;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 90;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 79;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 55;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #868;\n\t\t\t\t\t--disabled-note-secondary:  #767;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\t\tbackground-color: var(--secondary-text);\n\t\t\t\t}\n\n\t\t\t\t.select2-selection__rendered {\n\t\t\t\t\tbackground-color: var(--secondary-text);\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor .piano-button::before {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\n\t\t\t\t.promptContainerBG::before {\n\t\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\n\t\t\t\t}\n\t\t\t`,\n    \"amoled dark\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #000;\n\t\t\t\t\t--editor-background: #020406;\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t\t--secondary-text: #8e88ce;\n\t\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t\t--loop-accent: #ad38f9;\n\t\t\t\t\t--link-accent: #bd25ff;\n\t\t\t\t\t--ui-widget-background: #080d1f;\n\t\t\t\t\t--ui-widget-focus: #060f2d;\n\t\t\t\t\t--pitch-background: #02060b;\n\t\t\t\t\t--tonic: #00113a;\n\t\t\t\t\t--fifth-note: #1b0019;\n\t\t\t\t\t--white-piano-key: #02040c;\n\t\t\t\t\t--black-piano-key: #02040c;\n                    --white-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #050829;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #010213;\n\t\t\t\t\t--track-editor-bg-noise: #051529;\n\t\t\t\t\t--track-editor-bg-noise-dim: #010b13;\n\t\t\t\t\t--track-editor-bg-mod: #150529;\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a0113;\n\t\t\t\t\t--multiplicative-mod-slider: #2b409c;\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t\t--indicator-primary: #7f3bec;\n\t\t\t\t\t--indicator-secondary: #213888;\n\t\t\t\t\t--select2-opt-group: #1d123c;\n\t\t\t\t\t--input-box-outline: #1b1e48;\n\t\t\t\t\t--mute-button-normal: #d234b0;\n\t\t\t\t\t--mute-button-mod: #263d98;\n\t\t\t\t\t--mod-label-primary: #090910;\n\t\t\t\t\t--mod-label-secondary-text: rgb(73, 69, 214);\n\t\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t\t--pitch-secondary-channel-hue: 183;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 158.7;\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 183;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 158.7;\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 183;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 158.7;\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 183;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 158.7;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 30;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 30;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 30;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 30;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 0;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 0;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 0;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 0;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary: #91879f;\n\t\t\t\t\t--disabled-note-secondary: #6a677a;\n\t\t\t\t}\n\n\t\t\t`,\n    \"beachcombing\": `\n\t\t\t:root {\n\t\t\t  --page-margin: #010121;\n  --editor-background: #020222;\n  --hover-preview: #f3ffff;\n  --playhead: #fff;\n  --primary-text: #c1f1ff;\n  --secondary-text: #546775;\n  --box-selection-fill: #3e0028;\n  --loop-accent: #5e68fffc;\n  --link-accent: #ff3ad5fc;\n  --ui-widget-background: #1f2b52;\n  --ui-widget-focus: #384e91;\n  --pitch-background: #2c3155;\n  --tonic: #935175;\n  --fifth-note: #1f569f;\n  --white-piano-key: #f3f2ff;\n  --black-piano-key: #4b4471;\n  --white-piano-key-text: #4b4471;\n  --track-editor-bg-pitch: #34406c;\n  --track-editor-bg-pitch-dim: #121931;\n  --track-editor-bg-noise: #562e3b;\n  --track-editor-bg-noise-dim: #161313;\n  --track-editor-bg-mod: #372e66;\n  --track-editor-bg-mod-dim: #2a1640;\n  --multiplicative-mod-slider: #606c9f;\n  --overwriting-mod-slider: #6850b5;\n  --indicator-primary: #ff8bd1;\n  --indicator-secondary: #393e4f;\n  --select2-opt-group: #5d576f;\n  --input-box-outline: #222;\n  --mute-button-normal: #7ce1ff;\n  --mute-button-mod: #db519d;\n  --pitch1-secondary-channel: #329b70;\n  --pitch1-primary-channel: #53ffb8;\n  --pitch1-secondary-note: #4cb98c;\n  --pitch1-primary-note: #98ffd4;\n  --pitch2-secondary-channel: #b08e4d;\n  --pitch2-primary-channel: #ffe185;\n  --pitch2-secondary-note: #91782e;\n  --pitch2-primary-note: #ffd968;\n  --pitch3-secondary-channel: #018e8e;\n  --pitch3-primary-channel: #3de4ff;\n  --pitch3-secondary-note: #24b7b7;\n  --pitch3-primary-note: #a7ffff;\n  --pitch4-secondary-channel: #792354;\n  --pitch4-primary-channel: #ff68bd;\n  --pitch4-secondary-note: #a73c78;\n  --pitch4-primary-note: #ff98d2;\n  --pitch5-secondary-channel: #185aab;\n  --pitch5-primary-channel: #6493ff;\n  --pitch5-secondary-note: #3e99d9;\n  --pitch5-primary-note: #b3e3ff;\n  --pitch6-secondary-channel: #953C47;\n  --pitch6-primary-channel: #FF7888;\n  --pitch6-secondary-note: #DF4F60;\n  --pitch6-primary-note: #FFB2BB;\n  --pitch7-secondary-channel: #4f007d;\n  --pitch7-primary-channel: #a54cd9;\n  --pitch7-secondary-note: #732b9d;\n  --pitch7-primary-note: #d386ff;\n  --pitch8-secondary-channel: #323c99;\n  --pitch8-primary-channel: #1b61ff;\n  --pitch8-secondary-note: #1848b3;\n  --pitch8-primary-note: #6f9bff;\n  --pitch9-secondary-channel: #1F605A;\n  --pitch9-primary-channel: #69FFEA;\n  --pitch9-secondary-note: #178076;\n  --pitch10-secondary-channel: #6D438C;\n  --pitch10-secondary-note: #8040B0;\n  --noise1-secondary-channel: #635070;\n  --noise1-primary-channel: #9071db;\n  --noise1-secondary-note: #915dc1;\n  --noise1-primary-note: #c5a5ff;\n  --noise2-secondary-channel: #993367;\n  --noise2-primary-channel: #dd777c;\n  --noise2-secondary-note: #cc6695;\n  --noise2-primary-note: #f0bbd1;\n  --noise3-secondary-channel: #4a8c8f;\n  --noise3-primary-channel: #77c5dd;\n  --noise3-secondary-note: #6fb4cf;\n  --noise3-primary-note: #bbf2ff;\n  --noise4-secondary-channel: #8e3e7d;\n  --noise4-primary-channel: #c682d2;\n  --noise4-secondary-note: #b871c1;\n  --noise4-primary-note: #ffb8f0;\n  --noise5-secondary-channel: #785e37;\n  --noise5-primary-channel: #bb9d77;\n  --noise5-secondary-note: #aa8c66;\n  --noise5-primary-note: #e2d1b2;\n  --mod1-secondary-channel: #4e8397;\n  --mod1-primary-channel: #92e6f3;\n  --mod1-secondary-note: #76b9d9;\n  --mod1-primary-note: #cde3ff;\n  --mod2-secondary-channel: #ad5774;\n  --mod2-primary-channel: #eba4ae;\n  --mod2-secondary-note: #c9719b;\n  --mod2-primary-note: #fdcee7;\n  --mod3-secondary-channel: #6f579f;\n  --mod3-primary-channel: #b192f7;\n  --mod3-secondary-note: #7c3fc8;\n  --mod4-secondary-channel: #a88a36;\n  --mod4-primary-channel: #bec825;\n  --mod4-secondary-note: #aecb57;\n  --mod4-primary-note: #dee9bd;\n  --mod-label-primary: #2c2c56;\n  --mod-label-secondary-text: rgb(71,69,147);\n  --mod-label-primary-text: white;\n  --disabled-note-primary: #91879f;\n  --disabled-note-secondary: #6a677a;\n\n\n\t\t\t}\n\t\t`,\n    \"roe\": `\n\t\t\t:root {\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--primary-text: #b8cee0;\n\t\t\t--secondary-text: #cb3434;\n\t\t\t--text-selection: rgb(255 68 68 / 99%);\n\t\t\t--box-selection-fill: rgb(255 0 0 / 30%);\n\t\t\t--loop-accent: #7744FF;\n\t\t\t--link-accent: #FF2A2A;\n\t\t\t--ui-widget-background: #1a2642;\n\t\t\t--ui-widget-focus: #2c3f6d;\n\t\t\t--pitch-background: #15111a;\n\t\t\t--tonic: #1b3041;\n\t\t\t--fifth-note: #381818;\n\t\t\t--white-piano-key: #cdcdcd;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--track-editor-bg-pitch: #302938;\n\t\t\t--track-editor-bg-pitch-dim: #211c26;\n\t\t\t--track-editor-bg-noise: #261f42;\n\t\t\t--track-editor-bg-noise-dim: #1a152d;\n\t\t\t--track-editor-bg-mod: #183049;\n\t\t\t--track-editor-bg-mod-dim: #102132;\n\t\t\t--multiplicative-mod-slider: #344a7f;\n\t\t\t--overwriting-mod-slider: #344a7f;\n\t\t\t--indicator-primary: #FF2A2A;\n\t\t\t--indicator-secondary: #800000;\n\t\t\t--select2-opt-group: #141e34;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #299eff;\n\t\t\t--mute-button-mod: #165a93;\n\t\t\t--pitch1-secondary-channel: #273c90;\n\t\t\t--pitch1-primary-channel: #476BFF;\n\t\t\t--pitch1-secondary-note: #273c90;\n\t\t\t--pitch1-primary-note: #476BFF;\n\t\t\t--pitch2-secondary-channel: #3a3898;\n\t\t\t--pitch2-primary-channel: #625FFB;\n\t\t\t--pitch2-secondary-note: #3a3898;\n\t\t\t--pitch2-primary-note: #625FFB;\n\t\t\t--pitch3-secondary-channel: #542780;\n\t\t\t--pitch3-primary-channel: #9C49EC;\n\t\t\t--pitch3-secondary-note: #542780;\n\t\t\t--pitch3-primary-note: #9C49EC;\n\t\t\t--pitch4-secondary-channel: #84225d;\n\t\t\t--pitch4-primary-channel: #fd3fb1;\n\t\t\t--pitch4-secondary-note: #84225d;\n\t\t\t--pitch4-primary-note: #fd3fb1;\n\t\t\t--pitch5-secondary-channel: #8d2323;\n\t\t\t--pitch5-primary-channel: #ff3f3f;\n\t\t\t--pitch5-secondary-note: #8d2323;\n\t\t\t--pitch5-primary-note: #ff3f3f;\n\t\t\t--pitch6-secondary-channel: #84225d;\n\t\t\t--pitch6-primary-channel: #fd3fb1;\n\t\t\t--pitch6-secondary-note: #84225d;\n\t\t\t--pitch6-primary-note: #fd3fb1;\n\t\t\t--pitch7-secondary-channel: #542780;\n\t\t\t--pitch7-primary-channel: #9C49EC;\n\t\t\t--pitch7-secondary-note: #542780;\n\t\t\t--pitch7-primary-note: #9C49EC;\n\t\t\t--pitch8-secondary-channel: #3a3898;\n\t\t\t--pitch8-primary-channel: #625FFB;\n\t\t\t--pitch8-secondary-note: #3a3898;\n\t\t\t--pitch8-primary-note: #625FFB;\n\t\t\t--pitch9-secondary-channel: #273c90;\n\t\t\t--pitch9-primary-channel: #476BFF;\n\t\t\t--pitch9-secondary-note: #273c90;\n\t\t\t--pitch9-primary-note: #476BFF;\n\t\t\t--pitch10-secondary-channel: #165a93;\n\t\t\t--pitch10-primary-channel: #299EFF;\n\t\t\t--pitch10-secondary-note: #165a93;\n\t\t\t--pitch10-primary-note: #299EFF;\n\t\t\t--noise1-secondary-channel: #4281FF;\n\t\t\t--noise1-primary-channel: #96b9ff;\n\t\t\t--noise1-secondary-note: #4281FF;\n\t\t\t--noise1-primary-note: #96b9ff;\n\t\t\t--noise2-secondary-channel: #7347FF;\n\t\t\t--noise2-primary-channel: #c3b0ff;\n\t\t\t--noise2-secondary-note: #7347FF;\n\t\t\t--noise2-primary-note: #c3b0ff;\n\t\t\t--noise3-secondary-channel: #9F3CBF;\n\t\t\t--noise3-primary-channel: #e29cf9;\n\t\t\t--noise3-secondary-note: #9F3CBF;\n\t\t\t--noise3-primary-note: #e29cf9;\n\t\t\t--noise4-secondary-channel: #D3326F;\n\t\t\t--noise4-primary-channel: #fb9bbf;\n\t\t\t--noise4-secondary-note: #D3326F;\n\t\t\t--noise4-primary-note: #fb9bbf;\n\t\t\t--noise5-secondary-channel: #FF2A2A;\n\t\t\t--noise5-primary-channel: #ffa2a2;\n\t\t\t--noise5-secondary-note: #FF2A2A;\n\t\t\t--noise5-primary-note: #ffa2a2;\n\t\t\t--mod1-secondary-channel: #47587a;\n\t\t\t--mod1-primary-channel: #96b9ff;\n\t\t\t--mod1-secondary-note: #47587a;\n\t\t\t--mod1-primary-note: #96b9ff;\n\t\t\t--mod2-secondary-channel: #716791;\n\t\t\t--mod2-primary-channel: #c3b0ff;\n\t\t\t--mod2-secondary-note: #716791;\n\t\t\t--mod2-primary-note: #c3b0ff;\n\t\t\t--mod3-secondary-channel: #6f4c7b;\n\t\t\t--mod3-primary-channel: #e29cf9;\n\t\t\t--mod3-secondary-note: #6f4c7b;\n\t\t\t--mod3-primary-note: #e29cf9;\n\t\t\t--mod4-secondary-channel: #9e6279;\n\t\t\t--mod4-primary-channel: #fb9bbf;\n\t\t\t--mod4-secondary-note: #9e6279;\n\t\t\t--mod4-primary-note: #fb9bbf;\n\t\t\t--mod-label-primary: #15111a;\n\t\t\t--mod-label-secondary-text: #cb3434;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #c9c9c9;\n\t\t\t--disabled-note-secondary: #616161;\n\t\t}`,\n    \"moonlight\": `\n\t\t\t:root {\n\t\t\t--page-margin: #020514;\n\t\t\t--editor-background: #020514;\n\t\t\t--primary-text: #D4DCE9;\n\t\t\t--secondary-text: #3E87DA;\n\t\t\t--text-selection: #03599bd9;\n\t\t\t--box-selection-fill: hsl(206deg 66% 41% / 85%);\n\t\t\t--loop-accent: #639BD6;\n\t\t\t--link-accent: #A8C6E8;\n\t\t\t--ui-widget-background: #1e2940;\n\t\t\t--ui-widget-focus: #324b81;\n\t\t\t--pitch-background: #223849;\n\t\t\t--tonic: #33536c;\n\t\t\t--fifth-note: hsl(206deg 36% 16%);\n\t\t\t--white-piano-key: #c1bfe9;\n\t\t\t--black-piano-key: #454354;\n\t\t\t--track-editor-bg-pitch: #25568d80;\n\t\t\t--track-editor-bg-pitch-dim: #10253c80;\n\t\t\t--track-editor-bg-noise: #25568d80;\n\t\t\t--track-editor-bg-noise-dim: #10253c80;\n\t\t\t--track-editor-bg-mod: #25568d80;\n\t\t\t--track-editor-bg-mod-dim: #10253c80;\n\t\t\t--multiplicative-mod-slider: #0476cd;\n\t\t\t--overwriting-mod-slider: #035899;\n\t\t\t--indicator-primary: #57a1f4;\n\t\t\t--indicator-secondary: #2e5684;\n\t\t\t--select2-opt-group: #24355c;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #6ebffc;\n\t\t\t--mute-button-mod: #0a92fa;\n\t\t\t--pitch1-secondary-channel: #47425c;\n\t\t\t--pitch1-primary-channel: #918bac;\n\t\t\t--pitch1-secondary-note: #6b6489;\n\t\t\t--pitch1-primary-note: #a8a3bf;\n\t\t\t--pitch2-secondary-channel: #626493;\n\t\t\t--pitch2-primary-channel: #bdbed3;\n\t\t\t--pitch2-secondary-note: #626493;\n\t\t\t--pitch2-primary-note: #bdbed3;\n\t\t\t--pitch3-secondary-channel: #6e89b4;\n\t\t\t--pitch3-primary-channel: #d4dce9;\n\t\t\t--pitch3-secondary-note: #6e89b4;\n\t\t\t--pitch3-primary-note: #d4dce9;\n\t\t\t--pitch4-secondary-channel: #4c77a9;\n\t\t\t--pitch4-primary-channel: #a8c6e8;\n\t\t\t--pitch4-secondary-note: #4c77a9;\n\t\t\t--pitch4-primary-note: #a8c6e8;\n\t\t\t--pitch5-secondary-channel: #314e6d;\n\t\t\t--pitch5-primary-channel: #639bd6;\n\t\t\t--pitch5-secondary-note: #46698f;\n\t\t\t--pitch5-primary-note: #639bd6;\n\t\t\t--pitch6-secondary-channel: #143d6b;\n\t\t\t--pitch6-primary-channel: #3e87da;\n\t\t\t--pitch6-secondary-note: #143d6b;\n\t\t\t--pitch6-primary-note: #3e87da;\n\t\t\t--pitch7-secondary-channel: #314e6d;\n\t\t\t--pitch7-primary-channel: #639bd6;\n\t\t\t--pitch7-secondary-note: #314e6d;\n\t\t\t--pitch7-primary-note: #639bd6;\n\t\t\t--pitch8-secondary-channel: #4c77a9;\n\t\t\t--pitch8-primary-channel: #a8c6e8;\n\t\t\t--pitch8-secondary-note: #4c77a9;\n\t\t\t--pitch8-primary-note: #a8c6e8;\n\t\t\t--pitch9-secondary-channel: #6e89b4;\n\t\t\t--pitch9-primary-channel: #d4dce9;\n\t\t\t--pitch9-secondary-note: #6e89b4;\n\t\t\t--pitch9-primary-note: #d4dce9;\n\t\t\t--pitch10-secondary-channel: #626493;\n\t\t\t--pitch10-primary-channel: #bdbed3;\n\t\t\t--pitch10-secondary-note: #626493;\n\t\t\t--pitch10-primary-note: #bdbed3;\n\t\t\t--noise1-secondary-channel: #4b4a55;\n\t\t\t--noise1-primary-channel: #9795a3;\n\t\t\t--noise1-secondary-note: #4b4a55;\n\t\t\t--noise1-primary-note: #9795a3;\n\t\t\t--noise2-secondary-channel: #858e9d;\n\t\t\t--noise2-primary-channel: #d7dce5;\n\t\t\t--noise2-secondary-note: #858e9d;\n\t\t\t--noise2-primary-note: #d7dce5;\n\t\t\t--noise3-secondary-channel: #394e65;\n\t\t\t--noise3-primary-channel: #809bb7;\n\t\t\t--noise3-secondary-note: #394e65;\n\t\t\t--noise3-primary-note: #809bb7;\n\t\t\t--noise4-secondary-channel: #37577b;\n\t\t\t--noise4-primary-channel: #6189b8;\n\t\t\t--noise4-secondary-note: #37577b;\n\t\t\t--noise4-primary-note: #6189b8;\n\t\t\t--noise5-secondary-channel: #223849;\n\t\t\t--noise5-primary-channel: #5588af;\n\t\t\t--noise5-secondary-note: #223849;\n\t\t\t--noise5-primary-note: #5588af;\n\t\t\t--mod1-secondary-channel: #3e336c;\n\t\t\t--mod1-primary-channel: #6d60a4;\n\t\t\t--mod1-secondary-note: #3e336c;\n\t\t\t--mod1-primary-note: #6d60a4;\n\t\t\t--mod2-secondary-channel: #716791;\n\t\t\t--mod2-primary-channel: #bdbed3;\n\t\t\t--mod2-secondary-note: #716791;\n\t\t\t--mod2-primary-note: #bdbed3;\n\t\t\t--mod3-secondary-channel: #6b91bd;\n\t\t\t--mod3-primary-channel: #4b8fdd;\n\t\t\t--mod3-secondary-note: #597ca7;\n\t\t\t--mod3-primary-note: #7eade3;\n\t\t\t--mod4-secondary-channel: #14559f;\n\t\t\t--mod4-primary-channel: #3386e6;\n\t\t\t--mod4-secondary-note: #14559f;\n\t\t\t--mod4-primary-note: #3386e6;\n\t\t\t--mod-label-primary: #1e2940;\n\t\t\t--mod-label-secondary-text: #748ebe;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #828282;\n\t\t\t--disabled-note-secondary: #4f4f4f;\n\t\t\t}`,\n    \"autumn\": `\n\t\t:root {\n\t\t\t--page-margin: #060304;\n\t\t\t--editor-background: #060304;\n\t\t\t--text-selection: rgb(115 80 76);\n\t\t\t--box-selection-fill: rgb(174 73 81 / 45%);\n\t\t\t--loop-accent: #834A69;\n\t\t\t--ui-widget-background: #2a2523;\n\t\t\t--ui-widget-focus: #4e4c44;\n\t\t\t--pitch-background: #121212;\n\t\t\t--tonic: #4f4f4f;\n\t\t\t--fifth-note: #222;\n\t\t\t--white-piano-key: #b59b9b;\n\t\t\t--black-piano-key: #231e1e;\n\t\t\t--track-editor-bg-pitch: #352f38;\n\t\t\t--track-editor-bg-pitch-dim: #232025;\n\t\t\t--track-editor-bg-noise: #3c3029;\n\t\t\t--track-editor-bg-noise-dim: #251d19;\n\t\t\t--track-editor-bg-mod: #202623;\n\t\t\t--track-editor-bg-mod-dim: #131715;\n\t\t\t--multiplicative-mod-slider: #D9D16E;\n\t\t\t--overwriting-mod-slider: #2D826F;\n\t\t\t--indicator-primary: #D9D16E;\n\t\t\t--indicator-secondary: #444226;\n\t\t\t--select2-opt-group: #20191c;\n\t\t\t--input-box-outline: #20191c;\n\t\t\t--mute-button-normal: var(--pitch2-primary-channel);\n\t\t\t--mute-button-mod: var(--pitch4-primary-channel);\n\t\t\t--pitch1-secondary-channel: #704a34;\n\t\t\t--pitch1-primary-channel: #D9895A;\n\t\t\t--pitch1-secondary-note: #704a34;\n\t\t\t--pitch1-primary-note: #D9895A;\n\t\t\t--pitch2-secondary-channel: #5f3538;\n\t\t\t--pitch2-primary-channel: #AE4951;\n\t\t\t--pitch2-secondary-note: #5f3538;\n\t\t\t--pitch2-primary-note: #AE4951;\n\t\t\t--pitch3-secondary-channel: #5c4336;\n\t\t\t--pitch3-primary-channel: #CA9A81;\n\t\t\t--pitch3-secondary-note: #5c4336;\n\t\t\t--pitch3-primary-note: #CA9A81;\n\t\t\t--pitch4-secondary-channel: #1d3143;\n\t\t\t--pitch4-primary-channel: #386995;\n\t\t\t--pitch4-secondary-note: #1d3143;\n\t\t\t--pitch4-primary-note: #386995;\n\t\t\t--pitch5-secondary-channel: #9c8a58;\n\t\t\t--pitch5-primary-channel: #D9D16E;\n\t\t\t--pitch5-secondary-note: #7c783f;\n\t\t\t--pitch5-primary-note: #D9D16E;\n\t\t\t--pitch6-secondary-channel: #886562;\n\t\t\t--pitch6-primary-channel: #D3A9A5;\n\t\t\t--pitch6-secondary-note: #886562;\n\t\t\t--pitch6-primary-note: #D3A9A5;\n\t\t\t--pitch7-secondary-channel: #1c3f37;\n\t\t\t--pitch7-primary-channel: #2D826F;\n\t\t\t--pitch7-secondary-note: #1c3f37;\n\t\t\t--pitch7-primary-note: #2D826F;\n\t\t\t--pitch8-secondary-channel: #442e2d;\n\t\t\t--pitch8-primary-channel: #815150;\n\t\t\t--pitch8-secondary-note: #442e2d;\n\t\t\t--pitch8-primary-note: #815150;\n\t\t\t--pitch9-secondary-channel: #8e6f60;\n\t\t\t--pitch9-primary-channel: #E5B8A1;\n\t\t\t--pitch9-secondary-note: #8e6f60;\n\t\t\t--pitch9-primary-note: #E5B8A1;\n\t\t\t--pitch10-secondary-channel: #4f3142;\n\t\t\t--pitch10-primary-channel: #834A69;\n\t\t\t--pitch10-secondary-note: #4f3142;\n\t\t\t--pitch10-primary-note: #834A69;\n\t\t\t--noise1-secondary-channel: #6b5346;\n\t\t\t--noise1-primary-channel: #b99c89;\n\t\t\t--noise1-secondary-note: #6b5346;\n\t\t\t--noise1-primary-note: #F0D0BB;\n\t\t\t--noise2-secondary-channel: #4a3839;\n\t\t\t--noise2-primary-channel: #9c6b6e;\n\t\t\t--noise2-secondary-note: #4a3839;\n\t\t\t--noise2-primary-note: #c18b8f;\n\t\t\t--noise3-secondary-channel: #2d3c4a;\n\t\t\t--noise3-primary-channel: #536e86;\n\t\t\t--noise3-secondary-note: #2d3c4a;\n\t\t\t--noise3-primary-note: #8fa8c0;\n\t\t\t--noise4-secondary-channel: #273f3a;\n\t\t\t--noise4-primary-channel: #4e8377;\n\t\t\t--noise4-secondary-note: #273f3a;\n\t\t\t--noise4-primary-note: #87baae;\n\t\t\t--noise5-secondary-channel: #372730;\n\t\t\t--noise5-primary-channel: #7f5e70;\n\t\t\t--noise5-secondary-note: #372730;\n\t\t\t--noise5-primary-note: #cc96b3;\n\t\t\t--mod1-secondary-channel: #783f1f;\n\t\t\t--mod1-primary-channel: #dc6d2c;\n\t\t\t--mod1-secondary-note: #783f1f;\n\t\t\t--mod1-primary-note: #dc6d2c;\n\t\t\t--mod2-secondary-channel: #0b3153;\n\t\t\t--mod2-primary-channel: #1464ac;\n\t\t\t--mod2-secondary-note: #0b3153;\n\t\t\t--mod2-primary-note: #1464ac;\n\t\t\t--mod3-secondary-channel: #075040;\n\t\t\t--mod3-primary-channel: #08a17f;\n\t\t\t--mod3-secondary-note: #075040;\n\t\t\t--mod3-primary-note: #08a17f;\n\t\t\t--mod4-secondary-channel: #631640;\n\t\t\t--mod4-primary-channel: #b4186d;\n\t\t\t--mod4-secondary-note: #631640;\n\t\t\t--mod4-primary-note: #b4186d;\n\t\t\t--mod-label-primary: #000;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}`,\n    \"fruit\": `\n\t\t:root {\n\t\t\t--page-margin: #040507;\n\t\t\t--editor-background: #040507;\n\t\t\t--text-selection: rgb(115 103 76);\n\t\t\t--box-selection-fill: rgb(174 109 73 / 45%);\n\t\t\t--loop-accent: #EC897D;\n\t\t\t--link-accent: #FDE484;\n\t\t\t--ui-widget-background: #22222c;\n\t\t\t--ui-widget-focus: #39394c;\n\t\t\t--pitch-background: #101010;\n\t\t\t--tonic: #2c2d34;\n\t\t\t--fifth-note: #191a20;\n\t\t\t--white-piano-key: #bbbaba;\n\t\t\t--black-piano-key: #2d2d2d;\n\t\t\t--track-editor-bg-pitch: #2b2d40;\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\n\t\t\t--track-editor-bg-noise: #3c3644;\n\t\t\t--track-editor-bg-noise-dim: #26222b;\n\t\t\t--track-editor-bg-mod: #322a2a;\n\t\t\t--track-editor-bg-mod-dim: #191515;\n\t\t\t--multiplicative-mod-slider: #977da9;\n\t\t\t--overwriting-mod-slider: #798FA7;\n\t\t\t--indicator-primary: #EAAC9D;\n\t\t\t--indicator-secondary: #5e413a;\n\t\t\t--select2-opt-group: #191920;\n\t\t\t--input-box-outline: #191920;\n\t\t\t--mute-button-normal: #798FA7;\n\t\t\t--mute-button-mod: #354457;\n\t\t\t--pitch1-secondary-channel: #91655a;\n\t\t\t--pitch1-primary-channel: #EAAC9D;\n\t\t\t--pitch1-secondary-note: #91655a;\n\t\t\t--pitch1-primary-note: #EAAC9D;\n\t\t\t--pitch2-secondary-channel: #8f6513;\n\t\t\t--pitch2-primary-channel: #FFAF12;\n\t\t\t--pitch2-secondary-note: #8f6513;\n\t\t\t--pitch2-primary-note: #FFAF12;\n\t\t\t--pitch3-secondary-channel: #212f46;\n\t\t\t--pitch3-primary-channel: #34558B;\n\t\t\t--pitch3-secondary-note: #212f46;\n\t\t\t--pitch3-primary-note: #34558B;\n\t\t\t--pitch4-secondary-channel: #2e6b5b;\n\t\t\t--pitch4-primary-channel: #4EC5A7;\n\t\t\t--pitch4-secondary-note: #2e6b5b;\n\t\t\t--pitch4-primary-note: #4EC5A7;\n\t\t\t--pitch5-secondary-channel: #555D46;\n\t\t\t--pitch5-primary-channel: #aabf84;\n\t\t\t--pitch5-secondary-note: #555D46;\n\t\t\t--pitch5-primary-note: #aabf84;\n\t\t\t--pitch6-secondary-channel: #A2553B;\n\t\t\t--pitch6-primary-channel: #e59a81;\n\t\t\t--pitch6-secondary-note: #A2553B;\n\t\t\t--pitch6-primary-note: #e59a81;\n\t\t\t--pitch7-secondary-channel: #7b4021;\n\t\t\t--pitch7-primary-channel: #FE813E;\n\t\t\t--pitch7-secondary-note: #7b4021;\n\t\t\t--pitch7-primary-note: #FE813E;\n\t\t\t--pitch8-secondary-channel: #847753;\n\t\t\t--pitch8-primary-channel: #EFDAA3;\n\t\t\t--pitch8-secondary-note: #847753;\n\t\t\t--pitch8-primary-note: #EFDAA3;\n\t\t\t--pitch9-secondary-channel: #2c3642;\n\t\t\t--pitch9-primary-channel: #798FA7;\n\t\t\t--pitch9-secondary-note: #2c3642;\n\t\t\t--pitch9-primary-note: #798FA7;\n\t\t\t--pitch10-secondary-channel: #0d4453;\n\t\t\t--pitch10-primary-channel: #107895;\n\t\t\t--pitch10-secondary-note: #0d4453;\n\t\t\t--pitch10-primary-note: #107895;\n\t\t\t--noise1-secondary-channel: #71617C;\n\t\t\t--noise1-primary-channel: #977da9;\n\t\t\t--noise1-secondary-note: #71617C;\n\t\t\t--noise1-primary-note: #977da9;\n\t\t\t--noise2-secondary-channel: #3B3D4A;\n\t\t\t--noise2-primary-channel: #707591;\n\t\t\t--noise2-secondary-note: #3B3D4A;\n\t\t\t--noise2-primary-note: #707591;\n\t\t\t--noise3-secondary-channel: #625f5e;\n\t\t\t--noise3-primary-channel: #A19D9C;\n\t\t\t--noise3-secondary-note: #625f5e;\n\t\t\t--noise3-primary-note: #A19D9C;\n\t\t\t--noise4-secondary-channel: #ab847b;\n\t\t\t--noise4-primary-channel: #EAAC9D;\n\t\t\t--noise4-secondary-note: #ab847b;\n\t\t\t--noise4-primary-note: #EAAC9D;\n\t\t\t--noise5-secondary-channel: #B49D74;\n\t\t\t--noise5-primary-channel: #dec69b;\n\t\t\t--noise5-secondary-note: #B49D74;\n\t\t\t--noise5-primary-note: #dec69b;\n\t\t\t--mod1-secondary-channel: #722124;\n\t\t\t--mod1-primary-channel: #D13A41;\n\t\t\t--mod1-secondary-note: #722124;\n\t\t\t--mod1-primary-note: #D13A41;\n\t\t\t--mod2-secondary-channel: #213657;\n\t\t\t--mod2-primary-channel: #34558B;\n\t\t\t--mod2-secondary-note: #213657;\n\t\t\t--mod2-primary-note: #34558B;\n\t\t\t--mod3-secondary-channel: #555D46;\n\t\t\t--mod3-primary-channel: #848f6d;\n\t\t\t--mod3-secondary-note: #555D46;\n\t\t\t--mod3-primary-note: #848f6d;\n\t\t\t--mod4-secondary-channel: #71617C;\n\t\t\t--mod4-primary-channel: #a68ab9;\n\t\t\t--mod4-secondary-note: #71617C;\n\t\t\t--mod4-primary-note: #a68ab9;\n\t\t\t--mod-label-primary: #282828;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}`,\n    \"sunset\": `\n\t\t:root {\n\t\t\t--page-margin: #040300;\n\t\t\t--editor-background: #040300;\n\t\t\t--text-selection: rgb(94 0 157);\n\t\t\t--box-selection-fill: rgb(174 173 73 / 45%);\n\t\t\t--loop-accent: #EC897D;\n\t\t\t--link-accent: #FDE484;\n\t\t\t--ui-widget-background: #241b24;\n\t\t\t--ui-widget-focus: #3a2e39;\n\t\t\t--pitch-background: #141414;\n\t\t\t--tonic: #2C212B;\n\t\t\t--fifth-note: #2E2A15;\n\t\t\t--white-piano-key: #bbbaba;\n\t\t\t--black-piano-key: #2d2d2d;\n\t\t\t--track-editor-bg-pitch: #2d2e42;\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\n\t\t\t--track-editor-bg-noise: #393340;\n\t\t\t--track-editor-bg-noise-dim: #26222b;\n\t\t\t--track-editor-bg-mod: #232a2c;\n\t\t\t--track-editor-bg-mod-dim: #151819;\n\t\t\t--multiplicative-mod-slider: #977da9;\n\t\t\t--overwriting-mod-slider: #798FA7;\n\t\t\t--indicator-primary: #F28891;\n\t\t\t--indicator-secondary: #601d23;\n\t\t\t--select2-opt-group: #151015;\n\t\t\t--input-box-outline: #151015;\n\t\t\t--mute-button-normal: #E4739D;\n\t\t\t--mute-button-mod: #9650A6;\n\t\t\t--pitch1-secondary-channel: #7F7721;\n\t\t\t--pitch1-primary-channel: #F3E79A;\n\t\t\t--pitch1-secondary-note: #7F7721;\n\t\t\t--pitch1-primary-note: #F3E79A;\n\t\t\t--pitch2-secondary-channel: #785E20;\n\t\t\t--pitch2-primary-channel: #F7D086;\n\t\t\t--pitch2-secondary-note: #785E20;\n\t\t\t--pitch2-primary-note: #F7D086;\n\t\t\t--pitch3-secondary-channel: #6E4219;\n\t\t\t--pitch3-primary-channel: #F9B881;\n\t\t\t--pitch3-secondary-note: #6E4219;\n\t\t\t--pitch3-primary-note: #F9B881;\n\t\t\t--pitch4-secondary-channel: #79351F;\n\t\t\t--pitch4-primary-channel: #F7A086;\n\t\t\t--pitch4-secondary-note: #79351F;\n\t\t\t--pitch4-primary-note: #F7A086;\n\t\t\t--pitch5-secondary-channel: #81272F;\n\t\t\t--pitch5-primary-channel: #F28891;\n\t\t\t--pitch5-secondary-note: #81272F;\n\t\t\t--pitch5-primary-note: #F28891;\n\t\t\t--pitch6-secondary-channel: #8F224D;\n\t\t\t--pitch6-primary-channel: #E4739D;\n\t\t\t--pitch6-secondary-note: #8F224D;\n\t\t\t--pitch6-primary-note: #E4739D;\n\t\t\t--pitch7-secondary-channel: #611548;\n\t\t\t--pitch7-primary-channel: #CF63A6;\n\t\t\t--pitch7-secondary-note: #611548;\n\t\t\t--pitch7-primary-note: #CF63A6;\n\t\t\t--pitch8-secondary-channel: #561253;\n\t\t\t--pitch8-primary-channel: #B557A9;\n\t\t\t--pitch8-secondary-note: #4D104A;\n\t\t\t--pitch8-primary-note: #B557A9;\n\t\t\t--pitch9-secondary-channel: #4c1260;\n\t\t\t--pitch9-primary-channel: #9650A6;\n\t\t\t--pitch9-secondary-note: #3C0F4C;\n\t\t\t--pitch9-primary-note: #9650A6;\n\t\t\t--pitch10-secondary-channel: #3e1d78;\n\t\t\t--pitch10-primary-channel: #704D9E;\n\t\t\t--pitch10-secondary-note: #27124C;\n\t\t\t--pitch10-primary-note: #704D9E;\n\t\t\t--noise1-secondary-channel: #A7A578;\n\t\t\t--noise1-primary-channel: #EFE9AC;\n\t\t\t--noise1-secondary-note: #A7A578;\n\t\t\t--noise1-primary-note: #EFE9AC;\n\t\t\t--noise2-secondary-channel: #947A5F;\n\t\t\t--noise2-primary-channel: #FBCEA8;\n\t\t\t--noise2-secondary-note: #947A5F;\n\t\t\t--noise2-primary-note: #FBCEA8;\n\t\t\t--noise3-secondary-channel: #A3635D;\n\t\t\t--noise3-primary-channel: #F4A5AB;\n\t\t\t--noise3-secondary-note: #A3635D;\n\t\t\t--noise3-primary-note: #F4A5AB;\n\t\t\t--noise4-secondary-channel: #724D60;\n\t\t\t--noise4-primary-channel: #CD90B6;\n\t\t\t--noise4-secondary-note: #724D60;\n\t\t\t--noise4-primary-note: #CD90B6;\n\t\t\t--noise5-secondary-channel: #503F5C;\n\t\t\t--noise5-primary-channel: #7C6A9E;\n\t\t\t--noise5-secondary-note: #503F5C;\n\t\t\t--noise5-primary-note: #7C6A9E;\n\t\t\t--mod1-secondary-channel: #371883;\n\t\t\t--mod1-primary-channel: #6416C6;\n\t\t\t--mod1-secondary-note: #1F0A52;\n\t\t\t--mod1-primary-note: #6416C6;\n\t\t\t--mod2-secondary-channel: #690645;\n\t\t\t--mod2-primary-channel: #E52FA2;\n\t\t\t--mod2-secondary-note: #690645;\n\t\t\t--mod2-primary-note: #E52FA2;\n\t\t\t--mod3-secondary-channel: #943618;\n\t\t\t--mod3-primary-channel: #eb5b2c;\n\t\t\t--mod3-secondary-note: #943618;\n\t\t\t--mod3-primary-note: #eb5b2c;\n\t\t\t--mod4-secondary-channel: #928409;\n\t\t\t--mod4-primary-channel: #ecd50e;\n\t\t\t--mod4-secondary-note: #928409;\n\t\t\t--mod4-primary-note: #ecd50e;\n\t\t\t--mod-label-primary: #282828;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}`,\n    \"toxic\": `\n\t\t:root {\n\t\t\t--page-margin: #010003;\n\t\t\t--editor-background: #010003;\n\t\t\t--text-selection: rgb(147 195 0);\n\t\t\t--box-selection-fill: rgb(145 174 73 / 49%);\n\t\t\t--loop-accent: #BCDE2C;\n\t\t\t--link-accent: #edff9f;\n\t\t\t--ui-widget-background: #261e2e;\n\t\t\t--ui-widget-focus: #322042;\n\t\t\t--pitch-background: #141c15;\n\t\t\t--tonic: #282c21;\n\t\t\t--fifth-note: #18221a;\n\t\t\t--white-piano-key: #e3e3e3;\n\t\t\t--black-piano-key: #2d2d2d;\n\t\t\t--track-editor-bg-pitch: #38293e;\n\t\t\t--track-editor-bg-pitch-dim: #251c29;\n\t\t\t--track-editor-bg-noise: #2c304c;\n\t\t\t--track-editor-bg-noise-dim: #191b2b;\n\t\t\t--track-editor-bg-mod: #311b32;\n\t\t\t--track-editor-bg-mod-dim: #1d101e;\n\t\t\t--multiplicative-mod-slider: #977da9;\n\t\t\t--overwriting-mod-slider: #798FA7;\n\t\t\t--indicator-primary: #aae9ff;\n\t\t\t--indicator-secondary: #253e46;\n\t\t\t--select2-opt-group: #110d15;\n\t\t\t--input-box-outline: #110d15;\n\t\t\t--mute-button-normal: #8f5ad1;\n\t\t\t--mute-button-mod: #482574;\n\t\t\t--pitch1-secondary-channel: #6b7f19;\n\t\t\t--pitch1-primary-channel: #BCDE2C;\n\t\t\t--pitch1-secondary-note: #6b7f19;\n\t\t\t--pitch1-primary-note: #BCDE2C;\n\t\t\t--pitch2-secondary-channel: #497a31;\n\t\t\t--pitch2-primary-channel: #7BD152;\n\t\t\t--pitch2-secondary-note: #497a31;\n\t\t\t--pitch2-primary-note: #7BD152;\n\t\t\t--pitch3-secondary-channel: #286b40;\n\t\t\t--pitch3-primary-channel: #45BE71;\n\t\t\t--pitch3-secondary-note: #286b40;\n\t\t\t--pitch3-primary-note: #45BE71;\n\t\t\t--pitch4-secondary-channel: #125140;\n\t\t\t--pitch4-primary-channel: #25A884;\n\t\t\t--pitch4-secondary-note: #125140;\n\t\t\t--pitch4-primary-note: #25A884;\n\t\t\t--pitch5-secondary-channel: #114c49;\n\t\t\t--pitch5-primary-channel: #21908C;\n\t\t\t--pitch5-secondary-note: #114c49;\n\t\t\t--pitch5-primary-note: #21908C;\n\t\t\t--pitch6-secondary-channel: #143843;\n\t\t\t--pitch6-primary-channel: #2B788E;\n\t\t\t--pitch6-secondary-note: #143843;\n\t\t\t--pitch6-primary-note: #2B788E;\n\t\t\t--pitch7-secondary-channel: #1d354e;\n\t\t\t--pitch7-primary-channel: #355F8D;\n\t\t\t--pitch7-secondary-note: #1a2f46;\n\t\t\t--pitch7-primary-note: #355F8D;\n\t\t\t--pitch8-secondary-channel: #2c2e5a;\n\t\t\t--pitch8-primary-channel: #414486;\n\t\t\t--pitch8-secondary-note: #1e1f3d;\n\t\t\t--pitch8-primary-note: #414486;\n\t\t\t--pitch9-secondary-channel: #3c1f5e;\n\t\t\t--pitch9-primary-channel: #5e3b89;\n\t\t\t--pitch9-secondary-note: #25133b;\n\t\t\t--pitch9-primary-note: #5e3b89;\n\t\t\t--pitch10-secondary-channel: #510264;\n\t\t\t--pitch10-primary-channel: #720d8a;\n\t\t\t--pitch10-secondary-note: #440154;\n\t\t\t--pitch10-primary-note: #720d8a;\n\t\t\t--noise1-secondary-channel: #BCDE2C;\n\t\t\t--noise1-primary-channel: #edff9f;\n\t\t\t--noise1-secondary-note: #BCDE2C;\n\t\t\t--noise1-primary-note: #edff9f;\n\t\t\t--noise2-secondary-channel: #45BE71;\n\t\t\t--noise2-primary-channel: #89ffb4;\n\t\t\t--noise2-secondary-note: #45BE71;\n\t\t\t--noise2-primary-note: #89ffb4;\n\t\t\t--noise3-secondary-channel: #21908C;\n\t\t\t--noise3-primary-channel: #72fffa;\n\t\t\t--noise3-secondary-note: #21908C;\n\t\t\t--noise3-primary-note: #72fffa;\n\t\t\t--noise4-secondary-channel: #355F8D;\n\t\t\t--noise4-primary-channel: #7cb6f5;\n\t\t\t--noise4-secondary-note: #355F8D;\n\t\t\t--noise4-primary-note: #7cb6f5;\n\t\t\t--noise5-secondary-channel: #482574;\n\t\t\t--noise5-primary-channel: #8f5ad1;\n\t\t\t--noise5-secondary-note: #48257A;\n\t\t\t--noise5-primary-note: #8f5ad1;\n\t\t\t--mod1-secondary-channel: #815a16;\n\t\t\t--mod1-primary-channel: #F5AB29;\n\t\t\t--mod1-secondary-note: #815a16;\n\t\t\t--mod1-primary-note: #F5AB29;\n\t\t\t--mod2-secondary-channel: #4d341a;\n\t\t\t--mod2-primary-channel: #C98540;\n\t\t\t--mod2-secondary-note: #4d341a;\n\t\t\t--mod2-primary-note: #C98540;\n\t\t\t--mod3-secondary-channel: #643734;\n\t\t\t--mod3-primary-channel: #A75D58;\n\t\t\t--mod3-secondary-note: #643734;\n\t\t\t--mod3-primary-note: #A75D58;\n\t\t\t--mod4-secondary-channel: #461430;\n\t\t\t--mod4-primary-channel: #812359;\n\t\t\t--mod4-secondary-note: #3f112b;\n\t\t\t--mod4-primary-note: #812359;\n\t\t\t--mod-label-primary: #282828;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}`,\n    \"violet verdant\": `\n\t\t:root {\n\t\t\t--page-margin: #0e031a;\n\t\t\t--editor-background: #0e031a;\n\t\t\t--hover-preview: #e5ffea;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: #f0e0ff;\n\t\t\t--secondary-text: #706087;\n\t\t\t--box-selection-fill: #225835;\n\t\t\t--loop-accent: #8f00fb;\n\t\t\t--link-accent: #82dd5d;\n\t\t\t--ui-widget-background: #303c66;\n\t\t\t--ui-widget-focus: #62559b;\n\t\t\t--pitch-background: #293b52;\n\t\t\t--tonic: #5b46ad;\n\t\t\t--fifth-note: #42604d;\n\t\t\t--white-piano-key: #f6e8ff;\n\t\t\t--black-piano-key: #5a4972;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #392a46;\n\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t--track-editor-bg-noise: #403150;\n\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t--track-editor-bg-mod: #253c25;\n\t\t\t--track-editor-bg-mod-dim: #0c1811;\n\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t--indicator-primary: #9c64f7;\n\t\t\t--indicator-secondary: #393e4f;\n\t\t\t--select2-opt-group: #5d576f;\n\t\t\t--input-box-outline: #403150;\n\t\t\t--mute-button-normal: #82dd5d;\n\t\t\t--mute-button-mod: #945de5;\n\t\t\t--mod-label-primary: #312840;\n\t\t\t--mod-label-secondary-text: rgb(88 70 104);\n\t\t\t--mod-label-primary-text: #82dd5d;\n\t\t\t--pitch-secondary-channel-hue: 64;\n\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t--pitch-secondary-channel-sat: 63.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 64;\n\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t--pitch-primary-channel-sat: 90;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 32;\n\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t--pitch-secondary-note-sat: 87.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 64;\n\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 192;\n\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t--noise-secondary-channel-sat: 45;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 32;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 192;\n\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 43.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 160;\n\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 45;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 192;\n\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 132;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 132;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 100;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 132;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 96;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 85;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #91879f;\n\t\t\t--disabled-note-secondary: #6a677a;\n\t\t}`,\n    \"portal\": `\n\t\t:root {\n\t\t\t--page-margin: #04081a;\n\t\t\t--editor-background: #04081a;\n\t\t\t--box-selection-fill: rgb(0 72 181);\n\t\t\t--loop-accent: #44d4ff;\n\t\t\t--link-accent: #ffa500;\n\t\t\t--ui-widget-background: #212c4a;\n\t\t\t--ui-widget-focus: #121f42;\n\t\t\t--pitch-background: #1b263e;\n\t\t\t--tonic: #995d00;\n\t\t\t--fifth-note: #0898a1;\n\t\t\t--white-piano-key: #ffffff;\n\t\t\t--black-piano-key: #516d7a;\n\t\t\t--track-editor-bg-pitch: #213352;\n\t\t\t--track-editor-bg-pitch-dim: #152032;\n\t\t\t--track-editor-bg-noise: #403524;\n\t\t\t--track-editor-bg-noise-dim: #2a1f0e;\n\t\t\t--indicator-primary: #5490ff;\n\t\t\t--mute-button-normal: #3372ff;\n\t\t\t--mute-button-mod: #dd872f;\n\t\t\t--pitch1-primary-channel: #77f7ff;\n\t\t\t--pitch2-secondary-channel: #0083a1;\n\t\t\t--pitch2-primary-channel: #35d9ff;\n\t\t\t--pitch2-secondary-note: #0083a1;\n\t\t\t--pitch2-primary-note: #a4eeff;\n\t\t\t--pitch3-secondary-channel: #0074c7;\n\t\t\t--pitch3-primary-channel: #3caeff;\n\t\t\t--pitch3-secondary-note: #00477a;\n\t\t\t--pitch3-primary-note: #aadcff;\n\t\t\t--pitch4-secondary-channel: #0039a1;\n\t\t\t--pitch4-primary-channel: #2673ff;\n\t\t\t--pitch4-secondary-note: #001f56;\n\t\t\t--pitch4-primary-note: #9bbeff;\n\t\t\t--pitch5-secondary-channel: #31148b;\n\t\t\t--pitch5-primary-channel: #7042ff;\n\t\t\t--pitch5-secondary-note: #190656;\n\t\t\t--pitch5-primary-note: #b79fff;\n\t\t\t--pitch6-secondary-channel: #979934;\n\t\t\t--pitch6-primary-channel: #fbff2f;\n\t\t\t--pitch6-secondary-note: #5d5e0a;\n\t\t\t--pitch6-primary-note: #fdff9a;\n\t\t\t--pitch7-secondary-channel: #b78f00;\n\t\t\t--pitch7-primary-channel: #ffd747;\n\t\t\t--pitch7-secondary-note: #5e3d00;\n\t\t\t--pitch7-primary-note: #ffe381;\n\t\t\t--pitch8-secondary-channel: #9d6500;\n\t\t\t--pitch8-primary-channel: #ffa400;\n\t\t\t--pitch8-secondary-note: #583900;\n\t\t\t--pitch8-primary-note: #ffd07c;\n\t\t\t--pitch9-secondary-channel: #744203;\n\t\t\t--pitch9-primary-channel: #ff8e00;\n\t\t\t--pitch9-secondary-note: #502d00;\n\t\t\t--pitch9-primary-note: #ffcb89;\n\t\t\t--pitch10-secondary-channel: #a32d00;\n\t\t\t--pitch10-primary-channel: #ff885b;\n\t\t\t--pitch10-secondary-note: #521700;\n\t\t\t--pitch10-primary-note: #ffb397;\n\t\t\t--noise1-secondary-channel: #6e2210;\n\t\t\t--noise1-primary-channel: #ff4600;\n\t\t\t--noise1-secondary-note: #4c1a08;\n\t\t\t--noise1-primary-note: #ffc9b4;\n\t\t\t--noise2-secondary-channel: #6a3110;\n\t\t\t--noise2-primary-channel: #ff782a;\n\t\t\t--noise2-secondary-note: #4c1f05;\n\t\t\t--noise2-primary-note: #ffb488;\n\t\t\t--noise3-secondary-channel: #72460e;\n\t\t\t--noise3-primary-channel: #d9871f;\n\t\t\t--noise3-secondary-note: #442905;\n\t\t\t--noise3-primary-note: #ffdcae;\n\t\t\t--noise4-secondary-channel: #837a0f;\n\t\t\t--noise4-primary-channel: #f7ea55;\n\t\t\t--noise4-secondary-note: #605906;\n\t\t\t--noise4-primary-note: #fff9ab;\n\t\t\t--noise5-secondary-channel: #8c8f00;\n\t\t\t--noise5-primary-channel: #fdff90;\n\t\t\t--noise5-secondary-note: #606200;\n\t\t\t--noise5-primary-note: #feffbc;\n\t\t\t--mod1-secondary-channel: #561b97;\n\t\t\t--mod1-primary-channel: #aa66f5;\n\t\t\t--mod1-secondary-note: #30075c;\n\t\t\t--mod1-primary-note: #cd9fff;\n\t\t\t--mod2-secondary-channel: #5116df;\n\t\t\t--mod2-primary-channel: #6b2dff;\n\t\t\t--mod2-secondary-note: #36138b;\n\t\t\t--mod2-primary-note: #bea3ff;\n\t\t\t--mod3-secondary-channel: #2535a1;\n\t\t\t--mod3-primary-channel: #3f57ff;\n\t\t\t--mod3-secondary-note: #0e185c;\n\t\t\t--mod3-primary-note: #8494ff;\n\t\t\t--mod4-secondary-channel: #1b5883;\n\t\t\t--mod4-primary-channel: #5eb7f5;\n\t\t\t--mod4-secondary-note: #072f4a;\n\t\t\t--mod4-primary-note: #63beff;\n\t\t\t--mod-label-primary: #24293a;\n\t\t\t--mod-label-secondary-text: #454d4e;\n\t\t\t--mod-label-primary-text: #7bd4ff;\n\t\t\t--disabled-note-primary: #072f4a;\n\t\t\t--disabled-note-secondary: #6585a7;\n\t\t}`,\n    \"fusion\": `:root {\n\t\t\t--page-margin: #0c0306;\n\t\t\t--editor-background: #0c0306;\n\t\t\t--primary-text: #26d9cd;\n\t\t\t--secondary-text: #ff6666;\n\t\t\t--inverted-text: white;\n\t\t\t--text-selection: #ffffff;\n\t\t\t--box-selection-fill: #ff00004d;\n\t\t\t--loop-accent: #ff6666;\n\t\t\t--link-accent: white;\n\t\t\t--ui-widget-background: #232323;\n\t\t\t--ui-widget-focus: #303030;\n\t\t\t--pitch-background: hsl(61deg 100% 70% / 25%);\n\t\t\t--tonic: #66a3ff40;\n\t\t\t--fifth-note: #ff666640;\n\t\t\t--white-piano-key: #cdcdcd;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--track-editor-bg-pitch: #404040bf;\n\t\t\t--track-editor-bg-pitch-dim: #151515;\n\t\t\t--track-editor-bg-noise: #404040bf;\n\t\t\t--track-editor-bg-noise-dim: #151515;\n\t\t\t--track-editor-bg-mod: #404040bf;\n\t\t\t--track-editor-bg-mod-dim: #151515;\n\t\t\t--multiplicative-mod-slider: #ef7692;\n\t\t\t--overwriting-mod-slider: #f43e69;\n\t\t\t--indicator-primary: #26d9cd;\n\t\t\t--indicator-secondary: hsl(176deg 70% 25%);\n\t\t\t--select2-opt-group: #232323;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #26d9cd;\n\t\t\t--mute-button-mod: hsl(346deg 70% 50%);\n\t\t\t--pitch1-secondary-channel: #bf4040;\n\t\t\t--pitch1-primary-channel: #ff6666;\n\t\t\t--pitch1-secondary-note: #bf4040;\n\t\t\t--pitch1-primary-note: #ff6666;\n\t\t\t--pitch2-secondary-channel: #bf5b40;\n\t\t\t--pitch2-primary-channel: #ff8766;\n\t\t\t--pitch2-secondary-note: #bf5b40;\n\t\t\t--pitch2-primary-note: #ff8766;\n\t\t\t--pitch3-secondary-channel: #bf7940;\n\t\t\t--pitch3-primary-channel: #ffab66;\n\t\t\t--pitch3-secondary-note: #bf7940;\n\t\t\t--pitch3-primary-note: #ffab66;\n\t\t\t--pitch4-secondary-channel: #bf9b40;\n\t\t\t--pitch4-primary-channel: #ffd466;\n\t\t\t--pitch4-secondary-note: #bf9b40;\n\t\t\t--pitch4-primary-note: #ffd466;\n\t\t\t--pitch5-secondary-channel: #bdbf40;\n\t\t\t--pitch5-primary-channel: #fcff66;\n\t\t\t--pitch5-secondary-note: #bdbf40;\n\t\t\t--pitch5-primary-note: #fcff66;\n\t\t\t--pitch6-secondary-channel: #9dbf40;\n\t\t\t--pitch6-primary-channel: #d6ff66;\n\t\t\t--pitch6-secondary-note: #9dbf40;\n\t\t\t--pitch6-primary-note: #d6ff66;\n\t\t\t--pitch7-secondary-channel: #9dbf40;\n\t\t\t--pitch7-primary-channel: #fcff66;\n\t\t\t--pitch7-secondary-note: #9dbf40;\n\t\t\t--pitch7-primary-note: #fcff66;\n\t\t\t--pitch8-secondary-channel: #bf9b40;\n\t\t\t--pitch8-primary-channel: #ffd466;\n\t\t\t--pitch8-secondary-note: #bf9b40;\n\t\t\t--pitch8-primary-note: #ffd466;\n\t\t\t--pitch9-secondary-channel: #bf5b40;\n\t\t\t--pitch9-primary-channel: #ffab66;\n\t\t\t--pitch9-secondary-note: #bf5b40;\n\t\t\t--pitch9-primary-note: #ffab66;\n\t\t\t--pitch10-secondary-channel: #d15a1f;\n\t\t\t--pitch10-primary-channel: #ff8766;\n\t\t\t--pitch10-secondary-note: #d15a1f;\n\t\t\t--pitch10-primary-note: #ff8766;\n\t\t\t--noise1-secondary-channel: #4073bf;\n\t\t\t--noise1-primary-channel: #66a3ff;\n\t\t\t--noise1-secondary-note: #4073bf;\n\t\t\t--noise1-primary-note: #66a3ff;\n\t\t\t--noise2-secondary-channel: #405dbf;\n\t\t\t--noise2-primary-channel: #668aff;\n\t\t\t--noise2-secondary-note: #405dbf;\n\t\t\t--noise2-primary-note: #668aff;\n\t\t\t--noise3-secondary-channel: #4f40bf;\n\t\t\t--noise3-primary-channel: #7866ff;\n\t\t\t--noise3-secondary-note: #4f40bf;\n\t\t\t--noise3-primary-note: #7866ff;\n\t\t\t--noise4-secondary-channel: #8840bf;\n\t\t\t--noise4-primary-channel: #bd66ff;\n\t\t\t--noise4-secondary-note: #8840bf;\n\t\t\t--noise4-primary-note: #bd66ff;\n\t\t\t--noise5-secondary-channel: #bf40b5;\n\t\t\t--noise5-primary-channel: #ff66f2;\n\t\t\t--noise5-secondary-note: #bf40b5;\n\t\t\t--noise5-primary-note: #ff66f2;\n\t\t\t--mod1-secondary-channel: #cc6666;\n\t\t\t--mod1-primary-channel: #ff9999;\n\t\t\t--mod1-secondary-note: #cc6666;\n\t\t\t--mod1-primary-note: #ff9999;\n\t\t\t--mod2-secondary-channel: #cc7766;\n\t\t\t--mod2-primary-channel: #ffaa99;\n\t\t\t--mod2-secondary-note: #bf5540;\n\t\t\t--mod2-primary-note: #ffaa99;\n\t\t\t--mod3-secondary-channel: #cc8866;\n\t\t\t--mod3-primary-channel: #ffbb99;\n\t\t\t--mod3-secondary-note: #cc8866;\n\t\t\t--mod3-primary-note: #ffbb99;\n\t\t\t--mod4-secondary-channel: #cc9966;\n\t\t\t--mod4-primary-channel: #ffcc99;\n\t\t\t--mod4-secondary-note: #cc9966;\n\t\t\t--mod4-primary-note: #ffcc99;\n\t\t\t--disabled-note-primary: #696969;\n\t\t\t--disabled-note-secondary: #232323;\n\t\t}`,\n    \"inverse\": `:root {\n\t\t\t--page-margin: #c4c8e3;\n\t\t\t--editor-background: #c4c8e3;\n\t\t\t--hover-preview: #000000;\n\t\t\t--playhead: #243953;\n\t\t\t--primary-text: black;\n\t\t\t--secondary-text: #855b95;\n\t\t\t--text-selection: rgb(132 125 255);\n\t\t\t--box-selection-fill: rgb(174 109 73 / 65%);\n\t\t\t--loop-accent: #EC897D;\n\t\t\t--link-accent: #4e00c8;\n\t\t\t--ui-widget-background: #e7e7ff;\n\t\t\t--ui-widget-focus: #d0d3e9;\n\t\t\t--pitch-background: #ffffff;\n\t\t\t--tonic: #bbbbbb;\n\t\t\t--fifth-note: #dcdcdc;\n\t\t\t--white-piano-key: #ffffff;\n\t\t\t--black-piano-key: #615f66;\n\t\t\t--track-editor-bg-pitch: #e9ebff;\n\t\t\t--track-editor-bg-pitch-dim: #e9ebff;\n\t\t\t--track-editor-bg-noise: #fdf2fe;\n\t\t\t--track-editor-bg-noise-dim: #fdf2fe;\n\t\t\t--track-editor-bg-mod: #dbdefe;\n\t\t\t--track-editor-bg-mod-dim: #dbdefe;\n\t\t\t--multiplicative-mod-slider: #6900b3;\n\t\t\t--overwriting-mod-slider: #004b9d;\n\t\t\t--indicator-primary: #ff633d;\n\t\t\t--indicator-secondary: #933822;\n\t\t\t--select2-opt-group: #e7e7ff;\n\t\t\t--input-box-outline: #e7e7ff;\n\t\t\t--mute-button-normal: #0072ef;\n\t\t\t--mute-button-mod: #002e67;\n\t\t\t--pitch1-secondary-channel: #b77d6e;\n\t\t\t--pitch1-primary-channel: #ff9d85;\n\t\t\t--pitch1-secondary-note: #b77d6e;\n\t\t\t--pitch1-primary-note: #ff9d85;\n\t\t\t--pitch2-secondary-channel: #be8821;\n\t\t\t--pitch2-primary-channel: #FFAF12;\n\t\t\t--pitch2-secondary-note: #be8821;\n\t\t\t--pitch2-primary-note: #FFAF12;\n\t\t\t--pitch3-secondary-channel: #3a62a4;\n\t\t\t--pitch3-primary-channel: #528ae6;\n\t\t\t--pitch3-secondary-note: #3a62a4;\n\t\t\t--pitch3-primary-note: #528ae6;\n\t\t\t--pitch4-secondary-channel: #3e8d78;\n\t\t\t--pitch4-primary-channel: #4EC5A7;\n\t\t\t--pitch4-secondary-note: #3e8d78;\n\t\t\t--pitch4-primary-note: #4EC5A7;\n\t\t\t--pitch5-secondary-channel: #84906d;\n\t\t\t--pitch5-primary-channel: #aabf84;\n\t\t\t--pitch5-secondary-note: #84906d;\n\t\t\t--pitch5-primary-note: #aabf84;\n\t\t\t--pitch6-secondary-channel: #bd6345;\n\t\t\t--pitch6-primary-channel: #e59a81;\n\t\t\t--pitch6-secondary-note: #bd6345;\n\t\t\t--pitch6-primary-note: #e59a81;\n\t\t\t--pitch7-secondary-channel: #aa592f;\n\t\t\t--pitch7-primary-channel: #FE813E;\n\t\t\t--pitch7-secondary-note: #aa592f;\n\t\t\t--pitch7-primary-note: #FE813E;\n\t\t\t--pitch8-secondary-channel: #b2a171;\n\t\t\t--pitch8-primary-channel: #ffd76d;\n\t\t\t--pitch8-secondary-note: #b2a171;\n\t\t\t--pitch8-primary-note: #ffd76d;\n\t\t\t--pitch9-secondary-channel: #4f6177;\n\t\t\t--pitch9-primary-channel: #798FA7;\n\t\t\t--pitch9-secondary-note: #4f6177;\n\t\t\t--pitch9-primary-note: #798FA7;\n\t\t\t--pitch10-secondary-channel: #165162;\n\t\t\t--pitch10-primary-channel: #107895;\n\t\t\t--pitch10-secondary-note: #165162;\n\t\t\t--pitch10-primary-note: #107895;\n\t\t\t--noise1-secondary-channel: #71617C;\n\t\t\t--noise1-primary-channel: #977da9;\n\t\t\t--noise1-secondary-note: #71617C;\n\t\t\t--noise1-primary-note: #977da9;\n\t\t\t--noise2-secondary-channel: #4a4c5b;\n\t\t\t--noise2-primary-channel: #707591;\n\t\t\t--noise2-secondary-note: #4a4c5b;\n\t\t\t--noise2-primary-note: #707591;\n\t\t\t--noise3-secondary-channel: #817c7b;\n\t\t\t--noise3-primary-channel: #A19D9C;\n\t\t\t--noise3-secondary-note: #817c7b;\n\t\t\t--noise3-primary-note: #A19D9C;\n\t\t\t--noise4-secondary-channel: #ab847b;\n\t\t\t--noise4-primary-channel: #EAAC9D;\n\t\t\t--noise4-secondary-note: #ab847b;\n\t\t\t--noise4-primary-note: #EAAC9D;\n\t\t\t--noise5-secondary-channel: #B49D74;\n\t\t\t--noise5-primary-channel: #dec69b;\n\t\t\t--noise5-secondary-note: #B49D74;\n\t\t\t--noise5-primary-note: #dec69b;\n\t\t\t--mod1-secondary-channel: #722124;\n\t\t\t--mod1-primary-channel: #D13A41;\n\t\t\t--mod1-secondary-note: #722124;\n\t\t\t--mod1-primary-note: #D13A41;\n\t\t\t--mod2-secondary-channel: #213657;\n\t\t\t--mod2-primary-channel: #34558B;\n\t\t\t--mod2-secondary-note: #213657;\n\t\t\t--mod2-primary-note: #34558B;\n\t\t\t--mod3-secondary-channel: #555D46;\n\t\t\t--mod3-primary-channel: #848f6d;\n\t\t\t--mod3-secondary-note: #555D46;\n\t\t\t--mod3-primary-note: #848f6d;\n\t\t\t--mod4-secondary-channel: #71617C;\n\t\t\t--mod4-primary-channel: #a68ab9;\n\t\t\t--mod4-secondary-note: #71617C;\n\t\t\t--mod4-primary-note: #a68ab9;\n\t\t\t--mod-label-primary: #e9e9e9;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--disabled-note-primary: #959595;\n\t\t\t--disabled-note-secondary: #6e6e6e;\n\t\t\t}`,\n    \"nebula\": `\n\t\t:root {\n\t\t\t--page-margin: #040410;\n\t\t\t--editor-background: #150e1f;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--secondary-text: #8C849A;\n\t\t\t--text-selection: rgba(141,79,201,0.99);\n\t\t\t--box-selection-fill: #311E44;\n\t\t\t--loop-accent: #CC688C;\n\t\t\t--link-accent: #817DC9;\n\t\t\t--ui-widget-background: #44394F;\n\t\t\t--ui-widget-focus: #7A6386;\n\t\t\t--pitch-background: #393e4f40;\n\t\t\t--tonic: #7D5C9EC0;\n\t\t\t--fifth-note: #ab77bd50;\n\t\t\t--white-piano-key: #EEEEEE;\n\t\t\t--black-piano-key: #5F5566;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #46374C;\n\t\t\t--track-editor-bg-pitch-dim: #1F1C2850;\n\t\t\t--track-editor-bg-noise: #3D353B;\n\t\t\t--track-editor-bg-noise-dim: #16131550;\n\t\t\t--track-editor-bg-mod: #623F4C;\n\t\t\t--track-editor-bg-mod-dim: #361A2450;\n\t\t\t--multiplicative-mod-slider: #9F6E6A;\n\t\t\t--overwriting-mod-slider: #A664B5;\n\t\t\t--indicator-primary: #CC6B8E;\n\t\t\t--indicator-secondary: #44394F;\n\t\t\t--select2-opt-group: #6A576F;\n\t\t\t--input-box-outline: #222;\n\t\t\t--mute-button-normal: #BF91DC;\n\t\t\t--mute-button-mod: #DC8C9A;\n\t\t\t--mod-label-primary: #3A2840;\n\t\t\t--mod-label-secondary-text: #62485E;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--pitch-secondary-channel-hue: -96;\n\t\t\t--pitch-secondary-channel-hue-scale: 4.2;\n\t\t\t--pitch-secondary-channel-sat: 50.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: -96;\n\t\t\t--pitch-primary-channel-hue-scale: 4.2;\n\t\t\t--pitch-primary-channel-sat: 70;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: -96;\n\t\t\t--pitch-secondary-note-hue-scale: 4.2;\n\t\t\t--pitch-secondary-note-sat: 70.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: -96;\n\t\t\t--pitch-primary-note-hue-scale: 4.2;\n\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 16;\n\t\t\t--noise-secondary-channel-hue-scale: -1.33;\n\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 16;\n\t\t\t--noise-primary-channel-hue-scale: -1.33;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 12;\n\t\t\t--noise-secondary-note-hue-scale: -1.33;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 12;\n\t\t\t--noise-primary-note-hue-scale: -1.33;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 12;\n\t\t\t--mod-secondary-channel-hue-scale: -.75;\n\t\t\t--mod-secondary-channel-sat: 50;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 12;\n\t\t\t--mod-primary-channel-hue-scale: -.75;\n\t\t\t--mod-primary-channel-sat: 70;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 12;\n\t\t\t--mod-secondary-note-hue-scale: -.75;\n\t\t\t--mod-secondary-note-sat: 75;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 12;\n\t\t\t--mod-primary-note-hue-scale: -.75;\n\t\t\t--mod-primary-note-sat: 85;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 85;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #aaa;\n\t\t}`,\n    \"roe light\": `\n\t\t:root {\n\t\t\t--page-margin: #fff5f5;\n\t\t\t--editor-background: #fff5f5;\n\t\t\t--hover-preview: #0e8bf1;\n\t\t\t--playhead: 000;\n\t\t\t--primary-text: #0e8bf1;\n\t\t\t--secondary-text: #f10e0e;\n\t\t\t--inverted-text: white;\n\t\t\t--text-selection: #ff4444fc;\n\t\t\t--box-selection-fill: #ff00004d;\n\t\t\t--loop-accent: #9a75ff;\n\t\t\t--link-accent: #ff7070;\n\t\t\t--ui-widget-background: #bdc9e5;\n\t\t\t--ui-widget-focus: #a3b7e5;\n\t\t\t--pitch-background: #d0c7db;\n\t\t\t--tonic: #bed3e4;\n\t\t\t--fifth-note: #e7c6c6;\n\t\t\t--white-piano-key: #cdcdcd;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--track-editor-bg-pitch: #e5e1ea;\n\t\t\t--track-editor-bg-pitch-dim: #cbc4d4;\n\t\t\t--track-editor-bg-noise: #e0ddee;\n\t\t\t--track-editor-bg-noise-dim: #c1bade;\n\t\t\t--track-editor-bg-mod: #d8e6f3;\n\t\t\t--track-editor-bg-mod-dim: #b1cce7;\n\t\t\t--multiplicative-mod-slider: #8097cb;\n\t\t\t--overwriting-mod-slider: #8097cb;\n\t\t\t--indicator-primary: #FF2A2A;\n\t\t\t--indicator-secondary: #92a6d3;\n\t\t\t--select2-opt-group: #b6c4e2;\n\t\t\t--input-box-outline: #bdc9e5;\n\t\t\t--mute-button-normal: #66baff;\n\t\t\t--mute-button-mod: #1a98ff;\n\t\t\t--pitch1-secondary-channel: #273c90;\n\t\t\t--pitch1-primary-channel: #476BFF;\n\t\t\t--pitch1-secondary-note: #273c90;\n\t\t\t--pitch1-primary-note: #476BFF;\n\t\t\t--pitch2-secondary-channel: #3a3898;\n\t\t\t--pitch2-primary-channel: #625FFB;\n\t\t\t--pitch2-secondary-note: #3a3898;\n\t\t\t--pitch2-primary-note: #625FFB;\n\t\t\t--pitch3-secondary-channel: #542780;\n\t\t\t--pitch3-primary-channel: #9C49EC;\n\t\t\t--pitch3-secondary-note: #542780;\n\t\t\t--pitch3-primary-note: #9C49EC;\n\t\t\t--pitch4-secondary-channel: #84225d;\n\t\t\t--pitch4-primary-channel: #fd3fb1;\n\t\t\t--pitch4-secondary-note: #84225d;\n\t\t\t--pitch4-primary-note: #fd3fb1;\n\t\t\t--pitch5-secondary-channel: #8d2323;\n\t\t\t--pitch5-primary-channel: #ff3f3f;\n\t\t\t--pitch5-secondary-note: #8d2323;\n\t\t\t--pitch5-primary-note: #ff3f3f;\n\t\t\t--pitch6-secondary-channel: #84225d;\n\t\t\t--pitch6-primary-channel: #fd3fb1;\n\t\t\t--pitch6-secondary-note: #84225d;\n\t\t\t--pitch6-primary-note: #fd3fb1;\n\t\t\t--pitch7-secondary-channel: #542780;\n\t\t\t--pitch7-primary-channel: #9C49EC;\n\t\t\t--pitch7-secondary-note: #542780;\n\t\t\t--pitch7-primary-note: #9C49EC;\n\t\t\t--pitch8-secondary-channel: #3a3898;\n\t\t\t--pitch8-primary-channel: #625FFB;\n\t\t\t--pitch8-secondary-note: #3a3898;\n\t\t\t--pitch8-primary-note: #625FFB;\n\t\t\t--pitch9-secondary-channel: #273c90;\n\t\t\t--pitch9-primary-channel: #476BFF;\n\t\t\t--pitch9-secondary-note: #273c90;\n\t\t\t--pitch9-primary-note: #476BFF;\n\t\t\t--pitch10-secondary-channel: #165a93;\n\t\t\t--pitch10-primary-channel: #299EFF;\n\t\t\t--pitch10-secondary-note: #165a93;\n\t\t\t--pitch10-primary-note: #299EFF;\n\t\t\t--noise1-secondary-channel: #336bdb;\n\t\t\t--noise1-primary-channel: #4281FF;\n\t\t\t--noise1-secondary-note: #336bdb;\n\t\t\t--noise1-primary-note: #4281FF;\n\t\t\t--noise2-secondary-channel: #5e38dc;\n\t\t\t--noise2-primary-channel: #7347FF;\n\t\t\t--noise2-secondary-note: #5e38dc;\n\t\t\t--noise2-primary-note: #7347FF;\n\t\t\t--noise3-secondary-channel: #7d3097;\n\t\t\t--noise3-primary-channel: #9F3CBF;\n\t\t\t--noise3-secondary-note: #7d3097;\n\t\t\t--noise3-primary-note: #9F3CBF;\n\t\t\t--noise4-secondary-channel: #ad2559;\n\t\t\t--noise4-primary-channel: #D3326F;\n\t\t\t--noise4-secondary-note: #ad2559;\n\t\t\t--noise4-primary-note: #D3326F;\n\t\t\t--noise5-secondary-channel: #d02525;\n\t\t\t--noise5-primary-channel: #FF2A2A;\n\t\t\t--noise5-secondary-note: #d02525;\n\t\t\t--noise5-primary-note: #FF2A2A;\n\t\t\t--mod1-secondary-channel: #35415a;\n\t\t\t--mod1-primary-channel: #47587a;\n\t\t\t--mod1-secondary-note: #35415a;\n\t\t\t--mod1-primary-note: #47587a;\n\t\t\t--mod2-secondary-channel: #5a5374;\n\t\t\t--mod2-primary-channel: #716791;\n\t\t\t--mod2-secondary-note: #5a5374;\n\t\t\t--mod2-primary-note: #716791;\n\t\t\t--mod3-secondary-channel: #53385c;\n\t\t\t--mod3-primary-channel: #6f4c7b;\n\t\t\t--mod3-secondary-note: #53385c;\n\t\t\t--mod3-primary-note: #6f4c7b;\n\t\t\t--mod4-secondary-channel: #7e4e60;\n\t\t\t--mod4-primary-channel: #9e6279;\n\t\t\t--mod4-secondary-note: #7e4e60;\n\t\t\t--mod4-primary-note: #9e6279;\n\t\t\t--mod-label-primary: #d0c7db;\n\t\t\t--mod-label-secondary-text: #cb3434;\n\t\t\t--disabled-note-primary: #616161;\n\t\t\t--disabled-note-secondary: #474747;\n\t\t}\n\t\t.promptContainerBG::before {\n\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\n\t\t}`,\n    \"energized\": `\n\t\t:root {\n\t\t\t--page-margin: #000a08;\n\t\t\t--editor-background: #000a08;\n\t\t\t--hover-preview: #ffffcc;\n\t\t\t--playhead: #ccfff5;\n\t\t\t--secondary-text: #d9d98c;\n\t\t\t--text-selection: #ffff6659;\n\t\t\t--box-selection-fill: #ffffff33;\n\t\t\t--loop-accent: #ffff00;\n\t\t\t--link-accent: #00ffcc;\n\t\t\t--ui-widget-background: #141f1d;\n\t\t\t--ui-widget-focus: #24423d;\n\t\t\t--pitch-background: #001410;\n\t\t\t--tonic: #00241d;\n\t\t\t--fifth-note: #ffff6633;\n\t\t\t--white-piano-key: #66998f;\n\t\t\t--black-piano-key: #141f1d;\n\t\t\t--track-editor-bg-pitch: #66998f40;\n\t\t\t--track-editor-bg-pitch-dim: #293d3940;\n\t\t\t--track-editor-bg-noise: #66998f40;\n\t\t\t--track-editor-bg-noise-dim: #293d3940;\n\t\t\t--track-editor-bg-mod: #99996640;\n\t\t\t--track-editor-bg-mod-dim: #3d3d2940;\n\t\t\t--multiplicative-mod-slider: #ffff00;\n\t\t\t--overwriting-mod-slider: #00ffcc;\n\t\t\t--indicator-primary: #ffff00;\n\t\t\t--indicator-secondary: #141f1d;\n\t\t\t--select2-opt-group: #1b312e;\n\t\t\t--input-box-outline: #141f1d;\n\t\t\t--mute-button-normal: #00ffcc;\n\t\t\t--mute-button-mod: #00997a;\n\t\t\t--pitch1-secondary-channel: #bfbf40;\n\t\t\t--pitch1-primary-channel: #ffff64;\n\t\t\t--pitch1-secondary-note: #bfbf40;\n\t\t\t--pitch1-primary-note: #ffff64;\n\t\t\t--pitch2-secondary-channel: #a2bf40;\n\t\t\t--pitch2-primary-channel: #e0ff7d;\n\t\t\t--pitch2-secondary-note: #a2bf40;\n\t\t\t--pitch2-primary-note: #e0ff7d;\n\t\t\t--pitch3-secondary-channel: #75bf40;\n\t\t\t--pitch3-primary-channel: #c1ff96;\n\t\t\t--pitch3-secondary-note: #75bf40;\n\t\t\t--pitch3-primary-note: #c1ff96;\n\t\t\t--pitch4-secondary-channel: #40bf51;\n\t\t\t--pitch4-primary-channel: #a2ffaf;\n\t\t\t--pitch4-secondary-note: #40bf51;\n\t\t\t--pitch4-primary-note: #a2ffaf;\n\t\t\t--pitch5-secondary-channel: #40bf86;\n\t\t\t--pitch5-primary-channel: #83ffc8;\n\t\t\t--pitch5-secondary-note: #40bf86;\n\t\t\t--pitch5-primary-note: #83ffc8;\n\t\t\t--pitch6-secondary-channel: #40bfa6;\n\t\t\t--pitch6-primary-channel: #64ffe1;\n\t\t\t--pitch6-secondary-note: #40bfa6;\n\t\t\t--pitch6-primary-note: #64ffe1;\n\t\t\t--pitch7-secondary-channel: #40bf86;\n\t\t\t--pitch7-primary-channel: #83ffc8;\n\t\t\t--pitch7-secondary-note: #40bf86;\n\t\t\t--pitch7-primary-note: #83ffc8;\n\t\t\t--pitch8-secondary-channel: #40bf51;\n\t\t\t--pitch8-primary-channel: #a2ffaf;\n\t\t\t--pitch8-secondary-note: #40bf51;\n\t\t\t--pitch8-primary-note: #a2ffaf;\n\t\t\t--pitch9-secondary-channel: #75bf40;\n\t\t\t--pitch9-primary-channel: #c1ff96;\n\t\t\t--pitch9-secondary-note: #75bf40;\n\t\t\t--pitch9-primary-note: #c1ff96;\n\t\t\t--pitch10-secondary-channel: #a2bf40;\n\t\t\t--pitch10-primary-channel: #e0ff7d;\n\t\t\t--pitch10-secondary-note: #a2bf40;\n\t\t\t--pitch10-primary-note: #e0ff7d;\n\t\t\t--noise1-secondary-channel: #a6a659;\n\t\t\t--noise1-primary-channel: #ffffcc;\n\t\t\t--noise1-secondary-note: #a6a659;\n\t\t\t--noise1-primary-note: #ffffcc;\n\t\t\t--noise2-secondary-channel: #94a659;\n\t\t\t--noise2-primary-channel: #f3ffcc;\n\t\t\t--noise2-secondary-note: #94a659;\n\t\t\t--noise2-primary-note: #f3ffcc;\n\t\t\t--noise3-secondary-channel: #79a659;\n\t\t\t--noise3-primary-channel: #e1ffcc;\n\t\t\t--noise3-secondary-note: #79a659;\n\t\t\t--noise3-primary-note: #e1ffcc;\n\t\t\t--noise4-secondary-channel: #94a659;\n\t\t\t--noise4-primary-channel: #f3ffcc;\n\t\t\t--noise4-secondary-note: #94a659;\n\t\t\t--noise4-primary-note: #f3ffcc;\n\t\t\t--noise5-secondary-channel: #a6a659;\n\t\t\t--noise5-primary-channel: #ffffcc;\n\t\t\t--noise5-secondary-note: #a6a659;\n\t\t\t--noise5-primary-note: #ffffcc;\n\t\t\t--mod1-secondary-channel: #a3a329;\n\t\t\t--mod1-primary-channel: #ffff00;\n\t\t\t--mod1-secondary-note: #a3a329;\n\t\t\t--mod1-primary-note: #ffff00;\n\t\t\t--mod2-secondary-channel: #a38529;\n\t\t\t--mod2-primary-channel: #ffbf00;\n\t\t\t--mod2-secondary-note: #a38529;\n\t\t\t--mod2-primary-note: #ffbf00;\n\t\t\t--mod3-secondary-channel: #a36629;\n\t\t\t--mod3-primary-channel: #ff7f00;\n\t\t\t--mod3-secondary-note: #a36629;\n\t\t\t--mod3-primary-note: #ff7f00;\n\t\t\t--mod4-secondary-channel: #a38529;\n\t\t\t--mod4-primary-channel: #ffbf00;\n\t\t\t--mod4-secondary-note: #a38529;\n\t\t\t--mod4-primary-note: #ffbf00;\n\t\t\t--mod-label-primary: #141f1d;\n\t\t\t--mod-label-secondary-text: #d9d98c;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #808080;\n\t\t\t--disabled-note-secondary: #666666;\n\t\t}`,\n    \"neapolitan\": `:root {\n\t\t\t--page-margin: #120807;\n\t\t\t--editor-background: #120807;\n\t\t\t--hover-preview: #e79a82;\n\t\t\t--playhead: #e79a82;\n\t\t\t--primary-text: #decdbf;\n\t\t\t--secondary-text: #fa99bb;\n\t\t\t--text-selection: #990036;\n\t\t\t--loop-accent: #f6377a;\n\t\t\t--link-accent: #f6377a;\n\t\t\t--ui-widget-background: #24160f;\n\t\t\t--ui-widget-focus: #362217;\n\t\t\t--pitch-background: #1e1106;\n\t\t\t--tonic: #382414;\n\t\t\t--fifth-note: #41240c;\n\t\t\t--white-piano-key: #e1c5b7;\n\t\t\t--black-piano-key: #482c1e;\n\t\t\t--white-piano-key-text: black;\n\t\t\t--black-piano-key-text: white;\n\t\t\t--track-editor-bg-pitch: #4d2a19;\n\t\t\t--track-editor-bg-pitch-dim: #27150c;\n\t\t\t--track-editor-bg-noise: #4d2a19;\n\t\t\t--track-editor-bg-noise-dim: #27150c;\n\t\t\t--track-editor-bg-mod: #4d2a19;\n\t\t\t--track-editor-bg-mod-dim: #27150c;\n\t\t\t--multiplicative-mod-slider: #decdbf;\n\t\t\t--overwriting-mod-slider: #decdbf;\n\t\t\t--indicator-primary: #decdbf;\n\t\t\t--indicator-secondary: #362217;\n\t\t\t--select2-opt-group: #24160f;\n\t\t\t--input-box-outline: #24160f;\n\t\t\t--mute-button-normal: #ff66a1;\n\t\t\t--mute-button-mod: #e61968;\n\t\t\t--pitch1-secondary-channel: #680029;\n\t\t\t--pitch1-primary-channel: #cc0052;\n\t\t\t--pitch1-secondary-note: #660029;\n\t\t\t--pitch1-primary-note: #cc0052;\n\t\t\t--pitch2-secondary-channel: #7e1b43;\n\t\t\t--pitch2-primary-channel: #d32e71;\n\t\t\t--pitch2-secondary-note: #7e1b43;\n\t\t\t--pitch2-primary-note: #d32e71;\n\t\t\t--pitch3-secondary-channel: #aa275e;\n\t\t\t--pitch3-primary-channel: #da5d91;\n\t\t\t--pitch3-secondary-note: #aa275e;\n\t\t\t--pitch3-primary-note: #da5d91;\n\t\t\t--pitch4-secondary-channel: #cc3878;\n\t\t\t--pitch4-primary-channel: #e18bb0;\n\t\t\t--pitch4-secondary-note: #cc3878;\n\t\t\t--pitch4-primary-note: #e18bb0;\n\t\t\t--pitch5-secondary-channel: #d06c9b;\n\t\t\t--pitch5-primary-channel: #e9bad0;\n\t\t\t--pitch5-secondary-note: #d06c9b;\n\t\t\t--pitch5-primary-note: #e9bad0;\n\t\t\t--pitch6-secondary-channel: #c9acc5;\n\t\t\t--pitch6-primary-channel: #f0e8ef;\n\t\t\t--pitch6-secondary-note: #c9acc5;\n\t\t\t--pitch6-primary-note: #f0e8ef;\n\t\t\t--pitch7-secondary-channel: #d06c9b;\n\t\t\t--pitch7-primary-channel: #e9bad0;\n\t\t\t--pitch7-secondary-note: #d06c9b;\n\t\t\t--pitch7-primary-note: #e9bad0;\n\t\t\t--pitch8-secondary-channel: #cc3878;\n\t\t\t--pitch8-primary-channel: #e18bb0;\n\t\t\t--pitch8-secondary-note: #cc3878;\n\t\t\t--pitch8-primary-note: #e18bb0;\n\t\t\t--pitch9-secondary-channel: #aa275e;\n\t\t\t--pitch9-primary-channel: #da5d91;\n\t\t\t--pitch9-secondary-note: #aa275e;\n\t\t\t--pitch9-primary-note: #da5d91;\n\t\t\t--pitch10-secondary-channel: #7e1b43;\n\t\t\t--pitch10-primary-channel: #d32e71;\n\t\t\t--pitch10-secondary-note: #7e1b43;\n\t\t\t--pitch10-primary-note: #d32e71;\n\t\t\t--noise1-secondary-channel: #683a37;\n\t\t\t--noise1-primary-channel: #A85F5A;\n\t\t\t--noise1-secondary-note: #683a37;\n\t\t\t--noise1-primary-note: #A85F5A;\n\t\t\t--noise2-secondary-channel: #7c4a41;\n\t\t\t--noise2-primary-channel: #B47A70;\n\t\t\t--noise2-secondary-note: #7c4a41;\n\t\t\t--noise2-primary-note: #B47A70;\n\t\t\t--noise3-secondary-channel: #935f4d;\n\t\t\t--noise3-primary-channel: #c09587;\n\t\t\t--noise3-secondary-note: #935f4d;\n\t\t\t--noise3-primary-note: #C09587;\n\t\t\t--noise4-secondary-channel: #aa795a;\n\t\t\t--noise4-primary-channel: #cdb09d;\n\t\t\t--noise4-secondary-note: #aa795a;\n\t\t\t--noise4-primary-note: #CDAF9D;\n\t\t\t--noise5-secondary-channel: #bb987c;\n\t\t\t--noise5-primary-channel: #decdbf;\n\t\t\t--noise5-secondary-note: #bb987c;\n\t\t\t--noise5-primary-note: #decdbf;\n\t\t\t--mod1-secondary-channel: #6ca784;\n\t\t\t--mod1-primary-channel: #accdb9;\n\t\t\t--mod1-secondary-note: #6ca784;\n\t\t\t--mod1-primary-note: #accdb9;\n\t\t\t--mod2-secondary-channel: #7daa9f;\n\t\t\t--mod2-primary-channel: #bbd3cd;\n\t\t\t--mod2-secondary-note: #7daa9f;\n\t\t\t--mod2-primary-note: #bbd3cd;\n\t\t\t--mod3-secondary-channel: #70a3a9;\n\t\t\t--mod3-primary-channel: #afcccf;\n\t\t\t--mod3-secondary-note: #70a3a9;\n\t\t\t--mod3-primary-note: #afcccf;\n\t\t\t--mod4-secondary-channel: #5698b8;\n\t\t\t--mod4-primary-channel: #9ec3d6;\n\t\t\t--mod4-secondary-note: #5698b8;\n\t\t\t--mod4-primary-note: #9ec3d6;\n\t\t\t--mod-label-primary: #24160f;\n\t\t\t--mod-label-secondary-text: #E5AFC2;\n\t\t\t--mod-label-primary-text: #decdbf;\n\t\t\t--disabled-note-primary: #bababa;\n\t\t\t--disabled-note-secondary: #878787;\n\t\t}`,\n    \"poly\": `:root {\n\t\t\t--page-margin: #000;\n\t\t\t--editor-background: #000;\n\t\t\t--hover-preview: #808080;\n\t\t\t--playhead: #808080;\n\t\t\t--secondary-text: #cccccc;\n\t\t\t--text-selection: #696969;\n\t\t\t--box-selection-fill: #cccccc40;\n\t\t\t--loop-accent: #808080;\n\t\t\t--link-accent: white;\n\t\t\t--ui-widget-background: #232323;\n\t\t\t--ui-widget-focus: #303030;\n\t\t\t--pitch-background: #1a1a1a;\n\t\t\t--tonic: #262626;\n\t\t\t--fifth-note: #0d0d0d;\n\t\t\t--white-piano-key: #808080;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #262626;\n\t\t\t--track-editor-bg-pitch-dim: #1a1a1a;\n\t\t\t--track-editor-bg-noise: #262626;\n\t\t\t--track-editor-bg-noise-dim: #1a1a1a;\n\t\t\t--track-editor-bg-mod: #262626;\n\t\t\t--track-editor-bg-mod-dim: #1a1a1a;\n\t\t\t--multiplicative-mod-slider: #808080;\n\t\t\t--overwriting-mod-slider: #808080;\n\t\t\t--indicator-primary: #808080;\n\t\t\t--indicator-secondary: #333333;\n\t\t\t--select2-opt-group: #232323;\n\t\t\t--input-box-outline: #222;\n\t\t\t--mute-button-normal: #808080;\n\t\t\t--mute-button-mod: #808080;\n\t\t\t--mod-label-primary: #232323;\n\t\t\t--mod-label-secondary-text: #696969;\n\t\t\t--mod-label-primary-text: #cdcdcd;\n\t\t\t--pitch-secondary-channel-hue: 208;\n\t\t\t--pitch-secondary-channel-hue-scale: 10;\n\t\t\t--pitch-secondary-channel-sat: 100;\n\t\t\t--pitch-secondary-channel-sat-scale: 0;\n\t\t\t--pitch-secondary-channel-lum: 88;\n\t\t\t--pitch-secondary-channel-lum-scale: 0;\n\t\t\t--pitch-primary-channel-hue: 207;\n\t\t\t--pitch-primary-channel-hue-scale: 10;\n\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t--pitch-primary-channel-sat-scale: 0;\n\t\t\t--pitch-primary-channel-lum: 910;\n\t\t\t--pitch-primary-channel-lum-scale: 0;\n\t\t\t--pitch-secondary-note-hue: 208;\n\t\t\t--pitch-secondary-note-hue-scale: 10;\n\t\t\t--pitch-secondary-note-sat: 100;\n\t\t\t--pitch-secondary-note-sat-scale: 0;\n\t\t\t--pitch-secondary-note-lum: 88;\n\t\t\t--pitch-secondary-note-lum-scale: 0;\n\t\t\t--pitch-primary-note-hue: 208;\n\t\t\t--pitch-primary-note-hue-scale: 10;\n\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t--pitch-primary-note-sat-scale: 0;\n\t\t\t--pitch-primary-note-lum: 910;\n\t\t\t--pitch-primary-note-lum-scale: 0;\n\t\t\t--noise-secondary-channel-hue: 328;\n\t\t\t--noise-secondary-channel-hue-scale: 10;\n\t\t\t--noise-secondary-channel-sat: 100;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 88;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 327;\n\t\t\t--noise-primary-channel-hue-scale: 10;\n\t\t\t--noise-primary-channel-sat: 100;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 910;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 328;\n\t\t\t--noise-secondary-note-hue-scale: 10;\n\t\t\t--noise-secondary-note-sat: 100;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 88;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 327;\n\t\t\t--noise-primary-note-hue-scale: 10;\n\t\t\t--noise-primary-note-sat: 100;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 910;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 87;\n\t\t\t--mod-secondary-channel-hue-scale: 10;\n\t\t\t--mod-secondary-channel-sat: 100;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 88;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 88;\n\t\t\t--mod-primary-channel-hue-scale: 10;\n\t\t\t--mod-primary-channel-sat: 100;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 910;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 87;\n\t\t\t--mod-secondary-note-hue-scale: 10;\n\t\t\t--mod-secondary-note-sat: 100;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 88;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 88;\n\t\t\t--mod-primary-note-hue-scale: 10;\n\t\t\t--mod-primary-note-sat: 100;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 910;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #c6c6c6;\n\t\t\t--disabled-note-secondary: #8c8c8c;\n\t\t}`,\n    \"greyscale\": `:root {\n\t\t\t--page-margin: #000;\n\t\t\t--editor-background: #000;\n\t\t\t--hover-preview: #808080;\n\t\t\t--playhead: #808080;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #cccccc;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: #696969;\n\t\t\t--box-selection-fill: #cccccc40;\n\t\t\t--loop-accent: #808080;\n\t\t\t--link-accent: white;\n\t\t\t--ui-widget-background: #232323;\n\t\t\t--ui-widget-focus: #303030;\n\t\t\t--pitch-background: #1a1a1a;\n\t\t\t--tonic: #262626;\n\t\t\t--fifth-note: #0d0d0d;\n\t\t\t--white-piano-key: #808080;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #262626;\n\t\t\t--track-editor-bg-pitch-dim: #1a1a1a;\n\t\t\t--track-editor-bg-noise: #262626;\n\t\t\t--track-editor-bg-noise-dim: #1a1a1a;\n\t\t\t--track-editor-bg-mod: #262626;\n\t\t\t--track-editor-bg-mod-dim: #1a1a1a;\n\t\t\t--multiplicative-mod-slider: #808080;\n\t\t\t--overwriting-mod-slider: #808080;\n\t\t\t--indicator-primary: #808080;\n\t\t\t--indicator-secondary: #333333;\n\t\t\t--select2-opt-group: #232323;\n\t\t\t--input-box-outline: #222;\n\t\t\t--mute-button-normal: #808080;\n\t\t\t--mute-button-mod: #808080;\n\t\t\t--mod-label-primary: #232323;\n\t\t\t--mod-label-secondary-text: #696969;\n\t\t\t--mod-label-primary-text: #cdcdcd;\n\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t--pitch-secondary-channel-hue-scale: 25;\n\t\t\t--pitch-secondary-channel-sat: 10;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 70;\n\t\t\t--pitch-secondary-channel-lum-scale: 0;\n\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t--pitch-primary-channel-hue-scale: 25;\n\t\t\t--pitch-primary-channel-sat: 50;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 95;\n\t\t\t--pitch-primary-channel-lum-scale: 0;\n\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t--pitch-secondary-note-hue-scale: 25;\n\t\t\t--pitch-secondary-note-sat: 10;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 70;\n\t\t\t--pitch-secondary-note-lum-scale: 0;\n\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t--pitch-primary-note-hue-scale: 25;\n\t\t\t--pitch-primary-note-sat: 50;\n\t\t\t--pitch-primary-note-sat-scale: 0.1;\n\t\t\t--pitch-primary-note-lum: 95;\n\t\t\t--pitch-primary-note-lum-scale: 0;\n\t\t\t--noise-secondary-channel-hue: 125;\n\t\t\t--noise-secondary-channel-hue-scale: 50;\n\t\t\t--noise-secondary-channel-sat: 10;\n\t\t\t--noise-secondary-channel-sat-scale: 0.1;\n\t\t\t--noise-secondary-channel-lum: 70;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 125;\n\t\t\t--noise-primary-channel-hue-scale: 50;\n\t\t\t--noise-primary-channel-sat: 50;\n\t\t\t--noise-primary-channel-sat-scale: 0.1;\n\t\t\t--noise-primary-channel-lum: 95;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 125;\n\t\t\t--noise-secondary-note-hue-scale: 50;\n\t\t\t--noise-secondary-note-sat: 10;\n\t\t\t--noise-secondary-note-sat-scale: 0.1;\n\t\t\t--noise-secondary-note-lum: 70;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 125;\n\t\t\t--noise-primary-note-hue-scale: 50;\n\t\t\t--noise-primary-note-sat: 50;\n\t\t\t--noise-primary-note-sat-scale: 0.1;\n\t\t\t--noise-primary-note-lum: 95;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 255;\n\t\t\t--mod-secondary-channel-hue-scale: 75;\n\t\t\t--mod-secondary-channel-sat: 10;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 70;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 255;\n\t\t\t--mod-primary-channel-hue-scale: 75;\n\t\t\t--mod-primary-channel-sat: 50;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 95;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 255;\n\t\t\t--mod-secondary-note-hue-scale: 75;\n\t\t\t--mod-secondary-note-sat: 10;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 70;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 255;\n\t\t\t--mod-primary-note-hue-scale: 75;\n\t\t\t--mod-primary-note-sat: 50;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 95;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #c6c6c6;\n\t\t\t--disabled-note-secondary: #8c8c8c;\n\t\t}`,\n    \"blutonium\": `:root {\n\t\t\t--page-margin: #02070D;\n\t\t\t--editor-background: #02070D;\n\t\t\t--primary-text: #9bd1ee;\n\t\t\t--secondary-text: #5a6da8;\n\t\t\t--text-selection: rgb(68 68 255 / 99%);\n\t\t\t--box-selection-fill: rgb(0 0 255 / 30%);\n\t\t\t--loop-accent: #024aca;\n\t\t\t--link-accent: #024aca;\n\t\t\t--ui-widget-background: #161c2e;\n\t\t\t--ui-widget-focus: #262c3e;\n\t\t\t--pitch-background: #22272D;\n\t\t\t--tonic: #1b3056;\n\t\t\t--fifth-note: #344051;\n\t\t\t--white-piano-key: #a6c6ed;\n\t\t\t--black-piano-key: #2f4687;\n\t\t\t--track-editor-bg-pitch: #25284c;\n\t\t\t--track-editor-bg-pitch-dim: #211c26;\n\t\t\t--track-editor-bg-noise: #261f42;\n\t\t\t--track-editor-bg-noise-dim: #1a152d;\n\t\t\t--track-editor-bg-mod: #183049;\n\t\t\t--track-editor-bg-mod-dim: #102132;\n\t\t\t--multiplicative-mod-slider: #344a7f;\n\t\t\t--overwriting-mod-slider: #344a7f;\n\t\t\t--indicator-primary: #024aca;\n\t\t\t--indicator-secondary: #00177d;\n\t\t\t--select2-opt-group: #141e34;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #273b9d;\n\t\t\t--mute-button-mod: #27989d;\n\t\t\t--pitch1-secondary-channel: hsl(200, 100%, 40%);\n\t\t\t--pitch1-primary-channel: #99ddff;\n\t\t\t--pitch1-secondary-note: hsl(200, 100%, 40%);\n\t\t\t--pitch1-primary-note: #99ddff;\n\t\t\t--pitch2-secondary-channel: \thsl(212, 100%, 34%);\n\t\t\t--pitch2-primary-channel: #5BA8FF;\n\t\t\t--pitch2-secondary-note: hsl(212, 100%, 34%);\n\t\t\t--pitch2-primary-note: #5BA8FF;\n\t\t\t--pitch3-secondary-channel: #024ACA;\n\t\t\t--pitch3-primary-channel: #0A89FF;\n\t\t\t--pitch3-secondary-note: #024ACA;\n\t\t\t--pitch3-primary-note: #0A89FF;\n\t\t\t--pitch4-secondary-channel: #00177D;\n\t\t\t--pitch4-primary-channel: #024ACA;\n\t\t\t--pitch4-secondary-note: #00177D;\n\t\t\t--pitch4-primary-note: #024ACA;\n\t\t\t--pitch5-secondary-channel: #000e4e;\n\t\t\t--pitch5-primary-channel: #0023bf;\n\t\t\t--pitch5-secondary-note: #000e4e;\n\t\t\t--pitch5-primary-note: #0023bf;\n\t\t\t--pitch6-secondary-channel: #8990FE;\n\t\t\t--pitch6-primary-channel: #C2C6FF;\n\t\t\t--pitch6-secondary-note: #8990FE;\n\t\t\t--pitch6-primary-note: #C2C6FF;\n\t\t\t--pitch7-secondary-channel: #5E65D3;\n\t\t\t--pitch7-primary-channel: #8990FE;\n\t\t\t--pitch7-secondary-note: #5E65D3;\n\t\t\t--pitch7-primary-note: #8990FE;\n\t\t\t--pitch8-secondary-channel: #3138A6;\n\t\t\t--pitch8-primary-channel: #5E65D3;\n\t\t\t--pitch8-secondary-note: #3138A6;\n\t\t\t--pitch8-primary-note: #5E65D3;\n\t\t\t--pitch9-secondary-channel: #1B0B7F;\n\t\t\t--pitch9-primary-channel: #3138A6;\n\t\t\t--pitch9-secondary-note: #1B0B7F;\n\t\t\t--pitch9-primary-note: #3138A6;\n\t\t\t--pitch10-secondary-channel: #13015D;\n\t\t\t--pitch10-primary-channel: #1c02bd;\n\t\t\t--pitch10-secondary-note: #13015D;\n\t\t\t--pitch10-primary-note: #1c02bd;\n\t\t\t--noise1-secondary-channel: #A675FE;\n\t\t\t--noise1-primary-channel: #E2C9FF;\n\t\t\t--noise1-secondary-note: #A675FE;\n\t\t\t--noise1-primary-note: #E2C9FF;\n\t\t\t--noise2-secondary-channel: #6A31CA;\n\t\t\t--noise2-primary-channel: #A675FE;\n\t\t\t--noise2-secondary-note: #6A31CA;\n\t\t\t--noise2-primary-note: #A675FE;\n\t\t\t--noise3-secondary-channel: #5A1991;\n\t\t\t--noise3-primary-channel: #6A31CA;\n\t\t\t--noise3-secondary-note: #5A1991;\n\t\t\t--noise3-primary-note: #6A31CA;\n\t\t\t--noise4-secondary-channel: #2f1a68;\n\t\t\t--noise4-primary-channel: #5A1991;\n\t\t\t--noise4-secondary-note: #2f1a68;\n\t\t\t--noise4-primary-note: #5A1991;\n\t\t\t--noise5-secondary-channel: #211640;\n\t\t\t--noise5-primary-channel: #391b8d;\n\t\t\t--noise5-secondary-note: #211640;\n\t\t\t--noise5-primary-note: #391b8d;\n\t\t\t--mod1-secondary-channel: #25E2CD;\n\t\t\t--mod1-primary-channel: #BDFFCA;\n\t\t\t--mod1-secondary-note: #25E2CD;\n\t\t\t--mod1-primary-note: #BDFFCA;\n\t\t\t--mod2-secondary-channel: #0A98AC;\n\t\t\t--mod2-primary-channel: #25E2CD;\n\t\t\t--mod2-secondary-note: #0A98AC;\n\t\t\t--mod2-primary-note: #25E2CC;\n\t\t\t--mod3-secondary-channel: #005280;\n\t\t\t--mod3-primary-channel: #0A98AC;\n\t\t\t--mod3-secondary-note: #005280;\n\t\t\t--mod3-primary-note: #0A98AC;\n\t\t\t--mod4-secondary-channel: #0f3670;\n\t\t\t--mod4-primary-channel: #1369c1;\n\t\t\t--mod4-secondary-note: #0f3670;\n\t\t\t--mod4-primary-note: #1369c1;\n\t\t\t--mod-label-primary: #191d26;\n\t\t\t--mod-label-secondary-text: #024aca;\n\t\t\t--mod-label-primary-text: #ffffffa6;\n\t\t\t--disabled-note-primary: #c9c9c9;\n\t\t\t--disabled-note-secondary: #616161;\n\t}`,\n    \"slushie\": `\n\t:root {\n\t\t--page-margin: #040814;\n\t\t--editor-background: #040814;\n\t\t--hover-preview: #c6f7ff;\n\t\t--primary-text: #d3f3ff;\n\t\t--secondary-text: #6f72b5;\n\t\t--inverted-text: black;\n\t\t--box-selection-fill: rgb(43 70 171 / 62%);\n\t\t--loop-accent: #573ebb;\n\t\t--ui-widget-background: #2e2f44;\n\t\t--ui-widget-focus: #2b2c46;\n\t\t--pitch-background: #353654;\n\t\t--tonic: #716fe3;\n\t\t--fifth-note: #76469b;\n\t\t--white-piano-key: #abbce3;\n\t\t--black-piano-key: #2f235e;\n\t\t--track-editor-bg-pitch: #3a3b5c;\n\t\t--track-editor-bg-pitch-dim: #1f2036;\n\t\t--track-editor-bg-noise: #3c3554;\n\t\t--track-editor-bg-noise-dim: #1e1834;\n\t\t--track-editor-bg-mod: #30335e;\n\t\t--track-editor-bg-mod-dim: #161938;\n\t\t--multiplicative-mod-slider: #e29cff;\n\t\t--overwriting-mod-slider: #495789;\n\t\t--indicator-primary: #e1a6ff;\n\t\t--indicator-secondary: #415187;\n\t\t--select2-opt-group: #22223a;\n\t\t--input-box-outline: #2d2648;\n\t\t--mute-button-normal: #7aceff;\n\t\t--pitch1-secondary-channel: #5f3ea5;\n\t\t--pitch1-primary-channel: #c1a4ff;\n\t\t--pitch1-secondary-note: #794fd3;\n\t\t--pitch1-primary-note: #d8c6ff;\n\t\t--pitch2-secondary-channel: #4f44bf;\n\t\t--pitch2-primary-channel: #9287ff;\n\t\t--pitch2-secondary-note: #5e51d9;\n\t\t--pitch2-primary-note: #b6afff;\n\t\t--pitch3-secondary-channel: #374eb9;\n\t\t--pitch3-primary-channel: #8097ff;\n\t\t--pitch3-secondary-note: #445cc9;\n\t\t--pitch3-primary-note: #a0b2ff;\n\t\t--pitch4-secondary-channel: #2867cf;\n\t\t--pitch4-primary-channel: #6fa5ff;\n\t\t--pitch4-secondary-note: #2e6ed7;\n\t\t--pitch4-primary-note: #a6c7ff;\n\t\t--pitch5-secondary-channel: #3175a7;\n\t\t--pitch5-primary-channel: #7ec9ff;\n\t\t--pitch5-secondary-note: #367eb3;\n\t\t--pitch5-primary-note: #9fd7ff;\n\t\t--pitch6-secondary-channel: #3993a9;\n\t\t--pitch6-primary-channel: #8ce9ff;\n\t\t--pitch6-secondary-note: #386da3;\n\t\t--pitch6-primary-note: #9eecff;\n\t\t--pitch7-secondary-channel: #369d8a;\n\t\t--pitch7-primary-channel: #8bfce7;\n\t\t--pitch7-secondary-note: #1c93a7;\n\t\t--pitch7-primary-note: #abffef;\n\t\t--pitch8-secondary-channel: #00A170;\n\t\t--pitch8-primary-channel: #50FFC9;\n\t\t--pitch8-secondary-note: #00C78A;\n\t\t--pitch8-primary-note: #83FFD9;\n\t\t--pitch9-secondary-channel: #49b374;\n\t\t--pitch9-primary-channel: #8affa9;\n\t\t--pitch9-secondary-note: #26815f;\n\t\t--pitch9-primary-note: #c8ffde;\n\t\t--pitch10-secondary-channel: #58a747;\n\t\t--pitch10-primary-channel: #bbffaa;\n\t\t--pitch10-secondary-note: #1d7c48;\n\t\t--pitch10-primary-note: #c7ffbc;\n\t\t--noise1-secondary-channel: #42829b;\n\t\t--noise1-primary-channel: #97d3fc;\n\t\t--noise1-secondary-note: #3f53b3;\n\t\t--noise1-primary-note: #97d3fc;\n\t\t--noise2-secondary-channel: #6354bb;\n\t\t--noise2-primary-channel: #9a89ff;\n\t\t--noise2-secondary-note: #5f4dcd;\n\t\t--noise2-primary-note: #c6bcff;\n\t\t--noise3-secondary-channel: #704a95;\n\t\t--noise3-primary-channel: #c285ff;\n\t\t--noise3-secondary-note: #ad5aff;\n\t\t--noise3-primary-note: #d3a6ff;\n\t\t--noise4-secondary-channel: #a53c65;\n\t\t--noise4-primary-channel: #f794bb;\n\t\t--noise4-secondary-note: #cb5080;\n\t\t--noise4-primary-note: #f794bb;\n\t\t--noise5-secondary-channel: #9b2d2d;\n\t\t--noise5-primary-channel: #ff7676;\n\t\t--noise5-secondary-note: #cb4444;\n\t\t--noise5-primary-note: #ff9999;\n\t\t--mod1-secondary-channel: #b7613c;\n\t\t--mod1-primary-channel: #ff9f76;\n\t\t--mod1-secondary-note: #e77e52;\n\t\t--mod1-primary-note: #ffb99b;\n\t\t--mod2-secondary-channel: #916d34;\n\t\t--mod2-primary-channel: #fece80;\n\t\t--mod2-secondary-note: #c58b35;\n\t\t--mod2-primary-note: #ffdda5;\n\t\t--mod3-secondary-channel: #83761a;\n\t\t--mod3-primary-channel: #fdf68c;\n\t\t--mod3-secondary-note: #c18e00;\n\t\t--mod3-primary-note: #fdf68c;\n\t\t--mod4-secondary-channel: #a86436;\n\t\t--mod4-primary-channel: #c8a825;\n\t\t--mod4-secondary-note: #e8ba46;\n\t\t--mod4-primary-note: #c8a825;\n\t\t--mod-label-primary: #37325e;\n\t\t--mod-label-secondary-text: #6e8aa7;\n\t\t--mod-label-primary-text: #c1ffff;\n}`,\n    \"ultrabox dark\": `\n:root {\n/*--mod-title: #CCCCCC;*/\n--loop-accent: #CCCCCC;\n--playhead: #CCCCCC;\n/*--primary-text: #CCCCCC;\n--hover-preview: #CCCCCC;*/\n--link-accent: #FF8EC5;\n--indicator-primary: #FF8EC5;\n/*--indicator-primary: #CCCCCC;*/\n/*--indicator-secondary: #E856B2;*/\n--white-piano-key: #CCCCCC;\n/*--black-piano-key: #444;*/\n--text-selection: #932253;\n--oscilloscope-line-L: #CCCCCC;\n--oscilloscope-line-R: #932253;\n--pitch-channel-limit: 8;\n--pitch1-secondary-channel: #A83030;\n--pitch1-primary-channel:   #FF7C7C;\n--pitch1-secondary-note:    #B51532;\n--pitch1-primary-note:      #FFA3A3;\n\n--pitch2-secondary-channel: #C75000;\n--pitch2-primary-channel:   #FF9752;\n--pitch2-secondary-note:    #FF771C;\n--pitch2-primary-note:      #FFCDAB;\n\n--pitch3-secondary-channel: #A1A100;\n--pitch3-primary-channel: #FFFF25;\n--pitch3-secondary-note: #C7C700;\n--pitch3-primary-note: #FFFF92;\n\n--pitch4-secondary-channel: #139620;\n--pitch4-primary-channel:   #25ff3a;\n--pitch4-secondary-note:    #21FF33;\n--pitch4-primary-note:      #C0FFB5;\n\n--pitch5-secondary-channel: #0099A1;\n--pitch5-primary-channel:   #25F3FF;\n--pitch5-secondary-note:    #00BDC7;\n--pitch5-primary-note:      #92F9FF;\n\n--pitch6-secondary-channel: #58599E;\n--pitch6-primary-channel:   #5EA3FF;\n--pitch6-secondary-note:    #183AC7;\n--pitch6-primary-note:      #9EC8FF;\n\n--pitch7-secondary-channel: #6038a5;\n--pitch7-primary-channel:   #C760FF;\n--pitch7-secondary-note:    #5433A0;\n--pitch7-primary-note:      #D99EFF;\n\n--pitch8-secondary-channel: #932253;\n--pitch8-primary-channel:   #FF60A5;\n--pitch8-secondary-note:    #8E1C4E;\n--pitch8-primary-note:      #FF8EC5;\n\n/*--track-editor-bg-mod: #632D45;\n--track-editor-bg-mod-dim: #3F1D2C;*/\n}`,\n    \"modbox classic\": `\n\t\t\t:root {\n\t\t\t\t--loop-accent: #9900cc;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\n\t\t\t\t--pitch2-secondary-channel: #439143;\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\n\t\t\t\t--pitch2-secondary-note:    #439143;\n\t\t\t\t--pitch2-primary-note:      #44ff44;\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\n\t\t\t\t--pitch3-primary-note:      #ffff25;\n\t\t\t\t--pitch4-secondary-channel: #c75000;\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\n\t\t\t\t--pitch4-secondary-note:    #c75000;\n\t\t\t\t--pitch4-primary-note:      #ff9752;\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\n\t\t\t\t--pitch6-secondary-channel: #552377;\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\n\t\t\t\t--pitch6-secondary-note:    #552377;\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\n\t\t\t\t--pitch7-secondary-channel: #221b89;\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\n\t\t\t\t--pitch7-secondary-note:    #221b89;\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\n\t\t\t\t--pitch8-secondary-channel: #00995f;\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\n\t\t\t\t--pitch8-secondary-note:    #00995f;\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\n\t\t\t\t--pitch10-secondary-channel:#b25915;\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\n\t\t\t\t--pitch10-secondary-note:   #b25915;\n\t\t\t\t--pitch10-primary-note:     #d85d00;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768dfc;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768dfc;\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\n         --mod1-secondary-channel: #0099a1;\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\n\t\t\t\t--mod1-secondary-note:    #0099a1;\n\t\t\t\t--mod1-primary-note:      #25f3ff;\n\t\t\t\t--mod2-secondary-channel: #439143;\n\t\t\t\t--mod2-primary-channel:   #44ff44;\n\t\t\t\t--mod2-secondary-note:    #439143;\n\t\t\t\t--mod2-primary-note:      #44ff44;\n\t\t\t\t--mod3-secondary-channel: #a1a100;\n\t\t\t\t--mod3-primary-channel:   #ffff25;\n\t\t\t\t--mod3-secondary-note:    #a1a100;\n\t\t\t\t--mod3-primary-note:      #ffff25;\n\t\t\t\t--mod4-secondary-channel: #c75000;\n\t\t\t\t--mod4-primary-channel:   #ff9752;\n\t\t\t\t--mod4-secondary-note:    #c75000;\n\t\t\t\t--mod4-primary-note:      #ff9752;\n\t\t\t\t--text-disabled-icon: ✗ ;\n\t\t\t}\n\t\t\t`,\n    \"zefbox\": `\n\t\t\t:root {\n\t\t\t\t--loop-accent: #C3593D;\n\t\t\t\t--pitch1-secondary-channel: #06c400;\n\t\t\t\t--pitch1-primary-channel:   #08ff00;\n\t\t\t\t--pitch1-secondary-note:    #06c400;\n\t\t\t\t--pitch1-primary-note:      #06e000;\n\t\t\t\t--pitch2-secondary-channel: #00bf97;\n\t\t\t\t--pitch2-primary-channel:   #00ffcb;\n\t\t\t\t--pitch2-secondary-note:    #00bf97;\n\t\t\t\t--pitch2-primary-note:      #00edbc;\n\t\t\t\t--pitch3-secondary-channel: #b5b000;\n\t\t\t\t--pitch3-primary-channel:   #fffa00;\n\t\t\t\t--pitch3-secondary-note:    #b5b000;\n\t\t\t\t--pitch3-primary-note:      #e0db00;\n\t\t\t\t--pitch4-secondary-channel: #c90000;\n\t\t\t\t--pitch4-primary-channel:   #e20000;\n\t\t\t\t--pitch4-secondary-note:    #c90000;\n\t\t\t\t--pitch4-primary-note:      #e20000;\n\t\t\t\t--pitch5-secondary-channel: #d17d12;\n\t\t\t\t--pitch5-primary-channel:   #ff9e21;\n\t\t\t\t--pitch5-secondary-note:    #d17d12;\n\t\t\t\t--pitch5-primary-note:      #ef9017;\n\t\t\t\t--pitch6-secondary-channel: #d35bc8;\n\t\t\t\t--pitch6-primary-channel:   #ffa5f7;\n\t\t\t\t--pitch6-secondary-note:    #d35bc8;\n\t\t\t\t--pitch6-primary-note:      #fc64ee;\n\t\t\t\t--pitch7-secondary-channel: #D00000;\n\t\t\t\t--pitch7-primary-channel:   #FF4444;\n\t\t\t\t--pitch7-secondary-note:    #D00000;\n\t\t\t\t--pitch7-primary-note:      #FF4444;\n\t\t\t\t--pitch8-secondary-channel: #00C700;\n\t\t\t\t--pitch8-primary-channel:   #A0FFA0;\n\t\t\t\t--pitch8-secondary-note:    #00C700;\n\t\t\t\t--pitch8-primary-note:      #A0FFA0;\n\t\t\t\t--pitch9-secondary-channel: #A88981;\n\t\t\t\t--pitch9-primary-channel:   #F1C3B7;\n\t\t\t\t--pitch9-secondary-note:    #A88981;\n\t\t\t\t--pitch9-primary-note:      #F1C3B7;\n\t\t\t\t--pitch10-secondary-channel:#0C0A99;\n\t\t\t\t--pitch10-primary-channel:  #0000EE;\n\t\t\t\t--pitch10-secondary-note:   #0C0A99;\n\t\t\t\t--pitch10-primary-note:     #0000EE;\n\t\t\t\t--noise1-secondary-channel: #ABABAB;\n\t\t\t\t--noise1-primary-channel:   #D6D6D6;\n\t\t\t\t--noise1-secondary-note:    #ABABAB;\n\t\t\t\t--noise1-primary-note:      #D6D6D6;\n\t\t\t\t--noise2-secondary-channel: #A18F51;\n\t\t\t\t--noise2-primary-channel:   #F6BB6A;\n\t\t\t\t--noise2-secondary-note:    #A18F51;\n\t\t\t\t--noise2-primary-note:      #F6BB6A;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768DFC;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768DFC;\n\t\t\t\t--noise4-secondary-channel: #8888D0;\n\t\t\t\t--noise4-primary-channel:   #D0D0FF;\n\t\t\t\t--noise4-secondary-note:    #8888D0;\n\t\t\t\t--noise4-primary-note:      #D0D0FF;\n\t\t\t\t--noise5-secondary-channel: #B7148E;\n\t\t\t\t--noise5-primary-channel:   #E819B4;\n\t\t\t\t--noise5-secondary-note:    #B7148E;\n\t\t\t\t--noise5-primary-note:      #E819B4;\n       --mod1-secondary-channel: #06c400;\n\t\t\t\t--mod1-primary-channel:   #08ff00;\n\t\t\t\t--mod1-secondary-note:    #06c400;\n\t\t\t\t--mod1-primary-note:      #06e000;\n\t\t\t\t--mod2-secondary-channel: #00bf97;\n\t\t\t\t--mod2-primary-channel:   #00ffcb;\n\t\t\t\t--mod2-secondary-note:    #00bf97;\n\t\t\t\t--mod2-primary-note:      #00edbc;\n\t\t\t\t--mod3-secondary-channel: #b5b000;\n\t\t\t\t--mod3-primary-channel:   #fffa00;\n\t\t\t\t--mod3-secondary-note:    #b5b000;\n\t\t\t\t--mod3-primary-note:      #e0db00;\n\t\t\t\t--mod4-secondary-channel: #c90000;\n\t\t\t\t--mod4-primary-channel:   #e20000;\n\t\t\t\t--mod4-secondary-note:    #c90000;\n\t\t\t\t--mod4-primary-note:      #e20000;\n\t\t\t\t}\n\t\t\t`,\n    \"sandbox classic\": `\n\t\t\t:root {\n\t\t\t\t--loop-accent: #198195;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 4;\n\t\t\t\t--pitch1-secondary-channel: #539999;\n\t\t\t\t--pitch1-primary-channel:   #5EB1B1;\n\t\t\t\t--pitch1-secondary-note:    #539999;\n\t\t\t\t--pitch1-primary-note:      #5EB1B1;\n\t\t\t\t--pitch2-secondary-channel: #95933C;\n\t\t\t\t--pitch2-primary-channel:   #B0AD44;\n\t\t\t\t--pitch2-secondary-note:    #95933C;\n\t\t\t\t--pitch2-primary-note:      #B0AD44;\n\t\t\t\t--pitch3-secondary-channel: #E75566;\n\t\t\t\t--pitch3-primary-channel:   #FF9AA6;\n\t\t\t\t--pitch3-secondary-note:    #E75566;\n\t\t\t\t--pitch3-primary-note:      #FF9AA6;\n\t\t\t\t--pitch4-secondary-channel: #8B4343;\n\t\t\t\t--pitch4-primary-channel:   #FF8844;\n\t\t\t\t--pitch4-secondary-note:    #8B4343;\n\t\t\t\t--pitch4-primary-note:      #FF8844;\n\t\t\t\t--pitch5-secondary-channel: #888888;\n\t\t\t\t--pitch5-primary-channel:   #BBBBBB;\n\t\t\t\t--pitch5-secondary-note:    #888888;\n\t\t\t\t--pitch5-primary-note:      #BBBBBB;\n\t\t\t\t--pitch6-secondary-channel: #BB6906;\n\t\t\t\t--pitch6-primary-channel:   #FE8D00;\n\t\t\t\t--pitch6-secondary-note:    #BB6906;\n\t\t\t\t--pitch6-primary-note:      #FE8D00;\n\t\t\t\t--pitch7-secondary-channel: #539999;\n\t\t\t\t--pitch7-primary-channel:   #5EB1B1;\n\t\t\t\t--pitch7-secondary-note:    #539999;\n\t\t\t\t--pitch7-primary-note:      #5EB1B1;\n\t\t\t\t--pitch8-secondary-channel: #95933C;\n\t\t\t\t--pitch8-primary-channel:   #B0AD44;\n\t\t\t\t--pitch8-secondary-note:    #95933C;\n\t\t\t\t--pitch8-primary-note:      #B0AD44;\n\t\t\t\t--pitch9-secondary-channel: #E75566;\n\t\t\t\t--pitch9-primary-channel:   #FF9AA6;\n\t\t\t\t--pitch9-secondary-note:    #E75566;\n\t\t\t\t--pitch9-primary-note:      #FF9AA6;\n\t\t\t\t--pitch10-secondary-channel: #8B4343;\n\t\t\t\t--pitch10-primary-channel:   #FF8844;\n\t\t\t\t--pitch10-secondary-note:    #8B4343;\n\t\t\t\t--pitch10-primary-note:      #FF8844;\t\t\t\n\t\t\t\t--noise1-secondary-channel: #ABABAB;\n\t\t\t\t--noise1-primary-channel:   #D6D6D6;\n\t\t\t\t--noise1-secondary-note:    #ABABAB;\n\t\t\t\t--noise1-primary-note:      #D6D6D6;\n\t\t\t\t--noise2-secondary-channel: #A18F51;\n\t\t\t\t--noise2-primary-channel:   #F6BB6A;\n\t\t\t\t--noise2-secondary-note:    #A18F51;\n\t\t\t\t--noise2-primary-note:      #F6BB6A;\n\t\t\t\t--noise3-secondary-channel: #5869BD;\n\t\t\t\t--noise3-primary-channel:   #768DFC;\n\t\t\t\t--noise3-secondary-note:    #5869BD;\n\t\t\t\t--noise3-primary-note:      #768DFC;\n\t\t\t\t--noise4-secondary-channel: #8888D0;\n\t\t\t\t--noise4-primary-channel:   #D0D0FF;\n\t\t\t\t--noise4-secondary-note:    #8888D0;\n\t\t\t\t--noise4-primary-note:      #D0D0FF;\n\t\t\t\t--noise5-secondary-channel: #A18F51;\n\t\t\t\t--noise5-primary-channel:   #F6BB6A;\n\t\t\t\t--noise5-secondary-note:    #A18F51;\n\t\t\t\t--noise5-primary-note:      #F6BB6A;\t\t\t\n         \t--mod1-secondary-channel: #539999;\n\t\t\t\t--mod1-primary-channel:   #5EB1B1;\n\t\t\t\t--mod1-secondary-note:    #539999;\n\t\t\t\t--mod1-primary-note:      #5EB1B1;\n\t\t\t\t--mod2-secondary-channel: #95933C;\n\t\t\t\t--mod2-primary-channel:   #B0AD44;\n\t\t\t\t--mod2-secondary-note:    #95933C;\n\t\t\t\t--mod2-primary-note:      #B0AD44;\n\t\t\t\t--mod3-secondary-channel: #E75566;\n\t\t\t\t--mod3-primary-channel:   #FF9AA6;\n\t\t\t\t--mod3-secondary-note:    #E75566;\n\t\t\t\t--mod3-primary-note:      #FF9AA6;\n\t\t\t\t--mod4-secondary-channel: #8B4343;\n\t\t\t\t--mod4-primary-channel:   #FF8844;\n\t\t\t\t--mod4-secondary-note:    #8B4343;\n\t\t\t\t--mod4-primary-note:      #FF8844;\n\t\t\t\t}\n\t\t\t`,\n    \"harrybox\": `\n\t\t\t:root {\n\t\t\t\t--loop-accent: #9900cc;\n\t\t\t\t\t--noise-channel-limit: 2;\n\t\t\t\t--pitch1-secondary-channel: #00ffff;\n\t\t\t\t--pitch1-primary-channel:   #00ffff;\n\t\t\t\t--pitch1-secondary-note:    #00ffff;\n\t\t\t\t--pitch1-primary-note:      #00ffff;\n\t\t\t\t--pitch2-secondary-channel: #00d8d8;\n\t\t\t\t--pitch2-primary-channel:   #00d8d8;\n\t\t\t\t--pitch2-secondary-note:    #00d8d8;\n\t\t\t\t--pitch2-primary-note:      #00d8d8;\n\t\t\t\t--pitch3-secondary-channel: #00adad;\n\t\t\t\t--pitch3-primary-channel:   #00adad;\n\t\t\t\t--pitch3-secondary-note:    #00adad;\n\t\t\t\t--pitch3-primary-note:      #00adad;\n\t\t\t\t-pitch4-secondary-channel: #008c8c;\n\t\t\t\t--pitch4-primary-channel:   #008c8c;\n\t\t\t\t--pitch4-secondary-note:    #008c8c;\n\t\t\t\t--pitch4-primary-note:      #008c8c;\n\t\t\t\t--pitch5-secondary-channel: #005b5b;\n\t\t\t\t--pitch5-primary-channel:   #005b5b;\n\t\t\t\t--pitch5-secondary-note:    #005b5b;\n\t\t\t\t--pitch5-primary-note:      #005b5b;\n\t\t\t\t--pitch6-secondary-channel: #003333;\n\t\t\t\t--pitch6-primary-channel:   #003333;\n\t\t\t\t--pitch6-secondary-note:    #003333;\n\t\t\t\t--pitch6-primary-note:      #003333;\n\t\t\t\t--pitch7-secondary-channel: #00ffff;\n\t\t\t\t--pitch7-primary-channel:   #00ffff;\n\t\t\t\t--pitch7-secondary-note:    #00ffff;\n\t\t\t\t--pitch7-primary-note:      #00ffff;\n\t\t\t\t--pitch8-secondary-channel: #00ffff;\n\t\t\t\t--pitch8-primary-channel:   #00ffff;\n\t\t\t\t--pitch8-secondary-note:    #00ffff;\n\t\t\t\t--pitch8-primary-note:      #00ffff;\n\t\t\t\t--pitch9-secondary-channel: #00ffff;\n\t\t\t\t--pitch9-primary-channel:   #00ffff;\n\t\t\t\t--pitch9-secondary-note:    #00ffff;\n\t\t\t\t--pitch9-primary-note:      #00ffff;\n\t\t\t\t--pitch10-secondary-channel:#00ffff;\n\t\t\t\t--pitch10-primary-channel:  #00ffff;\n\t\t\t\t--pitch10-secondary-note:   #00ffff;\n\t\t\t\t--pitch10-primary-note:     #00ffff;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t--noise1-primary-channel:   #ff1616;\n\t\t\t\t--noise1-secondary-note:    #991010;\n\t\t\t\t--noise1-primary-note:      #ff1616;\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\n\t\t\t\t--noise2-primary-channel:   #ffffff;\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\n\t\t\t\t--noise2-primary-note:      #ffffff;\n\t\t\t\t--noise3-secondary-channel: #991010;\n\t\t\t\t--noise3-primary-channel:   #ff1616;\n\t\t\t\t--noise3-secondary-note:    #991010;\n\t\t\t\t--noise3-primary-note:      #ff1616;\n\t\t\t\t--noise4-secondary-channel: #aaaaaa;\n\t\t\t\t--noise4-primary-channel:   #ffffff;\n\t\t\t\t--noise4-secondary-note:    #aaaaaa;\n\t\t\t\t--noise4-primary-note:      #ffffff;\n\t\t\t\t--noise5-secondary-channel: #991010;\n\t\t\t\t--noise5-primary-channel:   #ff1616;\n\t\t\t\t--noise5-secondary-note:    #991010;\n\t\t\t\t--noise5-primary-note:      #ff1616;\n         \t--mod1-secondary-channel: #00ffff;\n\t\t\t\t--mod1-primary-channel:   #00ffff;\n\t\t\t\t--mod1-secondary-note:    #00ffff;\n\t\t\t\t--mod1-primary-note:      #00ffff;\n\t\t\t\t--mod2-secondary-channel: #00d8d8;\n\t\t\t\t--mod2-primary-channel:   #00d8d8;\n\t\t\t\t--mod2-secondary-note:    #00d8d8;\n\t\t\t\t--mod2-primary-note:      #00d8d8;\n\t\t\t\t--mod3-secondary-channel: #00adad;\n\t\t\t\t--mod3-primary-channel:   #00adad;\n\t\t\t\t--mod3-secondary-note:    #00adad;\n\t\t\t\t--mod3-primary-note:      #00adad;\n\t\t\t\t-mod4-secondary-channel: #008c8c;\n\t\t\t\t--mod4-primary-channel:   #008c8c;\n\t\t\t\t--mod4-secondary-note:    #008c8c;\n\t\t\t\t--mod4-primary-note:      #008c8c;\n\t\t\t\t}\n\t\t\t`,\n    \"brucebox\": `\n\t\t:root {\n\t\t\t\tfont: 16px/2 cursive;\n\t\t\t\t--page-margin: #4667CE;\n\t\t\t\t--editor-background: #4667CE;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #444;\n\t\t\t\t\t--pitch-channel-limit: 3;\n\t\t\t\t\t--noise-channel-limit: 1;\n\t\t\t\t--pitch1-secondary-channel: #bda822;\n\t\t\t\t--pitch1-primary-channel:   #fcdb00;\n\t\t\t\t--pitch1-secondary-note:    #bda822;\n\t\t\t\t--pitch1-primary-note:      #fcdb00;\n\t\t\t\t--pitch2-secondary-channel: #612278;\n\t\t\t\t--pitch2-primary-channel:   #bb00ff;\n\t\t\t\t--pitch2-secondary-note:    #612278;\n\t\t\t\t--pitch2-primary-note:      #bb00ff;\n\t\t\t\t--pitch3-secondary-channel: #8b4343;\n\t\t\t\t--pitch3-primary-channel:   #ff8844;\n\t\t\t\t--pitch3-secondary-note:    #8b4343;\n\t\t\t\t--pitch3-primary-note:      #ff8844;\n\t\t\t\t--pitch4-secondary-channel: #bda822;\n\t\t\t\t--pitch4-primary-channel:   #fcdb00;\n\t\t\t\t--pitch4-secondary-note:    #bda822;\n\t\t\t\t--pitch4-primary-note:      #fcdb00;\n\t\t\t\t--pitch5-secondary-channel: #612278;\n\t\t\t\t--pitch5-primary-channel:   #bb00ff;\n\t\t\t\t--pitch5-secondary-note:    #612278;\n\t\t\t\t--pitch5-primary-note:      #bb00ff;\n\t\t\t\t--pitch6-secondary-channel: #8b4343;\n\t\t\t\t--pitch6-primary-channel:   #ff8844;\n\t\t\t\t--pitch6-secondary-note:    #8b4343;\n\t\t\t\t--pitch6-primary-note:      #ff8844;\n\t\t\t\t--pitch7-secondary-channel: #bda822;\n\t\t\t\t--pitch7-primary-channel:   #fcdb00;\n\t\t\t\t--pitch7-secondary-note:    #bda822;\n\t\t\t\t--pitch7-primary-note:      #fcdb00;\n\t\t\t\t--pitch8-secondary-channel: #612278;\n\t\t\t\t--pitch8-primary-channel:   #bb00ff;\n\t\t\t\t--pitch8-secondary-note:    #612278;\n\t\t\t\t--pitch8-primary-note:      #bb00ff;\n\t\t\t\t--pitch9-secondary-channel: #8b4343;\n\t\t\t\t--pitch9-primary-channel:   #ff8844;\n\t\t\t\t--pitch9-secondary-note:    #8b4343;\n\t\t\t\t--pitch9-primary-note:      #ff8844;\n\t\t\t\t--pitch10-secondary-channel: #bda822;\n\t\t\t\t--pitch10-primary-channel:   #fcdb00;\n\t\t\t\t--pitch10-secondary-note:    #bda822;\n\t\t\t\t--pitch10-primary-note:      #fcdb00;\n\t\t\t\t--noise1-secondary-channel: #991010;\n\t\t\t\t}\n\n\t\t\t\t.trackContainer .noSelection {\n\t\t\t\tbackground: black !important;\n\t\t\t\t}\n\n\t\t\t\tspan input, \n\t\t\t\tdiv.harmonics svg,\n\t\t\t\tdiv.spectrum svg,\n\t\t\t\tdiv.filterEditor svg,\n\t\t\t\tdiv.fadeInOut svg,\n\t\t\t\tdiv.loopEditor svg,\n\t\t\t\tsvg#firstImage,\n\t\t\t\tdiv.trackContainer div.noSelection\n\t\t\t\t{\n\t\t\t\t\tbackground: black !important;\n\t\t\t\t}\n\n\t\t\t\tinput, textarea {\n\t\t\t\t\tbackground-color: black !important;\n\t\t\t\t}\n\n\t\t\t\t#text-content > section > h1 {\n\t\t\t\t\tcolor: white;\n\t\t\t\t}\n\n\t\t\t`,\n    \"shitbox 2.0\": `\n\t\t\t:root {\n\t\t\t--page-margin: maroon;\n\t\t\t\t\t--playhead: firebrick;\n\t\t\t\t\t--primary-text: silver;\n\t\t\t\t--text-selection: rgba(139,69,19,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(220,20,60,0.2);\n\t\t\t\t\t--loop-accent: #841;\n\t\t\t\t\t--link-accent: #841;\n\t\t\t\t\t--ui-widget-background: #800;\n\t\t\t\t\t--ui-widget-focus: #a00;\n\t\t\t\t\t--pitch-background: #700;\n\t\t\t\t\t--tonic: #522;\n\t\t\t\t\t--fifth-note: #f75;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #7e4a35;\n\t\t\t\t\t--pitch1-primary-channel:   #c27251;\n\t\t\t\t\t--pitch1-secondary-note:    #7e4a35;\n\t\t\t\t\t--pitch1-primary-note:      #f09571;\n\t\t\t\t\t--pitch2-secondary-channel: #998a5c;\n\t\t\t\t\t--pitch2-primary-channel:   #d9c27c;\n\t\t\t\t\t--pitch2-secondary-note:    #998a5c;\n\t\t\t\t\t--pitch2-primary-note:      #fae196;\n\t\t\t\t\t--pitch3-secondary-channel: #9c927c;\n\t\t\t\t\t--pitch3-primary-channel:   #dbceb0;\n\t\t\t\t\t--pitch3-secondary-note:    #9c927c;\n\t\t\t\t\t--pitch3-primary-note:      #eddebb;\n\t\t\t\t\t--pitch4-secondary-channel: #838060;\n\t\t\t\t\t--pitch4-primary-channel:   #ccc795;\n\t\t\t\t\t--pitch4-secondary-note:    #838060;\n\t\t\t\t\t--pitch4-primary-note:      #f2ecb1;\n\t\t\t\t\t--pitch5-secondary-channel: #8b6f47;\n\t\t\t\t\t--pitch5-primary-channel:   #d1a76b;\n\t\t\t\t\t--pitch5-secondary-note:    #8b6f47;\n\t\t\t\t\t--pitch5-primary-note:      #ffcc82;\n\t\t\t\t\t--pitch6-secondary-channel: #a96e5b;\n\t\t\t\t\t--pitch6-primary-channel:   #e3967d;\n\t\t\t\t\t--pitch6-secondary-note:    #a96e5b;\n\t\t\t\t\t--pitch6-primary-note:      #ffa68a;\n\t\t\t\t\t\t--pitch7-secondary-channel: #7e4a35;\n\t\t\t\t\t--pitch7-primary-channel:   #c27251;\n\t\t\t\t\t--pitch7-secondary-note:    #7e4a35;\n\t\t\t\t\t--pitch7-primary-note:      #f09571;\n\t\t\t\t\t--pitch8-secondary-channel: #998a5c;\n\t\t\t\t\t--pitch8-primary-channel:   #d9c27c;\n\t\t\t\t\t--pitch8-secondary-note:    #998a5c;\n\t\t\t\t\t--pitch8-primary-note:      #fae196;\n\t\t\t\t\t--pitch9-secondary-channel: #9c927c;\n\t\t\t\t\t--pitch9-primary-channel:   #dbceb0;\n\t\t\t\t\t--pitch9-secondary-note:    #9c927c;\n\t\t\t\t\t--pitch9-primary-note:      #eddebb;\n\t\t\t\t\t--pitch10-secondary-channel: #838060;\n\t\t\t\t\t--pitch10-primary-channel:   #ccc795;\n\t\t\t\t\t--pitch10-secondary-note:    #838060;\n\t\t\t\t\t--pitch10-primary-note:      #f2ecb1;\n\t\t\t\t\t--noise4-secondary-channel: #6f6f6f;\n\t\t\t\t\t--noise4-primary-channel:   #aaaaaa;\n\t\t\t\t\t--noise4-secondary-note:    #a7a7a7;\n\t\t\t\t\t--noise4-primary-note:      #e0e0e0;\n\t\t\t\t\t--noise5-secondary-channel: #996633;\n\t\t\t\t\t--noise5-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise5-secondary-note:    #cc9966;\n\t\t\t\t\t--noise5-primary-note:      #f0d0bb;\n         --mod1-secondary-channel: #7e4a35;\n\t\t\t\t\t--mod1-primary-channel:   #c27251;\n\t\t\t\t\t--mod1-secondary-note:    #7e4a35;\n\t\t\t\t\t--mod1-primary-note:      #f09571;\n\t\t\t\t\t--mod2-secondary-channel: #998a5c;\n\t\t\t\t\t--mod2-primary-channel:   #d9c27c;\n\t\t\t\t\t--mod2-secondary-note:    #998a5c;\n\t\t\t\t\t--mod2-primary-note:      #fae196;\n\t\t\t\t\t--mod3-secondary-channel: #9c927c;\n\t\t\t\t\t--mod3-primary-channel:   #dbceb0;\n\t\t\t\t\t--mod3-secondary-note:    #9c927c;\n\t\t\t\t\t--mod3-primary-note:      #eddebb;\n\t\t\t\t\t--mod4-secondary-channel: #838060;\n\t\t\t\t\t--mod4-primary-channel:   #ccc795;\n\t\t\t\t\t--mod4-secondary-note:    #838060;\n\t\t\t\t\t--mod4-primary-note:      #f2ecb1;\n\t\t\t\t\t--note-flash: firebrick;\n  \t\t\t\t\t--note-flash-secondary: firebrick;\n\t\t\t\t}\n\t\t\t`,\n    \"shitbox 3.0\": `\n\t\t\t\n\t\t\t:root {\n\t\t\t\tfont: 20px/2 monospace;\n\t\t\t\t--page-margin: #252525;\n\t\t\t\t--editor-background: #252525;\n\t\t\t\t--primary-text: #C8C8C8;\n\t\t\t\t--link-accent: #945800;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #444;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--text-disabled-icon: ✗ ;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb {\n\t\t\t\t\twidth: 8px !important;\n\t\t\t\t  }\n\n\t\t\t\tbutton.playButton {\n\t\t\t\t\twidth: 80px;\n\t\t\t\t}\n\t\t\t\tbutton.prevBarButton {\n\t\t\t\t\twidth: 40px;\n\t\t\t\t\tleft:-5px;\n\t\t\t\t}\n\t\t\t\tbutton.nextBarButton {\n\t\t\t\t\twidth: 40px;\n\t\t\t\t}\n\n\t\t\t\t.trackContainer .noSelection {\n\t\t\t\tbackground: black !important;\n\t\t\t\t}\n\n\t\t\t\tspan input, \n\t\t\t\tdiv.harmonics svg,\n\t\t\t\tdiv.spectrum svg,\n\t\t\t\tdiv.filterEditor svg,\n\t\t\t\tdiv.fadeInOut svg,\n\t\t\t\tdiv.loopEditor svg,\n\t\t\t\tsvg#firstImage \n\t\t\t\t{\n\t\t\t\t\tbackground: black !important;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor {\n\t\t\t\t\tline-height: 1.25;\n\t\t\t\t}\n\n\t\t\t\t#text-content {\n\t\t\t\t\tfont-size: 32px;\n\t\t\t\t\tline-height: 40px;\n\t\t\t\t}\n\n\t\t\t\t#text-content > section > h1 {\n\t\t\t\t\tcolor: #C8C8C8;\n\t\t\t\t\t}\n\t\t\t`,\n    \"nerdbox\": `\n\t\t\t:root {\n\t\t\t\t\t--pitch-channel-limit: 9;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t--pitch1-secondary-channel: #139620;\n\t\t\t\t--pitch1-primary-channel:   #25ff3a;\n\t\t\t\t--pitch1-secondary-note:    #139620;\n\t\t\t\t--pitch1-primary-note:      #25ff3a;\n\t\t\t\t--pitch2-secondary-channel: #109986;\n\t\t\t\t--pitch2-primary-channel:   #1cffe0;\n\t\t\t\t--pitch2-secondary-note:    #109986;\n\t\t\t\t--pitch2-primary-note:      #1cffe0;\n\t\t\t\t--pitch3-secondary-channel: #127296;\n\t\t\t\t--pitch3-primary-channel:   #21c3ff;\n\t\t\t\t--pitch3-secondary-note:    #127296;\n\t\t\t\t--pitch3-primary-note:      #21c3ff;\n\t\t\t\t--pitch4-secondary-channel: #6038a5;\n\t\t\t\t--pitch4-primary-channel:   #9456ff;\n\t\t\t\t--pitch4-secondary-note:    #6038a5;\n\t\t\t\t--pitch4-primary-note:      #ff35e0;\n\t\t\t\t--pitch5-secondary-channel: #a52491;\n\t\t\t\t--pitch5-primary-channel:   #ff35e0;\n\t\t\t\t--pitch5-secondary-note:    #a52491;\n\t\t\t\t--pitch5-primary-note:      #af3221;\n\t\t\t\t--pitch6-secondary-channel: #af3221;\n\t\t\t\t--pitch6-primary-channel:   #ff4a32;\n\t\t\t\t--pitch6-secondary-note:    #af3221;\n\t\t\t\t--pitch6-primary-note:      #ff4a32;\n\t\t\t\t--pitch7-secondary-channel: #ad6e0f;\n\t\t\t\t--pitch7-primary-channel:   #ffa216;\n\t\t\t\t--pitch7-secondary-note:    #ad6e0f;\n\t\t\t\t--pitch7-primary-note:      #ffa216;\n\t\t\t\t--pitch8-secondary-channel: #ad6e0f;\n\t\t\t\t--pitch8-primary-channel:   #ffa216;\n\t\t\t\t--pitch8-secondary-note:    #ad6e0f;\n\t\t\t\t--pitch8-primary-note:      #ffa216;\n\t\t\t\t--pitch9-secondary-channel: #a7b512;\n\t\t\t\t--pitch9-primary-channel:   #ebff19;\n\t\t\t\t--pitch9-secondary-note:    #a7b512;\n\t\t\t\t--pitch9-primary-note:      #ebff19;\n\t\t\t\t--pitch10-secondary-channel:#70ad1b;\n\t\t\t\t--pitch10-primary-channel:  #a4ff26;\n\t\t\t\t--pitch10-secondary-note:   #70ad1b;\n\t\t\t\t--pitch10-primary-note:     #a4ff26;\n\t\t\t\t--noise1-secondary-channel: #68706f;\n\t\t\t\t--noise1-primary-channel:   #a6b2b1;\n\t\t\t\t--noise1-secondary-note:    #68706f;\n\t\t\t\t--noise1-primary-note:      #a6b2b1;\n\t\t\t\t--noise2-secondary-channel: #665c64;\n\t\t\t\t--noise2-primary-channel:   #a396a1;\n\t\t\t\t--noise2-secondary-note:    #665c64;\n\t\t\t\t--noise2-primary-note:      #a396a1;\n\t\t\t\t--noise3-secondary-channel: #60605a;\n\t\t\t\t--noise3-primary-channel:   #afaea3;\n\t\t\t\t--noise3-secondary-note:    #60605a;\n\t\t\t\t--noise3-primary-note:      #afaea3;\n\t\t\t--noise4-secondary-channel: #665c64;\n\t\t\t--noise4-primary-channel:   #a396a1;\n\t\t\t\t--noise4-secondary-note:    #665c64;\n\t\t\t\t--noise4-primary-note:      #a396a1;\n\t\t\t\t--noise5-secondary-channel: #60605a;\n\t\t\t\t--noise5-primary-channel:   #afaea3;\n\t\t\t\t--noise5-secondary-note:    #60605a;\n\t\t\t\t--noise5-primary-note:      #afaea3;\n         --mod1-secondary-channel: #139620;\n\t\t\t\t--mod1-primary-channel:   #25ff3a;\n\t\t\t\t--mod1-secondary-note:    #139620;\n\t\t\t\t--mod1-primary-note:      #25ff3a;\n\t\t\t\t--mod2-secondary-channel: #109986;\n\t\t\t\t--mod2-primary-channel:   #1cffe0;\n\t\t\t\t--mod2-secondary-note:    #109986;\n\t\t\t\t--mod2-primary-note:      #1cffe0;\n\t\t\t\t--mod3-secondary-channel: #127296;\n\t\t\t\t--mod3-primary-channel:   #21c3ff;\n\t\t\t\t--mod3-secondary-note:    #127296;\n\t\t\t\t--mod3-primary-note:      #21c3ff;\n\t\t\t\t--mod4-secondary-channel: #6038a5;\n\t\t\t\t--mod4-primary-channel:   #9456ff;\n\t\t\t\t--mod4-secondary-note:    #6038a5;\n\t\t\t\t--mod4-primary-note:      #ff35e0;\n\t\t\t\t}\n\t\t\t`,\n    \"nepbox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #000;\n\t\t\t\t--editor-background: #060606;\n\t\t\t\t--hover-preview: #fff;\n\t\t\t\t--playhead: rgb(0, 242, 255);\n\t\t\t\t--primary-text: #00fff5;\n\t\t\t\t--secondary-text: #a82f2f;\n\t\t\t\t--inverted-text: #000;\n\t\t\t\t--text-selection: rgba(98, 46, 164, .99);\n\t\t\t\t--box-selection-fill: #b74a4a;\n\t\t\t\t--loop-accent: #7744FF;\n\t\t\t\t--link-accent: #ff00e1;\n\t\t\t\t--ui-widget-background: #484848;\n\t\t\t\t--ui-widget-focus: #3e3e3e;\n\t\t\t\t--pitch-background: #0a2d44;\n\t\t\t\t--tonic: #9150ff;\n\t\t\t\t--fifth-note: #900;\n\t\t\t\t--white-piano-key: #353535;\n\t\t\t\t--black-piano-key: #fff;\n\t\t\t\t--white-piano-key-text: #fff;\n\t\t\t\t--black-piano-key-text: #000;\n\t\t\t\t--track-editor-bg-pitch: #424242;\n\t\t\t\t--track-editor-bg-pitch-dim: #000;\n\t\t\t\t--track-editor-bg-noise: #424242;\n\t\t\t\t--track-editor-bg-noise-dim: #000;\n\t\t\t\t--track-editor-bg-mod: #3c3c3c;\n\t\t\t\t--track-editor-bg-mod-dim: #000;\n\t\t\t\t--multiplicative-mod-slider: #fff;\n\t\t\t\t--overwriting-mod-slider: #9d9d9d;\n\t\t\t\t--indicator-primary: #f00;\n\t\t\t\t--indicator-secondary: #919191;\n\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t--input-box-outline: #626262;\n\t\t\t\t--mute-button-normal: #9a00ff;\n\t\t\t\t--mute-button-mod: #00fff7;\n\t\t\t\t--mod-label-primary: #2b2b2b;\n\t\t\t\t--pitch-channel-limit: 4;\n\t\t\t\t--noise-channel-limit: 2;\n\n\t\t\t\t--pitch1-secondary-channel: #c13cbf;\n\t\t\t\t--pitch1-primary-channel: #f75dff;\n\t\t\t\t--pitch1-secondary-note: #b930a2;\n\t\t\t\t--pitch1-primary-note: #fca5ff;\n\t\t\t\t--pitch2-secondary-channel: #800000;\n\t\t\t\t--pitch2-primary-channel: #f00;\n\t\t\t\t--pitch2-secondary-note: #8c2121;\n\t\t\t\t--pitch2-primary-note: #ff5252;\n\t\t\t\t--pitch3-secondary-channel: #004bb3;\n\t\t\t\t--pitch3-primary-channel: #1792ff;\n\t\t\t\t--pitch3-secondary-note: #005cb3;\n\t\t\t\t--pitch3-primary-note: #00ffe9;\n\t\t\t\t--pitch4-secondary-channel: #a48800;\n\t\t\t\t--pitch4-primary-channel: #fb0;\n\t\t\t\t--pitch4-secondary-note: #9c4100;\n\t\t\t\t--pitch4-primary-note: #ffd84e;\n\t\t\t\t--noise1-secondary-channel: #868686;\n\t\t\t\t--noise1-primary-channel: #fff;\n\t\t\t\t--noise1-secondary-note: #868686;\n\t\t\t\t--noise1-primary-note: #fff;\n\t\t\t\t--noise2-secondary-channel: #805300;\n\t\t\t\t--noise2-primary-channel: #ff8c00;\n\t\t\t\t--noise2-secondary-note: #6a3500;\n\t\t\t\t--noise2-primary-note: #a85400;\n\t\t\t\t--mod1-secondary-channel: #6c0000;\n\t\t\t\t--mod1-primary-channel: #ff3e3e;\n\t\t\t\t--mod1-secondary-note: #6c0000;\n\t\t\t\t--mod1-primary-note: #ff3e3e;\n\t\t\t\t--mod2-secondary-channel: #d25a00;\n\t\t\t\t--mod2-primary-channel: #fdff00;\n\t\t\t\t--mod2-secondary-note: #d25a00;\n\t\t\t\t--mod2-primary-note: #fdff00;\n\t\t\t\t--mod3-secondary-channel: #046000;\n\t\t\t\t--mod3-primary-channel: #23ff1b;\n\t\t\t\t--mod3-secondary-note: #046000;\n\t\t\t\t--mod3-primary-note: #23ff1b;\n\t\t\t\t--mod4-secondary-channel: #3b2bae;\n\t\t\t\t--mod4-primary-channel: #0c79ff;\n\t\t\t\t--mod4-secondary-note: #3b2bae;\n\t\t\t\t--mod4-primary-note: #0c79ff;\n\t\t\t\t--disabled-note-secondary: #696969;\n\t\t\t\t}\n\t\t\t`,\n    \"cardboardbox classic\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #0f0700;\n--editor-background: #0f0700;\n--hover-preview: #75461d;\n--playhead: #75461d;\n--primary-text: #ddd;\n--secondary-text: #8e695b;\n--text-selection: #75461d;\n--box-selection-fill: rgba(117, 70, 29,0.5);\n--loop-accent: #75461d;\n--link-accent: #75461d;\n--ui-widget-background: #574a3e;\n--ui-widget-focus: #756453;\n--pitch-background: #361900;\n--tonic: #fdba9a;\n--fifth-note: #7f78d2;\n--pitch1-secondary-channel: #798566;\n--pitch1-primary-channel: #9dab86;\n--pitch1-secondary-note: #798566;\n--pitch1-primary-note: #9dab86;\n--pitch2-secondary-channel: #a6733d;\n--pitch2-primary-channel: #e6a157;\n--pitch2-secondary-note: #a6733d;\n--pitch2-primary-note: #e6a157;\n--pitch3-secondary-channel: #874c27;\n--pitch3-primary-channel: #eb8242;\n--pitch3-secondary-note: #874c27;\n--pitch3-primary-note: #eb8242;\n--pitch4-secondary-channel: #395866;\n--pitch4-primary-channel: #537d91;\n--pitch4-secondary-note: #395866;\n--pitch4-primary-note: #537d91;\n--pitch5-secondary-channel: #779992;\n--pitch5-primary-channel: #a4d1c8;\n--pitch5-secondary-note: #779992;\n--pitch5-primary-note: #a4d1c8;\n--pitch7-secondary-channel: #300707;\n--pitch7-primary-channel: #560d0d;\n--pitch7-secondary-note: #300707;\n--pitch7-primary-note: #560d0d;\n--pitch8-secondary-channel: #486312;\n--pitch8-primary-channel: #76a21e;\n--pitch8-secondary-note: #486312;\n--pitch8-primary-note: #76a21e;\n--pitch9-secondary-channel: #4a1242;\n--pitch9-primary-channel: #721b65;\n--pitch9-secondary-note: #4a1242;\n--pitch9-primary-note: #721b65;\n--pitch10-secondary-channel: #7a312d;\n--pitch10-primary-channel: #f8615a;\n--pitch10-secondary-note: #7a312d;\n--pitch10-primary-note: #f8615a;\n--noise1-secondary-channel: #5f6582;\n--noise1-primary-channel: #a6b1e1;\n--noise1-secondary-note: #5f6582;\n--noise1-primary-note: #a6b1e1;\n--noise4-secondary-channel: #6B3E8E;\n--noise5-secondary-channel: #996633;\n--noise5-primary-channel: #ddaa77;\n--noise5-secondary-note: #cc9966;\n--noise5-primary-note: #f0d0bb;\n--mod1-secondary-channel: #339955;\n\t\t\t\t}\n\t\t\t`,\n    \"blubox classic\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #040410;\n\t\t\t\t\t--editor-background: #040410;\n\t\t\t\t\t--secondary-text: #84859a;\n\t\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t\t--link-accent: #024ACA;\n\t\t\t\t\t--ui-widget-background: #393e4f;\n\t\t\t\t\t--ui-widget-focus: #6d6886;\n\t\t\t\t\t--pitch-background: #393e4f;\n\t\t\t\t\t--tonic: #725491;\n\t\t\t\t\t--fifth-note: #54547a;\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t\t\t--track-editor-bg-mod: #283560;\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t\t--indicator-primary: #9c64f7;\n\t\t\t\t\t--indicator-secondary: #393e4f;\n\t\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t\t--input-box-outline: #222;\n\t\t\t\t\t--mute-button-normal: #886eae;\n\t\t\t\t\t--pitch1-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch1-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch1-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch1-primary-note:      #024ACA;\n\t\t\t\t\t--pitch2-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch2-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch2-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch2-primary-note:      #024ACA;\n\t\t\t\t\t--pitch3-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch3-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch3-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch3-primary-note:      #024ACA;\n\t\t\t\t\t--pitch4-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch4-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch4-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch4-primary-note:      #024ACA;\n\t\t\t\t\t--pitch5-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch5-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch5-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch5-primary-note:      #024ACA;\n\t\t\t\t\t--pitch6-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch6-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch6-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch6-primary-note:      #024ACA;\n\t\t\t\t\t--pitch7-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch7-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch7-secondary-note:\t  #0A89FF;\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#024ACA;\n\t\t\t\t\t--pitch8-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch8-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch8-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch8-primary-note:      #024ACA;\n\t\t\t\t\t--pitch9-secondary-channel: #0A89FF;\n\t\t\t\t\t--pitch9-primary-channel:   #024ACA;\n\t\t\t\t\t--pitch9-secondary-note:    #0A89FF;\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#024ACA;\n\t\t\t\t\t--pitch10-secondary-channel:#0A89FF;\n\t\t\t\t\t--pitch10-primary-channel:  #024ACA;\n\t\t\t\t\t--pitch10-secondary-note:   #0A89FF;\n\t\t\t\t\t--pitch10-primary-note:     #024ACA;\n\t\t\t\t\t--noise1-secondary-channel: #0A89FF;\n\t\t\t\t\t--noise1-primary-channel:   #024ACA;\n\t\t\t\t\t--noise1-secondary-note:    #0A89FF;\n\t\t\t\t\t--noise1-primary-note:      #024ACA;\n\t\t\t\t\t--noise2-secondary-channel: #0A89FF;\n\t\t\t\t\t--noise2-primary-channel:   #024ACA;\n\t\t\t\t\t--noise2-secondary-note:    #0A89FF;\n\t\t\t\t\t--noise2-primary-note:      #024ACA;\n\t\t\t\t\t--noise3-secondary-channel: #0A89FF;\n\t\t\t\t\t--noise3-primary-channel:   #024ACA;\n\t\t\t\t\t--noise3-secondary-note:    #0A89FF;\n\t\t\t\t\t--noise3-primary-note:      #024ACA;\n\t\t\t\t\t--noise4-secondary-channel: #0A89FF;\n\t\t\t\t\t--noise4-primary-channel:   #024ACA;\n\t\t\t\t\t--noise4-secondary-note:    #0A89FF;\n\t\t\t\t\t--noise4-primary-note:      #024ACA;\n\t\t\t\t\t--mod1-secondary-channel:   #0A89FF;\n\t\t\t\t\t--mod1-primary-channel:     #024ACA;\n\t\t\t\t\t--mod1-secondary-note:      #0A89FF;\n\t\t\t\t\t--mod1-primary-note:        #024ACA;\n\t\t\t\t\t--mod2-secondary-channel:   #0A89FF;\n\t\t\t\t\t--mod2-primary-channel:     #024ACA;\n\t\t\t\t\t--mod2-secondary-note:      #0A89FF;\n\t\t\t\t\t--mod2-primary-note:        #024ACA;\n\t\t\t\t\t--mod3-secondary-channel:   #0A89FF;\n\t\t\t\t\t--mod3-primary-channel:     #024ACA;\n\t\t\t\t\t--mod3-secondary-note:      #0A89FF;\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #024ACA;\n\t\t\t\t\t--mod4-secondary-channel:   #0A89FF;\n\t\t\t\t\t--mod4-primary-channel:     #024ACA;\n\t\t\t\t\t--mod4-secondary-note:      #0A89FF;\n\t\t\t\t\t--mod4-primary-note:        #024ACA;\n\t\t\t\t\t--mod-label-primary:        #282840;\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t\t\t--mod-label-primary-text:   white;\n\t\t\t\t}\n\t\t\t`,\n    \"dogebox classic\": `\n\t\t\t\t:root {\n\t\t\t--page-margin: #0d0063;\n\t\t\t--editor-background: #0D0063;\n\t\t\t--pitch-background: #322c59;\n\t\t\t--tonic: #1c1933;\n\t\t\t--fifth-note: #7b74ad;\n\t\t\t--pitch-channel-limit: 6;\n\t\t\t--noise-channel-limit: 3;\n\t\t\t--pitch1-secondary-channel: #c7ac00;\n\t\t\t--pitch1-primary-channel: #fcf403;\n\t\t\t--pitch1-secondary-note: #c7c700;\n\t\t\t--pitch1-primary-note: #fcf403;\n\t\t\t--pitch2-secondary-channel: #9400b5;\n\t\t\t--pitch2-primary-channel: #ff00ee;\n\t\t\t--pitch2-secondary-note: #9400b5;\n\t\t\t--pitch2-primary-note: #ff00ee;\n\t\t\t--pitch3-secondary-channel: #b37466;\n\t\t\t--pitch3-primary-channel: #ffc6a1;\n\t\t\t--pitch3-secondary-note: #b37466;\n\t\t\t--pitch3-primary-note: #ffc6a1;\n\t\t\t--pitch7-secondary-channel: #c7ac00;\n\t\t\t--pitch7-primary-channel: #fcf403;\n\t\t\t--pitch7-secondary-note: #c7c700;\n\t\t\t--pitch7-primary-note: #fcf403;\n\t\t\t--pitch8-secondary-channel: #9400b5;\n\t\t\t--pitch8-primary-channel: #ff00ee;\n\t\t\t--pitch8-secondary-note: #9400b5;\n\t\t\t--pitch8-primary-note: #ff00ee;\n\t\t\t--pitch9-secondary-channel: #b37466;\n\t\t\t--pitch9-primary-channel: #ffc6a1;\n\t\t\t--pitch9-secondary-note: #b37466;\n\t\t\t--pitch9-primary-note: #ffc6a1;\n\t\t\t--pitch10-secondary-channel: #00a100;\n\t\t\t--pitch10-primary-channel: #50ff50;\n\t\t\t--pitch10-secondary-note: #00c700;\n\t\t\t--pitch10-primary-note: #a0ffa0;\n\t\t\t--noise1-secondary-channel: #95acad;\n\t\t\t--noise1-primary-channel: #cee9eb;\n\t\t\t--noise1-secondary-note: #95acad;\n\t\t\t--noise1-primary-note: #cee9eb;\n\t\t\t--noise4-secondary-channel: #7c9b42;\n\t\t\t--noise4-primary-channel:   #a5ff00;\n\t\t\t--noise4-secondary-note:    #7c9b42;\n\t\t\t--noise4-primary-note:      #a5ff00;\n\t\t\t--noise5-secondary-channel: #7c9b42;\n      \t \t--mod1-secondary-channel: #c7ac00;\n\t\t\t--mod1-primary-channel: #fcf403;\n\t\t\t--mod1-secondary-note: #c7c700;\n\t\t\t--mod1-primary-note: #fcf403;\n\t\t\t--mod2-secondary-channel: #9400b5;\n\t\t\t--mod2-primary-channel: #ff00ee;\n\t\t\t--mod2-secondary-note: #9400b5;\n\t\t\t--mod2-primary-note: #ff00ee;\n\t\t\t--mod3-secondary-channel: #b37466;\n\t\t\t--mod3-primary-channel: #ffc6a1;\n\t\t\t--mod3-secondary-note: #b37466;\n\t\t\t--mod3-primary-note: #ffc6a1;\n\t\t\t--mod4-secondary-channel: #00a100;\n\t\t\t--mod4-primary-channel: #50ff50;\n\t\t\t--mod4-secondary-note: #00c700;\n\t\t\t--mod4-primary-note: #a0ffa0;\n\t\t\t\t}\n\t\t\t`,\n    \"dogebox dark\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #0d0063;\n\t\t\t\t\t--editor-background: #0D0063;\n\t\t\t\t\t--pitch-background: #322c59;\n\t\t\t\t\t--tonic: #1c1933;\n\t\t\t\t\t--fifth-note: #7b74ad;\n\t\t\t\t\t--pitch1-secondary-channel: #c7ac00;\n\t\t\t\t\t--pitch1-primary-channel:   #fcf403;\n\t\t\t\t\t--pitch1-secondary-note:    #c7c700;\n\t\t\t\t\t--pitch1-primary-note:      #fcf403;\n\t\t\t\t\t--pitch2-secondary-channel: #9400b5;\n\t\t\t\t\t--pitch2-primary-channel:   #ff00ee;\n\t\t\t\t\t--pitch2-secondary-note:    #9400b5;\n\t\t\t\t\t--pitch2-primary-note:      #ff00ee;\n\t\t\t\t\t--pitch3-secondary-channel: #b37466;\n\t\t\t\t\t--pitch3-primary-channel:   #ffc6a1;\n\t\t\t\t\t--pitch3-secondary-note:    #b37466;\n\t\t\t\t\t--pitch3-primary-note:      #ffc6a1;\n\t\t\t\t\t--noise1-secondary-channel: #95acad;\n\t\t\t\t\t--noise1-primary-channel:   #cee9eb;\n\t\t\t\t\t--noise1-secondary-note:    #95acad;\n\t\t\t\t\t--noise1-primary-note:      #cee9eb;\n\t\t\t\t}\n\t\t\t`,\n    \"todbox dark mode\": `\n\t\t\t:root {\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t\t--hover-preview: #999999;\n\t\t\t\t\t--playhead: #999999;\n\t\t\t\t\t--primary-text: #999999;\n\t\t\t\t\t--secondary-text: #444444;\n\t\t\t\t--text-selection: #999999;\n\t\t\t\t\t--box-selection-fill: #999999;\n\t\t\t\t\t--loop-accent: #999999;\n\t\t\t\t\t--link-accent: #999999;\n\t\t\t\t\t--ui-widget-background: #222222;\n\t\t\t\t\t--ui-widget-focus: #444444;\n\t\t\t\t--pitch-background: #101010;\n\t\t\t\t\t--tonic: #404040;\n\t\t\t\t\t--fifth-note: #202020;\n\t\t\t\t\t--white-piano-key: #999999;\n\t\t\t\t\t--black-piano-key: #101010;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #004444;\n\t\t\t\t\t--pitch1-primary-channel:   #009999;\n\t\t\t\t\t--pitch1-secondary-note:    #004444;\n\t\t\t\t\t--pitch1-primary-note:      #009999;\n\t\t\t\t\t--pitch2-secondary-channel: #444400;\n\t\t\t\t\t--pitch2-primary-channel:   #999900;\n\t\t\t\t\t--pitch2-secondary-note:    #444400;\n\t\t\t\t\t--pitch2-primary-note:      #999900;\n\t\t\t\t\t--pitch3-secondary-channel: #443300;\n\t\t\t\t\t--pitch3-primary-channel:   #996600;\n\t\t\t\t\t--pitch3-secondary-note:    #443300;\n\t\t\t\t\t--pitch3-primary-note:      #996600;\n\t\t\t\t\t--pitch4-secondary-channel: #004400;\n\t\t\t\t\t--pitch4-primary-channel:   #009900;\n\t\t\t\t\t--pitch4-secondary-note:    #004400;\n\t\t\t\t\t--pitch4-primary-note:      #009900;\n\t\t\t\t\t--pitch5-secondary-channel: #440044;\n\t\t\t\t\t--pitch5-primary-channel:   #990099;\n\t\t\t\t\t--pitch5-secondary-note:    #440044;\n\t\t\t\t\t--pitch5-primary-note:      #990099;\n\t\t\t\t\t--pitch6-secondary-channel: #333344;\n\t\t\t\t\t--pitch6-primary-channel:   #666699;\n\t\t\t\t\t--pitch6-secondary-note:    #333344;\n\t\t\t\t\t--pitch6-primary-note:      #666699;\n\t\t\t\t\t--pitch7-secondary-channel: #444400;\n\t\t\t\t\t--pitch7-primary-channel:   #999900;\n\t\t\t\t\t--pitch7-secondary-note:    #444400;\n\t\t\t\t\t--pitch7-primary-note:      #999900;\n\t\t\t\t\t--pitch8-secondary-channel: #824E54;\n\t\t\t\t\t--pitch8-primary-channel:   #C4757E;\n\t\t\t\t\t--pitch8-secondary-note:    #824E54;\n\t\t\t\t\t--pitch8-primary-note:      #C4757E;\n\t\t\t\t\t--pitch9-secondary-channel: #006342;\n\t\t\t\t\t--pitch9-primary-channel:   #008E5F;\n\t\t\t\t\t--pitch9-secondary-note:    #006342;\n\t\t\t\t\t--pitch9-primary-note:      #008E5F;\n\t\t\t\t\t--pitch10-secondary-channel: #561291;\n\t\t\t\t\t--pitch10-primary-channel:   #7819C1;\n\t\t\t\t\t--pitch10-secondary-note:    #561291;\n\t\t\t\t\t--pitch10-primary-note:      #7819C1;\n\t\t\t\t\t--noise1-secondary-channel: #444444;\n\t\t\t\t\t--noise1-primary-channel:   #999999;\n\t\t\t\t\t--noise1-secondary-note:    #444444;\n\t\t\t\t\t--noise1-primary-note:      #999999;\n\t\t\t\t\t--noise2-secondary-channel: #443311;\n\t\t\t\t\t--noise2-primary-channel:   #996633;\n\t\t\t\t\t--noise2-secondary-note:    #443311;\n\t\t\t\t\t--noise2-primary-note:      #996633;\n\t\t\t\t\t--noise3-secondary-channel: #113344;\n\t\t\t\t\t--noise3-primary-channel:   #336699;\n\t\t\t\t\t--noise3-secondary-note:    #113344;\n\t\t\t\t\t--noise3-primary-note:      #336699;\n\t\t\t\t\t--noise4-secondary-channel: #444444;\n\t\t\t\t\t--noise4-primary-channel:   #999999;\n\t\t\t\t\t--noise4-secondary-note:    #444444;\n\t\t\t\t\t--noise4-primary-note:      #999999;\n\t\t\t\t\t--noise5-secondary-channel: #443311;\n\t\t\t\t\t--noise5-primary-channel:   #996633;\n\t\t\t\t\t--noise5-secondary-note:    #443311;\n\t\t\t\t\t--noise5-primary-note:      #996633;\n          --mod1-secondary-channel: #004444;\n\t\t\t\t\t--mod1-primary-channel:   #009999;\n\t\t\t\t\t--mod1-secondary-note:    #004444;\n\t\t\t\t\t--mod1-primary-note:      #009999;\n\t\t\t\t\t--mod2-secondary-channel: #444400;\n\t\t\t\t\t--mod2-primary-channel:   #999900;\n\t\t\t\t\t--mod2-secondary-note:    #444400;\n\t\t\t\t\t--mod2-primary-note:      #999900;\n\t\t\t\t\t--mod3-secondary-channel: #443300;\n\t\t\t\t\t--mod3-primary-channel:   #996600;\n\t\t\t\t\t--mod3-secondary-note:    #443300;\n\t\t\t\t\t--mod3-primary-note:      #996600;\n\t\t\t\t\t--mod4-secondary-channel: #004400;\n\t\t\t\t\t--mod4-primary-channel:   #009900;\n\t\t\t\t\t--mod4-secondary-note:    #004400;\n\t\t\t\t\t--mod4-primary-note:      #009900;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\t\t\t`,\n    \"mainbox 1.0\": `\n\t\t\t:root {\n\t\t\t\t--loop-accent: #2F1C40;\n\t\t\t\t--link-accent: #543873;\n\t\t\t\t--ui-widget-background: #2F1C40;\n\t\t\t\t--ui-widget-focus: #543873;\n\t\t\t\t--pitch-background: #2F1C40;\n\t\t\t\t--tonic: #42286D;\n\t\t\t\t--fifth-note: #37416B;\n\t\t\t\t--white-piano-key: #156CB6;\n\t\t\t\t--black-piano-key: #130D14;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t\t--pitch1-secondary-channel: #156C99;\n\t\t\t\t\t--pitch1-primary-channel:   #00CFDF;\n\t\t\t\t\t--pitch1-secondary-note:    #0080A8;\n\t\t\t\t\t--pitch1-primary-note:      #009FC6;\n\t\t\t\t\t--pitch2-secondary-channel: #AD923A;\n\t\t\t\t\t--pitch2-primary-channel:   #FFD552;\n\t\t\t\t\t--pitch2-secondary-note:    #C49736;\n\t\t\t\t\t--pitch2-primary-note:      #EFC742;\n\t\t\t\t\t--pitch3-secondary-channel: #7A401E;\n\t\t\t\t\t--pitch3-primary-channel:   #C14E30;\n\t\t\t\t\t--pitch3-secondary-note:    #89381B;\n\t\t\t\t\t--pitch3-primary-note:      #E15427;\n\t\t\t\t\t--pitch4-secondary-channel: #0B6030;\n\t\t\t\t\t--pitch4-primary-channel:   #00915C;\n\t\t\t\t\t--pitch4-secondary-note:    #004337;\n\t\t\t\t\t--pitch4-primary-note:      #00915E;\n\t\t\t\t\t--pitch5-secondary-channel: #543873;\n\t\t\t\t\t--pitch5-primary-channel:   #695B95;\n\t\t\t\t\t--pitch5-secondary-note:    #8188BE;\n\t\t\t\t\t--pitch5-primary-note:      #848ED8;\n\t\t\t\t\t--pitch6-secondary-channel: #585882;\n\t\t\t\t\t--pitch6-primary-channel:   #5A72DD;\n\t\t\t\t\t--pitch7-secondary-channel: #7D7C2E;\n\t\t\t\t\t--pitch7-primary-channel:   #B0C952;\n\t\t\t\t\t--pitch7-secondary-note:    #7D7C2E;\n\t\t\t\t\t--pitch7-primary-note:      #B0C952;\n\t\t\t\t\t--pitch8-secondary-channel: #7F426A;\n\t\t\t\t\t--pitch8-primary-channel:   #B75297;\n\t\t\t\t\t--pitch8-secondary-note:    #7F426A;\n\t\t\t\t\t--pitch8-primary-note:      #B75297;\n\t\t\t\t\t--pitch9-secondary-channel: #2A6B65;\n\t\t\t\t\t--pitch9-primary-channel:   #3BA590;\n\t\t\t\t\t--pitch9-secondary-note:    #2A6B65;\n\t\t\t\t\t--pitch9-primary-note:      #3BA590;\n\t\t\t\t\t--pitch10-secondary-channel: #713EA0;\n\t\t\t\t\t--pitch10-primary-channel:   #925EC9;\n\t\t\t\t\t--pitch10-secondary-note:    #713EA0;\n\t\t\t\t\t--pitch10-primary-note:      #925EC9;\n\t\t\t\t\t--noise1-secondary-channel: #6C6C8E;\n\t\t\t\t\t--noise1-primary-channel:   #8A7F96;\n\t\t\t\t\t--noise1-secondary-note:    #A1A3B7;\n\t\t\t\t\t--noise1-primary-note:      #DDBADD;\n\t\t\t\t\t--noise2-secondary-channel: #865E40;\n\t\t\t\t\t--noise2-secondary-note:    #C7B47A;\n\t\t\t\t\t--noise2-primary-note:      #CFC587;\n\t\t\t\t\t--noise3-secondary-channel: #7E7068;\n\t\t\t\t\t--noise3-primary-channel:   #B19998;\n\t\t\t\t\t--noise3-secondary-note:    #BAA6BC;\n\t\t\t\t\t--noise3-primary-note:      #EDDCEC;\n          --mod1-secondary-channel: #156C99;\n\t\t\t\t\t--mod1-primary-channel:   #00CFDF;\n\t\t\t\t\t--mod1-secondary-note:    #0080A8;\n\t\t\t\t\t--mod1-primary-note:      #009FC6;\n\t\t\t\t\t--mod2-secondary-channel: #AD923A;\n\t\t\t\t\t--mod2-primary-channel:   #FFD552;\n\t\t\t\t\t--mod2-secondary-note:    #C49736;\n\t\t\t\t\t--mod2-primary-note:      #EFC742;\n\t\t\t\t\t--mod3-secondary-channel: #7A401E;\n\t\t\t\t\t--mod3-primary-channel:   #C14E30;\n\t\t\t\t\t--mod3-secondary-note:    #89381B;\n\t\t\t\t\t--mod3-primary-note:      #E15427;\n\t\t\t\t\t--mod4-secondary-channel: #0B6030;\n\t\t\t\t\t--mod4-primary-channel:   #00915C;\n\t\t\t\t\t--mod4-secondary-note:    #004337;\n\t\t\t\t\t--mod4-primary-note:      #00915E;\n\t\t\t\t}\n\t\t\t`,\n    \"fogbox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #252525;\n\t\t\t\t--editor-background: #252525;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t--white-piano-key-text: #131200;\n\t\t\t\t--black-piano-key-text: #fff;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n    \"foxbox\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #ADD8E6;\n\t\t\t\t}\n\t\t\t`,\n    \"wackybox\": `\n\t\t\t\n\t\t\t:root {\n\t\t\t\t--page-margin: #050000;\n\t\t\t\t--editor-background: #050000;\n\t\t\t\t\t--pitch-channel-limit: 6;\n\t\t\t\t\t--noise-channel-limit: 3;\n\t\t\t\t}\n\n\t\t\t\t* {\n\t\t\t\t\tcursor: url(\"theme_resources/wackybox_cursor.png\"), auto !important;\n\t\t\t\t}\n\n\t\t\t`,\n    \"microbox\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #000000;\n\t\t\t\t\t--editor-background: #000000;\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t\t--secondary-text: #93B6AD;\n\t\t\t\t\t--text-selection: rgba(47,255,250,0.99);\n\t\t\t\t\t--box-selection-fill: #03B068;\n\t\t\t\t\t--loop-accent: #FF0061;\n\t\t\t\t\t--link-accent: #FFC800;\n\t\t\t\t\t--ui-widget-background: #38554E;\n\t\t\t\t\t--ui-widget-focus: #2A7E69;\n\t\t\t\t\t--pitch-background: #281F23;\n\t\t\t\t\t--tonic: #004634;\n\t\t\t\t\t--fifth-note: #463400;\n\t\t\t\t\t--white-piano-key: #edc;\n\t\t\t\t\t--black-piano-key: #456;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #333333;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #000000;\n\t\t\t\t\t--track-editor-bg-noise: #463400;\n\t\t\t\t\t--track-editor-bg-noise-dim: #000000;\n\t\t\t\t\t--track-editor-bg-mod: #004634;\n\t\t\t\t\t--track-editor-bg-mod-dim: #000000;\n\t\t\t\t\t--multiplicative-mod-slider: #FFC800;\n\t\t\t\t\t--overwriting-mod-slider: #00ffc0;\n\t\t\t\t\t--indicator-primary: #00ffc0;\n\t\t\t\t\t--indicator-secondary: #333333;\n\t\t\t\t\t--select2-opt-group: #2B2B2B;\n\t\t\t\t\t--input-box-outline: #69BFC6;\n\t\t\t\t\t--mute-button-normal: #00ffc0;\n\t\t\t\t\t--mute-button-mod: #FFC800;\n\t\t\t\t\t--mod-label-primary: #38554E;\n\t\t\t\t\t--mod-label-secondary-text: rgb(0, 43, 45);\n\t\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 0;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 0;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 0;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 192;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 192;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 192;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t}\n\t\t\t`,\n    \"paandorasbox\": `\n\t\t\t:root {\n\t\t\t --page-margin: #200000;\n\t\t\t  --editor-background: #200000;\n\t\t\t  --text-selection: #FF5100;\n\t\t\t  --loop-accent: #FF5100;\n\t\t\t  --link-accent: #0F0;\n\t\t\t  --ui-widget-background: #562334;\n\t\t\t  --ui-widget-focus: #6D1B36;\n\t\t\t  --pitch-background: #6D1B36;\n\t\t\t  --tonic: #FF5100;\n\t\t\t  --fifth-note: #00B6FF;\n\t\t\t  --track-editor-bg-pitch: #380C14;\n\t\t\t  --track-editor-bg-pitch-dim: #200000;\n\t\t\t  --track-editor-bg-noise: #233323;\n\t\t\t  --track-editor-bg-noise-dim: #101A0F;\n\t\t\t  --track-editor-bg-mod: #234C82;\n\t\t\t  --track-editor-bg-mod-dim: #0D1D33;\n\t\t\t  --indicator-primary: #FF5100;\n\t\t\t  --pitch1-secondary-channel: #00B200;\n\t\t\t  --pitch1-primary-channel: #0F0;\n\t\t\t  --pitch1-secondary-note: #00B200;\n\t\t\t  --pitch1-primary-note: #0F0;\n\t\t\t  --pitch2-secondary-channel: #00B282;\n\t\t\t  --pitch2-primary-channel: #00FFBF;\n\t\t\t  --pitch2-secondary-note: #00B282;\n\t\t\t  --pitch2-primary-note: #00FFBF;\n\t\t\t  --pitch3-secondary-channel: #00B2B2;\n\t\t\t  --pitch3-primary-channel: #0FF;\n\t\t\t  --pitch3-secondary-note: #00B2B2;\n\t\t\t  --pitch3-primary-note: #0FF;\n\t\t\t  --pitch4-secondary-channel: #2623B2;\n\t\t\t  --pitch4-primary-channel: #3631FF;\n\t\t\t  --pitch4-secondary-note: #2623B2;\n\t\t\t  --pitch4-primary-note: #3631FF;\n\t\t\t  --pitch5-secondary-channel: #7700B2;\n\t\t\t  --pitch5-primary-channel: #A0F;\n\t\t\t  --pitch5-secondary-note: #7700B2;\n\t\t\t  --pitch5-primary-note: #A0F;\n\t\t\t  --pitch6-secondary-channel: #B200B2;\n\t\t\t  --pitch6-primary-channel: #F0F;\n\t\t\t  --pitch6-secondary-note: #B200B2;\n\t\t\t  --pitch6-primary-note: #F0F;\n\t\t\t  --pitch7-secondary-channel: #B20000;\n\t\t\t  --pitch7-primary-channel: #F00;\n\t\t\t  --pitch7-secondary-note: #B20000;\n\t\t\t  --pitch7-primary-note: #F00;\n\t\t\t  --pitch8-secondary-channel: #00B200;\n\t\t\t  --pitch8-primary-channel: #0F0;\n\t\t\t  --pitch8-secondary-note: #00B200;\n\t\t\t  --pitch8-primary-note: #0F0;\n\t\t\t  --pitch9-secondary-channel: #00B282;\n\t\t\t  --pitch9-primary-channel: #0FF;\n\t\t\t  --pitch9-secondary-note: #00B282;\n\t\t\t  --pitch9-primary-note: #0FF;\n\t\t\t  --pitch10-secondary-channel: #0071B2;\n\t\t\t  --pitch10-primary-channel: #009EFF;\n\t\t\t  --pitch10-secondary-note: #0071B2;\n\t\t\t  --pitch10-primary-note: #009EFF;\n\t\t\t  --noise1-secondary-channel: #32B221;\n\t\t\t  --noise1-primary-channel: #44FF2F;\n\t\t\t  --noise1-secondary-note: #32B221;\n\t\t\t  --noise1-primary-note: #44FF2F;\n\t\t\t  --noise2-secondary-channel: #216FB2;\n\t\t\t  --noise2-primary-channel: #2F9DFF;\n\t\t\t  --noise2-secondary-note: #216FB2;\n\t\t\t  --noise2-primary-note: #2F9DFF;\n\t\t\t  --noise3-secondary-channel: #2623B2;\n\t\t\t  --noise3-primary-channel: #3631FF;\n\t\t\t  --noise3-secondary-note: #2623B2;\n\t\t\t  --noise3-primary-note: #3631FF;\n\t\t\t  --noise4-secondary-channel: #7223B2;\n\t\t\t  --noise4-primary-channel: #A531FF;\n\t\t\t  --noise4-secondary-note: #7223B2;\n\t\t\t  --noise4-primary-note: #A531FF;\n\t\t\t  --noise5-secondary-channel: #B2235A;\n\t\t\t  --noise5-primary-channel: #FF317E;\n\t\t\t  --noise5-secondary-note: #B2235A;\n\t\t\t  --noise5-primary-note: #FF317E;\n\t\t\t  --mod1-secondary-channel: #17B274;\n\t\t\t  --mod1-primary-channel: #21FFA8;\n\t\t\t  --mod1-secondary-note: #17B274;\n\t\t\t  --mod1-primary-note: #21FFA8;\n\t\t\t  --mod2-secondary-channel: #1783B2;\n\t\t\t  --mod2-primary-channel: #1FBAFF;\n\t\t\t  --mod2-secondary-note: #1783B2;\n\t\t\t  --mod2-primary-note: #1FBAFF;\n\t\t\t  --mod4-secondary-channel: #B20E6B;\n\t\t\t  --mod4-primary-channel: #FF1291;\n\t\t\t  --mod4-secondary-note: #B20E6B;\n\t\t\t  --mod4-primary-note: #FF1291;\n\t\t\t  --mod-label-primary: #994038;\n\t\t\t  --mod-label-secondary-text: #331512;\n\t\t\t  --mod-label-primary-text: #331512;\n\t\t\t  --disabled-note-primary: #994038;\n\t\t\t  --disabled-note-secondary: #331512;\n\t\t\t}\n\t\t\t`,\n    \"midbox\": `:root {\n\t\t\t--page-margin: #010a1e;\n\t\t\t--editor-background: #010a1e;\n\t\t\t--hover-preview: #dfe9fe;\n\t\t\t--playhead: #e7f5f6;\n\t\t\t--primary-text: #f0fdff;\n\t\t\t--secondary-text: #c4c7d7;\n\t\t\t--inverted-text: #0f0623;\n\t\t\t--text-selection: #3f0ab4;\n\t\t\t--box-selection-fill: #32afb3;\n\t\t\t--loop-accent: #1719ff;\n\t\t\t--link-accent: #83a6ed;\n\t\t\t--ui-widget-background: #222856;\n\t\t\t--ui-widget-focus: #21417c;\n\t\t\t--pitch-background: #10264a;\n\t\t\t--tonic: #0797ce;\n\t\t\t--fifth-note: #3e2fb5;\n\t\t\t--white-piano-key: #ebf3f4;\n\t\t\t--black-piano-key: #253353;\n\t\t\t--white-piano-key-text: black;\n\t\t\t--black-piano-key-text: white;\n\t\t\t--oscilloscope-line-L: #72dcfc;\n\t\t\t--oscilloscope-line-R: #304eff;\n\t\t\t--mod-title: #1b2fff;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #183b65; \n\t\t\t--track-editor-bg-pitch-dim: #1f2c3d;\n\t\t\t--track-editor-bg-noise: #2e196d;\n\t\t\t--track-editor-bg-noise-dim: #212038;\n\t\t\t--track-editor-bg-mod: #066433;\n\t\t\t--track-editor-bg-mod-dim: #152b1f;\n\t\t\t--multiplicative-mod-slider: #1242a4;\n\t\t\t--overwriting-mod-slider: #2218db;\n\t\t\t--indicator-primary: #1698d3;\n\t\t\t--indicator-secondary: #1b478e;\n\t\t\t--select2-opt-group: #312f6d;\n\t\t\t--input-box-outline: #788b96;\n\t\t\t--mute-button-normal: #1d34f2;\n\t\t\t--mute-button-mod: #06bad6;\n\t\t\t--mod-label-primary: #14383f;\n\t\t\t--mod-label-secondary-text: #1d7080;\n\t\t\t--mod-label-primary-text: #b7e9f2;\n\t\t\t--pitch-secondary-channel-hue: 190;\n\t\t\t--pitch-secondary-channel-hue-scale: 2.5;\n\t\t\t--pitch-secondary-channel-sat: 80;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 50;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 190;\n\t\t\t--pitch-primary-channel-hue-scale: 2.5;\n\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 76.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 190;\n\t\t\t--pitch-secondary-note-hue-scale: 2.5;\n\t\t\t--pitch-secondary-note-sat: 90;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 30;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 190;\n\t\t\t--pitch-primary-note-hue-scale: 2.5;\n\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 85;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 200;\n\t\t\t--noise-secondary-channel-hue-scale: 2.5;\n\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 200;\n\t\t\t--noise-primary-channel-hue-scale: 2.5;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 200;\n\t\t\t--noise-secondary-note-hue-scale: 2.5;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 200;\n\t\t\t--noise-primary-note-hue-scale: 2.5;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 140;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 90;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 55;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 140;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 100;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 85;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 140;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 95;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 50;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 140;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 100;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 90;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary:    #53527b;\n\t\t\t--disabled-note-secondary:  #1c1b30;\n\t\t}\n\t\t`,\n    \"dogebox2\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: #000015;\n\t\t\t\t--editor-background: #000015;\n\t\t\t\t--hover-preview: #00ffff;\n\t\t\t\t--playhead: #00ffff;\n\t\t\t\t--text-selection: rgba(255, 127, 80, 0.99);\n\t\t\t\t--box-selection-fill: rgba(255, 255, 255, 0.2);\n\t\t\t\t--loop-accent: #ff00ff;\n\t\t\t\t--link-accent: #00ffff;\n\t\t\t\t--ui-widget-background: #222222;\n\t\t\t\t--ui-widget-focus: #444444;\n\t\t\t\t--pitch-background: #222222;\n\t\t\t\t--tonic: #ab382c;\n\t\t\t\t--fifth-note: #2a76a8;\n\t\t\t\t--white-piano-key: #ffffff;\n\t\t\t\t--black-piano-key: #222222;\n\t\t\t\t--white-piano-key-text: #000000;\n\t\t\t\t--track-editor-bg-pitch: #222222;\n\t\t\t\t--track-editor-bg-pitch-dim: #111111;\n\t\t\t\t--track-editor-bg-noise: #222222;\n\t\t\t\t--track-editor-bg-noise-dim: #111111;\n\t\t\t\t--track-editor-bg-mod: #333333;\n\t\t\t\t--track-editor-bg-mod-dim: #111111;\n\t\t\t\t--multiplicative-mod-slider: #666666;\n\t\t\t\t--overwriting-mod-slider: #666666;\n\t\t\t\t--indicator-primary: #ff00ff;\n\t\t\t\t--indicator-secondary: #00ffff;\n\t\t\t\t--select2-opt-group: #333333;\n\t\t\t\t--input-box-outline: #444444;\n\t\t\t\t--mute-button-normal: #ff00ff;\n\t\t\t\t--mute-button-mod: #00ffff;\n\t\t\t\t--mod-label-primary: #282840;\n\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t--pitch1-secondary-channel: #bd9909;\n\t\t\t\t--pitch1-primary-channel: #fbff8e;\n\t\t\t\t--pitch1-secondary-note: #c79d3a;\n\t\t\t\t--pitch1-primary-note: #fdffb2;\n\t\t\t\t--pitch2-secondary-channel: #b86e0d;\n\t\t\t\t--pitch2-primary-channel: #ffb28e;\n\t\t\t\t--pitch2-secondary-note: #ba643a;\n\t\t\t\t--pitch2-primary-note: #fbac92;\n\t\t\t\t--pitch3-secondary-channel: #a81b08;\n\t\t\t\t--pitch3-primary-channel: #f56c67;\n\t\t\t\t--pitch3-secondary-note: #94352b;\n\t\t\t\t--pitch3-primary-note: #f56147;\n\t\t\t\t--pitch4-secondary-channel: #2a7722;\n\t\t\t\t--pitch4-primary-channel: #6ebf5e;\n\t\t\t\t--pitch4-secondary-note: #1c5c18;\n\t\t\t\t--pitch4-primary-note: #88cf82;\n\t\t\t\t--pitch5-secondary-channel: #8c8b3c;\n\t\t\t\t--pitch5-primary-channel: #c3c168;\n\t\t\t\t--pitch5-secondary-note: #747330;\n\t\t\t\t--pitch5-primary-note: #d4d394;\n\t\t\t\t--pitch6-secondary-channel: #3f9577;\n\t\t\t\t--pitch6-primary-channel: #6fc4b4;\n\t\t\t\t--pitch6-secondary-note: #2c6a5c;\n\t\t\t\t--pitch6-primary-note: #8fdad0;\n\t\t\t\t--pitch7-secondary-channel: #204a80;\n\t\t\t\t--pitch7-primary-channel: #6d9fc2;\n\t\t\t\t--pitch7-secondary-note: #132f5a;\n\t\t\t\t--pitch7-primary-note: #9dbed8;\n\t\t\t\t--pitch8-secondary-channel: #a531ad;\n\t\t\t\t--pitch8-primary-channel: #db68e3;\n\t\t\t\t--pitch8-secondary-note: #8d2f94;\n\t\t\t\t--pitch8-primary-note: #e66cbf;\n\t\t\t\t--pitch9-secondary-channel: #03a1a1;\n\t\t\t\t--pitch9-primary-channel: #52fffb;\n\t\t\t\t--pitch9-secondary-note: #34baba;\n\t\t\t\t--pitch9-primary-note: #60fbfb;\n\t\t\t\t--pitch10-secondary-channel: #4208a1;\n\t\t\t\t--pitch10-primary-channel: #9282ff;\n\t\t\t\t--pitch10-secondary-note: #5735b5;\n\t\t\t\t--pitch10-primary-note: #ab52fb;\n\t\t\t\t--noise1-secondary-channel: #2a5555;\n\t\t\t\t--noise1-primary-channel: #4c7878;\n\t\t\t\t--noise1-secondary-note: #6e9a9a;\n\t\t\t\t--noise1-primary-note: #90bcbc;\n\t\t\t\t--noise2-secondary-channel: #553355;\n\t\t\t\t--noise2-primary-channel: #775577;\n\t\t\t\t--noise2-secondary-note: #997799;\n\t\t\t\t--noise2-primary-note: #bbaa99;\n\t\t\t\t--noise3-secondary-channel: #2a6622;\n\t\t\t\t--noise3-primary-channel: #4c8844;\n\t\t\t\t--noise3-secondary-note: #6eaa66;\n\t\t\t\t--noise3-primary-note: #90cc88;\n\t\t\t\t--noise4-secondary-channel: #664400;\n\t\t\t\t--noise4-primary-channel: #886600;\n\t\t\t\t--noise4-secondary-note: #aa8800;\n\t\t\t\t--noise4-primary-note: #cccc00;\n\t\t\t\t--noise5-secondary-channel: #006633;\n\t\t\t\t--noise5-primary-channel: #008855;\n\t\t\t\t--noise5-secondary-note: #00aa77;\n\t\t\t\t--noise5-primary-note: #00cc99;\n\t\t\t\t--mod1-secondary-channel: #fe00ff;\n\t\t\t\t--mod1-primary-channel: #ff72ff;\n\t\t\t\t--mod1-secondary-note: #ff92ff;\n\t\t\t\t--mod1-primary-note: #ffb2fb;\n\t\t\t\t--mod2-secondary-channel: #00fe00;\n\t\t\t\t--mod2-primary-channel: #8eff8e;\n\t\t\t\t--mod2-secondary-note: #92ff92;\n\t\t\t\t--mod2-primary-note: #b2ffb2;\n\t\t\t\t--mod3-secondary-channel: #feff00;\n\t\t\t\t--mod3-primary-channel: #fffb8e;\n\t\t\t\t--mod3-secondary-note: #fffd92;\n\t\t\t\t--mod3-primary-note: #fffe92;\n\t\t\t\t--mod4-secondary-channel: #00fffe;\n\t\t\t\t--mod4-primary-channel: #82fffb;\n\t\t\t\t--mod4-secondary-note: #92ffff;\n\t\t\t\t--mod4-primary-note: #b2fffb;\n\t\t\t\t--disabled-note-primary: #c6c6c6;\n\t\t\t\t--disabled-note-secondary: #8c8c8c;\n\t\t\t\t--note-flash: #ffffff;\n\t\t\t\t--note-flash-secondary: #ffffff77;\n\t\t\t\t}`,\n    \"abyssbox classic\": `\n\t\t\t\t:root {\t\t\n\t\t\t\t--page-margin: #1e0915; \t\t\n\t\t\t\t--editor-background: #1e0915; \t\t\n\t\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t\t--secondary-text: #ffcedd; \t\t\n\t\t\t\t--box-selection-fill: #1e0915; \t\t\n\t\t\t\t--loop-accent: #873a51; \t\t\n\t\t\t\t--link-accent: #df88ff; \t\t\n\t\t\t\t--ui-widget-background: #581b3e; \t\t\n\t\t\t\t--ui-widget-focus: #762b4c; \t\t\n\t\t\t\t--pitch-background: #381d24; \t\t\n\t\t\t\t--tonic: #873a51; \t\t\n\t\t\t\t--fifth-note: #75001e; \t\t\n\t\t\t\t--white-piano-key: #cca5c7; \t\t\n\t\t\t\t--black-piano-key: #402f2f;\n\t\t\t\t--use-color-formula: true; \t\t\n\t\t\t\t--track-editor-bg-pitch: #571c40; \t\t\n\t\t\t\t--track-editor-bg-pitch-dim: #290d0d; \t\t\n\t\t\t\t--track-editor-bg-noise: #571131; \t\t\n\t\t\t\t--track-editor-bg-noise-dim: #330a28; \t\t\n\t\t\t\t--track-editor-bg-mod: #54083c; \t\t\n\t\t\t\t--track-editor-bg-mod-dim: #360426; \t\t\n\t\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\n\t\t\t\t--overwriting-mod-slider: #9e3470; \t\t\n\t\t\t\t--indicator-primary: #b3498f; \t\t\n\t\t\t\t--indicator-secondary: #541d40; \t\t\n\t\t\t\t--select2-opt-group: #4f191e; \t\t\n\t\t\t\t--input-box-outline: #18041a; \t\t\n\t\t\t\t--mute-button-normal: #dd5d94;\t \t\t\n\t\t\t\t--mute-button-mod: #ba364c; \t\t\n\t\t\t\t--mod-label-primary: #541625; \t\t\n\t\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \n\t\t\t\t--mod-label-primary-text: gray; \n\t\t\t\n\t\t\t\t--pitch-secondary-channel-hue: -80; \t\t\n\t\t\t\t--pitch-secondary-channel-hue-scale 0; \t\t\n\t\t\t\t--pitch-secondary-channel-sat: 43; \t\t\n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t\t--pitch-secondary-channel-lum: 40; \t\t\n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\t\n\t\t\t\t--pitch-primary-channel-hue: -53; \t\t\n\t\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t\t--pitch-primary-channel-sat: 75; \t\t\n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\t\n\t\t\t\t--pitch-secondary-note-hue: -34; \t\t\n\t\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t\t--pitch-secondary-note-lum: 25; \t\t\n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\t\n\t\t\t\t--pitch-primary-note-hue: -53; \t\t\n\t\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t\t--pitch-primary-note-sat: 100; \t\t\n\t\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t\t--pitch-primary-note-lum: 85.6; \t\t\n\t\t\t\t--pitch-primary-note-lum-scale: 0.025; \n\t\t\t\n\t\t\t\t--noise-secondary-channel-hue: 0; \t\t\n\t\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t\t--noise-secondary-channel-sat: 65; \t\t\n\t\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t\t--noise-secondary-channel-lum: 42; \t\t\n\t\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\t\n\t\t\t\t--noise-primary-channel-hue: 0; \t\t\n\t\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t\t--noise-primary-channel-sat: 100; \t\t\n\t\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t\t--noise-primary-channel-lum: 63.5; \t\t\n\t\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\t\n\t\t\t\t--noise-secondary-note-hue: 24; \t\t\n\t\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t\t--noise-secondary-note-sat: 100; \t\t\n\t\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t\t--noise-secondary-note-lum: 35; \t\t\n\t\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\t\n\t\t\t\t--noise-primary-note-hue: 24; \t\t\n\t\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t\t--noise-primary-note-sat: 100; \t\t\n\t\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\t\n\t\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t\t--mod-secondary-channel-sat: 100; \t\t\n\t\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t\t--mod-secondary-channel-lum: 20; \t\t\n\t\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\t\n\t\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t\t--mod-primary-channel-sat: 96; \t\t\n\t\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t\t--mod-primary-channel-lum: 50; \t\t\n\t\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\t\n\t\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t\t--mod-secondary-note-sat: 92; \t\t\n\t\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t\t--mod-secondary-note-lum: 45; \t\t\n\t\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\t\n\t\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t\t--mod-primary-note-sat: 96; \t\t\n\t\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t\t--mod-primary-note-lum: 85; \t\t\n\t\t\t\t--mod-primary-note-lum-scale: 0; \t\n\t\n\t\t\t\t--note-flash: #ffffff;\n\t\t\t\t--note-flash-secondary: #ffffff77;\n\t\t\t\t\n\t\t\t\t--oscilloscope-line-R: var(--ui-widget-background);\n\t\t\t\t--oscilloscope-line-L: var(--secondary-text);\n\t\t\t\t--text-spacing-icon: > ;\n\t\t\t\t--scrollbar-color: #bf2c5d;\n\t\t\t\t\n\t\t\t\t--file-page-symbol: url(\"theme_resources/icon-file.png\");\n\t\t\t\t--edit-pencil-symbol: url(\"theme_resources/icon-edit.png\");\n\t\t\t\t--preferences-gear-symbol: url(\"theme_resources/icon-preferences.png\");\n\t\t\t\t--instrument-copy-symbol: url(\"theme_resources/icon-copy.png\");\n\t\t\t\t--instrument-paste-symbol: url(\"theme_resources/icon-paste.png\");\n\t\t\t\t--play-symbol: url(\"theme_resources/icon-play.png\");\n\t\t\t\t--pause-symbol: url(\"theme_resources/icon-pause.png\");\n\t\t\t\t--record-symbol: url(\"theme_resources/icon-record.png\");\n\t\t\t\t--stop-symbol: url(\"theme_resources/icon-stop.png\");\n\t\t\t\t--prev-bar-symbol: url(\"theme_resources/icon-prev.png\");\n\t\t\t\t--next-bar-symbol: url(\"theme_resources/icon-next.png\");\n\t\t\t\t--muted-symbol: url(\"theme_resources/icon-speakerMuted.png\");\n\t\t\t\t--unmuted-symbol: url(\"theme_resources/icon-speaker.png\");\n\t\t\t\t--volume-symbol: url(\"theme_resources/icon-speaker.png\");\n\t\t\t\t--zoom-in-symbol: url(\"theme_resources/icon-zoomIn.png\");\n\t\t\t\t--zoom-out-symbol: url(\"theme_resources/icon-zoomOut.png\");\n\t\t\t\t--export-symbol: url(\"theme_resources/icon-export.png\");\n\t\t\t\t\t}\n\t\t\t* {\n\t\t\tcursor: url(\"theme_resources/abyssbox_cursor.png\"), auto;\n\t\t\t}\n\t\t\t\n\t\t\t\t@font-face {\n\t\t\t   font-family: \"AbyssType\";\n\t\t\t   src:\n\t\t\t\turl(\"theme_resources/abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t}\n\t\n\t\t\t\t/* sets background image */\n\t\t\t\tbody {\n\t\t\t\tbackground-image: url(\"theme_resources/stripesbg.gif\") !important;\n\t\t\t\tbackground-position: center;\n\t\t\t\tbackground-repeat: repeat;\n\t\n\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t}\n\t\n\t\t\t\t#text-content {\n\t\t\t\t\t\tborder-image-source: url(\"theme_resources/abyssbox_border.png\");\n\t\t\t\t\t\tborder-image-slice: 4 fill; \n\t\t\t\t\t   border-image-width: 8px; \n\t\t\t\t\tborder-image-repeat: stretch; \n\t\t\t\t\t\tpadding: 12px; \n\t\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t}\n\t\t\t\t#beepboxEditorContainer {\n\t\t\t\t\t\tborder-image-source: url(\"theme_resources/abyssbox_border.png\");\n\t\t\t\t\t\tborder-image-slice: 4 fill; \n\t\t\t\t\t   \tborder-image-width: 8px; \n\t\t\t\t\t\tborder-image-repeat: stretch;\n\t\t\t\t\t\tpadding: 12px;\n\t\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t\t}\n\t\t\t\t.beepboxEditor button,\n\t\t\t\tbutton.playButton,\n\t\t\t\tbutton.pauseButton, \n\t\t\t\tbutton.recordButton, \n\t\t\t\tbutton.stopButton,\n\t\t\t\tbutton.nextBarButton, \n\t\t\t\tbutton.prevBarButton, \n\t\t\t\tbutton.copyButton, \n\t\t\t\tbutton.pasteButton, \n\t\t\t\tbutton.exportInstrumentButton, \n\t\t\t\tbutton.importInstrumentButton, \n\t\t\t\t.beepboxEditor select, \n\t\t\t\t.beepboxEditor .select2-selection__rendered {\n\t\t\t\t\t\tborder-image-source: url(\"theme_resources/abyssbox_border.png\") !important;\n\t\t\t\t\t\tborder-image-slice: 4 fill !important; \n\t\t\t\t\t   border-image-width: 4px !important; \n\t\t\t\t\tborder-image-repeat: stretch !important;\n\t\t\t\t\t\tpadding: 4px !important; \n\t\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\n\t\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t}\n\t\n\t\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t\t--ui-widget-background: #1e0915 !important;\n\t\t\t\t\tborder-image-source:none !important;\n\t\t\t\t}\n\t\n\t\t\t\t\tselect.trackSelectBox {\n\t\t\t\t\t\tborder-image: none !important;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t@font-face {\n\t\t\t   font-family: \"AbyssType_small\";\n\t\t\t   src:\n\t\t\t\turl(\"theme_resources/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t}\n\t\n\t\t\t\thtml {\n\t\t\t\t\tfont-family: 'AbyssType';\n\t\t\t\t}\n\t\n\t\t\t\tdiv.channelBoxLabel {\n\t\t\t\t\tfont-family: 'AbyssType_small' !important;\n\t\t\t\t}\n\t\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"text\"],\n\t\t\t\t.beepboxEditor input[type=\"number\"]\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\n\t\t\t\tdiv.selectRow span {\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\n\t\t\t\t`,\n    \"abyssbox light\": `\n\t\t\t:root { \t\t\n\t\t\t\t--page-margin: #e0adbc; \t\t\n\t\t\t\t--editor-background: #e0adbc; \t\t\n\t\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\n\t\t\t\t--primary-text: #6110d9; \t\t\n\t\t\t\t--secondary-text: #cc1338;\t\n\t\t\t\t--inverted-text:  #e8bcc9;\t \t\t\n\t\t\t\t--box-selection-fill: #bf2c5d; \t\t\n\t\t\t\t--loop-accent: #8c346a; \t\t\n\t\t\t\t--link-accent: #8c346a; \t\t\n\t\t\t\t--ui-widget-background: #f5e9f0;\t\t\n\t\t\t\t--ui-widget-focus: #f5e9f0; \t\t\n\t\t\t\t--pitch-background: #eddadf; \t\t\n\t\t\t\t--tonic: #f5f0f1; \t\t\n\t\t\t\t--fifth-note: #ffb5c9; \t\t\n\t\t\t\t--white-piano-key: #cca5c7; \t\t\n\t\t\t\t--black-piano-key: #402f2f;\n\t\t\t\t--use-color-formula: true; \t\t\n\t\t\t\t--track-editor-bg-pitch: #edbecc; \t\t\n\t\t\t\t--track-editor-bg-pitch-dim: #e0adbc; \t\t\n\t\t\t\t--track-editor-bg-noise: #edbecc; \t\t\n\t\t\t\t--track-editor-bg-noise-dim: #e0adbc; \t\t\n\t\t\t\t--track-editor-bg-mod: #edbecc; \t\t\n\t\t\t\t--track-editor-bg-mod-dim: #e0adbc; \t\t\n\t\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\n\t\t\t\t--overwriting-mod-slider: #9e3470; \t\t\n\t\t\t\t--indicator-primary: #b3498f; \t\t\n\t\t\t\t--indicator-secondary: #541d40; \t\t\n\t\t\t\t--select2-opt-group: #4f191e; \t\t\n\t\t\t\t--input-box-outline: #18041a; \t\t\n\t\t\t\t--mute-button-normal: #dd5d94;\t \t\t\n\t\t\t\t--mute-button-mod: #ba364c; \t\t\n\t\t\t\t--mod-label-primary: #541625; \t\t\n\t\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \n\t\t\t\t--mod-label-primary-text: gray;\n\t\t\t\t--mod-title: #cc1338; \n\t\t\t\n\t\t\t\t--pitch-secondary-channel-hue: -80; \t\t\n\t\t\t\t--pitch-secondary-channel-hue-scale 0; \t\t\n\t\t\t\t--pitch-secondary-channel-sat: 255; \t\t\n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\n\t\t\t\t--pitch-secondary-channel-lum: 30; \t\t\n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \n\t\t\t\n\t\t\t\t--pitch-primary-channel-hue: -53; \t\t\n\t\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\n\t\t\t\t--pitch-primary-channel-sat: 255; \t\t\n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\n\t\t\t\t--pitch-primary-channel-lum: 60; \t\t\n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\n\t\t\n\t\t\t\t--pitch-secondary-note-hue: -34; \t\t\n\t\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\n\t\t\t\t--pitch-secondary-note-sat: 255; \t\t\n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\n\t\t\t\t--pitch-secondary-note-lum: 30; \t\t\n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05; \n\t\t\t\n\t\t\t\t--pitch-primary-note-hue: -53; \t\t\n\t\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\n\t\t\t\t--pitch-primary-note-sat: 255; \t\t\n\t\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\n\t\t\t\t--pitch-primary-note-lum: 60; \t\t\n\t\t\t\t--pitch-primary-note-lum-scale: 0.025; \n\t\t\t\n\t\t\t\t--noise-secondary-channel-hue: 0; \t\t\n\t\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\n\t\t\t\t--noise-secondary-channel-sat: 255; \t\t\n\t\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\n\t\t\t\t--noise-secondary-channel-lum: 30; \t\t\n\t\t\t\t--noise-secondary-channel-lum-scale: 0; \n\t\t\t\n\t\t\t\t--noise-primary-channel-hue: 0; \t\t\n\t\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\n\t\t\t\t--noise-primary-channel-sat: 255; \t\t\n\t\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\n\t\t\t\t--noise-primary-channel-lum: 60; \t\t\n\t\t\t\t--noise-primary-channel-lum-scale: 0; \n\t\t\t\n\t\t\t\t--noise-secondary-note-hue: 24; \t\t\n\t\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\n\t\t\t\t--noise-secondary-note-sat: 255; \t\t\n\t\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\n\t\t\t\t--noise-secondary-note-lum: 30; \t\t\n\t\t\t\t--noise-secondary-note-lum-scale: 0; \t\n\t\t\n\t\t\t\t--noise-primary-note-hue: 24; \t\t\n\t\t\t\t--noise-primary-note-hue-scale: 2; \t\t\n\t\t\t\t--noise-primary-note-sat: 255; \t\t\n\t\t\t\t--noise-primary-note-sat-scale: 1; \t\t\n\t\t\t\t--noise-primary-note-lum: 60; \t\t\n\t\t\t\t--noise-primary-note-lum-scale: 1; \t\n\t\t\n\t\t\t\t--mod-secondary-channel-hue: 55; \t\t\n\t\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\n\t\t\t\t--mod-secondary-channel-sat: 255; \t\t\n\t\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\n\t\t\t\t--mod-secondary-channel-lum: 30; \t\t\n\t\t\t\t--mod-secondary-channel-lum-scale: 0; \n\t\t\t\n\t\t\t\t--mod-primary-channel-hue: 55; \t\t\n\t\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\n\t\t\t\t--mod-primary-channel-sat: 255; \t\t\n\t\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\n\t\t\t\t--mod-primary-channel-lum: 60; \t\t\n\t\t\t\t--mod-primary-channel-lum-scale: 0; \n\t\t\t\n\t\t\t\t--mod-secondary-note-hue: 55; \t\t\n\t\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\n\t\t\t\t--mod-secondary-note-sat: 255; \t\t\n\t\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\n\t\t\t\t--mod-secondary-note-lum: 30; \t\t\n\t\t\t\t--mod-secondary-note-lum-scale: 0; \n\t\t\t\n\t\t\t\t--mod-primary-note-hue: 55; \t\t\n\t\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\n\t\t\t\t--mod-primary-note-sat: 255; \t\t\n\t\t\t\t--mod-primary-note-sat-scale: 0; \t\t\n\t\t\t\t--mod-primary-note-lum: 60; \t\t\n\t\t\t\t--mod-primary-note-lum-scale: 0; \n\n\t\t\t\t--note-flash: #ffffff;\n\t\t\t\t--note-flash-secondary: #ffffff77;\n\n\t\t\t\t--oscilloscope-line-R: var(--ui-widget-background);\n\t\t\t\t--oscilloscope-line-L: var(--secondary-text);\n\t\t\t\t--text-spacing-icon: > ;\n\t\t\t\t--scrollbar-color: #bf2c5d;\n\n\t\t\t\t--file-page-symbol: url(\"theme_resources/icon-file.png\");\n\t\t\t\t--edit-pencil-symbol: url(\"theme_resources/icon-edit.png\");\n\t\t\t\t--preferences-gear-symbol: url(\"theme_resources/icon-preferences.png\");\n\t\t\t\t--instrument-copy-symbol: url(\"theme_resources/icon-copy.png\");\n\t\t\t\t--instrument-paste-symbol: url(\"theme_resources/icon-paste.png\");\n\t\t\t\t--play-symbol: url(\"theme_resources/icon-play.png\");\n\t\t\t\t--pause-symbol: url(\"theme_resources/icon-pause.png\");\n\t\t\t\t--record-symbol: url(\"theme_resources/icon-record.png\");\n\t\t\t\t--stop-symbol: url(\"theme_resources/icon-stop.png\");\n\t\t\t\t--prev-bar-symbol: url(\"theme_resources/icon-prev.png\");\n\t\t\t\t--next-bar-symbol: url(\"theme_resources/icon-next.png\");\n\t\t\t\t--muted-symbol: url(\"theme_resources/icon-speakerMuted.png\");\n\t\t\t\t--unmuted-symbol: url(\"theme_resources/icon-speaker.png\");\n\t\t\t\t--volume-symbol: url(\"theme_resources/icon-speaker.png\");\n\t\t\t\t--zoom-in-symbol: url(\"theme_resources/icon-zoomIn.png\");\n\t\t\t\t--zoom-out-symbol: url(\"theme_resources/icon-zoomOut.png\");\n\t\t\t\t--export-symbol: url(\"theme_resources/icon-export.png\");\n\t\t\t}\n\t\t\t\t\t/* sets background image */\n\t\t\t\t\tbody {\n\t\t\t\t\tbackground-image: url(\"theme_resources/stripesbg_light.gif\") !important;\n\t\t\t\t\tbackground-position: center;\n\t\t\t\t\tbackground-repeat: repeat;\n\t\t\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t\t}\t\t\n\t\t\t\t#text-content {\n\t\t\t\t\t\tborder-image-source: url(\"theme_resources/abyssbox_border_light.png\");\n\t\t\t\t\t\tborder-image-slice: 4 fill; \n\t\t\t\t\t   border-image-width: 8px; \n\t\t\t\t\tborder-image-repeat: stretch; \n\t\t\t\t\t\tpadding: 12px; \n\t\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\t\t\t}\n\t\t\t\t#beepboxEditorContainer {\n\t\t\t\t\t\tborder-image-source: url(\"theme_resources/abyssbox_border_light.png\");\n\t\t\t\t\t\tborder-image-slice: 4 fill; \n\t\t\t\t\t   border-image-width: 8px; \n\t\t\t\t\tborder-image-repeat: stretch;\n\t\t\t\t\t\tpadding: 12px;\n\t\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \n\t\t\t\t\t}\n\t\t\t\t\t.beepboxEditor button,\n\t\t\t\t\tbutton.playButton,\n\t\t\t\t\tbutton.pauseButton, \n\t\t\t\t\tbutton.recordButton, \n\t\t\t\t\tbutton.stopButton,\n\t\t\t\t\tbutton.nextBarButton, \n\t\t\t\t\tbutton.prevBarButton, \n\t\t\t\t\tbutton.copyButton, \n\t\t\t\t\tbutton.pasteButton, \n\t\t\t\t\tbutton.exportInstrumentButton, \n\t\t\t\t\tbutton.importInstrumentButton, \n\t\t\t\t\t.beepboxEditor select, \n\t\t\t\t\t.beepboxEditor .select2-selection__rendered {\n\t\t\t\t\t\t\tborder-image-source: url(\"theme_resources/abyssbox_border_light.png\") !important;\n\t\t\t\t\t\t\tborder-image-slice: 4 fill !important; \n\t\t\t\t\t\t   border-image-width: 4px !important; \n\t\t\t\t\t\tborder-image-repeat: stretch !important;\n\t\t\t\t\t\t\tpadding: 4px !important; \n\t\t\n\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\n\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\n\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\n\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\n\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\n\t\t\n\t\t\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\n\t\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\n\t\t\t\t\t\tborder-image-source:none !important;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tselect.trackSelectBox {\n\t\t\t\t\t\tborder-image: none !important;\n\t\t\t\t\t}\n\t\n\t\t\t/* sets cursor */ \n\t\t\t* {\n\t\t\tcursor: url(\"theme_resources/abyssbox_cursor.png\"), auto !important;\n\t\t\t}\n\t\t\t\t@font-face {\n\t\t\t   font-family: \"AbyssType\";\n\t\t\t   src:\n\t\t\t\turl(\"theme_resources/abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t}\n\t\n\t\t\t\t@font-face {\n\t\t\t   font-family: \"AbyssType_small\";\n\t\t\t   src:\n\t\t\t\turl(\"theme_resources/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\n\t\t\t\t}\n\t\n\t\t\t\thtml {\n\t\t\t\tfont-family: 'AbyssType';\n\t\t\t\t}\n\t\t\t\tdiv.channelBoxLabel {\n\t\t\t\t\tfont-family: 'AbyssType_small' !important;\n\t\t\t\t}\n\t\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"text\"],\n\t\t\t\t.beepboxEditor input[type=\"number\"]\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\t\t\t \n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\n\t\t\t\t{\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\n\t\t\t\tdiv.selectRow span {\n\t\t\t\t\tcursor: url(\"theme_resources/abyssbox_cursor_hand.png\"), pointer !important;\n\t\t\t\t}\n\t\n\t\t\t\t`,\n    \"slarmoosbox\": `\n\t\t:root {\n\t\t\t--page-margin: #14051a;\n\t\t\t--editor-background: #14051a;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: #71eee5;\n\t\t\t--secondary-text: #3abbb2;\n\t\t\t--inverted-text: #13695e;\n\t\t\t--box-selection-fill: #36c71c;\n\t\t\t--loop-accent: #36c71c;\n\t\t\t--link-accent: white;\n\t\t\t--ui-widget-background: #183d05;\n\t\t\t--ui-widget-focus: #247d0d;\n\t\t\t--pitch-background: #2e0e51;\n\t\t\t--tonic: #247d0d;\n\t\t\t--fifth-note: #3abbb2;\n\t\t\t--white-piano-key: #ffffff;\n\t\t\t--black-piano-key: #061705;\n\t\t\t--white-piano-key-text: #061705;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #09382b;\n\t\t\t--track-editor-bg-pitch-dim: #14051a;\n\t\t\t--track-editor-bg-noise: #40400b;\n\t\t\t--track-editor-bg-noise-dim: #14051a;\n\t\t\t--track-editor-bg-mod: #0a2c08;\n\t\t\t--track-editor-bg-mod-dim: #14051a;\n\t\t\t--multiplicative-mod-slider: #3abb22;\n\t\t\t--overwriting-mod-slider: #71eee5;\n\t\t\t--indicator-primary: #a773e5;\n\t\t\t--indicator-secondary: #4c1c89;\n\t\t\t--select2-opt-group: #183d05;\n\t\t\t--input-box-outline: #18040a;\n\t\t\t--mute-button-normal: #36c71c;\n\t\t\t--mute-button-mod: #a773e5;\n\t\t\t--mod-label-primary: #a773e5;\n\t\t\t--mod-label-secondary-text: #6b29bf;\n\t\t\t--mod-label-primary-text: #14051a;\n\t\t\t--mod-title: #247d1d;\n\t\t\t--pitch-secondary-channel-hue: 100;\n\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t--pitch-secondary-channel-sat: 100.0;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.15;\n\t\t\t--pitch-secondary-channel-lum: 60.0;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 100;\n\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t--pitch-primary-channel-sat-scale: 0.15;\n\t\t\t--pitch-primary-channel-lum: 75.0;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 100;\n\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t--pitch-secondary-note-sat: 95.0;\n\t\t\t--pitch-secondary-note-sat-scale: 0.15;\n\t\t\t--pitch-secondary-note-lum: 40;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 100;\n\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t--pitch-primary-note-sat-scale: 0.15;\n\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 65;\n\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t--noise-secondary-channel-sat: 55;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 65;\n\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t--noise-primary-channel-sat: 66;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 65;\n\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t--noise-secondary-note-sat: 66;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 65;\n\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t--noise-primary-note-sat: 70;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 192;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 192;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 192;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 192;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 96;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 85;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--oscilloscope-line-R: white;\n\t\t\t--oscilloscope-line-L: var(--secondary-text);\n\t\t}`,\n    \"azur lane\": `\n\t\t:root {\n\t\t\t--page-margin: #19337e;\n\t\t\t--editor-background: #000333cf;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: #9af9ff;\n\t\t\t--secondary-text: #4072dd;\n\t\t\t--box-selection-fill: #044b94;\n\t\t\t--loop-accent: #950d0d;\n\t\t\t--link-accent: #0072ff;\n\t\t\t--ui-widget-background: #255bb3;\n\t\t\t--ui-widget-focus: #757575;\n\t\t\t--pitch-background: #20468b73;\n\t\t\t--tonic: #c9c9c9;\n\t\t\t--fifth-note: #731d1d;\n\t\t\t--white-piano-key: #eee;\n\t\t\t--black-piano-key: #000;\n\t\t\t--track-editor-bg-pitch: #535a73;\n\t\t\t--track-editor-bg-pitch-dim: #353643;\n\t\t\t--track-editor-bg-noise: #770000;\n\t\t\t--track-editor-bg-noise-dim: #430000;\n\t\t\t--track-editor-bg-mod: #5d1d06;\n\t\t\t--track-editor-bg-mod-dim: #270000;\n\t\t\t--multiplicative-mod-slider: #bb0000;\n\t\t\t--overwriting-mod-slider: #ad0000;\n\t\t\t--indicator-primary: #9c64f7;\n\t\t\t--indicator-secondary: #393e4f;\n\t\t\t--select2-opt-group: #5d576f;\n\t\t\t--input-box-outline: #002957;\n\t\t\t--mute-button-normal: #ffffff;\n\t\t\t--mute-button-mod: #4f4f4f;\n\t\t\t--mod-label-primary: #531313;\n\t\t\t--pitch1-secondary-channel: #80858d;\n\t\t  --pitch1-primary-channel: #f2f7ff;\n\t\t  --pitch1-secondary-note: #80858d;\n\t\t  --pitch1-primary-note: #f2f7ff;\n\t\t  --pitch2-secondary-channel: #7392ad;\n\t\t  --pitch2-primary-channel: #a8d6ff;\n\t\t  --pitch2-secondary-note: #7392ad;\n\t\t  --pitch2-primary-note: #a8d6ff;\n\t\t  --pitch3-secondary-channel: #4b7eaa;\n\t\t  --pitch3-primary-channel: #71bdff;\n\t\t  --pitch3-secondary-note: #4b7eaa;\n\t\t  --pitch3-primary-note: #71bdff;\n\t\t  --pitch4-secondary-channel: #3594b1;\n\t\t  --pitch4-primary-channel: #48d4ff;\n\t\t  --pitch4-secondary-note: #3594b1;\n\t\t  --pitch4-primary-note: #48d4ff;\n\t\t  --pitch5-secondary-channel: #1b98b1;\n\t\t  --pitch5-primary-channel: #30f1ff;\n\t\t  --pitch5-secondary-note: #1b98b1;\n\t\t  --pitch5-primary-note: #30f1ff;\n\t\t  --pitch6-secondary-channel: #9e0000;\n\t\t  --pitch6-primary-channel: #db0000;\n\t\t  --pitch6-secondary-note: #9e0000;\n\t\t  --pitch6-primary-note: #db0000;\n\t\t  --pitch7-secondary-channel: #7c1717;\n\t\t  --pitch7-primary-channel: #9e0000;\n\t\t  --pitch7-secondary-note: #7c1717;\n\t\t  --pitch7-primary-note: #9e0000;\n\t\t  --pitch8-secondary-channel: #5c1f1f;\n\t\t  --pitch8-primary-channel: #7c1717;\n\t\t  --pitch8-secondary-note: #5c1f1f;\n\t\t  --pitch8-primary-note: #7c1717;\n\t\t  --pitch9-secondary-channel: #3e2020;\n\t\t  --pitch9-primary-channel: #5c1f1f;\n\t\t  --pitch9-secondary-note: #3e2020;\n\t\t  --pitch9-primary-note: #5c1f1f;\n\t\t  --pitch10-secondary-channel: #2f1c1c;\n\t\t  --pitch10-primary-channel: #5c1f1f;\n\t\t  --pitch10-secondary-note: #2f1c1c;\n\t\t  --pitch10-primary-note: #5c1f1f;\n\t\t  --noise1-secondary-channel: #828282;\n\t\t  --noise1-primary-channel: #cacaca;\n\t\t  --noise1-secondary-note: #828282;\n\t\t  --noise1-primary-note: #cacaca;\n\t\t  --noise2-secondary-channel: #2f8baf;\n\t\t  --noise2-primary-channel: #3de2ff;\n\t\t  --noise2-secondary-note: #2f8baf;\n\t\t  --noise2-primary-note: #3de2ff;\n\t\t  --noise3-secondary-channel: #6f50b1;\n\t\t  --noise3-primary-channel: #8567ff;\n\t\t  --noise3-secondary-note: #6f50b1;\n\t\t  --noise3-primary-note: #8567ff;\n\t\t  --noise4-secondary-channel: #d38900;\n\t\t  --noise4-primary-channel: #ffb500;\n\t\t  --noise4-secondary-note: #d38900;\n\t\t  --noise4-primary-note: #ffb500;\n\t\t  --noise5-secondary-channel: #af0008;\n\t\t  --noise5-primary-channel: #00d70e;\n\t\t  --noise5-secondary-note: #29b700;\n\t\t  --noise5-primary-note: #00f7ff;\n\t\t  --mod1-secondary-channel: #9d5bb9;\n\t\t  --mod1-primary-channel: #e16bff;\n\t\t  --mod1-secondary-note: #3a3ea4;\n\t\t  --mod1-primary-note: #fff;\n\t\t  --mod2-secondary-channel: #3a8d58;\n\t\t  --mod2-primary-channel: #42ffff;\n\t\t  --mod2-secondary-note: #3a8d58;\n\t\t  --mod2-primary-note: #42ffff;\n\t\t  --mod3-secondary-channel: #af6c00;\n\t\t  --mod3-primary-channel: #fa0;\n\t\t  --mod3-secondary-note: #0001a2;\n\t\t  --mod3-primary-note: #970000;\n\t\t  --mod4-secondary-channel: #d3d3d3;\n\t\t  --mod4-primary-channel: #759bff;\n\t\t  --mod4-secondary-note: #a00000;\n\t\t  --mod4-primary-note: #fff;\n\t\t  --disabled-note-primary: #3a3a3a;\n\t\t  --disabled-note-secondary: #000;\n\t\t\t}\n\t\t/* replaces hotdog with an image of the girls using the same scratch sprites from the 404 page*/\n\t\t#Hotdog {\n\t\t\tdisplay: inline !important;\n\t\t\tcontent: url(\"theme_resources/AzurLaneThemeStarterSquad.png\") !important;\n\t\t\twidth: 75%;\n\t\t\theight: 75%;\n\t\t\ttext-align: center;\n\t\t\tmargin-top: 25px;\n\t\t}\n\t\t/* sets cursor */\n\t\t* {\n\t\tcursor: url(\"theme_resources/AzurLaneThemeMouse.png\"), auto !important;\n\t\t}\n\t\t/* sets background image */\n\t\tbody {\n\t\tbackground-image: url(\"theme_resources/AzurLaneThemeMemoryTaskBackground.png\") !important;\n\t\tbackground-size: cover;\n\t\tbackground-position: center;\n\t\tbackground-repeat: no-repeat;\n\t\t\t}\n\t\t\t/* make editor background transparent */\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\n\t\tbackground: #0400257d !important;\n\t\t}\n\t\t\t#text-content > section > h1 > font {\n\t\tdisplay: none;\n\t\t}\n\t\t#text-content > section > h1 {\n\t\tmargin: auto;\n\t\tcontent: url(\"theme_resources/AzurLaneThemeLogo.png\");\n\t\t}\n\t\t.promptContainerBG::before {\n\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\n\t\t}\n\t}`,\n    \"custom\": `${localStorage.getItem(\"customColors\") || `:root {  }`}`,\n};\nColorConfig.pageMargin = \"var(--page-margin, black)\";\nColorConfig.editorBackground = \"var(--editor-background, black)\";\nColorConfig.hoverPreview = \"var(--hover-preview, white)\";\nColorConfig.playhead = \"var(--playhead, white)\";\nColorConfig.primaryText = \"var(--primary-text, white)\";\nColorConfig.secondaryText = \"var(--secondary-text, #999)\";\nColorConfig.invertedText = \"var(--inverted-text, black)\";\nColorConfig.textSelection = \"var(--text-selection, rgba(119,68,255,0.99))\";\nColorConfig.boxSelectionFill = \"var(--box-selection-fill, rgba(255,255,255,0.2))\";\nColorConfig.loopAccent = \"var(--loop-accent, #74f)\";\nColorConfig.linkAccent = \"var(--link-accent, #98f)\";\nColorConfig.uiWidgetBackground = \"var(--ui-widget-background, #444)\";\nColorConfig.uiWidgetFocus = \"var(--ui-widget-focus, #777)\";\nColorConfig.pitchBackground = \"var(--pitch-background, #444)\";\nColorConfig.tonic = \"var(--tonic, #864)\";\nColorConfig.fifthNote = \"var(--fifth-note, #468)\";\nColorConfig.whitePianoKey = \"var(--white-piano-key, #bbb)\";\nColorConfig.blackPianoKey = \"var(--black-piano-key, #444)\";\nColorConfig.whitePianoKeyText = \"var(--white-piano-key-text, #131200)\";\nColorConfig.blackPianoKeyText = \"var(--black-piano-key-text, #fff)\";\nColorConfig.useColorFormula = \"var(--use-color-formula, false)\";\nColorConfig.pitchSecondaryChannelHue = \"var(--pitch-secondary-channel-hue)\";\nColorConfig.pitchSecondaryChannelHueScale = \"var(--pitch-secondary-channel-hue-scale)\";\nColorConfig.pitchSecondaryChannelSat = \"var(--pitch-secondary-channel-sat)\";\nColorConfig.pitchSecondaryChannelSatScale = \"var(--pitch-secondary-channel-sat-scale)\";\nColorConfig.pitchSecondaryChannelLum = \"var(--pitch-secondary-channel-lum)\";\nColorConfig.pitchSecondaryChannelLumScale = \"var(--pitch-secondary-channel-lum-scale)\";\nColorConfig.pitchPrimaryChannelHue = \"var(--pitch-primary-channel-hue)\";\nColorConfig.pitchPrimaryChannelHueScale = \"var(--pitch-primary-channel-hue-scale)\";\nColorConfig.pitchPrimaryChannelSat = \"var(--pitch-primary-channel-sat)\";\nColorConfig.pitchPrimaryChannelSatScale = \"var(--pitch-primary-channel-sat-scale)\";\nColorConfig.pitchPrimaryChannelLum = \"var(--pitch-primary-channel-lum)\";\nColorConfig.pitchPrimaryChannelLumScale = \"var(--pitch-primary-channel-lum-scale)\";\nColorConfig.pitchSecondaryNoteHue = \"var(--pitch-secondary-note-hue)\";\nColorConfig.pitchSecondaryNoteHueScale = \"var(--pitch-secondary-note-hue-scale)\";\nColorConfig.pitchSecondaryNoteSat = \"var(--pitch-secondary-note-sat)\";\nColorConfig.pitchSecondaryNoteSatScale = \"var(--pitch-secondary-note-sat-scale)\";\nColorConfig.pitchSecondaryNoteLum = \"var(--pitch-secondary-note-lum)\";\nColorConfig.pitchSecondaryNoteLumScale = \"var(--pitch-secondary-note-lum-scale)\";\nColorConfig.pitchPrimaryNoteHue = \"var(--pitch-primary-note-hue)\";\nColorConfig.pitchPrimaryNoteHueScale = \"var(--pitch-primary-note-hue-scale)\";\nColorConfig.pitchPrimaryNoteSat = \"var(--pitch-primary-note-sat)\";\nColorConfig.pitchPrimaryNoteSatScale = \"var(--pitch-primary-note-sat-scale)\";\nColorConfig.pitchPrimaryNoteLum = \"var(--pitch-primary-note-lum)\";\nColorConfig.pitchPrimaryNoteLumScale = \"var(--pitch-primary-note-lum-scale)\";\nColorConfig.modSecondaryChannelHue = \"var(--mod-secondary-channel-hue)\";\nColorConfig.modSecondaryChannelHueScale = \"var(--mod-secondary-channel-hue-scale)\";\nColorConfig.modSecondaryChannelSat = \"var(--mod-secondary-channel-sat)\";\nColorConfig.modSecondaryChannelSatScale = \"var(--mod-secondary-channel-sat-scale)\";\nColorConfig.modSecondaryChannelLum = \"var(--mod-secondary-channel-lum)\";\nColorConfig.modSecondaryChannelLumScale = \"var(--mod-secondary-channel-lum-scale)\";\nColorConfig.modPrimaryChannelHue = \"var(--mod-primary-channel-hue)\";\nColorConfig.modPrimaryChannelHueScale = \"var(--mod-primary-channel-hue-scale)\";\nColorConfig.modPrimaryChannelSat = \"var(--mod-primary-channel-sat)\";\nColorConfig.modPrimaryChannelSatScale = \"var(--mod-primary-channel-sat-scale)\";\nColorConfig.modPrimaryChannelLum = \"var(--mod-primary-channel-lum)\";\nColorConfig.modPrimaryChannelLumScale = \"var(--mod-primary-channel-lum-scale)\";\nColorConfig.modSecondaryNoteHue = \"var(--mod-secondary-note-hue)\";\nColorConfig.modSecondaryNoteHueScale = \"var(--mod-secondary-note-hue-scale)\";\nColorConfig.modSecondaryNoteSat = \"var(--mod-secondary-note-sat)\";\nColorConfig.modSecondaryNoteSatScale = \"var(--mod-secondary-note-sat-scale)\";\nColorConfig.modSecondaryNoteLum = \"var(--mod-secondary-note-lum)\";\nColorConfig.modSecondaryNoteLumScale = \"var(--mod-secondary-note-lum-scale)\";\nColorConfig.modPrimaryNoteHue = \"var(--mod-primary-note-hue)\";\nColorConfig.modPrimaryNoteHueScale = \"var(--mod-primary-note-hue-scale)\";\nColorConfig.modPrimaryNoteSat = \"var(--mod-primary-note-sat)\";\nColorConfig.modPrimaryNoteSatScale = \"var(--mod-primary-note-sat-scale)\";\nColorConfig.modPrimaryNoteLum = \"var(--mod-primary-note-lum)\";\nColorConfig.modPrimaryNoteLumScale = \"var(--mod-primary-note-lum-scale)\";\nColorConfig.noiseSecondaryChannelHue = \"var(--noise-secondary-channel-hue)\";\nColorConfig.noiseSecondaryChannelHueScale = \"var(--noise-secondary-channel-hue-scale)\";\nColorConfig.noiseSecondaryChannelSat = \"var(--noise-secondary-channel-sat)\";\nColorConfig.noiseSecondaryChannelSatScale = \"var(--noise-secondary-channel-sat-scale)\";\nColorConfig.noiseSecondaryChannelLum = \"var(--noise-secondary-channel-lum)\";\nColorConfig.noiseSecondaryChannelLumScale = \"var(--noise-secondary-channel-lum-scale)\";\nColorConfig.noisePrimaryChannelHue = \"var(--noise-primary-channel-hue)\";\nColorConfig.noisePrimaryChannelHueScale = \"var(--noise-primary-channel-hue-scale)\";\nColorConfig.noisePrimaryChannelSat = \"var(--noise-primary-channel-sat)\";\nColorConfig.noisePrimaryChannelSatScale = \"var(--noise-primary-channel-sat-scale)\";\nColorConfig.noisePrimaryChannelLum = \"var(--noise-primary-channel-lum)\";\nColorConfig.noisePrimaryChannelLumScale = \"var(--noise-primary-channel-lum-scale)\";\nColorConfig.noiseSecondaryNoteHue = \"var(--noise-secondary-note-hue)\";\nColorConfig.noiseSecondaryNoteHueScale = \"var(--noise-secondary-note-hue-scale)\";\nColorConfig.noiseSecondaryNoteSat = \"var(--noise-secondary-note-sat)\";\nColorConfig.noiseSecondaryNoteSatScale = \"var(--noise-secondary-note-sat-scale)\";\nColorConfig.noiseSecondaryNoteLum = \"var(--noise-secondary-note-lum)\";\nColorConfig.noiseSecondaryNoteLumScale = \"var(--noise-secondary-note-lum-scale)\";\nColorConfig.noisePrimaryNoteHue = \"var(--noise-primary-note-hue)\";\nColorConfig.noisePrimaryNoteHueScale = \"var(--noise-primary-note-hue-scale)\";\nColorConfig.noisePrimaryNoteSat = \"var(--noise-primary-note-sat)\";\nColorConfig.noisePrimaryNoteSatScale = \"var(--noise-primary-note-sat-scale)\";\nColorConfig.noisePrimaryNoteLum = \"var(--noise-primary-note-lum)\";\nColorConfig.noisePrimaryNoteLumScale = \"var(--noise-primary-note-lum-scale)\";\nColorConfig.trackEditorBgPitch = \"var(--track-editor-bg-pitch, #444)\";\nColorConfig.trackEditorBgPitchDim = \"var(--track-editor-bg-pitch-dim, #333)\";\nColorConfig.trackEditorBgNoise = \"var(--track-editor-bg-noise, #444)\";\nColorConfig.trackEditorBgNoiseDim = \"var(--track-editor-bg-noise-dim, #333)\";\nColorConfig.trackEditorBgMod = \"var(--track-editor-bg-mod, #234)\";\nColorConfig.trackEditorBgModDim = \"var(--track-editor-bg-mod-dim, #123)\";\nColorConfig.multiplicativeModSlider = \"var(--multiplicative-mod-slider, #456;)\";\nColorConfig.overwritingModSlider = \"var(--overwriting-mod-slider, #654)\";\nColorConfig.indicatorPrimary = \"var(--indicator-primary, #74f)\";\nColorConfig.indicatorSecondary = \"var(--indicator-secondary, #444)\";\nColorConfig.select2OptGroup = \"var(--select2-opt-group, #585858)\";\nColorConfig.inputBoxOutline = \"var(--input-box-outline, #333)\";\nColorConfig.muteButtonNormal = \"var(--mute-button-normal, #ffa033)\";\nColorConfig.muteButtonMod = \"var(--mute-button-mod, #9a6bff)\";\nColorConfig.modLabelPrimary = \"var(--mod-label-primary, #999)\";\nColorConfig.modLabelSecondaryText = \"var(--mod-label-secondary-text, #333)\";\nColorConfig.modLabelPrimaryText = \"var(--mod-label-primary-text, black)\";\nColorConfig.disabledNotePrimary = \"var(--disabled-note-primary, #999)\";\nColorConfig.disabledNoteSecondary = \"var(--disabled-note-secondary, #666)\";\nColorConfig.c_pitchSecondaryChannelHue = 0;\nColorConfig.c_pitchSecondaryChannelHueScale = 0;\nColorConfig.c_pitchSecondaryChannelSat = 0;\nColorConfig.c_pitchSecondaryChannelSatScale = 0;\nColorConfig.c_pitchSecondaryChannelLum = 0;\nColorConfig.c_pitchSecondaryChannelLumScale = 0;\nColorConfig.c_pitchPrimaryChannelHue = 0;\nColorConfig.c_pitchPrimaryChannelHueScale = 0;\nColorConfig.c_pitchPrimaryChannelSat = 0;\nColorConfig.c_pitchPrimaryChannelSatScale = 0;\nColorConfig.c_pitchPrimaryChannelLum = 0;\nColorConfig.c_pitchPrimaryChannelLumScale = 0;\nColorConfig.c_pitchSecondaryNoteHue = 0;\nColorConfig.c_pitchSecondaryNoteHueScale = 0;\nColorConfig.c_pitchSecondaryNoteSat = 0;\nColorConfig.c_pitchSecondaryNoteSatScale = 0;\nColorConfig.c_pitchSecondaryNoteLum = 0;\nColorConfig.c_pitchSecondaryNoteLumScale = 0;\nColorConfig.c_pitchPrimaryNoteHue = 0;\nColorConfig.c_pitchPrimaryNoteHueScale = 0;\nColorConfig.c_pitchPrimaryNoteSat = 0;\nColorConfig.c_pitchPrimaryNoteSatScale = 0;\nColorConfig.c_pitchPrimaryNoteLum = 0;\nColorConfig.c_pitchPrimaryNoteLumScale = 0;\nColorConfig.c_modSecondaryChannelHue = 0;\nColorConfig.c_modSecondaryChannelHueScale = 0;\nColorConfig.c_modSecondaryChannelSat = 0;\nColorConfig.c_modSecondaryChannelSatScale = 0;\nColorConfig.c_modSecondaryChannelLum = 0;\nColorConfig.c_modSecondaryChannelLumScale = 0;\nColorConfig.c_modPrimaryChannelHue = 0;\nColorConfig.c_modPrimaryChannelHueScale = 0;\nColorConfig.c_modPrimaryChannelSat = 0;\nColorConfig.c_modPrimaryChannelSatScale = 0;\nColorConfig.c_modPrimaryChannelLum = 0;\nColorConfig.c_modPrimaryChannelLumScale = 0;\nColorConfig.c_modSecondaryNoteHue = 0;\nColorConfig.c_modSecondaryNoteHueScale = 0;\nColorConfig.c_modSecondaryNoteSat = 0;\nColorConfig.c_modSecondaryNoteSatScale = 0;\nColorConfig.c_modSecondaryNoteLum = 0;\nColorConfig.c_modSecondaryNoteLumScale = 0;\nColorConfig.c_modPrimaryNoteHue = 0;\nColorConfig.c_modPrimaryNoteHueScale = 0;\nColorConfig.c_modPrimaryNoteSat = 0;\nColorConfig.c_modPrimaryNoteSatScale = 0;\nColorConfig.c_modPrimaryNoteLum = 0;\nColorConfig.c_modPrimaryNoteLumScale = 0;\nColorConfig.c_noiseSecondaryChannelHue = 0;\nColorConfig.c_noiseSecondaryChannelHueScale = 0;\nColorConfig.c_noiseSecondaryChannelSat = 0;\nColorConfig.c_noiseSecondaryChannelSatScale = 0;\nColorConfig.c_noiseSecondaryChannelLum = 0;\nColorConfig.c_noiseSecondaryChannelLumScale = 0;\nColorConfig.c_noisePrimaryChannelHue = 0;\nColorConfig.c_noisePrimaryChannelHueScale = 0;\nColorConfig.c_noisePrimaryChannelSat = 0;\nColorConfig.c_noisePrimaryChannelSatScale = 0;\nColorConfig.c_noisePrimaryChannelLum = 0;\nColorConfig.c_noisePrimaryChannelLumScale = 0;\nColorConfig.c_noiseSecondaryNoteHue = 0;\nColorConfig.c_noiseSecondaryNoteHueScale = 0;\nColorConfig.c_noiseSecondaryNoteSat = 0;\nColorConfig.c_noiseSecondaryNoteSatScale = 0;\nColorConfig.c_noiseSecondaryNoteLum = 0;\nColorConfig.c_noiseSecondaryNoteLumScale = 0;\nColorConfig.c_noisePrimaryNoteHue = 0;\nColorConfig.c_noisePrimaryNoteHueScale = 0;\nColorConfig.c_noisePrimaryNoteSat = 0;\nColorConfig.c_noisePrimaryNoteSatScale = 0;\nColorConfig.c_noisePrimaryNoteLum = 0;\nColorConfig.c_noisePrimaryNoteLumScale = 0;\nColorConfig.c_pitchChannelCountOverride = 40;\nColorConfig.c_noiseChannelCountOverride = 16;\nColorConfig.c_modChannelCountOverride = 12;\nColorConfig.c_pitchLimit = 1;\nColorConfig.c_noiseLimit = 1;\nColorConfig.c_modLimit = 1;\nColorConfig.c_colorFormulaPitchLimit = 1;\nColorConfig.c_colorFormulaNoiseLimit = 1;\nColorConfig.c_colorFormulaModLimit = 1;\nColorConfig.c_invertedText = \"\";\nColorConfig.c_trackEditorBgNoiseDim = \"\";\nColorConfig.c_trackEditorBgNoise = \"\";\nColorConfig.c_trackEditorBgModDim = \"\";\nColorConfig.c_trackEditorBgMod = \"\";\nColorConfig.c_trackEditorBgPitchDim = \"\";\nColorConfig.c_trackEditorBgPitch = \"\";\nColorConfig.pitchChannels = toNameMap([\n    {\n        name: \"pitch1\",\n        secondaryChannel: \"var(--pitch1-secondary-channel, #0099A1)\",\n        primaryChannel: \"var(--pitch1-primary-channel, #25F3FF)\",\n        secondaryNote: \"var(--pitch1-secondary-note, #00BDC7)\",\n        primaryNote: \"var(--pitch1-primary-note, #92F9FF)\",\n    }, {\n        name: \"pitch2\",\n        secondaryChannel: \"var(--pitch2-secondary-channel, #A1A100)\",\n        primaryChannel: \"var(--pitch2-primary-channel, #FFFF25)\",\n        secondaryNote: \"var(--pitch2-secondary-note, #C7C700)\",\n        primaryNote: \"var(--pitch2-primary-note, #FFFF92)\",\n    }, {\n        name: \"pitch3\",\n        secondaryChannel: \"var(--pitch3-secondary-channel, #C75000)\",\n        primaryChannel: \"var(--pitch3-primary-channel, #FF9752)\",\n        secondaryNote: \"var(--pitch3-secondary-note, #FF771C)\",\n        primaryNote: \"var(--pitch3-primary-note, #FFCDAB)\",\n    }, {\n        name: \"pitch4\",\n        secondaryChannel: \"var(--pitch4-secondary-channel, #00A100)\",\n        primaryChannel: \"var(--pitch4-primary-channel, #50FF50)\",\n        secondaryNote: \"var(--pitch4-secondary-note, #00C700)\",\n        primaryNote: \"var(--pitch4-primary-note, #A0FFA0)\",\n    }, {\n        name: \"pitch5\",\n        secondaryChannel: \"var(--pitch5-secondary-channel, #D020D0)\",\n        primaryChannel: \"var(--pitch5-primary-channel, #FF90FF)\",\n        secondaryNote: \"var(--pitch5-secondary-note, #E040E0)\",\n        primaryNote: \"var(--pitch5-primary-note, #FFC0FF)\",\n    }, {\n        name: \"pitch6\",\n        secondaryChannel: \"var(--pitch6-secondary-channel, #7777B0)\",\n        primaryChannel: \"var(--pitch6-primary-channel, #A0A0FF)\",\n        secondaryNote: \"var(--pitch6-secondary-note, #8888D0)\",\n        primaryNote: \"var(--pitch6-primary-note, #D0D0FF)\",\n    }, {\n        name: \"pitch7\",\n        secondaryChannel: \"var(--pitch7-secondary-channel, #8AA100)\",\n        primaryChannel: \"var(--pitch7-primary-channel, #DEFF25)\",\n        secondaryNote: \"var(--pitch7-secondary-note, #AAC700)\",\n        primaryNote: \"var(--pitch7-primary-note, #E6FF92)\",\n    }, {\n        name: \"pitch8\",\n        secondaryChannel: \"var(--pitch8-secondary-channel, #DF0019)\",\n        primaryChannel: \"var(--pitch8-primary-channel, #FF98A4)\",\n        secondaryNote: \"var(--pitch8-secondary-note, #FF4E63)\",\n        primaryNote: \"var(--pitch8-primary-note, #FFB2BB)\",\n    }, {\n        name: \"pitch9\",\n        secondaryChannel: \"var(--pitch9-secondary-channel, #00A170)\",\n        primaryChannel: \"var(--pitch9-primary-channel, #50FFC9)\",\n        secondaryNote: \"var(--pitch9-secondary-note, #00C78A)\",\n        primaryNote: \"var(--pitch9-primary-note, #83FFD9)\",\n    }, {\n        name: \"pitch10\",\n        secondaryChannel: \"var(--pitch10-secondary-channel, #A11FFF)\",\n        primaryChannel: \"var(--pitch10-primary-channel, #CE8BFF)\",\n        secondaryNote: \"var(--pitch10-secondary-note, #B757FF)\",\n        primaryNote: \"var(--pitch10-primary-note, #DFACFF)\",\n    },\n]);\nColorConfig.noiseChannels = toNameMap([\n    {\n        name: \"noise1\",\n        secondaryChannel: \"var(--noise1-secondary-channel, #6F6F6F)\",\n        primaryChannel: \"var(--noise1-primary-channel, #AAAAAA)\",\n        secondaryNote: \"var(--noise1-secondary-note, #A7A7A7)\",\n        primaryNote: \"var(--noise1-primary-note, #E0E0E0)\",\n    }, {\n        name: \"noise2\",\n        secondaryChannel: \"var(--noise2-secondary-channel, #996633)\",\n        primaryChannel: \"var(--noise2-primary-channel, #DDAA77)\",\n        secondaryNote: \"var(--noise2-secondary-note, #CC9966)\",\n        primaryNote: \"var(--noise2-primary-note, #F0D0BB)\",\n    }, {\n        name: \"noise3\",\n        secondaryChannel: \"var(--noise3-secondary-channel, #4A6D8F)\",\n        primaryChannel: \"var(--noise3-primary-channel, #77AADD)\",\n        secondaryNote: \"var(--noise3-secondary-note, #6F9FCF)\",\n        primaryNote: \"var(--noise3-primary-note, #BBD7FF)\",\n    }, {\n        name: \"noise4\",\n        secondaryChannel: \"var(--noise4-secondary-channel, #7A4F9A)\",\n        primaryChannel: \"var(--noise4-primary-channel, #AF82D2)\",\n        secondaryNote: \"var(--noise4-secondary-note, #9E71C1)\",\n        primaryNote: \"var(--noise4-primary-note, #D4C1EA)\",\n    }, {\n        name: \"noise5\",\n        secondaryChannel: \"var(--noise5-secondary-channel, #607837)\",\n        primaryChannel: \"var(--noise5-primary-channel, #A2BB77)\",\n        secondaryNote: \"var(--noise5-secondary-note, #91AA66)\",\n        primaryNote: \"var(--noise5-primary-note, #C5E2B2)\",\n    },\n]);\nColorConfig.modChannels = toNameMap([\n    {\n        name: \"mod1\",\n        secondaryChannel: \"var(--mod1-secondary-channel, #339955)\",\n        primaryChannel: \"var(--mod1-primary-channel, #77fc55)\",\n        secondaryNote: \"var(--mod1-secondary-note, #77ff8a)\",\n        primaryNote: \"var(--mod1-primary-note, #cdffee)\",\n    }, {\n        name: \"mod2\",\n        secondaryChannel: \"var(--mod2-secondary-channel, #993355)\",\n        primaryChannel: \"var(--mod2-primary-channel, #f04960)\",\n        secondaryNote: \"var(--mod2-secondary-note, #f057a0)\",\n        primaryNote: \"var(--mod2-primary-note, #ffb8de)\",\n    }, {\n        name: \"mod3\",\n        secondaryChannel: \"var(--mod3-secondary-channel, #553399)\",\n        primaryChannel: \"var(--mod3-primary-channel, #8855fc)\",\n        secondaryNote: \"var(--mod3-secondary-note, #aa64ff)\",\n        primaryNote: \"var(--mod3-primary-note, #f8ddff)\",\n    }, {\n        name: \"mod4\",\n        secondaryChannel: \"var(--mod4-secondary-channel, #a86436)\",\n        primaryChannel: \"var(--mod4-primary-channel, #c8a825)\",\n        secondaryNote: \"var(--mod4-secondary-note, #e8ba46)\",\n        primaryNote: \"var(--mod4-primary-note, #fff6d3)\",\n    },\n]);\nColorConfig._styleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\n//# sourceMappingURL=ColorConfig.js.map","import { Config } from \"./SynthConfig\";\nexport function clamp(min, max, val) {\n    max = max - 1;\n    if (val <= max) {\n        if (val >= min)\n            return val;\n        else\n            return min;\n    }\n    else {\n        return max;\n    }\n}\nexport function validateRange(min, max, val) {\n    if (min <= val && val <= max)\n        return val;\n    throw new Error(`Value ${val} not in range [${min}, ${max}]`);\n}\nexport function parseFloatWithDefault(s, defaultValue) {\n    let result = parseFloat(s);\n    if (Number.isNaN(result))\n        result = defaultValue;\n    return result;\n}\nexport function parseIntWithDefault(s, defaultValue) {\n    let result = parseInt(s);\n    if (Number.isNaN(result))\n        result = defaultValue;\n    return result;\n}\nexport function fadeInSettingToSeconds(setting) {\n    return 0.0125 * (0.95 * setting + 0.05 * setting * setting);\n}\nexport function secondsToFadeInSetting(seconds) {\n    return clamp(0, Config.fadeInRange, Math.round((-0.95 + Math.sqrt(0.9025 + 0.2 * seconds / 0.0125)) / 0.1));\n}\nexport function fadeOutSettingToTicks(setting) {\n    return Config.fadeOutTicks[setting];\n}\nexport function ticksToFadeOutSetting(ticks) {\n    let lower = Config.fadeOutTicks[0];\n    if (ticks <= lower)\n        return 0;\n    for (let i = 1; i < Config.fadeOutTicks.length; i++) {\n        let upper = Config.fadeOutTicks[i];\n        if (ticks <= upper)\n            return (ticks < (lower + upper) / 2) ? i - 1 : i;\n        lower = upper;\n    }\n    return Config.fadeOutTicks.length - 1;\n}\nexport function detuneToCents(detune) {\n    return detune - Config.detuneCenter;\n}\nexport function centsToDetune(cents) {\n    return cents + Config.detuneCenter;\n}\nexport function fittingPowerOfTwo(x) {\n    return 1 << (32 - Math.clz32(Math.ceil(x) - 1));\n}\n//# sourceMappingURL=utils.js.map","import { Config } from \"./SynthConfig\";\nimport { clamp } from \"./utils\";\nexport function makeNotePin(interval, time, size) {\n    return { interval: interval, time: time, size: size };\n}\nexport class Note {\n    constructor(pitch, start, end, size, fadeout = false, chipWaveStartOffset = 0) {\n        this.pitches = [pitch];\n        this.pins = [makeNotePin(0, 0, size), makeNotePin(0, end - start, fadeout ? 0 : size)];\n        this.start = start;\n        this.end = end;\n        this.continuesLastPattern = false;\n        this.chipWaveStartOffset = chipWaveStartOffset;\n    }\n    pickMainInterval() {\n        let longestFlatIntervalDuration = 0;\n        let mainInterval = 0;\n        for (let pinIndex = 1; pinIndex < this.pins.length; pinIndex++) {\n            const pinA = this.pins[pinIndex - 1];\n            const pinB = this.pins[pinIndex];\n            if (pinA.interval == pinB.interval) {\n                const duration = pinB.time - pinA.time;\n                if (longestFlatIntervalDuration < duration) {\n                    longestFlatIntervalDuration = duration;\n                    mainInterval = pinA.interval;\n                }\n            }\n        }\n        if (longestFlatIntervalDuration == 0) {\n            let loudestSize = 0;\n            for (let pinIndex = 0; pinIndex < this.pins.length; pinIndex++) {\n                const pin = this.pins[pinIndex];\n                if (loudestSize < pin.size) {\n                    loudestSize = pin.size;\n                    mainInterval = pin.interval;\n                }\n            }\n        }\n        return mainInterval;\n    }\n    clone() {\n        const newNote = new Note(-1, this.start, this.end, 3);\n        newNote.pitches = this.pitches.concat();\n        newNote.pins = [];\n        for (const pin of this.pins) {\n            newNote.pins.push(makeNotePin(pin.interval, pin.time, pin.size));\n        }\n        newNote.continuesLastPattern = this.continuesLastPattern;\n        return newNote;\n    }\n    getEndPinIndex(part) {\n        let endPinIndex;\n        for (endPinIndex = 1; endPinIndex < this.pins.length - 1; endPinIndex++) {\n            if (this.pins[endPinIndex].time + this.start > part)\n                break;\n        }\n        return endPinIndex;\n    }\n}\nexport class Pattern {\n    constructor() {\n        this.notes = [];\n        this.instruments = [0];\n    }\n    cloneNotes() {\n        const result = [];\n        for (const note of this.notes) {\n            result.push(note.clone());\n        }\n        return result;\n    }\n    reset() {\n        this.notes.length = 0;\n        this.instruments[0] = 0;\n        this.instruments.length = 1;\n    }\n    toJsonObject(song, channel, isModChannel) {\n        const noteArray = [];\n        for (const note of this.notes) {\n            let instrument = channel.instruments[this.instruments[0]];\n            let mod = Math.max(0, Config.modCount - note.pitches[0] - 1);\n            let volumeCap = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\n            const pointArray = [];\n            for (const pin of note.pins) {\n                let useVol = isModChannel ? Math.round(pin.size) : Math.round(pin.size * 100 / volumeCap);\n                pointArray.push({\n                    \"tick\": (pin.time + note.start) * Config.rhythms[song.rhythm].stepsPerBeat / Config.partsPerBeat,\n                    \"pitchBend\": pin.interval,\n                    \"volume\": useVol,\n                    \"forMod\": isModChannel,\n                });\n            }\n            const noteObject = {\n                \"pitches\": note.pitches,\n                \"points\": pointArray,\n            };\n            if (note.start == 0) {\n                noteObject[\"continuesLastPattern\"] = note.continuesLastPattern;\n            }\n            noteArray.push(noteObject);\n        }\n        const patternObject = { \"notes\": noteArray };\n        if (song.patternInstruments) {\n            patternObject[\"instruments\"] = this.instruments.map(i => i + 1);\n        }\n        return patternObject;\n    }\n    fromJsonObject(patternObject, song, channel, importedPartsPerBeat, isNoiseChannel, isModChannel, jsonFormat = \"auto\") {\n        const format = jsonFormat.toLowerCase();\n        if (song.patternInstruments) {\n            if (Array.isArray(patternObject[\"instruments\"])) {\n                const instruments = patternObject[\"instruments\"];\n                const instrumentCount = clamp(Config.instrumentCountMin, song.getMaxInstrumentsPerPatternForChannel(channel) + 1, instruments.length);\n                for (let j = 0; j < instrumentCount; j++) {\n                    this.instruments[j] = clamp(0, channel.instruments.length, (instruments[j] | 0) - 1);\n                }\n                this.instruments.length = instrumentCount;\n            }\n            else {\n                this.instruments[0] = clamp(0, channel.instruments.length, (patternObject[\"instrument\"] | 0) - 1);\n                this.instruments.length = 1;\n            }\n        }\n        if (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\n            const maxNoteCount = Math.min(song.beatsPerBar * Config.partsPerBeat * (isModChannel ? Config.modCount : 1), patternObject[\"notes\"].length >>> 0);\n            for (let j = 0; j < patternObject[\"notes\"].length; j++) {\n                if (j >= maxNoteCount)\n                    break;\n                const noteObject = patternObject[\"notes\"][j];\n                if (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\n                    continue;\n                }\n                const note = new Note(0, 0, 0, 0);\n                note.pitches = [];\n                note.pins = [];\n                for (let k = 0; k < noteObject[\"pitches\"].length; k++) {\n                    const pitch = noteObject[\"pitches\"][k] | 0;\n                    if (note.pitches.indexOf(pitch) != -1)\n                        continue;\n                    note.pitches.push(pitch);\n                    if (note.pitches.length >= Config.maxChordSize)\n                        break;\n                }\n                if (note.pitches.length < 1)\n                    continue;\n                let startInterval = 0;\n                let instrument = channel.instruments[this.instruments[0]];\n                let mod = Math.max(0, Config.modCount - note.pitches[0] - 1);\n                for (let k = 0; k < noteObject[\"points\"].length; k++) {\n                    const pointObject = noteObject[\"points\"][k];\n                    if (pointObject == undefined || pointObject[\"tick\"] == undefined)\n                        continue;\n                    const interval = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\n                    const time = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\n                    let volumeCap = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\n                    let size;\n                    if (pointObject[\"volume\"] == undefined) {\n                        size = volumeCap;\n                    }\n                    else if (pointObject[\"forMod\"] == undefined) {\n                        size = Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\n                    }\n                    else {\n                        size = ((pointObject[\"forMod\"] | 0) > 0) ? Math.round(pointObject[\"volume\"] | 0) : Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\n                    }\n                    if (time > song.beatsPerBar * Config.partsPerBeat)\n                        continue;\n                    if (note.pins.length == 0) {\n                        note.start = time;\n                        startInterval = interval;\n                    }\n                    else {\n                    }\n                    note.pins.push(makeNotePin(interval - startInterval, time - note.start, size));\n                }\n                if (note.pins.length < 2)\n                    continue;\n                note.end = note.pins[note.pins.length - 1].time + note.start;\n                const maxPitch = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\n                let lowestPitch = maxPitch;\n                let highestPitch = 0;\n                for (let k = 0; k < note.pitches.length; k++) {\n                    note.pitches[k] += startInterval;\n                    if (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\n                        note.pitches.splice(k, 1);\n                        k--;\n                    }\n                    if (note.pitches[k] < lowestPitch)\n                        lowestPitch = note.pitches[k];\n                    if (note.pitches[k] > highestPitch)\n                        highestPitch = note.pitches[k];\n                }\n                if (note.pitches.length < 1)\n                    continue;\n                for (let k = 0; k < note.pins.length; k++) {\n                    const pin = note.pins[k];\n                    if (pin.interval + lowestPitch < 0)\n                        pin.interval = -lowestPitch;\n                    if (pin.interval + highestPitch > maxPitch)\n                        pin.interval = maxPitch - highestPitch;\n                    if (k >= 2) {\n                        if (pin.interval == note.pins[k - 1].interval &&\n                            pin.interval == note.pins[k - 2].interval &&\n                            pin.size == note.pins[k - 1].size &&\n                            pin.size == note.pins[k - 2].size) {\n                            note.pins.splice(k - 1, 1);\n                            k--;\n                        }\n                    }\n                }\n                if (note.start == 0) {\n                    note.continuesLastPattern = (noteObject[\"continuesLastPattern\"] === true);\n                }\n                else {\n                    note.continuesLastPattern = false;\n                }\n                if ((format != \"ultrabox\" && format != \"slarmoosbox\") && instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index) {\n                    for (const pin of note.pins) {\n                        const oldMin = 30;\n                        const newMin = 1;\n                        const old = pin.size + oldMin;\n                        pin.size = old - newMin;\n                    }\n                }\n                this.notes.push(note);\n            }\n        }\n    }\n}\n//# sourceMappingURL=Pattern.js.map","export class FilterCoefficients {\n    constructor() {\n        this.a = [1.0];\n        this.b = [1.0];\n        this.order = 0;\n    }\n    linearGain0thOrder(linearGain) {\n        this.b[0] = linearGain;\n        this.order = 0;\n    }\n    lowPass1stOrderButterworth(cornerRadiansPerSample) {\n        const g = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\n        const a0 = 1.0 + g;\n        this.a[1] = (1.0 - g) / a0;\n        this.b[1] = this.b[0] = 1 / a0;\n        this.order = 1;\n    }\n    lowPass1stOrderSimplified(cornerRadiansPerSample) {\n        const g = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\n        this.a[1] = g - 1.0;\n        this.b[0] = g;\n        this.b[1] = 0.0;\n        this.order = 1;\n    }\n    highPass1stOrderButterworth(cornerRadiansPerSample) {\n        const g = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\n        const a0 = 1.0 + g;\n        this.a[1] = (1.0 - g) / a0;\n        this.b[0] = g / a0;\n        this.b[1] = -g / a0;\n        this.order = 1;\n    }\n    highShelf1stOrder(cornerRadiansPerSample, shelfLinearGain) {\n        const tan = Math.tan(cornerRadiansPerSample * 0.5);\n        const sqrtGain = Math.sqrt(shelfLinearGain);\n        const g = (tan * sqrtGain - 1) / (tan * sqrtGain + 1.0);\n        const a0 = 1.0;\n        this.a[1] = g / a0;\n        this.b[0] = (1.0 + g + shelfLinearGain * (1.0 - g)) / (2.0 * a0);\n        this.b[1] = (1.0 + g - shelfLinearGain * (1.0 - g)) / (2.0 * a0);\n        this.order = 1;\n    }\n    allPass1stOrderInvertPhaseAbove(cornerRadiansPerSample) {\n        const g = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\n        this.a[1] = g;\n        this.b[0] = g;\n        this.b[1] = 1.0;\n        this.order = 1;\n    }\n    allPass1stOrderFractionalDelay(delay) {\n        const g = (1.0 - delay) / (1.0 + delay);\n        this.a[1] = g;\n        this.b[0] = g;\n        this.b[1] = 1.0;\n        this.order = 1;\n    }\n    lowPass2ndOrderButterworth(cornerRadiansPerSample, peakLinearGain) {\n        const alpha = Math.sin(cornerRadiansPerSample) / (2.0 * peakLinearGain);\n        const cos = Math.cos(cornerRadiansPerSample);\n        const a0 = 1.0 + alpha;\n        this.a[1] = -2.0 * cos / a0;\n        this.a[2] = (1 - alpha) / a0;\n        this.b[2] = this.b[0] = (1 - cos) / (2.0 * a0);\n        this.b[1] = (1 - cos) / a0;\n        this.order = 2;\n    }\n    lowPass2ndOrderSimplified(cornerRadiansPerSample, peakLinearGain) {\n        const g = 2.0 * Math.sin(cornerRadiansPerSample / 2.0);\n        const filterResonance = 1.0 - 1.0 / (2.0 * peakLinearGain);\n        const feedback = filterResonance + filterResonance / (1.0 - g);\n        this.a[1] = 2.0 * g + (g - 1.0) * g * feedback - 2.0;\n        this.a[2] = (g - 1.0) * (g - g * feedback - 1.0);\n        this.b[0] = g * g;\n        this.b[1] = 0;\n        this.b[2] = 0;\n        this.order = 2;\n    }\n    highPass2ndOrderButterworth(cornerRadiansPerSample, peakLinearGain) {\n        const alpha = Math.sin(cornerRadiansPerSample) / (2 * peakLinearGain);\n        const cos = Math.cos(cornerRadiansPerSample);\n        const a0 = 1.0 + alpha;\n        this.a[1] = -2.0 * cos / a0;\n        this.a[2] = (1.0 - alpha) / a0;\n        this.b[2] = this.b[0] = (1.0 + cos) / (2.0 * a0);\n        this.b[1] = -(1.0 + cos) / a0;\n        this.order = 2;\n    }\n    highShelf2ndOrder(cornerRadiansPerSample, shelfLinearGain, slope) {\n        const A = Math.sqrt(shelfLinearGain);\n        const c = Math.cos(cornerRadiansPerSample);\n        const Aplus = A + 1.0;\n        const Aminus = A - 1.0;\n        const alpha = Math.sin(cornerRadiansPerSample) * 0.5 * Math.sqrt((Aplus / A) * (1.0 / slope - 1.0) + 2.0);\n        const sqrtA2Alpha = 2.0 * Math.sqrt(A) * alpha;\n        const a0 = (Aplus - Aminus * c + sqrtA2Alpha);\n        this.a[1] = 2 * (Aminus - Aplus * c) / a0;\n        this.a[2] = (Aplus - Aminus * c - sqrtA2Alpha) / a0;\n        this.b[0] = A * (Aplus + Aminus * c + sqrtA2Alpha) / a0;\n        this.b[1] = -2 * A * (Aminus + Aplus * c) / a0;\n        this.b[2] = A * (Aplus + Aminus * c - sqrtA2Alpha) / a0;\n        this.order = 2;\n    }\n    peak2ndOrder(cornerRadiansPerSample, peakLinearGain, bandWidthScale) {\n        const sqrtGain = Math.sqrt(peakLinearGain);\n        const bandWidth = bandWidthScale * cornerRadiansPerSample / (sqrtGain >= 1 ? sqrtGain : 1 / sqrtGain);\n        const alpha = Math.tan(bandWidth * 0.5);\n        const a0 = 1.0 + alpha / sqrtGain;\n        this.b[0] = (1.0 + alpha * sqrtGain) / a0;\n        this.b[1] = this.a[1] = -2.0 * Math.cos(cornerRadiansPerSample) / a0;\n        this.b[2] = (1.0 - alpha * sqrtGain) / a0;\n        this.a[2] = (1.0 - alpha / sqrtGain) / a0;\n        this.order = 2;\n    }\n}\nexport class FrequencyResponse {\n    constructor() {\n        this.real = 0.0;\n        this.imag = 0.0;\n        this.denom = 1.0;\n    }\n    analyze(filter, radiansPerSample) {\n        this.analyzeComplex(filter, Math.cos(radiansPerSample), Math.sin(radiansPerSample));\n    }\n    analyzeComplex(filter, real, imag) {\n        const a = filter.a;\n        const b = filter.b;\n        const realZ1 = real;\n        const imagZ1 = -imag;\n        let realNum = b[0] + b[1] * realZ1;\n        let imagNum = b[1] * imagZ1;\n        let realDenom = 1.0 + a[1] * realZ1;\n        let imagDenom = a[1] * imagZ1;\n        let realZ = realZ1;\n        let imagZ = imagZ1;\n        for (let i = 2; i <= filter.order; i++) {\n            const realTemp = realZ * realZ1 - imagZ * imagZ1;\n            const imagTemp = realZ * imagZ1 + imagZ * realZ1;\n            realZ = realTemp;\n            imagZ = imagTemp;\n            realNum += b[i] * realZ;\n            imagNum += b[i] * imagZ;\n            realDenom += a[i] * realZ;\n            imagDenom += a[i] * imagZ;\n        }\n        this.denom = realDenom * realDenom + imagDenom * imagDenom;\n        this.real = realNum * realDenom + imagNum * imagDenom;\n        this.imag = imagNum * realDenom - realNum * imagDenom;\n    }\n    magnitude() {\n        return Math.sqrt(this.real * this.real + this.imag * this.imag) / this.denom;\n    }\n    angle() {\n        return Math.atan2(this.imag, this.real);\n    }\n}\nexport class DynamicBiquadFilter {\n    constructor() {\n        this.a1 = 0.0;\n        this.a2 = 0.0;\n        this.b0 = 1.0;\n        this.b1 = 0.0;\n        this.b2 = 0.0;\n        this.a1Delta = 0.0;\n        this.a2Delta = 0.0;\n        this.b0Delta = 0.0;\n        this.b1Delta = 0.0;\n        this.b2Delta = 0.0;\n        this.output1 = 0.0;\n        this.output2 = 0.0;\n        this.useMultiplicativeInputCoefficients = false;\n    }\n    resetOutput() {\n        this.output1 = 0.0;\n        this.output2 = 0.0;\n    }\n    loadCoefficientsWithGradient(start, end, deltaRate, useMultiplicativeInputCoefficients) {\n        if (start.order != 2 || end.order != 2)\n            throw new Error();\n        this.a1 = start.a[1];\n        this.a2 = start.a[2];\n        this.b0 = start.b[0];\n        this.b1 = start.b[1];\n        this.b2 = start.b[2];\n        this.a1Delta = (end.a[1] - start.a[1]) * deltaRate;\n        this.a2Delta = (end.a[2] - start.a[2]) * deltaRate;\n        if (useMultiplicativeInputCoefficients) {\n            this.b0Delta = Math.pow(end.b[0] / start.b[0], deltaRate);\n            this.b1Delta = Math.pow(end.b[1] / start.b[1], deltaRate);\n            this.b2Delta = Math.pow(end.b[2] / start.b[2], deltaRate);\n        }\n        else {\n            this.b0Delta = (end.b[0] - start.b[0]) * deltaRate;\n            this.b1Delta = (end.b[1] - start.b[1]) * deltaRate;\n            this.b2Delta = (end.b[2] - start.b[2]) * deltaRate;\n        }\n        this.useMultiplicativeInputCoefficients = useMultiplicativeInputCoefficients;\n    }\n}\nexport function warpNyquistToInfinity(radians) {\n    return 2.0 * Math.tan(radians * 0.5);\n}\nexport function warpInfinityToNyquist(radians) {\n    return 2.0 * Math.atan(radians * 0.5);\n}\n//# sourceMappingURL=filtering.js.map","import { Config } from \"./SynthConfig\";\nimport { FilterCoefficients, FrequencyResponse } from \"./filtering\";\nexport class FilterSettings {\n    constructor() {\n        this.controlPoints = [];\n        this.controlPointCount = 0;\n        this.reset();\n    }\n    reset() {\n        this.controlPointCount = 0;\n    }\n    addPoint(type, freqSetting, gainSetting) {\n        let controlPoint;\n        if (this.controlPoints.length <= this.controlPointCount) {\n            controlPoint = new FilterControlPoint();\n            this.controlPoints[this.controlPointCount] = controlPoint;\n        }\n        else {\n            controlPoint = this.controlPoints[this.controlPointCount];\n        }\n        this.controlPointCount++;\n        controlPoint.type = type;\n        controlPoint.set(freqSetting, gainSetting);\n    }\n    toJsonObject() {\n        const filterArray = [];\n        for (let i = 0; i < this.controlPointCount; i++) {\n            const point = this.controlPoints[i];\n            filterArray.push({\n                \"type\": Config.filterTypeNames[point.type],\n                \"cutoffHz\": Math.round(point.getHz() * 100) / 100,\n                \"linearGain\": Math.round(point.getLinearGain() * 10000) / 10000,\n            });\n        }\n        return filterArray;\n    }\n    fromJsonObject(filterObject) {\n        this.controlPoints.length = 0;\n        if (filterObject) {\n            for (const pointObject of filterObject) {\n                const point = new FilterControlPoint();\n                point.type = Config.filterTypeNames.indexOf(pointObject[\"type\"]);\n                if (point.type == -1)\n                    point.type = 2;\n                if (pointObject[\"cutoffHz\"] != undefined) {\n                    point.freq = FilterControlPoint.getRoundedSettingValueFromHz(pointObject[\"cutoffHz\"]);\n                }\n                else {\n                    point.freq = 0;\n                }\n                if (pointObject[\"linearGain\"] != undefined) {\n                    point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(pointObject[\"linearGain\"]);\n                }\n                else {\n                    point.gain = Config.filterGainCenter;\n                }\n                this.controlPoints.push(point);\n            }\n        }\n        this.controlPointCount = this.controlPoints.length;\n    }\n    static filtersCanMorph(filterA, filterB) {\n        if (filterA.controlPointCount != filterB.controlPointCount)\n            return false;\n        for (let i = 0; i < filterA.controlPointCount; i++) {\n            if (filterA.controlPoints[i].type != filterB.controlPoints[i].type)\n                return false;\n        }\n        return true;\n    }\n    static lerpFilters(filterA, filterB, pos) {\n        let lerpedFilter = new FilterSettings();\n        if (filterA == null) {\n            return filterA;\n        }\n        if (filterB == null) {\n            return filterB;\n        }\n        pos = Math.max(0, Math.min(1, pos));\n        if (this.filtersCanMorph(filterA, filterB)) {\n            for (let i = 0; i < filterA.controlPointCount; i++) {\n                lerpedFilter.controlPoints[i] = new FilterControlPoint();\n                lerpedFilter.controlPoints[i].type = filterA.controlPoints[i].type;\n                lerpedFilter.controlPoints[i].freq = filterA.controlPoints[i].freq + (filterB.controlPoints[i].freq - filterA.controlPoints[i].freq) * pos;\n                lerpedFilter.controlPoints[i].gain = filterA.controlPoints[i].gain + (filterB.controlPoints[i].gain - filterA.controlPoints[i].gain) * pos;\n            }\n            lerpedFilter.controlPointCount = filterA.controlPointCount;\n            return lerpedFilter;\n        }\n        else {\n            return (pos >= 1) ? filterB : filterA;\n        }\n    }\n    convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyEnv) {\n        this.reset();\n        const legacyFilterCutoffMaxHz = 8000;\n        const legacyFilterMax = 0.95;\n        const legacyFilterMaxRadians = Math.asin(legacyFilterMax / 2.0) * 2.0;\n        const legacyFilterMaxResonance = 0.95;\n        const legacyFilterCutoffRange = 11;\n        const legacyFilterResonanceRange = 8;\n        const resonant = (legacyResonanceSetting > 1);\n        const firstOrder = (legacyResonanceSetting == 0);\n        const cutoffAtMax = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\n        const envDecays = (legacyEnv.type == 5 || legacyEnv.type == 6 || legacyEnv.type == 10 || legacyEnv.type == 1);\n        const standardSampleRate = 48000;\n        const legacyHz = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\n        const legacyRadians = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\n        if (legacyEnv.type == 0 && !resonant && cutoffAtMax) {\n        }\n        else if (firstOrder) {\n            const extraOctaves = 3.5;\n            const targetRadians = legacyRadians * Math.pow(2.0, extraOctaves);\n            const curvedRadians = targetRadians / (1.0 + targetRadians / Math.PI);\n            const curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            const freqSetting = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n            const finalHz = FilterControlPoint.getHzFromSettingValue(freqSetting);\n            const finalRadians = 2.0 * Math.PI * finalHz / standardSampleRate;\n            const legacyFilter = new FilterCoefficients();\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\n            const response = new FrequencyResponse();\n            response.analyze(legacyFilter, finalRadians);\n            const legacyFilterGainAtNewRadians = response.magnitude();\n            let logGain = Math.log2(legacyFilterGainAtNewRadians);\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\n            if (envDecays)\n                logGain = Math.min(logGain, -1.0);\n            const convertedGain = Math.pow(2.0, logGain);\n            const gainSetting = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\n            this.addPoint(0, freqSetting, gainSetting);\n        }\n        else {\n            const intendedGain = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\n            const invertedGain = 0.5 / intendedGain;\n            const maxRadians = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\n            const freqRatio = legacyRadians / maxRadians;\n            const targetRadians = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\n            const curvedRadians = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\n            let curvedHz;\n            if (envDecays) {\n                curvedHz = standardSampleRate * Math.min(curvedRadians, legacyRadians * Math.pow(2, 0.25)) / (2.0 * Math.PI);\n            }\n            else {\n                curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            }\n            const freqSetting = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n            let legacyFilterGain;\n            if (envDecays) {\n                legacyFilterGain = intendedGain;\n            }\n            else {\n                const legacyFilter = new FilterCoefficients();\n                legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\n                const response = new FrequencyResponse();\n                response.analyze(legacyFilter, curvedRadians);\n                legacyFilterGain = response.magnitude();\n            }\n            if (!resonant)\n                legacyFilterGain = Math.min(legacyFilterGain, Math.sqrt(0.5));\n            const gainSetting = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\n            this.addPoint(0, freqSetting, gainSetting);\n        }\n        this.controlPoints.length = this.controlPointCount;\n    }\n    convertLegacySettingsForSynth(legacyCutoffSetting, legacyResonanceSetting, allowFirstOrder = false) {\n        this.reset();\n        const legacyFilterCutoffMaxHz = 8000;\n        const legacyFilterMax = 0.95;\n        const legacyFilterMaxRadians = Math.asin(legacyFilterMax / 2.0) * 2.0;\n        const legacyFilterMaxResonance = 0.95;\n        const legacyFilterCutoffRange = 11;\n        const legacyFilterResonanceRange = 8;\n        const firstOrder = (legacyResonanceSetting == 0 && allowFirstOrder);\n        const standardSampleRate = 48000;\n        const legacyHz = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\n        const legacyRadians = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\n        if (firstOrder) {\n            const extraOctaves = 3.5;\n            const targetRadians = legacyRadians * Math.pow(2.0, extraOctaves);\n            const curvedRadians = targetRadians / (1.0 + targetRadians / Math.PI);\n            const curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            const freqSetting = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n            const finalHz = FilterControlPoint.getHzFromSettingValue(freqSetting);\n            const finalRadians = 2.0 * Math.PI * finalHz / standardSampleRate;\n            const legacyFilter = new FilterCoefficients();\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\n            const response = new FrequencyResponse();\n            response.analyze(legacyFilter, finalRadians);\n            const legacyFilterGainAtNewRadians = response.magnitude();\n            let logGain = Math.log2(legacyFilterGainAtNewRadians);\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\n            const convertedGain = Math.pow(2.0, logGain);\n            const gainSetting = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\n            this.addPoint(0, freqSetting, gainSetting);\n        }\n        else {\n            const intendedGain = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\n            const invertedGain = 0.5 / intendedGain;\n            const maxRadians = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\n            const freqRatio = legacyRadians / maxRadians;\n            const targetRadians = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\n            const curvedRadians = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\n            let curvedHz;\n            curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            const freqSetting = FilterControlPoint.getSettingValueFromHz(curvedHz);\n            let legacyFilterGain;\n            const legacyFilter = new FilterCoefficients();\n            legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\n            const response = new FrequencyResponse();\n            response.analyze(legacyFilter, curvedRadians);\n            legacyFilterGain = response.magnitude();\n            const gainSetting = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\n            this.addPoint(0, freqSetting, gainSetting);\n        }\n    }\n}\nexport class FilterControlPoint {\n    constructor() {\n        this.freq = 0;\n        this.gain = Config.filterGainCenter;\n        this.type = 2;\n    }\n    set(freqSetting, gainSetting) {\n        this.freq = freqSetting;\n        this.gain = gainSetting;\n    }\n    getHz() {\n        return FilterControlPoint.getHzFromSettingValue(this.freq);\n    }\n    static getHzFromSettingValue(value) {\n        return Config.filterFreqReferenceHz * Math.pow(2.0, (value - Config.filterFreqReferenceSetting) * Config.filterFreqStep);\n    }\n    static getSettingValueFromHz(hz) {\n        return Math.log2(hz / Config.filterFreqReferenceHz) / Config.filterFreqStep + Config.filterFreqReferenceSetting;\n    }\n    static getRoundedSettingValueFromHz(hz) {\n        return Math.max(0, Math.min(Config.filterFreqRange - 1, Math.round(FilterControlPoint.getSettingValueFromHz(hz))));\n    }\n    getLinearGain(peakMult = 1.0) {\n        const power = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\n        const neutral = (this.type == 2) ? 0.0 : -0.5;\n        const interpolatedPower = neutral + (power - neutral) * peakMult;\n        return Math.pow(2.0, interpolatedPower);\n    }\n    static getRoundedSettingValueFromLinearGain(linearGain) {\n        return Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(Math.log2(linearGain) / Config.filterGainStep + Config.filterGainCenter)));\n    }\n    toCoefficients(filter, sampleRate, freqMult = 1.0, peakMult = 1.0) {\n        const cornerRadiansPerSample = 2.0 * Math.PI * Math.max(Config.filterFreqMinHz, Math.min(Config.filterFreqMaxHz, freqMult * this.getHz())) / sampleRate;\n        const linearGain = this.getLinearGain(peakMult);\n        switch (this.type) {\n            case 0:\n                filter.lowPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\n                break;\n            case 1:\n                filter.highPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\n                break;\n            case 2:\n                filter.peak2ndOrder(cornerRadiansPerSample, linearGain, 1.0);\n                break;\n            default:\n                throw new Error();\n        }\n    }\n    getVolumeCompensationMult() {\n        const octave = (this.freq - Config.filterFreqReferenceSetting) * Config.filterFreqStep;\n        const gainPow = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\n        switch (this.type) {\n            case 0:\n                const freqRelativeTo8khz = Math.pow(2.0, octave) * Config.filterFreqReferenceHz / 8000.0;\n                const warpedFreq = (Math.sqrt(1.0 + 4.0 * freqRelativeTo8khz) - 1.0) / 2.0;\n                const warpedOctave = Math.log2(warpedFreq);\n                return Math.pow(0.5, 0.2 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, Math.max(-3.0, 0.595 * warpedOctave + 0.35 * Math.min(0.0, gainPow + 1.0))));\n            case 1:\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, 0.3 * (-octave - Math.log2(Config.filterFreqReferenceHz / 125.0)) + 0.2 * Math.min(0.0, gainPow + 1.0)));\n            case 2:\n                const distanceFromCenter = octave + Math.log2(Config.filterFreqReferenceHz / 2000.0);\n                const freqLoudness = Math.pow(1.0 / (1.0 + Math.pow(distanceFromCenter / 3.0, 2.0)), 2.0);\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow) + 0.1 * freqLoudness * Math.min(0.0, gainPow));\n            default:\n                throw new Error();\n        }\n    }\n}\n//# sourceMappingURL=Filter.js.map","import { Config } from \"./SynthConfig\";\nimport { clamp } from \"./utils\";\nexport class EnvelopeSettings {\n    constructor(isNoiseEnvelope) {\n        this.isNoiseEnvelope = isNoiseEnvelope;\n        this.target = 0;\n        this.index = 0;\n        this.envelope = 0;\n        this.perEnvelopeSpeed = Config.envelopes[this.envelope].speed;\n        this.perEnvelopeLowerBound = 0;\n        this.perEnvelopeUpperBound = 1;\n        this.tempEnvelopeSpeed = null;\n        this.tempEnvelopeLowerBound = null;\n        this.tempEnvelopeUpperBound = null;\n        this.steps = 2;\n        this.seed = 2;\n        this.waveform = 0;\n        this.discrete = false;\n        this.reset();\n    }\n    reset() {\n        this.target = 0;\n        this.index = 0;\n        this.envelope = 0;\n        this.pitchEnvelopeStart = 0;\n        this.pitchEnvelopeEnd = this.isNoiseEnvelope ? Config.drumCount - 1 : Config.maxPitch;\n        this.inverse = false;\n        this.isNoiseEnvelope = false;\n        this.perEnvelopeSpeed = Config.envelopes[this.envelope].speed;\n        this.perEnvelopeLowerBound = 0;\n        this.perEnvelopeUpperBound = 1;\n        this.tempEnvelopeSpeed = null;\n        this.tempEnvelopeLowerBound = null;\n        this.tempEnvelopeUpperBound = null;\n        this.steps = 2;\n        this.seed = 2;\n        this.waveform = 0;\n        this.discrete = false;\n    }\n    toJsonObject() {\n        const envelopeObject = {\n            \"target\": Config.instrumentAutomationTargets[this.target].name,\n            \"envelope\": Config.newEnvelopes[this.envelope].name,\n            \"inverse\": this.inverse,\n            \"perEnvelopeSpeed\": this.perEnvelopeSpeed,\n            \"perEnvelopeLowerBound\": this.perEnvelopeLowerBound,\n            \"perEnvelopeUpperBound\": this.perEnvelopeUpperBound,\n            \"discrete\": this.discrete,\n        };\n        if (Config.instrumentAutomationTargets[this.target].maxCount > 1) {\n            envelopeObject[\"index\"] = this.index;\n        }\n        if (Config.newEnvelopes[this.envelope].name == \"pitch\") {\n            envelopeObject[\"pitchEnvelopeStart\"] = this.pitchEnvelopeStart;\n            envelopeObject[\"pitchEnvelopeEnd\"] = this.pitchEnvelopeEnd;\n        }\n        else if (Config.newEnvelopes[this.envelope].name == \"random\") {\n            envelopeObject[\"steps\"] = this.steps;\n            envelopeObject[\"seed\"] = this.seed;\n            envelopeObject[\"waveform\"] = this.waveform;\n        }\n        else if (Config.newEnvelopes[this.envelope].name == \"lfo\") {\n            envelopeObject[\"waveform\"] = this.waveform;\n            envelopeObject[\"steps\"] = this.steps;\n        }\n        return envelopeObject;\n    }\n    fromJsonObject(envelopeObject, format) {\n        this.reset();\n        let target = Config.instrumentAutomationTargets.dictionary[envelopeObject[\"target\"]];\n        if (target == null)\n            target = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\n        this.target = target.index;\n        let envelope = Config.envelopes.dictionary[\"none\"];\n        let isTremolo2 = false;\n        if (format == \"slarmoosbox\") {\n            if (envelopeObject[\"envelope\"] == \"tremolo2\") {\n                envelope = Config.newEnvelopes[8];\n                isTremolo2 = true;\n            }\n            else if (envelopeObject[\"envelope\"] == \"tremolo\") {\n                envelope = Config.newEnvelopes[8];\n                isTremolo2 = false;\n            }\n            else {\n                envelope = Config.newEnvelopes.dictionary[envelopeObject[\"envelope\"]];\n            }\n        }\n        else {\n            if (Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type == 9) {\n                envelope = Config.newEnvelopes[8];\n                isTremolo2 = true;\n            }\n            else if (Config.newEnvelopes[Math.max(Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type - 1, 0)].index > 8) {\n                envelope = Config.newEnvelopes[Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type - 1];\n            }\n            else {\n                envelope = Config.newEnvelopes[Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type];\n            }\n        }\n        if (envelope == undefined) {\n            if (Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type == 9) {\n                envelope = Config.newEnvelopes[8];\n                isTremolo2 = true;\n            }\n            else if (Config.newEnvelopes[Math.max(Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type - 1, 0)].index > 8) {\n                envelope = Config.newEnvelopes[Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type - 1];\n            }\n            else {\n                envelope = Config.newEnvelopes[Config.envelopes.dictionary[envelopeObject[\"envelope\"]].type];\n            }\n        }\n        if (envelope == null)\n            envelope = Config.envelopes.dictionary[\"none\"];\n        this.envelope = envelope.index;\n        if (envelopeObject[\"index\"] != undefined) {\n            this.index = clamp(0, Config.instrumentAutomationTargets[this.target].maxCount, envelopeObject[\"index\"] | 0);\n        }\n        else {\n            this.index = 0;\n        }\n        if (envelopeObject[\"pitchEnvelopeStart\"] != undefined) {\n            this.pitchEnvelopeStart = clamp(0, this.isNoiseEnvelope ? Config.drumCount : Config.maxPitch + 1, envelopeObject[\"pitchEnvelopeStart\"]);\n        }\n        else {\n            this.pitchEnvelopeStart = 0;\n        }\n        if (envelopeObject[\"pitchEnvelopeEnd\"] != undefined) {\n            this.pitchEnvelopeEnd = clamp(0, this.isNoiseEnvelope ? Config.drumCount : Config.maxPitch + 1, envelopeObject[\"pitchEnvelopeEnd\"]);\n        }\n        else {\n            this.pitchEnvelopeEnd = this.isNoiseEnvelope ? Config.drumCount : Config.maxPitch;\n        }\n        this.inverse = Boolean(envelopeObject[\"inverse\"]);\n        if (envelopeObject[\"perEnvelopeSpeed\"] != undefined) {\n            this.perEnvelopeSpeed = envelopeObject[\"perEnvelopeSpeed\"];\n        }\n        else {\n            this.perEnvelopeSpeed = Config.envelopes.dictionary[envelopeObject[\"envelope\"]].speed;\n        }\n        if (envelopeObject[\"perEnvelopeLowerBound\"] != undefined) {\n            this.perEnvelopeLowerBound = clamp(Config.perEnvelopeBoundMin, Config.perEnvelopeBoundMax + 1, envelopeObject[\"perEnvelopeLowerBound\"]);\n        }\n        else {\n            this.perEnvelopeLowerBound = 0;\n        }\n        if (envelopeObject[\"perEnvelopeUpperBound\"] != undefined) {\n            this.perEnvelopeUpperBound = clamp(Config.perEnvelopeBoundMin, Config.perEnvelopeBoundMax + 1, envelopeObject[\"perEnvelopeUpperBound\"]);\n        }\n        else {\n            this.perEnvelopeUpperBound = 1;\n        }\n        if (isTremolo2) {\n            if (this.inverse) {\n                this.perEnvelopeUpperBound = Math.floor((this.perEnvelopeUpperBound / 2) * 10) / 10;\n                this.perEnvelopeLowerBound = Math.floor((this.perEnvelopeLowerBound / 2) * 10) / 10;\n            }\n            else {\n                this.perEnvelopeUpperBound = Math.floor((0.5 + (this.perEnvelopeUpperBound - this.perEnvelopeLowerBound) / 2) * 10) / 10;\n                this.perEnvelopeLowerBound = 0.5;\n            }\n        }\n        if (envelopeObject[\"steps\"] != undefined) {\n            this.steps = clamp(1, Config.randomEnvelopeStepsMax + 1, envelopeObject[\"steps\"]);\n        }\n        else {\n            this.steps = 2;\n        }\n        if (envelopeObject[\"seed\"] != undefined) {\n            this.seed = clamp(1, Config.randomEnvelopeSeedMax + 1, envelopeObject[\"seed\"]);\n        }\n        else {\n            this.seed = 2;\n        }\n        if (envelopeObject[\"waveform\"] != undefined) {\n            this.waveform = envelopeObject[\"waveform\"];\n        }\n        else {\n            this.waveform = 0;\n        }\n        if (envelopeObject[\"discrete\"] != undefined) {\n            this.discrete = envelopeObject[\"discrete\"];\n        }\n        else {\n            this.discrete = false;\n        }\n    }\n}\n//# sourceMappingURL=Envelope.js.map","import { Config } from \"./SynthConfig\";\nimport { FilterSettings } from \"./Filter\";\nexport class Effect {\n    constructor(type) {\n        this.type = 0;\n        this.wetDryMix = 0.5;\n        this.send = 1;\n        this.eqFilter = new FilterSettings();\n        this.eqFilterType = false;\n        this.eqFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.eqFilterSimplePeak = 0;\n        this.eqSubFilters = [];\n        this.gain = Config.volumeRange / 2;\n        this.pan = Config.panCenter;\n        this.panDelay = 0;\n        this.panMode = 0;\n        this.aliases = false;\n        this.distortion = 0;\n        this.bitcrusherFreq = 0;\n        this.bitcrusherQuantization = 0;\n        this.ringModulation = Math.floor(Config.ringModRange / 2);\n        this.ringModulationHz = Math.floor(Config.ringModHzRange / 2);\n        this.ringModWaveformIndex = 0;\n        this.ringModPulseWidth = 0;\n        this.ringModHzOffset = 200;\n        this.granular = 4;\n        this.grainSize = (Config.grainSizeMax - Config.grainSizeMin) / Config.grainSizeStep;\n        this.grainAmounts = Config.grainAmountsMax;\n        this.grainRange = 40;\n        this.flanger = 0;\n        this.flangerSpeed = 0;\n        this.flangerDepth = 0;\n        this.flangerFeedback = 0;\n        this.chorus = 0;\n        this.reverb = 0;\n        this.echoSustain = 0;\n        this.echoDelay = 0;\n        this.echoPingPong = Config.panCenter;\n        this.type = type;\n    }\n}\n//# sourceMappingURL=Effect.js.map","import { toNameMap, Config, effectsIncludeTransition, effectsIncludeChord, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato } from \"./SynthConfig\";\nimport { FilterSettings } from \"./Filter\";\nimport { EnvelopeSettings } from \"./Envelope\";\nimport { Effect } from \"./Effect\";\nimport { clamp, fadeInSettingToSeconds, secondsToFadeInSetting, fadeOutSettingToTicks, ticksToFadeOutSetting, detuneToCents, centsToDetune, fittingPowerOfTwo } from \"./utils\";\nexport class Operator {\n    constructor(index) {\n        this.frequency = 4;\n        this.amplitude = 0;\n        this.waveform = 0;\n        this.pulseWidth = 0.5;\n        this.reset(index);\n    }\n    reset(index) {\n        this.frequency = 4;\n        this.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\n        this.waveform = 0;\n        this.pulseWidth = 5;\n    }\n    copy(other) {\n        this.frequency = other.frequency;\n        this.amplitude = other.amplitude;\n        this.waveform = other.waveform;\n        this.pulseWidth = other.pulseWidth;\n    }\n}\nexport class CustomAlgorithm {\n    constructor() {\n        this.name = \"\";\n        this.carrierCount = 0;\n        this.modulatedBy = [[], [], [], [], [], []];\n        this.associatedCarrier = [];\n        this.fromPreset(1);\n    }\n    set(carriers, modulation) {\n        this.reset();\n        this.carrierCount = carriers;\n        for (let i = 0; i < this.modulatedBy.length; i++) {\n            this.modulatedBy[i] = modulation[i];\n            if (i < carriers) {\n                this.associatedCarrier[i] = i + 1;\n            }\n            this.name += (i + 1);\n            for (let j = 0; j < modulation[i].length; j++) {\n                this.name += modulation[i][j];\n                if (modulation[i][j] > carriers - 1) {\n                    this.associatedCarrier[modulation[i][j] - 1] = i + 1;\n                }\n                this.name += \",\";\n            }\n            if (i < carriers) {\n                this.name += \"|\";\n            }\n            else {\n                this.name += \".\";\n            }\n        }\n    }\n    reset() {\n        this.name = \"\";\n        this.carrierCount = 1;\n        this.modulatedBy = [[2, 3, 4, 5, 6], [], [], [], [], []];\n        this.associatedCarrier = [1, 1, 1, 1, 1, 1];\n    }\n    copy(other) {\n        this.name = other.name;\n        this.carrierCount = other.carrierCount;\n        this.modulatedBy = other.modulatedBy;\n        this.associatedCarrier = other.associatedCarrier;\n    }\n    fromPreset(other) {\n        this.reset();\n        let preset = Config.algorithms6Op[other];\n        this.name = preset.name;\n        this.carrierCount = preset.carrierCount;\n        for (var i = 0; i < preset.modulatedBy.length; i++) {\n            this.modulatedBy[i] = Array.from(preset.modulatedBy[i]);\n            this.associatedCarrier[i] = preset.associatedCarrier[i];\n        }\n    }\n}\nexport class CustomFeedBack {\n    constructor() {\n        this.name = \"\";\n        this.indices = [[], [], [], [], [], []];\n        this.fromPreset(1);\n    }\n    set(inIndices) {\n        this.reset();\n        for (let i = 0; i < this.indices.length; i++) {\n            this.indices[i] = inIndices[i];\n            for (let j = 0; j < inIndices[i].length; j++) {\n                this.name += inIndices[i][j];\n                this.name += \",\";\n            }\n            this.name += \".\";\n        }\n    }\n    reset() {\n        this.reset;\n        this.name = \"\";\n        this.indices = [[1], [], [], [], [], []];\n    }\n    copy(other) {\n        this.name = other.name;\n        this.indices = other.indices;\n    }\n    fromPreset(other) {\n        this.reset();\n        let preset = Config.feedbacks6Op[other];\n        for (var i = 0; i < preset.indices.length; i++) {\n            this.indices[i] = Array.from(preset.indices[i]);\n            for (let j = 0; j < preset.indices[i].length; j++) {\n                this.name += preset.indices[i][j];\n                this.name += \",\";\n            }\n            this.name += \".\";\n        }\n    }\n}\nexport class SpectrumWave {\n    constructor(isNoiseChannel) {\n        this.spectrum = [];\n        this.hash = -1;\n        this.reset(isNoiseChannel);\n    }\n    reset(isNoiseChannel) {\n        for (let i = 0; i < Config.spectrumControlPoints; i++) {\n            if (isNoiseChannel) {\n                this.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\n            }\n            else {\n                const isHarmonic = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21 || i == 23 || i >= 25;\n                this.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\n            }\n        }\n        this.markCustomWaveDirty();\n    }\n    markCustomWaveDirty() {\n        const hashMult = fittingPowerOfTwo(Config.spectrumMax + 2) - 1;\n        let hash = 0;\n        for (const point of this.spectrum)\n            hash = ((hash * hashMult) + point) >>> 0;\n        this.hash = hash;\n    }\n}\nexport class HarmonicsWave {\n    constructor() {\n        this.harmonics = [];\n        this.hash = -1;\n        this.reset();\n    }\n    reset() {\n        for (let i = 0; i < Config.harmonicsControlPoints; i++) {\n            this.harmonics[i] = 0;\n        }\n        this.harmonics[0] = Config.harmonicsMax;\n        this.harmonics[3] = Config.harmonicsMax;\n        this.harmonics[6] = Config.harmonicsMax;\n        this.markCustomWaveDirty();\n    }\n    markCustomWaveDirty() {\n        const hashMult = fittingPowerOfTwo(Config.harmonicsMax + 2) - 1;\n        let hash = 0;\n        for (const point of this.harmonics)\n            hash = ((hash * hashMult) + point) >>> 0;\n        this.hash = hash;\n    }\n}\nexport class Instrument {\n    constructor(isNoiseChannel, isModChannel) {\n        this.type = 0;\n        this.preset = 0;\n        this.chipWave = 2;\n        this.isUsingAdvancedLoopControls = false;\n        this.chipWaveLoopStart = 0;\n        this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\n        this.chipWaveLoopMode = 0;\n        this.chipWavePlayBackwards = false;\n        this.chipWaveStartOffset = 0;\n        this.chipWaveInStereo = false;\n        this.chipNoise = 1;\n        this.noteFilter = new FilterSettings();\n        this.noteFilterType = false;\n        this.noteFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.noteFilterSimplePeak = 0;\n        this.noteSubFilters = [];\n        this.envelopes = [];\n        this.fadeIn = 0;\n        this.fadeOut = Config.fadeOutNeutral;\n        this.envelopeCount = 0;\n        this.transition = Config.transitions.dictionary[\"normal\"].index;\n        this.pitchShift = 0;\n        this.detune = 0;\n        this.vibrato = 0;\n        this.interval = 0;\n        this.vibratoDepth = 0;\n        this.vibratoSpeed = 10;\n        this.vibratoDelay = 0;\n        this.vibratoType = 0;\n        this.envelopeSpeed = 12;\n        this.unison = 0;\n        this.unisonVoices = 1;\n        this.unisonSpread = 0.0;\n        this.unisonOffset = 0.0;\n        this.unisonExpression = 1.4;\n        this.unisonSign = 1.0;\n        this.effects = [];\n        this.effectCount = 0;\n        this.mdeffects = 0;\n        this.chord = 1;\n        this.volume = 0;\n        this.arpeggioSpeed = 12;\n        this.monoChordTone = 0;\n        this.fastTwoNoteArp = false;\n        this.legacyTieOver = false;\n        this.clicklessTransition = false;\n        this.aliases = false;\n        this.pulseWidth = Config.pulseWidthRange;\n        this.decimalOffset = 0;\n        this.supersawDynamism = Config.supersawDynamismMax;\n        this.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\n        this.supersawShape = 0;\n        this.stringSustain = 10;\n        this.stringSustainType = 1;\n        this.algorithm = 0;\n        this.feedbackType = 0;\n        this.algorithm6Op = 1;\n        this.feedbackType6Op = 1;\n        this.customAlgorithm = new CustomAlgorithm();\n        this.customFeedbackType = new CustomFeedBack();\n        this.feedbackAmplitude = 0;\n        this.customChipWave = new Float32Array(64);\n        this.customChipWaveIntegral = new Float32Array(65);\n        this.operators = [];\n        this.harmonicsWave = new HarmonicsWave();\n        this.drumsetEnvelopes = [];\n        this.drumsetSpectrumWaves = [];\n        this.modChannels = [];\n        this.modInstruments = [];\n        this.modulators = [];\n        this.modFilterTypes = [];\n        this.modEnvelopeNumbers = [];\n        this.invalidModulators = [];\n        this.isNoiseInstrument = false;\n        if (isModChannel) {\n            for (let mod = 0; mod < Config.modCount; mod++) {\n                this.modChannels.push([-2]);\n                this.modInstruments.push([0]);\n                this.modulators.push(Config.modulators.dictionary[\"none\"].index);\n            }\n        }\n        this.spectrumWave = new SpectrumWave(isNoiseChannel);\n        for (let i = 0; i < Config.operatorCount + 2; i++) {\n            this.operators[i] = new Operator(i);\n        }\n        for (let i = 0; i < Config.drumCount; i++) {\n            this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\n            this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\n        }\n        for (let i = 0; i < 64; i++) {\n            this.customChipWave[i] = 24 - Math.floor(i * (48 / 64));\n        }\n        let sum = 0.0;\n        for (let i = 0; i < this.customChipWave.length; i++) {\n            sum += this.customChipWave[i];\n        }\n        const average = sum / this.customChipWave.length;\n        let cumulative = 0;\n        let wavePrev = 0;\n        for (let i = 0; i < this.customChipWave.length; i++) {\n            cumulative += wavePrev;\n            wavePrev = this.customChipWave[i] - average;\n            this.customChipWaveIntegral[i] = cumulative;\n        }\n        this.customChipWaveIntegral[64] = 0.0;\n        this.isNoiseInstrument = isNoiseChannel;\n    }\n    setTypeAndReset(type, isNoiseChannel, isModChannel) {\n        if (isModChannel)\n            type = 10;\n        this.type = type;\n        this.preset = type;\n        this.volume = 0;\n        this.effects = [];\n        this.effectCount = 0;\n        this.mdeffects = 0;\n        for (let i = 0; i < Config.filterMorphCount; i++) {\n            this.noteSubFilters[i] = null;\n        }\n        this.noteFilter.reset();\n        this.noteFilterType = false;\n        this.noteFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.noteFilterSimplePeak = 0;\n        this.pitchShift = Config.pitchShiftCenter;\n        this.detune = Config.detuneCenter;\n        this.vibrato = 0;\n        this.unison = 0;\n        this.stringSustain = 10;\n        this.stringSustainType = Config.enableAcousticSustain ? 1 : 0;\n        this.clicklessTransition = false;\n        this.arpeggioSpeed = 12;\n        this.monoChordTone = 1;\n        this.envelopeSpeed = 12;\n        this.legacyTieOver = false;\n        this.aliases = false;\n        this.fadeIn = 0;\n        this.fadeOut = Config.fadeOutNeutral;\n        this.transition = Config.transitions.dictionary[\"normal\"].index;\n        this.envelopeCount = 0;\n        this.isNoiseInstrument = isNoiseChannel;\n        switch (type) {\n            case 0:\n                this.chipWave = 2;\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                this.isUsingAdvancedLoopControls = false;\n                this.chipWaveLoopStart = 0;\n                this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\n                this.chipWaveLoopMode = 0;\n                this.chipWavePlayBackwards = false;\n                this.chipWaveInStereo = false;\n                this.chipWaveStartOffset = 0;\n                break;\n            case 9:\n                this.chipWave = 2;\n                this.chipWaveInStereo = false;\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                for (let i = 0; i < 64; i++) {\n                    this.customChipWave[i] = 24 - (Math.floor(i * (48 / 64)));\n                }\n                let sum = 0.0;\n                for (let i = 0; i < this.customChipWave.length; i++) {\n                    sum += this.customChipWave[i];\n                }\n                const average = sum / this.customChipWave.length;\n                let cumulative = 0;\n                let wavePrev = 0;\n                for (let i = 0; i < this.customChipWave.length; i++) {\n                    cumulative += wavePrev;\n                    wavePrev = this.customChipWave[i] - average;\n                    this.customChipWaveIntegral[i] = cumulative;\n                }\n                this.customChipWaveIntegral[64] = 0.0;\n                break;\n            case 1:\n                this.chord = Config.chords.dictionary[\"custom interval\"].index;\n                this.algorithm = 0;\n                this.feedbackType = 0;\n                this.feedbackAmplitude = 0;\n                for (let i = 0; i < this.operators.length; i++) {\n                    this.operators[i].reset(i);\n                }\n                break;\n            case 11:\n                this.transition = 1;\n                this.vibrato = 0;\n                this.chord = 3;\n                this.algorithm = 0;\n                this.feedbackType = 0;\n                this.algorithm6Op = 1;\n                this.feedbackType6Op = 1;\n                this.customAlgorithm.fromPreset(1);\n                this.feedbackAmplitude = 0;\n                for (let i = 0; i < this.operators.length; i++) {\n                    this.operators[i].reset(i);\n                }\n                break;\n            case 2:\n                this.chipNoise = 1;\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                break;\n            case 3:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                this.spectrumWave.reset(isNoiseChannel);\n                break;\n            case 4:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                for (let i = 0; i < Config.drumCount; i++) {\n                    this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\n                    if (this.drumsetSpectrumWaves[i] == undefined) {\n                        this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\n                    }\n                    this.drumsetSpectrumWaves[i].reset(isNoiseChannel);\n                }\n                break;\n            case 5:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                this.harmonicsWave.reset();\n                break;\n            case 6:\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                this.pulseWidth = Config.pulseWidthRange;\n                this.decimalOffset = 0;\n                break;\n            case 7:\n                this.chord = Config.chords.dictionary[\"strum\"].index;\n                this.harmonicsWave.reset();\n                break;\n            case 10:\n                this.transition = 0;\n                this.vibrato = 0;\n                this.interval = 0;\n                this.chord = 0;\n                this.modChannels = [];\n                this.modInstruments = [];\n                this.modulators = [];\n                for (let mod = 0; mod < Config.modCount; mod++) {\n                    this.modChannels.push([-2]);\n                    this.modInstruments.push([0]);\n                    this.modulators.push(Config.modulators.dictionary[\"none\"].index);\n                    this.invalidModulators[mod] = false;\n                    this.modFilterTypes[mod] = 0;\n                    this.modEnvelopeNumbers[mod] = 0;\n                }\n                break;\n            case 8:\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                this.supersawDynamism = Config.supersawDynamismMax;\n                this.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\n                this.supersawShape = 0;\n                this.pulseWidth = Config.pulseWidthRange - 1;\n                this.decimalOffset = 0;\n                break;\n            default:\n                throw new Error(\"Unrecognized instrument type: \" + type);\n        }\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n            this.mdeffects = (this.mdeffects | (1 << 4));\n        }\n    }\n    convertLegacySettings(legacySettings, forceSimpleFilter) {\n        let legacyCutoffSetting = legacySettings.filterCutoff;\n        let legacyResonanceSetting = legacySettings.filterResonance;\n        let legacyFilterEnv = legacySettings.filterEnvelope;\n        let legacyPulseEnv = legacySettings.pulseEnvelope;\n        let legacyOperatorEnvelopes = legacySettings.operatorEnvelopes;\n        let legacyFeedbackEnv = legacySettings.feedbackEnvelope;\n        if (legacyCutoffSetting == undefined)\n            legacyCutoffSetting = (this.type == 0) ? 6 : 10;\n        if (legacyResonanceSetting == undefined)\n            legacyResonanceSetting = 0;\n        if (legacyFilterEnv == undefined)\n            legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\n        if (legacyPulseEnv == undefined)\n            legacyPulseEnv = Config.envelopes.dictionary[(this.type == 6) ? \"twang 2\" : \"none\"];\n        if (legacyOperatorEnvelopes == undefined)\n            legacyOperatorEnvelopes = [Config.envelopes.dictionary[(this.type == 1) ? \"note size\" : \"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"]];\n        if (legacyFeedbackEnv == undefined)\n            legacyFeedbackEnv = Config.envelopes.dictionary[\"none\"];\n        const legacyFilterCutoffRange = 11;\n        const cutoffAtMax = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\n        if (cutoffAtMax && legacyFilterEnv.type == 4)\n            legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\n        const carrierCount = Config.algorithms[this.algorithm].carrierCount;\n        let noCarriersControlledByNoteSize = true;\n        let allCarriersControlledByNoteSize = true;\n        let noteSizeControlsSomethingElse = (legacyFilterEnv.type == 1) || (legacyPulseEnv.type == 1);\n        if (this.type == 1 || this.type == 11) {\n            noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyFeedbackEnv.type == 1);\n            for (let i = 0; i < legacyOperatorEnvelopes.length; i++) {\n                if (i < carrierCount) {\n                    if (legacyOperatorEnvelopes[i].type != 1) {\n                        allCarriersControlledByNoteSize = false;\n                    }\n                    else {\n                        noCarriersControlledByNoteSize = false;\n                    }\n                }\n                else {\n                    noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyOperatorEnvelopes[i].type == 1);\n                }\n            }\n        }\n        this.envelopeCount = 0;\n        if (this.type == 1 || this.type == 11) {\n            if (allCarriersControlledByNoteSize && noteSizeControlsSomethingElse) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteVolume\"].index, 0, Config.envelopes.dictionary[\"note size\"].index, false);\n            }\n            else if (noCarriersControlledByNoteSize && !noteSizeControlsSomethingElse) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"none\"].index, 0, Config.envelopes.dictionary[\"note size\"].index, false);\n            }\n        }\n        if (legacyPulseEnv.type != 0) {\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pulseWidth\"].index, 0, legacyPulseEnv.index, false);\n        }\n        for (let i = 0; i < legacyOperatorEnvelopes.length; i++) {\n            if (i < carrierCount && allCarriersControlledByNoteSize)\n                continue;\n            if (legacyOperatorEnvelopes[i].type != 0) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorAmplitude\"].index, i, legacyOperatorEnvelopes[i].index, false);\n            }\n        }\n        if (legacyFeedbackEnv.type != 0) {\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"feedbackAmplitude\"].index, 0, legacyFeedbackEnv.index, false);\n        }\n    }\n    toJsonObject() {\n        const instrumentObject = {\n            \"type\": Config.instrumentTypeNames[this.type],\n            \"volume\": this.volume,\n            \"noteFilter\": this.noteFilter.toJsonObject(),\n            \"noteFilterType\": this.noteFilterType,\n            \"noteSimpleCut\": this.noteFilterSimpleCut,\n            \"noteSimplePeak\": this.noteFilterSimplePeak,\n            \"envelopeSpeed\": this.envelopeSpeed,\n        };\n        if (this.preset != this.type) {\n            instrumentObject[\"preset\"] = this.preset;\n        }\n        for (let i = 0; i < Config.filterMorphCount; i++) {\n            if (this.noteSubFilters[i] != null)\n                instrumentObject[\"noteSubFilters\" + i] = this.noteSubFilters[i].toJsonObject();\n        }\n        instrumentObject[\"mdeffects\"] = this.mdeffects;\n        if (effectsIncludeTransition(this.mdeffects)) {\n            instrumentObject[\"transition\"] = Config.transitions[this.transition].name;\n            instrumentObject[\"clicklessTransition\"] = this.clicklessTransition;\n        }\n        if (effectsIncludeChord(this.mdeffects)) {\n            instrumentObject[\"chord\"] = this.getChord().name;\n            instrumentObject[\"fastTwoNoteArp\"] = this.fastTwoNoteArp;\n            instrumentObject[\"arpeggioSpeed\"] = this.arpeggioSpeed;\n            instrumentObject[\"monoChordTone\"] = this.monoChordTone;\n        }\n        if (effectsIncludePitchShift(this.mdeffects)) {\n            instrumentObject[\"pitchShiftSemitones\"] = this.pitchShift;\n        }\n        if (effectsIncludeDetune(this.mdeffects)) {\n            instrumentObject[\"detuneCents\"] = detuneToCents(this.detune);\n        }\n        if (effectsIncludeVibrato(this.mdeffects)) {\n            if (this.vibrato == -1) {\n                this.vibrato = 5;\n            }\n            if (this.vibrato != 5) {\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\n            }\n            else {\n                instrumentObject[\"vibrato\"] = \"custom\";\n            }\n            instrumentObject[\"vibratoDepth\"] = this.vibratoDepth;\n            instrumentObject[\"vibratoDelay\"] = this.vibratoDelay;\n            instrumentObject[\"vibratoSpeed\"] = this.vibratoSpeed;\n            instrumentObject[\"vibratoType\"] = this.vibratoType;\n        }\n        if (this.type != 4) {\n            instrumentObject[\"fadeInSeconds\"] = Math.round(10000 * fadeInSettingToSeconds(this.fadeIn)) / 10000;\n            instrumentObject[\"fadeOutTicks\"] = fadeOutSettingToTicks(this.fadeOut);\n        }\n        if (this.type == 5 || this.type == 7) {\n            instrumentObject[\"harmonics\"] = [];\n            for (let i = 0; i < Config.harmonicsControlPoints; i++) {\n                instrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\n            }\n        }\n        if (this.type == 2) {\n            instrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n        }\n        else if (this.type == 3) {\n            instrumentObject[\"spectrum\"] = [];\n            for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                instrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\n            }\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n        }\n        else if (this.type == 4) {\n            instrumentObject[\"drums\"] = [];\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n            for (let j = 0; j < Config.drumCount; j++) {\n                const spectrum = [];\n                for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                    spectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\n                }\n                instrumentObject[\"drums\"][j] = {\n                    \"filterEnvelope\": this.getDrumsetEnvelope(j).name,\n                    \"spectrum\": spectrum,\n                };\n            }\n        }\n        else if (this.type == 0) {\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n            instrumentObject[\"isUsingAdvancedLoopControls\"] = this.isUsingAdvancedLoopControls;\n            instrumentObject[\"chipWaveLoopStart\"] = this.chipWaveLoopStart;\n            instrumentObject[\"chipWaveLoopEnd\"] = this.chipWaveLoopEnd;\n            instrumentObject[\"chipWaveLoopMode\"] = this.chipWaveLoopMode;\n            instrumentObject[\"chipWavePlayBackwards\"] = this.chipWavePlayBackwards;\n            instrumentObject[\"chipWaveStartOffset\"] = this.chipWaveStartOffset;\n            instrumentObject[\"chipWaveInStereo\"] = this.chipWaveInStereo;\n        }\n        else if (this.type == 6) {\n            instrumentObject[\"pulseWidth\"] = this.pulseWidth;\n            instrumentObject[\"decimalOffset\"] = this.decimalOffset;\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n        }\n        else if (this.type == 8) {\n            instrumentObject[\"pulseWidth\"] = this.pulseWidth;\n            instrumentObject[\"decimalOffset\"] = this.decimalOffset;\n            instrumentObject[\"dynamism\"] = Math.round(100 * this.supersawDynamism / Config.supersawDynamismMax);\n            instrumentObject[\"spread\"] = Math.round(100 * this.supersawSpread / Config.supersawSpreadMax);\n            instrumentObject[\"shape\"] = Math.round(100 * this.supersawShape / Config.supersawShapeMax);\n        }\n        else if (this.type == 7) {\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n            instrumentObject[\"stringSustain\"] = Math.round(100 * this.stringSustain / (Config.stringSustainRange - 1));\n            if (Config.enableAcousticSustain) {\n                instrumentObject[\"stringSustainType\"] = Config.sustainTypeNames[this.stringSustainType];\n            }\n        }\n        else if (this.type == 5) {\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n        }\n        else if (this.type == 1 || this.type == 11) {\n            const operatorArray = [];\n            for (const operator of this.operators) {\n                operatorArray.push({\n                    \"frequency\": Config.operatorFrequencies[operator.frequency].name,\n                    \"amplitude\": operator.amplitude,\n                    \"waveform\": Config.operatorWaves[operator.waveform].name,\n                    \"pulseWidth\": operator.pulseWidth,\n                });\n            }\n            if (this.type == 1) {\n                instrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\n                instrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\n                instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\n                instrumentObject[\"operators\"] = operatorArray;\n            }\n            else {\n                instrumentObject[\"algorithm\"] = Config.algorithms6Op[this.algorithm6Op].name;\n                instrumentObject[\"feedbackType\"] = Config.feedbacks6Op[this.feedbackType6Op].name;\n                instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\n                if (this.algorithm6Op == 0) {\n                    const customAlgorithm = {};\n                    customAlgorithm[\"mods\"] = this.customAlgorithm.modulatedBy;\n                    customAlgorithm[\"carrierCount\"] = this.customAlgorithm.carrierCount;\n                    instrumentObject[\"customAlgorithm\"] = customAlgorithm;\n                }\n                if (this.feedbackType6Op == 0) {\n                    const customFeedback = {};\n                    customFeedback[\"mods\"] = this.customFeedbackType.indices;\n                    instrumentObject[\"customFeedback\"] = customFeedback;\n                }\n                instrumentObject[\"operators\"] = operatorArray;\n            }\n        }\n        else if (this.type == 9) {\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\n            if (this.unison == Config.unisons.length) {\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\n            }\n            instrumentObject[\"customChipWave\"] = new Float64Array(64);\n            instrumentObject[\"customChipWaveIntegral\"] = new Float64Array(65);\n            for (let i = 0; i < this.customChipWave.length; i++) {\n                instrumentObject[\"customChipWave\"][i] = this.customChipWave[i];\n            }\n        }\n        else if (this.type == 10) {\n            instrumentObject[\"modChannels\"] = [];\n            instrumentObject[\"modInstruments\"] = [];\n            instrumentObject[\"modSettings\"] = [];\n            instrumentObject[\"modFilterTypes\"] = [];\n            instrumentObject[\"modEnvelopeNumbers\"] = [];\n            for (let mod = 0; mod < Config.modCount; mod++) {\n                instrumentObject[\"modChannels\"][mod] = this.modChannels[mod];\n                instrumentObject[\"modInstruments\"][mod] = this.modInstruments[mod];\n                instrumentObject[\"modSettings\"][mod] = this.modulators[mod];\n                instrumentObject[\"modFilterTypes\"][mod] = this.modFilterTypes[mod];\n                instrumentObject[\"modEnvelopeNumbers\"][mod] = this.modEnvelopeNumbers[mod];\n            }\n        }\n        else {\n            throw new Error(\"Unrecognized instrument type\");\n        }\n        const envelopes = [];\n        for (let i = 0; i < this.envelopeCount; i++) {\n            envelopes.push(this.envelopes[i].toJsonObject());\n        }\n        instrumentObject[\"envelopes\"] = envelopes;\n        return instrumentObject;\n    }\n    fromJsonObject(instrumentObject, isNoiseChannel, isModChannel, useSlowerRhythm, useFastTwoNoteArp, legacyGlobalReverb = 0, jsonFormat = Config.jsonFormat) {\n        if (instrumentObject == undefined)\n            instrumentObject = {};\n        const format = jsonFormat.toLowerCase();\n        let type = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\n        if ((format == \"synthbox\") && (instrumentObject[\"type\"] == \"FM\"))\n            type = Config.instrumentTypeNames.indexOf(\"FM6op\");\n        if (type == -1)\n            type = isModChannel ? 10 : (isNoiseChannel ? 2 : 0);\n        this.setTypeAndReset(type, isNoiseChannel, isModChannel);\n        if (instrumentObject[\"preset\"] != undefined) {\n            this.preset = instrumentObject[\"preset\"] >>> 0;\n        }\n        if (instrumentObject[\"volume\"] != undefined) {\n            if (format == \"jummbox\" || format == \"midbox\" || format == \"synthbox\" || format == \"goldbox\" || format == \"paandorasbox\" || format == \"ultrabox\" || format == \"slarmoosbox\" || format == \"Theepbox\") {\n                this.volume = clamp(-Config.volumeRange / 2, (Config.volumeRange / 2) + 1, instrumentObject[\"volume\"] | 0);\n            }\n            else {\n                this.volume = Math.round(-clamp(0, 8, Math.round(5 - (instrumentObject[\"volume\"] | 0) / 20)) * 25.0 / 7.0);\n            }\n        }\n        else {\n            this.volume = 0;\n        }\n        this.envelopeSpeed = instrumentObject[\"envelopeSpeed\"] != undefined ? clamp(0, Config.modulators.dictionary[\"envelope speed\"].maxRawVol + 1, instrumentObject[\"envelopeSpeed\"] | 0) : 12;\n        if (Array.isArray(instrumentObject[\"effects\"])) {\n        }\n        else {\n        }\n        if (instrumentObject[\"mdeffects\"] != undefined) {\n            this.mdeffects = instrumentObject[\"mdeffects\"];\n        }\n        else\n            this.mdeffects = 0;\n        this.transition = Config.transitions.dictionary[\"normal\"].index;\n        const transitionProperty = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"];\n        if (transitionProperty != undefined) {\n            let transition = Config.transitions.dictionary[transitionProperty];\n            if (instrumentObject[\"fadeInSeconds\"] == undefined || instrumentObject[\"fadeOutTicks\"] == undefined) {\n                const legacySettings = {\n                    \"binary\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                    \"seamless\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                    \"sudden\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                    \"hard\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                    \"smooth\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    \"soft\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    \"slide\": { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    \"cross fade\": { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\n                    \"hard fade\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\n                    \"medium fade\": { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\n                    \"soft fade\": { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\n                }[transitionProperty];\n                if (legacySettings != undefined) {\n                    transition = Config.transitions.dictionary[legacySettings.transition];\n                    this.fadeIn = secondsToFadeInSetting(legacySettings.fadeInSeconds);\n                    this.fadeOut = ticksToFadeOutSetting(legacySettings.fadeOutTicks);\n                }\n            }\n            if (transition != undefined)\n                this.transition = transition.index;\n            if (this.transition != Config.transitions.dictionary[\"normal\"].index) {\n                this.mdeffects = (this.mdeffects | (1 << 3));\n            }\n        }\n        if (instrumentObject[\"fadeInSeconds\"] != undefined) {\n            this.fadeIn = secondsToFadeInSetting(+instrumentObject[\"fadeInSeconds\"]);\n        }\n        if (instrumentObject[\"fadeOutTicks\"] != undefined) {\n            this.fadeOut = ticksToFadeOutSetting(+instrumentObject[\"fadeOutTicks\"]);\n        }\n        {\n            const chordProperty = instrumentObject[\"chord\"];\n            const legacyChordNames = { \"harmony\": \"simultaneous\" };\n            const chord = Config.chords.dictionary[legacyChordNames[chordProperty]] || Config.chords.dictionary[chordProperty];\n            if (chord != undefined) {\n                this.chord = chord.index;\n            }\n            else {\n                if (this.type == 2) {\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                }\n                else if (this.type == 7) {\n                    this.chord = Config.chords.dictionary[\"strum\"].index;\n                }\n                else if (this.type == 0) {\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                }\n                else if (this.type == 1 || this.type == 11) {\n                    this.chord = Config.chords.dictionary[\"custom interval\"].index;\n                }\n                else {\n                    this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                }\n            }\n        }\n        this.unison = Config.unisons.dictionary[\"none\"].index;\n        const unisonProperty = instrumentObject[\"unison\"] || instrumentObject[\"interval\"] || instrumentObject[\"chorus\"];\n        if (unisonProperty != undefined) {\n            const legacyChorusNames = { \"union\": \"none\", \"fifths\": \"fifth\", \"octaves\": \"octave\", \"error\": \"voiced\" };\n            const unison = Config.unisons.dictionary[legacyChorusNames[unisonProperty]] || Config.unisons.dictionary[unisonProperty];\n            if (unison != undefined)\n                this.unison = unison.index;\n            if (unisonProperty == \"custom\")\n                this.unison = Config.unisons.length;\n        }\n        this.unisonVoices = (instrumentObject[\"unisonVoices\"] == undefined) ? Config.unisons[this.unison].voices : instrumentObject[\"unisonVoices\"];\n        this.unisonSpread = (instrumentObject[\"unisonSpread\"] == undefined) ? Config.unisons[this.unison].spread : instrumentObject[\"unisonSpread\"];\n        this.unisonOffset = (instrumentObject[\"unisonOffset\"] == undefined) ? Config.unisons[this.unison].offset : instrumentObject[\"unisonOffset\"];\n        this.unisonExpression = (instrumentObject[\"unisonExpression\"] == undefined) ? Config.unisons[this.unison].expression : instrumentObject[\"unisonExpression\"];\n        this.unisonSign = (instrumentObject[\"unisonSign\"] == undefined) ? Config.unisons[this.unison].sign : instrumentObject[\"unisonSign\"];\n        if (instrumentObject[\"chorus\"] == \"custom harmony\") {\n            this.unison = Config.unisons.dictionary[\"hum\"].index;\n            this.chord = Config.chords.dictionary[\"custom interval\"].index;\n        }\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index && !Array.isArray(instrumentObject[\"mdeffects\"])) {\n            this.mdeffects = (this.mdeffects | (1 << 4));\n        }\n        if (instrumentObject[\"pitchShiftSemitones\"] != undefined) {\n            this.pitchShift = clamp(0, Config.pitchShiftRange, Math.round(+instrumentObject[\"pitchShiftSemitones\"]));\n        }\n        if (instrumentObject[\"octoff\"] != undefined) {\n            let potentialPitchShift = instrumentObject[\"octoff\"];\n            this.mdeffects = (this.mdeffects | (1 << 0));\n            if ((potentialPitchShift == \"+1 (octave)\") || (potentialPitchShift == \"+2 (2 octaves)\")) {\n                this.pitchShift = 24;\n            }\n            else if ((potentialPitchShift == \"+1/2 (fifth)\") || (potentialPitchShift == \"+1 1/2 (octave and fifth)\")) {\n                this.pitchShift = 18;\n            }\n            else if ((potentialPitchShift == \"-1 (octave)\") || (potentialPitchShift == \"-2 (2 octaves\")) {\n                this.pitchShift = 0;\n            }\n            else if ((potentialPitchShift == \"-1/2 (fifth)\") || (potentialPitchShift == \"-1 1/2 (octave and fifth)\")) {\n                this.pitchShift = 6;\n            }\n            else {\n                this.pitchShift = 12;\n            }\n        }\n        if (instrumentObject[\"detuneCents\"] != undefined) {\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, Math.round(centsToDetune(+instrumentObject[\"detuneCents\"])));\n        }\n        this.vibrato = Config.vibratos.dictionary[\"none\"].index;\n        const vibratoProperty = instrumentObject[\"vibrato\"] || instrumentObject[\"effect\"];\n        if (vibratoProperty != undefined) {\n            const legacyVibratoNames = { \"vibrato light\": \"light\", \"vibrato delayed\": \"delayed\", \"vibrato heavy\": \"heavy\" };\n            const vibrato = Config.vibratos.dictionary[legacyVibratoNames[unisonProperty]] || Config.vibratos.dictionary[vibratoProperty];\n            if (vibrato != undefined)\n                this.vibrato = vibrato.index;\n            else if (vibratoProperty == \"custom\")\n                this.vibrato = Config.vibratos.length;\n            if (this.vibrato == Config.vibratos.length) {\n                this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\n                this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\n                this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\n                this.vibratoType = instrumentObject[\"vibratoType\"];\n            }\n            else {\n                this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\n                this.vibratoDelay = Config.vibratos[this.vibrato].delayTicks / 2;\n                this.vibratoSpeed = 10;\n                this.vibratoType = Config.vibratos[this.vibrato].type;\n            }\n            if (vibrato != Config.vibratos.dictionary[\"none\"]) {\n                this.mdeffects = (this.mdeffects | (1 << 2));\n            }\n        }\n        if (instrumentObject[\"detune\"] != undefined) {\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (instrumentObject[\"detune\"] | 0));\n        }\n        else if (instrumentObject[\"detuneCents\"] == undefined) {\n            this.detune = Config.detuneCenter;\n        }\n        if (instrumentObject[\"pulseWidth\"] != undefined) {\n            this.pulseWidth = clamp(1, Config.pulseWidthRange + 1, Math.round(instrumentObject[\"pulseWidth\"]));\n        }\n        else {\n            this.pulseWidth = Config.pulseWidthRange;\n        }\n        if (instrumentObject[\"decimalOffset\"] != undefined) {\n            this.decimalOffset = clamp(0, 99 + 1, Math.round(instrumentObject[\"decimalOffset\"]));\n        }\n        else {\n            this.decimalOffset = 0;\n        }\n        if (instrumentObject[\"dynamism\"] != undefined) {\n            this.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, Math.round(Config.supersawDynamismMax * (instrumentObject[\"dynamism\"] | 0) / 100));\n        }\n        else {\n            this.supersawDynamism = Config.supersawDynamismMax;\n        }\n        if (instrumentObject[\"spread\"] != undefined) {\n            this.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, Math.round(Config.supersawSpreadMax * (instrumentObject[\"spread\"] | 0) / 100));\n        }\n        else {\n            this.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\n        }\n        if (instrumentObject[\"shape\"] != undefined) {\n            this.supersawShape = clamp(0, Config.supersawShapeMax + 1, Math.round(Config.supersawShapeMax * (instrumentObject[\"shape\"] | 0) / 100));\n        }\n        else {\n            this.supersawShape = 0;\n        }\n        if (instrumentObject[\"harmonics\"] != undefined) {\n            for (let i = 0; i < Config.harmonicsControlPoints; i++) {\n                this.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\n            }\n            this.harmonicsWave.markCustomWaveDirty();\n        }\n        else {\n            this.harmonicsWave.reset();\n        }\n        if (instrumentObject[\"spectrum\"] != undefined) {\n            for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                this.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\n                this.spectrumWave.markCustomWaveDirty();\n            }\n        }\n        else {\n            this.spectrumWave.reset(isNoiseChannel);\n        }\n        if (instrumentObject[\"stringSustain\"] != undefined) {\n            this.stringSustain = clamp(0, Config.stringSustainRange, Math.round((Config.stringSustainRange - 1) * (instrumentObject[\"stringSustain\"] | 0) / 100));\n        }\n        else {\n            this.stringSustain = 10;\n        }\n        this.stringSustainType = Config.enableAcousticSustain ? Config.sustainTypeNames.indexOf(instrumentObject[\"stringSustainType\"]) : 0;\n        if (this.stringSustainType == -1)\n            this.stringSustainType = 0;\n        if (this.type == 2) {\n            this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\n            if (instrumentObject[\"wave\"] == \"pink noise\")\n                this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == \"pink\");\n            if (instrumentObject[\"wave\"] == \"brownian noise\")\n                this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == \"brownian\");\n            if (this.chipNoise == -1)\n                this.chipNoise = 1;\n        }\n        const legacyEnvelopeNames = { \"custom\": \"note size\", \"steady\": \"none\", \"pluck 1\": \"twang 1\", \"pluck 2\": \"twang 2\", \"pluck 3\": \"twang 3\" };\n        const getEnvelope = (name) => {\n            if (legacyEnvelopeNames[name] != undefined)\n                return Config.envelopes.dictionary[legacyEnvelopeNames[name]];\n            else {\n                return Config.envelopes.dictionary[name];\n            }\n        };\n        if (this.type == 4) {\n            if (instrumentObject[\"drums\"] != undefined) {\n                for (let j = 0; j < Config.drumCount; j++) {\n                    const drum = instrumentObject[\"drums\"][j];\n                    if (drum == undefined)\n                        continue;\n                    this.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index;\n                    if (drum[\"filterEnvelope\"] != undefined) {\n                        const envelope = getEnvelope(drum[\"filterEnvelope\"]);\n                        if (envelope != undefined)\n                            this.drumsetEnvelopes[j] = envelope.index;\n                    }\n                    if (drum[\"spectrum\"] != undefined) {\n                        for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                            this.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\n                        }\n                    }\n                    this.drumsetSpectrumWaves[j].markCustomWaveDirty();\n                }\n            }\n        }\n        if (this.type == 0) {\n            const legacyWaveNames = { \"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0 };\n            const modboxWaveNames = { \"10% pulse\": 22, \"sunsoft bass\": 23, \"loud pulse\": 24, \"sax\": 25, \"guitar\": 26, \"atari bass\": 28, \"atari pulse\": 29, \"1% pulse\": 30, \"curved sawtooth\": 31, \"viola\": 32, \"brass\": 33, \"acoustic bass\": 34, \"lyre\": 35, \"ramp pulse\": 36, \"piccolo\": 37, \"squaretooth\": 38, \"flatline\": 39, \"pnryshk a (u5)\": 40, \"pnryshk b (riff)\": 41 };\n            const sandboxWaveNames = { \"shrill lute\": 42, \"shrill bass\": 44, \"nes pulse\": 45, \"saw bass\": 46, \"euphonium\": 47, \"shrill pulse\": 48, \"r-sawtooth\": 49, \"recorder\": 50, \"narrow saw\": 51, \"deep square\": 52, \"ring pulse\": 53, \"double sine\": 54, \"contrabass\": 55, \"double bass\": 56 };\n            const zefboxWaveNames = { \"semi-square\": 63, \"deep square\": 64, \"squaretal\": 40, \"saw wide\": 65, \"saw narrow \": 66, \"deep sawtooth\": 67, \"sawtal\": 68, \"pulse\": 69, \"triple pulse\": 70, \"high pulse\": 71, \"deep pulse\": 72 };\n            const miscWaveNames = { \"test1\": 56, \"pokey 4bit lfsr\": 57, \"pokey 5step bass\": 58, \"isolated spiky\": 59, \"unnamed 1\": 60, \"unnamed 2\": 61, \"guitar string\": 75, \"intense\": 76, \"buzz wave\": 77, \"pokey square\": 57, \"pokey bass\": 58, \"banana wave\": 83, \"test 1\": 84, \"test 2\": 84, \"real snare\": 85, \"earthbound o. guitar\": 86 };\n            const paandorasboxWaveNames = { \"kick\": 87, \"snare\": 88, \"piano1\": 89, \"WOW\": 90, \"overdrive\": 91, \"trumpet\": 92, \"saxophone\": 93, \"orchestrahit\": 94, \"detached violin\": 95, \"synth\": 96, \"sonic3snare\": 97, \"come on\": 98, \"choir\": 99, \"overdriveguitar\": 100, \"flute\": 101, \"legato violin\": 102, \"tremolo violin\": 103, \"amen break\": 104, \"pizzicato violin\": 105, \"tim allen grunt\": 106, \"tuba\": 107, \"loopingcymbal\": 108, \"standardkick\": 109, \"standardsnare\": 110, \"closedhihat\": 111, \"foothihat\": 112, \"openhihat\": 113, \"crashcymbal\": 114, \"pianoC4\": 115, \"liver pad\": 116, \"marimba\": 117, \"susdotwav\": 118, \"wackyboxtts\": 119 };\n            this.chipWave = -1;\n            const rawName = instrumentObject[\"wave\"];\n            for (const table of [\n                legacyWaveNames,\n                modboxWaveNames,\n                sandboxWaveNames,\n                zefboxWaveNames,\n                miscWaveNames,\n                paandorasboxWaveNames\n            ]) {\n                if (this.chipWave == -1 && table[rawName] != undefined && Config.chipWaves[table[rawName]] != undefined) {\n                    this.chipWave = table[rawName];\n                    break;\n                }\n            }\n            if (this.chipWave == -1) {\n                const potentialChipWaveIndex = Config.chipWaves.findIndex(wave => wave.name == rawName);\n                if (potentialChipWaveIndex != -1)\n                    this.chipWave = potentialChipWaveIndex;\n            }\n            if (this.chipWave == -1)\n                this.chipWave = 1;\n        }\n        if (this.type == 1 || this.type == 11) {\n            if (this.type == 1) {\n                this.algorithm = Config.algorithms.findIndex(algorithm => algorithm.name == instrumentObject[\"algorithm\"]);\n                if (this.algorithm == -1)\n                    this.algorithm = 0;\n                this.feedbackType = Config.feedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"]);\n                if (this.feedbackType == -1)\n                    this.feedbackType = 0;\n            }\n            else {\n                this.algorithm6Op = Config.algorithms6Op.findIndex(algorithm6Op => algorithm6Op.name == instrumentObject[\"algorithm\"]);\n                if (this.algorithm6Op == -1)\n                    this.algorithm6Op = 1;\n                if (this.algorithm6Op == 0) {\n                    this.customAlgorithm.set(instrumentObject[\"customAlgorithm\"][\"carrierCount\"], instrumentObject[\"customAlgorithm\"][\"mods\"]);\n                }\n                else {\n                    this.customAlgorithm.fromPreset(this.algorithm6Op);\n                }\n                this.feedbackType6Op = Config.feedbacks6Op.findIndex(feedback6Op => feedback6Op.name == instrumentObject[\"feedbackType\"]);\n                if (this.feedbackType6Op == -1) {\n                    let synthboxLegacyFeedbacks = toNameMap([\n                        { name: \"2⟲ 3⟲\", indices: [[], [2], [3], [], [], []] },\n                        { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4], [], []] },\n                        { name: \"4⟲ 5⟲\", indices: [[], [], [], [4], [5], []] },\n                        { name: \"5⟲ 6⟲\", indices: [[], [], [], [], [5], [6]] },\n                        { name: \"1⟲ 6⟲\", indices: [[1], [], [], [], [], [6]] },\n                        { name: \"1⟲ 3⟲\", indices: [[1], [], [3], [], [], []] },\n                        { name: \"1⟲ 4⟲\", indices: [[1], [], [], [4], [], []] },\n                        { name: \"1⟲ 5⟲\", indices: [[1], [], [], [], [5], []] },\n                        { name: \"4⟲ 6⟲\", indices: [[], [], [], [4], [], [6]] },\n                        { name: \"2⟲ 6⟲\", indices: [[], [2], [], [], [], [6]] },\n                        { name: \"3⟲ 6⟲\", indices: [[], [], [3], [], [], [6]] },\n                        { name: \"4⟲ 5⟲ 6⟲\", indices: [[], [], [], [4], [5], [6]] },\n                        { name: \"1⟲ 3⟲ 6⟲\", indices: [[1], [], [3], [], [], [6]] },\n                        { name: \"2→5\", indices: [[], [], [], [], [2], []] },\n                        { name: \"2→6\", indices: [[], [], [], [], [], [2]] },\n                        { name: \"3→5\", indices: [[], [], [], [], [3], []] },\n                        { name: \"3→6\", indices: [[], [], [], [], [], [3]] },\n                        { name: \"4→6\", indices: [[], [], [], [], [], [4]] },\n                        { name: \"5→6\", indices: [[], [], [], [], [], [5]] },\n                        { name: \"1→3→4\", indices: [[], [], [1], [], [3], []] },\n                        { name: \"2→5→6\", indices: [[], [], [], [], [2], [5]] },\n                        { name: \"2→4→6\", indices: [[], [], [], [2], [], [4]] },\n                        { name: \"4→5→6\", indices: [[], [], [], [], [4], [5]] },\n                        { name: \"3→4→5→6\", indices: [[], [], [], [3], [4], [5]] },\n                        { name: \"2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\n                        { name: \"1→2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\n                    ]);\n                    let synthboxFeedbackType = synthboxLegacyFeedbacks[synthboxLegacyFeedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"])].indices;\n                    if (synthboxFeedbackType != undefined) {\n                        this.feedbackType6Op = 0;\n                        this.customFeedbackType.set(synthboxFeedbackType);\n                    }\n                    else {\n                        this.feedbackType6Op = 1;\n                    }\n                }\n                if ((this.feedbackType6Op == 0) && (instrumentObject[\"customFeedback\"] != undefined)) {\n                    this.customFeedbackType.set(instrumentObject[\"customFeedback\"][\"mods\"]);\n                }\n                else {\n                    this.customFeedbackType.fromPreset(this.feedbackType6Op);\n                }\n            }\n            if (instrumentObject[\"feedbackAmplitude\"] != undefined) {\n                this.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\n            }\n            else {\n                this.feedbackAmplitude = 0;\n            }\n            for (let j = 0; j < Config.operatorCount + (this.type == 11 ? 2 : 0); j++) {\n                const operator = this.operators[j];\n                let operatorObject = undefined;\n                if (instrumentObject[\"operators\"] != undefined)\n                    operatorObject = instrumentObject[\"operators\"][j];\n                if (operatorObject == undefined)\n                    operatorObject = {};\n                operator.frequency = Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"]);\n                if (operator.frequency == -1)\n                    operator.frequency = 0;\n                if (operatorObject[\"amplitude\"] != undefined) {\n                    operator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\n                }\n                else {\n                    operator.amplitude = 0;\n                }\n                if (operatorObject[\"waveform\"] != undefined) {\n                    if (format == \"goldbox\" && j > 3) {\n                        operator.waveform = 0;\n                        continue;\n                    }\n                    operator.waveform = Config.operatorWaves.findIndex(wave => wave.name == operatorObject[\"waveform\"]);\n                    if (operator.waveform == -1) {\n                        if (operatorObject[\"waveform\"] == \"square\") {\n                            operator.waveform = Config.operatorWaves.dictionary[\"pulse width\"].index;\n                            operator.pulseWidth = 5;\n                        }\n                        else if (operatorObject[\"waveform\"] == \"rounded\") {\n                            operator.waveform = Config.operatorWaves.dictionary[\"quasi-sine\"].index;\n                        }\n                        else {\n                            operator.waveform = 0;\n                        }\n                    }\n                }\n                else {\n                    operator.waveform = 0;\n                }\n                if (operatorObject[\"pulseWidth\"] != undefined) {\n                    operator.pulseWidth = operatorObject[\"pulseWidth\"] | 0;\n                }\n                else {\n                    operator.pulseWidth = 5;\n                }\n            }\n        }\n        else if (this.type == 9) {\n            if (instrumentObject[\"customChipWave\"]) {\n                for (let i = 0; i < 64; i++) {\n                    this.customChipWave[i] = instrumentObject[\"customChipWave\"][i];\n                }\n                let sum = 0.0;\n                for (let i = 0; i < this.customChipWave.length; i++) {\n                    sum += this.customChipWave[i];\n                }\n                const average = sum / this.customChipWave.length;\n                let cumulative = 0;\n                let wavePrev = 0;\n                for (let i = 0; i < this.customChipWave.length; i++) {\n                    cumulative += wavePrev;\n                    wavePrev = this.customChipWave[i] - average;\n                    this.customChipWaveIntegral[i] = cumulative;\n                }\n                this.customChipWaveIntegral[64] = 0.0;\n            }\n        }\n        else if (this.type == 10) {\n            if (instrumentObject[\"modChannels\"] != undefined) {\n                for (let mod = 0; mod < Config.modCount; mod++) {\n                    this.modChannels[mod] = instrumentObject[\"modChannels\"][mod];\n                    this.modInstruments[mod] = instrumentObject[\"modInstruments\"][mod];\n                    this.modulators[mod] = instrumentObject[\"modSettings\"][mod];\n                    if (instrumentObject[\"modFilterTypes\"] != undefined)\n                        this.modFilterTypes[mod] = instrumentObject[\"modFilterTypes\"][mod];\n                    if (instrumentObject[\"modEnvelopeNumbers\"] != undefined)\n                        this.modEnvelopeNumbers[mod] = instrumentObject[\"modEnvelopeNumbers\"][mod];\n                }\n            }\n        }\n        if (this.type != 10) {\n            if (this.chord == Config.chords.dictionary[\"arpeggio\"].index && instrumentObject[\"arpeggioSpeed\"] != undefined) {\n                this.arpeggioSpeed = instrumentObject[\"arpeggioSpeed\"];\n            }\n            else {\n                this.arpeggioSpeed = (useSlowerRhythm) ? 9 : 12;\n            }\n            if (this.chord == Config.chords.dictionary[\"monophonic\"].index && instrumentObject[\"monoChordTone\"] != undefined) {\n                this.monoChordTone = instrumentObject[\"monoChordTone\"];\n            }\n            if (instrumentObject[\"fastTwoNoteArp\"] != undefined) {\n                this.fastTwoNoteArp = instrumentObject[\"fastTwoNoteArp\"];\n            }\n            else {\n                this.fastTwoNoteArp = useFastTwoNoteArp;\n            }\n            if (instrumentObject[\"clicklessTransition\"] != undefined) {\n                this.clicklessTransition = instrumentObject[\"clicklessTransition\"];\n            }\n            else {\n                this.clicklessTransition = false;\n            }\n            if (instrumentObject[\"aliases\"] != undefined) {\n                this.aliases = instrumentObject[\"aliases\"];\n            }\n            else {\n                if (format == \"modbox\") {\n                    let newEffect = this.addEffect(3);\n                    this.aliases = true;\n                    newEffect.distortion = 0;\n                }\n                else {\n                    this.aliases = false;\n                }\n            }\n            if (instrumentObject[\"noteFilterType\"] != undefined) {\n                this.noteFilterType = instrumentObject[\"noteFilterType\"];\n            }\n            if (instrumentObject[\"noteSimpleCut\"] != undefined) {\n                this.noteFilterSimpleCut = instrumentObject[\"noteSimpleCut\"];\n            }\n            if (instrumentObject[\"noteSimplePeak\"] != undefined) {\n                this.noteFilterSimplePeak = instrumentObject[\"noteSimplePeak\"];\n            }\n            if (instrumentObject[\"noteFilter\"] != undefined) {\n                this.noteFilter.fromJsonObject(instrumentObject[\"noteFilter\"]);\n            }\n            else {\n                this.noteFilter.reset();\n            }\n            for (let i = 0; i < Config.filterMorphCount; i++) {\n                if (Array.isArray(instrumentObject[\"noteSubFilters\" + i])) {\n                    this.noteSubFilters[i] = new FilterSettings();\n                    this.noteSubFilters[i].fromJsonObject(instrumentObject[\"noteSubFilters\" + i]);\n                }\n            }\n            if (!Array.isArray(instrumentObject[\"eqFilter\"])) {\n                const legacySettings = {};\n                const filterCutoffMaxHz = 8000;\n                const filterCutoffRange = 11;\n                const filterResonanceRange = 8;\n                if (instrumentObject[\"filterCutoffHz\"] != undefined) {\n                    legacySettings.filterCutoff = clamp(0, filterCutoffRange, Math.round((filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / filterCutoffMaxHz) / Math.LN2));\n                }\n                else {\n                    legacySettings.filterCutoff = (this.type == 0) ? 6 : 10;\n                }\n                if (instrumentObject[\"filterResonance\"] != undefined) {\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, Math.round((filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\n                }\n                else {\n                    legacySettings.filterResonance = 0;\n                }\n                legacySettings.filterEnvelope = getEnvelope(instrumentObject[\"filterEnvelope\"]);\n                legacySettings.pulseEnvelope = getEnvelope(instrumentObject[\"pulseEnvelope\"]);\n                legacySettings.feedbackEnvelope = getEnvelope(instrumentObject[\"feedbackEnvelope\"]);\n                if (Array.isArray(instrumentObject[\"operators\"])) {\n                    legacySettings.operatorEnvelopes = [];\n                    for (let j = 0; j < Config.operatorCount + (this.type == 11 ? 2 : 0); j++) {\n                        let envelope;\n                        if (instrumentObject[\"operators\"][j] != undefined) {\n                            envelope = getEnvelope(instrumentObject[\"operators\"][j][\"envelope\"]);\n                        }\n                        legacySettings.operatorEnvelopes[j] = (envelope != undefined) ? envelope : Config.envelopes.dictionary[\"none\"];\n                    }\n                }\n                if (instrumentObject[\"filter\"] != undefined) {\n                    const legacyToCutoff = [10, 6, 3, 0, 8, 5, 2];\n                    const legacyToEnvelope = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\n                    const filterNames = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\n                    const oldFilterNames = { \"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4 };\n                    let legacyFilter = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\n                    if (legacyFilter == -1)\n                        legacyFilter = 0;\n                    legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                    legacySettings.filterEnvelope = getEnvelope(legacyToEnvelope[legacyFilter]);\n                    legacySettings.filterResonance = 0;\n                }\n                this.convertLegacySettings(legacySettings, true);\n            }\n            if (Array.isArray(instrumentObject[\"envelopes\"])) {\n                const envelopeArray = instrumentObject[\"envelopes\"];\n                for (let i = 0; i < envelopeArray.length; i++) {\n                    if (this.envelopeCount >= Config.maxEnvelopeCount)\n                        break;\n                    const tempEnvelope = new EnvelopeSettings(this.isNoiseInstrument);\n                    tempEnvelope.fromJsonObject(envelopeArray[i], format);\n                    let pitchEnvelopeStart;\n                    if (instrumentObject[\"pitchEnvelopeStart\"] != undefined && instrumentObject[\"pitchEnvelopeStart\"] != null) {\n                        pitchEnvelopeStart = instrumentObject[\"pitchEnvelopeStart\"];\n                    }\n                    else if (instrumentObject[\"pitchEnvelopeStart\" + i] != undefined && instrumentObject[\"pitchEnvelopeStart\" + i] != undefined) {\n                        pitchEnvelopeStart = instrumentObject[\"pitchEnvelopeStart\" + i];\n                    }\n                    else {\n                        pitchEnvelopeStart = tempEnvelope.pitchEnvelopeStart;\n                    }\n                    let pitchEnvelopeEnd;\n                    if (instrumentObject[\"pitchEnvelopeEnd\"] != undefined && instrumentObject[\"pitchEnvelopeEnd\"] != null) {\n                        pitchEnvelopeEnd = instrumentObject[\"pitchEnvelopeEnd\"];\n                    }\n                    else if (instrumentObject[\"pitchEnvelopeEnd\" + i] != undefined && instrumentObject[\"pitchEnvelopeEnd\" + i] != null) {\n                        pitchEnvelopeEnd = instrumentObject[\"pitchEnvelopeEnd\" + i];\n                    }\n                    else {\n                        pitchEnvelopeEnd = tempEnvelope.pitchEnvelopeEnd;\n                    }\n                    let envelopeInverse;\n                    if (instrumentObject[\"envelopeInverse\" + i] != undefined && instrumentObject[\"envelopeInverse\" + i] != null) {\n                        envelopeInverse = instrumentObject[\"envelopeInverse\" + i];\n                    }\n                    else if (instrumentObject[\"pitchEnvelopeInverse\"] != undefined && instrumentObject[\"pitchEnvelopeInverse\"] != null && Config.envelopes[tempEnvelope.envelope].name == \"pitch\") {\n                        envelopeInverse = instrumentObject[\"pitchEnvelopeInverse\"];\n                    }\n                    else {\n                        envelopeInverse = tempEnvelope.inverse;\n                    }\n                    let discreteEnvelope;\n                    if (instrumentObject[\"discreteEnvelope\"] != undefined) {\n                        discreteEnvelope = instrumentObject[\"discreteEnvelope\"];\n                    }\n                    else {\n                        discreteEnvelope = tempEnvelope.discrete;\n                    }\n                    this.addEnvelope(tempEnvelope.target, tempEnvelope.index, tempEnvelope.envelope, true, pitchEnvelopeStart, pitchEnvelopeEnd, envelopeInverse, tempEnvelope.perEnvelopeSpeed, tempEnvelope.perEnvelopeLowerBound, tempEnvelope.perEnvelopeUpperBound, tempEnvelope.steps, tempEnvelope.seed, tempEnvelope.waveform, discreteEnvelope);\n                }\n            }\n        }\n        if (type === 0) {\n            if (instrumentObject[\"isUsingAdvancedLoopControls\"] != undefined) {\n                this.isUsingAdvancedLoopControls = instrumentObject[\"isUsingAdvancedLoopControls\"];\n                this.chipWaveLoopStart = instrumentObject[\"chipWaveLoopStart\"];\n                this.chipWaveLoopEnd = instrumentObject[\"chipWaveLoopEnd\"];\n                this.chipWaveLoopMode = instrumentObject[\"chipWaveLoopMode\"];\n                this.chipWavePlayBackwards = instrumentObject[\"chipWavePlayBackwards\"];\n                this.chipWaveStartOffset = instrumentObject[\"chipWaveStartOffset\"];\n            }\n            else {\n                this.isUsingAdvancedLoopControls = false;\n                this.chipWaveLoopStart = 0;\n                this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\n                this.chipWaveLoopMode = 0;\n                this.chipWavePlayBackwards = false;\n                this.chipWaveStartOffset = 0;\n            }\n            this.chipWaveInStereo = instrumentObject[\"chipWaveInStereo\"];\n        }\n    }\n    getLargestControlPointCount(forNoteFilter) {\n        let largest;\n        if (forNoteFilter) {\n            largest = this.noteFilter.controlPointCount;\n            for (let i = 0; i < Config.filterMorphCount; i++) {\n                if (this.noteSubFilters[i] != null && this.noteSubFilters[i].controlPointCount > largest)\n                    largest = this.noteSubFilters[i].controlPointCount;\n            }\n        }\n        else {\n            largest = this.effects[0].eqFilter.controlPointCount;\n            for (let effectIndex = 0; effectIndex < this.effectCount; effectIndex++) {\n                if (this.effects[effectIndex] != null && this.effects[effectIndex].type == 5) {\n                    for (let i = 0; i < Config.filterMorphCount; i++) {\n                        if (this.effects[effectIndex].eqSubFilters[i] != null && this.effects[effectIndex].eqSubFilters[i].controlPointCount > largest)\n                            largest = this.effects[effectIndex].eqSubFilters[i].controlPointCount;\n                    }\n                }\n            }\n        }\n        return largest;\n    }\n    static frequencyFromPitch(pitch) {\n        return 440.0 * Math.pow(2.0, (pitch - 69.0) / 12.0);\n    }\n    addEffect(type) {\n        let newEffect = new Effect(type);\n        this.effects.push(newEffect);\n        this.effectCount++;\n        return newEffect;\n    }\n    removeEffect(type) {\n        for (let i = 0; i < this.effectCount; i++) {\n            if (this.effects[i] != null && this.effects[i].type == type) {\n                this.effects.splice(i, 1);\n                break;\n            }\n        }\n        this.effectCount--;\n    }\n    effectsIncludeType(type) {\n        for (let i = 0; i < this.effects.length; i++)\n            if (this.effects[i] != null && this.effects[i].type == type)\n                return true;\n        return false;\n    }\n    addEnvelope(target, index, envelope, newEnvelopes, start = 0, end = -1, inverse = false, perEnvelopeSpeed = -1, perEnvelopeLowerBound = 0, perEnvelopeUpperBound = 1, steps = 2, seed = 2, waveform = 0, discrete = false) {\n        end = end != -1 ? end : this.isNoiseInstrument ? Config.drumCount - 1 : Config.maxPitch;\n        perEnvelopeSpeed = perEnvelopeSpeed != -1 ? perEnvelopeSpeed : newEnvelopes ? 1 : Config.envelopes[envelope].speed;\n        let makeEmpty = false;\n        if (!this.supportsEnvelopeTarget(target, index))\n            makeEmpty = true;\n        if (this.envelopeCount >= Config.maxEnvelopeCount)\n            throw new Error();\n        while (this.envelopes.length <= this.envelopeCount)\n            this.envelopes[this.envelopes.length] = new EnvelopeSettings(this.isNoiseInstrument);\n        const envelopeSettings = this.envelopes[this.envelopeCount];\n        envelopeSettings.target = makeEmpty ? Config.instrumentAutomationTargets.dictionary[\"none\"].index : target;\n        envelopeSettings.index = makeEmpty ? 0 : index;\n        if (!newEnvelopes) {\n            envelopeSettings.envelope = clamp(0, Config.newEnvelopes.length, Config.envelopes[envelope].type);\n        }\n        else {\n            envelopeSettings.envelope = envelope;\n        }\n        envelopeSettings.pitchEnvelopeStart = start;\n        envelopeSettings.pitchEnvelopeEnd = end;\n        envelopeSettings.inverse = inverse;\n        envelopeSettings.perEnvelopeSpeed = perEnvelopeSpeed;\n        envelopeSettings.perEnvelopeLowerBound = perEnvelopeLowerBound;\n        envelopeSettings.perEnvelopeUpperBound = perEnvelopeUpperBound;\n        envelopeSettings.steps = steps;\n        envelopeSettings.seed = seed;\n        envelopeSettings.waveform = waveform;\n        envelopeSettings.discrete = discrete;\n        this.envelopeCount++;\n    }\n    supportsEnvelopeTarget(target, index) {\n        const automationTarget = Config.instrumentAutomationTargets[target];\n        if (automationTarget.computeIndex == null && automationTarget.name != \"none\") {\n            return false;\n        }\n        if (index >= automationTarget.maxCount) {\n            return false;\n        }\n        if (automationTarget.compatibleInstruments != null && automationTarget.compatibleInstruments.indexOf(this.type) == -1) {\n            return false;\n        }\n        if ((automationTarget.effect != null && !this.effectsIncludeType(automationTarget.effect)) || (automationTarget.mdeffect != null && (this.mdeffects & (1 << automationTarget.mdeffect)) == 0)) {\n            return false;\n        }\n        if (automationTarget.isFilter) {\n            let useControlPointCount = this.noteFilter.controlPointCount;\n            if (this.noteFilterType)\n                useControlPointCount = 1;\n            if (index >= useControlPointCount)\n                return false;\n        }\n        if ((automationTarget.name == \"operatorFrequency\") || (automationTarget.name == \"operatorAmplitude\")) {\n            if (index >= 4 + (this.type == 11 ? 2 : 0))\n                return false;\n        }\n        return true;\n    }\n    clearInvalidEnvelopeTargets() {\n        for (let envelopeIndex = 0; envelopeIndex < this.envelopeCount; envelopeIndex++) {\n            const target = this.envelopes[envelopeIndex].target;\n            const index = this.envelopes[envelopeIndex].index;\n            if (!this.supportsEnvelopeTarget(target, index)) {\n                this.envelopes[envelopeIndex].target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\n                this.envelopes[envelopeIndex].index = 0;\n            }\n        }\n    }\n    getTransition() {\n        return effectsIncludeTransition(this.mdeffects) ? Config.transitions[this.transition] :\n            (this.type == 10 ? Config.transitions.dictionary[\"interrupt\"] : Config.transitions.dictionary[\"normal\"]);\n    }\n    getFadeInSeconds() {\n        return (this.type == 4) ? 0.0 : fadeInSettingToSeconds(this.fadeIn);\n    }\n    getFadeOutTicks() {\n        return (this.type == 4) ? Config.drumsetFadeOutTicks : fadeOutSettingToTicks(this.fadeOut);\n    }\n    getChord() {\n        return effectsIncludeChord(this.mdeffects) ? Config.chords[this.chord] : Config.chords.dictionary[\"simultaneous\"];\n    }\n    getDrumsetEnvelope(pitch) {\n        if (this.type != 4)\n            throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\n        return Config.envelopes[this.drumsetEnvelopes[pitch]];\n    }\n}\n//# sourceMappingURL=Instrument.js.map","export class Channel {\n    constructor() {\n        this.octave = 0;\n        this.instruments = [];\n        this.patterns = [];\n        this.bars = [];\n        this.muted = false;\n        this.visible = true;\n        this.name = \"\";\n        this.color = 0;\n    }\n}\n//# sourceMappingURL=Channel.js.map","export class Deque {\n    constructor() {\n        this._capacity = 1;\n        this._buffer = [undefined];\n        this._mask = 0;\n        this._offset = 0;\n        this._count = 0;\n    }\n    pushFront(element) {\n        if (this._count >= this._capacity)\n            this._expandCapacity();\n        this._offset = (this._offset - 1) & this._mask;\n        this._buffer[this._offset] = element;\n        this._count++;\n    }\n    pushBack(element) {\n        if (this._count >= this._capacity)\n            this._expandCapacity();\n        this._buffer[(this._offset + this._count) & this._mask] = element;\n        this._count++;\n    }\n    popFront() {\n        if (this._count <= 0)\n            throw new Error(\"No elements left to pop.\");\n        const element = this._buffer[this._offset];\n        this._buffer[this._offset] = undefined;\n        this._offset = (this._offset + 1) & this._mask;\n        this._count--;\n        return element;\n    }\n    popBack() {\n        if (this._count <= 0)\n            throw new Error(\"No elements left to pop.\");\n        this._count--;\n        const index = (this._offset + this._count) & this._mask;\n        const element = this._buffer[index];\n        this._buffer[index] = undefined;\n        return element;\n    }\n    peakFront() {\n        if (this._count <= 0)\n            throw new Error(\"No elements left to pop.\");\n        return this._buffer[this._offset];\n    }\n    peakBack() {\n        if (this._count <= 0)\n            throw new Error(\"No elements left to pop.\");\n        return this._buffer[(this._offset + this._count - 1) & this._mask];\n    }\n    count() {\n        return this._count;\n    }\n    set(index, element) {\n        if (index < 0 || index >= this._count)\n            throw new Error(\"Invalid index\");\n        this._buffer[(this._offset + index) & this._mask] = element;\n    }\n    get(index) {\n        if (index < 0 || index >= this._count)\n            throw new Error(\"Invalid index\");\n        return this._buffer[(this._offset + index) & this._mask];\n    }\n    remove(index) {\n        if (index < 0 || index >= this._count)\n            throw new Error(\"Invalid index\");\n        if (index <= (this._count >> 1)) {\n            while (index > 0) {\n                this.set(index, this.get(index - 1));\n                index--;\n            }\n            this.popFront();\n        }\n        else {\n            index++;\n            while (index < this._count) {\n                this.set(index - 1, this.get(index));\n                index++;\n            }\n            this.popBack();\n        }\n    }\n    _expandCapacity() {\n        if (this._capacity >= 0x40000000)\n            throw new Error(\"Capacity too big.\");\n        this._capacity = this._capacity << 1;\n        const oldBuffer = this._buffer;\n        const newBuffer = new Array(this._capacity);\n        const size = this._count | 0;\n        const offset = this._offset | 0;\n        for (let i = 0; i < size; i++) {\n            newBuffer[i] = oldBuffer[(offset + i) & this._mask];\n        }\n        for (let i = size; i < this._capacity; i++) {\n            newBuffer[i] = undefined;\n        }\n        this._offset = 0;\n        this._buffer = newBuffer;\n        this._mask = this._capacity - 1;\n    }\n}\n//# sourceMappingURL=Deque.js.map","import { toNameMap, TypePresets } from \"../synth/SynthConfig\";\nexport const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\nexport function prettyNumber(value) {\n    return value.toFixed(2).replace(/\\.?0*$/, \"\");\n}\nexport class EditorConfig {\n    static valueToPreset(presetValue) {\n        var _a;\n        const categoryIndex = presetValue >> 6;\n        const presetIndex = presetValue & 0x3F;\n        return (_a = EditorConfig.presetCategories[categoryIndex]) === null || _a === void 0 ? void 0 : _a.presets[presetIndex];\n    }\n    static midiProgramToPresetValue(program) {\n        for (let categoryIndex = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n            const category = EditorConfig.presetCategories[categoryIndex];\n            for (let presetIndex = 0; presetIndex < category.presets.length; presetIndex++) {\n                const preset = category.presets[presetIndex];\n                if (preset.generalMidi && preset.midiProgram == program)\n                    return (categoryIndex << 6) + presetIndex;\n            }\n        }\n        return null;\n    }\n    static nameToPresetValue(presetName) {\n        for (let categoryIndex = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n            const category = EditorConfig.presetCategories[categoryIndex];\n            for (let presetIndex = 0; presetIndex < category.presets.length; presetIndex++) {\n                const preset = category.presets[presetIndex];\n                if (preset.name == presetName)\n                    return (categoryIndex << 6) + presetIndex;\n            }\n        }\n        return null;\n    }\n    static instrumentToPreset(instrument) {\n        var _a;\n        return (_a = EditorConfig.presetCategories[0].presets.dictionary) === null || _a === void 0 ? void 0 : _a[TypePresets === null || TypePresets === void 0 ? void 0 : TypePresets[instrument]];\n    }\n}\nEditorConfig.version = \"v1\";\nEditorConfig.versionDisplayName = \"DragonBox!\";\nEditorConfig.releaseNotesURL = \"./patch_notes.html\";\nEditorConfig.isOnMac = /^Mac/i.test(navigator.platform) || /Mac OS X/i.test(navigator.userAgent) || /^(iPhone|iPad|iPod)/i.test(navigator.platform) || /(iPhone|iPad|iPod)/i.test(navigator.userAgent);\nEditorConfig.ctrlSymbol = EditorConfig.isOnMac ? \"⌘\" : \"Ctrl+\";\nEditorConfig.ctrlName = EditorConfig.isOnMac ? \"command\" : \"control\";\nEditorConfig.presetCategories = toNameMap([\n    {\n        name: \"Custom Instruments\", presets: toNameMap([\n            { name: TypePresets[0], customType: 0 },\n            { name: TypePresets[1], customType: 1 },\n            { name: TypePresets[2], customType: 2 },\n            { name: TypePresets[3], customType: 3 },\n            { name: TypePresets[4], customType: 4 },\n            { name: TypePresets[5], customType: 5 },\n            { name: TypePresets[6], customType: 6 },\n            { name: TypePresets[7], customType: 7 },\n            { name: TypePresets[8], customType: 8 },\n            { name: TypePresets[9], customType: 9 },\n            { name: TypePresets[11], customType: 11 },\n        ])\n    },\n    {\n        name: \"Retro Presets\", presets: toNameMap([\n            { name: \"square wave\", midiProgram: 80, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"square\", \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"triangle wave\", midiProgram: 71, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"triangle\", \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"square lead\", midiProgram: 80, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"square\", \"unison\": \"hum\", \"envelopes\": [] } },\n            { name: \"sawtooth lead 1\", midiProgram: 81, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"shimmer\", \"envelopes\": [] } },\n            { name: \"sawtooth lead 2\", midiProgram: 81, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }], \"effects\": [\"vibrato\", \"aliasing\"], \"vibrato\": \"light\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [] } },\n            { name: \"chip noise\", midiProgram: 116, isNoise: true, settings: { \"type\": \"noise\", \"transition\": \"hard\", \"effects\": [\"aliasing\"], \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"retro\" } },\n            { name: \"supersaw lead\", midiProgram: 81, settings: { \"type\": \"supersaw\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 67, \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"pulseWidth\": 50, \"dynamism\": 100, \"spread\": 58, \"shape\": 0, \"envelopes\": [] } },\n            { name: \"FM twang\", midiProgram: 32, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\n            { name: \"FM bass\", midiProgram: 36, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"20×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 3 }] } },\n            { name: \"FM flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\n            { name: \"FM organ\", midiProgram: 16, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"2×\", \"amplitude\": 11 }], \"envelopes\": [] } },\n            { name: \"FM sine\", midiProgram: 55, settings: { \"type\": \"FM\", \"eqFilter\": [], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"effects\": [], \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\" }], \"envelopes\": [] } },\n            { name: \"NES Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"vibrato\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -23, -23, -23, -23, -22, -22, -22, -22, -21, -21, -21, -21, -20, -20, -20, -20, -19, -19, -19, -19, -18, -18, -18, -18, -17, -17, -17, -17, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 21, 21, 21, 21, 20, 20, 20, 20, 19, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 17] } },\n            { name: \"Gameboy Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -17, -15, -13, -13, -11, -11, -11, -9, -9, -9, -9, -7, -7, -7, -7, -7, -5, -5, -5, -5, -5, -5, -3, -3, -3, -3, -3, -3, -3, -3, 24, 20, 17, 15, 13, 13, 11, 11, 11, 9, 9, 9, 9, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3] } },\n            { name: \"VRC6 Sawtooth\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -16, -13, -10, -8, -6, -5, -4, -4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24] } },\n            { name: \"Atari Square\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -23, -23, -23, -22, -22, -22, -21, -21, -21, -20, -20, -20, -19, -19, -19, -18, -18, -18, -17, -17, -17, -16, -16, -16, -15, -15, -15, -14, -14, -14, -13, -13, -13, 24, 24, 24, 23, 23, 23, 22, 22, 22, 21, 21, 21, 20, 20, 20, 19, 19, 19, 18, 18, 18, 17, 17, 17, 16, 16, 15, 15] } },\n            { name: \"Atari Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, -24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, 24, 24, 24, 24, 24, -24, -24, -24, -24, 24, 24, -24, -24, 24, 24] } },\n            { name: \"Sunsoft Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [24, 24, 15, 15, 9, 9, -4, -4, 0, 0, -13, -13, -19, -19, -24, -24, -24, -24, -10, -10, 0, 0, -7, -7, -7, -7, 0, 0, 6, 6, -4, -4, 3, 3, -4, -4, 3, 3, 3, 3, 9, 9, 15, 15, 15, 15, 6, 6, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, 3, 3, 12, 12, 24, 24] } },\n        ])\n    },\n    {\n        name: \"Keyboard Presets\", presets: toNameMap([\n            { name: \"grand piano 1\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.125 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 86, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\n            { name: \"bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 1.4142 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 71, 71, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"piano\", \"stringSustain\": 86, \"envelopes\": [] } },\n            { name: \"electric grand\", midiProgram: 2, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"1/8 pulse\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\n            { name: \"honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 43, 57, 57, 57, 43, 43, 43, 43], \"unison\": \"honky tonk\", \"stringSustain\": 71, \"envelopes\": [] } },\n            { name: \"electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\n            { name: \"electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"16×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\n            { name: \"harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 100, 86, 57, 86, 86, 86, 86, 57, 57, 71, 71, 86, 86, 71, 71, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71], \"unison\": \"none\", \"stringSustain\": 79, \"envelopes\": [] } },\n            { name: \"clavinet\", midiProgram: 7, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.3536 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"8×\", \"amplitude\": 4 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 2\" }] } },\n            { name: \"dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [] } },\n            { name: \"grand piano 2\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.125 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 29], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\n            { name: \"grand piano 3\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 4 }, { \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.1768 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 0.25 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 125, \"linearGain\": 0.0884 }], \"reverb\": 67, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 71, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57], \"unison\": \"piano\", \"stringSustain\": 86, \"stringSustainType\": \"acoustic\", \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 0 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 1 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 1 }] } },\n        ])\n    },\n    {\n        name: \"Idiophone Presets\", presets: toNameMap([\n            { name: \"celesta\", midiProgram: 8, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"3×\", \"amplitude\": 1, \"envelope\": \"twang 2\" }] } },\n            { name: \"glockenspiel\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 193, \"effects\": [\"panning\", \"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 12, \"noteFilterType\": true, \"noteSimpleCut\": 9, \"noteSimplePeak\": 1, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"5×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"20×\", \"amplitude\": 2, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 8, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0], \"unison\": \"none\", \"stringSustain\": 64, \"envelopes\": [] } },\n            { name: \"music box 2\", midiProgram: 10, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.7071 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"stringSustain\": 29, \"envelopes\": [] } },\n            { name: \"vibraphone\", midiProgram: 11, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\n            { name: \"marimba\", midiProgram: 12, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 197, \"effects\": [\"panning\", \"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 12, \"noteFilterType\": true, \"noteSimpleCut\": 6, \"noteSimplePeak\": 2, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.7071 }], \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 6, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 6, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 2 }], \"isDrum\": false } },\n            { name: \"kalimba\", midiProgram: 108, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 198, \"effects\": [\"panning\", \"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 12, \"noteFilterType\": true, \"noteSimpleCut\": 7, \"noteSimplePeak\": 1, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 0.5 }], \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"5×\", \"amplitude\": 3, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"20×\", \"amplitude\": 3, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 8, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 2 }], \"isDrum\": false } },\n            { name: \"xylophone\", midiProgram: 13, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }] } },\n            { name: \"tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 96, \"chord\": \"strum\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14], \"unison\": \"shimmer\", \"stringSustain\": 86, \"envelopes\": [] } },\n            { name: \"bell synth\", midiProgram: 14, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"rain drop\", midiProgram: 96, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"tremolo1\" }] } },\n            { name: \"crystal\", midiProgram: 98, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }] } },\n            { name: \"tinkle bell\", midiProgram: 112, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 7, \"envelope\": \"custom\" }] } },\n            { name: \"agogo\", midiProgram: 113, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 205, \"effects\": [\"panning\", \"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 12, \"noteFilterType\": true, \"noteSimpleCut\": 8, \"noteSimplePeak\": 1, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→4\", \"feedbackAmplitude\": 15, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"5×\", \"amplitude\": 6, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n        ])\n    },\n    {\n        name: \"Guitar Presets\", presets: toNameMap([\n            { name: \"nylon guitar\", midiProgram: 24, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\n            { name: \"steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [] } },\n            { name: \"jazz guitar\", midiProgram: 26, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 57, 71, 71, 43, 57, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\n            { name: \"clean guitar\", midiProgram: 27, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 100, 86, 57, 86, 100, 100, 100, 71, 57, 43, 71, 86, 71, 57, 57, 71, 71, 71, 71, 57, 57, 57, 57, 57, 43] } },\n            { name: \"muted guitar\", midiProgram: 28, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }] } },\n        ])\n    },\n    {\n        name: \"Picked Bass Presets\", presets: toNameMap([\n            { name: \"acoustic bass\", midiProgram: 32, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14] } },\n            { name: \"fingered bass\", midiProgram: 33, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 57, 71, 43, 57, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 0] } },\n            { name: \"picked bass\", midiProgram: 34, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }] } },\n            { name: \"fretless bass\", midiProgram: 35, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 57, 57, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 14] } },\n            { name: \"slap bass 1\", midiProgram: 36, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 86, 71, 57, 29, 29, 43, 43, 57, 71, 57, 29, 29, 43, 57, 57, 57, 43, 43, 43, 57, 71, 71, 71, 71] } },\n            { name: \"slap bass 2\", midiProgram: 37, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n            { name: \"bass synth 1\", midiProgram: 38, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"twang 2\" }] } },\n            { name: \"bass synth 2\", midiProgram: 39, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 57, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"bass & lead\", midiProgram: 87, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 2\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\n            { name: \"dubstep yoi yoi\", midiProgram: 87, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.7071 }], \"effects\": [\"note filter\", \"bitcrusher\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 594.6, \"linearGain\": 11.3137 }], \"bitcrusherOctave\": 1.5, \"bitcrusherQuantization\": 0, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"wave\": \"sawtooth\", \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"flare 2\", \"index\": 0 }] } },\n        ])\n    },\n    {\n        name: \"Picked String Presets\", presets: toNameMap([\n            { name: \"pizzicato strings\", midiProgram: 45, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"steady\" }] } },\n            { name: \"harp\", midiProgram: 46, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\n            { name: \"sitar\", midiProgram: 104, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 57, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 3\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"16×\", \"amplitude\": 9, \"envelope\": \"swell 3\" }] } },\n            { name: \"banjo\", midiProgram: 105, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n            { name: \"ukulele\", midiProgram: 105, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n            { name: \"shamisen\", midiProgram: 106, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\n            { name: \"koto\", midiProgram: 107, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }] } },\n        ])\n    },\n    {\n        name: \"Distortion Presets\", presets: toNameMap([\n            { name: \"overdrive guitar\", midiProgram: 29, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.5 }], \"effects\": [\"note filter\", \"distortion\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.7071 }], \"distortion\": 71, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\n            { name: \"distortion guitar\", midiProgram: 30, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.25 }], \"effects\": [\"note filter\", \"distortion\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 1 }], \"distortion\": 86, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\n            { name: \"charango synth\", midiProgram: 84, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 1 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13 }, { \"frequency\": \"~1×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 6 }, { \"frequency\": \"3×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n            { name: \"guitar harmonics\", midiProgram: 31, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12 }, { \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2 }, { \"frequency\": \"~1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 3 }] } },\n            { name: \"PWM overdrive\", midiProgram: 29, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1.4142 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 17.67767, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"punch\" }] } },\n            { name: \"PWM distortion\", midiProgram: 30, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 50, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"swell 1\" }] } },\n            { name: \"FM overdrive\", midiProgram: 29, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"~2×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"punch\" }] } },\n            { name: \"FM distortion\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"~2×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }] } },\n        ])\n    },\n    {\n        name: \"Bellows Presets\", presets: toNameMap([\n            { name: \"drawbar organ 1\", midiProgram: 16, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 0, 86, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n            { name: \"drawbar organ 2\", midiProgram: 16, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 29, 71, 86, 71, 14, 0, 100, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 0, 29, 0, 0, 0, 0] } },\n            { name: \"percussive organ\", midiProgram: 17, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 515, \"effects\": [\"panning\", \"vibrato\", \"note filter\", \"chorus\", \"reverb\"], \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": true, \"noteSimpleCut\": 8, \"noteSimplePeak\": 1, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.5 }], \"pan\": 0, \"panDelay\": 10, \"chorus\": 100, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"6×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"rock organ\", midiProgram: 18, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\n            { name: \"pipe organ\", midiProgram: 19, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\n            { name: \"reed organ\", midiProgram: 20, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 100, 86, 71, 100, 57, 71, 71, 71, 43, 43, 43, 71, 43, 71, 57, 57, 57, 57, 57, 57, 57, 29, 43, 29, 29, 14] } },\n            { name: \"accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"double saw\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\n            { name: \"bandoneon\", midiProgram: 23, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 86, 57, 71, 86, 57, 71, 71, 71, 57, 43, 57, 43, 71, 43, 71, 57, 57, 43, 43, 43, 57, 43, 43, 29, 29, 29] } },\n            { name: \"bagpipe\", midiProgram: 109, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"punch\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 86, 100, 100, 86, 57, 100, 86, 71, 71, 71, 57, 57, 57, 71, 57, 71, 57, 71, 43, 57, 57, 43, 43, 43, 43, 43] } },\n        ])\n    },\n    {\n        name: \"String Presets\", presets: toNameMap([\n            { name: \"violin 1\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9 }, { \"frequency\": \"3×\", \"amplitude\": 9 }, { \"frequency\": \"2×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n            { name: \"viola\", midiProgram: 41, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\n            { name: \"cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.0884 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"6×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }] } },\n            { name: \"contrabass\", midiProgram: 43, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\n            { name: \"fiddle\", midiProgram: 110, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\n            { name: \"tremolo strings\", midiProgram: 44, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"effects\": [\"panning\", \"note filter\", \"chorus\", \"reverb\"], \"noteFilterType\": true, \"noteSimpleCut\": 6, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 0.1768 }], \"pan\": 0, \"panDelay\": 10, \"chorus\": 100, \"reverb\": 0, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 12, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"7×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 4, \"perEnvelopeLowerBound\": 0.5, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"strings\", midiProgram: 48, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\n            { name: \"slow strings\", midiProgram: 49, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }] } },\n            { name: \"strings synth 1\", midiProgram: 50, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"soft fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\n            { name: \"strings synth 2\", midiProgram: 51, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\n            { name: \"orchestra hit 1\", midiProgram: 55, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 3\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"flare 3\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"flare 2\" }, { \"frequency\": \"8×\", \"amplitude\": 15, \"envelope\": \"flare 1\" }] } },\n            { name: \"violin 2\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"swell 1\" }] } },\n            { name: \"orchestra hit 2\", midiProgram: 55, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 588, \"effects\": [\"panning\", \"vibrato\", \"note filter\", \"chorus\", \"reverb\"], \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": true, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.5 }], \"pan\": 0, \"panDelay\": 10, \"chorus\": 100, \"reverb\": 0, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 14, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"3×\", \"amplitude\": 12, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 14, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"supersaw string\", midiProgram: 41, settings: { \"type\": \"supersaw\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1.4142 }, { \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 500, \"linearGain\": 0.1768 }], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 6, \"pulseWidth\": 35.35534, \"dynamism\": 83, \"spread\": 8, \"shape\": 50, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 0 }] } },\n            { name: \"supersaw string 2\", midiProgram: 41, settings: { \"type\": \"supersaw\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }, { \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 2 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }, { \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 2 }], \"effects\": [\"note filter\", \"chorus\", \"reverb\"], \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 1 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 1 }], \"chorus\": 57, \"reverb\": 42, \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"pulseWidth\": 50, \"dynamism\": 67, \"spread\": 58, \"shape\": 0, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" }, { \"target\": \"pulseWidth\", \"envelope\": \"flare 2\" }] } },\n        ])\n    },\n    {\n        name: \"Vocal Presets\", presets: toNameMap([\n            { name: \"choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }, { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 24, \"harmonics\": [100, 100, 86, 57, 29, 29, 57, 71, 57, 29, 14, 14, 14, 29, 43, 57, 43, 29, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 8 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1.4142 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"voice ooh\", midiProgram: 53, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [100, 57, 43, 43, 14, 14, 0, 0, 0, 14, 29, 29, 14, 0, 14, 29, 29, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n            { name: \"voice synth\", midiProgram: 54, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"medium fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"wave\": \"rounded\", \"interval\": \"union\", \"vibrato\": \"light\" } },\n            { name: \"vox synth lead\", midiProgram: 85, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\n            { name: \"tiny robot\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 33, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"~1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n            { name: \"yowie\", midiProgram: 85, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"effects\": [\"panning\", \"note filter\", \"reverb\"], \"noteFilterType\": true, \"noteSimpleCut\": 6, \"noteSimplePeak\": 6, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 4 }], \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"algorithm\": \"1←2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 12, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"16×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2, \"perEnvelopeLowerBound\": 0.5, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 1, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"mouse\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\n            { name: \"gumdrop\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"7×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"twang 1\" }] } },\n            { name: \"echo drop\", midiProgram: 102, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\n            { name: \"dark choir\", midiProgram: 85, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"spectrum\": [43, 14, 14, 14, 14, 14, 14, 100, 14, 14, 14, 57, 14, 14, 100, 14, 43, 14, 43, 14, 14, 43, 14, 29, 14, 29, 14, 14, 29, 0] } },\n        ])\n    },\n    {\n        name: \"Brass Presets\", presets: toNameMap([\n            { name: \"trumpet\", midiProgram: 56, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"trombone\", midiProgram: 57, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"tuba\", midiProgram: 58, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"muted trumpet\", midiProgram: 59, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 5 }, { \"frequency\": \"9×\", \"amplitude\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\n            { name: \"french horn\", midiProgram: 60, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 1\" }] } },\n            { name: \"brass section\", midiProgram: 61, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }] } },\n            { name: \"brass synth 1\", midiProgram: 62, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\n            { name: \"brass synth 2\", midiProgram: 63, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"flare 1\" }] } },\n            { name: \"pulse brass\", midiProgram: 62, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"pulseWidth\": 50, \"pulseEnvelope\": \"flare 3\", \"vibrato\": \"none\" } },\n        ])\n    },\n    {\n        name: \"Reed Presets\", presets: toNameMap([\n            { name: \"soprano sax\", midiProgram: 64, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\n            { name: \"alto sax\", midiProgram: 65, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\n            { name: \"tenor sax\", midiProgram: 66, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\n            { name: \"baritone sax\", midiProgram: 67, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\n            { name: \"sax synth\", midiProgram: 64, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"shehnai\", midiProgram: 111, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"oboe\", midiProgram: 68, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"steady\" }] } },\n            { name: \"english horn\", midiProgram: 69, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"punch\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\n            { name: \"bassoon\", midiProgram: 70, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            { name: \"clarinet\", midiProgram: 71, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\n            { name: \"harmonica\", midiProgram: 22, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 778, \"effects\": [\"panning\", \"note filter\", \"reverb\"], \"noteFilterType\": true, \"noteSimpleCut\": 9, \"noteSimplePeak\": 2, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 }], \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 2, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"tremolo2\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n        ])\n    },\n    {\n        name: \"Flute Presets\", presets: toNameMap([\n            { name: \"flute 1\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9656.85, \"linearGain\": 0.5 }], \"eqFilterType\": true, \"eqSimpleCut\": 9, \"eqSimplePeak\": 1, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"preset\": 832, \"eqSubFilters1\": [], \"effects\": [\"panning\", \"reverb\"], \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 7, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 4, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 3, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 1, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 7, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"recorder\", midiProgram: 74, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 57, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\n            { name: \"whistle\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n            { name: \"ocarina\", midiProgram: 79, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 14, 57, 14, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n            { name: \"piccolo\", midiProgram: 72, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"punch\" }] } },\n            { name: \"shakuhachi\", midiProgram: 77, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 15, \"envelope\": \"steady\" }] } },\n            { name: \"pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14], \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"punch\" }] } },\n            { name: \"blown bottle\", midiProgram: 76, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"custom\" }] } },\n            { name: \"calliope\", midiProgram: 82, generalMidi: true, settings: { \"type\": \"spectrum\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 57, 0, 43, 0, 29, 14, 14, 29, 14, 14, 14, 14, 14, 14, 14, 14] } },\n            { name: \"chiffer\", midiProgram: 83, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"spectrum\": [86, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 71, 0, 0, 57, 0, 57, 0, 43, 14, 14, 43, 14, 29, 14, 29, 29, 29, 29, 14] } },\n            { name: \"breath noise\", midiProgram: 121, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }], \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"spectrum\": [71, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 71, 0, 0, 29, 0, 100, 29, 14, 29, 100, 29, 100, 14, 14, 71, 0, 29, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }] } },\n            { name: \"flute 2\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\n        ])\n    },\n    {\n        name: \"Pad Presets\", presets: toNameMap([\n            { name: \"new age pad\", midiProgram: 88, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 4 }, { \"frequency\": \"6×\", \"amplitude\": 3 }, { \"frequency\": \"13×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 3\" }] } },\n            { name: \"warm pad\", midiProgram: 89, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }] } },\n            { name: \"polysynth pad\", midiProgram: 90, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"honky tonk\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\n            { name: \"space voice pad\", midiProgram: 91, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1414.21, \"linearGain\": 0.1768 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 8 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 2 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\n            { name: \"bowed glass pad\", midiProgram: 92, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 3\", \"index\": 3 }] } },\n            { name: \"metallic pad\", midiProgram: 93, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 13, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 9 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n            { name: \"sweep pad\", midiProgram: 95, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\n            { name: \"atmosphere\", midiProgram: 99, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"chorus\", \"reverb\"], \"chorus\": 100, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\n            { name: \"brightness\", midiProgram: 100, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 2 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 43, 57, 43, 71, 43, 43, 43, 57, 43, 43, 57, 71, 57, 43, 29, 43, 57, 57, 43, 29, 29, 29, 29, 14], \"unison\": \"octave\", \"stringSustain\": 86, \"envelopes\": [] } },\n            { name: \"goblins\", midiProgram: 101, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 3\" }] } },\n            { name: \"sci-fi\", midiProgram: 103, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13 }, { \"frequency\": \"2×\", \"amplitude\": 10 }, { \"frequency\": \"5×\", \"amplitude\": 5 }, { \"frequency\": \"11×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo5\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n            { name: \"flutter pad\", midiProgram: 90, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 9, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }] } },\n            { name: \"feedback pad\", midiProgram: 89, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 8 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"custom interval\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 15 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\n            { name: \"supersaw pad\", midiProgram: 93, settings: { \"type\": \"supersaw\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.1768 }], \"effects\": [\"reverb\"], \"reverb\": 100, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 24, \"pulseWidth\": 50, \"dynamism\": 100, \"spread\": 58, \"shape\": 0, \"envelopes\": [] } },\n        ])\n    },\n    {\n        name: \"Drum Presets\", presets: toNameMap([\n            { name: \"standard drumset\", midiProgram: 116, isNoise: true, settings: { \"type\": \"drumset\", \"effects\": \"reverb\", \"drums\": [{ \"filterEnvelope\": \"twang 1\", \"spectrum\": [57, 71, 71, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 100, 71, 71, 57, 86, 57, 57, 57, 71, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 100, 57, 43, 43, 29, 57, 43, 29, 71, 43, 43, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 0, 71, 57, 43, 43, 43, 57, 57, 43, 29, 57, 43, 43, 43, 29, 43, 57, 43, 43, 43, 43, 43, 43, 29, 43, 43] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [0, 14, 29, 43, 86, 71, 29, 43, 43, 43, 43, 29, 71, 29, 71, 29, 43, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 57, 57, 57] }, { \"filterEnvelope\": \"decay 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 43, 43, 71, 29, 29, 43, 43, 43, 29, 43, 43, 43, 29, 29, 43, 43, 29, 29, 29, 57, 14, 57, 43, 43, 57, 43, 43, 57, 57] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [29, 43, 43, 43, 43, 29, 29, 43, 29, 29, 43, 29, 14, 29, 43, 29, 43, 29, 57, 29, 43, 57, 43, 71, 43, 71, 57, 57, 71, 71] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 29, 29, 43, 29, 29, 29, 57, 29, 29, 29, 57, 43, 43, 29, 29, 57, 43, 43, 43, 71, 43, 43, 71, 57, 71, 71, 71, 71, 71] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [57, 57, 57, 43, 57, 57, 43, 43, 57, 43, 43, 43, 71, 57, 43, 57, 86, 71, 57, 86, 71, 57, 86, 100, 71, 86, 86, 86, 86, 86] }, { \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 71, 71, 86, 86, 100, 100, 100, 100, 100, 100, 100, 100, 86, 57, 29, 0] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [14, 14, 14, 14, 29, 14, 14, 29, 14, 43, 14, 43, 57, 86, 57, 57, 100, 57, 43, 43, 57, 100, 57, 43, 29, 14, 0, 0, 0, 0] }] } },\n            { name: \"steel pan\", midiProgram: 114, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\", \"chorus\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"chorus\": 67, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 14 }, { \"frequency\": \"7×\", \"amplitude\": 3 }, { \"frequency\": \"3×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 3 }] } },\n            { name: \"steel pan synth\", midiProgram: 114, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12 }, { \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 1\" }] } },\n            { name: \"timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"effects\": [\"pitch shift\", \"note filter\", \"reverb\"], \"pitchShiftSemitones\": 15, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"pitchShift\", \"envelope\": \"twang 1\" }] } },\n            { name: \"dark strike\", midiProgram: 47, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 14, 14, 14, 29, 29, 43, 43, 86, 43, 43, 43, 29, 86, 29, 29, 29, 86, 29, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\n            { name: \"woodblock\", midiProgram: 115, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 14, 29, 43, 43, 57, 86, 86, 71, 57, 57, 43, 43, 57, 86, 86, 43, 43, 71, 57, 57, 57, 57, 57, 86, 86, 71, 71, 71, 71] } },\n            { name: \"taiko drum\", midiProgram: 116, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 100, 100, 43, 43, 71, 71, 43, 43, 43, 43, 43, 43, 57, 29, 57, 43, 57, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\n            { name: \"melodic drum\", midiProgram: 117, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 71, 71, 57, 57, 43, 43, 71, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\n            { name: \"drum synth\", midiProgram: 118, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"decay 1\", \"spectrum\": [100, 86, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\n            { name: \"tom-tom\", midiProgram: 116, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 29, 14, 0, 0, 86, 14, 43, 29, 86, 29, 14, 29, 57, 43, 43, 43, 43, 57, 43, 43, 43, 29, 57, 43, 43, 43, 43, 43, 43] } },\n            { name: \"metal pipe\", midiProgram: 117, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [29, 43, 86, 43, 43, 43, 43, 43, 100, 29, 14, 14, 100, 14, 14, 0, 0, 0, 0, 0, 14, 29, 29, 14, 0, 0, 14, 29, 0, 0] } },\n            { name: \"synth kick\", midiProgram: 47, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"8×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\n        ])\n    },\n    {\n        name: \"Novelty Presets\", presets: toNameMap([\n            { name: \"guitar fret noise\", midiProgram: 120, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1000, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 29, 14, 0, 0, 43, 0, 43, 0, 71, 43, 0, 57, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\n            { name: \"fifth saw lead\", midiProgram: 86, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1.4142 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\n            { name: \"fifth swell\", midiProgram: 86, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 2 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }] } },\n            { name: \"soundtrack\", midiProgram: 97, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\n            { name: \"reverse cymbal\", midiProgram: 119, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"none\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [29, 57, 57, 29, 57, 57, 29, 29, 43, 29, 29, 43, 29, 29, 57, 57, 14, 57, 14, 57, 71, 71, 57, 86, 57, 100, 86, 86, 86, 86] } },\n            { name: \"seashore\", midiProgram: 122, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"transition\": \"soft fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 43, 43, 43, 57, 57, 57, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57] } },\n            { name: \"bird tweet\", midiProgram: 123, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"chord type\", \"vibrato\", \"reverb\"], \"chord\": \"strum\", \"vibrato\": \"heavy\", \"reverb\": 67, \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"harmonics\": [0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"decay 1\" }] } },\n            { name: \"telephone ring\", midiProgram: 124, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 4 }, { \"frequency\": \"20×\", \"amplitude\": 1 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"tremolo4\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 1 }] } },\n            { name: \"helicopter\", midiProgram: 125, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"spectrum\": [14, 43, 43, 57, 57, 57, 71, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 57, 57] } },\n            { name: \"applause\", midiProgram: 126, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 29, 43, 43, 57, 71, 71, 86, 86, 86, 71, 71, 57, 57, 57, 71, 86, 86, 86, 86, 86, 71, 71, 57, 57, 57, 57] } },\n            { name: \"gunshot\", midiProgram: 127, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [14, 29, 43, 43, 57, 57, 57, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43] } },\n            { name: \"scoot\", midiProgram: 92, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 707.11, \"linearGain\": 4 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"double saw\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }] } },\n            { name: \"buzz saw\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"5×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"11×\", \"amplitude\": 12 }], \"envelopes\": [] } },\n            { name: \"mosquito\", midiProgram: 93, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"shaky\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"pulseWidth\": 4.41942, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"tremolo6\" }] } },\n            { name: \"breathing\", midiProgram: 126, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"spectrum\": [14, 14, 14, 29, 29, 29, 29, 29, 43, 29, 29, 43, 43, 43, 29, 29, 71, 43, 86, 86, 57, 100, 86, 86, 86, 86, 71, 86, 71, 57] } },\n            { name: \"klaxon synth\", midiProgram: 125, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"wave\": \"buzz\" } },\n            { name: \"theremin\", midiProgram: 40, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.7071 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"heavy\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"harmonics\": [100, 71, 57, 43, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"sonar ping\", midiProgram: 121, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"spectrum\": [100, 43, 29, 29, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\n        ])\n    },\n    {\n        name: \"UltraBox Presets\", presets: toNameMap([\n            { name: \"nes white\", midiProgram: 116, generalMidi: true, isNoise: true, settings: { \"type\": \"noise\", \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 8, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [\"panning\"], \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": 0, \"wave\": \"1-bit white\", \"envelopes\": [] } },\n            { name: \"nes ping\", midiProgram: 116, generalMidi: true, isNoise: true, settings: { \"type\": \"noise\", \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 8, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [\"panning\"], \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": 0, \"wave\": \"1-bit metallic\", \"envelopes\": [] } },\n            { name: \"distorted pulse vocal\", generalMidi: false, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }], \"effects\": [\"panning\", \"transition type\", \"pitch shift\", \"vibrato\", \"note filter\", \"bitcrusher\", \"echo\", \"reverb\"], \"transition\": \"normal\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 0, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 176.78, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 11.3137 }], \"noteSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 176.78, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 11.3137 }], \"bitcrusherOctave\": 6.5, \"bitcrusherQuantization\": 71, \"pan\": 0, \"panDelay\": 10, \"echoSustain\": 14, \"echoDelayBeats\": 0.167, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"wave\": \"1/8 pulse\", \"unison\": \"none\", \"envelopes\": [] } },\n            { name: \"dubsteb bwah\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 }], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [\"panning\", \"transition type\", \"chord type\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"custom interval\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 3 }] } },\n            { name: \"FM cool bass\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.7071 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.7071 }], \"effects\": [\"panning\", \"transition type\", \"note filter\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"noteFilterType\": true, \"noteSimpleCut\": 9, \"noteSimplePeak\": 2, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 }], \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 3 }] } },\n            { name: \"FM funky bass\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.1768 }], \"eqFilterType\": true, \"eqSimpleCut\": 5, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [\"panning\", \"transition type\", \"reverb\"], \"transition\": \"normal\", \"clicklessTransition\": false, \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"punch\" }, { \"target\": \"noteVolume\", \"envelope\": \"note size\" }] } },\n            { name: \"talking bass\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"chord type\"], \"chord\": \"custom interval\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 15, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"2×\", \"amplitude\": 8 }, { \"frequency\": \"2×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"note size\" }] } },\n            { name: \"synth marimba\", generalMidi: false, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 176.78, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"effects\": [\"note filter\", \"echo\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1.4142 }], \"echoSustain\": 71, \"echoDelayBeats\": 0.5, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"harmonics\": [86, 100, 29, 29, 0, 0, 0, 100, 0, 0, 0, 86, 29, 0, 14, 100, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 86], \"unison\": \"fifth\", \"stringSustain\": 7, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" }] } },\n            { name: \"italian accordian\", generalMidi: false, settings: { \"type\": \"custom chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6000, \"linearGain\": 0.5 }], \"eqFilterType\": true, \"eqSimpleCut\": 8, \"eqSimplePeak\": 1, \"eqSubFilters1\": [], \"effects\": [\"panning\", \"chorus\", \"reverb\"], \"pan\": 0, \"panDelay\": 10, \"chorus\": 71, \"reverb\": 45, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"wave\": \"square\", \"unison\": \"honky tonk\", \"customChipWave\": { \"0\": -24, \"1\": -24, \"2\": -24, \"3\": -24, \"4\": -24, \"5\": -24, \"6\": -24, \"7\": -24, \"8\": -24, \"9\": -24, \"10\": -24, \"11\": -24, \"12\": -24, \"13\": -24, \"14\": -24, \"15\": -24, \"16\": 24, \"17\": 24, \"18\": 24, \"19\": 24, \"20\": 24, \"21\": 24, \"22\": 24, \"23\": 24, \"24\": -24, \"25\": -24, \"26\": -24, \"27\": -24, \"28\": -24, \"29\": -24, \"30\": -24, \"31\": -24, \"32\": -24, \"33\": -24, \"34\": -24, \"35\": -24, \"36\": -24, \"37\": -24, \"38\": -24, \"39\": -24, \"40\": 24, \"41\": 24, \"42\": 24, \"43\": 24, \"44\": 24, \"45\": 24, \"46\": 24, \"47\": 24, \"48\": -24, \"49\": -24, \"50\": -24, \"51\": -24, \"52\": -24, \"53\": -24, \"54\": -24, \"55\": -24, \"56\": -24, \"57\": -24, \"58\": -24, \"59\": -24, \"60\": -24, \"61\": -24, \"62\": -24, \"63\": -24 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [] } },\n            { name: \"chip supersaw\", generalMidi: false, settings: { \"type\": \"custom chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 }], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [\"panning\", \"transition type\", \"vibrato\", \"chorus\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"pan\": 0, \"panDelay\": 10, \"chorus\": 29, \"reverb\": 29, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"wave\": \"square\", \"unison\": \"dissonant\", \"customChipWave\": { \"0\": 22, \"1\": 22, \"2\": 16, \"3\": 6, \"4\": 0, \"5\": -3, \"6\": -8, \"7\": -10, \"8\": -13, \"9\": -16, \"10\": -19, \"11\": -19, \"12\": -20, \"13\": -22, \"14\": -22, \"15\": -24, \"16\": -24, \"17\": -24, \"18\": -24, \"19\": -24, \"20\": -24, \"21\": -24, \"22\": -24, \"23\": -24, \"24\": -24, \"25\": -24, \"26\": -24, \"27\": -24, \"28\": -24, \"29\": -24, \"30\": -24, \"31\": 24, \"32\": 24, \"33\": 16, \"34\": 9, \"35\": 6, \"36\": 4, \"37\": 2, \"38\": 0, \"39\": -1, \"40\": -3, \"41\": -4, \"42\": -4, \"43\": -6, \"44\": -6, \"45\": -6, \"46\": -6, \"47\": -5, \"48\": -5, \"49\": -4, \"50\": -2, \"51\": -2, \"52\": 1, \"53\": 4, \"54\": 6, \"55\": 8, \"56\": 10, \"57\": 12, \"58\": 14, \"59\": 16, \"60\": 18, \"61\": 19, \"62\": 22, \"63\": 24 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [] } },\n            { name: \"fm supersaw\", generalMidi: false, settings: { \"type\": \"FM6op\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }], \"effects\": [\"panning\", \"transition type\", \"pitch shift\", \"note filter\", \"chorus\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [], \"noteSubFilters0\": [], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"pan\": 0, \"panDelay\": 10, \"chorus\": 71, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1 2 3 4 5 6\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 10, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"3×\", \"amplitude\": 7, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 9, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 6, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }], \"envelopes\": [] } },\n            { name: \"wind\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 250.03, \"linearGain\": 11.3137 }], \"eqFilterType\": true, \"eqSimpleCut\": 0, \"eqSimplePeak\": 7, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"transition type\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 15, \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"16×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"16×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"16×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [] } },\n            { name: \"mrow\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [], \"effects\": [\"panning\", \"chord type\", \"reverb\"], \"chord\": \"custom interval\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pan\": 0, \"panDelay\": 10, \"reverb\": 35, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 3\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 1\" }] } },\n            { name: \"vocal why\", generalMidi: false, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"note filter\", \"panning\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }], \"pan\": 0, \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"harmonics\": [100, 86, 29, 29, 14, 14, 0, 14, 14, 43, 71, 100, 100, 86, 71, 71, 57, 57, 43, 43, 43, 43, 43, 0, 0, 0, 0, 0], \"unison\": \"octave\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\n        ])\n    },\n    {\n        name: \"Slarmoo's Box Presets\", presets: toNameMap([\n            { name: \"radio fm\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1189.21, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 74.33, \"linearGain\": 0.3536 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1189.21, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 74.33, \"linearGain\": 0.3536 }], \"effects\": [\"panning\", \"detune\", \"vibrato\", \"bitcrusher\", \"reverb\"], \"detuneCents\": 0, \"vibrato\": \"none\", \"vibratoDepth\": 0, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"bitcrusherOctave\": 6.5, \"bitcrusherQuantization\": 43, \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": 6, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"0.12×\", \"amplitude\": 7, \"waveform\": \"trapezoid\", \"pulseWidth\": 5 }, { \"frequency\": \"0.5×\", \"amplitude\": 10, \"waveform\": \"triangle\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"waveform\": \"triangle\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"anguished underworld\", generalMidi: false, settings: { \"type\": \"FM6op\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }], \"effects\": [\"panning\", \"note filter\", \"distortion\", \"bitcrusher\", \"reverb\"], \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 2 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 2 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"distortion\": 43, \"aliases\": false, \"bitcrusherOctave\": 4.5, \"bitcrusherQuantization\": 43, \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0.075, \"fadeOutTicks\": 6, \"algorithm\": \"1 2←4 3←(5 6)\", \"feedbackType\": \"1→5 2→6 3→4\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"0.25×\", \"amplitude\": 14, \"waveform\": \"triangle\", \"pulseWidth\": 5 }, { \"frequency\": \"0.5×\", \"amplitude\": 13, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 12, \"waveform\": \"trapezoid\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"0.75×\", \"amplitude\": 3, \"waveform\": \"ramp\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"decay -1\", \"index\": 5 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"wibble 3\" }], \"isDrum\": false } },\n            { name: \"faint sorrow\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4240.89, \"linearGain\": 2 }], \"eqFilterType\": true, \"eqSimpleCut\": 8, \"eqSimplePeak\": 4, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"panning\", \"detune\", \"vibrato\", \"echo\", \"reverb\"], \"detuneCents\": 22, \"vibrato\": \"light\", \"vibratoDepth\": 0.15, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"pan\": 0, \"panDelay\": 10, \"echoSustain\": 100, \"echoDelayBeats\": 0.667, \"reverb\": 87, \"fadeInSeconds\": 0.075, \"fadeOutTicks\": 48, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"bright sorrow fm\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [], \"effects\": [\"panning\", \"chord type\", \"note filter\", \"echo\", \"reverb\"], \"chord\": \"strum\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 1.4142 }], \"pan\": 0, \"panDelay\": 10, \"echoSustain\": 71, \"echoDelayBeats\": 1.333, \"reverb\": 61, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"5×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"5×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"wet sorrow fm\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 }], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"panning\", \"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"vibratoDepth\": 0.15, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"pan\": 0, \"panDelay\": 10, \"reverb\": 23, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 3, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"decay 3\", \"index\": 2 }], \"isDrum\": false } },\n            { name: \"scream fm\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 2 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.125 }, { \"type\": \"peak\", \"cutoffHz\": 353.55, \"linearGain\": 0.7071 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 2 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.125 }, { \"type\": \"peak\", \"cutoffHz\": 353.55, \"linearGain\": 0.7071 }], \"effects\": [\"panning\", \"detune\", \"note filter\", \"distortion\", \"reverb\"], \"detuneCents\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.125 }, { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 11.3137 }], \"noteSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.125 }, { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 11.3137 }], \"distortion\": 0, \"aliases\": false, \"pan\": 0, \"panDelay\": 10, \"reverb\": 87, \"fadeInSeconds\": 0.135, \"fadeOutTicks\": -3, \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 11, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 3, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"7×\", \"amplitude\": 5, \"waveform\": \"triangle\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"detune\", \"envelope\": \"swell 1\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"tremolo4\" }], \"isDrum\": false } },\n            { name: \"anguished radio fm pad\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 353.55, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 353.55, \"linearGain\": 0.0884 }], \"eqSubFilters4\": [], \"effects\": [\"panning\", \"detune\", \"note filter\", \"bitcrusher\", \"chorus\", \"echo\", \"reverb\"], \"detuneCents\": -16, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [], \"noteSubFilters0\": [], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 11.3137 }], \"noteSubFilters2\": [{ \"type\": \"low-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 11.3137 }], \"noteSubFilters4\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 11.3137 }], \"bitcrusherOctave\": 5.5, \"bitcrusherQuantization\": 43, \"pan\": 0, \"panDelay\": 10, \"chorus\": 29, \"echoSustain\": 43, \"echoDelayBeats\": 1, \"reverb\": 58, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1→3\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"juicy kick\", generalMidi: false, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }], \"effects\": [\"panning\"], \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"20×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }], \"isDrum\": false } },\n            { name: \"good vibes supersaw\", generalMidi: false, settings: { \"type\": \"supersaw\", \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 6, \"discreteEnvelope\": false, \"pitchEnvelopeStart\": 37, \"pitchEnvelopeEnd\": 96, \"pitchEnvelopeInverse\": true, \"eqSubFilters0\": [], \"effects\": [\"panning\", \"transition type\", \"detune\", \"chorus\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"detuneCents\": 30, \"pan\": 0, \"panDelay\": 10, \"chorus\": 14, \"reverb\": 23, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 12, \"pulseWidth\": 26, \"decimalOffset\": 0, \"dynamism\": 33, \"spread\": 33, \"shape\": 17, \"envelopes\": [{ \"target\": \"supersawShape\", \"envelope\": \"pitch\" }, { \"target\": \"detune\", \"envelope\": \"tremolo2\" }], \"isDrum\": false } },\n            { name: \"ethereal\", generalMidi: false, isNoise: false, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1.4142 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 4, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1.4142 }], \"eqSubFilters1\": [], \"effects\": [\"panning\", \"transition type\", \"chord type\", \"pitch shift\", \"detune\", \"vibrato\", \"note filter\", \"bitcrusher\", \"chorus\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"chord\": \"simultaneous\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pitchShiftSemitones\": 12, \"detuneCents\": 36, \"vibrato\": \"custom\", \"vibratoDepth\": 0.12, \"vibratoDelay\": 36, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 0.7071 }], \"noteSubFilters0\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 0.7071 }], \"bitcrusherOctave\": 4.5, \"bitcrusherQuantization\": 43, \"pan\": 0, \"panDelay\": 10, \"chorus\": 71, \"reverb\": 100, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"spectrum\": [43, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 57, 0, 43, 0, 43, 0, 0, 29, 0, 29, 0, 14, 14, 14, 0, 0], \"unison\": \"none\", \"pitchEnvelopeStart0\": 0, \"pitchEnvelopeEnd0\": 96, \"envelopeInverse0\": false, \"pitchEnvelopeStart1\": 0, \"pitchEnvelopeEnd1\": 96, \"envelopeInverse1\": false, \"pitchEnvelopeStart2\": 0, \"pitchEnvelopeEnd2\": 96, \"envelopeInverse2\": false, \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"detune\", \"envelope\": \"tremolo3\" }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"note size\" }], \"isDrum\": false } },\n            { name: \"walrus wuh\", generalMidi: false, settings: { \"type\": \"supersaw\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }, { \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 74.33, \"linearGain\": 2.8284 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"pitchEnvelopeInverse\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }, { \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 74.33, \"linearGain\": 2.8284 }], \"effects\": [\"panning\", \"note filter\", \"bitcrusher\", \"chorus\", \"reverb\"], \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 0.125 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 0.125 }], \"bitcrusherOctave\": 4, \"bitcrusherQuantization\": 71, \"pan\": 0, \"panDelay\": 10, \"chorus\": 86, \"reverb\": 32, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 48, \"pulseWidth\": 50, \"decimalOffset\": 0, \"dynamism\": 100, \"spread\": 50, \"shape\": 0, \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"punch\" }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"decay 3\" }], \"isDrum\": false } },\n            { name: \"saturnic\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4240.89, \"linearGain\": 2 }], \"eqFilterType\": true, \"eqSimpleCut\": 8, \"eqSimplePeak\": 4, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"panning\", \"vibrato\", \"chorus\", \"echo\", \"reverb\"], \"vibrato\": \"light\", \"vibratoDepth\": 0.15, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"pan\": 0, \"panDelay\": 10, \"chorus\": 100, \"echoSustain\": 71, \"echoDelayBeats\": 0.5, \"reverb\": 45, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 15, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"glassy harmonics\", generalMidi: false, settings: { \"type\": \"harmonics\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.5 }], \"effects\": [\"panning\", \"detune\", \"note filter\", \"chorus\", \"reverb\"], \"detuneCents\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [], \"noteSubFilters0\": [], \"pan\": 0, \"panDelay\": 10, \"chorus\": 14, \"reverb\": 29, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"harmonics\": [100, 0, 43, 29, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 14, 29, 14, 0, 14, 0, 0, 0, 0, 100, 0, 0, 14, 0], \"unison\": \"none\", \"envelopes\": [], \"isDrum\": false } },\n            { name: \"plucked\", generalMidi: false, settings: { \"type\": \"Picked String\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.0884 }], \"effects\": [\"panning\", \"transition type\", \"echo\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"pan\": 0, \"panDelay\": 10, \"echoSustain\": 100, \"echoDelayBeats\": 1.333, \"reverb\": 26, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"harmonics\": [100, 86, 57, 0, 0, 57, 57, 57, 86, 57, 57, 43, 43, 43, 29, 29, 14, 14, 29, 14, 14, 14, 29, 100, 57, 43, 14, 14], \"unison\": \"none\", \"stringSustain\": 14, \"envelopes\": [], \"isDrum\": false } },\n            { name: \"spectrum wind\", generalMidi: false, isNoise: true, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 }], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"panning\", \"note filter\", \"reverb\"], \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 1.4142 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 1.4142 }], \"pan\": 0, \"panDelay\": 10, \"reverb\": 87, \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"spectrum\": [29, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 14, 57, 14, 0, 57, 57, 0, 0, 57, 0, 71, 14, 29, 100, 71, 0, 100, 14, 86], \"unison\": \"none\", \"envelopes\": [], \"isDrum\": true } },\n            { name: \"hi-hat\", generalMidi: false, isNoise: true, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.1768 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.1768 }], \"eqSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.1768 }], \"eqSubFilters2\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.1768 }], \"eqSubFilters3\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.1768 }], \"effects\": [\"panning\"], \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"wave\": \"white\", \"unison\": \"none\", \"envelopes\": [], \"isDrum\": true } },\n            { name: \"jungle bass\", generalMidi: false, isNoise: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 148.65, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 148.65, \"linearGain\": 0.0884 }], \"effects\": [\"panning\", \"vibrato\", \"note filter\", \"chorus\", \"reverb\"], \"vibrato\": \"none\", \"vibratoDepth\": 0, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 74.33, \"linearGain\": 0.0884 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 74.33, \"linearGain\": 0.0884 }], \"pan\": 0, \"panDelay\": 10, \"chorus\": 14, \"reverb\": 3, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1↔2 3↔4\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"pitchEnvelopeStart0\": 0, \"pitchEnvelopeEnd0\": 96, \"envelopeInverse0\": false, \"pitchEnvelopeStart1\": 0, \"pitchEnvelopeEnd1\": 96, \"envelopeInverse1\": false, \"pitchEnvelopeStart2\": 12, \"pitchEnvelopeEnd2\": 28, \"envelopeInverse2\": false, \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"swell 3\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"pitch\", \"index\": 0 }], \"isDrum\": false } },\n            { name: \"beach tide\", generalMidi: false, isNoise: false, settings: { \"type\": \"harmonics\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.1768 }, { \"type\": \"peak\", \"cutoffHz\": 8000, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.1768 }, { \"type\": \"peak\", \"cutoffHz\": 8000, \"linearGain\": 0.0884 }], \"effects\": [\"panning\", \"transition type\", \"chord type\", \"note filter\", \"chorus\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"chord\": \"simultaneous\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.1768 }], \"noteSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.1768 }], \"pan\": 0, \"panDelay\": 10, \"chorus\": 14, \"reverb\": 32, \"fadeInSeconds\": 0.0938, \"fadeOutTicks\": 72, \"harmonics\": [86, 86, 71, 57, 57, 43, 43, 43, 29, 29, 14, 14, 14, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"pitchEnvelopeStart0\": 0, \"pitchEnvelopeEnd0\": 96, \"envelopeInverse0\": false, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"pitch\" }], \"isDrum\": false } },\n            { name: \"starlight\", generalMidi: false, isNoise: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.0884 }], \"effects\": [\"panning\", \"transition type\", \"vibrato\", \"bitcrusher\", \"echo\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"vibrato\": \"light\", \"vibratoDepth\": 0.15, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"bitcrusherOctave\": 5.5, \"bitcrusherQuantization\": 29, \"pan\": 0, \"panDelay\": 10, \"echoSustain\": 29, \"echoDelayBeats\": 1, \"reverb\": 13, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 6, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"distant monument\", generalMidi: false, isNoise: false, settings: { \"type\": \"chip\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 0.125 }, { \"type\": \"peak\", \"cutoffHz\": 210.22, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 5.6569 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 0.125 }, { \"type\": \"peak\", \"cutoffHz\": 210.22, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 5.6569 }], \"effects\": [\"panning\", \"transition type\", \"chord type\", \"detune\", \"bitcrusher\", \"chorus\", \"echo\", \"reverb\"], \"transition\": \"normal\", \"clicklessTransition\": false, \"chord\": \"strum\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"detuneCents\": 24, \"bitcrusherOctave\": 2.5, \"bitcrusherQuantization\": 14, \"pan\": 0, \"panDelay\": 10, \"chorus\": 86, \"echoSustain\": 71, \"echoDelayBeats\": 1, \"reverb\": 35, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"wave\": \"modbox pnryshk a (u5)\", \"unison\": \"detune\", \"isUsingAdvancedLoopControls\": false, \"chipWaveLoopStart\": 0, \"chipWaveLoopEnd\": 11, \"chipWaveLoopMode\": 0, \"chipWavePlayBackwards\": false, \"chipWaveStartOffset\": 0, \"pitchEnvelopeStart0\": 0, \"pitchEnvelopeEnd0\": 96, \"envelopeInverse0\": false, \"pitchEnvelopeStart1\": 0, \"pitchEnvelopeEnd1\": 96, \"envelopeInverse1\": false, \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"punch\" }, { \"target\": \"noteVolume\", \"envelope\": \"twang 1\" }], \"isDrum\": false } },\n            { name: \"mercurial\", generalMidi: false, isNoise: false, settings: { \"type\": \"FM6op\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 88.39, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.1768 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 88.39, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.1768 }], \"eqSubFilters1\": [], \"effects\": [\"panning\", \"distortion\", \"chorus\"], \"distortion\": 43, \"aliases\": false, \"pan\": 0, \"panDelay\": 10, \"chorus\": 43, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"Custom\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 8, \"customAlgorithm\": { \"mods\": [[3], [5], [4], [], [6], []], \"carrierCount\": 2 }, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"0.5×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorFrequency\", \"envelope\": \"linear\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 3 }, { \"target\": \"distortion\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 20, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"air hiss\", generalMidi: false, isNoise: true, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"eqFilterType\": true, \"eqSimpleCut\": 7, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"panning\", \"note filter\", \"distortion\", \"reverb\"], \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }, { \"type\": \"high-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.3536 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }, { \"type\": \"high-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.3536 }], \"distortion\": 71, \"aliases\": false, \"pan\": 0, \"panDelay\": 10, \"reverb\": 6, \"fadeInSeconds\": 0, \"fadeOutTicks\": -24, \"spectrum\": [57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 57, 71, 86, 100, 100, 100, 100, 86, 71, 71, 43], \"unison\": \"none\", \"envelopes\": [], \"isDrum\": true } },\n            { name: \"spectral phaser\", generalMidi: false, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 74.33, \"linearGain\": 0.25 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 10, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"panning\", \"note filter\", \"distortion\", \"bitcrusher\", \"chorus\", \"echo\", \"reverb\"], \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 1414.21, \"linearGain\": 0.125 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 353.55, \"linearGain\": 0.1768 }, { \"type\": \"peak\", \"cutoffHz\": 148.65, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 88.39, \"linearGain\": 0.1768 }], \"noteSubFilters0\": [{ \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 1414.21, \"linearGain\": 0.125 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 353.55, \"linearGain\": 0.1768 }, { \"type\": \"peak\", \"cutoffHz\": 148.65, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 88.39, \"linearGain\": 0.1768 }], \"distortion\": 14, \"aliases\": false, \"bitcrusherOctave\": 6, \"bitcrusherQuantization\": 14, \"pan\": 0, \"panDelay\": 10, \"chorus\": 100, \"echoSustain\": 86, \"echoDelayBeats\": 1, \"reverb\": 32, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"spectrum\": [86, 0, 0, 0, 57, 0, 0, 71, 0, 0, 0, 86, 0, 0, 57, 0, 43, 0, 43, 0, 0, 43, 0, 29, 0, 29, 14, 14, 29, 14], \"unison\": \"piano\", \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.07, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 0 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.06, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 1 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.05, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 2 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.04, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 3 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.09, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 4 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.08, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 5 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.1, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 6 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0.03, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 7 }, { \"target\": \"distortion\", \"envelope\": \"none\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 0.3 }], \"isDrum\": false } },\n            { name: \"shaker\", generalMidi: false, isNoise: true, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 4000, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 0.0884 }, { \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 0.25 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 6, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 4000, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 0.0884 }, { \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 0.25 }], \"effects\": [\"panning\", \"transition type\", \"detune\", \"distortion\", \"bitcrusher\", \"chorus\", \"echo\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"detuneCents\": 30, \"distortion\": 43, \"aliases\": false, \"bitcrusherOctave\": 2.5, \"bitcrusherQuantization\": 43, \"pan\": 0, \"panDelay\": 10, \"chorus\": 43, \"echoSustain\": 29, \"echoDelayBeats\": 1, \"reverb\": 23, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 96, \"wave\": \"deep\", \"unison\": \"none\", \"envelopes\": [{ \"target\": \"detune\", \"envelope\": \"tremolo2\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"noteVolume\", \"envelope\": \"flare\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 12, \"inverse\": false, \"perEnvelopeSpeed\": 64, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": true } },\n            { name: \"distant sorrow\", generalMidi: false, settings: { \"type\": \"harmonics\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 4 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.5 }], \"effects\": [\"panning\", \"transition type\", \"detune\", \"vibrato\", \"note filter\", \"echo\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"detuneCents\": 0, \"vibrato\": \"custom\", \"vibratoDepth\": 0.2, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }], \"pan\": 0, \"panDelay\": 10, \"echoSustain\": 100, \"echoDelayBeats\": 1, \"reverb\": 74, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"harmonics\": [86, 71, 57, 43, 43, 29, 57, 0, 14, 0, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 57, 57, 57, 0, 57, 57, 0, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"fall\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 10, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2.5, \"perEnvelopeLowerBound\": 0.5, \"perEnvelopeUpperBound\": 2 }], \"isDrum\": false } },\n            { name: \"metallic kick\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 28, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"effects\": [\"panning\"], \"pan\": 0, \"panDelay\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 15, \"operators\": [{ \"frequency\": \"8×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"256x\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"128x\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"256x\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 16, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 3.5, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 256, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 256, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 256, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 3 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 256, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 2 }], \"isDrum\": false } },\n            { name: \"chimes\", generalMidi: false, settings: { \"type\": \"Picked String\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 8000, \"linearGain\": 2.8284 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 8000, \"linearGain\": 2.8284 }], \"effects\": [\"panning\", \"chord type\", \"detune\", \"note filter\", \"bitcrusher\", \"chorus\", \"echo\", \"reverb\"], \"chord\": \"strum\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"detuneCents\": 24, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 1 }], \"bitcrusherOctave\": 4, \"bitcrusherQuantization\": 29, \"pan\": 0, \"panDelay\": 0, \"chorus\": 29, \"echoSustain\": 86, \"echoDelayBeats\": 0.667, \"reverb\": 84, \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"harmonics\": [0, 100, 71, 71, 29, 0, 57, 86, 0, 0, 0, 0, 71, 29, 0, 0, 57, 0, 0, 86, 0, 0, 0, 100, 0, 100, 0, 57], \"unison\": \"none\", \"stringSustain\": 36, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 2, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"swell\", \"inverse\": false, \"perEnvelopeSpeed\": 4.5, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"stringSustain\", \"envelope\": \"random\", \"inverse\": false, \"perEnvelopeSpeed\": 16, \"perEnvelopeLowerBound\": 0.5, \"perEnvelopeUpperBound\": 1, \"steps\": 14, \"seed\": 2, \"waveform\": 0 }, { \"target\": \"detune\", \"envelope\": \"pitch\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96 }], \"isDrum\": false } },\n            { name: \"supersaw bass\", generalMidi: false, settings: { \"type\": \"supersaw\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"effects\": [\"panning\", \"note filter\", \"distortion\", \"chorus\", \"reverb\"], \"noteFilterType\": true, \"noteSimpleCut\": 9, \"noteSimplePeak\": 2, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 }], \"distortion\": 14, \"aliases\": false, \"pan\": 0, \"panDelay\": 10, \"chorus\": 29, \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"pulseWidth\": 50, \"decimalOffset\": 0, \"dynamism\": 100, \"spread\": 67, \"shape\": 0, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell\", \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"ascension\", generalMidi: false, isNoise: false, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 0.25 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 0.25 }], \"eqSubFilters1\": [], \"effects\": [\"panning\", \"granular\", \"chorus\", \"reverb\"], \"granular\": 7, \"grainSize\": 44, \"grainAmounts\": 9, \"grainRange\": 37, \"pan\": 0, \"panDelay\": 10, \"chorus\": 71, \"reverb\": 19, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"spectrum\": [43, 0, 0, 57, 0, 0, 14, 100, 29, 0, 0, 100, 29, 0, 100, 0, 57, 29, 86, 14, 14, 100, 14, 0, 14, 14, 0, 0, 43, 0], \"unison\": \"voiced\", \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"swell\", \"inverse\": false, \"perEnvelopeSpeed\": 0.7, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"panning\", \"envelope\": \"lfo\", \"inverse\": false, \"perEnvelopeSpeed\": 0.3, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false, \"waveform\": 2, \"steps\": 6 }], \"isDrum\": false } },\n            { name: \"liminal\", generalMidi: false, isNoise: false, settings: { \"type\": \"supersaw\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }], \"effects\": [\"panning\", \"detune\", \"vibrato\", \"note filter\", \"granular\", \"distortion\", \"bitcrusher\", \"chorus\", \"reverb\"], \"detuneCents\": 8, \"vibrato\": \"custom\", \"vibratoDepth\": 0.48, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": true, \"noteSimpleCut\": 6, \"noteSimplePeak\": 2, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2196.8, \"linearGain\": 1 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2196.8, \"linearGain\": 1 }], \"granular\": 6, \"grainSize\": 49, \"grainAmounts\": 10, \"grainRange\": 40, \"distortion\": 57, \"aliases\": false, \"bitcrusherOctave\": 5, \"bitcrusherQuantization\": 0, \"pan\": 38, \"panDelay\": 10, \"chorus\": 29, \"reverb\": 48, \"fadeInSeconds\": 0, \"fadeOutTicks\": 72, \"pulseWidth\": 30, \"decimalOffset\": 0, \"dynamism\": 17, \"spread\": 83, \"shape\": 67, \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 17, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"pulseWidth\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 1.3333, \"perEnvelopeLowerBound\": 0.1, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"distortion\", \"envelope\": \"random\", \"inverse\": false, \"perEnvelopeSpeed\": 1, \"perEnvelopeLowerBound\": 0.2, \"perEnvelopeUpperBound\": 1, \"discrete\": true, \"steps\": 8, \"seed\": 2, \"waveform\": 2 }, { \"target\": \"panning\", \"envelope\": \"lfo\", \"inverse\": false, \"perEnvelopeSpeed\": 0.3333, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false, \"waveform\": 2, \"steps\": 2 }, { \"target\": \"noteVolume\", \"envelope\": \"swell\", \"inverse\": false, \"perEnvelopeSpeed\": 18, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"granular\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }], \"isDrum\": false } },\n        ])\n    },\n    {\n        name: \"Slarmoo's Box Chip Presets\", presets: toNameMap([\n            { name: \"Slarmoo's Pulse\", midiProgram: 80, settings: { \"type\": \"PWM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [], \"effects\": [\"panning\", \"transition type\", \"chord type\", \"detune\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"arpeggio\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 8, \"detuneCents\": 24, \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"pulseWidth\": 50, \"decimalOffset\": 0, \"unison\": \"none\", \"pitchEnvelopeStart0\": 0, \"pitchEnvelopeEnd0\": 96, \"envelopeInverse0\": false, \"envelopes\": [{ \"target\": \"detune\", \"envelope\": \"pitch\" }], \"isDrum\": false } },\n            { name: \"discovery square\", midiProgram: 80, settings: { \"type\": \"chip\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"panning\", \"bitcrusher\"], \"bitcrusherOctave\": 5.5, \"bitcrusherQuantization\": 57, \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"wave\": \"square\", \"unison\": \"octave\", \"isUsingAdvancedLoopControls\": false, \"chipWaveLoopStart\": 0, \"chipWaveLoopEnd\": 2, \"chipWaveLoopMode\": 0, \"chipWavePlayBackwards\": false, \"chipWaveStartOffset\": 0, \"envelopes\": [], \"isDrum\": false } },\n            { name: \"VRC6 Sawtooth alt\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.5 }], \"effects\": [\"panning\", \"transition type\", \"chord type\", \"pitch shift\", \"detune\", \"vibrato\", \"distortion\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"arpeggio\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 12, \"pitchShiftSemitones\": 12, \"detuneCents\": 0, \"vibrato\": \"none\", \"vibratoDepth\": 0, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"distortion\": 0, \"aliases\": false, \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"wave\": \"square\", \"unison\": \"none\", \"customChipWave\": { \"0\": -1, \"1\": -1, \"2\": -1, \"3\": -1, \"4\": -1, \"5\": -1, \"6\": -1, \"7\": -1, \"8\": -1, \"9\": -5, \"10\": -5, \"11\": -5, \"12\": -4, \"13\": -4, \"14\": -4, \"15\": -3, \"16\": -3, \"17\": -3, \"18\": -7, \"19\": -7, \"20\": -6, \"21\": -6, \"22\": -5, \"23\": -5, \"24\": -4, \"25\": -4, \"26\": -4, \"27\": -7, \"28\": -7, \"29\": -6, \"30\": -6, \"31\": -5, \"32\": -5, \"33\": -4, \"34\": -4, \"35\": -4, \"36\": -8, \"37\": -8, \"38\": -7, \"39\": -7, \"40\": -6, \"41\": -6, \"42\": -5, \"43\": -5, \"44\": -4, \"45\": -4, \"46\": 21, \"47\": 20, \"48\": 18, \"49\": 17, \"50\": 16, \"51\": 14, \"52\": 13, \"53\": 12, \"54\": 11, \"55\": 7, \"56\": 6, \"57\": 6, \"58\": 5, \"59\": 5, \"60\": 5, \"61\": 4, \"62\": 4, \"63\": 4 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [], \"isDrum\": false } },\n            { name: \"pulse arps\", midiProgram: 80, settings: { \"type\": \"PWM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.125 }, { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 2 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 7, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.125 }, { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 2 }], \"effects\": [\"panning\", \"transition type\", \"chord type\", \"detune\", \"chorus\", \"echo\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"arpeggio\", \"fastTwoNoteArp\": true, \"arpeggioSpeed\": 8, \"detuneCents\": 64, \"pan\": 58, \"panDelay\": 10, \"chorus\": 43, \"echoSustain\": 71, \"echoDelayBeats\": 0.333, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"pulseWidth\": 50, \"decimalOffset\": 0, \"unison\": \"none\", \"envelopes\": [{ \"target\": \"detune\", \"envelope\": \"pitch\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96 }, { \"target\": \"pulseWidth\", \"envelope\": \"pitch\", \"inverse\": true, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"pitchEnvelopeStart\": 24, \"pitchEnvelopeEnd\": 83 }, { \"target\": \"panning\", \"envelope\": \"lfo\", \"inverse\": false, \"perEnvelopeSpeed\": 1, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"waveform\": 0, \"steps\": 2 }, { \"target\": \"noteVolume\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"chorus\", \"envelope\": \"twang\", \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n        ])\n    },\n    {\n        name: \"Slarmoo's Box Instrumental Presets\", presets: toNameMap([\n            { name: \"rusty flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 13454.34, \"linearGain\": 2.8284 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"peak\", \"cutoffHz\": 13454.34, \"linearGain\": 2.8284 }], \"effects\": [\"panning\", \"transition type\", \"detune\", \"distortion\", \"reverb\"], \"transition\": \"normal\", \"clicklessTransition\": false, \"detuneCents\": -7, \"distortion\": 14, \"aliases\": false, \"pan\": 0, \"panDelay\": 10, \"reverb\": 100, \"fadeInSeconds\": 0, \"fadeOutTicks\": 96, \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 4, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"20×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [], \"isDrum\": false } },\n            { name: \"bitcrushed piano\", midiProgram: 4, settings: { \"type\": \"chip\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 2.8284 }, { \"type\": \"high-pass\", \"cutoffHz\": 74.33, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 2.8284 }, { \"type\": \"high-pass\", \"cutoffHz\": 74.33, \"linearGain\": 0.5 }], \"effects\": [\"panning\", \"transition type\", \"detune\", \"distortion\", \"bitcrusher\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"detuneCents\": 0, \"distortion\": 29, \"aliases\": true, \"bitcrusherOctave\": 4, \"bitcrusherQuantization\": 43, \"pan\": 0, \"panDelay\": 0, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"wave\": \"triangle\", \"unison\": \"none\", \"isUsingAdvancedLoopControls\": true, \"chipWaveLoopStart\": 0, \"chipWaveLoopEnd\": 32, \"chipWaveLoopMode\": 0, \"chipWavePlayBackwards\": false, \"chipWaveStartOffset\": 0, \"envelopes\": [{ \"target\": \"bitcrusherQuantization\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0.6, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }], \"isDrum\": false } },\n            { name: \"detuned piano\", midiProgram: 3, settings: { \"type\": \"Picked String\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 2.8284 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 2.8284 }], \"effects\": [\"panning\", \"transition type\", \"detune\", \"vibrato\", \"note filter\", \"bitcrusher\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"detuneCents\": 44, \"vibrato\": \"custom\", \"vibratoDepth\": 0.04, \"vibratoDelay\": 13, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 1 }], \"noteSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 420.45, \"linearGain\": 1 }], \"bitcrusherOctave\": 4, \"bitcrusherQuantization\": 14, \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"harmonics\": [86, 86, 71, 71, 57, 57, 43, 29, 14, 29, 29, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 14, 14, 0, 0, 0], \"unison\": \"custom\", \"unisonVoices\": 2, \"unisonSpread\": 0.26, \"unisonOffset\": 0, \"unisonExpression\": 1, \"unisonSign\": 1, \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"detune\", \"envelope\": \"random\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 1, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 49, \"waveform\": 1 }, { \"target\": \"noteVolume\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 1.6667, \"perEnvelopeLowerBound\": 0.4, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 2, \"waveform\": 0 }, { \"target\": \"unison\", \"envelope\": \"random\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 1, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 20, \"waveform\": 1 }, { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"pitch\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": true, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 2, \"waveform\": 0 }], \"isDrum\": false } },\n            { name: \"pan flute 2\", midiProgram: 75, isNoise: false, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"effects\": [\"panning\", \"transition type\", \"note filter\", \"bitcrusher\", \"reverb\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"noteSubFilters1\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"bitcrusherOctave\": 6, \"bitcrusherQuantization\": 57, \"pan\": 0, \"panDelay\": 10, \"reverb\": 16, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -6, \"spectrum\": [100, 29, 14, 14, 57, 0, 0, 71, 0, 86, 57, 43, 57, 71, 14, 29, 14, 14, 14, 100, 71, 14, 14, 14, 14, 86, 43, 14, 0, 0], \"unison\": \"none\", \"pitchEnvelopeStart0\": 0, \"pitchEnvelopeEnd0\": 96, \"envelopeInverse0\": false, \"pitchEnvelopeStart1\": 0, \"pitchEnvelopeEnd1\": 96, \"envelopeInverse1\": false, \"pitchEnvelopeStart2\": 0, \"pitchEnvelopeEnd2\": 96, \"envelopeInverse2\": false, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"note size\" }, { \"target\": \"noteVolume\", \"envelope\": \"note size\" }], \"isDrum\": false } },\n            { name: \"trumpet 2\", midiProgram: 56, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3049.17, \"linearGain\": 1.4142 }], \"eqFilterType\": true, \"eqSimpleCut\": 7, \"eqSimplePeak\": 3, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"panning\", \"detune\", \"vibrato\", \"note filter\", \"distortion\", \"chorus\", \"reverb\"], \"detuneCents\": -64, \"vibrato\": \"custom\", \"vibratoDepth\": 0.68, \"vibratoDelay\": 17, \"vibratoSpeed\": 12, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 1000, \"linearGain\": 0.1768 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 1000, \"linearGain\": 0.1768 }], \"distortion\": 29, \"aliases\": false, \"pan\": 0, \"panDelay\": 10, \"chorus\": 14, \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"operators\": [{ \"frequency\": \"0.75×\", \"amplitude\": 14, \"waveform\": \"pulse width\", \"pulseWidth\": 2 }, { \"frequency\": \"1×\", \"amplitude\": 14, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"flare\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 8, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 32, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorFrequency\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 128, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 0 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"swell\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 2.5, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 2 }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"detune\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": true, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"harp 2\", midiProgram: 46, settings: { \"type\": \"FM6op\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 2.8284 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.25 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 2.8284 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.25 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }], \"eqSubFilters1\": [], \"effects\": [\"panning\", \"detune\", \"note filter\", \"echo\", \"reverb\"], \"detuneCents\": -23, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 105.11, \"linearGain\": 2.8284 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 105.11, \"linearGain\": 2.8284 }], \"pan\": 0, \"panDelay\": 10, \"echoSustain\": 29, \"echoDelayBeats\": 1.083, \"reverb\": 74, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←4 2←5 3←6\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 5, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 6, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"6×\", \"amplitude\": 12, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 4, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"operatorFrequency\", \"envelope\": \"tremolo\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 8, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 1 }, { \"target\": \"detune\", \"envelope\": \"decay\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 7, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }, { \"target\": \"noteFilterFreq\", \"envelope\": \"tremolo2\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 1, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 8, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"index\": 4 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": true, \"perEnvelopeSpeed\": 8, \"perEnvelopeLowerBound\": 0.4, \"perEnvelopeUpperBound\": 1, \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"punch\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"electric guitar 1\", midiProgram: 30, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1189.21, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1189.21, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 420.45, \"linearGain\": 0.0884 }], \"effects\": [\"panning\", \"chord type\", \"vibrato\", \"note filter\", \"distortion\", \"reverb\"], \"chord\": \"monophonic\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"monoChordTone\": 0, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 4 }, { \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 1 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 4 }, { \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 1 }], \"distortion\": 100, \"aliases\": false, \"pan\": 0, \"panDelay\": 0, \"reverb\": 6, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 0, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"0.25×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"punch\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"vibratoDepth\", \"envelope\": \"rise\", \"inverse\": false, \"perEnvelopeSpeed\": 9, \"perEnvelopeLowerBound\": 1, \"perEnvelopeUpperBound\": 2, \"discrete\": false }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"distortion\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }], \"isDrum\": false } },\n            { name: \"electric guitar 2\", midiProgram: 30, settings: { \"type\": \"PWM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 2 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.25 }, { \"type\": \"peak\", \"cutoffHz\": 5656.85, \"linearGain\": 2 }], \"effects\": [\"panning\", \"chord type\", \"vibrato\", \"note filter\", \"distortion\", \"bitcrusher\", \"chorus\", \"reverb\"], \"chord\": \"monophonic\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"monoChordTone\": 0, \"vibrato\": \"custom\", \"vibratoDepth\": 0.68, \"vibratoDelay\": 22, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1000, \"linearGain\": 2.8284 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1000, \"linearGain\": 2.8284 }], \"distortion\": 43, \"aliases\": false, \"bitcrusherOctave\": 6.5, \"bitcrusherQuantization\": 71, \"pan\": 0, \"panDelay\": 0, \"chorus\": 14, \"reverb\": 13, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"pulseWidth\": 50, \"decimalOffset\": 0, \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"rise\", \"inverse\": false, \"perEnvelopeSpeed\": 0.3333, \"perEnvelopeLowerBound\": 0.8, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"pulseWidth\", \"envelope\": \"twang\", \"inverse\": true, \"perEnvelopeSpeed\": 2.25, \"perEnvelopeLowerBound\": 0.5, \"perEnvelopeUpperBound\": 0.9, \"discrete\": false }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }, { \"target\": \"bitcrusherQuantization\", \"envelope\": \"note size\", \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"discrete\": false }], \"isDrum\": false } },\n        ])\n    },\n    {\n        name: \"Slarmoo's Box Novelty Presets\", presets: toNameMap([\n            { name: \"bitcrushed artifacts\", generalMidi: false, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9656.85, \"linearGain\": 0.5 }], \"eqFilterType\": true, \"eqSimpleCut\": 9, \"eqSimplePeak\": 1, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"panning\", \"distortion\", \"bitcrusher\", \"echo\"], \"distortion\": 71, \"aliases\": false, \"bitcrusherOctave\": 2, \"bitcrusherQuantization\": 86, \"pan\": 0, \"panDelay\": 10, \"echoSustain\": 0, \"echoDelayBeats\": 1, \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"harmonics\": [0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 100, 43, 0, 0, 14, 86, 0, 14, 0, 0, 0, 0, 0, 86], \"unison\": \"none\", \"stringSustain\": 14, \"envelopes\": [], \"isDrum\": false } },\n            { name: \"whistle 2\", midiProgram: 78, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2110.37, \"linearGain\": 1.4142 }], \"eqFilterType\": true, \"eqSimpleCut\": 6, \"eqSimplePeak\": 3, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters1\": [], \"effects\": [\"panning\", \"transition type\", \"pitch shift\", \"note filter\", \"distortion\", \"echo\", \"reverb\"], \"transition\": \"normal\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 11, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 2 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 4 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 2 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 4 }], \"distortion\": 43, \"aliases\": false, \"pan\": 0, \"panDelay\": 10, \"echoSustain\": 57, \"echoDelayBeats\": 1.083, \"reverb\": 87, \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -1, \"harmonics\": [57, 0, 0, 0, 0, 0, 0, 0, 0, 86, 57, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 57, 29, 0, 29, 100, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"pitchShift\", \"envelope\": \"decay 1\" }], \"isDrum\": false } },\n            { name: \"frog wuh\", generalMidi: false, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 8 }, { \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.125 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 594.6, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 8 }, { \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.125 }], \"eqSubFilters1\": [], \"effects\": [\"panning\", \"pitch shift\", \"note filter\"], \"pitchShiftSemitones\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1000, \"linearGain\": 1 }], \"noteSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1000, \"linearGain\": 1 }], \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"spectrum\": [100, 29, 14, 29, 0, 14, 0, 71, 0, 43, 14, 71, 0, 0, 71, 14, 100, 0, 71, 0, 43, 86, 43, 0, 43, 0, 0, 43, 29, 29], \"envelopes\": [{ \"target\": \"pitchShift\", \"envelope\": \"twang 1\" }, { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }], \"isDrum\": false } },\n            { name: \"stationary harmonics\", generalMidi: false, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.5 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.3536 }, { \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 0.5 }], \"effects\": [\"panning\", \"transition type\", \"chord type\", \"vibrato\"], \"transition\": \"continue\", \"clicklessTransition\": false, \"chord\": \"simultaneous\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"vibrato\": \"shaky\", \"vibratoDepth\": 0.1, \"vibratoDelay\": 0, \"vibratoSpeed\": 10, \"vibratoType\": 1, \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"harmonics\": [100, 0, 57, 29, 14, 57, 29, 29, 14, 14, 29, 43, 14, 14, 14, 0, 14, 29, 29, 14, 0, 0, 14, 0, 0, 29, 14, 14], \"unison\": \"stationary\", \"envelopes\": [], \"isDrum\": false } },\n            { name: \"dead souls\", generalMidi: false, settings: { \"type\": \"spectrum\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 1.4142 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": true, \"eqSubFilters0\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 1.4142 }], \"effects\": [\"panning\", \"transition type\", \"chord type\", \"pitch shift\", \"detune\", \"distortion\", \"chorus\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"arpeggio\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pitchShiftSemitones\": 24, \"detuneCents\": -200, \"distortion\": 100, \"aliases\": false, \"pan\": 0, \"panDelay\": 10, \"chorus\": 14, \"reverb\": 35, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"spectrum\": [100, 71, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 57, 14, 14, 0, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"pitchShift\", \"envelope\": \"random\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 24, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1.2, \"steps\": 16, \"seed\": 37, \"waveform\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 2, \"waveform\": 0 }, { \"target\": \"detune\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": true, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 2, \"waveform\": 0 }, { \"target\": \"distortion\", \"envelope\": \"note size\", \"pitchEnvelopeStart\": 0, \"pitchEnvelopeEnd\": 96, \"inverse\": false, \"perEnvelopeSpeed\": 0, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1, \"steps\": 2, \"seed\": 2, \"waveform\": 0 }], \"isDrum\": false } },\n            { name: \"flutter\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 2.8284 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 2.8284 }], \"effects\": [\"panning\", \"transition type\", \"chorus\", \"reverb\", \"ring mod\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"ringMod\": 100, \"ringModHz\": 100, \"ringModWaveformIndex\": 0, \"pan\": 0, \"panDelay\": 0, \"chorus\": 14, \"reverb\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }], \"envelopes\": [{ \"target\": \"ringModulationHz\", \"envelope\": \"fall\", \"inverse\": false, \"perEnvelopeSpeed\": 1.5, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1.9 }, { \"target\": \"noteVolume\", \"envelope\": \"blip\", \"inverse\": false, \"perEnvelopeSpeed\": 0.25, \"perEnvelopeLowerBound\": 0, \"perEnvelopeUpperBound\": 1 }], \"isDrum\": false } },\n            { name: \"vinyl\", generalMidi: false, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 1189.21, \"linearGain\": 0.25 }], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"envelopeSpeed\": 12, \"discreteEnvelope\": false, \"eqSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1414.21, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 1189.21, \"linearGain\": 0.25 }], \"effects\": [\"panning\", \"transition type\", \"note filter\", \"distortion\", \"bitcrusher\", \"chorus\", \"echo\", \"reverb\"], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.5 }, { \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 1 }], \"noteSubFilters0\": [{ \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.5 }, { \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 1 }], \"distortion\": 14, \"aliases\": false, \"bitcrusherOctave\": 5.5, \"bitcrusherQuantization\": 14, \"pan\": 0, \"panDelay\": 10, \"chorus\": 29, \"echoSustain\": 14, \"echoDelayBeats\": 0.083, \"reverb\": 32, \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"wave\": \"crackling\", \"unison\": \"none\", \"envelopes\": [], \"isDrum\": false } },\n        ])\n    }\n]);\n//# sourceMappingURL=EditorConfig.js.map","import { startLoadingSample, sampleLoadingState, sampleLoadEvents, SampleLoadedEvent, loadBuiltInSamples, toNameMap, Config, effectsIncludeTransition, effectsIncludeChord, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato } from \"./SynthConfig\";\nimport { EditorConfig } from \"../editor/EditorConfig\";\nimport { Channel } from \"./Channel\";\nimport { Instrument } from \"./Instrument\";\nimport { Note, makeNotePin, Pattern } from \"./Pattern\";\nimport { FilterSettings, FilterControlPoint } from \"./Filter\";\nimport { clamp, validateRange, parseFloatWithDefault, parseIntWithDefault, secondsToFadeInSetting, ticksToFadeOutSetting } from \"./utils\";\nfunction encode32BitNumber(buffer, x) {\n    buffer.push(base64IntToCharCode[(x >>> (6 * 5)) & 0x3]);\n    buffer.push(base64IntToCharCode[(x >>> (6 * 4)) & 0x3f]);\n    buffer.push(base64IntToCharCode[(x >>> (6 * 3)) & 0x3f]);\n    buffer.push(base64IntToCharCode[(x >>> (6 * 2)) & 0x3f]);\n    buffer.push(base64IntToCharCode[(x >>> (6 * 1)) & 0x3f]);\n    buffer.push(base64IntToCharCode[(x >>> (6 * 0)) & 0x3f]);\n}\nfunction decode32BitNumber(compressed, charIndex) {\n    let x = 0;\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 5);\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 4);\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 3);\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 2);\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 1);\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 0);\n    return x;\n}\nfunction encodeUnisonSettings(buffer, v, s, o, e, i) {\n    buffer.push(base64IntToCharCode[v]);\n    buffer.push(base64IntToCharCode[Number((s > 0))]);\n    let cleanS = Math.round(Math.abs(s) * 1000);\n    let cleanSDivided = Math.floor(cleanS / 63);\n    buffer.push(base64IntToCharCode[cleanS % 63], base64IntToCharCode[cleanSDivided % 63], base64IntToCharCode[Math.floor(cleanSDivided / 63)]);\n    buffer.push(base64IntToCharCode[Number((o > 0))]);\n    let cleanO = Math.round(Math.abs(o) * 1000);\n    let cleanODivided = Math.floor(cleanO / 63);\n    buffer.push(base64IntToCharCode[cleanO % 63], base64IntToCharCode[cleanODivided % 63], base64IntToCharCode[Math.floor(cleanODivided / 63)]);\n    buffer.push(base64IntToCharCode[Number((e > 0))]);\n    let cleanE = Math.round(Math.abs(e) * 1000);\n    buffer.push(base64IntToCharCode[cleanE % 63], base64IntToCharCode[Math.floor(cleanE / 63)]);\n    buffer.push(base64IntToCharCode[Number((i > 0))]);\n    let cleanI = Math.round(Math.abs(i) * 1000);\n    buffer.push(base64IntToCharCode[cleanI % 63], base64IntToCharCode[Math.floor(cleanI / 63)]);\n}\nfunction convertLegacyKeyToKeyAndOctave(rawKeyIndex) {\n    let key = clamp(0, Config.keys.length, rawKeyIndex);\n    let octave = 0;\n    if (rawKeyIndex === 12) {\n        key = 0;\n        octave = 1;\n    }\n    else if (rawKeyIndex === 13) {\n        key = 6;\n        octave = -1;\n    }\n    else if (rawKeyIndex === 14) {\n        key = 0;\n        octave = -1;\n    }\n    else if (rawKeyIndex === 15) {\n        key = 5;\n        octave = -1;\n    }\n    return [key, octave];\n}\nconst base64IntToCharCode = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 45, 95];\nconst base64CharCodeToInt = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 62, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 0, 0, 0, 63, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 0, 0, 0, 0];\nclass BitFieldReader {\n    constructor(source, startIndex, stopIndex) {\n        this._bits = [];\n        this._readIndex = 0;\n        for (let i = startIndex; i < stopIndex; i++) {\n            const value = base64CharCodeToInt[source.charCodeAt(i)];\n            this._bits.push((value >> 5) & 0x1);\n            this._bits.push((value >> 4) & 0x1);\n            this._bits.push((value >> 3) & 0x1);\n            this._bits.push((value >> 2) & 0x1);\n            this._bits.push((value >> 1) & 0x1);\n            this._bits.push(value & 0x1);\n        }\n    }\n    read(bitCount) {\n        let result = 0;\n        while (bitCount > 0) {\n            result = result << 1;\n            result += this._bits[this._readIndex++];\n            bitCount--;\n        }\n        return result;\n    }\n    readLongTail(minValue, minBits) {\n        let result = minValue;\n        let numBits = minBits;\n        while (this._bits[this._readIndex++]) {\n            result += 1 << numBits;\n            numBits++;\n        }\n        while (numBits > 0) {\n            numBits--;\n            if (this._bits[this._readIndex++]) {\n                result += 1 << numBits;\n            }\n        }\n        return result;\n    }\n    readPartDuration() {\n        return this.readLongTail(1, 3);\n    }\n    readLegacyPartDuration() {\n        return this.readLongTail(1, 2);\n    }\n    readPinCount() {\n        return this.readLongTail(1, 0);\n    }\n    readPitchInterval() {\n        if (this.read(1)) {\n            return -this.readLongTail(1, 3);\n        }\n        else {\n            return this.readLongTail(1, 3);\n        }\n    }\n}\nclass BitFieldWriter {\n    constructor() {\n        this._index = 0;\n        this._bits = [];\n    }\n    clear() {\n        this._index = 0;\n    }\n    write(bitCount, value) {\n        bitCount--;\n        while (bitCount >= 0) {\n            this._bits[this._index++] = (value >>> bitCount) & 1;\n            bitCount--;\n        }\n    }\n    writeLongTail(minValue, minBits, value) {\n        if (value < minValue)\n            throw new Error(\"value out of bounds\");\n        value -= minValue;\n        let numBits = minBits;\n        while (value >= (1 << numBits)) {\n            this._bits[this._index++] = 1;\n            value -= 1 << numBits;\n            numBits++;\n        }\n        this._bits[this._index++] = 0;\n        while (numBits > 0) {\n            numBits--;\n            this._bits[this._index++] = (value >>> numBits) & 1;\n        }\n    }\n    writePartDuration(value) {\n        this.writeLongTail(1, 3, value);\n    }\n    writePinCount(value) {\n        this.writeLongTail(1, 0, value);\n    }\n    writePitchInterval(value) {\n        if (value < 0) {\n            this.write(1, 1);\n            this.writeLongTail(1, 3, -value);\n        }\n        else {\n            this.write(1, 0);\n            this.writeLongTail(1, 3, value);\n        }\n    }\n    concat(other) {\n        for (let i = 0; i < other._index; i++) {\n            this._bits[this._index++] = other._bits[i];\n        }\n    }\n    encodeBase64(buffer) {\n        for (let i = 0; i < this._index; i += 6) {\n            const value = (this._bits[i] << 5) | (this._bits[i + 1] << 4) | (this._bits[i + 2] << 3) | (this._bits[i + 3] << 2) | (this._bits[i + 4] << 1) | this._bits[i + 5];\n            buffer.push(base64IntToCharCode[value]);\n        }\n        return buffer;\n    }\n    lengthBase64() {\n        return Math.ceil(this._index / 6);\n    }\n}\nexport class Song {\n    constructor(string) {\n        this.scaleCustom = [];\n        this.channels = [];\n        this.limitDecay = 4.0;\n        this.limitRise = 4000.0;\n        this.compressionThreshold = 1.0;\n        this.limitThreshold = 1.0;\n        this.compressionRatio = 1.0;\n        this.limitRatio = 1.0;\n        this.masterGain = 1.0;\n        this.inVolumeCap = 0.0;\n        this.outVolumeCap = 0.0;\n        this.outVolumeCapL = 0.0;\n        this.outVolumeCapR = 0.0;\n        this.eqFilter = new FilterSettings();\n        this.eqFilterType = false;\n        this.eqFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.eqFilterSimplePeak = 0;\n        this.eqSubFilters = [];\n        this.getNewNoteVolume = (isMod, modChannel, modInstrument, modCount) => {\n            if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\n                return Config.noteSizeMax;\n            else {\n                modCount = Config.modCount - modCount - 1;\n                const instrument = this.channels[modChannel].instruments[modInstrument];\n                let vol = Config.modulators[instrument.modulators[modCount]].newNoteVol;\n                let currentIndex = instrument.modulators[modCount];\n                let tempoIndex = Config.modulators.dictionary[\"tempo\"].index;\n                if (currentIndex == tempoIndex)\n                    vol = this.tempo - Config.modulators[tempoIndex].convertRealFactor;\n                if (!Config.modulators[currentIndex].forSong && instrument.modInstruments[modCount][0] < this.channels[instrument.modChannels[modCount][0]].instruments.length) {\n                    let chorusIndex = Config.modulators.dictionary[\"chorus\"].index;\n                    let reverbIndex = Config.modulators.dictionary[\"reverb\"].index;\n                    let gainIndex = Config.modulators.dictionary[\"gain\"].index;\n                    let panningIndex = Config.modulators.dictionary[\"pan\"].index;\n                    let panDelayIndex = Config.modulators.dictionary[\"pan delay\"].index;\n                    let distortionIndex = Config.modulators.dictionary[\"distortion\"].index;\n                    let detuneIndex = Config.modulators.dictionary[\"detune\"].index;\n                    let vibratoDepthIndex = Config.modulators.dictionary[\"vibrato depth\"].index;\n                    let vibratoSpeedIndex = Config.modulators.dictionary[\"vibrato speed\"].index;\n                    let vibratoDelayIndex = Config.modulators.dictionary[\"vibrato delay\"].index;\n                    let arpSpeedIndex = Config.modulators.dictionary[\"arp speed\"].index;\n                    let bitCrushIndex = Config.modulators.dictionary[\"bit crush\"].index;\n                    let freqCrushIndex = Config.modulators.dictionary[\"freq crush\"].index;\n                    let echoIndex = Config.modulators.dictionary[\"echo\"].index;\n                    let echoDelayIndex = Config.modulators.dictionary[\"echo delay\"].index;\n                    let echoPingPongIndex = Config.modulators.dictionary[\"echo ping pong\"].index;\n                    let pitchShiftIndex = Config.modulators.dictionary[\"pitch shift\"].index;\n                    let ringModIndex = Config.modulators.dictionary[\"ring modulation\"].index;\n                    let ringModHertzIndex = Config.modulators.dictionary[\"ring mod hertz\"].index;\n                    let granularIndex = Config.modulators.dictionary[\"granular\"].index;\n                    let grainAmountIndex = Config.modulators.dictionary[\"grain freq\"].index;\n                    let grainSizeIndex = Config.modulators.dictionary[\"grain size\"].index;\n                    let grainRangeIndex = Config.modulators.dictionary[\"grain range\"].index;\n                    let envSpeedIndex = Config.modulators.dictionary[\"envelope speed\"].index;\n                    let perEnvSpeedIndex = Config.modulators.dictionary[\"individual envelope speed\"].index;\n                    let perEnvLowerIndex = Config.modulators.dictionary[\"individual envelope lower bound\"].index;\n                    let perEnvUpperIndex = Config.modulators.dictionary[\"individual envelope upper bound\"].index;\n                    let instrumentIndex = instrument.modInstruments[modCount][0];\n                    let effectIndex = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].effectCount;\n                    switch (currentIndex) {\n                        case chorusIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].effects[effectIndex].chorus - Config.modulators[chorusIndex].convertRealFactor;\n                            break;\n                        case reverbIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].effects[effectIndex].reverb - Config.modulators[reverbIndex].convertRealFactor;\n                            break;\n                        case gainIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].effects[effectIndex].gain - Config.modulators[gainIndex].convertRealFactor;\n                            break;\n                        case panningIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].effects[effectIndex].pan - Config.modulators[panningIndex].convertRealFactor;\n                            break;\n                        case panDelayIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].effects[effectIndex].panDelay - Config.modulators[panDelayIndex].convertRealFactor;\n                            break;\n                        case distortionIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].effects[effectIndex].distortion - Config.modulators[distortionIndex].convertRealFactor;\n                            break;\n                        case detuneIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].detune;\n                            break;\n                        case vibratoDepthIndex:\n                            vol = Math.round(this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].vibratoDepth * 25 - Config.modulators[vibratoDepthIndex].convertRealFactor);\n                            break;\n                        case vibratoSpeedIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].vibratoSpeed - Config.modulators[vibratoSpeedIndex].convertRealFactor;\n                            break;\n                        case vibratoDelayIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].vibratoDelay - Config.modulators[vibratoDelayIndex].convertRealFactor;\n                            break;\n                        case arpSpeedIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].arpeggioSpeed - Config.modulators[arpSpeedIndex].convertRealFactor;\n                            break;\n                        case bitCrushIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].effects[effectIndex].bitcrusherQuantization - Config.modulators[bitCrushIndex].convertRealFactor;\n                            break;\n                        case freqCrushIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].effects[effectIndex].bitcrusherFreq - Config.modulators[freqCrushIndex].convertRealFactor;\n                            break;\n                        case echoIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].effects[effectIndex].echoSustain - Config.modulators[echoIndex].convertRealFactor;\n                            break;\n                        case echoDelayIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].effects[effectIndex].echoDelay - Config.modulators[echoDelayIndex].convertRealFactor;\n                            break;\n                        case echoPingPongIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].effects[effectIndex].echoPingPong - Config.modulators[echoPingPongIndex].convertRealFactor;\n                            break;\n                        case pitchShiftIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].pitchShift;\n                            break;\n                        case ringModIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].effects[effectIndex].ringModulation - Config.modulators[ringModIndex].convertRealFactor;\n                            break;\n                        case ringModHertzIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].effects[effectIndex].ringModulationHz - Config.modulators[ringModHertzIndex].convertRealFactor;\n                            break;\n                        case granularIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].effects[effectIndex].granular - Config.modulators[granularIndex].convertRealFactor;\n                            break;\n                        case grainAmountIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].effects[effectIndex].grainAmounts - Config.modulators[grainAmountIndex].convertRealFactor;\n                            break;\n                        case grainSizeIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].effects[effectIndex].grainSize - Config.modulators[grainSizeIndex].convertRealFactor;\n                            break;\n                        case grainRangeIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].effects[effectIndex].grainRange - Config.modulators[grainRangeIndex].convertRealFactor;\n                            break;\n                        case envSpeedIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].envelopeSpeed - Config.modulators[envSpeedIndex].convertRealFactor;\n                            break;\n                        case perEnvSpeedIndex:\n                            vol = Config.perEnvelopeSpeedToIndices[this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].envelopes[instrument.modEnvelopeNumbers[modCount]].perEnvelopeSpeed] - Config.modulators[perEnvSpeedIndex].convertRealFactor;\n                            break;\n                        case perEnvLowerIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].envelopes[instrument.modEnvelopeNumbers[modCount]].perEnvelopeLowerBound - Config.modulators[perEnvLowerIndex].convertRealFactor;\n                            break;\n                        case perEnvUpperIndex:\n                            vol = this.channels[instrument.modChannels[modCount][0]].instruments[instrumentIndex].envelopes[instrument.modEnvelopeNumbers[modCount]].perEnvelopeUpperBound - Config.modulators[perEnvUpperIndex].convertRealFactor;\n                            break;\n                    }\n                }\n                if (vol != undefined)\n                    return vol;\n                else\n                    return Config.noteSizeMax;\n            }\n        };\n        this.getVolumeCap = (isMod, modChannel, modInstrument, modCount) => {\n            if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\n                return Config.noteSizeMax;\n            else {\n                modCount = Config.modCount - modCount - 1;\n                let instrument = this.channels[modChannel].instruments[modInstrument];\n                let modulator = Config.modulators[instrument.modulators[modCount]];\n                let cap = modulator.maxRawVol;\n                if (cap != undefined) {\n                    if (modulator.name == \"post eq\" || modulator.name == \"pre eq\" || modulator.name == \"song eq\") {\n                        cap = Config.filterMorphCount - 1;\n                        if (instrument.modFilterTypes[modCount] > 0 && instrument.modFilterTypes[modCount] % 2) {\n                            cap = Config.filterFreqRange;\n                        }\n                        else if (instrument.modFilterTypes[modCount] > 0) {\n                            cap = Config.filterGainRange;\n                        }\n                    }\n                    return cap;\n                }\n                else\n                    return Config.noteSizeMax;\n            }\n        };\n        this.getVolumeCapForSetting = (isMod, modSetting, filterType) => {\n            if (!isMod)\n                return Config.noteSizeMax;\n            else {\n                let cap = Config.modulators[modSetting].maxRawVol;\n                if (cap != undefined) {\n                    if (filterType != undefined && (Config.modulators[modSetting].name == \"post eq\" || Config.modulators[modSetting].name == \"pre eq\" || Config.modulators[modSetting].name == \"song eq\")) {\n                        cap = Config.filterMorphCount - 1;\n                        if (filterType > 0 && filterType % 2) {\n                            cap = Config.filterFreqRange;\n                        }\n                        else if (filterType > 0) {\n                            cap = Config.filterGainRange;\n                        }\n                    }\n                    return cap;\n                }\n                else\n                    return Config.noteSizeMax;\n            }\n        };\n        if (string != undefined) {\n            this.fromBase64String(string);\n        }\n        else {\n            this.initToDefault(true);\n        }\n    }\n    getChannelCount() {\n        return this.pitchChannelCount + this.noiseChannelCount + this.modChannelCount;\n    }\n    getMaxInstrumentsPerChannel() {\n        return Math.max(this.layeredInstruments ? Config.layeredInstrumentCountMax : Config.instrumentCountMin, this.patternInstruments ? Config.patternInstrumentCountMax : Config.instrumentCountMin);\n    }\n    getMaxInstrumentsPerPattern(channelIndex) {\n        return this.getMaxInstrumentsPerPatternForChannel(this.channels[channelIndex]);\n    }\n    getMaxInstrumentsPerPatternForChannel(channel) {\n        return this.layeredInstruments\n            ? Math.min(Config.layeredInstrumentCountMax, channel.instruments.length)\n            : 1;\n    }\n    getChannelIsNoise(channelIndex) {\n        return (channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount);\n    }\n    getChannelIsMod(channelIndex) {\n        return (channelIndex >= this.pitchChannelCount + this.noiseChannelCount);\n    }\n    static secondsToFadeInSetting(seconds) {\n        return clamp(0, Config.fadeInRange, Math.round((-0.95 + Math.sqrt(0.9025 + 0.2 * seconds / 0.0125)) / 0.1));\n    }\n    static ticksToFadeOutSetting(ticks) {\n        let lower = Config.fadeOutTicks[0];\n        if (ticks <= lower)\n            return 0;\n        for (let i = 1; i < Config.fadeOutTicks.length; i++) {\n            let upper = Config.fadeOutTicks[i];\n            if (ticks <= upper)\n                return (ticks < (lower + upper) / 2) ? i - 1 : i;\n            lower = upper;\n        }\n        return Config.fadeOutTicks.length - 1;\n    }\n    initToDefault(andResetChannels = true) {\n        this.scale = 1;\n        this.scaleCustom = [true, false, true, true, false, false, false, true, true, false, true, true];\n        this.key = 0;\n        this.octave = 0;\n        this.loopStart = 0;\n        this.loopLength = 4;\n        this.tempo = 151;\n        this.reverb = 0;\n        this.beatsPerBar = 8;\n        this.barCount = 16;\n        this.patternsPerChannel = 8;\n        this.rhythm = 1;\n        this.layeredInstruments = false;\n        this.patternInstruments = false;\n        this.eqFilter.reset();\n        for (let i = 0; i < Config.filterMorphCount - 1; i++) {\n            this.eqSubFilters[i] = null;\n        }\n        this.title = \"Untitled\";\n        document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\n        if (andResetChannels) {\n            this.pitchChannelCount = 4;\n            this.noiseChannelCount = 1;\n            this.modChannelCount = 0;\n            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                const isNoiseChannel = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\n                const isModChannel = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\n                if (this.channels.length <= channelIndex) {\n                    this.channels[channelIndex] = new Channel();\n                    this.channels[channelIndex].color = channelIndex;\n                }\n                const channel = this.channels[channelIndex];\n                channel.octave = Math.max(4 - channelIndex, 0);\n                for (let pattern = 0; pattern < this.patternsPerChannel; pattern++) {\n                    if (channel.patterns.length <= pattern) {\n                        channel.patterns[pattern] = new Pattern();\n                    }\n                    else {\n                        channel.patterns[pattern].reset();\n                    }\n                }\n                channel.patterns.length = this.patternsPerChannel;\n                for (let instrument = 0; instrument < Config.instrumentCountMin; instrument++) {\n                    if (channel.instruments.length <= instrument) {\n                        channel.instruments[instrument] = new Instrument(isNoiseChannel, isModChannel);\n                    }\n                    channel.instruments[instrument].setTypeAndReset(isModChannel ? 10 : (isNoiseChannel ? 2 : 0), isNoiseChannel, isModChannel);\n                }\n                channel.instruments.length = Config.instrumentCountMin;\n                for (let bar = 0; bar < this.barCount; bar++) {\n                    channel.bars[bar] = bar < 16 ? 1 : 0;\n                }\n                channel.bars.length = this.barCount;\n            }\n            this.channels.length = this.getChannelCount();\n        }\n    }\n    toBase64String() {\n        let bits;\n        let buffer = [];\n        buffer.push(Song._variant);\n        buffer.push(base64IntToCharCode[Song._latestSlarmoosBoxVersion]);\n        buffer.push(78);\n        var encodedSongTitle = encodeURIComponent(this.title);\n        buffer.push(base64IntToCharCode[encodedSongTitle.length >> 6], base64IntToCharCode[encodedSongTitle.length & 0x3f]);\n        for (let i = 0; i < encodedSongTitle.length; i++) {\n            buffer.push(encodedSongTitle.charCodeAt(i));\n        }\n        buffer.push(110, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount], base64IntToCharCode[this.modChannelCount]);\n        buffer.push(115, base64IntToCharCode[this.scale]);\n        if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\n            for (var i = 1; i < Config.pitchesPerOctave; i++) {\n                buffer.push(base64IntToCharCode[this.scaleCustom[i] ? 1 : 0]);\n            }\n        }\n        buffer.push(107, base64IntToCharCode[this.key], base64IntToCharCode[this.octave - Config.octaveMin]);\n        buffer.push(108, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\n        buffer.push(101, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\n        buffer.push(116, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 0x3F]);\n        buffer.push(97, base64IntToCharCode[this.beatsPerBar - 1]);\n        buffer.push(103, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\n        buffer.push(106, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\n        buffer.push(114, base64IntToCharCode[this.rhythm]);\n        buffer.push(79);\n        if (this.compressionRatio != 1.0 || this.limitRatio != 1.0 || this.limitRise != 4000.0 || this.limitDecay != 4.0 || this.limitThreshold != 1.0 || this.compressionThreshold != 1.0 || this.masterGain != 1.0) {\n            buffer.push(base64IntToCharCode[Math.round(this.compressionRatio < 1 ? this.compressionRatio * 10 : 10 + (this.compressionRatio - 1) * 60)]);\n            buffer.push(base64IntToCharCode[Math.round(this.limitRatio < 1 ? this.limitRatio * 10 : 9 + this.limitRatio)]);\n            buffer.push(base64IntToCharCode[this.limitDecay]);\n            buffer.push(base64IntToCharCode[Math.round((this.limitRise - 2000.0) / 250.0)]);\n            buffer.push(base64IntToCharCode[Math.round(this.compressionThreshold * 20)]);\n            buffer.push(base64IntToCharCode[Math.round(this.limitThreshold * 20)]);\n            buffer.push(base64IntToCharCode[Math.round(this.masterGain * 50) >> 6], base64IntToCharCode[Math.round(this.masterGain * 50) & 0x3f]);\n        }\n        else {\n            buffer.push(base64IntToCharCode[0x3f]);\n        }\n        buffer.push(99);\n        if (this.eqFilter == null) {\n            buffer.push(base64IntToCharCode[0]);\n            console.log(\"Null post eq settings detected in toBase64String for song\");\n        }\n        else {\n            buffer.push(base64IntToCharCode[this.eqFilter.controlPointCount]);\n            for (let j = 0; j < this.eqFilter.controlPointCount; j++) {\n                const point = this.eqFilter.controlPoints[j];\n                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n            }\n        }\n        let usingSubFilterBitfield = 0;\n        for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n            usingSubFilterBitfield |= (+(this.eqSubFilters[j + 1] != null) << j);\n        }\n        buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\n        for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n            if (usingSubFilterBitfield & (1 << j)) {\n                buffer.push(base64IntToCharCode[this.eqSubFilters[j + 1].controlPointCount]);\n                for (let k = 0; k < this.eqSubFilters[j + 1].controlPointCount; k++) {\n                    const point = this.eqSubFilters[j + 1].controlPoints[k];\n                    buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                }\n            }\n        }\n        buffer.push(85);\n        for (let channel = 0; channel < this.getChannelCount(); channel++) {\n            var encodedChannelName = encodeURIComponent(this.channels[channel].name);\n            buffer.push(base64IntToCharCode[encodedChannelName.length >> 6], base64IntToCharCode[encodedChannelName.length & 0x3f]);\n            for (let i = 0; i < encodedChannelName.length; i++) {\n                buffer.push(encodedChannelName.charCodeAt(i));\n            }\n            buffer.push(base64IntToCharCode[this.channels[channel].color % 60]);\n        }\n        buffer.push(105, base64IntToCharCode[(this.layeredInstruments << 1) | this.patternInstruments]);\n        if (this.layeredInstruments || this.patternInstruments) {\n            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                buffer.push(base64IntToCharCode[this.channels[channelIndex].instruments.length - Config.instrumentCountMin]);\n            }\n        }\n        buffer.push(111);\n        for (let channelIndex = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\n            buffer.push(base64IntToCharCode[this.channels[channelIndex].octave]);\n        }\n        for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            for (let i = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                const instrument = this.channels[channelIndex].instruments[i];\n                buffer.push(84, base64IntToCharCode[instrument.type]);\n                buffer.push(118, base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) >> 6], base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) & 0x3f]);\n                buffer.push(117, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\n                buffer.push(102);\n                buffer.push(base64IntToCharCode[+instrument.noteFilterType]);\n                if (instrument.noteFilterType) {\n                    buffer.push(base64IntToCharCode[instrument.noteFilterSimpleCut]);\n                    buffer.push(base64IntToCharCode[instrument.noteFilterSimplePeak]);\n                }\n                else {\n                    if (instrument.noteFilter == null) {\n                        buffer.push(base64IntToCharCode[0]);\n                        console.log(\"Null pre eq settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\n                    }\n                    else {\n                        buffer.push(base64IntToCharCode[instrument.noteFilter.controlPointCount]);\n                        for (let j = 0; j < instrument.noteFilter.controlPointCount; j++) {\n                            const point = instrument.noteFilter.controlPoints[j];\n                            buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                        }\n                    }\n                    let usingSubFilterBitfield = 0;\n                    for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                        usingSubFilterBitfield |= (+(instrument.noteSubFilters[j + 1] != null) << j);\n                    }\n                    buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\n                    for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                        if (usingSubFilterBitfield & (1 << j)) {\n                            buffer.push(base64IntToCharCode[instrument.noteSubFilters[j + 1].controlPointCount]);\n                            for (let k = 0; k < instrument.noteSubFilters[j + 1].controlPointCount; k++) {\n                                const point = instrument.noteSubFilters[j + 1].controlPoints[k];\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                            }\n                        }\n                    }\n                }\n                buffer.push(113, base64IntToCharCode[instrument.effectCount]);\n                for (let effectIndex = 0; effectIndex < instrument.effectCount; effectIndex++) {\n                    if (instrument.effects[effectIndex] != null)\n                        buffer.push(base64IntToCharCode[instrument.effects[effectIndex].type & 63]);\n                    else {\n                        buffer.push(base64IntToCharCode[0]);\n                        continue;\n                    }\n                    let effect = instrument.effects[effectIndex];\n                    if (effect.type == 5) {\n                        buffer.push(base64IntToCharCode[+effect.eqFilterType]);\n                        if (effect.eqFilterType) {\n                            buffer.push(base64IntToCharCode[effect.eqFilterSimpleCut]);\n                            buffer.push(base64IntToCharCode[effect.eqFilterSimplePeak]);\n                        }\n                        else {\n                            if (effect.eqFilter == null) {\n                                buffer.push(base64IntToCharCode[0]);\n                                console.log(\"Null post eq settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\n                            }\n                            else {\n                                buffer.push(base64IntToCharCode[effect.eqFilter.controlPointCount]);\n                                for (let j = 0; j < effect.eqFilter.controlPointCount; j++) {\n                                    const point = effect.eqFilter.controlPoints[j];\n                                    buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                                }\n                            }\n                            let usingSubFilterBitfield = 0;\n                            for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                                usingSubFilterBitfield |= (+(effect.eqSubFilters[j + 1] != null) << j);\n                            }\n                            buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\n                            for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                                if (usingSubFilterBitfield & (1 << j)) {\n                                    buffer.push(base64IntToCharCode[effect.eqSubFilters[j + 1].controlPointCount]);\n                                    for (let k = 0; k < effect.eqSubFilters[j + 1].controlPointCount; k++) {\n                                        const point = effect.eqSubFilters[j + 1].controlPoints[k];\n                                        buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else if (effect.type == 3) {\n                        buffer.push(base64IntToCharCode[effect.distortion]);\n                        buffer.push(base64IntToCharCode[+instrument.aliases]);\n                    }\n                    else if (effect.type == 4) {\n                        buffer.push(base64IntToCharCode[effect.bitcrusherFreq], base64IntToCharCode[effect.bitcrusherQuantization]);\n                    }\n                    else if (effect.type == 9) {\n                        buffer.push(base64IntToCharCode[effect.gain >> 6], base64IntToCharCode[effect.gain & 0x3f]);\n                    }\n                    else if (effect.type == 2) {\n                        buffer.push(base64IntToCharCode[effect.pan >> 6], base64IntToCharCode[effect.pan & 0x3f]);\n                        buffer.push(base64IntToCharCode[effect.panDelay]);\n                        buffer.push(base64IntToCharCode[effect.panMode]);\n                    }\n                    else if (effect.type == 10) {\n                        buffer.push(base64IntToCharCode[effect.flanger]);\n                        buffer.push(base64IntToCharCode[effect.flangerSpeed]);\n                        buffer.push(base64IntToCharCode[effect.flangerDepth]);\n                        buffer.push(base64IntToCharCode[effect.flangerFeedback]);\n                    }\n                    else if (effect.type == 1) {\n                        buffer.push(base64IntToCharCode[effect.chorus]);\n                    }\n                    else if (effect.type == 6) {\n                        buffer.push(base64IntToCharCode[effect.echoSustain], base64IntToCharCode[effect.echoDelay], base64IntToCharCode[effect.echoPingPong >> 6], base64IntToCharCode[effect.echoPingPong & 0x3f]);\n                    }\n                    else if (effect.type == 0) {\n                        buffer.push(base64IntToCharCode[effect.reverb]);\n                    }\n                    else if (effect.type == 8) {\n                        buffer.push(base64IntToCharCode[effect.granular]);\n                        buffer.push(base64IntToCharCode[effect.grainSize]);\n                        buffer.push(base64IntToCharCode[effect.grainAmounts]);\n                        buffer.push(base64IntToCharCode[effect.grainRange]);\n                    }\n                    else if (effect.type == 7) {\n                        buffer.push(base64IntToCharCode[effect.ringModulation]);\n                        buffer.push(base64IntToCharCode[effect.ringModulationHz]);\n                        buffer.push(base64IntToCharCode[effect.ringModWaveformIndex]);\n                        buffer.push(base64IntToCharCode[effect.ringModPulseWidth]);\n                        buffer.push(base64IntToCharCode[(effect.ringModHzOffset - Config.rmHzOffsetMin) >> 6], base64IntToCharCode[(effect.ringModHzOffset - Config.rmHzOffsetMin) & 0x3F]);\n                    }\n                }\n                buffer.push(base64IntToCharCode[instrument.mdeffects & 63]);\n                if (effectsIncludeTransition(instrument.mdeffects)) {\n                    buffer.push(base64IntToCharCode[instrument.transition]);\n                }\n                if (effectsIncludeChord(instrument.mdeffects)) {\n                    buffer.push(base64IntToCharCode[instrument.chord]);\n                    if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index) {\n                        buffer.push(base64IntToCharCode[instrument.arpeggioSpeed]);\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]);\n                    }\n                    if (instrument.chord == Config.chords.dictionary[\"monophonic\"].index) {\n                        buffer.push(base64IntToCharCode[instrument.monoChordTone]);\n                    }\n                }\n                if (effectsIncludePitchShift(instrument.mdeffects)) {\n                    buffer.push(base64IntToCharCode[instrument.pitchShift]);\n                }\n                if (effectsIncludeDetune(instrument.mdeffects)) {\n                    buffer.push(base64IntToCharCode[(instrument.detune - Config.detuneMin) >> 6], base64IntToCharCode[(instrument.detune - Config.detuneMin) & 0x3F]);\n                }\n                if (effectsIncludeVibrato(instrument.mdeffects)) {\n                    buffer.push(base64IntToCharCode[instrument.vibrato]);\n                    if (instrument.vibrato == Config.vibratos.length) {\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDelay)]);\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\n                    }\n                }\n                if (instrument.type != 4) {\n                    buffer.push(100, base64IntToCharCode[instrument.fadeIn], base64IntToCharCode[instrument.fadeOut]);\n                    buffer.push(base64IntToCharCode[+instrument.clicklessTransition]);\n                }\n                if (instrument.type == 5 || instrument.type == 7) {\n                    buffer.push(72);\n                    const harmonicsBits = new BitFieldWriter();\n                    for (let i = 0; i < Config.harmonicsControlPoints; i++) {\n                        harmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\n                    }\n                    harmonicsBits.encodeBase64(buffer);\n                }\n                if (instrument.type == 0) {\n                    if (instrument.chipWave > 186) {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave - 186]);\n                        buffer.push(base64IntToCharCode[3]);\n                    }\n                    else if (instrument.chipWave > 124) {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave - 124]);\n                        buffer.push(base64IntToCharCode[2]);\n                    }\n                    else if (instrument.chipWave > 62) {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave - 62]);\n                        buffer.push(base64IntToCharCode[1]);\n                    }\n                    else {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave]);\n                        buffer.push(base64IntToCharCode[0]);\n                    }\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                    buffer.push(121);\n                    const encodedLoopMode = ((clamp(0, 31 + 1, instrument.chipWaveLoopMode) << 1)\n                        | (instrument.isUsingAdvancedLoopControls ? 1 : 0));\n                    buffer.push(base64IntToCharCode[encodedLoopMode]);\n                    const encodedReleaseMode = ((clamp(0, 31 + 1, 0) << 2)\n                        | ((instrument.chipWaveInStereo ? 1 : 0) << 1)\n                        | (instrument.chipWavePlayBackwards ? 1 : 0));\n                    buffer.push(base64IntToCharCode[encodedReleaseMode]);\n                    encode32BitNumber(buffer, instrument.chipWaveLoopStart);\n                    encode32BitNumber(buffer, instrument.chipWaveLoopEnd);\n                    encode32BitNumber(buffer, instrument.chipWaveStartOffset);\n                }\n                else if (instrument.type == 1 || instrument.type == 11) {\n                    if (instrument.type == 1) {\n                        buffer.push(65, base64IntToCharCode[instrument.algorithm]);\n                        buffer.push(70, base64IntToCharCode[instrument.feedbackType]);\n                    }\n                    else {\n                        buffer.push(65, base64IntToCharCode[instrument.algorithm6Op]);\n                        if (instrument.algorithm6Op == 0) {\n                            buffer.push(67, base64IntToCharCode[instrument.customAlgorithm.carrierCount]);\n                            buffer.push(113);\n                            for (let o = 0; o < instrument.customAlgorithm.modulatedBy.length; o++) {\n                                for (let j = 0; j < instrument.customAlgorithm.modulatedBy[o].length; j++) {\n                                    buffer.push(base64IntToCharCode[instrument.customAlgorithm.modulatedBy[o][j]]);\n                                }\n                                buffer.push(82);\n                            }\n                            buffer.push(113);\n                        }\n                        buffer.push(70, base64IntToCharCode[instrument.feedbackType6Op]);\n                        if (instrument.feedbackType6Op == 0) {\n                            buffer.push(113);\n                            for (let o = 0; o < instrument.customFeedbackType.indices.length; o++) {\n                                for (let j = 0; j < instrument.customFeedbackType.indices[o].length; j++) {\n                                    buffer.push(base64IntToCharCode[instrument.customFeedbackType.indices[o][j]]);\n                                }\n                                buffer.push(82);\n                            }\n                            buffer.push(113);\n                        }\n                    }\n                    buffer.push(66, base64IntToCharCode[instrument.feedbackAmplitude]);\n                    buffer.push(81);\n                    for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].frequency]);\n                    }\n                    buffer.push(80);\n                    for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\n                    }\n                    buffer.push(82);\n                    for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].waveform]);\n                        if (instrument.operators[o].waveform == 2) {\n                            buffer.push(base64IntToCharCode[instrument.operators[o].pulseWidth]);\n                        }\n                    }\n                }\n                else if (instrument.type == 9) {\n                    if (instrument.chipWave > 186) {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave - 186]);\n                        buffer.push(base64IntToCharCode[3]);\n                    }\n                    else if (instrument.chipWave > 124) {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave - 124]);\n                        buffer.push(base64IntToCharCode[2]);\n                    }\n                    else if (instrument.chipWave > 62) {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave - 62]);\n                        buffer.push(base64IntToCharCode[1]);\n                    }\n                    else {\n                        buffer.push(119, base64IntToCharCode[instrument.chipWave]);\n                        buffer.push(base64IntToCharCode[0]);\n                    }\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                    buffer.push(77);\n                    for (let j = 0; j < 64; j++) {\n                        buffer.push(base64IntToCharCode[(instrument.customChipWave[j] + 24)]);\n                    }\n                }\n                else if (instrument.type == 2) {\n                    buffer.push(119, base64IntToCharCode[instrument.chipNoise]);\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                }\n                else if (instrument.type == 3) {\n                    buffer.push(83);\n                    const spectrumBits = new BitFieldWriter();\n                    for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                        spectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\n                    }\n                    spectrumBits.encodeBase64(buffer);\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                }\n                else if (instrument.type == 4) {\n                    buffer.push(122);\n                    for (let j = 0; j < Config.drumCount; j++) {\n                        buffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\n                    }\n                    buffer.push(83);\n                    const spectrumBits = new BitFieldWriter();\n                    for (let j = 0; j < Config.drumCount; j++) {\n                        for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                            spectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\n                        }\n                    }\n                    spectrumBits.encodeBase64(buffer);\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                }\n                else if (instrument.type == 5) {\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                }\n                else if (instrument.type == 6) {\n                    buffer.push(87, base64IntToCharCode[instrument.pulseWidth]);\n                    buffer.push(base64IntToCharCode[instrument.decimalOffset >> 6], base64IntToCharCode[instrument.decimalOffset & 0x3f]);\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                }\n                else if (instrument.type == 8) {\n                    buffer.push(120, base64IntToCharCode[instrument.supersawDynamism], base64IntToCharCode[instrument.supersawSpread], base64IntToCharCode[instrument.supersawShape]);\n                    buffer.push(87, base64IntToCharCode[instrument.pulseWidth]);\n                    buffer.push(base64IntToCharCode[instrument.decimalOffset >> 6], base64IntToCharCode[instrument.decimalOffset & 0x3f]);\n                }\n                else if (instrument.type == 7) {\n                    if (Config.stringSustainRange > 0x20 || 2 > 2) {\n                        throw new Error(\"Not enough bits to represent sustain value and type in same base64 character.\");\n                    }\n                    buffer.push(104, base64IntToCharCode[instrument.unison]);\n                    if (instrument.unison == Config.unisons.length)\n                        encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign);\n                    buffer.push(73, base64IntToCharCode[instrument.stringSustain | (instrument.stringSustainType << 5)]);\n                }\n                else if (instrument.type == 10) {\n                }\n                else {\n                    throw new Error(\"Unknown instrument type.\");\n                }\n                buffer.push(69, base64IntToCharCode[instrument.envelopeCount]);\n                buffer.push(base64IntToCharCode[instrument.envelopeSpeed]);\n                for (let envelopeIndex = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].target]);\n                    if (Config.instrumentAutomationTargets[instrument.envelopes[envelopeIndex].target].maxCount > 1) {\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].index]);\n                    }\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].envelope]);\n                    if (Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name == \"pitch\") {\n                        if (!instrument.isNoiseInstrument) {\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeStart >> 6], base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeStart & 0x3f]);\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeEnd >> 6], base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeEnd & 0x3f]);\n                        }\n                        else {\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeStart]);\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].pitchEnvelopeEnd]);\n                        }\n                    }\n                    else if (Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name == \"random\") {\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].steps]);\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].seed]);\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].waveform]);\n                    }\n                    else if (Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name == \"lfo\") {\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].waveform]);\n                        if (instrument.envelopes[envelopeIndex].waveform == 5 || instrument.envelopes[envelopeIndex].waveform == 6) {\n                            buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].steps]);\n                        }\n                    }\n                    let checkboxValues = +instrument.envelopes[envelopeIndex].discrete;\n                    checkboxValues = checkboxValues << 1;\n                    checkboxValues += +instrument.envelopes[envelopeIndex].inverse;\n                    buffer.push(base64IntToCharCode[checkboxValues] ? base64IntToCharCode[checkboxValues] : base64IntToCharCode[0]);\n                    if (Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name != \"pitch\" && Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name != \"note size\" && Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name != \"punch\" && Config.newEnvelopes[instrument.envelopes[envelopeIndex].envelope].name != \"none\") {\n                        buffer.push(base64IntToCharCode[Config.perEnvelopeSpeedToIndices[instrument.envelopes[envelopeIndex].perEnvelopeSpeed]]);\n                    }\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].perEnvelopeLowerBound * 10]);\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].perEnvelopeUpperBound * 10]);\n                }\n            }\n        }\n        buffer.push(98);\n        bits = new BitFieldWriter();\n        let neededBits = 0;\n        while ((1 << neededBits) < this.patternsPerChannel + 1)\n            neededBits++;\n        for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++)\n            for (let i = 0; i < this.barCount; i++) {\n                bits.write(neededBits, this.channels[channelIndex].bars[i]);\n            }\n        bits.encodeBase64(buffer);\n        buffer.push(112);\n        bits = new BitFieldWriter();\n        const shapeBits = new BitFieldWriter();\n        const bitsPerNoteSize = Song.getNeededBits(Config.noteSizeMax);\n        for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            const channel = this.channels[channelIndex];\n            const maxInstrumentsPerPattern = this.getMaxInstrumentsPerPattern(channelIndex);\n            const isNoiseChannel = this.getChannelIsNoise(channelIndex);\n            const isModChannel = this.getChannelIsMod(channelIndex);\n            const neededInstrumentCountBits = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\n            const neededInstrumentIndexBits = Song.getNeededBits(channel.instruments.length - 1);\n            if (isModChannel) {\n                const neededModInstrumentIndexBits = Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\n                for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                    let instrument = this.channels[channelIndex].instruments[instrumentIndex];\n                    for (let mod = 0; mod < Config.modCount; mod++) {\n                        const modChannels = instrument.modChannels[mod];\n                        const modInstruments = instrument.modInstruments[mod];\n                        const modSetting = instrument.modulators[mod];\n                        const modFilter = instrument.modFilterTypes[mod];\n                        const modEnvelope = instrument.modEnvelopeNumbers[mod];\n                        let status = Config.modulators[modSetting].forSong ? 2 : 0;\n                        if (modSetting == Config.modulators.dictionary[\"none\"].index)\n                            status = 3;\n                        bits.write(2, status);\n                        if (status == 0 || status == 1) {\n                            bits.write(8, modChannels.length);\n                            for (let i = 0; i < modChannels.length; i++)\n                                bits.write(8, modChannels[i]);\n                            bits.write(8, modInstruments.length);\n                            for (let i = 0; i < modInstruments.length; i++)\n                                bits.write(neededModInstrumentIndexBits, modInstruments[i]);\n                        }\n                        if (status != 3) {\n                            bits.write(6, modSetting);\n                        }\n                        if (Config.modulators[instrument.modulators[mod]].name == \"post eq\" || Config.modulators[instrument.modulators[mod]].name == \"pre eq\" || Config.modulators[instrument.modulators[mod]].name == \"song eq\") {\n                            bits.write(6, modFilter);\n                        }\n                        if (Config.modulators[instrument.modulators[mod]].name == \"individual envelope speed\" ||\n                            Config.modulators[instrument.modulators[mod]].name == \"reset envelope\" ||\n                            Config.modulators[instrument.modulators[mod]].name == \"individual envelope lower bound\" ||\n                            Config.modulators[instrument.modulators[mod]].name == \"individual envelope upper bound\") {\n                            bits.write(6, modEnvelope);\n                        }\n                    }\n                }\n            }\n            const octaveOffset = (isNoiseChannel || isModChannel) ? 0 : channel.octave * Config.pitchesPerOctave;\n            let lastPitch = (isNoiseChannel ? 4 : octaveOffset);\n            const recentPitches = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\n            const recentShapes = [];\n            for (let i = 0; i < recentPitches.length; i++) {\n                recentPitches[i] += octaveOffset;\n            }\n            for (const pattern of channel.patterns) {\n                if (this.patternInstruments) {\n                    const instrumentCount = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, pattern.instruments.length);\n                    bits.write(neededInstrumentCountBits, instrumentCount - Config.instrumentCountMin);\n                    for (let i = 0; i < instrumentCount; i++) {\n                        bits.write(neededInstrumentIndexBits, pattern.instruments[i]);\n                    }\n                }\n                if (pattern.notes.length > 0) {\n                    bits.write(1, 1);\n                    let curPart = 0;\n                    for (const note of pattern.notes) {\n                        if (note.start < curPart && isModChannel) {\n                            bits.write(2, 0);\n                            bits.write(1, 1);\n                            bits.writePartDuration(curPart - note.start);\n                        }\n                        if (note.start > curPart) {\n                            bits.write(2, 0);\n                            if (isModChannel)\n                                bits.write(1, 0);\n                            bits.writePartDuration(note.start - curPart);\n                        }\n                        shapeBits.clear();\n                        if (note.pitches.length == 1) {\n                            shapeBits.write(1, 0);\n                        }\n                        else {\n                            shapeBits.write(1, 1);\n                            shapeBits.write(3, note.pitches.length - 2);\n                        }\n                        if (note.chipWaveStartOffset == 0) {\n                            shapeBits.write(1, 0);\n                        }\n                        else {\n                            shapeBits.write(1, 1);\n                            shapeBits.write(31, note.chipWaveStartOffset);\n                        }\n                        shapeBits.writePinCount(note.pins.length - 1);\n                        if (!isModChannel) {\n                            shapeBits.write(bitsPerNoteSize, note.pins[0].size);\n                        }\n                        else {\n                            shapeBits.write(11, note.pins[0].size);\n                        }\n                        let shapePart = 0;\n                        let startPitch = note.pitches[0];\n                        let currentPitch = startPitch;\n                        const pitchBends = [];\n                        for (let i = 1; i < note.pins.length; i++) {\n                            const pin = note.pins[i];\n                            const nextPitch = startPitch + pin.interval;\n                            if (currentPitch != nextPitch) {\n                                shapeBits.write(1, 1);\n                                pitchBends.push(nextPitch);\n                                currentPitch = nextPitch;\n                            }\n                            else {\n                                shapeBits.write(1, 0);\n                            }\n                            shapeBits.writePartDuration(pin.time - shapePart);\n                            shapePart = pin.time;\n                            if (!isModChannel) {\n                                shapeBits.write(bitsPerNoteSize, pin.size);\n                            }\n                            else {\n                                shapeBits.write(11, pin.size);\n                            }\n                        }\n                        const shapeString = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\n                        const shapeIndex = recentShapes.indexOf(shapeString);\n                        if (shapeIndex == -1) {\n                            bits.write(2, 1);\n                            bits.concat(shapeBits);\n                        }\n                        else {\n                            bits.write(1, 1);\n                            bits.writeLongTail(0, 0, shapeIndex);\n                            recentShapes.splice(shapeIndex, 1);\n                        }\n                        recentShapes.unshift(shapeString);\n                        if (recentShapes.length > 10)\n                            recentShapes.pop();\n                        const allPitches = note.pitches.concat(pitchBends);\n                        for (let i = 0; i < allPitches.length; i++) {\n                            const pitch = allPitches[i];\n                            const pitchIndex = recentPitches.indexOf(pitch);\n                            if (pitchIndex == -1) {\n                                let interval = 0;\n                                let pitchIter = lastPitch;\n                                if (pitchIter < pitch) {\n                                    while (pitchIter != pitch) {\n                                        pitchIter++;\n                                        if (recentPitches.indexOf(pitchIter) == -1)\n                                            interval++;\n                                    }\n                                }\n                                else {\n                                    while (pitchIter != pitch) {\n                                        pitchIter--;\n                                        if (recentPitches.indexOf(pitchIter) == -1)\n                                            interval--;\n                                    }\n                                }\n                                bits.write(1, 0);\n                                bits.writePitchInterval(interval);\n                            }\n                            else {\n                                bits.write(1, 1);\n                                bits.write(4, pitchIndex);\n                                recentPitches.splice(pitchIndex, 1);\n                            }\n                            recentPitches.unshift(pitch);\n                            if (recentPitches.length > 16)\n                                recentPitches.pop();\n                            if (i == note.pitches.length - 1) {\n                                lastPitch = note.pitches[0];\n                            }\n                            else {\n                                lastPitch = pitch;\n                            }\n                        }\n                        if (note.start == 0) {\n                            bits.write(1, note.continuesLastPattern ? 1 : 0);\n                        }\n                        curPart = note.end;\n                    }\n                    if (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\n                        bits.write(2, 0);\n                        if (isModChannel)\n                            bits.write(1, 0);\n                        bits.writePartDuration(this.beatsPerBar * Config.partsPerBeat + (+isModChannel) - curPart);\n                    }\n                }\n                else {\n                    bits.write(1, 0);\n                }\n            }\n        }\n        let stringLength = bits.lengthBase64();\n        let digits = [];\n        while (stringLength > 0) {\n            digits.unshift(base64IntToCharCode[stringLength & 0x3f]);\n            stringLength = stringLength >> 6;\n        }\n        buffer.push(base64IntToCharCode[digits.length]);\n        Array.prototype.push.apply(buffer, digits);\n        bits.encodeBase64(buffer);\n        const maxApplyArgs = 64000;\n        let customSamplesStr = \"\";\n        if (EditorConfig.customSamples != undefined && EditorConfig.customSamples.length > 0) {\n            customSamplesStr = \"|\" + EditorConfig.customSamples.join(\"|\");\n        }\n        if (buffer.length < maxApplyArgs) {\n            return String.fromCharCode.apply(null, buffer) + customSamplesStr;\n        }\n        else {\n            let result = \"\";\n            for (let i = 0; i < buffer.length; i += maxApplyArgs) {\n                result += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\n            }\n            return result + customSamplesStr;\n        }\n    }\n    static _envelopeFromLegacyIndex(legacyIndex) {\n        if (legacyIndex == 0)\n            legacyIndex = 1;\n        else if (legacyIndex == 1)\n            legacyIndex = 0;\n        return Config.envelopes[clamp(0, Config.envelopes.length, legacyIndex)];\n    }\n    fromBase64String(compressed, jsonFormat = \"auto\") {\n        if (compressed == null || compressed == \"\") {\n            Song._clearSamples();\n            this.initToDefault(true);\n            return;\n        }\n        let charIndex = 0;\n        while (compressed.charCodeAt(charIndex) <= 32)\n            charIndex++;\n        if (compressed.charCodeAt(charIndex) == 35)\n            charIndex++;\n        if (compressed.charCodeAt(charIndex) == 123) {\n            this.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)), jsonFormat);\n            return;\n        }\n        const variantTest = compressed.charCodeAt(charIndex);\n        let fromBeepBox = false;\n        let fromJummBox = false;\n        let fromGoldBox = false;\n        let fromUltraBox = false;\n        let fromSlarmoosBox = false;\n        let fromTheepBox = false;\n        if (variantTest == 0x74) {\n            fromTheepBox = true;\n            fromSlarmoosBox = true;\n            charIndex++;\n        }\n        else if (variantTest == 0x6A) {\n            fromJummBox = true;\n            charIndex++;\n        }\n        else if (variantTest == 0x67) {\n            fromGoldBox = true;\n            charIndex++;\n        }\n        else if (variantTest == 0x75) {\n            fromUltraBox = true;\n            charIndex++;\n        }\n        else if (variantTest == 0x64) {\n            fromJummBox = true;\n            charIndex++;\n        }\n        else if (variantTest == 0x61) {\n            fromUltraBox = true;\n            charIndex++;\n        }\n        else if (variantTest == 0x73) {\n            fromSlarmoosBox = true;\n            charIndex++;\n        }\n        else {\n            fromBeepBox = true;\n        }\n        const version = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n        if (fromBeepBox && (version == -1 || version > Song._latestBeepboxVersion || version < Song._oldestBeepboxVersion))\n            return;\n        if (fromJummBox && (version == -1 || version > Song._latestJummBoxVersion || version < Song._oldestJummBoxVersion))\n            return;\n        if (fromGoldBox && (version == -1 || version > Song._latestGoldBoxVersion || version < Song._oldestGoldBoxVersion))\n            return;\n        if (fromUltraBox && (version == -1 || version > Song._latestUltraBoxVersion || version < Song._oldestUltraBoxVersion))\n            return;\n        if ((fromSlarmoosBox || fromTheepBox) && (version == -1 || version > Song._latestSlarmoosBoxVersion || version < Song._oldestSlarmoosBoxVersion))\n            return;\n        const beforeTwo = version < 2;\n        const beforeThree = version < 3;\n        const beforeFour = version < 4;\n        const beforeFive = version < 5;\n        const beforeSix = version < 6;\n        const beforeSeven = version < 7;\n        const beforeEight = version < 8;\n        const beforeNine = version < 9;\n        this.initToDefault((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)));\n        const forceSimpleFilter = (fromBeepBox && beforeNine || fromJummBox && beforeFive);\n        let willLoadLegacySamplesForOldSongs = false;\n        if (fromSlarmoosBox || fromUltraBox || fromGoldBox) {\n            compressed = compressed.replaceAll(\"%7C\", \"|\");\n            var compressed_array = compressed.split(\"|\");\n            compressed = compressed_array.shift();\n            if (EditorConfig.customSamples == null || EditorConfig.customSamples.join(\", \") != compressed_array.join(\", \")) {\n                Song._restoreChipWaveListToDefault();\n                let willLoadLegacySamples = false;\n                let willLoadNintariboxSamples = false;\n                let willLoadMarioPaintboxSamples = false;\n                const customSampleUrls = [];\n                const customSamplePresets = [];\n                sampleLoadingState.statusTable = {};\n                sampleLoadingState.urlTable = {};\n                sampleLoadingState.totalSamples = 0;\n                sampleLoadingState.samplesLoaded = 0;\n                sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(sampleLoadingState.totalSamples, sampleLoadingState.samplesLoaded));\n                for (const url of compressed_array) {\n                    if (url.toLowerCase() === \"legacysamples\") {\n                        if (!willLoadLegacySamples) {\n                            willLoadLegacySamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(0);\n                        }\n                    }\n                    else if (url.toLowerCase() === \"nintariboxsamples\") {\n                        if (!willLoadNintariboxSamples) {\n                            willLoadNintariboxSamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(1);\n                        }\n                    }\n                    else if (url.toLowerCase() === \"mariopaintboxsamples\") {\n                        if (!willLoadMarioPaintboxSamples) {\n                            willLoadMarioPaintboxSamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(2);\n                        }\n                    }\n                    else {\n                        const parseOldSyntax = beforeThree;\n                        const ok = Song._parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax);\n                        if (!ok) {\n                            continue;\n                        }\n                    }\n                }\n                if (customSampleUrls.length > 0) {\n                    EditorConfig.customSamples = customSampleUrls;\n                }\n                if (customSamplePresets.length > 0) {\n                    const customSamplePresetsMap = toNameMap(customSamplePresets);\n                    EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {\n                        name: \"Custom Sample Presets\",\n                        presets: customSamplePresetsMap,\n                        index: EditorConfig.presetCategories.length,\n                    };\n                }\n            }\n        }\n        if (beforeThree && fromBeepBox) {\n            for (const channel of this.channels) {\n                channel.instruments[0].transition = Config.transitions.dictionary[\"interrupt\"].index;\n                channel.instruments[0].mdeffects |= 1 << 3;\n            }\n            this.channels[3].instruments[0].chipNoise = 0;\n        }\n        let legacySettingsCache = null;\n        if ((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n            legacySettingsCache = [];\n            for (let i = legacySettingsCache.length; i < this.getChannelCount(); i++) {\n                legacySettingsCache[i] = [];\n                for (let j = 0; j < Config.instrumentCountMin; j++)\n                    legacySettingsCache[i][j] = {};\n            }\n        }\n        let legacyGlobalReverb = 0;\n        let instrumentChannelIterator = 0;\n        let instrumentIndexIterator = -1;\n        let command;\n        let useSlowerArpSpeed = false;\n        let useFastTwoNoteArp = false;\n        while (charIndex < compressed.length)\n            switch (command = compressed.charCodeAt(charIndex++)) {\n                case 78:\n                    {\n                        var songNameLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        this.title = decodeURIComponent(compressed.substring(charIndex, charIndex + songNameLength));\n                        document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\n                        charIndex += songNameLength;\n                    }\n                    break;\n                case 110:\n                    {\n                        this.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        this.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if (fromBeepBox || (fromJummBox && beforeTwo)) {\n                            this.modChannelCount = 0;\n                        }\n                        else {\n                            this.modChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        }\n                        this.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\n                        this.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\n                        this.modChannelCount = validateRange(Config.modChannelCountMin, Config.modChannelCountMax, this.modChannelCount);\n                        for (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\n                            this.channels[channelIndex] = new Channel();\n                        }\n                        this.channels.length = this.getChannelCount();\n                        if ((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            for (let i = legacySettingsCache.length; i < this.getChannelCount(); i++) {\n                                legacySettingsCache[i] = [];\n                                for (let j = 0; j < Config.instrumentCountMin; j++)\n                                    legacySettingsCache[i][j] = {};\n                            }\n                        }\n                    }\n                    break;\n                case 115:\n                    {\n                        this.scale = clamp(0, Config.scales.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\n                            for (var i = 1; i < Config.pitchesPerOctave; i++) {\n                                this.scaleCustom[i] = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] == 1;\n                            }\n                        }\n                        if (fromBeepBox)\n                            this.scale = 0;\n                    }\n                    break;\n                case 107:\n                    {\n                        if (beforeSeven && fromBeepBox) {\n                            this.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            this.octave = 0;\n                        }\n                        else if (fromBeepBox || fromJummBox) {\n                            this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            this.octave = 0;\n                        }\n                        else if (fromGoldBox || (beforeThree && fromUltraBox)) {\n                            const rawKeyIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const [key, octave] = convertLegacyKeyToKeyAndOctave(rawKeyIndex);\n                            this.key = key;\n                            this.octave = octave;\n                        }\n                        else {\n                            this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            this.octave = clamp(Config.octaveMin, Config.octaveMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.octaveMin);\n                        }\n                    }\n                    break;\n                case 108:\n                    {\n                        if (beforeFive && fromBeepBox) {\n                            this.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        }\n                        else {\n                            this.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        }\n                    }\n                    break;\n                case 101:\n                    {\n                        if (beforeFive && fromBeepBox) {\n                            this.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        }\n                        else {\n                            this.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                        }\n                    }\n                    break;\n                case 116:\n                    {\n                        if (beforeFour && fromBeepBox) {\n                            this.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                        }\n                        else if (beforeSeven && fromBeepBox) {\n                            this.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                        }\n                        else {\n                            this.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\n                    }\n                    break;\n                case 109:\n                    {\n                        if (beforeNine && fromBeepBox) {\n                            legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 12;\n                            legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\n                        }\n                        else if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                            legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\n                        }\n                        else {\n                        }\n                    }\n                    break;\n                case 97:\n                    {\n                        if (beforeThree && fromBeepBox) {\n                            this.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                        }\n                        else {\n                            this.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                        }\n                        this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\n                    }\n                    break;\n                case 103:\n                    {\n                        const barCount = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                        this.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\n                        for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                            for (let bar = this.channels[channelIndex].bars.length; bar < this.barCount; bar++) {\n                                this.channels[channelIndex].bars[bar] = (bar < 4) ? 1 : 0;\n                            }\n                            this.channels[channelIndex].bars.length = this.barCount;\n                        }\n                    }\n                    break;\n                case 106:\n                    {\n                        let patternsPerChannel;\n                        if (beforeEight && fromBeepBox) {\n                            patternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                        }\n                        else {\n                            patternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                        }\n                        this.patternsPerChannel = validateRange(1, Config.barCountMax, patternsPerChannel);\n                        const channelCount = this.getChannelCount();\n                        for (let channelIndex = 0; channelIndex < channelCount; channelIndex++) {\n                            const patterns = this.channels[channelIndex].patterns;\n                            for (let pattern = patterns.length; pattern < this.patternsPerChannel; pattern++) {\n                                patterns[pattern] = new Pattern();\n                            }\n                            patterns.length = this.patternsPerChannel;\n                        }\n                    }\n                    break;\n                case 105:\n                    {\n                        if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            const instrumentsPerChannel = validateRange(Config.instrumentCountMin, Config.patternInstrumentCountMax, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\n                            this.layeredInstruments = false;\n                            this.patternInstruments = (instrumentsPerChannel > 1);\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                const isNoiseChannel = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\n                                const isModChannel = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\n                                for (let instrumentIndex = this.channels[channelIndex].instruments.length; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\n                                    this.channels[channelIndex].instruments[instrumentIndex] = new Instrument(isNoiseChannel, isModChannel);\n                                }\n                                this.channels[channelIndex].instruments.length = instrumentsPerChannel;\n                                if (beforeSix && fromBeepBox) {\n                                    for (let instrumentIndex = 0; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\n                                        this.channels[channelIndex].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? 2 : 0, isNoiseChannel, isModChannel);\n                                    }\n                                }\n                                for (let j = legacySettingsCache[channelIndex].length; j < instrumentsPerChannel; j++) {\n                                    legacySettingsCache[channelIndex][j] = {};\n                                }\n                            }\n                        }\n                        else {\n                            const instrumentsFlagBits = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            this.layeredInstruments = (instrumentsFlagBits & (1 << 1)) != 0;\n                            this.patternInstruments = (instrumentsFlagBits & (1 << 0)) != 0;\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                let instrumentCount = 1;\n                                if (this.layeredInstruments || this.patternInstruments) {\n                                    instrumentCount = validateRange(Config.instrumentCountMin, this.getMaxInstrumentsPerChannel(), base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\n                                }\n                                const channel = this.channels[channelIndex];\n                                const isNoiseChannel = this.getChannelIsNoise(channelIndex);\n                                const isModChannel = this.getChannelIsMod(channelIndex);\n                                for (let i = channel.instruments.length; i < instrumentCount; i++) {\n                                    channel.instruments[i] = new Instrument(isNoiseChannel, isModChannel);\n                                }\n                                channel.instruments.length = instrumentCount;\n                            }\n                        }\n                    }\n                    break;\n                case 114:\n                    {\n                        if (!fromUltraBox && !fromSlarmoosBox) {\n                            let newRhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            this.rhythm = clamp(0, Config.rhythms.length, newRhythm);\n                            if (fromJummBox && beforeThree || fromBeepBox) {\n                                if (this.rhythm == Config.rhythms.dictionary[\"÷3 (triplets)\"].index || this.rhythm == Config.rhythms.dictionary[\"÷6\"].index) {\n                                    useSlowerArpSpeed = true;\n                                }\n                                if (this.rhythm >= Config.rhythms.dictionary[\"÷6\"].index) {\n                                    useFastTwoNoteArp = true;\n                                }\n                            }\n                        }\n                        else if ((fromSlarmoosBox && beforeFour) || (fromUltraBox && beforeFive)) {\n                            const rhythmMap = [1, 1, 0, 1, 2, 3, 4, 5];\n                            this.rhythm = clamp(0, Config.rhythms.length, rhythmMap[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]]);\n                        }\n                        else {\n                            this.rhythm = clamp(0, Config.rhythms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    break;\n                case 111:\n                    {\n                        if (beforeThree && fromBeepBox) {\n                            const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                            if (channelIndex >= this.pitchChannelCount)\n                                this.channels[channelIndex].octave = 0;\n                        }\n                        else if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                                if (channelIndex >= this.pitchChannelCount)\n                                    this.channels[channelIndex].octave = 0;\n                            }\n                        }\n                        else {\n                            for (let channelIndex = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\n                                this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            for (let channelIndex = this.pitchChannelCount; channelIndex < this.getChannelCount(); channelIndex++) {\n                                this.channels[channelIndex].octave = 0;\n                            }\n                        }\n                    }\n                    break;\n                case 84:\n                    {\n                        instrumentIndexIterator++;\n                        if (instrumentIndexIterator >= this.channels[instrumentChannelIterator].instruments.length) {\n                            instrumentChannelIterator++;\n                            instrumentIndexIterator = 0;\n                        }\n                        validateRange(0, this.channels.length - 1, instrumentChannelIterator);\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        let instrumentType = validateRange(0, 12 - 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                            if (instrumentType == 7 || instrumentType == 8) {\n                                instrumentType += 2;\n                            }\n                        }\n                        else if ((fromJummBox && beforeSix) || (fromGoldBox && !beforeFour) || (fromUltraBox && beforeFive)) {\n                            if (instrumentType == 8 || instrumentType == 9 || instrumentType == 10) {\n                                instrumentType += 1;\n                            }\n                        }\n                        instrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount && instrumentChannelIterator < this.pitchChannelCount + this.noiseChannelCount, instrumentChannelIterator >= this.pitchChannelCount + this.noiseChannelCount);\n                        if (((beforeSeven && fromBeepBox) || (beforeTwo && fromJummBox)) && (instrumentType == 0 || instrumentType == 9 || instrumentType == 6)) {\n                            instrument.aliases = true;\n                            let newEffect = instrument.addEffect(3);\n                            newEffect.distortion = 0;\n                        }\n                        if (useSlowerArpSpeed) {\n                            instrument.arpeggioSpeed = 9;\n                        }\n                        if (useFastTwoNoteArp) {\n                            instrument.fastTwoNoteArp = true;\n                        }\n                        if (beforeSeven && fromBeepBox) {\n                            if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n                                instrument.mdeffects |= 1 << 4;\n                            }\n                        }\n                    }\n                    break;\n                case 117:\n                    {\n                        const presetValue = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\n                        if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                            if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == 7) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = 9;\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = 9;\n                            }\n                        }\n                        else if ((fromJummBox && beforeSix) || (fromUltraBox && beforeFive)) {\n                            if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == 8) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = 9;\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = 9;\n                            }\n                            if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == 10) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = 11;\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = 11;\n                            }\n                        }\n                        if (fromBeepBox && presetValue == EditorConfig.nameToPresetValue(\"grand piano 1\")) {\n                            this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = EditorConfig.nameToPresetValue(\"grand piano 3\");\n                        }\n                    }\n                    break;\n                case 119:\n                    {\n                        if (beforeThree && fromBeepBox) {\n                            const legacyWaves = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                            const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const instrument = this.channels[channelIndex].instruments[0];\n                            instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n                            instrument.convertLegacySettings(legacySettingsCache[channelIndex][0], forceSimpleFilter);\n                        }\n                        else if (beforeSix && fromBeepBox) {\n                            const legacyWaves = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (const instrument of this.channels[channelIndex].instruments) {\n                                    if (channelIndex >= this.pitchChannelCount) {\n                                        instrument.chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                    else {\n                                        instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n                                    }\n                                }\n                            }\n                        }\n                        else if (beforeSeven && fromBeepBox) {\n                            const legacyWaves = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                            if (instrumentChannelIterator >= this.pitchChannelCount) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            else {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n                            }\n                        }\n                        else {\n                            if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type == 2) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            else {\n                                if (fromSlarmoosBox || fromUltraBox) {\n                                    const chipWaveReal = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    const chipWaveCounter = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    if (chipWaveCounter == 3) {\n                                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 186);\n                                    }\n                                    else if (chipWaveCounter == 2) {\n                                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 124);\n                                    }\n                                    else if (chipWaveCounter == 1) {\n                                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal + 62);\n                                    }\n                                    else {\n                                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveReal);\n                                    }\n                                }\n                                else {\n                                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 102:\n                    {\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            if (beforeSeven && fromBeepBox) {\n                                const legacyToCutoff = [10, 6, 3, 0, 8, 5, 2];\n                                const legacyToEnvelope = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\n                                if (beforeThree && fromBeepBox) {\n                                    const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    const instrument = this.channels[channelIndex].instruments[0];\n                                    const legacySettings = legacySettingsCache[channelIndex][0];\n                                    const legacyFilter = [1, 3, 4, 5][clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                    legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                                    legacySettings.filterResonance = 0;\n                                    legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                }\n                                else if (beforeSix && fromBeepBox) {\n                                    for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                        for (let i = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                                            const instrument = this.channels[channelIndex].instruments[i];\n                                            const legacySettings = legacySettingsCache[channelIndex][i];\n                                            const legacyFilter = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                                            if (channelIndex < this.pitchChannelCount) {\n                                                legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                                                legacySettings.filterResonance = 0;\n                                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                                            }\n                                            else {\n                                                legacySettings.filterCutoff = 10;\n                                                legacySettings.filterResonance = 0;\n                                                legacySettings.filterEnvelope = Config.envelopes.dictionary[\"none\"];\n                                            }\n                                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                        }\n                                    }\n                                }\n                                else {\n                                    const legacyFilter = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                    const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                                    legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                                    legacySettings.filterResonance = 0;\n                                    legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                }\n                            }\n                            else {\n                                const filterCutoffRange = 11;\n                                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                                legacySettings.filterCutoff = clamp(0, filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                            }\n                        }\n                        else {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            let typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            if (fromTheepBox) {\n                                if (typeCheck == 0) {\n                                    instrument.noteFilterType = false;\n                                    typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    const originalControlPointCount = typeCheck;\n                                    instrument.noteFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalControlPointCount);\n                                    for (let i = instrument.noteFilter.controlPoints.length; i < instrument.noteFilter.controlPointCount; i++) {\n                                        instrument.noteFilter.controlPoints[i] = new FilterControlPoint();\n                                    }\n                                    for (let i = 0; i < instrument.noteFilter.controlPointCount; i++) {\n                                        const point = instrument.noteFilter.controlPoints[i];\n                                        point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                    for (let i = instrument.noteFilter.controlPointCount; i < originalControlPointCount; i++) {\n                                        charIndex += 3;\n                                    }\n                                    instrument.noteSubFilters[0] = instrument.noteFilter;\n                                    let usingSubFilterBitfield = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                                        if (usingSubFilterBitfield & (1 << j)) {\n                                            const originalSubfilterControlPointCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                            if (instrument.noteSubFilters[j + 1] == null)\n                                                instrument.noteSubFilters[j + 1] = new FilterSettings();\n                                            instrument.noteSubFilters[j + 1].controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\n                                            for (let i = instrument.noteSubFilters[j + 1].controlPoints.length; i < instrument.noteSubFilters[j + 1].controlPointCount; i++) {\n                                                instrument.noteSubFilters[j + 1].controlPoints[i] = new FilterControlPoint();\n                                            }\n                                            for (let i = 0; i < instrument.noteSubFilters[j + 1].controlPointCount; i++) {\n                                                const point = instrument.noteSubFilters[j + 1].controlPoints[i];\n                                                point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            }\n                                            for (let i = instrument.noteSubFilters[j + 1].controlPointCount; i < originalSubfilterControlPointCount; i++) {\n                                                charIndex += 3;\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    instrument.noteFilterType = true;\n                                    instrument.noteFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    instrument.noteFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n                            else {\n                                let newEffect = instrument.addEffect(5);\n                                if (fromBeepBox || typeCheck == 0) {\n                                    newEffect.eqFilterType = false;\n                                    if (fromJummBox || fromGoldBox || fromUltraBox || fromSlarmoosBox)\n                                        typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    const originalControlPointCount = typeCheck;\n                                    newEffect.eqFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalControlPointCount);\n                                    for (let i = newEffect.eqFilter.controlPoints.length; i < newEffect.eqFilter.controlPointCount; i++) {\n                                        newEffect.eqFilter.controlPoints[i] = new FilterControlPoint();\n                                    }\n                                    for (let i = 0; i < newEffect.eqFilter.controlPointCount; i++) {\n                                        const point = newEffect.eqFilter.controlPoints[i];\n                                        point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                    for (let i = newEffect.eqFilter.controlPointCount; i < originalControlPointCount; i++) {\n                                        charIndex += 3;\n                                    }\n                                    newEffect.eqSubFilters[0] = newEffect.eqFilter;\n                                    if ((fromJummBox && !beforeFive) || (fromGoldBox && !beforeFour) || fromUltraBox || fromSlarmoosBox) {\n                                        let usingSubFilterBitfield = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                                            if (usingSubFilterBitfield & (1 << j)) {\n                                                const originalSubfilterControlPointCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                                if (newEffect.eqSubFilters[j + 1] == null)\n                                                    newEffect.eqSubFilters[j + 1] = new FilterSettings();\n                                                newEffect.eqSubFilters[j + 1].controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\n                                                for (let i = newEffect.eqSubFilters[j + 1].controlPoints.length; i < newEffect.eqSubFilters[j + 1].controlPointCount; i++) {\n                                                    newEffect.eqSubFilters[j + 1].controlPoints[i] = new FilterControlPoint();\n                                                }\n                                                for (let i = 0; i < newEffect.eqSubFilters[j + 1].controlPointCount; i++) {\n                                                    const point = newEffect.eqSubFilters[j + 1].controlPoints[i];\n                                                    point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                    point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                    point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                }\n                                                for (let i = newEffect.eqSubFilters[j + 1].controlPointCount; i < originalSubfilterControlPointCount; i++) {\n                                                    charIndex += 3;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    newEffect.eqFilterType = true;\n                                    newEffect.eqFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    newEffect.eqFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 121:\n                    {\n                        if (fromSlarmoosBox || fromUltraBox) {\n                            if (beforeThree && fromUltraBox) {\n                                const sampleLoopInfoEncodedLength = decode32BitNumber(compressed, charIndex);\n                                charIndex += 6;\n                                const sampleLoopInfoEncoded = compressed.slice(charIndex, charIndex + sampleLoopInfoEncodedLength);\n                                charIndex += sampleLoopInfoEncodedLength;\n                                const sampleLoopInfo = JSON.parse(atob(sampleLoopInfoEncoded));\n                                for (const entry of sampleLoopInfo) {\n                                    const channelIndex = entry[\"channel\"];\n                                    const instrumentIndex = entry[\"instrument\"];\n                                    const info = entry[\"info\"];\n                                    const instrument = this.channels[channelIndex].instruments[instrumentIndex];\n                                    instrument.isUsingAdvancedLoopControls = info[\"isUsingAdvancedLoopControls\"];\n                                    instrument.chipWaveLoopStart = info[\"chipWaveLoopStart\"];\n                                    instrument.chipWaveLoopEnd = info[\"chipWaveLoopEnd\"];\n                                    instrument.chipWaveLoopMode = info[\"chipWaveLoopMode\"];\n                                    instrument.chipWavePlayBackwards = info[\"chipWavePlayBackwards\"];\n                                    instrument.chipWaveStartOffset = info[\"chipWaveStartOffset\"];\n                                }\n                            }\n                            else {\n                                const encodedLoopMode = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const isUsingAdvancedLoopControls = Boolean(encodedLoopMode & 1);\n                                const chipWaveLoopMode = encodedLoopMode >> 1;\n                                const encodedReleaseMode = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const chipWaveInStereo = Boolean(encodedReleaseMode & 2);\n                                const chipWavePlayBackwards = Boolean(encodedReleaseMode & 1);\n                                const chipWaveLoopStart = decode32BitNumber(compressed, charIndex);\n                                charIndex += 6;\n                                const chipWaveLoopEnd = decode32BitNumber(compressed, charIndex);\n                                charIndex += 6;\n                                const chipWaveStartOffset = decode32BitNumber(compressed, charIndex);\n                                charIndex += 6;\n                                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                instrument.isUsingAdvancedLoopControls = isUsingAdvancedLoopControls;\n                                instrument.chipWaveLoopStart = chipWaveLoopStart;\n                                instrument.chipWaveLoopEnd = chipWaveLoopEnd;\n                                instrument.chipWaveLoopMode = chipWaveLoopMode;\n                                instrument.chipWavePlayBackwards = chipWavePlayBackwards;\n                                instrument.chipWaveStartOffset = chipWaveStartOffset;\n                                instrument.chipWaveInStereo = chipWaveInStereo;\n                            }\n                        }\n                        else if (fromGoldBox && !beforeFour && beforeSix) {\n                            if (document.URL.substring(document.URL.length - 13).toLowerCase() != \"legacysamples\") {\n                                if (!willLoadLegacySamplesForOldSongs) {\n                                    willLoadLegacySamplesForOldSongs = true;\n                                    Config.willReloadForCustomSamples = true;\n                                    EditorConfig.customSamples = [\"legacySamples\"];\n                                    loadBuiltInSamples(0);\n                                }\n                            }\n                            this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 125);\n                        }\n                        else if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            const filterResonanceRange = 8;\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                            legacySettings.filterResonance = clamp(0, filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                    }\n                    break;\n                case 122:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        const pregoldToEnvelope = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox)) {\n                            }\n                            if (instrument.type == 4) {\n                                for (let i = 0; i < Config.drumCount; i++) {\n                                    let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox))\n                                        aa = pregoldToEnvelope[aa];\n                                    instrument.drumsetEnvelopes[i] = Song._envelopeFromLegacyIndex(aa).index;\n                                }\n                            }\n                            else {\n                                const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                                let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox))\n                                    aa = pregoldToEnvelope[aa];\n                                legacySettings.filterEnvelope = Song._envelopeFromLegacyIndex(aa);\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                            }\n                        }\n                        else {\n                            for (let i = 0; i < Config.drumCount; i++) {\n                                let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox))\n                                    aa = pregoldToEnvelope[aa];\n                                if (!fromSlarmoosBox && aa >= 2)\n                                    aa++;\n                                instrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, aa);\n                            }\n                        }\n                    }\n                    break;\n                case 87:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        instrument.pulseWidth = clamp(0, Config.pulseWidthRange + (+(fromJummBox)) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        if (fromBeepBox) {\n                            instrument.pulseWidth = Math.round(Math.pow(0.5, (7 - instrument.pulseWidth) * Config.pulseWidthStepPower) * Config.pulseWidthRange);\n                        }\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            const pregoldToEnvelope = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                            const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                            let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox))\n                                aa = pregoldToEnvelope[aa];\n                            legacySettings.pulseEnvelope = Song._envelopeFromLegacyIndex(aa);\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                        if ((fromUltraBox && !beforeFour) || fromSlarmoosBox) {\n                            instrument.decimalOffset = clamp(0, 99 + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    break;\n                case 73:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        const sustainValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        instrument.stringSustain = clamp(0, Config.stringSustainRange, sustainValue & 0x1F);\n                        instrument.stringSustainType = Config.enableAcousticSustain ? clamp(0, 2, sustainValue >> 5) : 0;\n                    }\n                    break;\n                case 100:\n                    {\n                        if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            const legacySettings = [\n                                { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                                { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                                { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                                { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                                { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\n                                { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\n                                { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\n                                { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\n                                { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                            ];\n                            if (beforeThree && fromBeepBox) {\n                                const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                const instrument = this.channels[channelIndex].instruments[0];\n                                instrument.fadeIn = secondsToFadeInSetting(settings.fadeInSeconds);\n                                instrument.fadeOut = ticksToFadeOutSetting(settings.fadeOutTicks);\n                                instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                                if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                                    instrument.mdeffects |= 1 << 3;\n                                }\n                            }\n                            else if (beforeSix && fromBeepBox) {\n                                for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                    for (const instrument of this.channels[channelIndex].instruments) {\n                                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                        instrument.fadeIn = secondsToFadeInSetting(settings.fadeInSeconds);\n                                        instrument.fadeOut = ticksToFadeOutSetting(settings.fadeOutTicks);\n                                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                                            instrument.mdeffects |= 1 << 3;\n                                        }\n                                    }\n                                }\n                            }\n                            else if ((beforeFour && !fromGoldBox && !fromUltraBox && !fromSlarmoosBox) || fromBeepBox) {\n                                const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                instrument.fadeIn = secondsToFadeInSetting(settings.fadeInSeconds);\n                                instrument.fadeOut = ticksToFadeOutSetting(settings.fadeOutTicks);\n                                instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                                if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                                    instrument.mdeffects |= 1 << 3;\n                                }\n                            }\n                            else {\n                                const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                instrument.fadeIn = secondsToFadeInSetting(settings.fadeInSeconds);\n                                instrument.fadeOut = ticksToFadeOutSetting(settings.fadeOutTicks);\n                                instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                                if (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] > 0) {\n                                    instrument.legacyTieOver = true;\n                                }\n                                instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                                if (instrument.transition != Config.transitions.dictionary[\"normal\"].index || instrument.clicklessTransition) {\n                                    instrument.mdeffects |= 1 << 3;\n                                }\n                            }\n                        }\n                        else {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.fadeIn = clamp(0, Config.fadeInRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.fadeOut = clamp(0, Config.fadeOutTicks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            if (fromJummBox || fromGoldBox || fromUltraBox || fromSlarmoosBox)\n                                instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                        }\n                    }\n                    break;\n                case 99:\n                    {\n                        if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            if (beforeSeven && fromBeepBox) {\n                                if (beforeThree && fromBeepBox) {\n                                    const legacyEffects = [0, 3, 2, 0];\n                                    const legacyEnvelopes = [\"none\", \"none\", \"none\", \"tremolo2\"];\n                                    const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    const effect = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    const instrument = this.channels[channelIndex].instruments[0];\n                                    const legacySettings = legacySettingsCache[channelIndex][0];\n                                    instrument.vibrato = legacyEffects[effect];\n                                    if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == 0) {\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                    }\n                                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                        instrument.mdeffects |= 1 << 2;\n                                    }\n                                }\n                                else if (beforeSix && fromBeepBox) {\n                                    const legacyEffects = [0, 1, 2, 3, 0, 0];\n                                    const legacyEnvelopes = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\n                                    for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                        for (let i = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                                            const effect = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            const instrument = this.channels[channelIndex].instruments[i];\n                                            const legacySettings = legacySettingsCache[channelIndex][i];\n                                            instrument.vibrato = legacyEffects[effect];\n                                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == 0) {\n                                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                            }\n                                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                                instrument.mdeffects |= 1 << 2;\n                                            }\n                                            if ((legacyGlobalReverb != 0 || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) && !this.getChannelIsNoise(channelIndex)) {\n                                                let newEffect = instrument.addEffect(0);\n                                                newEffect.reverb = legacyGlobalReverb;\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    const legacyEffects = [0, 1, 2, 3, 0, 0];\n                                    const legacyEnvelopes = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\n                                    const effect = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                    const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                                    instrument.vibrato = legacyEffects[effect];\n                                    if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == 0) {\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                    }\n                                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                        instrument.mdeffects |= 1 << 2;\n                                    }\n                                    if (legacyGlobalReverb != 0 || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                                        let newEffect = instrument.addEffect(0);\n                                        newEffect.reverb = legacyGlobalReverb;\n                                    }\n                                }\n                            }\n                            else {\n                                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                const vibrato = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                instrument.vibrato = vibrato;\n                                if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                    instrument.mdeffects |= 1 << 2;\n                                }\n                                if (vibrato == Config.vibratos.length) {\n                                    instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50;\n                                    instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 2;\n                                    instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    instrument.mdeffects |= 1 << 2;\n                                }\n                                else {\n                                    instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\n                                    instrument.vibratoSpeed = 10;\n                                    instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\n                                    instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\n                                }\n                            }\n                        }\n                        else {\n                            if (fromSlarmoosBox && !beforeFour) {\n                                const originalControlPointCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                this.eqFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalControlPointCount);\n                                for (let i = this.eqFilter.controlPoints.length; i < this.eqFilter.controlPointCount; i++) {\n                                    this.eqFilter.controlPoints[i] = new FilterControlPoint();\n                                }\n                                for (let i = 0; i < this.eqFilter.controlPointCount; i++) {\n                                    const point = this.eqFilter.controlPoints[i];\n                                    point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                                for (let i = this.eqFilter.controlPointCount; i < originalControlPointCount; i++) {\n                                    charIndex += 3;\n                                }\n                                this.eqSubFilters[0] = this.eqFilter;\n                                let usingSubFilterBitfield = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                                    if (usingSubFilterBitfield & (1 << j)) {\n                                        const originalSubfilterControlPointCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                        if (this.eqSubFilters[j + 1] == null)\n                                            this.eqSubFilters[j + 1] = new FilterSettings();\n                                        this.eqSubFilters[j + 1].controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\n                                        for (let i = this.eqSubFilters[j + 1].controlPoints.length; i < this.eqSubFilters[j + 1].controlPointCount; i++) {\n                                            this.eqSubFilters[j + 1].controlPoints[i] = new FilterControlPoint();\n                                        }\n                                        for (let i = 0; i < this.eqSubFilters[j + 1].controlPointCount; i++) {\n                                            const point = this.eqSubFilters[j + 1].controlPoints[i];\n                                            point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                        for (let i = this.eqSubFilters[j + 1].controlPointCount; i < originalSubfilterControlPointCount; i++) {\n                                            charIndex += 3;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 71:\n                    {\n                        if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.arpeggioSpeed = clamp(0, Config.modulators.dictionary[\"arp speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.fastTwoNoteArp = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                        }\n                        else {\n                        }\n                    }\n                    break;\n                case 104:\n                    {\n                        if (beforeThree && fromBeepBox) {\n                            const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const instrument = this.channels[channelIndex].instruments[0];\n                            instrument.unison = clamp(0, Config.unisons.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                            instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                            instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                            instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                            instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                        }\n                        else if (beforeSix && fromBeepBox) {\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (const instrument of this.channels[channelIndex].instruments) {\n                                    const originalValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    let unison = clamp(0, Config.unisons.length, originalValue);\n                                    if (originalValue == 8) {\n                                        unison = 2;\n                                        instrument.chord = 3;\n                                    }\n                                    instrument.unison = unison;\n                                    instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                                    instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                                    instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                                    instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                                    instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                                }\n                            }\n                        }\n                        else if (beforeSeven && fromBeepBox) {\n                            const originalValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            let unison = clamp(0, Config.unisons.length, originalValue);\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            if (originalValue == 8) {\n                                unison = 2;\n                                instrument.chord = 3;\n                            }\n                            instrument.unison = unison;\n                            instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                            instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                            instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                            instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                            instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                        }\n                        else {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.unison = clamp(0, Config.unisons.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            const unisonLength = (beforeFive || !fromSlarmoosBox) ? 27 : Config.unisons.length;\n                            if (((fromUltraBox && !beforeFive) || fromSlarmoosBox) && (instrument.unison == unisonLength)) {\n                                instrument.unison = Config.unisons.length;\n                                instrument.unisonVoices = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const unisonSpreadNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const unisonSpread = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63)) * 63);\n                                const unisonOffsetNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const unisonOffset = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63)) * 63);\n                                const unisonExpressionNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const unisonExpression = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63);\n                                const unisonSignNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                const unisonSign = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63);\n                                instrument.unisonSpread = unisonSpread / 1000;\n                                if (unisonSpreadNegative == 0)\n                                    instrument.unisonSpread *= -1;\n                                instrument.unisonOffset = unisonOffset / 1000;\n                                if (unisonOffsetNegative == 0)\n                                    instrument.unisonOffset *= -1;\n                                instrument.unisonExpression = unisonExpression / 1000;\n                                if (unisonExpressionNegative == 0)\n                                    instrument.unisonExpression *= -1;\n                                instrument.unisonSign = unisonSign / 1000;\n                                if (unisonSignNegative == 0)\n                                    instrument.unisonSign *= -1;\n                            }\n                            else {\n                                instrument.unisonVoices = Config.unisons[instrument.unison].voices;\n                                instrument.unisonSpread = Config.unisons[instrument.unison].spread;\n                                instrument.unisonOffset = Config.unisons[instrument.unison].offset;\n                                instrument.unisonExpression = Config.unisons[instrument.unison].expression;\n                                instrument.unisonSign = Config.unisons[instrument.unison].sign;\n                            }\n                        }\n                    }\n                    break;\n                case 67:\n                    {\n                        if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n                                instrument.mdeffects |= 1 << 4;\n                            }\n                        }\n                        else {\n                        }\n                    }\n                    break;\n                case 113:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\n                            instrument.addEffect(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] & ((1 << 11) - 1));\n                            const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                        else {\n                            const effectCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            if (fromTheepBox) {\n                                instrument.effects = [];\n                                for (let i = 0; i < effectCount; i++) {\n                                    let newEffect = instrument.addEffect(base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    if (newEffect.type == 5) {\n                                        let typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                        if (typeCheck == 0) {\n                                            newEffect.eqFilterType = false;\n                                            typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                            newEffect.eqFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, typeCheck);\n                                            for (let i = newEffect.eqFilter.controlPoints.length; i < newEffect.eqFilter.controlPointCount; i++) {\n                                                newEffect.eqFilter.controlPoints[i] = new FilterControlPoint();\n                                            }\n                                            for (let i = 0; i < newEffect.eqFilter.controlPointCount; i++) {\n                                                const point = newEffect.eqFilter.controlPoints[i];\n                                                point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            }\n                                            for (let i = newEffect.eqFilter.controlPointCount; i < typeCheck; i++) {\n                                                charIndex += 3;\n                                            }\n                                            newEffect.eqSubFilters[0] = newEffect.eqFilter;\n                                            let usingSubFilterBitfield = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            for (let j = 0; j < Config.filterMorphCount - 1; j++) {\n                                                if (usingSubFilterBitfield & (1 << j)) {\n                                                    const originalSubfilterControlPointCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                                    if (newEffect.eqSubFilters[j + 1] == null)\n                                                        newEffect.eqSubFilters[j + 1] = new FilterSettings();\n                                                    newEffect.eqSubFilters[j + 1].controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\n                                                    for (let i = newEffect.eqSubFilters[j + 1].controlPoints.length; i < newEffect.eqSubFilters[j + 1].controlPointCount; i++) {\n                                                        newEffect.eqSubFilters[j + 1].controlPoints[i] = new FilterControlPoint();\n                                                    }\n                                                    for (let i = 0; i < newEffect.eqSubFilters[j + 1].controlPointCount; i++) {\n                                                        const point = newEffect.eqSubFilters[j + 1].controlPoints[i];\n                                                        point.type = clamp(0, 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                        point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                        point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                                    }\n                                                    for (let i = newEffect.eqSubFilters[j + 1].controlPointCount; i < originalSubfilterControlPointCount; i++) {\n                                                        charIndex += 3;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            newEffect.eqFilterType = true;\n                                            newEffect.eqFilter.reset();\n                                            newEffect.eqFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            newEffect.eqFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                    }\n                                    if (newEffect.type == 3) {\n                                        if (fromTheepBox)\n                                            newEffect.distortion = clamp(0, Config.distortionRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        else\n                                            newEffect.distortion = clamp(0, Config.distortionRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 2;\n                                        if ((fromJummBox && !beforeFive) || fromGoldBox || fromUltraBox || fromSlarmoosBox)\n                                            instrument.aliases = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                                    }\n                                    if (newEffect.type == 4) {\n                                        newEffect.bitcrusherFreq = clamp(0, Config.bitcrusherFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        newEffect.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                    if (newEffect.type == 2) {\n                                        if (fromBeepBox) {\n                                            newEffect.pan = clamp(0, Config.panMax + 1, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0)));\n                                        }\n                                        else {\n                                            newEffect.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                        if ((fromJummBox && !beforeTwo) || fromGoldBox || fromUltraBox || fromSlarmoosBox)\n                                            newEffect.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                        if (fromTheepBox)\n                                            newEffect.panMode = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    }\n                                    if (newEffect.type == 10) {\n                                        newEffect.flanger = clamp(0, Config.flangerRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        newEffect.flangerSpeed = clamp(0, Config.flangerSpeedRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        newEffect.flangerDepth = clamp(0, Config.flangerDepthRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        newEffect.flangerFeedback = clamp(0, Config.flangerFeedbackRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                    if (newEffect.type == 1) {\n                                        if (fromTheepBox)\n                                            newEffect.chorus = clamp(0, (Config.chorusRange / 2) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        else if (fromBeepBox)\n                                            newEffect.chorus = clamp(0, (Config.chorusRange / 2) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 4;\n                                        else\n                                            newEffect.chorus = clamp(0, Config.chorusRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 2;\n                                    }\n                                    if (newEffect.type == 9) {\n                                        newEffect.gain = clamp(0, Config.volumeRange, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                    if (newEffect.type == 6) {\n                                        if (!fromTheepBox)\n                                            newEffect.echoSustain = clamp(0, Config.echoSustainRange / 3, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 3;\n                                        else\n                                            newEffect.echoSustain = clamp(0, Config.echoSustainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        newEffect.echoDelay = clamp(0, Config.echoDelayRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        newEffect.echoPingPong = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                    if (newEffect.type == 0) {\n                                        if (fromBeepBox) {\n                                            newEffect.reverb = clamp(0, Config.reverbRange, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * Config.reverbRange / 3.0));\n                                        }\n                                        else {\n                                            newEffect.reverb = clamp(0, Config.reverbRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                    }\n                                    if (newEffect.type == 8) {\n                                        newEffect.granular = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                        newEffect.grainSize = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                        newEffect.grainAmounts = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                        newEffect.grainRange = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    }\n                                    if (newEffect.type == 7) {\n                                        newEffect.ringModulation = clamp(0, Config.ringModRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        newEffect.ringModulationHz = clamp(0, Config.ringModHzRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        newEffect.ringModWaveformIndex = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        newEffect.ringModPulseWidth = clamp(0, Config.pulseWidthRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        newEffect.ringModHzOffset = clamp(Config.rmHzOffsetMin, Config.rmHzOffsetMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                }\n                                instrument.mdeffects = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            }\n                            else {\n                                const legacyEffectTypes = [0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 7, 8];\n                                let bit = 0;\n                                if (fromSlarmoosBox && !beforeFive) {\n                                    const bits = new BitFieldReader(compressed, charIndex, charIndex + 18);\n                                    for (let i = 0; i < 18; i++) {\n                                        bit = bits.read(1);\n                                        if (i > 6 && i < 13)\n                                            instrument.mdeffects &= legacyEffectTypes[bit];\n                                        else if (bit == 1)\n                                            instrument.addEffect(legacyEffectTypes[i]);\n                                    }\n                                }\n                                else {\n                                    const bits = new BitFieldReader(compressed, charIndex, charIndex + 12);\n                                    for (let i = 0; i < 12; i++) {\n                                        bit = bits.read(1);\n                                        if (i > 6)\n                                            instrument.mdeffects &= legacyEffectTypes[bit];\n                                        else if (bit == 1)\n                                            instrument.addEffect(legacyEffectTypes[i]);\n                                    }\n                                }\n                            }\n                            if (effectsIncludeTransition(instrument.mdeffects)) {\n                                instrument.transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            if (effectsIncludeChord(instrument.mdeffects)) {\n                                instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index && (fromJummBox || fromGoldBox || fromUltraBox || fromSlarmoosBox)) {\n                                    instrument.arpeggioSpeed = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    instrument.fastTwoNoteArp = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                                }\n                                if (instrument.chord == Config.chords.dictionary[\"monophonic\"].index && fromSlarmoosBox && !beforeFive) {\n                                    instrument.monoChordTone = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                }\n                            }\n                            if (effectsIncludePitchShift(instrument.mdeffects)) {\n                                instrument.pitchShift = clamp(0, Config.pitchShiftRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            if (effectsIncludeDetune(instrument.mdeffects)) {\n                                if (fromBeepBox) {\n                                    instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    instrument.detune = Math.round((instrument.detune - 9) * (Math.abs(instrument.detune - 9) + 1) / 2 + Config.detuneCenter);\n                                }\n                                else {\n                                    instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n                            if (effectsIncludeVibrato(instrument.mdeffects)) {\n                                instrument.vibrato = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                if (instrument.vibrato == Config.vibratos.length && (fromJummBox || fromGoldBox || fromUltraBox || fromSlarmoosBox)) {\n                                    instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 25;\n                                    instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                                else {\n                                    instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\n                                    instrument.vibratoSpeed = 10;\n                                    instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\n                                    instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 118:\n                    {\n                        if (beforeThree && fromBeepBox) {\n                            const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const instrument = this.channels[channelIndex].instruments[0];\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                        }\n                        else if (beforeSix && fromBeepBox) {\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (const instrument of this.channels[channelIndex].instruments) {\n                                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                                }\n                            }\n                        }\n                        else if (beforeSeven && fromBeepBox) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                        }\n                        else if (fromBeepBox) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 25.0 / 7.0));\n                        }\n                        else if (!fromTheepBox) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2) * 2.0);\n                        }\n                        else {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2));\n                        }\n                    }\n                    break;\n                case 76:\n                    {\n                    }\n                    break;\n                case 68:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 4);\n                            instrument.mdeffects |= 1 << 1;\n                        }\n                        else {\n                        }\n                    }\n                    break;\n                case 77:\n                    {\n                        let instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        for (let j = 0; j < 64; j++) {\n                            instrument.customChipWave[j]\n                                = clamp(-24, 25, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] - 24);\n                        }\n                        let sum = 0.0;\n                        for (let i = 0; i < instrument.customChipWave.length; i++) {\n                            sum += instrument.customChipWave[i];\n                        }\n                        const average = sum / instrument.customChipWave.length;\n                        let cumulative = 0;\n                        let wavePrev = 0;\n                        for (let i = 0; i < instrument.customChipWave.length; i++) {\n                            cumulative += wavePrev;\n                            wavePrev = instrument.customChipWave[i] - average;\n                            instrument.customChipWaveIntegral[i] = cumulative;\n                        }\n                        instrument.customChipWaveIntegral[64] = 0.0;\n                    }\n                    break;\n                case 79:\n                    {\n                        let nextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if (nextValue == 0x3f) {\n                            this.restoreLimiterDefaults();\n                        }\n                        else {\n                            this.compressionRatio = (nextValue < 10 ? nextValue / 10 : (1 + (nextValue - 10) / 60));\n                            nextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            this.limitRatio = (nextValue < 10 ? nextValue / 10 : (nextValue - 9));\n                            this.limitDecay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            this.limitRise = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 250.0) + 2000.0;\n                            this.compressionThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\n                            this.limitThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\n                            this.masterGain = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50.0;\n                        }\n                    }\n                    break;\n                case 85:\n                    {\n                        for (let channel = 0; channel < this.getChannelCount(); channel++) {\n                            var channelNameLength;\n                            if (beforeFour && !fromGoldBox && !fromUltraBox && !fromSlarmoosBox)\n                                channelNameLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            else\n                                channelNameLength = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            this.channels[channel].name = decodeURIComponent(compressed.substring(charIndex, charIndex + channelNameLength));\n                            charIndex += channelNameLength;\n                            if (fromTheepBox)\n                                this.channels[channel].color = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        }\n                    }\n                    break;\n                case 65:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if (instrument.type == 1) {\n                            instrument.algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        else {\n                            instrument.algorithm6Op = clamp(0, Config.algorithms6Op.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.customAlgorithm.fromPreset(instrument.algorithm6Op);\n                            if (compressed.charCodeAt(charIndex) == 67) {\n                                let carrierCountTemp = clamp(1, Config.operatorCount + 2 + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex + 1)]);\n                                charIndex++;\n                                let tempModArray = [];\n                                if (compressed.charCodeAt(charIndex + 1) == 113) {\n                                    charIndex++;\n                                    let j = 0;\n                                    charIndex++;\n                                    while (compressed.charCodeAt(charIndex) != 113) {\n                                        tempModArray[j] = [];\n                                        let o = 0;\n                                        while (compressed.charCodeAt(charIndex) != 82) {\n                                            tempModArray[j][o] = clamp(1, Config.operatorCount + 3, base64CharCodeToInt[compressed.charCodeAt(charIndex)]);\n                                            o++;\n                                            charIndex++;\n                                        }\n                                        j++;\n                                        charIndex++;\n                                    }\n                                    instrument.customAlgorithm.set(carrierCountTemp, tempModArray);\n                                    charIndex++;\n                                }\n                            }\n                        }\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                    }\n                    break;\n                case 120:\n                    {\n                        if (fromGoldBox && !beforeFour && beforeSix) {\n                            const chipWaveForCompat = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            if ((chipWaveForCompat + 62) > 85) {\n                                if (document.URL.substring(document.URL.length - 13).toLowerCase() != \"legacysamples\") {\n                                    if (!willLoadLegacySamplesForOldSongs) {\n                                        willLoadLegacySamplesForOldSongs = true;\n                                        Config.willReloadForCustomSamples = true;\n                                        EditorConfig.customSamples = [\"legacySamples\"];\n                                        loadBuiltInSamples(0);\n                                    }\n                                }\n                            }\n                            if ((chipWaveForCompat + 62) > 78) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 63);\n                            }\n                            else if ((chipWaveForCompat + 62) > 67) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 61);\n                            }\n                            else if ((chipWaveForCompat + 62) == 67) {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = 40;\n                            }\n                            else {\n                                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 62);\n                            }\n                        }\n                        else {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.supersawShape = clamp(0, Config.supersawShapeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    break;\n                case 70:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if (instrument.type == 1) {\n                            instrument.feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        else {\n                            instrument.feedbackType6Op = clamp(0, Config.feedbacks6Op.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.customFeedbackType.fromPreset(instrument.feedbackType6Op);\n                            let tempModArray = [];\n                            if (compressed.charCodeAt(charIndex) == 113) {\n                                let j = 0;\n                                charIndex++;\n                                while (compressed.charCodeAt(charIndex) != 113) {\n                                    tempModArray[j] = [];\n                                    let o = 0;\n                                    while (compressed.charCodeAt(charIndex) != 82) {\n                                        tempModArray[j][o] = clamp(1, Config.operatorCount + 2, base64CharCodeToInt[compressed.charCodeAt(charIndex)]);\n                                        o++;\n                                        charIndex++;\n                                    }\n                                    j++;\n                                    charIndex++;\n                                }\n                                instrument.customFeedbackType.set(tempModArray);\n                                charIndex++;\n                            }\n                        }\n                    }\n                    break;\n                case 66:\n                    {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    break;\n                case 86:\n                    {\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            const pregoldToEnvelope = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                            let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox))\n                                aa = pregoldToEnvelope[aa];\n                            legacySettings.feedbackEnvelope = Song._envelopeFromLegacyIndex(base64CharCodeToInt[aa]);\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                        else {\n                        }\n                    }\n                    break;\n                case 81:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if (beforeThree && fromGoldBox) {\n                            const freqToGold3 = [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 20, 22, 24, 2, 1, 9, 17, 19, 21, 23, 0, 3];\n                            for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                                instrument.operators[o].frequency = freqToGold3[clamp(0, freqToGold3.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                            }\n                        }\n                        else if (!fromGoldBox && !fromUltraBox && !fromSlarmoosBox) {\n                            const freqToUltraBox = [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 20, 23, 27, 2, 1, 9, 17, 19, 21, 23, 0, 3];\n                            for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                                instrument.operators[o].frequency = freqToUltraBox[clamp(0, freqToUltraBox.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                            }\n                        }\n                        else {\n                            for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                                instrument.operators[o].frequency = clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                        }\n                    }\n                    break;\n                case 80:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                            instrument.operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    break;\n                case 69:\n                    {\n                        const pregoldToEnvelope = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\n                        const jummToUltraEnvelope = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 58, 59, 60];\n                        const slarURL3toURL4Envelope = [0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 11, 12, 13, 14];\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                            const legacySettings = legacySettingsCache[instrumentChannelIterator][instrumentIndexIterator];\n                            legacySettings.operatorEnvelopes = [];\n                            for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                                let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                if ((beforeTwo && fromGoldBox) || (fromBeepBox))\n                                    aa = pregoldToEnvelope[aa];\n                                if (fromJummBox)\n                                    aa = jummToUltraEnvelope[aa];\n                                legacySettings.operatorEnvelopes[o] = Song._envelopeFromLegacyIndex(aa);\n                            }\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                        else {\n                            const envelopeCount = clamp(0, Config.maxEnvelopeCount + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            let envelopeDiscrete = false;\n                            if ((fromJummBox && !beforeSix) || (fromUltraBox && !beforeFive) || (fromSlarmoosBox)) {\n                                instrument.envelopeSpeed = clamp(0, Config.modulators.dictionary[\"envelope speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                if (!fromSlarmoosBox || beforeFive) {\n                                    envelopeDiscrete = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                                }\n                            }\n                            for (let i = 0; i < envelopeCount; i++) {\n                                const target = clamp(0, Config.instrumentAutomationTargets.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                let index = 0;\n                                const maxCount = Config.instrumentAutomationTargets[target].maxCount;\n                                if (maxCount > 1) {\n                                    index = clamp(0, maxCount, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                                let aa = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                if ((beforeTwo && fromGoldBox) || (fromBeepBox))\n                                    aa = pregoldToEnvelope[aa];\n                                if (fromJummBox)\n                                    aa = jummToUltraEnvelope[aa];\n                                if (!fromSlarmoosBox && aa >= 2)\n                                    aa++;\n                                let updatedEnvelopes = false;\n                                let perEnvelopeSpeed = 1;\n                                if (!fromSlarmoosBox || beforeThree) {\n                                    updatedEnvelopes = true;\n                                    perEnvelopeSpeed = Config.envelopes[aa].speed;\n                                    aa = Config.envelopes[aa].type;\n                                }\n                                else if (beforeFour && aa >= 3)\n                                    aa++;\n                                let isTremolo2 = false;\n                                if ((fromSlarmoosBox && !beforeThree && beforeFour) || updatedEnvelopes) {\n                                    if (aa == 9)\n                                        isTremolo2 = true;\n                                    aa = slarURL3toURL4Envelope[aa];\n                                }\n                                const envelope = clamp(0, ((fromSlarmoosBox && !beforeThree || updatedEnvelopes) ? Config.newEnvelopes.length : Config.envelopes.length), aa);\n                                let pitchEnvelopeStart = 0;\n                                let pitchEnvelopeEnd = Config.maxPitch;\n                                let envelopeInverse = false;\n                                perEnvelopeSpeed = (fromSlarmoosBox && !beforeThree) ? Config.newEnvelopes[envelope].speed : perEnvelopeSpeed;\n                                let perEnvelopeLowerBound = 0;\n                                let perEnvelopeUpperBound = 1;\n                                let steps = 2;\n                                let seed = 2;\n                                let waveform = 0;\n                                if (fromSlarmoosBox && !beforeFour) {\n                                    if (Config.newEnvelopes[envelope].name == \"lfo\") {\n                                        waveform = clamp(0, 7, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        if (waveform == 5 || waveform == 6) {\n                                            steps = clamp(1, Config.randomEnvelopeStepsMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                    }\n                                    else if (Config.newEnvelopes[envelope].name == \"random\") {\n                                        steps = clamp(1, Config.randomEnvelopeStepsMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        seed = clamp(1, Config.randomEnvelopeSeedMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        waveform = clamp(0, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                }\n                                if (fromSlarmoosBox && !beforeThree) {\n                                    if (Config.newEnvelopes[envelope].name == \"pitch\") {\n                                        if (!instrument.isNoiseInstrument) {\n                                            let pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                            pitchEnvelopeStart = clamp(0, Config.maxPitch + 1, pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                            pitchEnvelopeEnd = clamp(0, Config.maxPitch + 1, pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                        else {\n                                            pitchEnvelopeStart = clamp(0, Config.drumCount, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            pitchEnvelopeEnd = clamp(0, Config.drumCount, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                    }\n                                    let checkboxValues = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    if (fromSlarmoosBox && !beforeFive) {\n                                        envelopeDiscrete = (checkboxValues >> 1) == 1 ? true : false;\n                                    }\n                                    envelopeInverse = (checkboxValues & 1) == 1 ? true : false;\n                                    if (Config.newEnvelopes[envelope].name != \"pitch\" && Config.newEnvelopes[envelope].name != \"note size\" && Config.newEnvelopes[envelope].name != \"punch\" && Config.newEnvelopes[envelope].name != \"none\") {\n                                        perEnvelopeSpeed = Config.perEnvelopeSpeedIndices[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                                    }\n                                    perEnvelopeLowerBound = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 10;\n                                    perEnvelopeUpperBound = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 10;\n                                }\n                                if (!fromSlarmoosBox || beforeFour) {\n                                    if (isTremolo2) {\n                                        waveform = 0;\n                                        if (envelopeInverse) {\n                                            perEnvelopeUpperBound = Math.floor((perEnvelopeUpperBound / 2) * 10) / 10;\n                                            perEnvelopeLowerBound = Math.floor((perEnvelopeLowerBound / 2) * 10) / 10;\n                                        }\n                                        else {\n                                            perEnvelopeUpperBound = Math.floor((0.5 + (perEnvelopeUpperBound - perEnvelopeLowerBound) / 2) * 10) / 10;\n                                            perEnvelopeLowerBound = 0.5;\n                                        }\n                                    }\n                                }\n                                instrument.addEnvelope(target, index, envelope, true, pitchEnvelopeStart, pitchEnvelopeEnd, envelopeInverse, perEnvelopeSpeed, perEnvelopeLowerBound, perEnvelopeUpperBound, steps, seed, waveform, envelopeDiscrete);\n                                if (fromSlarmoosBox && beforeThree && !beforeTwo) {\n                                    let pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    instrument.envelopes[i].pitchEnvelopeStart = pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    instrument.envelopes[i].pitchEnvelopeEnd = pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    instrument.envelopes[i].inverse = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] == 1 ? true : false;\n                                }\n                            }\n                            let instrumentPitchEnvelopeStart = 0;\n                            let instrumentPitchEnvelopeEnd = Config.maxPitch;\n                            let instrumentEnvelopeInverse = false;\n                            if (fromSlarmoosBox && beforeTwo) {\n                                let pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                instrumentPitchEnvelopeStart = pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                pitchEnvelopeCompact = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                instrumentPitchEnvelopeEnd = pitchEnvelopeCompact * 64 + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                instrumentEnvelopeInverse = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] === 1 ? true : false;\n                                for (let i = 0; i < envelopeCount; i++) {\n                                    instrument.envelopes[i].pitchEnvelopeStart = instrumentPitchEnvelopeStart;\n                                    instrument.envelopes[i].pitchEnvelopeEnd = instrumentPitchEnvelopeEnd;\n                                    instrument.envelopes[i].inverse = Config.envelopes[instrument.envelopes[i].envelope].name == \"pitch\" ? instrumentEnvelopeInverse : false;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 82:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if (beforeThree && fromGoldBox) {\n                            for (let o = 0; o < Config.operatorCount; o++) {\n                                const pre3To3g = [0, 1, 3, 2, 2, 2, 4, 5];\n                                const old = clamp(0, pre3To3g.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                if (old == 3) {\n                                    instrument.operators[o].pulseWidth = 5;\n                                }\n                                else if (old == 4) {\n                                    instrument.operators[o].pulseWidth = 4;\n                                }\n                                else if (old == 5) {\n                                    instrument.operators[o].pulseWidth = 6;\n                                }\n                                instrument.operators[o].waveform = pre3To3g[old];\n                            }\n                        }\n                        else {\n                            for (let o = 0; o < (instrument.type == 11 ? 6 : Config.operatorCount); o++) {\n                                if (fromJummBox) {\n                                    const jummToG = [0, 1, 3, 2, 4, 5];\n                                    instrument.operators[o].waveform = jummToG[clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                }\n                                else {\n                                    instrument.operators[o].waveform = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                                if (instrument.operators[o].waveform == 2) {\n                                    instrument.operators[o].pulseWidth = clamp(0, Config.pwmOperatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 83:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        if (instrument.type == 3) {\n                            const byteCount = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6);\n                            const bits = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                            for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                                instrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\n                            }\n                            instrument.spectrumWave.markCustomWaveDirty();\n                            charIndex += byteCount;\n                        }\n                        else if (instrument.type == 4) {\n                            const byteCount = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6);\n                            const bits = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                            for (let j = 0; j < Config.drumCount; j++) {\n                                for (let i = 0; i < Config.spectrumControlPoints; i++) {\n                                    instrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\n                                }\n                                instrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\n                            }\n                            charIndex += byteCount;\n                        }\n                        else {\n                            throw new Error(\"Unhandled instrument type for spectrum song tag code.\");\n                        }\n                    }\n                    break;\n                case 72:\n                    {\n                        const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        const byteCount = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6);\n                        const bits = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                        for (let i = 0; i < Config.harmonicsControlPoints; i++) {\n                            instrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\n                        }\n                        instrument.harmonicsWave.markCustomWaveDirty();\n                        charIndex += byteCount;\n                    }\n                    break;\n                case 88:\n                    {\n                        if ((fromJummBox && beforeFive) || (fromGoldBox && beforeFour)) {\n                            const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            instrument.aliases = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                            if (instrument.aliases) {\n                                let newEffect = instrument.addEffect(3);\n                                newEffect.distortion = 0;\n                            }\n                        }\n                        else {\n                            if (fromUltraBox || fromSlarmoosBox) {\n                                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                                instrument.decimalOffset = clamp(0, 50 + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                        }\n                    }\n                    break;\n                case 98:\n                    {\n                        let subStringLength;\n                        if (beforeThree && fromBeepBox) {\n                            const channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const barCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            subStringLength = Math.ceil(barCount * 0.5);\n                            const bits = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                            for (let i = 0; i < barCount; i++) {\n                                this.channels[channelIndex].bars[i] = bits.read(3) + 1;\n                            }\n                        }\n                        else if (beforeFive && fromBeepBox) {\n                            let neededBits = 0;\n                            while ((1 << neededBits) < this.patternsPerChannel)\n                                neededBits++;\n                            subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\n                            const bits = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (let i = 0; i < this.barCount; i++) {\n                                    this.channels[channelIndex].bars[i] = bits.read(neededBits) + 1;\n                                }\n                            }\n                        }\n                        else {\n                            let neededBits = 0;\n                            while ((1 << neededBits) < this.patternsPerChannel + 1)\n                                neededBits++;\n                            subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\n                            const bits = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (let i = 0; i < this.barCount; i++) {\n                                    this.channels[channelIndex].bars[i] = bits.read(neededBits);\n                                }\n                            }\n                        }\n                        charIndex += subStringLength;\n                    }\n                    break;\n                case 112:\n                    {\n                        let bitStringLength = 0;\n                        let channelIndex;\n                        let largerChords = !((beforeFour && fromJummBox) || fromBeepBox);\n                        let recentPitchBitLength = (largerChords ? 4 : 3);\n                        let recentPitchLength = (largerChords ? 16 : 8);\n                        if (beforeThree && fromBeepBox) {\n                            channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            charIndex++;\n                            bitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            bitStringLength = bitStringLength << 6;\n                            bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        }\n                        else {\n                            channelIndex = 0;\n                            let bitStringLengthLength = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            while (bitStringLengthLength > 0) {\n                                bitStringLength = bitStringLength << 6;\n                                bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                bitStringLengthLength--;\n                            }\n                        }\n                        const bits = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength);\n                        charIndex += bitStringLength;\n                        const bitsPerNoteSize = Song.getNeededBits(Config.noteSizeMax);\n                        let songReverbChannel = -1;\n                        let songReverbInstrument = -1;\n                        let songReverbIndex = -1;\n                        const shouldCorrectTempoMods = fromJummBox;\n                        const jummboxTempoMin = 30;\n                        while (true) {\n                            const channel = this.channels[channelIndex];\n                            const isNoiseChannel = this.getChannelIsNoise(channelIndex);\n                            const isModChannel = this.getChannelIsMod(channelIndex);\n                            const maxInstrumentsPerPattern = this.getMaxInstrumentsPerPattern(channelIndex);\n                            const neededInstrumentCountBits = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\n                            const neededInstrumentIndexBits = Song.getNeededBits(channel.instruments.length - 1);\n                            if (isModChannel) {\n                                let jumfive = (beforeFive && fromJummBox) || (beforeFour && fromGoldBox);\n                                const neededModInstrumentIndexBits = (jumfive) ? neededInstrumentIndexBits : Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\n                                for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                                    let instrument = channel.instruments[instrumentIndex];\n                                    for (let mod = 0; mod < Config.modCount; mod++) {\n                                        let status = bits.read(2);\n                                        switch (status) {\n                                            case 0:\n                                                let modChannelLength = bits.read(8);\n                                                for (let i = 0; i < modChannelLength; i++)\n                                                    instrument.modChannels[mod][i] = clamp(0, this.pitchChannelCount + this.noiseChannelCount + 1, bits.read(8));\n                                                let modInstrumentLength = bits.read(8);\n                                                for (let i = 0; i < modInstrumentLength; i++)\n                                                    instrument.modInstruments[mod][i] = clamp(0, this.channels[instrument.modChannels[mod][i]].instruments.length + 2, bits.read(neededModInstrumentIndexBits));\n                                                break;\n                                            case 1:\n                                                instrument.modChannels[mod][0] = this.pitchChannelCount + clamp(0, this.noiseChannelCount + 1, bits.read(8));\n                                                instrument.modInstruments[mod][0] = clamp(0, this.channels[instrument.modChannels[mod][0]].instruments.length + 2, bits.read(neededInstrumentIndexBits));\n                                                break;\n                                            case 2:\n                                                instrument.modChannels[mod][0] = -1;\n                                                break;\n                                            case 3:\n                                                instrument.modChannels[mod][0] = -2;\n                                                break;\n                                        }\n                                        if (status != 3) {\n                                            instrument.modulators[mod] = bits.read(6);\n                                        }\n                                        if (!jumfive && (Config.modulators[instrument.modulators[mod]].name == \"post eq\" || Config.modulators[instrument.modulators[mod]].name == \"pre eq\" || Config.modulators[instrument.modulators[mod]].name == \"song eq\")) {\n                                            instrument.modFilterTypes[mod] = bits.read(6);\n                                        }\n                                        if (Config.modulators[instrument.modulators[mod]].name == \"individual envelope speed\" ||\n                                            Config.modulators[instrument.modulators[mod]].name == \"reset envelope\" ||\n                                            Config.modulators[instrument.modulators[mod]].name == \"individual envelope lower bound\" ||\n                                            Config.modulators[instrument.modulators[mod]].name == \"individual envelope upper bound\") {\n                                            instrument.modEnvelopeNumbers[mod] = bits.read(6);\n                                        }\n                                        if (jumfive && instrument.modChannels[mod][0] >= 0) {\n                                            let forNoteFilter = this.channels[instrument.modChannels[mod][0]].instruments[instrument.modInstruments[mod][0]].effectsIncludeType(5);\n                                            if (instrument.modulators[mod] == 7) {\n                                                if (forNoteFilter) {\n                                                    instrument.modulators[mod] = Config.modulators.dictionary[\"note filt cut\"].index;\n                                                }\n                                                else {\n                                                    instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt cut\"].index;\n                                                }\n                                                instrument.modFilterTypes[mod] = 1;\n                                            }\n                                            else if (instrument.modulators[mod] == 8) {\n                                                if (forNoteFilter) {\n                                                    instrument.modulators[mod] = Config.modulators.dictionary[\"note filt peak\"].index;\n                                                }\n                                                else {\n                                                    instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt peak\"].index;\n                                                }\n                                                instrument.modFilterTypes[mod] = 2;\n                                            }\n                                        }\n                                        else if (jumfive) {\n                                            if (instrument.modulators[mod] == Config.modulators.dictionary[\"song reverb\"].index) {\n                                                songReverbChannel = channelIndex;\n                                                songReverbInstrument = instrumentIndex;\n                                                songReverbIndex = mod;\n                                            }\n                                        }\n                                        if (jumfive && Config.modulators[instrument.modulators[mod]].associatedEffect != 11) {\n                                            this.channels[instrument.modChannels[mod][0]].instruments[instrument.modInstruments[mod][0]].addEffect(Config.modulators[instrument.modulators[mod]].associatedEffect);\n                                        }\n                                    }\n                                }\n                            }\n                            const detuneScaleNotes = [];\n                            for (let j = 0; j < channel.instruments.length; j++) {\n                                detuneScaleNotes[j] = [];\n                                for (let i = 0; i < Config.modCount; i++) {\n                                    detuneScaleNotes[j][Config.modCount - 1 - i] = 1 + 3 * +(((beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) && isModChannel && (channel.instruments[j].modulators[i] == Config.modulators.dictionary[\"detune\"].index));\n                                }\n                            }\n                            const octaveOffset = (isNoiseChannel || isModChannel) ? 0 : channel.octave * 12;\n                            let lastPitch = ((isNoiseChannel || isModChannel) ? 4 : octaveOffset);\n                            const recentPitches = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\n                            const recentShapes = [];\n                            for (let i = 0; i < recentPitches.length; i++) {\n                                recentPitches[i] += octaveOffset;\n                            }\n                            for (let i = 0; i < this.patternsPerChannel; i++) {\n                                const newPattern = channel.patterns[i];\n                                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\n                                    newPattern.instruments[0] = validateRange(0, channel.instruments.length - 1, bits.read(neededInstrumentIndexBits));\n                                    newPattern.instruments.length = 1;\n                                }\n                                else {\n                                    if (this.patternInstruments) {\n                                        const instrumentCount = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, bits.read(neededInstrumentCountBits) + Config.instrumentCountMin);\n                                        for (let j = 0; j < instrumentCount; j++) {\n                                            newPattern.instruments[j] = validateRange(0, channel.instruments.length - 1 + +(isModChannel) * 2, bits.read(neededInstrumentIndexBits));\n                                        }\n                                        newPattern.instruments.length = instrumentCount;\n                                    }\n                                    else {\n                                        newPattern.instruments[0] = 0;\n                                        newPattern.instruments.length = Config.instrumentCountMin;\n                                    }\n                                }\n                                if (!(fromBeepBox && beforeThree) && bits.read(1) == 0) {\n                                    newPattern.notes.length = 0;\n                                    continue;\n                                }\n                                let curPart = 0;\n                                const newNotes = newPattern.notes;\n                                let noteCount = 0;\n                                while (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\n                                    const useOldShape = bits.read(1) == 1;\n                                    let newNote = false;\n                                    let shapeIndex = 0;\n                                    if (useOldShape) {\n                                        shapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\n                                    }\n                                    else {\n                                        newNote = bits.read(1) == 1;\n                                    }\n                                    if (!useOldShape && !newNote) {\n                                        if (isModChannel) {\n                                            const isBackwards = bits.read(1) == 1;\n                                            const restLength = bits.readPartDuration();\n                                            if (isBackwards) {\n                                                curPart -= restLength;\n                                            }\n                                            else {\n                                                curPart += restLength;\n                                            }\n                                        }\n                                        else {\n                                            const restLength = (beforeSeven && fromBeepBox)\n                                                ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\n                                                : bits.readPartDuration();\n                                            curPart += restLength;\n                                        }\n                                    }\n                                    else {\n                                        let shape;\n                                        if (useOldShape) {\n                                            shape = recentShapes[shapeIndex];\n                                            recentShapes.splice(shapeIndex, 1);\n                                        }\n                                        else {\n                                            shape = {};\n                                            if (!largerChords) {\n                                                shape.pitchCount = 1;\n                                                while (shape.pitchCount < 4 && bits.read(1) == 1)\n                                                    shape.pitchCount++;\n                                            }\n                                            else {\n                                                if (bits.read(1) == 1) {\n                                                    shape.pitchCount = bits.read(3) + 2;\n                                                }\n                                                else {\n                                                    shape.pitchCount = 1;\n                                                }\n                                            }\n                                            if (fromTheepBox) {\n                                                if (bits.read(1) == 1) {\n                                                    shape.startOffset = bits.read(31);\n                                                }\n                                            }\n                                            else {\n                                                shape.startOffset = 0;\n                                            }\n                                            shape.pinCount = bits.readPinCount();\n                                            if (fromBeepBox) {\n                                                shape.initialSize = bits.read(2) * 2;\n                                            }\n                                            else if (!isModChannel) {\n                                                shape.initialSize = bits.read(bitsPerNoteSize);\n                                            }\n                                            else {\n                                                shape.initialSize = bits.read(11);\n                                            }\n                                            shape.pins = [];\n                                            shape.length = 0;\n                                            shape.bendCount = 0;\n                                            for (let j = 0; j < shape.pinCount; j++) {\n                                                let pinObj = {};\n                                                pinObj.pitchBend = bits.read(1) == 1;\n                                                if (pinObj.pitchBend)\n                                                    shape.bendCount++;\n                                                shape.length += (beforeSeven && fromBeepBox)\n                                                    ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\n                                                    : bits.readPartDuration();\n                                                pinObj.time = shape.length;\n                                                if (fromBeepBox) {\n                                                    pinObj.size = bits.read(2) * 2;\n                                                }\n                                                else if (!isModChannel) {\n                                                    pinObj.size = bits.read(bitsPerNoteSize);\n                                                }\n                                                else {\n                                                    pinObj.size = bits.read(11);\n                                                }\n                                                shape.pins.push(pinObj);\n                                            }\n                                        }\n                                        recentShapes.unshift(shape);\n                                        if (recentShapes.length > 10)\n                                            recentShapes.pop();\n                                        let note;\n                                        if (newNotes.length <= noteCount) {\n                                            note = new Note(0, curPart, curPart + shape.length, shape.initialSize, false, shape.startOffset);\n                                            newNotes[noteCount++] = note;\n                                        }\n                                        else {\n                                            note = newNotes[noteCount++];\n                                            note.start = curPart;\n                                            note.end = curPart + shape.length;\n                                            note.pins[0].size = shape.initialSize;\n                                        }\n                                        let pitch;\n                                        let pitchCount = 0;\n                                        const pitchBends = [];\n                                        for (let j = 0; j < shape.pitchCount + shape.bendCount; j++) {\n                                            const useOldPitch = bits.read(1) == 1;\n                                            if (!useOldPitch) {\n                                                const interval = bits.readPitchInterval();\n                                                pitch = lastPitch;\n                                                let intervalIter = interval;\n                                                while (intervalIter > 0) {\n                                                    pitch++;\n                                                    while (recentPitches.indexOf(pitch) != -1)\n                                                        pitch++;\n                                                    intervalIter--;\n                                                }\n                                                while (intervalIter < 0) {\n                                                    pitch--;\n                                                    while (recentPitches.indexOf(pitch) != -1)\n                                                        pitch--;\n                                                    intervalIter++;\n                                                }\n                                            }\n                                            else {\n                                                const pitchIndex = validateRange(0, recentPitches.length - 1, bits.read(recentPitchBitLength));\n                                                pitch = recentPitches[pitchIndex];\n                                                recentPitches.splice(pitchIndex, 1);\n                                            }\n                                            recentPitches.unshift(pitch);\n                                            if (recentPitches.length > recentPitchLength)\n                                                recentPitches.pop();\n                                            if (j < shape.pitchCount) {\n                                                note.pitches[pitchCount++] = pitch;\n                                            }\n                                            else {\n                                                pitchBends.push(pitch);\n                                            }\n                                            if (j == shape.pitchCount - 1) {\n                                                lastPitch = note.pitches[0];\n                                            }\n                                            else {\n                                                lastPitch = pitch;\n                                            }\n                                        }\n                                        note.pitches.length = pitchCount;\n                                        pitchBends.unshift(note.pitches[0]);\n                                        const noteIsForTempoMod = isModChannel && channel.instruments[newPattern.instruments[0]].modulators[Config.modCount - 1 - note.pitches[0]] === Config.modulators.dictionary[\"tempo\"].index;\n                                        let tempoOffset = 0;\n                                        if (shouldCorrectTempoMods && noteIsForTempoMod) {\n                                            tempoOffset = jummboxTempoMin - Config.tempoMin;\n                                        }\n                                        if (isModChannel) {\n                                            note.pins[0].size += tempoOffset;\n                                            note.pins[0].size *= detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]];\n                                        }\n                                        let pinCount = 1;\n                                        for (const pinObj of shape.pins) {\n                                            if (pinObj.pitchBend)\n                                                pitchBends.shift();\n                                            const interval = pitchBends[0] - note.pitches[0];\n                                            if (note.pins.length <= pinCount) {\n                                                if (isModChannel) {\n                                                    note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]] + tempoOffset);\n                                                }\n                                                else {\n                                                    note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size);\n                                                }\n                                            }\n                                            else {\n                                                const pin = note.pins[pinCount++];\n                                                pin.interval = interval;\n                                                pin.time = pinObj.time;\n                                                if (isModChannel) {\n                                                    pin.size = pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]] + tempoOffset;\n                                                }\n                                                else {\n                                                    pin.size = pinObj.size;\n                                                }\n                                            }\n                                        }\n                                        note.pins.length = pinCount;\n                                        if (note.start == 0) {\n                                            if (!((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox))) {\n                                                note.continuesLastPattern = (bits.read(1) == 1);\n                                            }\n                                            else {\n                                                if ((beforeFour && !fromUltraBox && !fromSlarmoosBox) || fromBeepBox) {\n                                                    note.continuesLastPattern = false;\n                                                }\n                                                else {\n                                                    note.continuesLastPattern = channel.instruments[newPattern.instruments[0]].legacyTieOver;\n                                                }\n                                            }\n                                        }\n                                        curPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\n                                    }\n                                }\n                                newNotes.length = noteCount;\n                            }\n                            if (beforeThree && fromBeepBox) {\n                                break;\n                            }\n                            else {\n                                channelIndex++;\n                                if (channelIndex >= this.getChannelCount())\n                                    break;\n                            }\n                        }\n                        if (((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) && songReverbIndex >= 0) {\n                            for (let channelIndex = 0; channelIndex < this.channels.length; channelIndex++) {\n                                for (let instrumentIndex = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\n                                    const instrument = this.channels[channelIndex].instruments[instrumentIndex];\n                                    if (instrument.effectsIncludeType(0)) {\n                                    }\n                                    if (songReverbChannel == channelIndex && songReverbInstrument == instrumentIndex) {\n                                        const patternIndex = this.channels[channelIndex].bars[0];\n                                        if (patternIndex > 0) {\n                                            const pattern = this.channels[channelIndex].patterns[patternIndex - 1];\n                                            let lowestPart = 6;\n                                            for (const note of pattern.notes) {\n                                                if (note.pitches[0] == Config.modCount - 1 - songReverbIndex) {\n                                                    lowestPart = Math.min(lowestPart, note.start);\n                                                }\n                                            }\n                                            if (lowestPart > 0) {\n                                                pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, lowestPart, legacyGlobalReverb));\n                                            }\n                                        }\n                                        else {\n                                            if (this.channels[channelIndex].patterns.length < Config.barCountMax) {\n                                                const pattern = new Pattern();\n                                                this.channels[channelIndex].patterns.push(pattern);\n                                                this.channels[channelIndex].bars[0] = this.channels[channelIndex].patterns.length;\n                                                if (this.channels[channelIndex].patterns.length > this.patternsPerChannel) {\n                                                    for (let chn = 0; chn < this.channels.length; chn++) {\n                                                        if (this.channels[chn].patterns.length <= this.patternsPerChannel) {\n                                                            this.channels[chn].patterns.push(new Pattern());\n                                                        }\n                                                    }\n                                                    this.patternsPerChannel++;\n                                                }\n                                                pattern.instruments.length = 1;\n                                                pattern.instruments[0] = songReverbInstrument;\n                                                pattern.notes.length = 0;\n                                                pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, 6, legacyGlobalReverb));\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                default:\n                    {\n                        throw new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1) + \" \" + compressed.substring(0, charIndex));\n                    }\n                    break;\n            }\n        if (Config.willReloadForCustomSamples) {\n            window.location.hash = this.toBase64String();\n            setTimeout(() => { location.reload(); }, 50);\n        }\n    }\n    static _isProperUrl(string) {\n        try {\n            if (OFFLINE) {\n                return Boolean(string);\n            }\n            else {\n                return Boolean(new URL(string));\n            }\n        }\n        catch (x) {\n            return false;\n        }\n    }\n    static _parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax) {\n        const defaultIndex = 0;\n        const defaultIntegratedSamplesL = Config.chipWaves[defaultIndex].samples;\n        const defaultIntegratedSamplesR = Config.chipWaves[defaultIndex].samplesR || Config.chipWaves[defaultIndex].samples;\n        const defaultSamplesL = Config.rawRawChipWaves[defaultIndex].samples;\n        const defaultSamplesR = Config.rawRawChipWaves[defaultIndex].samplesR || Config.chipWaves[defaultIndex].samples;\n        const customSampleUrlIndex = customSampleUrls.length;\n        customSampleUrls.push(url);\n        const chipWaveIndex = Config.chipWaves.length;\n        let urlSliced = url;\n        let customSampleRate = 44100;\n        let isCustomPercussive = false;\n        let customRootKey = 60;\n        let presetIsUsingAdvancedLoopControls = false;\n        let presetChipWaveLoopStart = null;\n        let presetChipWaveLoopEnd = null;\n        let presetChipWaveStartOffset = null;\n        let presetChipWaveLoopMode = null;\n        let presetChipWavePlayBackwards = false;\n        let presetChipWaveInStereo = false;\n        let parsedSampleOptions = false;\n        let optionsStartIndex = url.indexOf(\"!\");\n        let optionsEndIndex = -1;\n        if (optionsStartIndex === 0) {\n            optionsEndIndex = url.indexOf(\"!\", optionsStartIndex + 1);\n            if (optionsEndIndex !== -1) {\n                const rawOptions = url.slice(optionsStartIndex + 1, optionsEndIndex).split(\",\");\n                for (const rawOption of rawOptions) {\n                    const optionCode = rawOption.charAt(0);\n                    const optionData = rawOption.slice(1, rawOption.length);\n                    if (optionCode === \"s\") {\n                        customSampleRate = clamp(8000, 96000 + 1, parseFloatWithDefault(optionData, 44100));\n                    }\n                    else if (optionCode === \"r\") {\n                        customRootKey = parseFloatWithDefault(optionData, 60);\n                    }\n                    else if (optionCode === \"p\") {\n                        isCustomPercussive = true;\n                    }\n                    else if (optionCode === \"a\") {\n                        presetChipWaveLoopStart = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveLoopStart != null) {\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    }\n                    else if (optionCode === \"b\") {\n                        presetChipWaveLoopEnd = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveLoopEnd != null) {\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    }\n                    else if (optionCode === \"c\") {\n                        presetChipWaveStartOffset = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveStartOffset != null) {\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    }\n                    else if (optionCode === \"d\") {\n                        presetChipWaveLoopMode = parseIntWithDefault(optionData, null);\n                        if (presetChipWaveLoopMode != null) {\n                            presetChipWaveLoopMode = clamp(0, 3 + 1, presetChipWaveLoopMode);\n                            presetIsUsingAdvancedLoopControls = true;\n                        }\n                    }\n                    else if (optionCode === \"e\") {\n                        presetChipWavePlayBackwards = true;\n                        presetIsUsingAdvancedLoopControls = true;\n                    }\n                    else if (optionCode === \"f\") {\n                        presetChipWaveInStereo = true;\n                        presetIsUsingAdvancedLoopControls = true;\n                    }\n                }\n                urlSliced = url.slice(optionsEndIndex + 1, url.length);\n                parsedSampleOptions = true;\n            }\n        }\n        let parsedUrl = null;\n        if (Song._isProperUrl(urlSliced)) {\n            if (OFFLINE) {\n                parsedUrl = urlSliced;\n            }\n            else {\n                parsedUrl = new URL(urlSliced);\n            }\n        }\n        else {\n            alert(url + \" is not a valid url\");\n            return false;\n        }\n        if (parseOldSyntax) {\n            if (!parsedSampleOptions && parsedUrl != null) {\n                if (url.indexOf(\"@\") != -1) {\n                    urlSliced = url.replaceAll(\"@\", \"\");\n                    if (OFFLINE) {\n                        parsedUrl = urlSliced;\n                    }\n                    else {\n                        parsedUrl = new URL(urlSliced);\n                    }\n                    isCustomPercussive = true;\n                }\n                function sliceForSampleRate() {\n                    urlSliced = url.slice(0, url.indexOf(\",\"));\n                    if (OFFLINE) {\n                        parsedUrl = urlSliced;\n                    }\n                    else {\n                        parsedUrl = new URL(urlSliced);\n                    }\n                    customSampleRate = clamp(8000, 96000 + 1, parseFloatWithDefault(url.slice(url.indexOf(\",\") + 1), 44100));\n                }\n                function sliceForRootKey() {\n                    urlSliced = url.slice(0, url.indexOf(\"!\"));\n                    if (OFFLINE) {\n                        parsedUrl = urlSliced;\n                    }\n                    else {\n                        parsedUrl = new URL(urlSliced);\n                    }\n                    customRootKey = parseFloatWithDefault(url.slice(url.indexOf(\"!\") + 1), 60);\n                }\n                if (url.indexOf(\",\") != -1 && url.indexOf(\"!\") != -1) {\n                    if (url.indexOf(\",\") < url.indexOf(\"!\")) {\n                        sliceForRootKey();\n                        sliceForSampleRate();\n                    }\n                    else {\n                        sliceForSampleRate();\n                        sliceForRootKey();\n                    }\n                }\n                else {\n                    if (url.indexOf(\",\") != -1) {\n                        sliceForSampleRate();\n                    }\n                    if (url.indexOf(\"!\") != -1) {\n                        sliceForRootKey();\n                    }\n                }\n            }\n        }\n        if (parsedUrl != null) {\n            let urlWithNamedOptions = urlSliced;\n            const namedOptions = [];\n            if (customSampleRate !== 44100)\n                namedOptions.push(\"s\" + customSampleRate);\n            if (customRootKey !== 60)\n                namedOptions.push(\"r\" + customRootKey);\n            if (isCustomPercussive)\n                namedOptions.push(\"p\");\n            if (presetIsUsingAdvancedLoopControls) {\n                if (presetChipWaveLoopStart != null)\n                    namedOptions.push(\"a\" + presetChipWaveLoopStart);\n                if (presetChipWaveLoopEnd != null)\n                    namedOptions.push(\"b\" + presetChipWaveLoopEnd);\n                if (presetChipWaveStartOffset != null)\n                    namedOptions.push(\"c\" + presetChipWaveStartOffset);\n                if (presetChipWaveLoopMode != null)\n                    namedOptions.push(\"d\" + presetChipWaveLoopMode);\n                if (presetChipWavePlayBackwards)\n                    namedOptions.push(\"e\");\n                if (presetChipWaveInStereo)\n                    namedOptions.push(\"f\");\n            }\n            if (namedOptions.length > 0) {\n                urlWithNamedOptions = \"!\" + namedOptions.join(\",\") + \"!\" + urlSliced;\n            }\n            customSampleUrls[customSampleUrlIndex] = urlWithNamedOptions;\n            let name;\n            if (OFFLINE) {\n                name = decodeURIComponent(parsedUrl.replace(/^([^\\/]*\\/)+/, \"\"));\n            }\n            else {\n                name = decodeURIComponent(parsedUrl.pathname.replace(/^([^\\/]*\\/)+/, \"\"));\n            }\n            const expression = 1.0;\n            Config.chipWaves[chipWaveIndex] = {\n                name: name,\n                expression: expression,\n                isCustomSampled: true,\n                isPercussion: isCustomPercussive,\n                rootKey: customRootKey,\n                sampleRate: customSampleRate,\n                samples: defaultIntegratedSamplesL,\n                samplesR: defaultIntegratedSamplesR,\n                index: chipWaveIndex,\n            };\n            Config.rawChipWaves[chipWaveIndex] = {\n                name: name,\n                expression: expression,\n                isCustomSampled: true,\n                isPercussion: isCustomPercussive,\n                rootKey: customRootKey,\n                sampleRate: customSampleRate,\n                samples: defaultSamplesL,\n                samplesR: defaultSamplesR,\n                index: chipWaveIndex,\n            };\n            Config.rawRawChipWaves[chipWaveIndex] = {\n                name: name,\n                expression: expression,\n                isCustomSampled: true,\n                isPercussion: isCustomPercussive,\n                rootKey: customRootKey,\n                sampleRate: customSampleRate,\n                samples: defaultSamplesL,\n                samplesR: defaultSamplesR,\n                index: chipWaveIndex,\n            };\n            const customSamplePresetSettings = {\n                \"type\": \"chip\",\n                \"eqFilter\": [],\n                \"effects\": [],\n                \"mdeffects\": [],\n                \"transition\": \"normal\",\n                \"fadeInSeconds\": 0,\n                \"fadeOutTicks\": -3,\n                \"chord\": \"harmony\",\n                \"wave\": name,\n                \"unison\": \"none\",\n                \"envelopes\": [],\n                \"chipWaveInStereo\": true,\n            };\n            if (presetIsUsingAdvancedLoopControls) {\n                customSamplePresetSettings[\"isUsingAdvancedLoopControls\"] = true;\n                customSamplePresetSettings[\"chipWaveLoopStart\"] = presetChipWaveLoopStart != null ? presetChipWaveLoopStart : 0;\n                customSamplePresetSettings[\"chipWaveLoopEnd\"] = presetChipWaveLoopEnd != null ? presetChipWaveLoopEnd : 2;\n                customSamplePresetSettings[\"chipWaveLoopMode\"] = presetChipWaveLoopMode != null ? presetChipWaveLoopMode : 0;\n                customSamplePresetSettings[\"chipWavePlayBackwards\"] = presetChipWavePlayBackwards;\n                customSamplePresetSettings[\"chipWaveStartOffset\"] = presetChipWaveStartOffset != null ? presetChipWaveStartOffset : 0;\n            }\n            const customSamplePreset = {\n                index: 0,\n                name: name,\n                midiProgram: 80,\n                settings: customSamplePresetSettings,\n            };\n            customSamplePresets.push(customSamplePreset);\n            if (!Config.willReloadForCustomSamples) {\n                const rawLoopOptions = {\n                    \"isUsingAdvancedLoopControls\": presetIsUsingAdvancedLoopControls,\n                    \"chipWaveLoopStart\": presetChipWaveLoopStart,\n                    \"chipWaveLoopEnd\": presetChipWaveLoopEnd,\n                    \"chipWaveLoopMode\": presetChipWaveLoopMode,\n                    \"chipWavePlayBackwards\": presetChipWavePlayBackwards,\n                    \"chipWaveStartOffset\": presetChipWaveStartOffset,\n                };\n                startLoadingSample(urlSliced, chipWaveIndex, customSamplePresetSettings, rawLoopOptions, customSampleRate);\n            }\n            sampleLoadingState.statusTable[chipWaveIndex] = 0;\n            sampleLoadingState.urlTable[chipWaveIndex] = urlSliced;\n            sampleLoadingState.totalSamples++;\n        }\n        return true;\n    }\n    static _restoreChipWaveListToDefault() {\n        Config.chipWaves = toNameMap(Config.chipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\n        Config.rawChipWaves = toNameMap(Config.rawChipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\n        Config.rawRawChipWaves = toNameMap(Config.rawRawChipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\n    }\n    static _clearSamples() {\n        EditorConfig.customSamples = null;\n        Song._restoreChipWaveListToDefault();\n        sampleLoadingState.statusTable = {};\n        sampleLoadingState.urlTable = {};\n        sampleLoadingState.totalSamples = 0;\n        sampleLoadingState.samplesLoaded = 0;\n        sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(sampleLoadingState.totalSamples, sampleLoadingState.samplesLoaded));\n    }\n    toJsonObject(enableIntro = true, loopCount = 1, enableOutro = true) {\n        const channelArray = [];\n        for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            const channel = this.channels[channelIndex];\n            const instrumentArray = [];\n            const isNoiseChannel = this.getChannelIsNoise(channelIndex);\n            const isModChannel = this.getChannelIsMod(channelIndex);\n            for (const instrument of channel.instruments) {\n                instrumentArray.push(instrument.toJsonObject());\n            }\n            const patternArray = [];\n            for (const pattern of channel.patterns) {\n                patternArray.push(pattern.toJsonObject(this, channel, isModChannel));\n            }\n            const sequenceArray = [];\n            if (enableIntro)\n                for (let i = 0; i < this.loopStart; i++) {\n                    sequenceArray.push(channel.bars[i]);\n                }\n            for (let l = 0; l < loopCount; l++)\n                for (let i = this.loopStart; i < this.loopStart + this.loopLength; i++) {\n                    sequenceArray.push(channel.bars[i]);\n                }\n            if (enableOutro)\n                for (let i = this.loopStart + this.loopLength; i < this.barCount; i++) {\n                    sequenceArray.push(channel.bars[i]);\n                }\n            const channelObject = {\n                \"type\": isModChannel ? \"mod\" : (isNoiseChannel ? \"drum\" : \"pitch\"),\n                \"name\": channel.name,\n                \"instruments\": instrumentArray,\n                \"patterns\": patternArray,\n                \"sequence\": sequenceArray,\n            };\n            if (!isNoiseChannel) {\n                channelObject[\"octaveScrollBar\"] = channel.octave - 1;\n            }\n            channelArray.push(channelObject);\n        }\n        const result = {\n            \"name\": this.title,\n            \"format\": Song._format,\n            \"version\": Song._latestSlarmoosBoxVersion,\n            \"scale\": Config.scales[this.scale].name,\n            \"customScale\": this.scaleCustom,\n            \"key\": Config.keys[this.key].name,\n            \"keyOctave\": this.octave,\n            \"introBars\": this.loopStart,\n            \"loopBars\": this.loopLength,\n            \"beatsPerBar\": this.beatsPerBar,\n            \"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\n            \"beatsPerMinute\": this.tempo,\n            \"reverb\": this.reverb,\n            \"masterGain\": this.masterGain,\n            \"compressionThreshold\": this.compressionThreshold,\n            \"limitThreshold\": this.limitThreshold,\n            \"limitDecay\": this.limitDecay,\n            \"limitRise\": this.limitRise,\n            \"limitRatio\": this.limitRatio,\n            \"compressionRatio\": this.compressionRatio,\n            \"songEq\": this.eqFilter.toJsonObject(),\n            \"layeredInstruments\": this.layeredInstruments,\n            \"patternInstruments\": this.patternInstruments,\n            \"channels\": channelArray,\n        };\n        for (let i = 0; i < Config.filterMorphCount - 1; i++) {\n            result[\"songEq\" + i] = this.eqSubFilters[i];\n        }\n        if (EditorConfig.customSamples != null && EditorConfig.customSamples.length > 0) {\n            result[\"customSamples\"] = EditorConfig.customSamples;\n        }\n        return result;\n    }\n    fromJsonObject(jsonObject, jsonFormat = \"auto\") {\n        this.initToDefault(true);\n        if (!jsonObject)\n            return;\n        if (jsonFormat == \"auto\") {\n            if (jsonObject[\"format\"] == \"BeepBox\") {\n                if (jsonObject[\"riff\"] != undefined) {\n                    jsonFormat = \"modbox\";\n                }\n                if (jsonObject[\"masterGain\"] != undefined) {\n                    jsonFormat = \"jummbox\";\n                }\n            }\n        }\n        const format = (jsonFormat == \"auto\" ? jsonObject[\"format\"] : jsonFormat).toLowerCase();\n        if (jsonObject[\"name\"] != undefined) {\n            this.title = jsonObject[\"name\"];\n        }\n        if (jsonObject[\"customSamples\"] != undefined) {\n            const customSamples = jsonObject[\"customSamples\"];\n            if (EditorConfig.customSamples == null || EditorConfig.customSamples.join(\", \") != customSamples.join(\", \")) {\n                Config.willReloadForCustomSamples = true;\n                Song._restoreChipWaveListToDefault();\n                let willLoadLegacySamples = false;\n                let willLoadNintariboxSamples = false;\n                let willLoadMarioPaintboxSamples = false;\n                const customSampleUrls = [];\n                const customSamplePresets = [];\n                for (const url of customSamples) {\n                    if (url.toLowerCase() === \"legacysamples\") {\n                        if (!willLoadLegacySamples) {\n                            willLoadLegacySamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(0);\n                        }\n                    }\n                    else if (url.toLowerCase() === \"nintariboxsamples\") {\n                        if (!willLoadNintariboxSamples) {\n                            willLoadNintariboxSamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(1);\n                        }\n                    }\n                    else if (url.toLowerCase() === \"mariopaintboxsamples\") {\n                        if (!willLoadMarioPaintboxSamples) {\n                            willLoadMarioPaintboxSamples = true;\n                            customSampleUrls.push(url);\n                            loadBuiltInSamples(2);\n                        }\n                    }\n                    else {\n                        const parseOldSyntax = false;\n                        Song._parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax);\n                    }\n                }\n                if (customSampleUrls.length > 0) {\n                    EditorConfig.customSamples = customSampleUrls;\n                }\n                if (customSamplePresets.length > 0) {\n                    const customSamplePresetsMap = toNameMap(customSamplePresets);\n                    EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {\n                        name: \"Custom Sample Presets\",\n                        presets: customSamplePresetsMap,\n                        index: EditorConfig.presetCategories.length,\n                    };\n                }\n            }\n        }\n        else {\n            let shouldLoadLegacySamples = false;\n            if (jsonObject[\"channels\"] != undefined) {\n                for (let channelIndex = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\n                    const channelObject = jsonObject[\"channels\"][channelIndex];\n                    if (channelObject[\"type\"] !== \"pitch\") {\n                        continue;\n                    }\n                    if (Array.isArray(channelObject[\"instruments\"])) {\n                        const instrumentObjects = channelObject[\"instruments\"];\n                        for (let i = 0; i < instrumentObjects.length; i++) {\n                            const instrumentObject = instrumentObjects[i];\n                            if (instrumentObject[\"type\"] !== \"chip\") {\n                                continue;\n                            }\n                            if (instrumentObject[\"wave\"] == null) {\n                                continue;\n                            }\n                            const waveName = instrumentObject[\"wave\"];\n                            const names = [\n                                \"paandorasbox kick\",\n                                \"paandorasbox snare\",\n                                \"paandorasbox piano1\",\n                                \"paandorasbox WOW\",\n                                \"paandorasbox overdrive\",\n                                \"paandorasbox trumpet\",\n                                \"paandorasbox saxophone\",\n                                \"paandorasbox orchestrahit\",\n                                \"paandorasbox detatched violin\",\n                                \"paandorasbox synth\",\n                                \"paandorasbox sonic3snare\",\n                                \"paandorasbox come on\",\n                                \"paandorasbox choir\",\n                                \"paandorasbox overdriveguitar\",\n                                \"paandorasbox flute\",\n                                \"paandorasbox legato violin\",\n                                \"paandorasbox tremolo violin\",\n                                \"paandorasbox amen break\",\n                                \"paandorasbox pizzicato violin\",\n                                \"paandorasbox tim allen grunt\",\n                                \"paandorasbox tuba\",\n                                \"paandorasbox loopingcymbal\",\n                                \"paandorasbox standardkick\",\n                                \"paandorasbox standardsnare\",\n                                \"paandorasbox closedhihat\",\n                                \"paandorasbox foothihat\",\n                                \"paandorasbox openhihat\",\n                                \"paandorasbox crashcymbal\",\n                                \"paandorasbox pianoC4\",\n                                \"paandorasbox liver pad\",\n                                \"paandorasbox marimba\",\n                                \"paandorasbox susdotwav\",\n                                \"paandorasbox wackyboxtts\",\n                                \"paandorasbox peppersteak_1\",\n                                \"paandorasbox peppersteak_2\",\n                                \"paandorasbox vinyl_noise\",\n                                \"paandorasbeta slap bass\",\n                                \"paandorasbeta HD EB overdrive guitar\",\n                                \"paandorasbeta sunsoft bass\",\n                                \"paandorasbeta masculine choir\",\n                                \"paandorasbeta feminine choir\",\n                                \"paandorasbeta tololoche\",\n                                \"paandorasbeta harp\",\n                                \"paandorasbeta pan flute\",\n                                \"paandorasbeta krumhorn\",\n                                \"paandorasbeta timpani\",\n                                \"paandorasbeta crowd hey\",\n                                \"paandorasbeta wario land 4 brass\",\n                                \"paandorasbeta wario land 4 rock organ\",\n                                \"paandorasbeta wario land 4 DAOW\",\n                                \"paandorasbeta wario land 4 hour chime\",\n                                \"paandorasbeta wario land 4 tick\",\n                                \"paandorasbeta kirby kick\",\n                                \"paandorasbeta kirby snare\",\n                                \"paandorasbeta kirby bongo\",\n                                \"paandorasbeta kirby click\",\n                                \"paandorasbeta sonor kick\",\n                                \"paandorasbeta sonor snare\",\n                                \"paandorasbeta sonor snare (left hand)\",\n                                \"paandorasbeta sonor snare (right hand)\",\n                                \"paandorasbeta sonor high tom\",\n                                \"paandorasbeta sonor low tom\",\n                                \"paandorasbeta sonor hihat (closed)\",\n                                \"paandorasbeta sonor hihat (half opened)\",\n                                \"paandorasbeta sonor hihat (open)\",\n                                \"paandorasbeta sonor hihat (open tip)\",\n                                \"paandorasbeta sonor hihat (pedal)\",\n                                \"paandorasbeta sonor crash\",\n                                \"paandorasbeta sonor crash (tip)\",\n                                \"paandorasbeta sonor ride\"\n                            ];\n                            const oldNames = [\n                                \"pandoraasbox kick\",\n                                \"pandoraasbox snare\",\n                                \"pandoraasbox piano1\",\n                                \"pandoraasbox WOW\",\n                                \"pandoraasbox overdrive\",\n                                \"pandoraasbox trumpet\",\n                                \"pandoraasbox saxophone\",\n                                \"pandoraasbox orchestrahit\",\n                                \"pandoraasbox detatched violin\",\n                                \"pandoraasbox synth\",\n                                \"pandoraasbox sonic3snare\",\n                                \"pandoraasbox come on\",\n                                \"pandoraasbox choir\",\n                                \"pandoraasbox overdriveguitar\",\n                                \"pandoraasbox flute\",\n                                \"pandoraasbox legato violin\",\n                                \"pandoraasbox tremolo violin\",\n                                \"pandoraasbox amen break\",\n                                \"pandoraasbox pizzicato violin\",\n                                \"pandoraasbox tim allen grunt\",\n                                \"pandoraasbox tuba\",\n                                \"pandoraasbox loopingcymbal\",\n                                \"pandoraasbox standardkick\",\n                                \"pandoraasbox standardsnare\",\n                                \"pandoraasbox closedhihat\",\n                                \"pandoraasbox foothihat\",\n                                \"pandoraasbox openhihat\",\n                                \"pandoraasbox crashcymbal\",\n                                \"pandoraasbox pianoC4\",\n                                \"pandoraasbox liver pad\",\n                                \"pandoraasbox marimba\",\n                                \"pandoraasbox susdotwav\",\n                                \"pandoraasbox wackyboxtts\",\n                                \"pandoraasbox peppersteak_1\",\n                                \"pandoraasbox peppersteak_2\",\n                                \"pandoraasbox vinyl_noise\",\n                                \"pandoraasbeta slap bass\",\n                                \"pandoraasbeta HD EB overdrive guitar\",\n                                \"pandoraasbeta sunsoft bass\",\n                                \"pandoraasbeta masculine choir\",\n                                \"pandoraasbeta feminine choir\",\n                                \"pandoraasbeta tololoche\",\n                                \"pandoraasbeta harp\",\n                                \"pandoraasbeta pan flute\",\n                                \"pandoraasbeta krumhorn\",\n                                \"pandoraasbeta timpani\",\n                                \"pandoraasbeta crowd hey\",\n                                \"pandoraasbeta wario land 4 brass\",\n                                \"pandoraasbeta wario land 4 rock organ\",\n                                \"pandoraasbeta wario land 4 DAOW\",\n                                \"pandoraasbeta wario land 4 hour chime\",\n                                \"pandoraasbeta wario land 4 tick\",\n                                \"pandoraasbeta kirby kick\",\n                                \"pandoraasbeta kirby snare\",\n                                \"pandoraasbeta kirby bongo\",\n                                \"pandoraasbeta kirby click\",\n                                \"pandoraasbeta sonor kick\",\n                                \"pandoraasbeta sonor snare\",\n                                \"pandoraasbeta sonor snare (left hand)\",\n                                \"pandoraasbeta sonor snare (right hand)\",\n                                \"pandoraasbeta sonor high tom\",\n                                \"pandoraasbeta sonor low tom\",\n                                \"pandoraasbeta sonor hihat (closed)\",\n                                \"pandoraasbeta sonor hihat (half opened)\",\n                                \"pandoraasbeta sonor hihat (open)\",\n                                \"pandoraasbeta sonor hihat (open tip)\",\n                                \"pandoraasbeta sonor hihat (pedal)\",\n                                \"pandoraasbeta sonor crash\",\n                                \"pandoraasbeta sonor crash (tip)\",\n                                \"pandoraasbeta sonor ride\"\n                            ];\n                            const veryOldNames = [\n                                \"kick\",\n                                \"snare\",\n                                \"piano1\",\n                                \"WOW\",\n                                \"overdrive\",\n                                \"trumpet\",\n                                \"saxophone\",\n                                \"orchestrahit\",\n                                \"detatched violin\",\n                                \"synth\",\n                                \"sonic3snare\",\n                                \"come on\",\n                                \"choir\",\n                                \"overdriveguitar\",\n                                \"flute\",\n                                \"legato violin\",\n                                \"tremolo violin\",\n                                \"amen break\",\n                                \"pizzicato violin\",\n                                \"tim allen grunt\",\n                                \"tuba\",\n                                \"loopingcymbal\",\n                                \"standardkick\",\n                                \"standardsnare\",\n                                \"closedhihat\",\n                                \"foothihat\",\n                                \"openhihat\",\n                                \"crashcymbal\",\n                                \"pianoC4\",\n                                \"liver pad\",\n                                \"marimba\",\n                                \"susdotwav\",\n                                \"wackyboxtts\"\n                            ];\n                            if (names.includes(waveName)) {\n                                shouldLoadLegacySamples = true;\n                            }\n                            else if (oldNames.includes(waveName)) {\n                                shouldLoadLegacySamples = true;\n                                instrumentObject[\"wave\"] = names[oldNames.findIndex(x => x === waveName)];\n                            }\n                            else if (veryOldNames.includes(waveName)) {\n                                if ((waveName === \"trumpet\" || waveName === \"flute\") && (format != \"paandorasbox\")) {\n                                }\n                                else {\n                                    shouldLoadLegacySamples = true;\n                                    instrumentObject[\"wave\"] = names[veryOldNames.findIndex(x => x === waveName)];\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (shouldLoadLegacySamples) {\n                Config.willReloadForCustomSamples = true;\n                Song._restoreChipWaveListToDefault();\n                loadBuiltInSamples(0);\n                EditorConfig.customSamples = [\"legacySamples\"];\n            }\n            else {\n                if (EditorConfig.customSamples != null && EditorConfig.customSamples.length > 0) {\n                    Config.willReloadForCustomSamples = true;\n                    Song._clearSamples();\n                }\n            }\n        }\n        this.scale = 0;\n        if (jsonObject[\"scale\"] != undefined) {\n            const oldScaleNames = {\n                \"romani :)\": \"double harmonic :)\",\n                \"romani :(\": \"double harmonic :(\",\n                \"dbl harmonic :)\": \"double harmonic :)\",\n                \"dbl harmonic :(\": \"double harmonic :(\",\n                \"enigma\": \"strange\",\n            };\n            const scaleName = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\n            const scale = Config.scales.findIndex(scale => scale.name == scaleName);\n            if (scale != -1)\n                this.scale = scale;\n            if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\n                if (jsonObject[\"customScale\"] != undefined) {\n                    for (var i of jsonObject[\"customScale\"].keys()) {\n                        this.scaleCustom[i] = jsonObject[\"customScale\"][i];\n                    }\n                }\n            }\n        }\n        if (jsonObject[\"key\"] != undefined) {\n            if (typeof (jsonObject[\"key\"]) == \"number\") {\n                this.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\n            }\n            else if (typeof (jsonObject[\"key\"]) == \"string\") {\n                const key = jsonObject[\"key\"];\n                if (key === \"C+\") {\n                    this.key = 0;\n                    this.octave = 1;\n                }\n                else if (key === \"G- (actually F#-)\") {\n                    this.key = 6;\n                    this.octave = -1;\n                }\n                else if (key === \"C-\") {\n                    this.key = 0;\n                    this.octave = -1;\n                }\n                else if (key === \"oh no (F-)\") {\n                    this.key = 5;\n                    this.octave = -1;\n                }\n                else {\n                    const letter = key.charAt(0).toUpperCase();\n                    const symbol = key.charAt(1).toLowerCase();\n                    const letterMap = { \"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11 };\n                    const accidentalMap = { \"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1 };\n                    let index = letterMap[letter];\n                    const offset = accidentalMap[symbol];\n                    if (index != undefined) {\n                        if (offset != undefined)\n                            index += offset;\n                        if (index < 0)\n                            index += 12;\n                        index = index % 12;\n                        this.key = index;\n                    }\n                }\n            }\n        }\n        if (jsonObject[\"beatsPerMinute\"] != undefined) {\n            this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\n        }\n        if (jsonObject[\"keyOctave\"] != undefined) {\n            this.octave = clamp(Config.octaveMin, Config.octaveMax + 1, jsonObject[\"keyOctave\"] | 0);\n        }\n        let legacyGlobalReverb = 0;\n        if (jsonObject[\"reverb\"] != undefined) {\n            legacyGlobalReverb = clamp(0, 32, jsonObject[\"reverb\"] | 0);\n        }\n        if (jsonObject[\"beatsPerBar\"] != undefined) {\n            this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\n        }\n        let importedPartsPerBeat = 4;\n        if (jsonObject[\"ticksPerBeat\"] != undefined) {\n            importedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\n            this.rhythm = Config.rhythms.findIndex(rhythm => rhythm.stepsPerBeat == importedPartsPerBeat);\n            if (this.rhythm == -1) {\n                this.rhythm = 1;\n            }\n        }\n        if (jsonObject[\"masterGain\"] != undefined) {\n            this.masterGain = Math.max(0.0, Math.min(5.0, jsonObject[\"masterGain\"] || 0));\n        }\n        else {\n            this.masterGain = 1.0;\n        }\n        if (jsonObject[\"limitThreshold\"] != undefined) {\n            this.limitThreshold = Math.max(0.0, Math.min(2.0, jsonObject[\"limitThreshold\"] || 0));\n        }\n        else {\n            this.limitThreshold = 1.0;\n        }\n        if (jsonObject[\"compressionThreshold\"] != undefined) {\n            this.compressionThreshold = Math.max(0.0, Math.min(1.1, jsonObject[\"compressionThreshold\"] || 0));\n        }\n        else {\n            this.compressionThreshold = 1.0;\n        }\n        if (jsonObject[\"limitRise\"] != undefined) {\n            this.limitRise = Math.max(2000.0, Math.min(10000.0, jsonObject[\"limitRise\"] || 0));\n        }\n        else {\n            this.limitRise = 4000.0;\n        }\n        if (jsonObject[\"limitDecay\"] != undefined) {\n            this.limitDecay = Math.max(1.0, Math.min(30.0, jsonObject[\"limitDecay\"] || 0));\n        }\n        else {\n            this.limitDecay = 4.0;\n        }\n        if (jsonObject[\"limitRatio\"] != undefined) {\n            this.limitRatio = Math.max(0.0, Math.min(11.0, jsonObject[\"limitRatio\"] || 0));\n        }\n        else {\n            this.limitRatio = 1.0;\n        }\n        if (jsonObject[\"compressionRatio\"] != undefined) {\n            this.compressionRatio = Math.max(0.0, Math.min(1.168, jsonObject[\"compressionRatio\"] || 0));\n        }\n        else {\n            this.compressionRatio = 1.0;\n        }\n        if (jsonObject[\"songEq\"] != undefined) {\n            this.eqFilter.fromJsonObject(jsonObject[\"songEq\"]);\n        }\n        else {\n            this.eqFilter.reset();\n        }\n        for (let i = 0; i < Config.filterMorphCount - 1; i++) {\n            if (jsonObject[\"songEq\" + i]) {\n                this.eqSubFilters[i] = jsonObject[\"songEq\" + i];\n            }\n            else {\n                this.eqSubFilters[i] = null;\n            }\n        }\n        let maxInstruments = 1;\n        let maxPatterns = 1;\n        let maxBars = 1;\n        if (jsonObject[\"channels\"] != undefined) {\n            for (const channelObject of jsonObject[\"channels\"]) {\n                if (channelObject[\"instruments\"])\n                    maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\n                if (channelObject[\"patterns\"])\n                    maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\n                if (channelObject[\"sequence\"])\n                    maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\n            }\n        }\n        if (jsonObject[\"layeredInstruments\"] != undefined) {\n            this.layeredInstruments = !!jsonObject[\"layeredInstruments\"];\n        }\n        else {\n            this.layeredInstruments = false;\n        }\n        if (jsonObject[\"patternInstruments\"] != undefined) {\n            this.patternInstruments = !!jsonObject[\"patternInstruments\"];\n        }\n        else {\n            this.patternInstruments = (maxInstruments > 1);\n        }\n        this.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\n        this.barCount = Math.min(maxBars, Config.barCountMax);\n        if (jsonObject[\"introBars\"] != undefined) {\n            this.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\n        }\n        if (jsonObject[\"loopBars\"] != undefined) {\n            this.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\n        }\n        const newPitchChannels = [];\n        const newNoiseChannels = [];\n        const newModChannels = [];\n        if (jsonObject[\"channels\"] != undefined) {\n            for (let channelIndex = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\n                let channelObject = jsonObject[\"channels\"][channelIndex];\n                const channel = new Channel();\n                let isNoiseChannel = false;\n                let isModChannel = false;\n                if (channelObject[\"type\"] != undefined) {\n                    isNoiseChannel = (channelObject[\"type\"] == \"drum\");\n                    isModChannel = (channelObject[\"type\"] == \"mod\");\n                }\n                else {\n                    isNoiseChannel = (channelIndex >= 3);\n                }\n                if (isNoiseChannel) {\n                    newNoiseChannels.push(channel);\n                }\n                else if (isModChannel) {\n                    newModChannels.push(channel);\n                }\n                else {\n                    newPitchChannels.push(channel);\n                }\n                if (channelObject[\"octaveScrollBar\"] != undefined) {\n                    channel.octave = clamp(0, Config.pitchOctaves, (channelObject[\"octaveScrollBar\"] | 0) + 1);\n                    if (isNoiseChannel)\n                        channel.octave = 0;\n                }\n                if (channelObject[\"name\"] != undefined) {\n                    channel.name = channelObject[\"name\"];\n                }\n                else {\n                    channel.name = \"\";\n                }\n                if (Array.isArray(channelObject[\"instruments\"])) {\n                    const instrumentObjects = channelObject[\"instruments\"];\n                    for (let i = 0; i < instrumentObjects.length; i++) {\n                        if (i >= this.getMaxInstrumentsPerChannel())\n                            break;\n                        const instrument = new Instrument(isNoiseChannel, isModChannel);\n                        channel.instruments[i] = instrument;\n                        instrument.fromJsonObject(instrumentObjects[i], isNoiseChannel, isModChannel, false, false, legacyGlobalReverb, format);\n                    }\n                }\n                for (let i = 0; i < this.patternsPerChannel; i++) {\n                    const pattern = new Pattern();\n                    channel.patterns[i] = pattern;\n                    let patternObject = undefined;\n                    if (channelObject[\"patterns\"])\n                        patternObject = channelObject[\"patterns\"][i];\n                    if (patternObject == undefined)\n                        continue;\n                    pattern.fromJsonObject(patternObject, this, channel, importedPartsPerBeat, isNoiseChannel, isModChannel, format);\n                }\n                channel.patterns.length = this.patternsPerChannel;\n                for (let i = 0; i < this.barCount; i++) {\n                    channel.bars[i] = (channelObject[\"sequence\"] != undefined) ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\n                }\n                channel.bars.length = this.barCount;\n            }\n        }\n        if (newPitchChannels.length > Config.pitchChannelCountMax)\n            newPitchChannels.length = Config.pitchChannelCountMax;\n        if (newNoiseChannels.length > Config.noiseChannelCountMax)\n            newNoiseChannels.length = Config.noiseChannelCountMax;\n        if (newModChannels.length > Config.modChannelCountMax)\n            newModChannels.length = Config.modChannelCountMax;\n        this.pitchChannelCount = newPitchChannels.length;\n        this.noiseChannelCount = newNoiseChannels.length;\n        this.modChannelCount = newModChannels.length;\n        this.channels.length = 0;\n        Array.prototype.push.apply(this.channels, newPitchChannels);\n        Array.prototype.push.apply(this.channels, newNoiseChannels);\n        Array.prototype.push.apply(this.channels, newModChannels);\n        if (Config.willReloadForCustomSamples) {\n            window.location.hash = this.toBase64String();\n            setTimeout(() => { location.reload(); }, 50);\n        }\n    }\n    getPattern(channelIndex, bar) {\n        if (bar < 0 || bar >= this.barCount)\n            return null;\n        const patternIndex = this.channels[channelIndex].bars[bar];\n        if (patternIndex == 0)\n            return null;\n        return this.channels[channelIndex].patterns[patternIndex - 1];\n    }\n    getBeatsPerMinute() {\n        return this.tempo;\n    }\n    static getNeededBits(maxValue) {\n        return 32 - Math.clz32(Math.ceil(maxValue + 1) - 1);\n    }\n    restoreLimiterDefaults() {\n        this.compressionRatio = 1.0;\n        this.limitRatio = 1.0;\n        this.limitRise = 4000.0;\n        this.limitDecay = 4.0;\n        this.limitThreshold = 1.0;\n        this.compressionThreshold = 1.0;\n        this.masterGain = 1.0;\n    }\n}\nSong._format = Config.jsonFormat;\nSong._oldestBeepboxVersion = 2;\nSong._latestBeepboxVersion = 9;\nSong._oldestJummBoxVersion = 1;\nSong._latestJummBoxVersion = 6;\nSong._oldestGoldBoxVersion = 1;\nSong._latestGoldBoxVersion = 4;\nSong._oldestUltraBoxVersion = 1;\nSong._latestUltraBoxVersion = 5;\nSong._oldestSlarmoosBoxVersion = 1;\nSong._latestSlarmoosBoxVersion = 5;\nSong._variant = 0x74;\n//# sourceMappingURL=Song.js.map","export class ChannelState {\n    constructor() {\n        this.instruments = [];\n        this.muted = false;\n        this.singleSeamlessInstrument = null;\n    }\n}\n//# sourceMappingURL=ChannelState.js.map","export function scaleElementsByFactor(array, factor) {\n    for (let i = 0; i < array.length; i++) {\n        array[i] *= factor;\n    }\n}\nfunction isPowerOf2(n) {\n    return !!n && !(n & (n - 1));\n}\nfunction countBits(n) {\n    if (!isPowerOf2(n))\n        throw new Error(\"FFT array length must be a power of 2.\");\n    return Math.round(Math.log(n) / Math.log(2));\n}\nfunction reverseIndexBits(array, fullArrayLength) {\n    const bitCount = countBits(fullArrayLength);\n    if (bitCount > 16)\n        throw new Error(\"FFT array length must not be greater than 2^16.\");\n    const finalShift = 16 - bitCount;\n    for (let i = 0; i < fullArrayLength; i++) {\n        let j;\n        j = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\n        j = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\n        j = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\n        j = ((j >> 8) | ((j & 0xff) << 8)) >> finalShift;\n        if (j > i) {\n            let temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n    }\n}\nexport function discreteFourierTransform(realArray, imagArray) {\n    const fullArrayLength = realArray.length;\n    if (fullArrayLength != imagArray.length)\n        throw new Error(\"FFT arrays must be the same length.\");\n    const realOut = [];\n    const imagOut = [];\n    for (let i = 0; i < fullArrayLength; i++) {\n        realOut[i] = 0.0;\n        imagOut[i] = 0.0;\n        for (let j = 0; j < fullArrayLength; j++) {\n            const radians = -6.2831853 * j * i / fullArrayLength;\n            const c = Math.cos(radians);\n            const s = Math.sin(radians);\n            realOut[i] += realArray[j] * c - imagArray[j] * s;\n            imagOut[i] += realArray[j] * s + imagArray[j] * c;\n        }\n    }\n    return [realOut, imagOut];\n}\nexport function fastFourierTransform(realArray, imagArray) {\n    const fullArrayLength = realArray.length;\n    if (!isPowerOf2(fullArrayLength))\n        throw new Error(\"FFT array length must be a power of 2.\");\n    if (fullArrayLength < 4)\n        throw new Error(\"FFT array length must be at least 4.\");\n    if (fullArrayLength != imagArray.length)\n        throw new Error(\"FFT arrays must be the same length.\");\n    reverseIndexBits(realArray, fullArrayLength);\n    reverseIndexBits(imagArray, fullArrayLength);\n    for (let startIndex = 0; startIndex < fullArrayLength; startIndex += 4) {\n        const startIndex1 = startIndex + 1;\n        const startIndex2 = startIndex + 2;\n        const startIndex3 = startIndex + 3;\n        const real0 = realArray[startIndex];\n        const real1 = realArray[startIndex1];\n        const real2 = realArray[startIndex2];\n        const real3 = realArray[startIndex3];\n        const imag0 = imagArray[startIndex];\n        const imag1 = imagArray[startIndex1];\n        const imag2 = imagArray[startIndex2];\n        const imag3 = imagArray[startIndex3];\n        const realTemp0 = real0 + real1;\n        const realTemp1 = real0 - real1;\n        const realTemp2 = real2 + real3;\n        const realTemp3 = real2 - real3;\n        const imagTemp0 = imag0 + imag1;\n        const imagTemp1 = imag0 - imag1;\n        const imagTemp2 = imag2 + imag3;\n        const imagTemp3 = imag2 - imag3;\n        realArray[startIndex] = realTemp0 + realTemp2;\n        realArray[startIndex1] = realTemp1 + imagTemp3;\n        realArray[startIndex2] = realTemp0 - realTemp2;\n        realArray[startIndex3] = realTemp1 - imagTemp3;\n        imagArray[startIndex] = imagTemp0 + imagTemp2;\n        imagArray[startIndex1] = imagTemp1 - realTemp3;\n        imagArray[startIndex2] = imagTemp0 - imagTemp2;\n        imagArray[startIndex3] = imagTemp1 + realTemp3;\n    }\n    for (let stride = 8; stride <= fullArrayLength; stride += stride) {\n        const halfLength = stride >>> 1;\n        const radiansIncrement = Math.PI * 2.0 / stride;\n        const cosIncrement = Math.cos(radiansIncrement);\n        const sinIncrement = Math.sin(radiansIncrement);\n        const oscillatorMultiplier = 2.0 * cosIncrement;\n        for (let startIndex = 0; startIndex < fullArrayLength; startIndex += stride) {\n            let c = 1.0;\n            let s = 0.0;\n            let cPrev = cosIncrement;\n            let sPrev = sinIncrement;\n            const secondHalf = startIndex + halfLength;\n            for (let i = startIndex; i < secondHalf; i++) {\n                const j = i + halfLength;\n                const real0 = realArray[i];\n                const imag0 = imagArray[i];\n                const real1 = realArray[j] * c - imagArray[j] * s;\n                const imag1 = realArray[j] * s + imagArray[j] * c;\n                realArray[i] = real0 + real1;\n                imagArray[i] = imag0 + imag1;\n                realArray[j] = real0 - real1;\n                imagArray[j] = imag0 - imag1;\n                const cTemp = oscillatorMultiplier * c - cPrev;\n                const sTemp = oscillatorMultiplier * s - sPrev;\n                cPrev = c;\n                sPrev = s;\n                c = cTemp;\n                s = sTemp;\n            }\n        }\n    }\n}\nexport function forwardRealFourierTransform(array) {\n    const fullArrayLength = array.length;\n    const totalPasses = countBits(fullArrayLength);\n    if (fullArrayLength < 4)\n        throw new Error(\"FFT array length must be at least 4.\");\n    reverseIndexBits(array, fullArrayLength);\n    for (let index = 0; index < fullArrayLength; index += 4) {\n        const index1 = index + 1;\n        const index2 = index + 2;\n        const index3 = index + 3;\n        const real0 = array[index];\n        const real1 = array[index1];\n        const real2 = array[index2];\n        const real3 = array[index3];\n        const tempA = real0 + real1;\n        const tempB = real2 + real3;\n        array[index] = tempA + tempB;\n        array[index1] = real0 - real1;\n        array[index2] = tempA - tempB;\n        array[index3] = real2 - real3;\n    }\n    const sqrt2over2 = Math.sqrt(2.0) / 2.0;\n    for (let index = 0; index < fullArrayLength; index += 8) {\n        const index1 = index + 1;\n        const index3 = index + 3;\n        const index4 = index + 4;\n        const index5 = index + 5;\n        const index7 = index + 7;\n        const real0 = array[index];\n        const real1 = array[index1];\n        const imag3 = array[index3];\n        const real4 = array[index4];\n        const real5 = array[index5];\n        const imag7 = array[index7];\n        const tempA = (real5 - imag7) * sqrt2over2;\n        const tempB = (real5 + imag7) * sqrt2over2;\n        array[index] = real0 + real4;\n        array[index1] = real1 + tempA;\n        array[index3] = real1 - tempA;\n        array[index4] = real0 - real4;\n        array[index5] = tempB - imag3;\n        array[index7] = tempB + imag3;\n    }\n    for (let pass = 3; pass < totalPasses; pass++) {\n        const subStride = 1 << pass;\n        const midSubStride = subStride >> 1;\n        const stride = subStride << 1;\n        const radiansIncrement = Math.PI * 2.0 / stride;\n        const cosIncrement = Math.cos(radiansIncrement);\n        const sinIncrement = Math.sin(radiansIncrement);\n        const oscillatorMultiplier = 2.0 * cosIncrement;\n        for (let startIndex = 0; startIndex < fullArrayLength; startIndex += stride) {\n            const startIndexA = startIndex;\n            const startIndexB = startIndexA + subStride;\n            const stopIndex = startIndexB + subStride;\n            const realStartA = array[startIndexA];\n            const realStartB = array[startIndexB];\n            array[startIndexA] = realStartA + realStartB;\n            array[startIndexB] = realStartA - realStartB;\n            let c = cosIncrement;\n            let s = -sinIncrement;\n            let cPrev = 1.0;\n            let sPrev = 0.0;\n            for (let index = 1; index < midSubStride; index++) {\n                const indexA0 = startIndexA + index;\n                const indexA1 = startIndexB - index;\n                const indexB0 = startIndexB + index;\n                const indexB1 = stopIndex - index;\n                const real0 = array[indexA0];\n                const imag0 = array[indexA1];\n                const real1 = array[indexB0];\n                const imag1 = array[indexB1];\n                const tempA = real1 * c + imag1 * s;\n                const tempB = real1 * s - imag1 * c;\n                array[indexA0] = real0 + tempA;\n                array[indexA1] = real0 - tempA;\n                array[indexB0] = -imag0 - tempB;\n                array[indexB1] = imag0 - tempB;\n                const cTemp = oscillatorMultiplier * c - cPrev;\n                const sTemp = oscillatorMultiplier * s - sPrev;\n                cPrev = c;\n                sPrev = s;\n                c = cTemp;\n                s = sTemp;\n            }\n        }\n    }\n}\nexport function inverseRealFourierTransform(array, fullArrayLength) {\n    const totalPasses = countBits(fullArrayLength);\n    if (fullArrayLength < 4)\n        throw new Error(\"FFT array length must be at least 4.\");\n    for (let pass = totalPasses - 1; pass >= 2; pass--) {\n        const subStride = 1 << pass;\n        const midSubStride = subStride >> 1;\n        const stride = subStride << 1;\n        const radiansIncrement = Math.PI * 2.0 / stride;\n        const cosIncrement = Math.cos(radiansIncrement);\n        const sinIncrement = Math.sin(radiansIncrement);\n        const oscillatorMultiplier = 2.0 * cosIncrement;\n        for (let startIndex = 0; startIndex < fullArrayLength; startIndex += stride) {\n            const startIndexA = startIndex;\n            const midIndexA = startIndexA + midSubStride;\n            const startIndexB = startIndexA + subStride;\n            const midIndexB = startIndexB + midSubStride;\n            const stopIndex = startIndexB + subStride;\n            const realStartA = array[startIndexA];\n            const imagStartB = array[startIndexB];\n            array[startIndexA] = realStartA + imagStartB;\n            array[midIndexA] *= 2;\n            array[startIndexB] = realStartA - imagStartB;\n            array[midIndexB] *= 2;\n            let c = cosIncrement;\n            let s = -sinIncrement;\n            let cPrev = 1.0;\n            let sPrev = 0.0;\n            for (let index = 1; index < midSubStride; index++) {\n                const indexA0 = startIndexA + index;\n                const indexA1 = startIndexB - index;\n                const indexB0 = startIndexB + index;\n                const indexB1 = stopIndex - index;\n                const real0 = array[indexA0];\n                const real1 = array[indexA1];\n                const imag0 = array[indexB0];\n                const imag1 = array[indexB1];\n                const tempA = real0 - real1;\n                const tempB = imag0 + imag1;\n                array[indexA0] = real0 + real1;\n                array[indexA1] = imag1 - imag0;\n                array[indexB0] = tempA * c - tempB * s;\n                array[indexB1] = tempB * c + tempA * s;\n                const cTemp = oscillatorMultiplier * c - cPrev;\n                const sTemp = oscillatorMultiplier * s - sPrev;\n                cPrev = c;\n                sPrev = s;\n                c = cTemp;\n                s = sTemp;\n            }\n        }\n    }\n    for (let index = 0; index < fullArrayLength; index += 4) {\n        const index1 = index + 1;\n        const index2 = index + 2;\n        const index3 = index + 3;\n        const real0 = array[index];\n        const real1 = array[index1] * 2;\n        const imag2 = array[index2];\n        const imag3 = array[index3] * 2;\n        const tempA = real0 + imag2;\n        const tempB = real0 - imag2;\n        array[index] = tempA + real1;\n        array[index1] = tempA - real1;\n        array[index2] = tempB + imag3;\n        array[index3] = tempB - imag3;\n    }\n    reverseIndexBits(array, fullArrayLength);\n}\n//# sourceMappingURL=FFT.js.map","import { Config, calculateRingModHertz } from \"./SynthConfig\";\nimport { DynamicBiquadFilter } from \"./filtering\";\nimport { Instrument } from \"./Instrument\";\nimport { Synth } from \"./synth\";\nimport { FilterSettings } from \"./Filter\";\nimport { fittingPowerOfTwo } from \"./utils\";\nclass Grain {\n    constructor() {\n        this.delayLinePosition = 0;\n        this.ageInSamples = 0;\n        this.maxAgeInSamples = 0;\n        this.delay = 0;\n        this.parabolicEnvelopeAmplitude = 0;\n        this.parabolicEnvelopeSlope = 0;\n        this.parabolicEnvelopeCurve = 0;\n        this.rcbEnvelopeAmplitude = 0;\n        this.rcbEnvelopeAttackIndex = 0;\n        this.rcbEnvelopeReleaseIndex = 0;\n        this.rcbEnvelopeSustain = 0;\n    }\n    initializeParabolicEnvelope(durationInSamples, amplitude) {\n        this.parabolicEnvelopeAmplitude = 0;\n        const invDuration = 1.0 / durationInSamples;\n        const invDurationSquared = invDuration * invDuration;\n        this.parabolicEnvelopeSlope = 4.0 * amplitude * (invDuration - invDurationSquared);\n        this.parabolicEnvelopeCurve = -8.0 * amplitude * invDurationSquared;\n    }\n    updateParabolicEnvelope() {\n        this.parabolicEnvelopeAmplitude += this.parabolicEnvelopeSlope;\n        this.parabolicEnvelopeSlope += this.parabolicEnvelopeCurve;\n    }\n    initializeRCBEnvelope(durationInSamples, amplitude) {\n        this.rcbEnvelopeAttackIndex = Math.floor(durationInSamples / 6);\n        this.rcbEnvelopeSustain = amplitude;\n        this.rcbEnvelopeReleaseIndex = Math.floor(durationInSamples * 5 / 6);\n    }\n    updateRCBEnvelope() {\n        if (this.ageInSamples < this.rcbEnvelopeAttackIndex) {\n            this.rcbEnvelopeAmplitude = (1.0 + Math.cos(Math.PI + (Math.PI * (this.ageInSamples / this.rcbEnvelopeAttackIndex) * (this.rcbEnvelopeSustain / 2.0))));\n        }\n        else if (this.ageInSamples > this.rcbEnvelopeReleaseIndex) {\n            this.rcbEnvelopeAmplitude = (1.0 + Math.cos(Math.PI * ((this.ageInSamples - this.rcbEnvelopeReleaseIndex) / this.rcbEnvelopeAttackIndex)) * (this.rcbEnvelopeSustain / 2.0));\n        }\n    }\n    addDelay(delay) {\n        this.delay = delay;\n    }\n}\nexport class EffectState {\n    constructor(type) {\n        this.type = 0;\n        this.eqFilterVolume = 1.0;\n        this.eqFilterVolumeDelta = 0.0;\n        this.granularMix = 1.0;\n        this.granularMixDelta = 0.0;\n        this.granularDelayLineL = null;\n        this.granularDelayLineR = null;\n        this.granularDelayLineIndex = 0;\n        this.granularMaximumDelayTimeInSeconds = 1;\n        this.usesRandomGrainLocation = true;\n        this.granularDelayLineDirty = false;\n        this.computeGrains = true;\n        this.ringModMix = 0;\n        this.ringModMixDelta = 0;\n        this.ringModPhase = 0;\n        this.ringModPhaseDelta = 0;\n        this.ringModPhaseDeltaScale = 1.0;\n        this.ringModWaveformIndex = 0.0;\n        this.ringModPulseWidth = 0.0;\n        this.ringModHzOffset = 0.0;\n        this.ringModMixFade = 1.0;\n        this.ringModMixFadeDelta = 0;\n        this.distortion = 0.0;\n        this.distortionDelta = 0.0;\n        this.distortionDrive = 0.0;\n        this.distortionDriveDelta = 0.0;\n        this.distortionFractionalInputL1 = 0.0;\n        this.distortionFractionalInputL2 = 0.0;\n        this.distortionFractionalInputL3 = 0.0;\n        this.distortionFractionalInputR1 = 0.0;\n        this.distortionFractionalInputR2 = 0.0;\n        this.distortionFractionalInputR3 = 0.0;\n        this.distortionPrevInputL = 0.0;\n        this.distortionPrevInputR = 0.0;\n        this.distortionNextOutputL = 0.0;\n        this.distortionNextOutputR = 0.0;\n        this.bitcrusherPrevInputL = 0.0;\n        this.bitcrusherPrevInputR = 0.0;\n        this.bitcrusherCurrentOutputL = 0.0;\n        this.bitcrusherCurrentOutputR = 0.0;\n        this.bitcrusherPhase = 1.0;\n        this.bitcrusherPhaseDelta = 0.0;\n        this.bitcrusherPhaseDeltaScale = 1.0;\n        this.bitcrusherScale = 1.0;\n        this.bitcrusherScaleScale = 1.0;\n        this.bitcrusherFoldLevel = 1.0;\n        this.bitcrusherFoldLevelScale = 1.0;\n        this.eqFiltersL = [];\n        this.eqFiltersR = [];\n        this.eqFilterCount = 0;\n        this.initialEqFilterInputL1 = 0.0;\n        this.initialEqFilterInputR1 = 0.0;\n        this.initialEqFilterInputL2 = 0.0;\n        this.initialEqFilterInputR2 = 0.0;\n        this.gain = 1.0;\n        this.gainDelta = 0.0;\n        this.panningDelayLineL = null;\n        this.panningDelayLineR = null;\n        this.panningDelayPos = 0;\n        this.panningVolumeL = 0.0;\n        this.panningVolumeR = 0.0;\n        this.panningVolumeDeltaL = 0.0;\n        this.panningVolumeDeltaR = 0.0;\n        this.panningOffsetL = 0.0;\n        this.panningOffsetR = 0.0;\n        this.panningOffsetDeltaL = 0.0;\n        this.panningOffsetDeltaR = 0.0;\n        this.panningMode = 0;\n        this.flangerDelayLineL = null;\n        this.flangerDelayLineR = null;\n        this.flangerDelayLineDirty = false;\n        this.flangerDelayPos = 0;\n        this.flanger = 0;\n        this.flangerDelta = 0;\n        this.flangerSpeed = 0;\n        this.flangerSpeedDelta = 0;\n        this.flangerDepth = 0;\n        this.flangerDepthDelta = 0;\n        this.flangerFeedback = 0;\n        this.flangerFeedbackDelta = 0;\n        this.flangerPhase = 0;\n        this.chorusDelayLineL = null;\n        this.chorusDelayLineR = null;\n        this.chorusDelayLineDirty = false;\n        this.chorusDelayPos = 0;\n        this.chorusPhase = 0;\n        this.chorusVoiceMult = 0;\n        this.chorusVoiceMultDelta = 0;\n        this.chorusCombinedMult = 0;\n        this.chorusCombinedMultDelta = 0;\n        this.echoDelayLineL = null;\n        this.echoDelayLineR = null;\n        this.echoDelayLineDirty = false;\n        this.echoDelayPosL = 0;\n        this.echoDelayPosR = 0;\n        this.echoDelayOffsetStart = 0;\n        this.echoDelayOffsetEnd = null;\n        this.echoDelayOffsetRatio = 0.0;\n        this.echoDelayOffsetRatioDelta = 0.0;\n        this.echoMult = 0.0;\n        this.echoMultDelta = 0.0;\n        this.echoPingPong = 0.0;\n        this.echoShelfA1 = 0.0;\n        this.echoShelfB0 = 0.0;\n        this.echoShelfB1 = 0.0;\n        this.echoShelfSampleL = 0.0;\n        this.echoShelfSampleR = 0.0;\n        this.echoShelfPrevInputL = 0.0;\n        this.echoShelfPrevInputR = 0.0;\n        this.reverbDelayLine = null;\n        this.reverbDelayLineDirty = false;\n        this.reverbDelayPos = 0;\n        this.reverbMult = 0.0;\n        this.reverbMultDelta = 0.0;\n        this.reverbShelfA1 = 0.0;\n        this.reverbShelfB0 = 0.0;\n        this.reverbShelfB1 = 0.0;\n        this.reverbShelfSample0 = 0.0;\n        this.reverbShelfSample1 = 0.0;\n        this.reverbShelfSample2 = 0.0;\n        this.reverbShelfSample3 = 0.0;\n        this.reverbShelfPrevInput0 = 0.0;\n        this.reverbShelfPrevInput1 = 0.0;\n        this.reverbShelfPrevInput2 = 0.0;\n        this.reverbShelfPrevInput3 = 0.0;\n        this.type = type;\n        this.granularGrains = [];\n        this.granularMaximumGrains = 256;\n        for (let i = 0; i < this.granularMaximumGrains; i++) {\n            this.granularGrains.push(new Grain());\n        }\n        this.granularGrainsLength = 0;\n    }\n    reset() {\n        if (this.chorusDelayLineDirty) {\n            for (let i = 0; i < this.chorusDelayLineL.length; i++)\n                this.chorusDelayLineL[i] = 0.0;\n            for (let i = 0; i < this.chorusDelayLineR.length; i++)\n                this.chorusDelayLineR[i] = 0.0;\n        }\n        if (this.flangerDelayLineDirty) {\n            for (let i = 0; i < this.flangerDelayLineL.length; i++)\n                this.flangerDelayLineL[i] = 0.0;\n            for (let i = 0; i < this.flangerDelayLineR.length; i++)\n                this.flangerDelayLineR[i] = 0.0;\n        }\n        if (this.echoDelayLineDirty) {\n            for (let i = 0; i < this.echoDelayLineL.length; i++)\n                this.echoDelayLineL[i] = 0.0;\n            for (let i = 0; i < this.echoDelayLineR.length; i++)\n                this.echoDelayLineR[i] = 0.0;\n        }\n        if (this.reverbDelayLineDirty) {\n            for (let i = 0; i < this.reverbDelayLine.length; i++)\n                this.reverbDelayLine[i] = 0.0;\n        }\n        if (this.granularDelayLineDirty) {\n            for (let i = 0; i < this.granularDelayLineL.length; i++)\n                this.granularDelayLineL[i] = 0.0;\n            for (let i = 0; i < this.granularDelayLineR.length; i++)\n                this.granularDelayLineR[i] = 0.0;\n        }\n        this.flangerPhase = 0.0;\n        this.chorusPhase = 0.0;\n        this.ringModPhase = 0.0;\n        this.ringModMixFade = 1.0;\n    }\n    allocateNecessaryBuffers(synth, instrument, effect, samplesPerTick) {\n        if (effect.type == 2) {\n            if (this.panningDelayLineL == null || this.panningDelayLineR == null || this.panningDelayLineL.length < synth.panningDelayBufferSize || this.panningDelayLineR.length < synth.panningDelayBufferSize) {\n                this.panningDelayLineL = new Float32Array(synth.panningDelayBufferSize);\n                this.panningDelayLineR = new Float32Array(synth.panningDelayBufferSize);\n            }\n        }\n        if (effect.type == 1) {\n            if (this.chorusDelayLineL == null || this.chorusDelayLineL.length < synth.chorusDelayBufferSize) {\n                this.chorusDelayLineL = new Float32Array(synth.chorusDelayBufferSize);\n            }\n            if (this.chorusDelayLineR == null || this.chorusDelayLineR.length < synth.chorusDelayBufferSize) {\n                this.chorusDelayLineR = new Float32Array(synth.chorusDelayBufferSize);\n            }\n        }\n        if (effect.type == 10) {\n            if (this.flangerDelayLineL == null || this.flangerDelayLineL.length < synth.flangerDelayBufferSize) {\n                this.flangerDelayLineL = new Float32Array(synth.flangerDelayBufferSize);\n            }\n            if (this.flangerDelayLineR == null || this.flangerDelayLineR.length < synth.flangerDelayBufferSize) {\n                this.flangerDelayLineR = new Float32Array(synth.flangerDelayBufferSize);\n            }\n        }\n        if (effect.type == 6) {\n            this.allocateEchoBuffers(samplesPerTick, effect.echoDelay);\n        }\n        if (effect.type == 0) {\n            if (this.reverbDelayLine == null) {\n                this.reverbDelayLine = new Float32Array(Config.reverbDelayBufferSize);\n            }\n        }\n        if (effect.type == 8) {\n            const granularDelayLineSizeInMilliseconds = 2500;\n            const granularDelayLineSizeInSeconds = granularDelayLineSizeInMilliseconds / 1000;\n            this.granularMaximumDelayTimeInSeconds = granularDelayLineSizeInSeconds;\n            const granularDelayLineSizeInSamples = fittingPowerOfTwo(Math.floor(granularDelayLineSizeInSeconds * synth.samplesPerSecond));\n            if (this.granularDelayLineL == null || this.granularDelayLineR == null || this.granularDelayLineL.length != granularDelayLineSizeInSamples || this.granularDelayLineR.length != granularDelayLineSizeInSamples) {\n                this.granularDelayLineL = new Float32Array(granularDelayLineSizeInSamples);\n                this.granularDelayLineR = new Float32Array(granularDelayLineSizeInSamples);\n                this.granularDelayLineIndex = 0;\n            }\n            const oldGrainsLength = this.granularGrains.length;\n            if (this.granularMaximumGrains > oldGrainsLength) {\n                for (let i = oldGrainsLength; i < this.granularMaximumGrains + 1; i++) {\n                    this.granularGrains.push(new Grain());\n                }\n            }\n            if (this.granularMaximumGrains < this.granularGrainsLength) {\n                this.granularGrainsLength = Math.round(this.granularMaximumGrains);\n            }\n        }\n    }\n    allocateEchoBuffers(samplesPerTick, echoDelay) {\n        const safeEchoDelaySteps = Math.max(Config.echoDelayRange >> 1, (echoDelay + 1));\n        const baseEchoDelayBufferSize = fittingPowerOfTwo(safeEchoDelaySteps * Config.echoDelayStepTicks * samplesPerTick);\n        const safeEchoDelayBufferSize = baseEchoDelayBufferSize * 2;\n        if (this.echoDelayLineL == null || this.echoDelayLineR == null) {\n            this.echoDelayLineL = new Float32Array(safeEchoDelayBufferSize);\n            this.echoDelayLineR = new Float32Array(safeEchoDelayBufferSize);\n        }\n        else if (this.echoDelayLineL.length < safeEchoDelayBufferSize || this.echoDelayLineR.length < safeEchoDelayBufferSize) {\n            const newDelayLineL = new Float32Array(safeEchoDelayBufferSize);\n            const newDelayLineR = new Float32Array(safeEchoDelayBufferSize);\n            const oldMask = this.echoDelayLineL.length - 1;\n            for (let i = 0; i < this.echoDelayLineL.length; i++) {\n                newDelayLineL[i] = this.echoDelayLineL[(this.echoDelayPosL + i) & oldMask];\n                newDelayLineR[i] = this.echoDelayLineR[(this.echoDelayPosR + i) & oldMask];\n            }\n            this.echoDelayPosL = this.echoDelayLineL.length;\n            this.echoDelayPosR = this.echoDelayLineR.length;\n            this.echoDelayLineL = newDelayLineL;\n            this.echoDelayLineR = newDelayLineR;\n        }\n    }\n    deactivate() {\n        this.bitcrusherPrevInputL = 0.0;\n        this.bitcrusherPrevInputR = 0.0;\n        this.bitcrusherCurrentOutputL = 0.0;\n        this.bitcrusherCurrentOutputR = 0.0;\n        this.bitcrusherPhase = 1.0;\n        for (let i = 0; i < this.eqFilterCount; i++) {\n            this.eqFiltersL[i].resetOutput();\n            this.eqFiltersR[i].resetOutput();\n        }\n        this.eqFilterCount = 0;\n        this.initialEqFilterInputL1 = 0.0;\n        this.initialEqFilterInputR1 = 0.0;\n        this.initialEqFilterInputL2 = 0.0;\n        this.initialEqFilterInputR2 = 0.0;\n        this.distortionFractionalInputL1 = 0.0;\n        this.distortionFractionalInputL2 = 0.0;\n        this.distortionFractionalInputL3 = 0.0;\n        this.distortionFractionalInputR1 = 0.0;\n        this.distortionFractionalInputR2 = 0.0;\n        this.distortionFractionalInputR3 = 0.0;\n        this.distortionPrevInputL = 0.0;\n        this.distortionPrevInputR = 0.0;\n        this.distortionNextOutputL = 0.0;\n        this.distortionNextOutputR = 0.0;\n        this.flangerDelayPos = 0;\n        this.panningDelayPos = 0;\n        if (this.panningDelayLineL != null)\n            for (let i = 0; i < this.panningDelayLineL.length; i++)\n                this.panningDelayLineL[i] = 0.0;\n        if (this.panningDelayLineR != null)\n            for (let i = 0; i < this.panningDelayLineR.length; i++)\n                this.panningDelayLineR[i] = 0.0;\n        this.echoDelayOffsetEnd = null;\n        this.echoShelfSampleL = 0.0;\n        this.echoShelfSampleR = 0.0;\n        this.echoShelfPrevInputL = 0.0;\n        this.echoShelfPrevInputR = 0.0;\n        this.reverbShelfSample0 = 0.0;\n        this.reverbShelfSample1 = 0.0;\n        this.reverbShelfSample2 = 0.0;\n        this.reverbShelfSample3 = 0.0;\n        this.reverbShelfPrevInput0 = 0.0;\n        this.reverbShelfPrevInput1 = 0.0;\n        this.reverbShelfPrevInput2 = 0.0;\n        this.reverbShelfPrevInput3 = 0.0;\n    }\n    compute(synth, instrument, effect, instrumentState, samplesPerTick, roundedSamplesPerTick, tone, channelIndex, instrumentIndex, envelopeStarts, envelopeEnds) {\n        const samplesPerSecond = synth.samplesPerSecond;\n        this.type = effect.type;\n        const usesGranular = effect.type == 8;\n        const usesRingModulation = effect.type == 7;\n        const usesDistortion = effect.type == 3;\n        const usesBitcrusher = effect.type == 4;\n        const usesGain = effect.type == 9;\n        const usesPanning = effect.type == 2;\n        const usesFlanger = effect.type == 10;\n        const usesChorus = effect.type == 1;\n        const usesEcho = effect.type == 6;\n        const usesReverb = effect.type == 0;\n        const usesEQFilter = effect.type == 5;\n        if (usesGranular) {\n            this.granularMaximumGrains = Math.pow(2, effect.grainAmounts * envelopeStarts[53]);\n            if (synth.isModActive(Config.modulators.dictionary[\"grain freq\"].index, channelIndex, instrumentIndex)) {\n                this.granularMaximumGrains = Math.pow(2, synth.getModValue(Config.modulators.dictionary[\"grain freq\"].index, channelIndex, instrumentIndex, false) * envelopeStarts[53]);\n            }\n            this.granularMaximumGrains == Math.floor(this.granularMaximumGrains);\n        }\n        this.allocateNecessaryBuffers(synth, instrument, effect, samplesPerTick);\n        if (usesGranular) {\n            this.granularMix = effect.granular / Config.granularRange;\n            this.computeGrains = true;\n            let granularMixEnd = this.granularMix;\n            if (synth.isModActive(Config.modulators.dictionary[\"granular\"].index, channelIndex, instrumentIndex)) {\n                this.granularMix = synth.getModValue(Config.modulators.dictionary[\"granular\"].index, channelIndex, instrumentIndex, false) / Config.granularRange;\n                granularMixEnd = synth.getModValue(Config.modulators.dictionary[\"granular\"].index, channelIndex, instrumentIndex, true) / Config.granularRange;\n            }\n            this.granularMix *= envelopeStarts[52];\n            granularMixEnd *= envelopeEnds[52];\n            this.granularMixDelta = (granularMixEnd - this.granularMix) / roundedSamplesPerTick;\n            for (let iterations = 0; iterations < Math.ceil(Math.random() * Math.random() * 10); iterations++) {\n                if (this.granularGrainsLength < this.granularMaximumGrains) {\n                    let granularMinGrainSizeInMilliseconds = effect.grainSize;\n                    if (synth.isModActive(Config.modulators.dictionary[\"grain size\"].index, channelIndex, instrumentIndex)) {\n                        granularMinGrainSizeInMilliseconds = synth.getModValue(Config.modulators.dictionary[\"grain size\"].index, channelIndex, instrumentIndex, false);\n                    }\n                    granularMinGrainSizeInMilliseconds *= envelopeStarts[54];\n                    let grainRange = effect.grainRange;\n                    if (synth.isModActive(Config.modulators.dictionary[\"grain range\"].index, channelIndex, instrumentIndex)) {\n                        grainRange = synth.getModValue(Config.modulators.dictionary[\"grain range\"].index, channelIndex, instrumentIndex, false);\n                    }\n                    grainRange *= envelopeStarts[55];\n                    const granularMaxGrainSizeInMilliseconds = granularMinGrainSizeInMilliseconds + grainRange;\n                    const granularGrainSizeInMilliseconds = granularMinGrainSizeInMilliseconds + (granularMaxGrainSizeInMilliseconds - granularMinGrainSizeInMilliseconds) * Math.random();\n                    const granularGrainSizeInSeconds = granularGrainSizeInMilliseconds / 1000.0;\n                    const granularGrainSizeInSamples = Math.floor(granularGrainSizeInSeconds * samplesPerSecond);\n                    const granularDelayLineLength = this.granularDelayLineL.length;\n                    const grainIndex = this.granularGrainsLength;\n                    this.granularGrainsLength++;\n                    const grain = this.granularGrains[grainIndex];\n                    grain.ageInSamples = 0;\n                    grain.maxAgeInSamples = granularGrainSizeInSamples;\n                    const minDelayTimeInSeconds = 0.02;\n                    const maxDelayTimeInSeconds = 2.4;\n                    grain.delayLinePosition = this.usesRandomGrainLocation ? (minDelayTimeInSeconds + (maxDelayTimeInSeconds - minDelayTimeInSeconds) * Math.random() * Math.random() * samplesPerSecond) % (granularDelayLineLength - 1) : minDelayTimeInSeconds;\n                    if (Config.granularEnvelopeType == 0) {\n                        grain.initializeParabolicEnvelope(grain.maxAgeInSamples, 1.0);\n                    }\n                    else if (Config.granularEnvelopeType == 1) {\n                        grain.initializeRCBEnvelope(grain.maxAgeInSamples, 1.0);\n                    }\n                    grain.addDelay(Math.random() * samplesPerTick * 4);\n                }\n            }\n        }\n        if (usesDistortion) {\n            let useDistortionStart = effect.distortion;\n            let useDistortionEnd = effect.distortion;\n            if (synth.isModActive(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex)) {\n                useDistortionStart = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, false);\n                useDistortionEnd = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, true);\n            }\n            const distortionSliderStart = Math.min(1.0, envelopeStarts[43] * useDistortionStart / (Config.distortionRange - 1));\n            const distortionSliderEnd = Math.min(1.0, envelopeEnds[43] * useDistortionEnd / (Config.distortionRange - 1));\n            const distortionStart = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderStart) - 1.0) / 19.0, 2.0);\n            const distortionEnd = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderEnd) - 1.0) / 19.0, 2.0);\n            const distortionDriveStart = (1.0 + 2.0 * distortionSliderStart) / Config.distortionBaseVolume;\n            const distortionDriveEnd = (1.0 + 2.0 * distortionSliderEnd) / Config.distortionBaseVolume;\n            this.distortion = distortionStart;\n            this.distortionDelta = (distortionEnd - distortionStart) / roundedSamplesPerTick;\n            this.distortionDrive = distortionDriveStart;\n            this.distortionDriveDelta = (distortionDriveEnd - distortionDriveStart) / roundedSamplesPerTick;\n        }\n        if (usesBitcrusher) {\n            let freqSettingStart = effect.bitcrusherFreq * Math.sqrt(envelopeStarts[45]);\n            let freqSettingEnd = effect.bitcrusherFreq * Math.sqrt(envelopeEnds[45]);\n            if (synth.isModActive(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex)) {\n                freqSettingStart = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, false) * Math.sqrt(envelopeStarts[45]);\n                freqSettingEnd = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, true) * Math.sqrt(envelopeEnds[45]);\n            }\n            let quantizationSettingStart = effect.bitcrusherQuantization * Math.sqrt(envelopeStarts[44]);\n            let quantizationSettingEnd = effect.bitcrusherQuantization * Math.sqrt(envelopeEnds[44]);\n            if (synth.isModActive(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex)) {\n                quantizationSettingStart = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, false) * Math.sqrt(envelopeStarts[44]);\n                quantizationSettingEnd = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, true) * Math.sqrt(envelopeEnds[44]);\n            }\n            const basePitch = Config.keys[synth.song.key].basePitch + (Config.pitchesPerOctave * synth.song.octave);\n            const freqStart = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingStart) * Config.bitcrusherOctaveStep);\n            const freqEnd = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingEnd) * Config.bitcrusherOctaveStep);\n            const phaseDeltaStart = Math.min(1.0, freqStart / samplesPerSecond);\n            const phaseDeltaEnd = Math.min(1.0, freqEnd / samplesPerSecond);\n            this.bitcrusherPhaseDelta = phaseDeltaStart;\n            this.bitcrusherPhaseDeltaScale = Math.pow(phaseDeltaEnd / phaseDeltaStart, 1.0 / roundedSamplesPerTick);\n            const scaleStart = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart) * 0.5));\n            const scaleEnd = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd) * 0.5));\n            this.bitcrusherScale = scaleStart;\n            this.bitcrusherScaleScale = Math.pow(scaleEnd / scaleStart, 1.0 / roundedSamplesPerTick);\n            const foldLevelStart = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart);\n            const foldLevelEnd = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd);\n            this.bitcrusherFoldLevel = foldLevelStart;\n            this.bitcrusherFoldLevelScale = Math.pow(foldLevelEnd / foldLevelStart, 1.0 / roundedSamplesPerTick);\n        }\n        if (usesEQFilter) {\n            let eqFilterVolume = 1.0;\n            if (effect.eqFilterType) {\n                const eqFilterSettingsStart = effect.eqFilter;\n                if (effect.eqSubFilters[1] == null)\n                    effect.eqSubFilters[1] = new FilterSettings();\n                const eqFilterSettingsEnd = effect.eqSubFilters[1];\n                let startSimpleFreq = effect.eqFilterSimpleCut;\n                let startSimpleGain = effect.eqFilterSimplePeak;\n                let endSimpleFreq = effect.eqFilterSimpleCut;\n                let endSimpleGain = effect.eqFilterSimplePeak;\n                let filterChanges = false;\n                if (synth.isModActive(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex)) {\n                    startSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, false);\n                    endSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, true);\n                    filterChanges = true;\n                }\n                if (synth.isModActive(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex)) {\n                    startSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, false);\n                    endSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, true);\n                    filterChanges = true;\n                }\n                let startPoint;\n                if (filterChanges) {\n                    eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain);\n                    eqFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain);\n                    startPoint = eqFilterSettingsStart.controlPoints[0];\n                    let endPoint = eqFilterSettingsEnd.controlPoints[0];\n                    startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                    endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\n                    if (this.eqFiltersL.length < 1)\n                        this.eqFiltersL[0] = new DynamicBiquadFilter();\n                    if (this.eqFiltersR.length < 1)\n                        this.eqFiltersR[0] = new DynamicBiquadFilter();\n                    this.eqFiltersL[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                    this.eqFiltersR[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                }\n                else {\n                    eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, true);\n                    startPoint = eqFilterSettingsStart.controlPoints[0];\n                    startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                    if (this.eqFiltersL.length < 1)\n                        this.eqFiltersL[0] = new DynamicBiquadFilter();\n                    if (this.eqFiltersR.length < 1)\n                        this.eqFiltersR[0] = new DynamicBiquadFilter();\n                    this.eqFiltersL[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterStartCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                    this.eqFiltersR[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterStartCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                }\n                this.eqFilterCount = 1;\n                eqFilterVolume *= startPoint.getVolumeCompensationMult();\n            }\n            else {\n                const eqFilterSettings = (effect.tmpEqFilterStart != null) ? effect.tmpEqFilterStart : effect.eqFilter;\n                for (let i = 0; i < eqFilterSettings.controlPointCount; i++) {\n                    let startPoint = eqFilterSettings.controlPoints[i];\n                    let endPoint = (effect.tmpEqFilterEnd != null && effect.tmpEqFilterEnd.controlPoints[i] != null) ? effect.tmpEqFilterEnd.controlPoints[i] : eqFilterSettings.controlPoints[i];\n                    if (startPoint.type != endPoint.type) {\n                        startPoint = endPoint;\n                    }\n                    startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                    endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\n                    if (this.eqFiltersL.length <= i)\n                        this.eqFiltersL[i] = new DynamicBiquadFilter();\n                    if (this.eqFiltersR.length <= i)\n                        this.eqFiltersR[i] = new DynamicBiquadFilter();\n                    this.eqFiltersL[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                    this.eqFiltersR[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                    eqFilterVolume *= startPoint.getVolumeCompensationMult();\n                }\n                this.eqFilterCount = eqFilterSettings.controlPointCount;\n            }\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n            let eqFilterVolumeStart = eqFilterVolume;\n            let eqFilterVolumeEnd = eqFilterVolume;\n            this.eqFilterVolume = eqFilterVolumeStart;\n            this.eqFilterVolumeDelta = (eqFilterVolumeEnd - eqFilterVolumeStart) / roundedSamplesPerTick;\n        }\n        if (usesPanning) {\n            this.panningMode = effect.panMode;\n            const panEnvelopeStart = envelopeStarts[42] * 2.0 - 1.0;\n            const panEnvelopeEnd = envelopeEnds[42] * 2.0 - 1.0;\n            let usePanStart = effect.pan;\n            let usePanEnd = effect.pan;\n            if (synth.isModActive(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex)) {\n                usePanStart = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, false);\n                usePanEnd = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, true);\n            }\n            let panStart = Math.max(-1.0, Math.min(1.0, (usePanStart - Config.panCenter) / Config.panCenter * panEnvelopeStart));\n            let panEnd = Math.max(-1.0, Math.min(1.0, (usePanEnd - Config.panCenter) / Config.panCenter * panEnvelopeEnd));\n            const volumeStartL = Math.cos((1 + panStart) * Math.PI * 0.25) * 1.414;\n            const volumeStartR = Math.cos((1 - panStart) * Math.PI * 0.25) * 1.414;\n            const volumeEndL = Math.cos((1 + panEnd) * Math.PI * 0.25) * 1.414;\n            const volumeEndR = Math.cos((1 - panEnd) * Math.PI * 0.25) * 1.414;\n            const maxDelaySamples = samplesPerSecond * Config.panDelaySecondsMax;\n            let usePanDelayStart = effect.panDelay;\n            let usePanDelayEnd = effect.panDelay;\n            if (synth.isModActive(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex)) {\n                usePanDelayStart = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, false);\n                usePanDelayEnd = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, true);\n            }\n            const delayStart = panStart * usePanDelayStart * maxDelaySamples / 10;\n            const delayEnd = panEnd * usePanDelayEnd * maxDelaySamples / 10;\n            const delayStartL = Math.max(0.0, delayStart);\n            const delayStartR = Math.max(0.0, -delayStart);\n            const delayEndL = Math.max(0.0, delayEnd);\n            const delayEndR = Math.max(0.0, -delayEnd);\n            this.panningVolumeL = volumeStartL;\n            this.panningVolumeR = volumeStartR;\n            this.panningVolumeDeltaL = (volumeEndL - volumeStartL) / roundedSamplesPerTick;\n            this.panningVolumeDeltaR = (volumeEndR - volumeStartR) / roundedSamplesPerTick;\n            this.panningOffsetL = this.panningDelayPos - delayStartL + synth.panningDelayBufferSize;\n            this.panningOffsetR = this.panningDelayPos - delayStartR + synth.panningDelayBufferSize;\n            this.panningOffsetDeltaL = (delayEndL - delayStartL) / roundedSamplesPerTick;\n            this.panningOffsetDeltaR = (delayEndR - delayStartR) / roundedSamplesPerTick;\n        }\n        if (usesGain) {\n            const gainEnvelopeStart = envelopeStarts[57];\n            const gainEnvelopeEnd = envelopeEnds[57];\n            let useGainStart = effect.gain;\n            let useGainEnd = effect.gain;\n            if (synth.isModActive(Config.modulators.dictionary[\"gain\"].index, channelIndex, instrumentIndex)) {\n                useGainStart = synth.getModValue(Config.modulators.dictionary[\"gain\"].index, channelIndex, instrumentIndex, false);\n                useGainEnd = synth.getModValue(Config.modulators.dictionary[\"gain\"].index, channelIndex, instrumentIndex, true);\n            }\n            let gainStart = Math.min(Config.gainRangeMult, gainEnvelopeStart * useGainStart / (Config.volumeRange / 2 * Config.gainRangeMult)) * Config.gainRangeMult;\n            let gainEnd = Math.min(Config.gainRangeMult, gainEnvelopeEnd * useGainEnd / (Config.volumeRange / 2 * Config.gainRangeMult)) * Config.gainRangeMult;\n            this.gain = gainStart;\n            this.gainDelta = (gainEnd - gainStart) / roundedSamplesPerTick;\n        }\n        if (usesChorus) {\n            const chorusEnvelopeStart = envelopeStarts[46];\n            const chorusEnvelopeEnd = envelopeEnds[46];\n            let useChorusStart = effect.chorus;\n            let useChorusEnd = effect.chorus;\n            if (synth.isModActive(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex)) {\n                useChorusStart = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, false);\n                useChorusEnd = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, true);\n            }\n            let chorusStart = Math.min(1.0, chorusEnvelopeStart * useChorusStart / (Config.chorusRange - 1));\n            let chorusEnd = Math.min(1.0, chorusEnvelopeEnd * useChorusEnd / (Config.chorusRange - 1));\n            chorusStart = chorusStart * 0.6 + (Math.pow(chorusStart, 6.0)) * 0.4;\n            chorusEnd = chorusEnd * 0.6 + (Math.pow(chorusEnd, 6.0)) * 0.4;\n            const chorusCombinedMultStart = 1.0 / Math.sqrt(3.0 * chorusStart * chorusStart + 1.0);\n            const chorusCombinedMultEnd = 1.0 / Math.sqrt(3.0 * chorusEnd * chorusEnd + 1.0);\n            this.chorusVoiceMult = chorusStart;\n            this.chorusVoiceMultDelta = (chorusEnd - chorusStart) / roundedSamplesPerTick;\n            this.chorusCombinedMult = chorusCombinedMultStart;\n            this.chorusCombinedMultDelta = (chorusCombinedMultEnd - chorusCombinedMultStart) / roundedSamplesPerTick;\n        }\n        if (usesFlanger) {\n            const flangerEnvelopeStart = envelopeStarts[58];\n            const flangerEnvelopeEnd = envelopeEnds[58];\n            let useFlangerStart = effect.flanger;\n            let useFlangerEnd = effect.flanger;\n            if (synth.isModActive(Config.modulators.dictionary[\"flanger\"].index, channelIndex, instrumentIndex)) {\n                useFlangerStart = synth.getModValue(Config.modulators.dictionary[\"flanger\"].index, channelIndex, instrumentIndex, false);\n                useFlangerEnd = synth.getModValue(Config.modulators.dictionary[\"flanger\"].index, channelIndex, instrumentIndex, true);\n            }\n            let flangerStart = Math.min(1.0, flangerEnvelopeStart * useFlangerStart / (Config.flangerRange - 1));\n            let flangerEnd = Math.min(1.0, flangerEnvelopeEnd * useFlangerEnd / (Config.flangerRange - 1));\n            const flangerSpeedEnvelopeStart = envelopeStarts[59];\n            const flangerSpeedEnvelopeEnd = envelopeEnds[59];\n            let useFlangerSpeedStart = effect.flangerSpeed;\n            let useFlangerSpeedEnd = effect.flangerSpeed;\n            if (synth.isModActive(Config.modulators.dictionary[\"flanger speed\"].index, channelIndex, instrumentIndex)) {\n                useFlangerSpeedStart = synth.getModValue(Config.modulators.dictionary[\"flanger speed\"].index, channelIndex, instrumentIndex, false);\n                useFlangerSpeedEnd = synth.getModValue(Config.modulators.dictionary[\"flanger speed\"].index, channelIndex, instrumentIndex, true);\n            }\n            let flangerSpeedStart = flangerSpeedEnvelopeStart * useFlangerSpeedStart + 2;\n            let flangerSpeedEnd = flangerSpeedEnvelopeEnd * useFlangerSpeedEnd + 2;\n            const flangerDepthEnvelopeStart = envelopeStarts[60];\n            const flangerDepthEnvelopeEnd = envelopeEnds[60];\n            let useFlangerDepthStart = effect.flangerDepth;\n            let useFlangerDepthEnd = effect.flangerDepth;\n            if (synth.isModActive(Config.modulators.dictionary[\"flanger depth\"].index, channelIndex, instrumentIndex)) {\n                useFlangerDepthStart = synth.getModValue(Config.modulators.dictionary[\"flanger depth\"].index, channelIndex, instrumentIndex, false);\n                useFlangerDepthEnd = synth.getModValue(Config.modulators.dictionary[\"flanger depth\"].index, channelIndex, instrumentIndex, true);\n            }\n            let flangerDepthStart = flangerDepthEnvelopeStart * useFlangerDepthStart * 2 + 2;\n            let flangerDepthEnd = flangerDepthEnvelopeEnd * useFlangerDepthEnd * 2 + 2;\n            const flangerFeedbackEnvelopeStart = envelopeStarts[61];\n            const flangerFeedbackEnvelopeEnd = envelopeEnds[61];\n            let useFlangerFeedbackStart = effect.flangerFeedback;\n            let useFlangerFeedbackEnd = effect.flangerFeedback;\n            if (synth.isModActive(Config.modulators.dictionary[\"flanger feedback\"].index, channelIndex, instrumentIndex)) {\n                useFlangerFeedbackStart = synth.getModValue(Config.modulators.dictionary[\"flanger feedback\"].index, channelIndex, instrumentIndex, false);\n                useFlangerFeedbackEnd = synth.getModValue(Config.modulators.dictionary[\"flanger feedback\"].index, channelIndex, instrumentIndex, true);\n            }\n            let flangerFeedbackStart = flangerFeedbackEnvelopeStart * useFlangerFeedbackStart * 1.5;\n            let flangerFeedbackEnd = flangerFeedbackEnvelopeEnd * useFlangerFeedbackEnd * 1.5;\n            this.flanger = flangerStart;\n            this.flangerDelta = (flangerEnd - flangerStart) / roundedSamplesPerTick;\n            this.flangerSpeed = flangerSpeedStart;\n            this.flangerSpeedDelta = (flangerSpeedEnd - flangerSpeedStart) / roundedSamplesPerTick;\n            this.flangerDepth = flangerDepthStart;\n            this.flangerDepthDelta = (flangerDepthEnd - flangerDepthStart) / roundedSamplesPerTick;\n            this.flangerFeedback = (Math.sqrt(flangerFeedbackStart) / Math.sqrt(Config.flangerFeedbackRange));\n            this.flangerFeedbackDelta = ((Math.sqrt(flangerFeedbackEnd) / Math.sqrt(Config.flangerFeedbackRange)) - (Math.sqrt(flangerFeedbackStart) / Math.sqrt(Config.flangerFeedbackRange))) / roundedSamplesPerTick;\n        }\n        if (usesRingModulation) {\n            let useRingModStart = effect.ringModulation;\n            let useRingModEnd = effect.ringModulation;\n            let useRingModEnvelopeStart = envelopeStarts[50];\n            let useRingModEnvelopeEnd = envelopeEnds[50];\n            let useRingModHzStart = Math.min(1.0, effect.ringModulationHz / (Config.ringModHzRange - 1));\n            let useRingModHzEnd = Math.min(1.0, effect.ringModulationHz / (Config.ringModHzRange - 1));\n            let useRingModHzEnvelopeStart = envelopeStarts[51];\n            let useRingModHzEnvelopeEnd = envelopeEnds[51];\n            if (synth.isModActive(Config.modulators.dictionary[\"ring modulation\"].index, channelIndex, instrumentIndex)) {\n                useRingModStart = (synth.getModValue(Config.modulators.dictionary[\"ring modulation\"].index, channelIndex, instrumentIndex, false));\n                useRingModEnd = (synth.getModValue(Config.modulators.dictionary[\"ring modulation\"].index, channelIndex, instrumentIndex, true));\n            }\n            if (synth.isModActive(Config.modulators.dictionary[\"ring mod hertz\"].index, channelIndex, instrumentIndex)) {\n                useRingModHzStart = Math.min(1.0, Math.max(0.0, (synth.getModValue(Config.modulators.dictionary[\"ring mod hertz\"].index, channelIndex, instrumentIndex, false)) / (Config.ringModHzRange - 1)));\n                useRingModHzEnd = Math.min(1.0, Math.max(0.0, (synth.getModValue(Config.modulators.dictionary[\"ring mod hertz\"].index, channelIndex, instrumentIndex, false)) / (Config.ringModHzRange - 1)));\n            }\n            useRingModHzStart *= useRingModHzEnvelopeStart;\n            useRingModHzEnd *= useRingModHzEnvelopeEnd;\n            let ringModStart = Math.min(1.0, (useRingModStart * useRingModEnvelopeStart) / (Config.ringModRange - 1));\n            let ringModEnd = Math.min(1.0, (useRingModEnd * useRingModEnvelopeEnd) / (Config.ringModRange - 1));\n            this.ringModMix = ringModStart;\n            this.ringModMixDelta = (ringModEnd - ringModStart) / roundedSamplesPerTick;\n            this.ringModHzOffset = effect.ringModHzOffset;\n            let ringModPhaseDeltaStart = (Math.max(0, calculateRingModHertz(useRingModHzStart))) / synth.samplesPerSecond;\n            let ringModPhaseDeltaEnd = (Math.max(0, calculateRingModHertz(useRingModHzEnd))) / synth.samplesPerSecond;\n            this.ringModMixFadeDelta = 0;\n            if (this.ringModMixFade < 0)\n                this.ringModMixFade = 0;\n            if (ringModPhaseDeltaStart <= 0 && ringModPhaseDeltaEnd <= 0 && this.ringModMixFade != 0) {\n                this.ringModMixFadeDelta = this.ringModMixFade / -10;\n            }\n            else if (ringModPhaseDeltaStart > 0 && ringModPhaseDeltaEnd > 0) {\n                this.ringModMixFade = 1.0;\n            }\n            this.ringModPhaseDelta = ringModPhaseDeltaStart;\n            this.ringModPhaseDeltaScale = ringModPhaseDeltaStart == 0 ? 1 : Math.pow(ringModPhaseDeltaEnd / ringModPhaseDeltaStart, 1.0 / roundedSamplesPerTick);\n            this.ringModWaveformIndex = effect.ringModWaveformIndex;\n            this.ringModPulseWidth = effect.ringModPulseWidth;\n        }\n        let maxEchoMult = 0.0;\n        let averageEchoDelaySeconds = 0.0;\n        if (usesEcho) {\n            const echoSustainEnvelopeStart = envelopeStarts[47];\n            const echoSustainEnvelopeEnd = envelopeEnds[47];\n            let useEchoSustainStart = effect.echoSustain;\n            let useEchoSustainEnd = effect.echoSustain;\n            if (synth.isModActive(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex)) {\n                useEchoSustainStart = Math.max(0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, false));\n                useEchoSustainEnd = Math.max(0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, true));\n            }\n            const echoMultStart = Math.min(1.0, Math.pow(echoSustainEnvelopeStart * useEchoSustainStart / Config.echoSustainRange, 1.1)) * 0.9;\n            const echoMultEnd = Math.min(1.0, Math.pow(echoSustainEnvelopeEnd * useEchoSustainEnd / Config.echoSustainRange, 1.1)) * 0.9;\n            this.echoMult = echoMultStart;\n            this.echoMultDelta = Math.max(0.0, (echoMultEnd - echoMultStart) / roundedSamplesPerTick);\n            maxEchoMult = Math.max(echoMultStart, echoMultEnd);\n            const echoDelayEnvelopeStart = envelopeStarts[56];\n            const echoDelayEnvelopeEnd = envelopeEnds[56];\n            let useEchoDelayStart = effect.echoDelay * echoDelayEnvelopeStart;\n            let useEchoDelayEnd = effect.echoDelay * echoDelayEnvelopeEnd;\n            if (synth.isModActive(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex)) {\n                useEchoDelayStart = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, false) * echoDelayEnvelopeStart;\n                useEchoDelayEnd = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, true) * echoDelayEnvelopeEnd;\n            }\n            const tmpEchoDelayOffsetStart = Math.round((useEchoDelayStart + 1) * Config.echoDelayStepTicks * samplesPerTick);\n            const tmpEchoDelayOffsetEnd = Math.round((useEchoDelayEnd + 1) * Config.echoDelayStepTicks * samplesPerTick);\n            if (this.echoDelayOffsetEnd != null) {\n                this.echoDelayOffsetStart = this.echoDelayOffsetEnd;\n            }\n            else {\n                this.echoDelayOffsetStart = tmpEchoDelayOffsetStart;\n            }\n            this.echoDelayOffsetEnd = tmpEchoDelayOffsetEnd;\n            averageEchoDelaySeconds = (this.echoDelayOffsetStart + this.echoDelayOffsetEnd) * 0.5 / samplesPerSecond;\n            this.echoDelayOffsetRatio = 0.0;\n            this.echoDelayOffsetRatioDelta = 1.0 / roundedSamplesPerTick;\n            this.echoPingPong = ((effect.echoPingPong / Config.panMax) - 0.5) * 2;\n            const shelfRadians = 2.0 * Math.PI * Config.echoShelfHz / synth.samplesPerSecond;\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.echoShelfGain);\n            this.echoShelfA1 = Synth.tempFilterStartCoefficients.a[1];\n            this.echoShelfB0 = Synth.tempFilterStartCoefficients.b[0];\n            this.echoShelfB1 = Synth.tempFilterStartCoefficients.b[1];\n        }\n        let maxReverbMult = 0.0;\n        if (usesReverb) {\n            const reverbEnvelopeStart = envelopeStarts[48];\n            const reverbEnvelopeEnd = envelopeEnds[48];\n            let useReverbStart = effect.reverb;\n            let useReverbEnd = effect.reverb;\n            if (synth.isModActive(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex)) {\n                useReverbStart = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, false);\n                useReverbEnd = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, true);\n            }\n            if (synth.isModActive(Config.modulators.dictionary[\"song reverb\"].index, channelIndex, instrumentIndex)) {\n                useReverbStart *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\n                useReverbEnd *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\n            }\n            const reverbStart = Math.min(1.0, Math.pow(reverbEnvelopeStart * useReverbStart / Config.reverbRange, 0.667)) * 0.425;\n            const reverbEnd = Math.min(1.0, Math.pow(reverbEnvelopeEnd * useReverbEnd / Config.reverbRange, 0.667)) * 0.425;\n            this.reverbMult = reverbStart;\n            this.reverbMultDelta = (reverbEnd - reverbStart) / roundedSamplesPerTick;\n            maxReverbMult = Math.max(reverbStart, reverbEnd);\n            const shelfRadians = 2.0 * Math.PI * Config.reverbShelfHz / synth.samplesPerSecond;\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.reverbShelfGain);\n            this.reverbShelfA1 = Synth.tempFilterStartCoefficients.a[1];\n            this.reverbShelfB0 = Synth.tempFilterStartCoefficients.b[0];\n            this.reverbShelfB1 = Synth.tempFilterStartCoefficients.b[1];\n        }\n        if (!instrumentState.tonesAddedInThisTick && !instrumentState.flushingDelayLines) {\n            const attenuationThreshold = 1.0 / 256.0;\n            const halfLifeMult = -Math.log2(attenuationThreshold);\n            if (usesChorus) {\n                instrumentState.delayDuration += Config.chorusMaxDelay;\n            }\n            if (usesFlanger) {\n                instrumentState.delayDuration += Config.flangerMaxDelay;\n            }\n            if (usesEcho) {\n                const attenuationPerSecond = Math.pow(maxEchoMult, 1.0 / averageEchoDelaySeconds);\n                const halfLife = -1.0 / Math.log2(attenuationPerSecond);\n                const echoDuration = halfLife * halfLifeMult;\n                instrumentState.delayDuration += echoDuration;\n            }\n            if (usesReverb) {\n                const averageMult = maxReverbMult * 2.0;\n                const averageReverbDelaySeconds = (Config.reverbDelayBufferSize / 4.0) / samplesPerSecond;\n                const attenuationPerSecond = Math.pow(averageMult, 1.0 / averageReverbDelaySeconds);\n                const halfLife = -1.0 / Math.log2(attenuationPerSecond);\n                const reverbDuration = halfLife * halfLifeMult;\n                instrumentState.delayDuration += reverbDuration;\n            }\n            if (usesGranular) {\n                this.computeGrains = false;\n            }\n        }\n        else {\n            if (usesChorus)\n                instrumentState.totalDelaySamples += synth.chorusDelayBufferSize;\n            if (usesFlanger)\n                instrumentState.totalDelaySamples += synth.flangerDelayBufferSize;\n            if (usesEcho)\n                instrumentState.totalDelaySamples += this.echoDelayLineL.length;\n            if (usesReverb)\n                instrumentState.totalDelaySamples += Config.reverbDelayBufferSize;\n            if (usesGranular)\n                instrumentState.totalDelaySamples += this.granularMaximumDelayTimeInSeconds;\n        }\n    }\n}\n//# sourceMappingURL=EffectState.js.map","const PRIME32_1 = 2654435761;\nconst PRIME32_2 = 2246822519;\nconst PRIME32_3 = 3266489917;\nconst PRIME32_4 = 668265263;\nconst PRIME32_5 = 374761393;\nlet encoder;\n/**\n *\n * @param input - byte array or string\n * @param seed - optional seed (32-bit unsigned);\n */\nexport function xxHash32(input, seed = 0) {\n    const buffer = typeof input === 'string' ? (encoder ??= new TextEncoder()).encode(input) : input;\n    const b = buffer;\n    /*\n        Step 1. Initialize internal accumulators\n        Each accumulator gets an initial value based on optional seed input. Since the seed is optional, it can be 0.\n\n        ```\n            u32 acc1 = seed + PRIME32_1 + PRIME32_2;\n            u32 acc2 = seed + PRIME32_2;\n            u32 acc3 = seed + 0;\n            u32 acc4 = seed - PRIME32_1;\n        ```\n        Special case : input is less than 16 bytes\n        When input is too small (< 16 bytes), the algorithm will not process any stripe. Consequently, it will not\n        make use of parallel accumulators.\n\n        In which case, a simplified initialization is performed, using a single accumulator :\n\n        u32 acc  = seed + PRIME32_5;\n        The algorithm then proceeds directly to step 4.\n    */\n    let acc = (seed + PRIME32_5) & 0xffffffff;\n    let offset = 0;\n    if (b.length >= 16) {\n        const accN = [\n            (seed + PRIME32_1 + PRIME32_2) & 0xffffffff,\n            (seed + PRIME32_2) & 0xffffffff,\n            (seed + 0) & 0xffffffff,\n            (seed - PRIME32_1) & 0xffffffff,\n        ];\n        /*\n            Step 2. Process stripes\n            A stripe is a contiguous segment of 16 bytes. It is evenly divided into 4 lanes, of 4 bytes each.\n            The first lane is used to update accumulator 1, the second lane is used to update accumulator 2, and so on.\n\n            Each lane read its associated 32-bit value using little-endian convention.\n\n            For each {lane, accumulator}, the update process is called a round, and applies the following formula :\n\n            ```\n            accN = accN + (laneN * PRIME32_2);\n            accN = accN <<< 13;\n            accN = accN * PRIME32_1;\n            ```\n\n            This shuffles the bits so that any bit from input lane impacts several bits in output accumulator.\n            All operations are performed modulo 2^32.\n\n            Input is consumed one full stripe at a time. Step 2 is looped as many times as necessary to consume\n            the whole input, except the last remaining bytes which cannot form a stripe (< 16 bytes). When that\n            happens, move to step 3.\n        */\n        const b = buffer;\n        const limit = b.length - 16;\n        let lane = 0;\n        for (offset = 0; (offset & 0xfffffff0) <= limit; offset += 4) {\n            const i = offset;\n            const laneN0 = b[i + 0] + (b[i + 1] << 8);\n            const laneN1 = b[i + 2] + (b[i + 3] << 8);\n            const laneNP = laneN0 * PRIME32_2 + ((laneN1 * PRIME32_2) << 16);\n            let acc = (accN[lane] + laneNP) & 0xffffffff;\n            acc = (acc << 13) | (acc >>> 19);\n            const acc0 = acc & 0xffff;\n            const acc1 = acc >>> 16;\n            accN[lane] = (acc0 * PRIME32_1 + ((acc1 * PRIME32_1) << 16)) & 0xffffffff;\n            lane = (lane + 1) & 0x3;\n        }\n        /*\n            Step 3. Accumulator convergence\n            All 4 lane accumulators from previous steps are merged to produce a single remaining accumulator\n            of same width (32-bit). The associated formula is as follows :\n\n            ```\n            acc = (acc1 <<< 1) + (acc2 <<< 7) + (acc3 <<< 12) + (acc4 <<< 18);\n            ```\n        */\n        acc =\n            (((accN[0] << 1) | (accN[0] >>> 31)) +\n                ((accN[1] << 7) | (accN[1] >>> 25)) +\n                ((accN[2] << 12) | (accN[2] >>> 20)) +\n                ((accN[3] << 18) | (accN[3] >>> 14))) &\n                0xffffffff;\n    }\n    /*\n        Step 4. Add input length\n        The input total length is presumed known at this stage. This step is just about adding the length to\n        accumulator, so that it participates to final mixing.\n\n        ```\n        acc = acc + (u32)inputLength;\n        ```\n    */\n    acc = (acc + buffer.length) & 0xffffffff;\n    /*\n        Step 5. Consume remaining input\n        There may be up to 15 bytes remaining to consume from the input. The final stage will digest them according\n        to following pseudo-code :\n        ```\n        while (remainingLength >= 4) {\n            lane = read_32bit_little_endian(input_ptr);\n            acc = acc + lane * PRIME32_3;\n            acc = (acc <<< 17) * PRIME32_4;\n            input_ptr += 4; remainingLength -= 4;\n        }\n        ```\n        This process ensures that all input bytes are present in the final mix.\n    */\n    const limit = buffer.length - 4;\n    for (; offset <= limit; offset += 4) {\n        const i = offset;\n        const laneN0 = b[i + 0] + (b[i + 1] << 8);\n        const laneN1 = b[i + 2] + (b[i + 3] << 8);\n        const laneP = laneN0 * PRIME32_3 + ((laneN1 * PRIME32_3) << 16);\n        acc = (acc + laneP) & 0xffffffff;\n        acc = (acc << 17) | (acc >>> 15);\n        acc = ((acc & 0xffff) * PRIME32_4 + (((acc >>> 16) * PRIME32_4) << 16)) & 0xffffffff;\n    }\n    /*\n        ```\n        while (remainingLength >= 1) {\n            lane = read_byte(input_ptr);\n            acc = acc + lane * PRIME32_5;\n            acc = (acc <<< 11) * PRIME32_1;\n            input_ptr += 1; remainingLength -= 1;\n        }\n        ```\n    */\n    for (; offset < b.length; ++offset) {\n        const lane = b[offset];\n        acc = acc + lane * PRIME32_5;\n        acc = (acc << 11) | (acc >>> 21);\n        acc = ((acc & 0xffff) * PRIME32_1 + (((acc >>> 16) * PRIME32_1) << 16)) & 0xffffffff;\n    }\n    /*\n        Step 6. Final mix (avalanche)\n        The final mix ensures that all input bits have a chance to impact any bit in the output digest,\n        resulting in an unbiased distribution. This is also called avalanche effect.\n        ```\n        acc = acc xor (acc >> 15);\n        acc = acc * PRIME32_2;\n        acc = acc xor (acc >> 13);\n        acc = acc * PRIME32_3;\n        acc = acc xor (acc >> 16);\n        ```\n    */\n    acc = acc ^ (acc >>> 15);\n    acc = (((acc & 0xffff) * PRIME32_2) & 0xffffffff) + (((acc >>> 16) * PRIME32_2) << 16);\n    acc = acc ^ (acc >>> 13);\n    acc = (((acc & 0xffff) * PRIME32_3) & 0xffffffff) + (((acc >>> 16) * PRIME32_3) << 16);\n    acc = acc ^ (acc >>> 16);\n    // turn any negatives back into a positive number;\n    return acc < 0 ? acc + 4294967296 : acc;\n}\n//# sourceMappingURL=xxHash32.js.map","import { Config, getArpeggioPitchIndex } from \"./SynthConfig\";\nimport { Synth } from \"./synth\";\nimport { xxHash32 } from \"js-xxhash\";\nexport class EnvelopeComputer {\n    constructor() {\n        this.noteSecondsStart = [];\n        this.noteSecondsStartUnscaled = 0.0;\n        this.noteSecondsEnd = [];\n        this.noteSecondsEndUnscaled = 0.0;\n        this.noteTicksStart = 0.0;\n        this.noteTicksEnd = 0.0;\n        this.noteSizeStart = Config.noteSizeMax;\n        this.noteSizeEnd = Config.noteSizeMax;\n        this.prevNoteSize = Config.noteSizeMax;\n        this.nextNoteSize = Config.noteSizeMax;\n        this._noteSizeFinal = Config.noteSizeMax;\n        this.prevNoteSecondsStart = [];\n        this.prevNoteSecondsStartUnscaled = 0.0;\n        this.prevNoteSecondsEnd = [];\n        this.prevNoteSecondsEndUnscaled = 0.0;\n        this.prevNoteTicksStart = 0.0;\n        this.prevNoteTicksEnd = 0.0;\n        this._prevNoteSizeFinal = Config.noteSizeMax;\n        this.tickTimeEnd = [];\n        this.drumsetFilterEnvelopeStart = 0.0;\n        this.drumsetFilterEnvelopeEnd = 0.0;\n        this.prevSlideStart = false;\n        this.prevSlideEnd = false;\n        this.nextSlideStart = false;\n        this.nextSlideEnd = false;\n        this.prevSlideRatioStart = 0.0;\n        this.prevSlideRatioEnd = 0.0;\n        this.nextSlideRatioStart = 0.0;\n        this.nextSlideRatioEnd = 0.0;\n        this.startPinTickAbsolute = null;\n        this.startPinTickDefaultPitch = null;\n        this.startPinTickPitch = null;\n        this.envelopeStarts = [];\n        this.envelopeEnds = [];\n        this._modifiedEnvelopeIndices = [];\n        this._modifiedEnvelopeCount = 0;\n        this.lowpassCutoffDecayVolumeCompensation = 1.0;\n        const length = 62;\n        for (let i = 0; i < length; i++) {\n            this.envelopeStarts[i] = 1.0;\n            this.envelopeEnds[i] = 1.0;\n        }\n        this.reset();\n    }\n    reset() {\n        for (let envelopeIndex = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++) {\n            this.noteSecondsEnd[envelopeIndex] = 0.0;\n            this.prevNoteSecondsEnd[envelopeIndex] = 0.0;\n        }\n        this.noteSecondsEndUnscaled = 0.0;\n        this.noteTicksEnd = 0.0;\n        this._noteSizeFinal = Config.noteSizeMax;\n        this.prevNoteSecondsEndUnscaled = 0.0;\n        this.prevNoteTicksEnd = 0.0;\n        this._prevNoteSizeFinal = Config.noteSizeMax;\n        this._modifiedEnvelopeCount = 0;\n        this.drumsetFilterEnvelopeStart = 0.0;\n        this.drumsetFilterEnvelopeEnd = 0.0;\n        this.startPinTickAbsolute = null;\n        this.startPinTickDefaultPitch = null;\n        this.startPinTickPitch = null;\n    }\n    computeEnvelopes(instrument, currentPart, tickTimeStart, tickTimeStartReal, secondsPerTick, tone, timeScale, instrumentState, synth, channelIndex, instrumentIndex) {\n        const secondsPerTickUnscaled = secondsPerTick;\n        const transition = instrument.getTransition();\n        if (tone != null && tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\n            this.prevNoteSecondsEndUnscaled = this.noteSecondsEndUnscaled;\n            this.prevNoteTicksEnd = this.noteTicksEnd;\n            this._prevNoteSizeFinal = this._noteSizeFinal;\n            this.noteSecondsEndUnscaled = 0.0;\n            this.noteTicksEnd = 0.0;\n            for (let envelopeIndex = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++) {\n                this.prevNoteSecondsEnd[envelopeIndex] = this.noteSecondsEnd[envelopeIndex];\n                this.noteSecondsEnd[envelopeIndex] = 0.0;\n            }\n        }\n        if (tone != null) {\n            if (tone.note != null) {\n                this._noteSizeFinal = tone.note.pins[tone.note.pins.length - 1].size;\n            }\n            else {\n                this._noteSizeFinal = Config.noteSizeMax;\n            }\n        }\n        const tickTimeEnd = [];\n        const tickTimeEndReal = tickTimeStartReal + 1.0;\n        const noteSecondsStart = [];\n        const noteSecondsStartUnscaled = this.noteSecondsEndUnscaled;\n        const noteSecondsEnd = [];\n        const noteSecondsEndUnscaled = noteSecondsStartUnscaled + secondsPerTickUnscaled;\n        const noteTicksStart = this.noteTicksEnd;\n        const noteTicksEnd = noteTicksStart + 1.0;\n        const prevNoteSecondsStart = [];\n        const prevNoteSecondsEnd = [];\n        const prevNoteSecondsStartUnscaled = this.prevNoteSecondsEndUnscaled;\n        const prevNoteSecondsEndUnscaled = prevNoteSecondsStartUnscaled + secondsPerTickUnscaled;\n        const prevNoteTicksStart = this.prevNoteTicksEnd;\n        const prevNoteTicksEnd = prevNoteTicksStart + 1.0;\n        const beatsPerTick = 1.0 / (Config.ticksPerPart * Config.partsPerBeat);\n        const beatTimeStart = [];\n        const beatTimeEnd = [];\n        let noteSizeStart = this._noteSizeFinal;\n        let noteSizeEnd = this._noteSizeFinal;\n        let prevNoteSize = this._prevNoteSizeFinal;\n        let nextNoteSize = 0;\n        let prevSlideStart = false;\n        let prevSlideEnd = false;\n        let nextSlideStart = false;\n        let nextSlideEnd = false;\n        let prevSlideRatioStart = 0.0;\n        let prevSlideRatioEnd = 0.0;\n        let nextSlideRatioStart = 0.0;\n        let nextSlideRatioEnd = 0.0;\n        if (tone == null) {\n            this.startPinTickAbsolute = null;\n            this.startPinTickDefaultPitch = null;\n        }\n        if (tone != null && tone.note != null && !tone.passedEndOfNote) {\n            const endPinIndex = tone.note.getEndPinIndex(currentPart);\n            const startPin = tone.note.pins[endPinIndex - 1];\n            const endPin = tone.note.pins[endPinIndex];\n            const startPinTick = (tone.note.start + startPin.time) * Config.ticksPerPart;\n            if (this.startPinTickAbsolute == null || (!(transition.continues || transition.slides)) && tone.passedEndOfNote)\n                this.startPinTickAbsolute = startPinTick + synth.computeTicksSinceStart(true);\n            if (this.startPinTickDefaultPitch == null || tone.passedEndOfNote)\n                this.startPinTickDefaultPitch = this.getPitchValue(instrument, tone, instrumentState, false);\n            if (!tone.passedEndOfNote)\n                this.startPinTickPitch = this.getPitchValue(instrument, tone, instrumentState, true);\n            const endPinTick = (tone.note.start + endPin.time) * Config.ticksPerPart;\n            const ratioStart = (tickTimeStartReal - startPinTick) / (endPinTick - startPinTick);\n            const ratioEnd = (tickTimeEndReal - startPinTick) / (endPinTick - startPinTick);\n            noteSizeStart = startPin.size + (endPin.size - startPin.size) * ratioStart;\n            noteSizeEnd = startPin.size + (endPin.size - startPin.size) * ratioEnd;\n            if (transition.slides) {\n                const noteStartTick = tone.noteStartPart * Config.ticksPerPart;\n                const noteEndTick = tone.noteEndPart * Config.ticksPerPart;\n                const noteLengthTicks = noteEndTick - noteStartTick;\n                const maximumSlideTicks = noteLengthTicks * 0.5;\n                const slideTicks = Math.min(maximumSlideTicks, transition.slideTicks);\n                if (tone.prevNote != null && !tone.forceContinueAtStart) {\n                    if (tickTimeStartReal - noteStartTick < slideTicks) {\n                        prevSlideStart = true;\n                        prevSlideRatioStart = 0.5 * (1.0 - (tickTimeStartReal - noteStartTick) / slideTicks);\n                    }\n                    if (tickTimeEndReal - noteStartTick < slideTicks) {\n                        prevSlideEnd = true;\n                        prevSlideRatioEnd = 0.5 * (1.0 - (tickTimeEndReal - noteStartTick) / slideTicks);\n                    }\n                }\n                if (tone.nextNote != null && !tone.forceContinueAtEnd) {\n                    nextNoteSize = tone.nextNote.pins[0].size;\n                    if (noteEndTick - tickTimeStartReal < slideTicks) {\n                        nextSlideStart = true;\n                        nextSlideRatioStart = 0.5 * (1.0 - (noteEndTick - tickTimeStartReal) / slideTicks);\n                    }\n                    if (noteEndTick - tickTimeEndReal < slideTicks) {\n                        nextSlideEnd = true;\n                        nextSlideRatioEnd = 0.5 * (1.0 - (noteEndTick - tickTimeEndReal) / slideTicks);\n                    }\n                }\n            }\n        }\n        let lowpassCutoffDecayVolumeCompensation = 1.0;\n        let usedNoteSize = false;\n        for (let envelopeIndex = 0; envelopeIndex <= instrument.envelopeCount; envelopeIndex++) {\n            let automationTarget;\n            let targetIndex;\n            let envelope;\n            let inverse = false;\n            let isDiscrete = false;\n            let perEnvelopeSpeed = 1;\n            let globalEnvelopeSpeed = 1;\n            let envelopeSpeed = perEnvelopeSpeed * globalEnvelopeSpeed;\n            let perEnvelopeLowerBound = 0;\n            let perEnvelopeUpperBound = 1;\n            let timeSinceStart = 0;\n            let steps = 2;\n            let seed = 2;\n            let waveform = 0;\n            let startPinTickAbsolute = this.startPinTickAbsolute || 0.0;\n            let defaultPitch = this.startPinTickDefaultPitch || 0.0;\n            if (envelopeIndex == instrument.envelopeCount) {\n                if (usedNoteSize)\n                    break;\n                automationTarget = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\n                targetIndex = 0;\n                envelope = Config.newEnvelopes.dictionary[\"note size\"];\n            }\n            else {\n                let envelopeSettings = instrument.envelopes[envelopeIndex];\n                automationTarget = Config.instrumentAutomationTargets[envelopeSettings.target];\n                targetIndex = envelopeSettings.index;\n                envelope = Config.newEnvelopes[envelopeSettings.envelope];\n                inverse = instrument.envelopes[envelopeIndex].inverse;\n                isDiscrete = instrument.envelopes[envelopeIndex].discrete;\n                perEnvelopeSpeed = instrument.envelopes[envelopeIndex].perEnvelopeSpeed;\n                globalEnvelopeSpeed = Math.pow(instrument.envelopeSpeed, 2) / 144;\n                envelopeSpeed = perEnvelopeSpeed * globalEnvelopeSpeed;\n                perEnvelopeLowerBound = instrument.envelopes[envelopeIndex].perEnvelopeLowerBound;\n                perEnvelopeUpperBound = instrument.envelopes[envelopeIndex].perEnvelopeUpperBound;\n                if (synth.isModActive(Config.modulators.dictionary[\"individual envelope lower bound\"].index, channelIndex, instrumentIndex) && instrument.envelopes[envelopeIndex].tempEnvelopeLowerBound != null) {\n                    perEnvelopeLowerBound = instrument.envelopes[envelopeIndex].tempEnvelopeLowerBound;\n                }\n                if (synth.isModActive(Config.modulators.dictionary[\"individual envelope upper bound\"].index, channelIndex, instrumentIndex) && instrument.envelopes[envelopeIndex].tempEnvelopeUpperBound != null) {\n                    perEnvelopeUpperBound = instrument.envelopes[envelopeIndex].tempEnvelopeUpperBound;\n                }\n                if (!(perEnvelopeLowerBound <= perEnvelopeUpperBound)) {\n                    perEnvelopeLowerBound = 0;\n                    perEnvelopeUpperBound = 1;\n                }\n                timeSinceStart = synth.computeTicksSinceStart();\n                steps = instrument.envelopes[envelopeIndex].steps;\n                seed = instrument.envelopes[envelopeIndex].seed;\n                if (instrument.envelopes[envelopeIndex].waveform >= (envelope.name == \"lfo\" ? 7 : 4)) {\n                    instrument.envelopes[envelopeIndex].waveform = 0;\n                }\n                waveform = instrument.envelopes[envelopeIndex].waveform;\n                if (!timeScale[envelopeIndex])\n                    timeScale[envelopeIndex] = 0;\n                const secondsPerTickScaled = secondsPerTick * timeScale[envelopeIndex];\n                if (!tickTimeStart[envelopeIndex])\n                    tickTimeStart[envelopeIndex] = 0;\n                tickTimeEnd[envelopeIndex] = tickTimeStart[envelopeIndex] ? tickTimeStart[envelopeIndex] + timeScale[envelopeIndex] : timeScale[envelopeIndex];\n                noteSecondsStart[envelopeIndex] = this.noteSecondsEnd[envelopeIndex] ? this.noteSecondsEnd[envelopeIndex] : 0;\n                prevNoteSecondsStart[envelopeIndex] = this.prevNoteSecondsEnd[envelopeIndex] ? this.prevNoteSecondsEnd[envelopeIndex] : 0;\n                noteSecondsEnd[envelopeIndex] = noteSecondsStart[envelopeIndex] ? noteSecondsStart[envelopeIndex] + secondsPerTickScaled : secondsPerTickScaled;\n                prevNoteSecondsEnd[envelopeIndex] = prevNoteSecondsStart[envelopeIndex] ? prevNoteSecondsStart[envelopeIndex] + secondsPerTickScaled : secondsPerTickScaled;\n                beatTimeStart[envelopeIndex] = tickTimeStart[envelopeIndex] ? beatsPerTick * tickTimeStart[envelopeIndex] : beatsPerTick;\n                beatTimeEnd[envelopeIndex] = tickTimeEnd[envelopeIndex] ? beatsPerTick * tickTimeEnd[envelopeIndex] : beatsPerTick;\n                if (envelope.type == 1)\n                    usedNoteSize = true;\n            }\n            const pitch = (envelope.type == 2) ? this.computePitchEnvelope(instrument, envelopeIndex, (this.startPinTickPitch || this.getPitchValue(instrument, tone, instrumentState, true))) : 0;\n            if (automationTarget.computeIndex != null) {\n                const computeIndex = automationTarget.computeIndex + targetIndex;\n                let envelopeStart = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, globalEnvelopeSpeed, noteSecondsStartUnscaled, noteSecondsStart[envelopeIndex], beatTimeStart[envelopeIndex], timeSinceStart, noteSizeStart, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                if (prevSlideStart) {\n                    const other = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, globalEnvelopeSpeed, prevNoteSecondsStartUnscaled, prevNoteSecondsStart[envelopeIndex], beatTimeStart[envelopeIndex], timeSinceStart, prevNoteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                    envelopeStart += (other - envelopeStart) * prevSlideRatioStart;\n                }\n                if (nextSlideStart) {\n                    const other = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, globalEnvelopeSpeed, 0.0, 0.0, beatTimeStart[envelopeIndex], timeSinceStart, nextNoteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                    envelopeStart += (other - envelopeStart) * nextSlideRatioStart;\n                }\n                let envelopeEnd = envelopeStart;\n                if (isDiscrete == false) {\n                    envelopeEnd = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, globalEnvelopeSpeed, noteSecondsEndUnscaled, noteSecondsEnd[envelopeIndex], beatTimeEnd[envelopeIndex], timeSinceStart, noteSizeEnd, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                    if (prevSlideEnd) {\n                        const other = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, globalEnvelopeSpeed, prevNoteSecondsEndUnscaled, prevNoteSecondsEnd[envelopeIndex], beatTimeEnd[envelopeIndex], timeSinceStart, prevNoteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                        envelopeEnd += (other - envelopeEnd) * prevSlideRatioEnd;\n                    }\n                    if (nextSlideEnd) {\n                        const other = EnvelopeComputer.computeEnvelope(envelope, envelopeSpeed, globalEnvelopeSpeed, 0.0, 0.0, beatTimeEnd[envelopeIndex], timeSinceStart, nextNoteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, false, steps, seed, waveform, defaultPitch, startPinTickAbsolute);\n                        envelopeEnd += (other - envelopeEnd) * nextSlideRatioEnd;\n                    }\n                }\n                this.envelopeStarts[computeIndex] *= envelopeStart;\n                this.envelopeEnds[computeIndex] *= envelopeEnd;\n                this._modifiedEnvelopeIndices[this._modifiedEnvelopeCount++] = computeIndex;\n                if (automationTarget.isFilter) {\n                    const filterSettings = (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter;\n                    if (filterSettings.controlPointCount > targetIndex && filterSettings.controlPoints[targetIndex].type == 0) {\n                        lowpassCutoffDecayVolumeCompensation = Math.max(lowpassCutoffDecayVolumeCompensation, EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(envelope, perEnvelopeSpeed));\n                    }\n                }\n            }\n        }\n        this.noteSecondsStartUnscaled = noteSecondsStartUnscaled;\n        this.noteSecondsEndUnscaled = noteSecondsEndUnscaled;\n        this.noteTicksStart = noteTicksStart;\n        this.noteTicksEnd = noteTicksEnd;\n        this.prevNoteSecondsStartUnscaled = prevNoteSecondsStartUnscaled;\n        this.prevNoteSecondsEndUnscaled = prevNoteSecondsEndUnscaled;\n        this.prevNoteTicksStart = prevNoteTicksStart;\n        this.prevNoteTicksEnd = prevNoteTicksEnd;\n        for (let envelopeIndex = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++) {\n            this.noteSecondsStart[envelopeIndex] = noteSecondsStart[envelopeIndex];\n            this.noteSecondsEnd[envelopeIndex] = noteSecondsEnd[envelopeIndex];\n            this.prevNoteSecondsStart[envelopeIndex] = prevNoteSecondsStart[envelopeIndex];\n            this.prevNoteSecondsEnd[envelopeIndex] = prevNoteSecondsEnd[envelopeIndex];\n        }\n        this.prevNoteSize = prevNoteSize;\n        this.nextNoteSize = nextNoteSize;\n        this.noteSizeStart = noteSizeStart;\n        this.noteSizeEnd = noteSizeEnd;\n        this.prevSlideStart = prevSlideStart;\n        this.prevSlideEnd = prevSlideEnd;\n        this.nextSlideStart = nextSlideStart;\n        this.nextSlideEnd = nextSlideEnd;\n        this.prevSlideRatioStart = prevSlideRatioStart;\n        this.prevSlideRatioEnd = prevSlideRatioEnd;\n        this.nextSlideRatioStart = nextSlideRatioStart;\n        this.nextSlideRatioEnd = nextSlideRatioEnd;\n        this.lowpassCutoffDecayVolumeCompensation = lowpassCutoffDecayVolumeCompensation;\n    }\n    clearEnvelopes() {\n        for (let envelopeIndex = 0; envelopeIndex < this._modifiedEnvelopeCount; envelopeIndex++) {\n            const computeIndex = this._modifiedEnvelopeIndices[envelopeIndex];\n            this.envelopeStarts[computeIndex] = 1.0;\n            this.envelopeEnds[computeIndex] = 1.0;\n        }\n        this._modifiedEnvelopeCount = 0;\n    }\n    static computeEnvelope(envelope, perEnvelopeSpeed, globalEnvelopeSpeed, unspedTime, time, beats, timeSinceStart, noteSize, pitch, inverse, perEnvelopeLowerBound, perEnvelopeUpperBound, isDrumset = false, steps, seed, waveform, defaultPitch, notePinStart) {\n        const envelopeSpeed = isDrumset ? envelope.speed : 1;\n        const boundAdjust = (perEnvelopeUpperBound - perEnvelopeLowerBound);\n        switch (envelope.type) {\n            case 0: return perEnvelopeUpperBound;\n            case 1:\n                if (!inverse) {\n                    return Synth.noteSizeToVolumeMult(noteSize) * (boundAdjust) + perEnvelopeLowerBound;\n                }\n                else {\n                    return perEnvelopeUpperBound - Synth.noteSizeToVolumeMult(noteSize) * (boundAdjust);\n                }\n            case 2:\n                return pitch;\n            case 3:\n                const hashMax = 0xffffffff;\n                const step = steps;\n                switch (waveform) {\n                    case 0:\n                        if (step <= 1)\n                            return 1;\n                        const timeHash = xxHash32((perEnvelopeSpeed == 0 ? 0 : Math.floor((timeSinceStart * perEnvelopeSpeed) / (256))) + \"\", seed);\n                        if (inverse) {\n                            return perEnvelopeUpperBound - boundAdjust * (step / (step - 1)) * Math.floor(timeHash * step / (hashMax + 1)) / step;\n                        }\n                        else {\n                            return boundAdjust * (step / (step - 1)) * Math.floor(timeHash * (step) / (hashMax + 1)) / step + perEnvelopeLowerBound;\n                        }\n                    case 1:\n                        const pitchHash = xxHash32(defaultPitch + \"\", seed);\n                        if (inverse) {\n                            return perEnvelopeUpperBound - boundAdjust * pitchHash / (hashMax + 1);\n                        }\n                        else {\n                            return boundAdjust * pitchHash / (hashMax + 1) + perEnvelopeLowerBound;\n                        }\n                    case 2:\n                        if (step <= 1)\n                            return 1;\n                        const noteHash = xxHash32(notePinStart + \"\", seed);\n                        if (inverse) {\n                            return perEnvelopeUpperBound - boundAdjust * (step / (step - 1)) * Math.floor(noteHash * step / (hashMax + 1)) / step;\n                        }\n                        else {\n                            return boundAdjust * (step / (step - 1)) * Math.floor(noteHash * (step) / (hashMax + 1)) / step + perEnvelopeLowerBound;\n                        }\n                    case 3:\n                        const timeHashA = xxHash32((perEnvelopeSpeed == 0 ? 0 : Math.floor((timeSinceStart * perEnvelopeSpeed) / (256))) + \"\", seed);\n                        const timeHashB = xxHash32((perEnvelopeSpeed == 0 ? 0 : Math.floor((timeSinceStart * perEnvelopeSpeed + 256) / (256))) + \"\", seed);\n                        const weightedAverage = timeHashA * (1 - ((timeSinceStart * perEnvelopeSpeed) / (256)) % 1) + timeHashB * (((timeSinceStart * perEnvelopeSpeed) / (256)) % 1);\n                        if (inverse) {\n                            return perEnvelopeUpperBound - boundAdjust * weightedAverage / (hashMax + 1);\n                        }\n                        else {\n                            return boundAdjust * weightedAverage / (hashMax + 1) + perEnvelopeLowerBound;\n                        }\n                    default: throw new Error(\"Unrecognized operator envelope waveform type: \" + waveform);\n                }\n            case 6:\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * (1.0 / (1.0 + time * envelopeSpeed));\n                }\n                else {\n                    return boundAdjust / (1.0 + time * envelopeSpeed) + perEnvelopeLowerBound;\n                }\n            case 7:\n                if (inverse) {\n                    return boundAdjust / (1.0 + time * envelopeSpeed) + perEnvelopeLowerBound;\n                }\n                else {\n                    return perEnvelopeUpperBound - boundAdjust / (1.0 + time * envelopeSpeed);\n                }\n            case 8:\n                switch (waveform) {\n                    case 0:\n                        if (inverse) {\n                            return (perEnvelopeUpperBound / 2) + boundAdjust * Math.cos(beats * 2.0 * Math.PI * envelopeSpeed) * 0.5 + (perEnvelopeLowerBound / 2);\n                        }\n                        else {\n                            return (perEnvelopeUpperBound / 2) - boundAdjust * Math.cos(beats * 2.0 * Math.PI * envelopeSpeed) * 0.5 + (perEnvelopeLowerBound / 2);\n                        }\n                    case 1:\n                        if (inverse) {\n                            return (Math.cos(beats * 2.0 * Math.PI * envelopeSpeed + 3 * Math.PI / 2) < 0) ? perEnvelopeUpperBound : perEnvelopeLowerBound;\n                        }\n                        else {\n                            return (Math.cos(beats * 2.0 * Math.PI * envelopeSpeed + 3 * Math.PI / 2) < 0) ? perEnvelopeLowerBound : perEnvelopeUpperBound;\n                        }\n                    case 2:\n                        if (inverse) {\n                            return (perEnvelopeUpperBound / 2) - (boundAdjust / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed)) + (perEnvelopeLowerBound / 2);\n                        }\n                        else {\n                            return (perEnvelopeUpperBound / 2) + (boundAdjust / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed)) + (perEnvelopeLowerBound / 2);\n                        }\n                    case 3:\n                        if (inverse) {\n                            return perEnvelopeUpperBound - (beats * envelopeSpeed) % 1 * boundAdjust;\n                        }\n                        else {\n                            return (beats * envelopeSpeed) % 1 * boundAdjust + perEnvelopeLowerBound;\n                        }\n                    case 4:\n                        let trap = 0;\n                        if (inverse) {\n                            trap = (perEnvelopeUpperBound / 2) - (boundAdjust * 2 / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed)) + (perEnvelopeLowerBound / 2);\n                        }\n                        else {\n                            trap = (perEnvelopeUpperBound / 2) + (boundAdjust * 2 / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed)) + (perEnvelopeLowerBound / 2);\n                        }\n                        return Math.max(perEnvelopeLowerBound, Math.min(perEnvelopeUpperBound, trap));\n                    case 5:\n                        if (steps <= 1)\n                            return 1;\n                        let saw = (beats * envelopeSpeed) % 1;\n                        if (inverse) {\n                            return perEnvelopeUpperBound - Math.floor(saw * steps) * boundAdjust / (steps - 1);\n                        }\n                        else {\n                            return Math.floor(saw * steps) * boundAdjust / (steps - 1) + perEnvelopeLowerBound;\n                        }\n                    case 6:\n                        if (steps <= 1)\n                            return 1;\n                        let tri = 0.5 + (inverse ? -1 : 1) * (1 / Math.PI) * Math.asin(Math.sin((Math.PI / 2) + beats * Math.PI * 2.0 * envelopeSpeed));\n                        return Math.round(tri * (steps - 1)) * boundAdjust / (steps - 1) + perEnvelopeLowerBound;\n                    default: throw new Error(\"Unrecognized operator envelope waveform type: \" + waveform);\n                }\n            case 9:\n                if (inverse) {\n                    return (perEnvelopeUpperBound / 4) + boundAdjust * Math.cos(beats * 2.0 * Math.PI * envelopeSpeed) * 0.25 + (perEnvelopeLowerBound / 4);\n                }\n                else {\n                    return 0.5 + (perEnvelopeUpperBound / 4) - boundAdjust * Math.cos(beats * 2.0 * Math.PI * envelopeSpeed) * 0.25 - (perEnvelopeLowerBound / 4);\n                }\n            case 4:\n                if (inverse) {\n                    return Math.max(0, perEnvelopeUpperBound + 1.0 - Math.max(1.0 - perEnvelopeLowerBound, 1.0 - perEnvelopeUpperBound - unspedTime * globalEnvelopeSpeed * 10.0));\n                }\n                else {\n                    return Math.max(1.0 + perEnvelopeLowerBound, 1.0 + perEnvelopeUpperBound - unspedTime * globalEnvelopeSpeed * 10.0);\n                }\n            case 5:\n                const attack = 0.25 / Math.sqrt(envelopeSpeed * perEnvelopeSpeed);\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * (unspedTime < attack ? unspedTime / attack : 1.0 / (1.0 + (unspedTime - attack) * envelopeSpeed * perEnvelopeSpeed));\n                }\n                else {\n                    return boundAdjust * (unspedTime < attack ? unspedTime / attack : 1.0 / (1.0 + (unspedTime - attack) * envelopeSpeed * perEnvelopeSpeed)) + perEnvelopeLowerBound;\n                }\n            case 10:\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * Math.pow(2, -envelopeSpeed * time);\n                }\n                else {\n                    return boundAdjust * Math.pow(2, -envelopeSpeed * time) + perEnvelopeLowerBound;\n                }\n            case 14:\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * +(unspedTime < (0.25 / Math.sqrt(envelopeSpeed * perEnvelopeSpeed)));\n                }\n                else {\n                    return boundAdjust * +(unspedTime < (0.25 / Math.sqrt(envelopeSpeed * perEnvelopeSpeed))) + perEnvelopeLowerBound;\n                }\n            case 11:\n                let temp = 0.5 - Math.cos(beats * envelopeSpeed) * 0.5;\n                temp = 1.0 / (1.0 + time * (envelopeSpeed - (temp / (1.5 / envelopeSpeed))));\n                temp = temp > 0.0 ? temp : 0.0;\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * temp;\n                }\n                else {\n                    return boundAdjust * temp + perEnvelopeLowerBound;\n                }\n            case 12: {\n                let lin = (1.0 - (time / (16 / envelopeSpeed)));\n                lin = lin > 0.0 ? lin : 0.0;\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * lin;\n                }\n                else {\n                    return boundAdjust * lin + perEnvelopeLowerBound;\n                }\n            }\n            case 13: {\n                let lin = (time / (16 / envelopeSpeed));\n                lin = lin < 1.0 ? lin : 1.0;\n                if (inverse) {\n                    return perEnvelopeUpperBound - boundAdjust * lin;\n                }\n                else {\n                    return boundAdjust * lin + perEnvelopeLowerBound;\n                }\n            }\n            case 15: {\n                if (inverse) {\n                    return Math.min(Math.max(perEnvelopeLowerBound, perEnvelopeUpperBound - boundAdjust * Math.sqrt(Math.max(1.0 - envelopeSpeed * time / 2, 0))), perEnvelopeUpperBound);\n                }\n                else {\n                    return Math.max(perEnvelopeLowerBound, boundAdjust * Math.sqrt(Math.max(1.0 - envelopeSpeed * time / 2, 0)) + perEnvelopeLowerBound);\n                }\n            }\n            default: throw new Error(\"Unrecognized operator envelope type.\");\n        }\n    }\n    getPitchValue(instrument, tone, instrumentState, calculateBends = true) {\n        if (tone && tone.pitchCount >= 1) {\n            const chord = instrument.getChord();\n            const arpeggiates = chord.arpeggiates;\n            const monophonic = chord.name == \"monophonic\";\n            const arpeggio = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\n            const tonePitch = tone.pitches[arpeggiates ? getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio) : monophonic ? instrument.monoChordTone : 0];\n            if (calculateBends) {\n                return tone.lastInterval != tonePitch ? tonePitch + tone.lastInterval : tonePitch;\n            }\n            else {\n                return tonePitch;\n            }\n        }\n        return 0;\n    }\n    computePitchEnvelope(instrument, index, pitch = 0) {\n        let startNote = 0;\n        let endNote = Config.maxPitch;\n        let inverse = false;\n        let envelopeLowerBound = 0;\n        let envelopeUpperBound = 1;\n        if (instrument.isNoiseInstrument) {\n            endNote = Config.drumCount - 1;\n        }\n        if (index < instrument.envelopeCount && index !== -2) {\n            startNote = instrument.envelopes[index].pitchEnvelopeStart;\n            endNote = instrument.envelopes[index].pitchEnvelopeEnd;\n            inverse = instrument.envelopes[index].inverse;\n            envelopeLowerBound = instrument.envelopes[index].perEnvelopeLowerBound;\n            envelopeUpperBound = instrument.envelopes[index].perEnvelopeUpperBound;\n        }\n        if (startNote > endNote) {\n            startNote = 0;\n            endNote = instrument.isNoiseInstrument ? Config.drumCount - 1 : Config.maxPitch;\n        }\n        const range = endNote - startNote + 1;\n        if (!inverse) {\n            if (pitch <= startNote) {\n                return envelopeLowerBound;\n            }\n            else if (pitch >= endNote) {\n                return envelopeUpperBound;\n            }\n            else {\n                return (pitch - startNote) * (envelopeUpperBound - envelopeLowerBound) / range + envelopeLowerBound;\n            }\n        }\n        else {\n            if (pitch <= startNote) {\n                return envelopeUpperBound;\n            }\n            else if (pitch >= endNote) {\n                return envelopeLowerBound;\n            }\n            else {\n                return envelopeUpperBound - (pitch - startNote) * (envelopeUpperBound - envelopeLowerBound) / range;\n            }\n        }\n    }\n    static getLowpassCutoffDecayVolumeCompensation(envelope, perEnvelopeSpeed = 1) {\n        if (envelope.type == 10)\n            return 1.25 + 0.025 * perEnvelopeSpeed;\n        if (envelope.type == 6)\n            return 1.0 + 0.02 * perEnvelopeSpeed;\n        return 1.0;\n    }\n    computeDrumsetEnvelopes(instrument, drumsetFilterEnvelope, beatsPerPart, partTimeStart, partTimeEnd) {\n        const pitch = 1;\n        function computeDrumsetEnvelope(unspedTime, time, beats, noteSize) {\n            return EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 1, 1, unspedTime, time, beats, 0, noteSize, pitch, false, 0, 1, true, 2, 2, 0, pitch, 0);\n        }\n        let drumsetFilterEnvelopeStart = computeDrumsetEnvelope(this.noteSecondsStartUnscaled, this.noteSecondsStartUnscaled, beatsPerPart * partTimeStart, this.noteSizeStart);\n        if (this.prevSlideStart) {\n            const other = computeDrumsetEnvelope(this.prevNoteSecondsStartUnscaled, this.prevNoteSecondsStartUnscaled, beatsPerPart * partTimeStart, this.prevNoteSize);\n            drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * this.prevSlideRatioStart;\n        }\n        if (this.nextSlideStart) {\n            const other = computeDrumsetEnvelope(0.0, 0.0, beatsPerPart * partTimeStart, this.nextNoteSize);\n            drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * this.nextSlideRatioStart;\n        }\n        let drumsetFilterEnvelopeEnd = drumsetFilterEnvelopeStart;\n        drumsetFilterEnvelopeEnd = computeDrumsetEnvelope(this.noteSecondsEndUnscaled, this.noteSecondsEndUnscaled, beatsPerPart * partTimeEnd, this.noteSizeEnd);\n        if (this.prevSlideEnd) {\n            const other = computeDrumsetEnvelope(this.prevNoteSecondsEndUnscaled, this.prevNoteSecondsEndUnscaled, beatsPerPart * partTimeEnd, this.prevNoteSize);\n            drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * this.prevSlideRatioEnd;\n        }\n        if (this.nextSlideEnd) {\n            const other = computeDrumsetEnvelope(0.0, 0.0, beatsPerPart * partTimeEnd, this.nextNoteSize);\n            drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * this.nextSlideRatioEnd;\n        }\n        this.drumsetFilterEnvelopeStart = drumsetFilterEnvelopeStart;\n        this.drumsetFilterEnvelopeEnd = drumsetFilterEnvelopeEnd;\n    }\n}\n//# sourceMappingURL=EnvelopeComputer.js.map","import { Config, getDrumWave, drawNoiseSpectrum, performIntegralOld } from \"./SynthConfig\";\nimport { scaleElementsByFactor, inverseRealFourierTransform } from \"./FFT\";\nimport { Deque } from \"./Deque\";\nimport { warpInfinityToNyquist } from \"./filtering\";\nimport { Instrument } from \"./Instrument\";\nimport { EffectState } from \"./EffectState\";\nimport { Synth } from \"./synth\";\nimport { EnvelopeComputer } from \"./EnvelopeComputer\";\nimport { fittingPowerOfTwo } from \"./utils\";\nexport class SpectrumWaveState {\n    constructor() {\n        this.wave = null;\n        this._hash = -1;\n    }\n    getCustomWave(settings, lowestOctave) {\n        if (this._hash == settings.hash)\n            return this.wave;\n        this._hash = settings.hash;\n        const waveLength = Config.spectrumNoiseLength;\n        if (this.wave == null || this.wave.length != waveLength + 1) {\n            this.wave = new Float32Array(waveLength + 1);\n        }\n        const wave = this.wave;\n        for (let i = 0; i < waveLength; i++) {\n            wave[i] = 0;\n        }\n        const highestOctave = 14;\n        const falloffRatio = 0.25;\n        const pitchTweak = [0, 1 / 7, Math.log2(5 / 4), 3 / 7, Math.log2(3 / 2), 5 / 7, 6 / 7];\n        function controlPointToOctave(point) {\n            return lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\n        }\n        let combinedAmplitude = 1;\n        for (let i = 0; i < Config.spectrumControlPoints + 1; i++) {\n            const value1 = (i <= 0) ? 0 : settings.spectrum[i - 1];\n            const value2 = (i >= Config.spectrumControlPoints) ? settings.spectrum[Config.spectrumControlPoints - 1] : settings.spectrum[i];\n            const octave1 = controlPointToOctave(i - 1);\n            let octave2 = controlPointToOctave(i);\n            if (i >= Config.spectrumControlPoints)\n                octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\n            if (value1 == 0 && value2 == 0)\n                continue;\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\n        }\n        if (settings.spectrum[Config.spectrumControlPoints - 1] > 0) {\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, settings.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\n        }\n        inverseRealFourierTransform(wave, waveLength);\n        scaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\n        wave[waveLength] = wave[0];\n        return wave;\n    }\n}\nexport class HarmonicsWaveState {\n    constructor() {\n        this.wave = null;\n        this._hash = -1;\n    }\n    getCustomWave(settings, instrumentType) {\n        if (this._hash == settings.hash && this._generatedForType == instrumentType)\n            return this.wave;\n        this._hash = settings.hash;\n        this._generatedForType = instrumentType;\n        const harmonicsRendered = (instrumentType == 7) ? Config.harmonicsRenderedForPickedString : Config.harmonicsRendered;\n        const waveLength = Config.harmonicsWavelength;\n        const retroWave = getDrumWave(0, null, null);\n        if (this.wave == null || this.wave.length != waveLength + 1) {\n            this.wave = new Float32Array(waveLength + 1);\n        }\n        const wave = this.wave;\n        for (let i = 0; i < waveLength; i++) {\n            wave[i] = 0;\n        }\n        const overallSlope = -0.25;\n        let combinedControlPointAmplitude = 1;\n        for (let harmonicIndex = 0; harmonicIndex < harmonicsRendered; harmonicIndex++) {\n            const harmonicFreq = harmonicIndex + 1;\n            let controlValue = harmonicIndex < Config.harmonicsControlPoints ? settings.harmonics[harmonicIndex] : settings.harmonics[Config.harmonicsControlPoints - 1];\n            if (harmonicIndex >= Config.harmonicsControlPoints) {\n                controlValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (harmonicsRendered - Config.harmonicsControlPoints);\n            }\n            const normalizedValue = controlValue / Config.harmonicsMax;\n            let amplitude = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\n            if (harmonicIndex < Config.harmonicsControlPoints) {\n                combinedControlPointAmplitude += amplitude;\n            }\n            amplitude *= Math.pow(harmonicFreq, overallSlope);\n            amplitude *= retroWave[harmonicIndex + 589];\n            wave[waveLength - harmonicFreq] = amplitude;\n        }\n        inverseRealFourierTransform(wave, waveLength);\n        const mult = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\n        for (let i = 0; i < wave.length; i++)\n            wave[i] *= mult;\n        performIntegralOld(wave);\n        wave[waveLength] = wave[0];\n        return wave;\n    }\n}\nexport class PickedString {\n    constructor() {\n        this.delayLine = null;\n        this.allPassG = 0.0;\n        this.allPassGDelta = 0.0;\n        this.sustainFilterA1 = 0.0;\n        this.sustainFilterA1Delta = 0.0;\n        this.sustainFilterA2 = 0.0;\n        this.sustainFilterA2Delta = 0.0;\n        this.sustainFilterB0 = 0.0;\n        this.sustainFilterB0Delta = 0.0;\n        this.sustainFilterB1 = 0.0;\n        this.sustainFilterB1Delta = 0.0;\n        this.sustainFilterB2 = 0.0;\n        this.sustainFilterB2Delta = 0.0;\n        this.reset();\n    }\n    reset() {\n        this.delayIndex = -1;\n        this.allPassSample = 0.0;\n        this.allPassPrevInput = 0.0;\n        this.sustainFilterSample = 0.0;\n        this.sustainFilterPrevOutput2 = 0.0;\n        this.sustainFilterPrevInput1 = 0.0;\n        this.sustainFilterPrevInput2 = 0.0;\n        this.fractionalDelaySample = 0.0;\n        this.prevDelayLength = -1.0;\n        this.delayResetOffset = 0;\n    }\n    update(synth, instrumentState, tone, stringIndex, roundedSamplesPerTick, stringDecayStart, stringDecayEnd, sustainType) {\n        const allPassCenter = 2.0 * Math.PI * Config.pickedStringDispersionCenterFreq / synth.samplesPerSecond;\n        const prevDelayLength = this.prevDelayLength;\n        const phaseDeltaStart = tone.phaseDeltas[stringIndex];\n        const phaseDeltaScale = tone.phaseDeltaScales[stringIndex];\n        const phaseDeltaEnd = phaseDeltaStart * Math.pow(phaseDeltaScale, roundedSamplesPerTick);\n        const radiansPerSampleStart = Math.PI * 2.0 * phaseDeltaStart;\n        const radiansPerSampleEnd = Math.PI * 2.0 * phaseDeltaEnd;\n        const centerHarmonicStart = radiansPerSampleStart * 2.0;\n        const centerHarmonicEnd = radiansPerSampleEnd * 2.0;\n        const allPassRadiansStart = Math.min(Math.PI, radiansPerSampleStart * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleStart, Config.pickedStringDispersionFreqScale));\n        const allPassRadiansEnd = Math.min(Math.PI, radiansPerSampleEnd * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleEnd, Config.pickedStringDispersionFreqScale));\n        const shelfRadians = 2.0 * Math.PI * Config.pickedStringShelfHz / synth.samplesPerSecond;\n        const decayCurveStart = (Math.pow(100.0, stringDecayStart) - 1.0) / 99.0;\n        const decayCurveEnd = (Math.pow(100.0, stringDecayEnd) - 1.0) / 99.0;\n        const register = sustainType == 1 ? 0.25 : 0.0;\n        const registerShelfCenter = 15.6;\n        const registerLowpassCenter = 3.0 * synth.samplesPerSecond / 48000;\n        const decayRateStart = Math.pow(0.5, decayCurveStart * Math.pow(shelfRadians / (radiansPerSampleStart * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\n        const decayRateEnd = Math.pow(0.5, decayCurveEnd * Math.pow(shelfRadians / (radiansPerSampleEnd * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\n        const expressionDecayStart = Math.pow(decayRateStart, 0.002);\n        const expressionDecayEnd = Math.pow(decayRateEnd, 0.002);\n        Synth.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansStart);\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\n        const allPassGStart = Synth.tempFilterStartCoefficients.b[0];\n        const allPassPhaseDelayStart = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\n        Synth.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansEnd);\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\n        const allPassGEnd = Synth.tempFilterEndCoefficients.b[0];\n        const allPassPhaseDelayEnd = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\n        const brightnessType = sustainType == 0 ? 0 : 1;\n        if (brightnessType == 0) {\n            const shelfGainStart = Math.pow(decayRateStart, Config.stringDecayRate);\n            const shelfGainEnd = Math.pow(decayRateEnd, Config.stringDecayRate);\n            Synth.tempFilterStartCoefficients.highShelf2ndOrder(shelfRadians, shelfGainStart, 0.5);\n            Synth.tempFilterEndCoefficients.highShelf2ndOrder(shelfRadians, shelfGainEnd, 0.5);\n        }\n        else {\n            const cornerHardness = Math.pow(brightnessType == 1 ? 0.0 : 1.0, 0.25);\n            const lowpass1stOrderCutoffRadiansStart = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleStart * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveStart, .5);\n            const lowpass1stOrderCutoffRadiansEnd = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleEnd * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveEnd, .5);\n            const lowpass2ndOrderCutoffRadiansStart = lowpass1stOrderCutoffRadiansStart * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\n            const lowpass2ndOrderCutoffRadiansEnd = lowpass1stOrderCutoffRadiansEnd * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\n            const lowpass2ndOrderGainStart = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\n            const lowpass2ndOrderGainEnd = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\n            Synth.tempFilterStartCoefficients.lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansStart), lowpass2ndOrderGainStart);\n            Synth.tempFilterEndCoefficients.lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansEnd), lowpass2ndOrderGainEnd);\n        }\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\n        const sustainFilterA1Start = Synth.tempFilterStartCoefficients.a[1];\n        const sustainFilterA2Start = Synth.tempFilterStartCoefficients.a[2];\n        const sustainFilterB0Start = Synth.tempFilterStartCoefficients.b[0] * expressionDecayStart;\n        const sustainFilterB1Start = Synth.tempFilterStartCoefficients.b[1] * expressionDecayStart;\n        const sustainFilterB2Start = Synth.tempFilterStartCoefficients.b[2] * expressionDecayStart;\n        const sustainFilterPhaseDelayStart = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\n        const sustainFilterA1End = Synth.tempFilterEndCoefficients.a[1];\n        const sustainFilterA2End = Synth.tempFilterEndCoefficients.a[2];\n        const sustainFilterB0End = Synth.tempFilterEndCoefficients.b[0] * expressionDecayEnd;\n        const sustainFilterB1End = Synth.tempFilterEndCoefficients.b[1] * expressionDecayEnd;\n        const sustainFilterB2End = Synth.tempFilterEndCoefficients.b[2] * expressionDecayEnd;\n        const sustainFilterPhaseDelayEnd = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\n        const periodLengthStart = 1.0 / phaseDeltaStart;\n        const periodLengthEnd = 1.0 / phaseDeltaEnd;\n        const minBufferLength = Math.ceil(Math.max(periodLengthStart, periodLengthEnd) * 2);\n        const delayLength = periodLengthStart - allPassPhaseDelayStart - sustainFilterPhaseDelayStart;\n        const delayLengthEnd = periodLengthEnd - allPassPhaseDelayEnd - sustainFilterPhaseDelayEnd;\n        this.prevDelayLength = delayLength;\n        this.delayLengthDelta = (delayLengthEnd - delayLength) / roundedSamplesPerTick;\n        this.allPassG = allPassGStart;\n        this.sustainFilterA1 = sustainFilterA1Start;\n        this.sustainFilterA2 = sustainFilterA2Start;\n        this.sustainFilterB0 = sustainFilterB0Start;\n        this.sustainFilterB1 = sustainFilterB1Start;\n        this.sustainFilterB2 = sustainFilterB2Start;\n        this.allPassGDelta = (allPassGEnd - allPassGStart) / roundedSamplesPerTick;\n        this.sustainFilterA1Delta = (sustainFilterA1End - sustainFilterA1Start) / roundedSamplesPerTick;\n        this.sustainFilterA2Delta = (sustainFilterA2End - sustainFilterA2Start) / roundedSamplesPerTick;\n        this.sustainFilterB0Delta = (sustainFilterB0End - sustainFilterB0Start) / roundedSamplesPerTick;\n        this.sustainFilterB1Delta = (sustainFilterB1End - sustainFilterB1Start) / roundedSamplesPerTick;\n        this.sustainFilterB2Delta = (sustainFilterB2End - sustainFilterB2Start) / roundedSamplesPerTick;\n        const pitchChanged = Math.abs(Math.log2(delayLength / prevDelayLength)) > 0.01;\n        const reinitializeImpulse = (this.delayIndex == -1 || pitchChanged);\n        if (this.delayLine == null || this.delayLine.length <= minBufferLength) {\n            const likelyMaximumLength = Math.ceil(2 * synth.samplesPerSecond / Instrument.frequencyFromPitch(12));\n            const newDelayLine = new Float32Array(fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\n            if (!reinitializeImpulse && this.delayLine != null) {\n                const oldDelayBufferMask = (this.delayLine.length - 1) >> 0;\n                const startCopyingFromIndex = this.delayIndex + this.delayResetOffset;\n                this.delayIndex = this.delayLine.length - this.delayResetOffset;\n                for (let i = 0; i < this.delayLine.length; i++) {\n                    newDelayLine[i] = this.delayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\n                }\n            }\n            this.delayLine = newDelayLine;\n        }\n        const delayLine = this.delayLine;\n        const delayBufferMask = (delayLine.length - 1) >> 0;\n        if (reinitializeImpulse) {\n            this.delayIndex = 0;\n            this.allPassSample = 0.0;\n            this.allPassPrevInput = 0.0;\n            this.sustainFilterSample = 0.0;\n            this.sustainFilterPrevOutput2 = 0.0;\n            this.sustainFilterPrevInput1 = 0.0;\n            this.sustainFilterPrevInput2 = 0.0;\n            this.fractionalDelaySample = 0.0;\n            const startImpulseFrom = -delayLength;\n            const startZerosFrom = Math.floor(startImpulseFrom - periodLengthStart / 2);\n            const stopZerosAt = Math.ceil(startZerosFrom + periodLengthStart * 2);\n            this.delayResetOffset = stopZerosAt;\n            for (let i = startZerosFrom; i <= stopZerosAt; i++) {\n                delayLine[i & delayBufferMask] = 0.0;\n            }\n            const impulseWave = instrumentState.waveL;\n            const impulseWaveLength = impulseWave.length - 1;\n            const impulsePhaseDelta = impulseWaveLength / periodLengthStart;\n            const fadeDuration = Math.min(periodLengthStart * 0.2, synth.samplesPerSecond * 0.003);\n            const startImpulseFromSample = Math.ceil(startImpulseFrom);\n            const stopImpulseAt = startImpulseFrom + periodLengthStart + fadeDuration;\n            const stopImpulseAtSample = stopImpulseAt;\n            let impulsePhase = (startImpulseFromSample - startImpulseFrom) * impulsePhaseDelta;\n            let prevWaveIntegral = 0.0;\n            for (let i = startImpulseFromSample; i <= stopImpulseAtSample; i++) {\n                const impulsePhaseInt = impulsePhase | 0;\n                const index = impulsePhaseInt % impulseWaveLength;\n                let nextWaveIntegral = impulseWave[index];\n                const phaseRatio = impulsePhase - impulsePhaseInt;\n                nextWaveIntegral += (impulseWave[index + 1] - nextWaveIntegral) * phaseRatio;\n                const sample = (nextWaveIntegral - prevWaveIntegral) / impulsePhaseDelta;\n                const fadeIn = Math.min(1.0, (i - startImpulseFrom) / fadeDuration);\n                const fadeOut = Math.min(1.0, (stopImpulseAt - i) / fadeDuration);\n                const combinedFade = fadeIn * fadeOut;\n                const curvedFade = combinedFade * combinedFade * (3.0 - 2.0 * combinedFade);\n                delayLine[i & delayBufferMask] += sample * curvedFade;\n                prevWaveIntegral = nextWaveIntegral;\n                impulsePhase += impulsePhaseDelta;\n            }\n        }\n    }\n}\nexport class InstrumentState {\n    constructor() {\n        this.awake = false;\n        this.computed = false;\n        this.tonesAddedInThisTick = false;\n        this.flushingDelayLines = false;\n        this.deactivateAfterThisTick = false;\n        this.attentuationProgress = 0.0;\n        this.flushedSamples = 0;\n        this.activeTones = new Deque();\n        this.activeModTones = new Deque();\n        this.releasedTones = new Deque();\n        this.liveInputTones = new Deque();\n        this.type = 0;\n        this.synthesizer = null;\n        this.waveL = null;\n        this.waveR = null;\n        this.isStereo = false;\n        this.isUsingAdvancedLoopControls = false;\n        this.chipWaveLoopStart = 0;\n        this.chipWaveLoopEnd = 0;\n        this.chipWaveLoopMode = 0;\n        this.chipWavePlayBackwards = false;\n        this.chipWaveStartOffset = 0;\n        this.chipWaveInStereo = false;\n        this.noisePitchFilterMult = 1.0;\n        this.unison = null;\n        this.unisonVoices = 1;\n        this.unisonSpread = 0.0;\n        this.unisonOffset = 0.0;\n        this.unisonExpression = 1.4;\n        this.unisonSign = 1.0;\n        this.chord = null;\n        this.effects = [];\n        this.volumeScale = 0;\n        this.aliases = false;\n        this.arpTime = 0;\n        this.vibratoTime = 0;\n        this.nextVibratoTime = 0;\n        this.envelopeTime = [];\n        this.mixVolume = 1.0;\n        this.mixVolumeDelta = 0.0;\n        this.delayDuration = 0.0;\n        this.totalDelaySamples = 0.0;\n        this.delayInputMult = 0.0;\n        this.delayInputMultDelta = 0.0;\n        this.spectrumWave = new SpectrumWaveState();\n        this.harmonicsWave = new HarmonicsWaveState();\n        this.drumsetSpectrumWaves = [];\n        this.envelopeComputer = new EnvelopeComputer();\n        for (let i = 0; i < Config.drumCount; i++) {\n            this.drumsetSpectrumWaves[i] = new SpectrumWaveState();\n        }\n    }\n    allocateNecessaryBuffers(synth, instrument, samplesPerTick) {\n        for (let effectIndex = 0; effectIndex < instrument.effects.length; effectIndex++) {\n            if (this.effects[effectIndex] != null) {\n                let effect = instrument.effects[effectIndex];\n                this.effects[effectIndex].allocateNecessaryBuffers(synth, instrument, effect, samplesPerTick);\n            }\n        }\n    }\n    deactivate() {\n        for (let effectIndex = 0; effectIndex < this.effects.length; effectIndex++) {\n            if (this.effects[effectIndex] != null)\n                this.effects[effectIndex].deactivate();\n        }\n        this.volumeScale = 1.0;\n        this.aliases = false;\n        this.awake = false;\n        this.flushingDelayLines = false;\n        this.deactivateAfterThisTick = false;\n        this.attentuationProgress = 0.0;\n        this.flushedSamples = 0;\n    }\n    resetAllEffects() {\n        this.deactivate();\n        this.vibratoTime = 0;\n        this.nextVibratoTime = 0;\n        this.arpTime = 0;\n        for (let envelopeIndex = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++)\n            this.envelopeTime[envelopeIndex] = 0;\n        this.envelopeComputer.reset();\n        for (let effectIndex = 0; effectIndex < this.effects.length; effectIndex++) {\n            if (this.effects[effectIndex] != null)\n                this.effects[effectIndex].reset();\n        }\n    }\n    compute(synth, instrument, samplesPerTick, roundedSamplesPerTick, tone, channelIndex, instrumentIndex) {\n        this.computed = true;\n        this.type = instrument.type;\n        this.synthesizer = Synth.getInstrumentSynthFunction(instrument);\n        this.unison = Config.unisons[instrument.unison];\n        this.chord = instrument.getChord();\n        this.noisePitchFilterMult = Config.chipNoises[instrument.chipNoise].pitchFilterMult;\n        this.aliases = instrument.aliases;\n        this.volumeScale = 1.0;\n        this.delayDuration = 0.0;\n        this.totalDelaySamples = 0.0;\n        for (let effectIndex = 0; effectIndex < instrument.effects.length; effectIndex++) {\n            if (this.effects[effectIndex] == null)\n                this.effects[effectIndex] = new EffectState(instrument.effects[effectIndex].type);\n        }\n        this.effects.length = instrument.effects.length;\n        this.allocateNecessaryBuffers(synth, instrument, samplesPerTick);\n        const samplesPerSecond = synth.samplesPerSecond;\n        this.updateWaves(instrument, samplesPerSecond);\n        const ticksIntoBar = synth.getTicksIntoBar();\n        const tickTimeStart = ticksIntoBar;\n        const secondsPerTick = samplesPerTick / synth.samplesPerSecond;\n        const currentPart = synth.getCurrentPart();\n        const envelopeSpeeds = [];\n        for (let i = 0; i < Config.maxEnvelopeCount; i++) {\n            envelopeSpeeds[i] = 0;\n        }\n        let useEnvelopeSpeed = Config.arpSpeedScale[instrument.envelopeSpeed];\n        if (synth.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, instrumentIndex)) {\n            useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, synth.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, instrumentIndex, false)));\n            if (Number.isInteger(useEnvelopeSpeed)) {\n                useEnvelopeSpeed = Config.arpSpeedScale[useEnvelopeSpeed];\n            }\n            else {\n                useEnvelopeSpeed = ((1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)]);\n            }\n        }\n        for (let envelopeIndex = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n            let perEnvelopeSpeed = instrument.envelopes[envelopeIndex].perEnvelopeSpeed;\n            if (synth.isModActive(Config.modulators.dictionary[\"individual envelope speed\"].index, channelIndex, instrumentIndex) && instrument.envelopes[envelopeIndex].tempEnvelopeSpeed != null) {\n                perEnvelopeSpeed = instrument.envelopes[envelopeIndex].tempEnvelopeSpeed;\n            }\n            envelopeSpeeds[envelopeIndex] = useEnvelopeSpeed * perEnvelopeSpeed;\n        }\n        this.envelopeComputer.computeEnvelopes(instrument, currentPart, this.envelopeTime, tickTimeStart, secondsPerTick, tone, envelopeSpeeds, this, synth, channelIndex, instrumentIndex);\n        const envelopeStarts = this.envelopeComputer.envelopeStarts;\n        const envelopeEnds = this.envelopeComputer.envelopeEnds;\n        for (let effectIndex = 0; effectIndex < instrument.effects.length; effectIndex++) {\n            if (this.effects[effectIndex] != null) {\n                let effect = instrument.effects[effectIndex];\n                this.effects[effectIndex].compute(synth, instrument, effect, this, samplesPerTick, roundedSamplesPerTick, tone, channelIndex, instrumentIndex, envelopeStarts, envelopeEnds);\n            }\n        }\n        this.mixVolume = envelopeStarts[1] * Synth.instrumentVolumeToVolumeMult(instrument.volume);\n        let mixVolumeEnd = envelopeEnds[1] * Synth.instrumentVolumeToVolumeMult(instrument.volume);\n        if (synth.isModActive(Config.modulators.dictionary[\"post volume\"].index, channelIndex, instrumentIndex)) {\n            const startVal = synth.getModValue(Config.modulators.dictionary[\"post volume\"].index, channelIndex, instrumentIndex, false);\n            const endVal = synth.getModValue(Config.modulators.dictionary[\"post volume\"].index, channelIndex, instrumentIndex, true);\n            this.mixVolume *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n            mixVolumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n        }\n        if (synth.isModActive(Config.modulators.dictionary[\"song volume\"].index)) {\n            this.mixVolume *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, false)) / 100.0;\n            mixVolumeEnd *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, true)) / 100.0;\n        }\n        this.mixVolumeDelta = (mixVolumeEnd - this.mixVolume) / roundedSamplesPerTick;\n        let delayInputMultStart = 1.0;\n        let delayInputMultEnd = 1.0;\n        if (this.tonesAddedInThisTick) {\n            this.attentuationProgress = 0.0;\n            this.flushedSamples = 0;\n            this.flushingDelayLines = false;\n        }\n        else if (!this.flushingDelayLines) {\n            if (this.attentuationProgress == 0.0) {\n            }\n            else {\n            }\n            const secondsInTick = samplesPerTick / samplesPerSecond;\n            const progressInTick = secondsInTick / this.delayDuration;\n            const progressAtEndOfTick = this.attentuationProgress + progressInTick;\n            if (progressAtEndOfTick >= 1.0) {\n                delayInputMultEnd = 0.0;\n            }\n            this.attentuationProgress = progressAtEndOfTick;\n            if (this.attentuationProgress >= 1.0) {\n                this.flushingDelayLines = true;\n            }\n        }\n        else {\n            delayInputMultStart = 0.0;\n            delayInputMultEnd = 0.0;\n            this.flushedSamples += roundedSamplesPerTick;\n            if (this.flushedSamples >= this.totalDelaySamples) {\n                this.deactivateAfterThisTick = true;\n            }\n        }\n        this.delayInputMult = delayInputMultStart;\n        this.delayInputMultDelta = (delayInputMultEnd - delayInputMultStart) / roundedSamplesPerTick;\n        this.envelopeComputer.clearEnvelopes();\n    }\n    updateWaves(instrument, samplesPerSecond) {\n        this.volumeScale = 1.0;\n        if (instrument.type == 0) {\n            this.waveL = (this.aliases) ? Config.rawChipWaves[instrument.chipWave].samples : Config.chipWaves[instrument.chipWave].samples;\n            this.waveR = (this.aliases) ? Config.rawChipWaves[instrument.chipWave].samplesR || Config.rawChipWaves[instrument.chipWave].samples : Config.chipWaves[instrument.chipWave].samplesR || Config.chipWaves[instrument.chipWave].samples;\n            this.isUsingAdvancedLoopControls = instrument.isUsingAdvancedLoopControls;\n            this.chipWaveLoopStart = instrument.chipWaveLoopStart;\n            this.chipWaveLoopEnd = instrument.chipWaveLoopEnd;\n            this.chipWaveLoopMode = instrument.chipWaveLoopMode;\n            this.chipWavePlayBackwards = instrument.chipWavePlayBackwards;\n            this.chipWaveStartOffset = instrument.chipWaveStartOffset;\n            this.chipWaveInStereo = instrument.chipWaveInStereo;\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 6) {\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 9) {\n            this.waveL = (this.aliases) ? instrument.customChipWave : instrument.customChipWaveIntegral;\n            this.waveR = (this.aliases) ? instrument.customChipWave : instrument.customChipWaveIntegral;\n            this.volumeScale = 0.05;\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 2) {\n            this.waveL = getDrumWave(instrument.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 5) {\n            this.waveL = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 7) {\n            this.waveL = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 3) {\n            this.waveL = this.spectrumWave.getCustomWave(instrument.spectrumWave, 8);\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else if (instrument.type == 4) {\n            for (let i = 0; i < Config.drumCount; i++) {\n                this.drumsetSpectrumWaves[i].getCustomWave(instrument.drumsetSpectrumWaves[i], InstrumentState._drumsetIndexToSpectrumOctave(i));\n            }\n            this.waveL = null;\n            this.unisonVoices = instrument.unisonVoices;\n            this.unisonSpread = instrument.unisonSpread;\n            this.unisonOffset = instrument.unisonOffset;\n            this.unisonExpression = instrument.unisonExpression;\n            this.unisonSign = instrument.unisonSign;\n        }\n        else {\n            this.waveL = null;\n        }\n    }\n    getDrumsetWave(pitch) {\n        if (this.type == 4) {\n            return this.drumsetSpectrumWaves[pitch].wave;\n        }\n        else {\n            throw new Error(\"Unhandled instrument type in getDrumsetWave\");\n        }\n    }\n    static drumsetIndexReferenceDelta(index) {\n        return Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * 6) / 44100;\n    }\n    static _drumsetIndexToSpectrumOctave(index) {\n        return 15 + Math.log2(InstrumentState.drumsetIndexReferenceDelta(index));\n    }\n    effectsIncludeType(type) {\n        for (let i = 0; i < this.effects.length; i++)\n            if (this.effects[i] != null && this.effects[i].type == type)\n                return true;\n        return false;\n    }\n}\n//# sourceMappingURL=InstrumentState.js.map","class EventManager {\n    constructor() {\n        this.activeEvents = [];\n        this.listeners = {};\n        this.activeEvents = [];\n        this.listeners = {};\n    }\n    raise(eventType, eventData, extraEventData) {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        this.activeEvents.push(eventType);\n        for (let i = 0; i < this.listeners[eventType].length; i++) {\n            this.listeners[eventType][i](eventData, extraEventData);\n        }\n        this.activeEvents.pop();\n    }\n    listen(eventType, callback) {\n        if (this.listeners[eventType] == undefined) {\n            this.listeners[eventType] = [];\n        }\n        this.listeners[eventType].push(callback);\n    }\n    unlisten(eventType, callback) {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        const lisen = this.listeners[eventType].indexOf(callback);\n        if (lisen != -1) {\n            this.listeners[eventType].splice(lisen, 1);\n        }\n    }\n    unlistenAll(eventType) {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        this.listeners[eventType] = [];\n    }\n}\nexport const events = new EventManager();\n//# sourceMappingURL=Events.js.map","import { Config, getArpeggioPitchIndex, getPulseWidthRatio, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato } from \"./SynthConfig\";\nimport { Deque } from \"./Deque\";\nimport { Song } from \"./Song\";\nimport { ChannelState } from \"./ChannelState\";\nimport { Instrument } from \"./Instrument\";\nimport { PickedString, InstrumentState } from \"./InstrumentState\";\nimport { EnvelopeComputer } from \"./EnvelopeComputer\";\nimport { FilterSettings, FilterControlPoint } from \"./Filter\";\nimport { events } from \"../global/Events\";\nimport { FilterCoefficients, FrequencyResponse, DynamicBiquadFilter } from \"./filtering\";\nimport { clamp, detuneToCents, fittingPowerOfTwo } from \"./utils\";\nconst epsilon = (1.0e-24);\nexport class Tone {\n    constructor() {\n        this.pitches = Array(Config.maxChordSize + 2).fill(0);\n        this.pitchCount = 0;\n        this.chordSize = 0;\n        this.drumsetPitch = null;\n        this.note = null;\n        this.prevNote = null;\n        this.nextNote = null;\n        this.prevNotePitchIndex = 0;\n        this.nextNotePitchIndex = 0;\n        this.freshlyAllocated = true;\n        this.atNoteStart = false;\n        this.isOnLastTick = false;\n        this.passedEndOfNote = false;\n        this.forceContinueAtStart = false;\n        this.forceContinueAtEnd = false;\n        this.noteStartPart = 0;\n        this.noteEndPart = 0;\n        this.ticksSinceReleased = 0;\n        this.liveInputSamplesHeld = 0;\n        this.lastInterval = 0;\n        this.chipWaveStartOffset = 0;\n        this.noiseSample = 0.0;\n        this.noiseSampleA = 0.0;\n        this.noiseSampleB = 0.0;\n        this.stringSustainStart = 0;\n        this.stringSustainEnd = 0;\n        this.noiseSamples = [];\n        this.phases = [];\n        this.operatorWaves = [];\n        this.phaseDeltas = [];\n        this.directions = [];\n        this.chipWaveCompletions = [];\n        this.chipWavePrevWavesL = [];\n        this.chipWavePrevWavesR = [];\n        this.chipWaveCompletionsLastWaveL = [];\n        this.chipWaveCompletionsLastWaveR = [];\n        this.phaseDeltaScales = [];\n        this.expression = 0.0;\n        this.expressionDelta = 0.0;\n        this.operatorExpressions = [];\n        this.operatorExpressionDeltas = [];\n        this.prevPitchExpressions = Array(Config.maxPitchOrOperatorCount).fill(null);\n        this.prevVibrato = null;\n        this.prevStringDecay = null;\n        this.pulseWidth = 0.0;\n        this.pulseWidthDelta = 0.0;\n        this.decimalOffset = 0.0;\n        this.supersawDynamism = 0.0;\n        this.supersawDynamismDelta = 0.0;\n        this.supersawUnisonDetunes = [];\n        this.supersawShape = 0.0;\n        this.supersawShapeDelta = 0.0;\n        this.supersawDelayLength = 0.0;\n        this.supersawDelayLengthDelta = 0.0;\n        this.supersawDelayLine = null;\n        this.supersawDelayIndex = -1;\n        this.supersawPrevPhaseDelta = null;\n        this.pickedStrings = [];\n        this.noteFiltersL = [];\n        this.noteFiltersR = [];\n        this.noteFilterCount = 0;\n        this.initialNoteFilterInputL1 = 0.0;\n        this.initialNoteFilterInputR1 = 0.0;\n        this.initialNoteFilterInputL2 = 0.0;\n        this.initialNoteFilterInputR2 = 0.0;\n        this.specialIntervalExpressionMult = 1.0;\n        this.feedbackOutputs = [];\n        this.feedbackMult = 0.0;\n        this.feedbackDelta = 0.0;\n        this.stereoVolumeLStart = 0.0;\n        this.stereoVolumeRStart = 0.0;\n        this.stereoVolumeLDelta = 0.0;\n        this.stereoVolumeRDelta = 0.0;\n        this.stereoDelayStart = 0.0;\n        this.stereoDelayEnd = 0.0;\n        this.stereoDelayDelta = 0.0;\n        this.customVolumeStart = 0.0;\n        this.customVolumeEnd = 0.0;\n        this.filterResonanceStart = 0.0;\n        this.filterResonanceDelta = 0.0;\n        this.isFirstOrder = false;\n        this.envelopeComputer = new EnvelopeComputer();\n        this.reset();\n    }\n    reset() {\n        for (let i = 0; i < Config.unisonVoicesMax; i++) {\n            this.noiseSamples[i] = 0.0;\n        }\n        for (let i = 0; i < Config.maxPitchOrOperatorCount; i++) {\n            this.phases[i] = 0.0;\n            this.directions[i] = 1;\n            this.chipWaveCompletions[i] = 0;\n            this.chipWavePrevWavesL[i] = 0;\n            this.chipWavePrevWavesR[i] = 0;\n            this.chipWaveCompletionsLastWaveL[i] = 0;\n            this.chipWaveCompletionsLastWaveR[i] = 0;\n            this.operatorWaves[i] = Config.operatorWaves[0];\n            this.feedbackOutputs[i] = 0.0;\n            this.prevPitchExpressions[i] = null;\n        }\n        for (let i = 0; i < this.noteFilterCount; i++) {\n            this.noteFiltersL[i].resetOutput();\n            this.noteFiltersR[i].resetOutput();\n        }\n        this.noteFilterCount = 0;\n        this.initialNoteFilterInputL1 = 0.0;\n        this.initialNoteFilterInputR1 = 0.0;\n        this.initialNoteFilterInputL2 = 0.0;\n        this.initialNoteFilterInputR2 = 0.0;\n        this.liveInputSamplesHeld = 0;\n        this.supersawDelayIndex = -1;\n        for (const pickedString of this.pickedStrings) {\n            pickedString.reset();\n        }\n        this.envelopeComputer.reset();\n        this.prevVibrato = null;\n        this.prevStringDecay = null;\n        this.supersawPrevPhaseDelta = null;\n        this.drumsetPitch = null;\n    }\n}\nexport class Synth {\n    syncSongState() {\n        const channelCount = this.song.getChannelCount();\n        for (let i = this.channels.length; i < channelCount; i++) {\n            this.channels[i] = new ChannelState();\n        }\n        this.channels.length = channelCount;\n        for (let i = 0; i < channelCount; i++) {\n            const channel = this.song.channels[i];\n            const channelState = this.channels[i];\n            for (let j = channelState.instruments.length; j < channel.instruments.length; j++) {\n                channelState.instruments[j] = new InstrumentState();\n            }\n            channelState.instruments.length = channel.instruments.length;\n            if (channelState.muted != channel.muted) {\n                channelState.muted = channel.muted;\n                if (channelState.muted) {\n                    for (const instrumentState of channelState.instruments) {\n                        instrumentState.resetAllEffects();\n                    }\n                }\n            }\n        }\n    }\n    initModFilters(song) {\n        if (song != null) {\n            song.tmpEqFilterStart = song.eqFilter;\n            song.tmpEqFilterEnd = null;\n            for (let channelIndex = 0; channelIndex < song.getChannelCount(); channelIndex++) {\n                for (let instrumentIndex = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrument = song.channels[channelIndex].instruments[instrumentIndex];\n                    for (let effectIndex = 0; effectIndex < song.channels[channelIndex].instruments[instrumentIndex].effects.length; effectIndex++) {\n                        const effect = song.channels[channelIndex].instruments[instrumentIndex].effects[effectIndex];\n                        effect.tmpEqFilterStart = effect.eqFilter;\n                        effect.tmpEqFilterEnd = null;\n                    }\n                    instrument.tmpNoteFilterStart = instrument.noteFilter;\n                    instrument.tmpNoteFilterEnd = null;\n                }\n            }\n        }\n    }\n    warmUpSynthesizer(song) {\n        if (song != null) {\n            this.syncSongState();\n            const samplesPerTick = this.getSamplesPerTick();\n            for (let channelIndex = 0; channelIndex < song.getChannelCount(); channelIndex++) {\n                for (let instrumentIndex = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrument = song.channels[channelIndex].instruments[instrumentIndex];\n                    const instrumentState = this.channels[channelIndex].instruments[instrumentIndex];\n                    Synth.getInstrumentSynthFunction(instrument);\n                    instrumentState.vibratoTime = 0;\n                    instrumentState.nextVibratoTime = 0;\n                    for (let envelopeIndex = 0; envelopeIndex < Config.maxEnvelopeCount + 1; envelopeIndex++)\n                        instrumentState.envelopeTime[envelopeIndex] = 0;\n                    instrumentState.arpTime = 0;\n                    instrumentState.updateWaves(instrument, this.samplesPerSecond);\n                    instrumentState.allocateNecessaryBuffers(this, instrument, samplesPerTick);\n                }\n            }\n        }\n        var dummyArray = new Float32Array(1);\n        this.isPlayingSong = true;\n        this.synthesize(dummyArray, dummyArray, 1, true);\n        this.isPlayingSong = false;\n    }\n    computeLatestModValues() {\n        if (this.song != null && this.song.modChannelCount > 0) {\n            let latestModTimes = [];\n            let latestModInsTimes = [];\n            this.modValues = [];\n            this.nextModValues = [];\n            this.modInsValues = [];\n            this.nextModInsValues = [];\n            this.heldMods = [];\n            for (let channel = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                latestModInsTimes[channel] = [];\n                this.modInsValues[channel] = [];\n                this.nextModInsValues[channel] = [];\n                for (let instrument = 0; instrument < this.song.channels[channel].instruments.length; instrument++) {\n                    this.modInsValues[channel][instrument] = [];\n                    this.nextModInsValues[channel][instrument] = [];\n                    latestModInsTimes[channel][instrument] = [];\n                }\n            }\n            let currentPart = this.beat * Config.partsPerBeat + this.part;\n            for (let channelIndex = this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex < this.song.getChannelCount(); channelIndex++) {\n                if (!(this.song.channels[channelIndex].muted)) {\n                    let pattern;\n                    for (let currentBar = this.bar; currentBar >= 0; currentBar--) {\n                        pattern = this.song.getPattern(channelIndex, currentBar);\n                        if (pattern != null) {\n                            let instrumentIdx = pattern.instruments[0];\n                            let instrument = this.song.channels[channelIndex].instruments[instrumentIdx];\n                            let latestPinParts = [];\n                            let latestPinValues = [];\n                            let partsInBar = (currentBar == this.bar)\n                                ? currentPart\n                                : this.findPartsInBar(currentBar);\n                            for (const note of pattern.notes) {\n                                if (note.start <= partsInBar && (latestPinParts[Config.modCount - 1 - note.pitches[0]] == null || note.end > latestPinParts[Config.modCount - 1 - note.pitches[0]])) {\n                                    if (note.start == partsInBar) {\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.start;\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[0].size;\n                                    }\n                                    if (note.end <= partsInBar) {\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.end;\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[note.pins.length - 1].size;\n                                    }\n                                    else {\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = partsInBar;\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                const transitionLength = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\n                                                const toNextBarLength = partsInBar - note.start - note.pins[pinIdx - 1].time;\n                                                const deltaVolume = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\n                                                latestPinValues[Config.modCount - 1 - note.pitches[0]] = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\n                                                pinIdx = note.pins.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            for (let mod = 0; mod < Config.modCount; mod++) {\n                                if (latestPinParts[mod] != null) {\n                                    if (Config.modulators[instrument.modulators[mod]].forSong) {\n                                        const songFilterParam = instrument.modulators[mod] == Config.modulators.dictionary[\"song eq\"].index;\n                                        if (latestModTimes[instrument.modulators[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > latestModTimes[instrument.modulators[mod]]) {\n                                            if (songFilterParam) {\n                                                let tgtSong = this.song;\n                                                if (instrument.modFilterTypes[mod] == 0) {\n                                                    tgtSong.tmpEqFilterStart = tgtSong.eqSubFilters[latestPinValues[mod]];\n                                                }\n                                                else {\n                                                    for (let i = 0; i < Config.filterMorphCount; i++) {\n                                                        if (tgtSong.tmpEqFilterStart != null && tgtSong.tmpEqFilterStart == tgtSong.eqSubFilters[i]) {\n                                                            tgtSong.tmpEqFilterStart = new FilterSettings();\n                                                            tgtSong.tmpEqFilterStart.fromJsonObject(tgtSong.eqSubFilters[i].toJsonObject());\n                                                            i = Config.filterMorphCount;\n                                                        }\n                                                    }\n                                                    if (tgtSong.tmpEqFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtSong.tmpEqFilterStart.controlPointCount) {\n                                                        if (instrument.modFilterTypes[mod] % 2)\n                                                            tgtSong.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\n                                                        else\n                                                            tgtSong.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\n                                                    }\n                                                }\n                                                tgtSong.tmpEqFilterEnd = tgtSong.tmpEqFilterStart;\n                                            }\n                                            for (let i = 0; i < instrument.modChannels[mod].length; i++)\n                                                this.setModValue(latestPinValues[mod], latestPinValues[mod], instrument.modChannels[mod][i], instrument.modInstruments[mod][i], instrument.modulators[mod]);\n                                            latestModTimes[instrument.modulators[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\n                                        }\n                                    }\n                                    else {\n                                        let usedChannels = [];\n                                        let usedInstruments = [];\n                                        if (instrument.modInstruments[mod][0] == this.song.channels[instrument.modChannels[mod][0]].instruments.length) {\n                                            for (let i = 0; i < this.song.channels[instrument.modChannels[mod][0]].instruments.length; i++) {\n                                                usedChannels.push(instrument.modChannels[mod][0]);\n                                                usedInstruments.push(i);\n                                            }\n                                        }\n                                        else if (instrument.modInstruments[mod][0] > this.song.channels[instrument.modChannels[mod][0]].instruments.length) {\n                                            const tgtPattern = this.song.getPattern(instrument.modChannels[mod][0], currentBar);\n                                            if (tgtPattern != null) {\n                                                usedChannels.push(instrument.modChannels[mod][0]);\n                                                usedInstruments = tgtPattern.instruments;\n                                            }\n                                        }\n                                        else {\n                                            for (let i = 0; i < instrument.modChannels[mod].length; i++) {\n                                                usedChannels.push(instrument.modChannels[mod][i]);\n                                                usedInstruments.push(instrument.modInstruments[mod][i]);\n                                            }\n                                        }\n                                        for (let instrumentIndex = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\n                                            const eqFilterParam = instrument.modulators[mod] == Config.modulators.dictionary[\"post eq\"].index;\n                                            const noteFilterParam = instrument.modulators[mod] == Config.modulators.dictionary[\"pre eq\"].index;\n                                            let modulatorAdjust = instrument.modulators[mod];\n                                            if (eqFilterParam) {\n                                                modulatorAdjust = Config.modulators.length + (instrument.modFilterTypes[mod] | 0);\n                                            }\n                                            else if (noteFilterParam) {\n                                                modulatorAdjust = Config.modulators.length + 1 + (2 * Config.filterMaxPoints) + (instrument.modFilterTypes[mod] | 0);\n                                            }\n                                            if (latestModInsTimes[instrument.modChannels[mod][instrumentIndex]][usedInstruments[instrumentIndex]][modulatorAdjust] == null\n                                                || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > latestModInsTimes[instrument.modChannels[mod][instrumentIndex]][usedInstruments[instrumentIndex]][modulatorAdjust]) {\n                                                if (eqFilterParam) {\n                                                    let tgtInstrument = this.song.channels[instrument.modChannels[mod][instrumentIndex]].instruments[usedInstruments[instrumentIndex]];\n                                                    for (let effectIndex = 0; effectIndex < tgtInstrument.effects.length; effectIndex++) {\n                                                        let tgtEffect = tgtInstrument.effects[effectIndex];\n                                                        if (instrument.modFilterTypes[mod] == 0) {\n                                                            tgtEffect.tmpEqFilterStart = tgtEffect.eqSubFilters[latestPinValues[mod]];\n                                                        }\n                                                        else {\n                                                            for (let i = 0; i < Config.filterMorphCount; i++) {\n                                                                if (tgtEffect.tmpEqFilterStart != null && tgtEffect.tmpEqFilterStart == tgtEffect.eqSubFilters[i]) {\n                                                                    tgtEffect.tmpEqFilterStart = new FilterSettings();\n                                                                    tgtEffect.tmpEqFilterStart.fromJsonObject(tgtEffect.eqSubFilters[i].toJsonObject());\n                                                                    i = Config.filterMorphCount;\n                                                                }\n                                                            }\n                                                            if (tgtEffect.tmpEqFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtEffect.tmpEqFilterStart.controlPointCount) {\n                                                                if (instrument.modFilterTypes[mod] % 2)\n                                                                    tgtEffect.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\n                                                                else\n                                                                    tgtEffect.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\n                                                            }\n                                                        }\n                                                        tgtEffect.tmpEqFilterEnd = tgtEffect.tmpEqFilterStart;\n                                                    }\n                                                }\n                                                else if (noteFilterParam) {\n                                                    let tgtInstrument = this.song.channels[instrument.modChannels[mod][instrumentIndex]].instruments[usedInstruments[instrumentIndex]];\n                                                    if (instrument.modFilterTypes[mod] == 0) {\n                                                        tgtInstrument.tmpNoteFilterStart = tgtInstrument.noteSubFilters[latestPinValues[mod]];\n                                                    }\n                                                    else {\n                                                        for (let i = 0; i < Config.filterMorphCount; i++) {\n                                                            if (tgtInstrument.tmpNoteFilterStart != null && tgtInstrument.tmpNoteFilterStart == tgtInstrument.noteSubFilters[i]) {\n                                                                tgtInstrument.tmpNoteFilterStart = new FilterSettings();\n                                                                tgtInstrument.tmpNoteFilterStart.fromJsonObject(tgtInstrument.noteSubFilters[i].toJsonObject());\n                                                                i = Config.filterMorphCount;\n                                                            }\n                                                        }\n                                                        if (tgtInstrument.tmpNoteFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpNoteFilterStart.controlPointCount) {\n                                                            if (instrument.modFilterTypes[mod] % 2)\n                                                                tgtInstrument.tmpNoteFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\n                                                            else\n                                                                tgtInstrument.tmpNoteFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\n                                                        }\n                                                    }\n                                                    tgtInstrument.tmpNoteFilterEnd = tgtInstrument.tmpNoteFilterStart;\n                                                }\n                                                else\n                                                    this.setModValue(latestPinValues[mod], latestPinValues[mod], instrument.modChannels[mod][instrumentIndex], usedInstruments[instrumentIndex], modulatorAdjust);\n                                                latestModInsTimes[instrument.modChannels[mod][instrumentIndex]][usedInstruments[instrumentIndex]][modulatorAdjust] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    determineInvalidModulators(instrument) {\n        if (this.song == null)\n            return;\n        for (let mod = 0; mod < Config.modCount; mod++) {\n            instrument.invalidModulators[mod] = true;\n            if (instrument.modChannels[mod][0] == -1) {\n                if (instrument.modulators[mod] != 0)\n                    instrument.invalidModulators[mod] = false;\n                continue;\n            }\n            for (let channelIndex = 0; channelIndex < instrument.modChannels[mod].length; channelIndex++) {\n                const channel = this.song.channels[instrument.modChannels[mod][channelIndex]];\n                if (channel == null)\n                    continue;\n                let tgtInstrumentList = [];\n                if (instrument.modInstruments[mod][channelIndex] >= channel.instruments.length) {\n                    tgtInstrumentList = channel.instruments;\n                }\n                else {\n                    tgtInstrumentList = [channel.instruments[instrument.modInstruments[mod][channelIndex]]];\n                }\n                for (let i = 0; i < tgtInstrumentList.length; i++) {\n                    const tgtInstrument = tgtInstrumentList[i];\n                    const tgtEffect = tgtInstrument.effects[0];\n                    if (tgtInstrument == null)\n                        continue;\n                    const str = Config.modulators[instrument.modulators[mod]].name;\n                    if (!(Config.modulators[instrument.modulators[mod]].associatedEffect != 11 && !(tgtInstrument.effectsIncludeType(Config.modulators[instrument.modulators[mod]].associatedEffect))) && !(Config.modulators[instrument.modulators[mod]].associatedMDEffect != 6 && !(tgtInstrument.mdeffects & (1 << Config.modulators[instrument.modulators[mod]].associatedMDEffect)))\n                        || ((tgtInstrument.type != 1 && tgtInstrument.type != 11) && (str == \"fm slider 1\" || str == \"fm slider 2\" || str == \"fm slider 3\" || str == \"fm slider 4\" || str == \"fm feedback\"))\n                        || tgtInstrument.type != 11 && (str == \"fm slider 5\" || str == \"fm slider 6\")\n                        || ((tgtInstrument.type != 6 && tgtInstrument.type != 8) && (str == \"pulse width\" || str == \"decimal offset\"))\n                        || ((tgtInstrument.type != 8) && (str == \"dynamism\" || str == \"spread\" || str == \"saw shape\"))\n                        || (!tgtInstrument.getChord().arpeggiates && (str == \"arp speed\" || str == \"reset arp\"))\n                        || (tgtEffect.eqFilterType && str == \"post eq\")\n                        || (!tgtEffect.eqFilterType && (str == \"post eq cut\" || str == \"post eq peak\"))\n                        || (str == \"post eq\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.getLargestControlPointCount(false))\n                        || (tgtInstrument.noteFilterType && str == \"pre eq\")\n                        || (!tgtInstrument.noteFilterType && (str == \"pre eq cut\" || str == \"pre eq peak\"))\n                        || (str == \"pre eq\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.getLargestControlPointCount(true))) {\n                        instrument.invalidModulators[mod] = false;\n                        i = tgtInstrumentList.length;\n                    }\n                }\n            }\n        }\n    }\n    static operatorAmplitudeCurve(amplitude) {\n        return (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\n    }\n    get playing() {\n        return this.isPlayingSong;\n    }\n    get recording() {\n        return this.isRecording;\n    }\n    get playhead() {\n        return this.playheadInternal;\n    }\n    set playhead(value) {\n        if (this.song != null) {\n            this.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\n            let remainder = this.playheadInternal;\n            this.bar = Math.floor(remainder);\n            remainder = this.song.beatsPerBar * (remainder - this.bar);\n            this.beat = Math.floor(remainder);\n            remainder = Config.partsPerBeat * (remainder - this.beat);\n            this.part = Math.floor(remainder);\n            remainder = Config.ticksPerPart * (remainder - this.part);\n            this.tick = Math.floor(remainder);\n            this.tickSampleCountdown = 0;\n            this.isAtStartOfTick = true;\n            this.prevBar = null;\n        }\n    }\n    getSamplesPerBar() {\n        if (this.song == null)\n            throw new Error();\n        return this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\n    }\n    getTicksIntoBar() {\n        return (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\n    }\n    getCurrentPart() {\n        return (this.beat * Config.partsPerBeat + this.part);\n    }\n    findPartsInBar(bar) {\n        if (this.song == null)\n            return 0;\n        let partsInBar = Config.partsPerBeat * this.song.beatsPerBar;\n        for (let channel = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\n            let pattern = this.song.getPattern(channel, bar);\n            if (pattern != null) {\n                let instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                for (let mod = 0; mod < Config.modCount; mod++) {\n                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\n                        for (const note of pattern.notes) {\n                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\n                                if (partsInBar > note.start)\n                                    partsInBar = note.start;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return partsInBar;\n    }\n    getTotalSamples(enableIntro, enableOutro, loop) {\n        if (this.song == null)\n            return -1;\n        let startBar = enableIntro ? 0 : this.song.loopStart;\n        let endBar = enableOutro ? this.song.barCount : (this.song.loopStart + this.song.loopLength);\n        let hasTempoMods = false;\n        let hasNextBarMods = false;\n        let prevTempo = this.song.tempo;\n        for (let channel = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\n            for (let bar = startBar; bar < endBar; bar++) {\n                let pattern = this.song.getPattern(channel, bar);\n                if (pattern != null) {\n                    let instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                    for (let mod = 0; mod < Config.modCount; mod++) {\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index) {\n                            hasTempoMods = true;\n                        }\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\n                            hasNextBarMods = true;\n                        }\n                    }\n                }\n            }\n        }\n        if (startBar > 0) {\n            let latestTempoPin = null;\n            let latestTempoValue = 0;\n            for (let bar = startBar - 1; bar >= 0; bar--) {\n                for (let channel = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\n                    let pattern = this.song.getPattern(channel, bar);\n                    if (pattern != null) {\n                        let instrumentIdx = pattern.instruments[0];\n                        let instrument = this.song.channels[channel].instruments[instrumentIdx];\n                        let partsInBar = this.findPartsInBar(bar);\n                        for (const note of pattern.notes) {\n                            if (instrument.modulators[Config.modCount - 1 - note.pitches[0]] == Config.modulators.dictionary[\"tempo\"].index) {\n                                if (note.start < partsInBar && (latestTempoPin == null || note.end > latestTempoPin)) {\n                                    if (note.end <= partsInBar) {\n                                        latestTempoPin = note.end;\n                                        latestTempoValue = note.pins[note.pins.length - 1].size;\n                                    }\n                                    else {\n                                        latestTempoPin = partsInBar;\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                const transitionLength = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\n                                                const toNextBarLength = partsInBar - note.start - note.pins[pinIdx - 1].time;\n                                                const deltaVolume = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\n                                                latestTempoValue = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\n                                                pinIdx = note.pins.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (latestTempoPin != null) {\n                    prevTempo = latestTempoValue + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                    bar = -1;\n                }\n            }\n        }\n        if (hasTempoMods || hasNextBarMods) {\n            let bar = startBar;\n            let ended = false;\n            let totalSamples = 0;\n            while (!ended) {\n                let partsInBar = Config.partsPerBeat * this.song.beatsPerBar;\n                let currentPart = 0;\n                if (hasNextBarMods) {\n                    partsInBar = this.findPartsInBar(bar);\n                }\n                if (hasTempoMods) {\n                    let foundMod = false;\n                    for (let channel = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\n                        if (foundMod == false) {\n                            let pattern = this.song.getPattern(channel, bar);\n                            if (pattern != null) {\n                                let instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                                for (let mod = 0; mod < Config.modCount; mod++) {\n                                    if (foundMod == false && instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index\n                                        && pattern.notes.find(n => n.pitches[0] == (Config.modCount - 1 - mod))) {\n                                        foundMod = true;\n                                        pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\n                                        for (const note of pattern.notes) {\n                                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\n                                                totalSamples += (Math.min(partsInBar - currentPart, note.start - currentPart)) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\n                                                if (note.start < partsInBar) {\n                                                    for (let pinIdx = 1; pinIdx < note.pins.length; pinIdx++) {\n                                                        if (note.pins[pinIdx - 1].time + note.start <= partsInBar) {\n                                                            const tickLength = Config.ticksPerPart * Math.min(partsInBar - (note.start + note.pins[pinIdx - 1].time), note.pins[pinIdx].time - note.pins[pinIdx - 1].time);\n                                                            const prevPinTempo = note.pins[pinIdx - 1].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            let currPinTempo = note.pins[pinIdx].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                                currPinTempo = note.pins[pinIdx - 1].size + (note.pins[pinIdx].size - note.pins[pinIdx - 1].size) * (partsInBar - (note.start + note.pins[pinIdx - 1].time)) / (note.pins[pinIdx].time - note.pins[pinIdx - 1].time) + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            }\n                                                            let bpmScalar = Config.partsPerBeat * Config.ticksPerPart / 60;\n                                                            if (currPinTempo != prevPinTempo) {\n                                                                totalSamples += -this.samplesPerSecond * tickLength * (Math.log(bpmScalar * currPinTempo * tickLength) - Math.log(bpmScalar * prevPinTempo * tickLength)) / (bpmScalar * (prevPinTempo - currPinTempo));\n                                                            }\n                                                            else {\n                                                                totalSamples += tickLength * this.getSamplesPerTickSpecificBPM(currPinTempo);\n                                                            }\n                                                            prevTempo = currPinTempo;\n                                                        }\n                                                        currentPart = Math.min(note.start + note.pins[pinIdx].time, partsInBar);\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                totalSamples += (partsInBar - currentPart) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\n                bar++;\n                if (loop != 0 && bar == this.song.loopStart + this.song.loopLength) {\n                    bar = this.song.loopStart;\n                    if (loop > 0)\n                        loop--;\n                }\n                if (bar >= endBar) {\n                    ended = true;\n                }\n            }\n            return Math.ceil(totalSamples);\n        }\n        else {\n            return this.getSamplesPerBar() * this.getTotalBars(enableIntro, enableOutro, loop);\n        }\n    }\n    getTotalBars(enableIntro, enableOutro, useLoopCount = this.loopRepeatCount) {\n        if (this.song == null)\n            throw new Error();\n        let bars = this.song.loopLength * (useLoopCount + 1);\n        if (enableIntro)\n            bars += this.song.loopStart;\n        if (enableOutro)\n            bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\n        return bars;\n    }\n    constructor(song = null) {\n        this.samplesPerSecond = 44100;\n        this.song = null;\n        this.preferLowerLatency = false;\n        this.anticipatePoorPerformance = false;\n        this.liveInputDuration = 0;\n        this.liveBassInputDuration = 0;\n        this.liveInputStarted = false;\n        this.liveBassInputStarted = false;\n        this.liveInputPitches = [];\n        this.liveBassInputPitches = [];\n        this.liveInputChannel = 0;\n        this.liveBassInputChannel = 0;\n        this.liveInputInstruments = [];\n        this.liveBassInputInstruments = [];\n        this.loopRepeatCount = -1;\n        this.volume = 1.0;\n        this.oscRefreshEventTimer = 0;\n        this.oscEnabled = true;\n        this.enableMetronome = false;\n        this.countInMetronome = false;\n        this.renderingSong = false;\n        this.heldMods = [];\n        this.wantToSkip = false;\n        this.playheadInternal = 0.0;\n        this.bar = 0;\n        this.prevBar = null;\n        this.nextBar = null;\n        this.beat = 0;\n        this.part = 0;\n        this.tick = 0;\n        this.isAtStartOfTick = true;\n        this.isAtEndOfTick = true;\n        this.tickSampleCountdown = 0;\n        this.modValues = [];\n        this.modInsValues = [];\n        this.nextModValues = [];\n        this.nextModInsValues = [];\n        this.isPlayingSong = false;\n        this.isRecording = false;\n        this.liveInputEndTime = 0.0;\n        this.browserAutomaticallyClearsAudioBuffer = true;\n        this.tempDrumSetControlPoint = new FilterControlPoint();\n        this.tempFrequencyResponse = new FrequencyResponse();\n        this.loopBarStart = -1;\n        this.loopBarEnd = -1;\n        this.channels = [];\n        this.tonePool = new Deque();\n        this.tempMatchedPitchTones = Array(Config.maxChordSize).fill(null);\n        this.startedMetronome = false;\n        this.metronomeSamplesRemaining = -1;\n        this.metronomeAmplitude = 0.0;\n        this.metronomePrevAmplitude = 0.0;\n        this.metronomeFilter = 0.0;\n        this.limit = 0.0;\n        this.songEqFilterVolume = 1.0;\n        this.songEqFilterVolumeDelta = 0.0;\n        this.songEqFiltersL = [];\n        this.songEqFiltersR = [];\n        this.songEqFilterCount = 0;\n        this.initialSongEqFilterInput1L = 0.0;\n        this.initialSongEqFilterInput2L = 0.0;\n        this.initialSongEqFilterInput1R = 0.0;\n        this.initialSongEqFilterInput2R = 0.0;\n        this.tempInstrumentSampleBufferL = null;\n        this.tempInstrumentSampleBufferR = null;\n        this.audioCtx = null;\n        this.scriptNode = null;\n        this.audioProcessCallback = (audioProcessingEvent) => {\n            const outputBuffer = audioProcessingEvent.outputBuffer;\n            const outputDataL = outputBuffer.getChannelData(0);\n            const outputDataR = outputBuffer.getChannelData(1);\n            if (this.browserAutomaticallyClearsAudioBuffer && (outputDataL[0] != 0.0 || outputDataR[0] != 0.0 || outputDataL[outputBuffer.length - 1] != 0.0 || outputDataR[outputBuffer.length - 1] != 0.0)) {\n                this.browserAutomaticallyClearsAudioBuffer = false;\n            }\n            if (!this.browserAutomaticallyClearsAudioBuffer) {\n                const length = outputBuffer.length;\n                for (let i = 0; i < length; i++) {\n                    outputDataL[i] = 0.0;\n                    outputDataR[i] = 0.0;\n                }\n            }\n            if (!this.isPlayingSong && performance.now() >= this.liveInputEndTime) {\n                this.deactivateAudio();\n            }\n            else {\n                this.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\n                if (this.oscEnabled) {\n                    if (this.oscRefreshEventTimer <= 0) {\n                        events.raise(\"oscilloscopeUpdate\", outputDataL, outputDataR);\n                        this.oscRefreshEventTimer = 2;\n                    }\n                    else {\n                        this.oscRefreshEventTimer--;\n                    }\n                }\n            }\n        };\n        this.computeDelayBufferSizes();\n        if (song != null)\n            this.setSong(song);\n    }\n    setSong(song) {\n        if (typeof (song) == \"string\") {\n            this.song = new Song(song);\n        }\n        else if (song instanceof Song) {\n            this.song = song;\n        }\n        this.prevBar = null;\n    }\n    computeDelayBufferSizes() {\n        this.panningDelayBufferSize = fittingPowerOfTwo(this.samplesPerSecond * Config.panDelaySecondsMax);\n        this.panningDelayBufferMask = this.panningDelayBufferSize - 1;\n        this.flangerDelayBufferSize = fittingPowerOfTwo(this.samplesPerSecond * Config.flangerMaxDelay);\n        this.flangerDelayBufferMask = this.flangerDelayBufferSize - 1;\n        this.chorusDelayBufferSize = fittingPowerOfTwo(this.samplesPerSecond * Config.chorusMaxDelay);\n        this.chorusDelayBufferMask = this.chorusDelayBufferSize - 1;\n    }\n    activateAudio() {\n        const bufferSize = this.anticipatePoorPerformance ? (this.preferLowerLatency ? 2048 : 4096) : (this.preferLowerLatency ? 512 : 2048);\n        if (this.audioCtx == null || this.scriptNode == null || this.scriptNode.bufferSize != bufferSize) {\n            if (this.scriptNode != null)\n                this.deactivateAudio();\n            const latencyHint = this.anticipatePoorPerformance ? (this.preferLowerLatency ? \"balanced\" : \"playback\") : (this.preferLowerLatency ? \"interactive\" : \"balanced\");\n            this.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)({ latencyHint: latencyHint });\n            this.samplesPerSecond = this.audioCtx.sampleRate;\n            this.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(bufferSize, 0, 2) : this.audioCtx.createJavaScriptNode(bufferSize, 0, 2);\n            this.scriptNode.onaudioprocess = this.audioProcessCallback;\n            this.scriptNode.channelCountMode = 'explicit';\n            this.scriptNode.channelInterpretation = 'speakers';\n            this.scriptNode.connect(this.audioCtx.destination);\n            this.computeDelayBufferSizes();\n        }\n        this.audioCtx.resume();\n    }\n    deactivateAudio() {\n        if (this.audioCtx != null && this.scriptNode != null) {\n            this.scriptNode.disconnect(this.audioCtx.destination);\n            this.scriptNode = null;\n            if (this.audioCtx.close)\n                this.audioCtx.close();\n            this.audioCtx = null;\n        }\n    }\n    maintainLiveInput() {\n        this.activateAudio();\n        this.liveInputEndTime = performance.now() + 10000.0;\n    }\n    play() {\n        if (this.isPlayingSong)\n            return;\n        this.initModFilters(this.song);\n        this.computeLatestModValues();\n        this.activateAudio();\n        this.warmUpSynthesizer(this.song);\n        this.isPlayingSong = true;\n    }\n    pause() {\n        if (!this.isPlayingSong)\n            return;\n        this.isPlayingSong = false;\n        this.isRecording = false;\n        this.preferLowerLatency = false;\n        this.modValues = [];\n        this.nextModValues = [];\n        this.heldMods = [];\n        if (this.song != null) {\n            this.song.inVolumeCap = 0.0;\n            this.song.outVolumeCap = 0.0;\n            this.song.outVolumeCapL = 0.0;\n            this.song.outVolumeCapR = 0.0;\n            this.song.tmpEqFilterStart = null;\n            this.song.tmpEqFilterEnd = null;\n            for (let channelIndex = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\n                this.modInsValues[channelIndex] = [];\n                this.nextModInsValues[channelIndex] = [];\n            }\n        }\n    }\n    startRecording() {\n        this.preferLowerLatency = true;\n        this.isRecording = true;\n        this.play();\n    }\n    resetEffects() {\n        this.limit = 0.0;\n        this.freeAllTones();\n        if (this.song != null) {\n            for (const channelState of this.channels) {\n                for (const instrumentState of channelState.instruments) {\n                    instrumentState.resetAllEffects();\n                }\n            }\n        }\n    }\n    setModValue(volumeStart, volumeEnd, channelIndex, instrumentIndex, setting) {\n        let val = volumeStart + Config.modulators[setting].convertRealFactor;\n        let nextVal = volumeEnd + Config.modulators[setting].convertRealFactor;\n        if (Config.modulators[setting].forSong) {\n            if (this.modValues[setting] == null || this.modValues[setting] != val || this.nextModValues[setting] != nextVal) {\n                this.modValues[setting] = val;\n                this.nextModValues[setting] = nextVal;\n            }\n        }\n        else {\n            if (this.modInsValues[channelIndex][instrumentIndex][setting] == null\n                || this.modInsValues[channelIndex][instrumentIndex][setting] != val\n                || this.nextModInsValues[channelIndex][instrumentIndex][setting] != nextVal) {\n                this.modInsValues[channelIndex][instrumentIndex][setting] = val;\n                this.nextModInsValues[channelIndex][instrumentIndex][setting] = nextVal;\n            }\n        }\n        return val;\n    }\n    getModValue(setting, channel, instrument, nextVal) {\n        const forSong = Config.modulators[setting].forSong;\n        if (forSong) {\n            if (this.modValues[setting] != null && this.nextModValues[setting] != null) {\n                return nextVal ? this.nextModValues[setting] : this.modValues[setting];\n            }\n        }\n        else if (channel != undefined && instrument != undefined) {\n            if (this.modInsValues[channel][instrument][setting] != null && this.nextModInsValues[channel][instrument][setting] != null) {\n                return nextVal ? this.nextModInsValues[channel][instrument][setting] : this.modInsValues[channel][instrument][setting];\n            }\n        }\n        return -1;\n    }\n    isAnyModActive(channel, instrument) {\n        for (let setting = 0; setting < Config.modulators.length; setting++) {\n            if ((this.modValues != undefined && this.modValues[setting] != null)\n                || (this.modInsValues != undefined && this.modInsValues[channel] != undefined && this.modInsValues[channel][instrument] != undefined && this.modInsValues[channel][instrument][setting] != null)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    unsetMod(setting, channel, instrument) {\n        if (this.isModActive(setting) || (channel != undefined && instrument != undefined && this.isModActive(setting, channel, instrument))) {\n            this.modValues[setting] = null;\n            this.nextModValues[setting] = null;\n            for (let i = 0; i < this.heldMods.length; i++) {\n                if (channel != undefined && instrument != undefined) {\n                    if (this.heldMods[i].channelIndex == channel && this.heldMods[i].instrumentIndex == instrument && this.heldMods[i].setting == setting)\n                        this.heldMods.splice(i, 1);\n                }\n                else {\n                    if (this.heldMods[i].setting == setting)\n                        this.heldMods.splice(i, 1);\n                }\n            }\n            if (channel != undefined && instrument != undefined) {\n                this.modInsValues[channel][instrument][setting] = null;\n                this.nextModInsValues[channel][instrument][setting] = null;\n            }\n        }\n    }\n    isFilterModActive(forNoteFilter, channelIdx, instrumentIdx, forSong) {\n        var _a;\n        const instrument = this.song.channels[channelIdx].instruments[instrumentIdx];\n        if (forNoteFilter) {\n            if (instrument.noteFilterType)\n                return false;\n            if (instrument.tmpNoteFilterEnd != null)\n                return true;\n        }\n        else {\n            if (forSong) {\n                if (((_a = this === null || this === void 0 ? void 0 : this.song) === null || _a === void 0 ? void 0 : _a.tmpEqFilterEnd) != null)\n                    return true;\n            }\n            else {\n                for (let i = 0; i < instrument.effects.length; i++) {\n                    let effect = instrument.effects[i];\n                    if (effect.eqFilterType)\n                        return false;\n                    if (effect.tmpEqFilterEnd != null)\n                        return true;\n                }\n            }\n        }\n        return false;\n    }\n    isModActive(setting, channel, instrument) {\n        const forSong = Config.modulators[setting].forSong;\n        if (forSong) {\n            return (this.modValues != undefined && this.modValues[setting] != null);\n        }\n        else if (channel != undefined && instrument != undefined && this.modInsValues != undefined && this.modInsValues[channel] != null && this.modInsValues[channel][instrument] != null) {\n            return (this.modInsValues[channel][instrument][setting] != null);\n        }\n        return false;\n    }\n    forceHoldMods(volumeStart, channelIndex, instrumentIndex, setting) {\n        let found = false;\n        for (let i = 0; i < this.heldMods.length; i++) {\n            if (this.heldMods[i].channelIndex == channelIndex && this.heldMods[i].instrumentIndex == instrumentIndex && this.heldMods[i].setting == setting) {\n                this.heldMods[i].volume = volumeStart;\n                this.heldMods[i].holdFor = 24;\n                found = true;\n            }\n        }\n        if (!found)\n            this.heldMods.push({ volume: volumeStart, channelIndex: channelIndex, instrumentIndex: instrumentIndex, setting: setting, holdFor: 24 });\n    }\n    snapToStart() {\n        this.bar = 0;\n        this.resetEffects();\n        this.snapToBar();\n    }\n    goToBar(bar) {\n        this.bar = bar;\n        this.resetEffects();\n        this.playheadInternal = this.bar;\n    }\n    snapToBar() {\n        this.playheadInternal = this.bar;\n        this.beat = 0;\n        this.part = 0;\n        this.tick = 0;\n        this.tickSampleCountdown = 0;\n    }\n    jumpIntoLoop() {\n        if (!this.song)\n            return;\n        if (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\n            const oldBar = this.bar;\n            this.bar = this.song.loopStart;\n            this.playheadInternal += this.bar - oldBar;\n            if (this.playing)\n                this.computeLatestModValues();\n        }\n    }\n    goToNextBar() {\n        if (!this.song)\n            return;\n        this.prevBar = this.bar;\n        const oldBar = this.bar;\n        this.bar++;\n        if (this.bar >= this.song.barCount) {\n            this.bar = 0;\n        }\n        this.playheadInternal += this.bar - oldBar;\n        if (this.playing)\n            this.computeLatestModValues();\n    }\n    goToPrevBar() {\n        if (!this.song)\n            return;\n        this.prevBar = null;\n        const oldBar = this.bar;\n        this.bar--;\n        if (this.bar < 0 || this.bar >= this.song.barCount) {\n            this.bar = this.song.barCount - 1;\n        }\n        this.playheadInternal += this.bar - oldBar;\n        if (this.playing)\n            this.computeLatestModValues();\n    }\n    getNextBar() {\n        let nextBar = this.bar + 1;\n        if (this.isRecording) {\n            if (nextBar >= this.song.barCount) {\n                nextBar = this.song.barCount - 1;\n            }\n        }\n        else if (this.bar == this.loopBarEnd && !this.renderingSong) {\n            nextBar = this.loopBarStart;\n        }\n        else if (this.loopRepeatCount != 0 && nextBar == Math.max(this.loopBarEnd + 1, this.song.loopStart + this.song.loopLength)) {\n            nextBar = this.song.loopStart;\n        }\n        return nextBar;\n    }\n    skipBar() {\n        if (!this.song)\n            return;\n        const samplesPerTick = this.getSamplesPerTick();\n        this.prevBar = this.bar;\n        if (this.loopBarEnd != this.bar)\n            this.bar++;\n        else {\n            this.bar = this.loopBarStart;\n        }\n        this.beat = 0;\n        this.part = 0;\n        this.tick = 0;\n        this.tickSampleCountdown = samplesPerTick;\n        this.isAtStartOfTick = true;\n        if (this.loopRepeatCount != 0 && this.bar == Math.max(this.song.loopStart + this.song.loopLength, this.loopBarEnd)) {\n            this.bar = this.song.loopStart;\n            if (this.loopBarStart != -1)\n                this.bar = this.loopBarStart;\n            if (this.loopRepeatCount > 0)\n                this.loopRepeatCount--;\n        }\n    }\n    computeSongState(samplesPerTick) {\n        if (this.song == null)\n            return;\n        const roundedSamplesPerTick = Math.ceil(samplesPerTick);\n        const samplesPerSecond = this.samplesPerSecond;\n        let eqFilterVolume = 1.0;\n        if (this.song.eqFilterType) {\n            const eqFilterSettingsStart = this.song.eqFilter;\n            if (this.song.eqSubFilters[1] == null)\n                this.song.eqSubFilters[1] = new FilterSettings();\n            const eqFilterSettingsEnd = this.song.eqSubFilters[1];\n            let startSimpleFreq = this.song.eqFilterSimpleCut;\n            let startSimpleGain = this.song.eqFilterSimplePeak;\n            let endSimpleFreq = this.song.eqFilterSimpleCut;\n            let endSimpleGain = this.song.eqFilterSimplePeak;\n            let filterChanges = false;\n            let startPoint;\n            if (filterChanges) {\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain);\n                eqFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain);\n                startPoint = eqFilterSettingsStart.controlPoints[0];\n                let endPoint = eqFilterSettingsEnd.controlPoints[0];\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\n                if (this.songEqFiltersL.length < 1)\n                    this.songEqFiltersL[0] = new DynamicBiquadFilter();\n                this.songEqFiltersL[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                if (this.songEqFiltersR.length < 1)\n                    this.songEqFiltersR[0] = new DynamicBiquadFilter();\n                this.songEqFiltersR[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n            }\n            else {\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, true);\n                startPoint = eqFilterSettingsStart.controlPoints[0];\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                if (this.songEqFiltersL.length < 1)\n                    this.songEqFiltersL[0] = new DynamicBiquadFilter();\n                this.songEqFiltersL[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterStartCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                if (this.songEqFiltersR.length < 1)\n                    this.songEqFiltersR[0] = new DynamicBiquadFilter();\n                this.songEqFiltersR[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterStartCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n            }\n            eqFilterVolume *= startPoint.getVolumeCompensationMult();\n            this.songEqFilterCount = 1;\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n        }\n        else {\n            const eqFilterSettings = (this.song.tmpEqFilterStart != null) ? this.song.tmpEqFilterStart : this.song.eqFilter;\n            for (let i = 0; i < eqFilterSettings.controlPointCount; i++) {\n                let startPoint = eqFilterSettings.controlPoints[i];\n                let endPoint = (this.song.tmpEqFilterEnd != null && this.song.tmpEqFilterEnd.controlPoints[i] != null) ? this.song.tmpEqFilterEnd.controlPoints[i] : eqFilterSettings.controlPoints[i];\n                if (startPoint.type != endPoint.type) {\n                    startPoint = endPoint;\n                }\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\n                if (this.songEqFiltersL.length <= i)\n                    this.songEqFiltersL[i] = new DynamicBiquadFilter();\n                this.songEqFiltersL[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                if (this.songEqFiltersR.length <= i)\n                    this.songEqFiltersR[i] = new DynamicBiquadFilter();\n                this.songEqFiltersR[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                eqFilterVolume *= startPoint.getVolumeCompensationMult();\n            }\n            this.songEqFilterCount = eqFilterSettings.controlPointCount;\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n        }\n        let eqFilterVolumeStart = eqFilterVolume;\n        let eqFilterVolumeEnd = eqFilterVolume;\n        this.songEqFilterVolume = eqFilterVolumeStart;\n        this.songEqFilterVolumeDelta = (eqFilterVolumeEnd - eqFilterVolumeStart) / roundedSamplesPerTick;\n    }\n    synthesize(outputDataL, outputDataR, outputBufferLength, playSong = true) {\n        if (this.song == null) {\n            for (let i = 0; i < outputBufferLength; i++) {\n                outputDataL[i] = 0.0;\n                outputDataR[i] = 0.0;\n            }\n            this.deactivateAudio();\n            return;\n        }\n        const song = this.song;\n        this.song.inVolumeCap = 0.0;\n        this.song.outVolumeCap = 0.0;\n        this.song.outVolumeCapL = 0.0;\n        this.song.outVolumeCapR = 0.0;\n        let samplesPerTick = this.getSamplesPerTick();\n        let ended = false;\n        if (this.tickSampleCountdown <= 0 || this.tickSampleCountdown > samplesPerTick) {\n            this.tickSampleCountdown = samplesPerTick;\n            this.isAtStartOfTick = true;\n        }\n        if (playSong) {\n            if (this.beat >= song.beatsPerBar) {\n                this.beat = 0;\n                this.part = 0;\n                this.tick = 0;\n                this.tickSampleCountdown = samplesPerTick;\n                this.isAtStartOfTick = true;\n                this.prevBar = this.bar;\n                this.bar = this.getNextBar();\n                if (this.bar <= this.prevBar && this.loopRepeatCount > 0)\n                    this.loopRepeatCount--;\n            }\n            if (this.bar >= song.barCount) {\n                this.bar = 0;\n                if (this.loopRepeatCount != -1) {\n                    ended = true;\n                    this.pause();\n                }\n            }\n        }\n        this.syncSongState();\n        if (this.tempInstrumentSampleBufferL == null || this.tempInstrumentSampleBufferL.length < outputBufferLength || this.tempInstrumentSampleBufferR == null || this.tempInstrumentSampleBufferR.length < outputBufferLength) {\n            this.tempInstrumentSampleBufferL = new Float32Array(outputBufferLength);\n            this.tempInstrumentSampleBufferR = new Float32Array(outputBufferLength);\n        }\n        const volume = +this.volume;\n        const limitDecay = 1.0 - Math.pow(0.5, this.song.limitDecay / this.samplesPerSecond);\n        const limitRise = 1.0 - Math.pow(0.5, this.song.limitRise / this.samplesPerSecond);\n        let limit = +this.limit;\n        let skippedBars = [];\n        let firstSkippedBufferIndex = -1;\n        let bufferIndex = 0;\n        while (bufferIndex < outputBufferLength && !ended) {\n            this.nextBar = this.getNextBar();\n            if (this.nextBar >= song.barCount)\n                this.nextBar = null;\n            const samplesLeftInBuffer = outputBufferLength - bufferIndex;\n            const samplesLeftInTick = Math.ceil(this.tickSampleCountdown);\n            const runLength = Math.min(samplesLeftInTick, samplesLeftInBuffer);\n            const runEnd = bufferIndex + runLength;\n            if (this.isPlayingSong || this.renderingSong) {\n                for (let channelIndex = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\n                    const channel = song.channels[channelIndex];\n                    const channelState = this.channels[channelIndex];\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong);\n                    for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                        const instrumentState = channelState.instruments[instrumentIndex];\n                        for (let i = 0; i < instrumentState.activeModTones.count(); i++) {\n                            const tone = instrumentState.activeModTones.get(i);\n                            const channel = song.channels[channelIndex];\n                            const instrument = channel.instruments[tone.instrumentIndex];\n                            let mod = Config.modCount - 1 - tone.pitches[0];\n                            if ((instrument.modulators[mod] == Config.modulators.dictionary[\"pre eq\"].index\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"post eq\"].index\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"song eq\"].index)\n                                && instrument.modFilterTypes[mod] != null && instrument.modFilterTypes[mod] > 0) {\n                                continue;\n                            }\n                            this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\n                        }\n                    }\n                }\n                for (let channelIndex = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\n                    const channel = song.channels[channelIndex];\n                    const channelState = this.channels[channelIndex];\n                    for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                        const instrumentState = channelState.instruments[instrumentIndex];\n                        for (let i = 0; i < instrumentState.activeModTones.count(); i++) {\n                            const tone = instrumentState.activeModTones.get(i);\n                            const channel = song.channels[channelIndex];\n                            const instrument = channel.instruments[tone.instrumentIndex];\n                            let mod = Config.modCount - 1 - tone.pitches[0];\n                            if ((instrument.modulators[mod] == Config.modulators.dictionary[\"pre eq\"].index\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"post eq\"].index\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"song eq\"].index)\n                                && instrument.modFilterTypes[mod] != null && instrument.modFilterTypes[mod] > 0) {\n                                this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\n                            }\n                        }\n                    }\n                }\n            }\n            if (this.wantToSkip) {\n                let barVisited = skippedBars.includes(this.bar);\n                if (barVisited && bufferIndex == firstSkippedBufferIndex) {\n                    this.pause();\n                    return;\n                }\n                if (firstSkippedBufferIndex == -1) {\n                    firstSkippedBufferIndex = bufferIndex;\n                }\n                if (!barVisited)\n                    skippedBars.push(this.bar);\n                this.wantToSkip = false;\n                this.skipBar();\n                continue;\n            }\n            this.computeSongState(samplesPerTick);\n            for (let channelIndex = 0; channelIndex < song.pitchChannelCount + song.noiseChannelCount; channelIndex++) {\n                const channel = song.channels[channelIndex];\n                const channelState = this.channels[channelIndex];\n                if (this.isAtStartOfTick) {\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong && !this.countInMetronome);\n                    this.determineLiveInputTones(song, channelIndex, samplesPerTick);\n                }\n                for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                    const instrument = channel.instruments[instrumentIndex];\n                    const instrumentState = channelState.instruments[instrumentIndex];\n                    if (this.isAtStartOfTick) {\n                        let tonesPlayedInThisInstrument = instrumentState.activeTones.count() + instrumentState.liveInputTones.count();\n                        for (let i = 0; i < instrumentState.releasedTones.count(); i++) {\n                            const tone = instrumentState.releasedTones.get(i);\n                            if (tone.ticksSinceReleased >= Math.abs(instrument.getFadeOutTicks())) {\n                                this.freeReleasedTone(instrumentState, i);\n                                i--;\n                                continue;\n                            }\n                            const shouldFadeOutFast = (tonesPlayedInThisInstrument >= Config.maximumTonesPerChannel);\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, true, shouldFadeOutFast);\n                            tonesPlayedInThisInstrument++;\n                        }\n                        if (instrumentState.awake) {\n                            if (!instrumentState.computed) {\n                                instrumentState.compute(this, instrument, samplesPerTick, Math.ceil(samplesPerTick), null, channelIndex, instrumentIndex);\n                            }\n                            instrumentState.computed = false;\n                            instrumentState.envelopeComputer.clearEnvelopes();\n                        }\n                    }\n                    for (let i = 0; i < instrumentState.activeTones.count(); i++) {\n                        const tone = instrumentState.activeTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n                    for (let i = 0; i < instrumentState.liveInputTones.count(); i++) {\n                        const tone = instrumentState.liveInputTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n                    for (let i = 0; i < instrumentState.releasedTones.count(); i++) {\n                        const tone = instrumentState.releasedTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n                    if (instrumentState.awake) {\n                        Synth.effectsSynth(this, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\n                    }\n                    const tickSampleCountdown = this.tickSampleCountdown;\n                    const startRatio = 1.0 - (tickSampleCountdown) / samplesPerTick;\n                    const endRatio = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\n                    const ticksIntoBar = (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\n                    const partTimeTickStart = (ticksIntoBar) / Config.ticksPerPart;\n                    const partTimeTickEnd = (ticksIntoBar + 1) / Config.ticksPerPart;\n                    const partTimeStart = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\n                    const partTimeEnd = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\n                    let useVibratoSpeed = instrument.vibratoSpeed;\n                    instrumentState.vibratoTime = instrumentState.nextVibratoTime;\n                    if (this.isModActive(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex)) {\n                        useVibratoSpeed = this.getModValue(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex);\n                    }\n                    if (useVibratoSpeed == 0) {\n                        instrumentState.vibratoTime = 0;\n                        instrumentState.nextVibratoTime = 0;\n                    }\n                    else {\n                        instrumentState.nextVibratoTime += useVibratoSpeed * 0.1 * (partTimeEnd - partTimeStart);\n                    }\n                }\n            }\n            if (this.enableMetronome || this.countInMetronome) {\n                if (this.part == 0) {\n                    if (!this.startedMetronome) {\n                        const midBeat = (song.beatsPerBar > 4 && (song.beatsPerBar % 2 == 0) && this.beat == song.beatsPerBar / 2);\n                        const periods = (this.beat == 0) ? 8 : midBeat ? 6 : 4;\n                        const hz = (this.beat == 0) ? 1600 : midBeat ? 1200 : 800;\n                        const amplitude = (this.beat == 0) ? 0.06 : midBeat ? 0.05 : 0.04;\n                        const samplesPerPeriod = this.samplesPerSecond / hz;\n                        const radiansPerSample = Math.PI * 2.0 / samplesPerPeriod;\n                        this.metronomeSamplesRemaining = Math.floor(samplesPerPeriod * periods);\n                        this.metronomeFilter = 2.0 * Math.cos(radiansPerSample);\n                        this.metronomeAmplitude = amplitude * Math.sin(radiansPerSample);\n                        this.metronomePrevAmplitude = 0.0;\n                        this.startedMetronome = true;\n                    }\n                    if (this.metronomeSamplesRemaining > 0) {\n                        const stopIndex = Math.min(runEnd, bufferIndex + this.metronomeSamplesRemaining);\n                        this.metronomeSamplesRemaining -= stopIndex - bufferIndex;\n                        for (let i = bufferIndex; i < stopIndex; i++) {\n                            outputDataL[i] += this.metronomeAmplitude;\n                            outputDataR[i] += this.metronomeAmplitude;\n                            const tempAmplitude = this.metronomeFilter * this.metronomeAmplitude - this.metronomePrevAmplitude;\n                            this.metronomePrevAmplitude = this.metronomeAmplitude;\n                            this.metronomeAmplitude = tempAmplitude;\n                        }\n                    }\n                }\n                else {\n                    this.startedMetronome = false;\n                }\n            }\n            for (let i = bufferIndex; i < runEnd; i++) {\n                {\n                    let filtersL = this.songEqFiltersL;\n                    let filtersR = this.songEqFiltersR;\n                    const filterCount = this.songEqFilterCount | 0;\n                    let initialFilterInput1L = +this.initialSongEqFilterInput1L;\n                    let initialFilterInput2L = +this.initialSongEqFilterInput2L;\n                    let initialFilterInput1R = +this.initialSongEqFilterInput1R;\n                    let initialFilterInput2R = +this.initialSongEqFilterInput2R;\n                    const applyFilters = Synth.applyFilters;\n                    let eqFilterVolume = +this.songEqFilterVolume;\n                    const eqFilterVolumeDelta = +this.songEqFilterVolumeDelta;\n                    const inputSampleL = outputDataL[i];\n                    let sampleL = inputSampleL;\n                    sampleL = applyFilters(sampleL, initialFilterInput1L, initialFilterInput2L, filterCount, filtersL);\n                    initialFilterInput2L = initialFilterInput1L;\n                    initialFilterInput1L = inputSampleL;\n                    sampleL *= eqFilterVolume;\n                    outputDataL[i] = sampleL;\n                    const inputSampleR = outputDataR[i];\n                    let sampleR = inputSampleR;\n                    sampleR = applyFilters(sampleR, initialFilterInput1R, initialFilterInput2R, filterCount, filtersR);\n                    initialFilterInput2R = initialFilterInput1R;\n                    initialFilterInput1R = inputSampleR;\n                    sampleR *= eqFilterVolume;\n                    outputDataR[i] = sampleR;\n                    eqFilterVolume += eqFilterVolumeDelta;\n                    this.sanitizeFilters(filtersL);\n                    if (!(initialFilterInput1L < 100) || !(initialFilterInput2L < 100)) {\n                        initialFilterInput1L = 0.0;\n                        initialFilterInput2L = 0.0;\n                    }\n                    if (Math.abs(initialFilterInput1L) < epsilon)\n                        initialFilterInput1L = 0.0;\n                    if (Math.abs(initialFilterInput2L) < epsilon)\n                        initialFilterInput2L = 0.0;\n                    this.initialSongEqFilterInput1L = initialFilterInput1L;\n                    this.initialSongEqFilterInput2L = initialFilterInput2L;\n                    this.sanitizeFilters(filtersR);\n                    if (!(initialFilterInput1R < 100) || !(initialFilterInput2R < 100)) {\n                        initialFilterInput1R = 0.0;\n                        initialFilterInput2R = 0.0;\n                    }\n                    if (Math.abs(initialFilterInput1R) < epsilon)\n                        initialFilterInput1R = 0.0;\n                    if (Math.abs(initialFilterInput2R) < epsilon)\n                        initialFilterInput2R = 0.0;\n                    this.initialSongEqFilterInput1R = initialFilterInput1R;\n                    this.initialSongEqFilterInput2R = initialFilterInput2R;\n                }\n                const sampleL = outputDataL[i] * song.masterGain * song.masterGain;\n                const sampleR = outputDataR[i] * song.masterGain * song.masterGain;\n                const absL = sampleL < 0.0 ? -sampleL : sampleL;\n                const absR = sampleR < 0.0 ? -sampleR : sampleR;\n                const abs = absL > absR ? absL : absR;\n                this.song.inVolumeCap = (this.song.inVolumeCap > abs ? this.song.inVolumeCap : abs);\n                const limitRange = (+(abs > song.compressionThreshold)) + (+(abs > song.limitThreshold));\n                const limitTarget = (+(limitRange == 0)) * (((abs + 1 - song.compressionThreshold) * 0.8 + 0.25) * song.compressionRatio + 1.05 * (1 - song.compressionRatio))\n                    + (+(limitRange == 1)) * (1.05)\n                    + (+(limitRange == 2)) * (1.05 * ((abs + 1 - song.limitThreshold) * song.limitRatio + (1 - song.limitThreshold)));\n                limit += ((limitTarget - limit) * (limit < limitTarget ? limitRise : limitDecay));\n                const limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\n                outputDataL[i] = sampleL * limitedVolume;\n                outputDataR[i] = sampleR * limitedVolume;\n                this.song.outVolumeCap = (this.song.outVolumeCap > abs * limitedVolume ? this.song.outVolumeCap : abs * limitedVolume);\n                this.song.outVolumeCapL = (this.song.outVolumeCapL > absL * limitedVolume ? this.song.outVolumeCapL : absL * limitedVolume);\n                this.song.outVolumeCapR = (this.song.outVolumeCapR > absR * limitedVolume ? this.song.outVolumeCapR : absR * limitedVolume);\n            }\n            bufferIndex += runLength;\n            this.isAtStartOfTick = false;\n            this.tickSampleCountdown -= runLength;\n            if (this.tickSampleCountdown <= 0) {\n                this.isAtStartOfTick = true;\n                for (const channelState of this.channels) {\n                    for (const instrumentState of channelState.instruments) {\n                        for (let i = 0; i < instrumentState.releasedTones.count(); i++) {\n                            const tone = instrumentState.releasedTones.get(i);\n                            if (tone.isOnLastTick) {\n                                this.freeReleasedTone(instrumentState, i);\n                                i--;\n                            }\n                            else {\n                                tone.ticksSinceReleased++;\n                            }\n                        }\n                        if (instrumentState.deactivateAfterThisTick) {\n                            instrumentState.deactivate();\n                        }\n                        instrumentState.tonesAddedInThisTick = false;\n                    }\n                }\n                const ticksIntoBar = this.getTicksIntoBar();\n                const tickTimeStart = ticksIntoBar;\n                const secondsPerTick = samplesPerTick / this.samplesPerSecond;\n                const currentPart = this.getCurrentPart();\n                for (let channel = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrumentIdx = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\n                        let instrument = this.song.channels[channel].instruments[instrumentIdx];\n                        let instrumentState = this.channels[channel].instruments[instrumentIdx];\n                        const envelopeComputer = instrumentState.envelopeComputer;\n                        const envelopeSpeeds = [];\n                        for (let i = 0; i < Config.maxEnvelopeCount; i++) {\n                            envelopeSpeeds[i] = 0;\n                        }\n                        for (let envelopeIndex = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n                            let useEnvelopeSpeed = instrument.envelopeSpeed;\n                            let perEnvelopeSpeed = instrument.envelopes[envelopeIndex].perEnvelopeSpeed;\n                            if (this.isModActive(Config.modulators.dictionary[\"individual envelope speed\"].index, channel, instrumentIdx) && instrument.envelopes[envelopeIndex].tempEnvelopeSpeed != null) {\n                                perEnvelopeSpeed = instrument.envelopes[envelopeIndex].tempEnvelopeSpeed;\n                            }\n                            if (this.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channel, instrumentIdx)) {\n                                useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, this.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channel, instrumentIdx, false)));\n                                if (Number.isInteger(useEnvelopeSpeed)) {\n                                    instrumentState.envelopeTime[envelopeIndex] += Config.arpSpeedScale[useEnvelopeSpeed] * perEnvelopeSpeed;\n                                }\n                                else {\n                                    instrumentState.envelopeTime[envelopeIndex] += ((1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)]) * perEnvelopeSpeed;\n                                }\n                            }\n                            else {\n                                instrumentState.envelopeTime[envelopeIndex] += Config.arpSpeedScale[useEnvelopeSpeed] * perEnvelopeSpeed;\n                            }\n                        }\n                        if (instrumentState.activeTones.count() > 0) {\n                            const tone = instrumentState.activeTones.get(0);\n                            envelopeComputer.computeEnvelopes(instrument, currentPart, instrumentState.envelopeTime, tickTimeStart, secondsPerTick, tone, envelopeSpeeds, instrumentState, this, channel, instrumentIdx);\n                        }\n                        const envelopeStarts = envelopeComputer.envelopeStarts;\n                        const arpEnvelopeStart = envelopeStarts[49];\n                        let useArpeggioSpeed = instrument.arpeggioSpeed;\n                        if (this.isModActive(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx)) {\n                            useArpeggioSpeed = clamp(0, Config.arpSpeedScale.length, arpEnvelopeStart * this.getModValue(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx, false));\n                            if (Number.isInteger(useArpeggioSpeed)) {\n                                instrumentState.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\n                            }\n                            else {\n                                instrumentState.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\n                            }\n                        }\n                        else {\n                            useArpeggioSpeed = clamp(0, Config.arpSpeedScale.length, arpEnvelopeStart * useArpeggioSpeed);\n                            if (Number.isInteger(useArpeggioSpeed)) {\n                                instrumentState.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\n                            }\n                            else {\n                                instrumentState.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\n                            }\n                        }\n                        envelopeComputer.clearEnvelopes();\n                    }\n                }\n                for (let channel = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrumentIdx = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\n                        let instrument = this.song.channels[channel].instruments[instrumentIdx];\n                        for (let effectIdx = 0; effectIdx < instrument.effects.length; effectIdx++) {\n                            let effect = instrument.effects[effectIdx];\n                            if (effect.tmpEqFilterEnd != null) {\n                                effect.tmpEqFilterStart = effect.tmpEqFilterEnd;\n                            }\n                            else {\n                                effect.tmpEqFilterStart = effect.eqFilter;\n                            }\n                        }\n                        if (instrument.tmpNoteFilterEnd != null) {\n                            instrument.tmpNoteFilterStart = instrument.tmpNoteFilterEnd;\n                        }\n                        else {\n                            instrument.tmpNoteFilterStart = instrument.noteFilter;\n                        }\n                    }\n                }\n                if (song.tmpEqFilterEnd != null) {\n                    song.tmpEqFilterStart = song.tmpEqFilterEnd;\n                }\n                else {\n                    song.tmpEqFilterStart = song.eqFilter;\n                }\n                this.tick++;\n                this.tickSampleCountdown += samplesPerTick;\n                if (this.tick == Config.ticksPerPart) {\n                    this.tick = 0;\n                    this.part++;\n                    this.liveInputDuration--;\n                    this.liveBassInputDuration--;\n                    for (let i = 0; i < this.heldMods.length; i++) {\n                        this.heldMods[i].holdFor--;\n                        if (this.heldMods[i].holdFor <= 0) {\n                            this.heldMods.splice(i, 1);\n                        }\n                    }\n                    if (this.part == Config.partsPerBeat) {\n                        this.part = 0;\n                        if (playSong) {\n                            this.beat++;\n                            if (this.beat == song.beatsPerBar) {\n                                this.beat = 0;\n                                if (this.countInMetronome) {\n                                    this.countInMetronome = false;\n                                }\n                                else {\n                                    this.prevBar = this.bar;\n                                    this.bar = this.getNextBar();\n                                    if (this.bar <= this.prevBar && this.loopRepeatCount > 0)\n                                        this.loopRepeatCount--;\n                                    if (this.bar >= song.barCount) {\n                                        this.bar = 0;\n                                        if (this.loopRepeatCount != -1) {\n                                            ended = true;\n                                            this.resetEffects();\n                                            this.pause();\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            for (let setting = 0; setting < Config.modulators.length; setting++) {\n                if (this.nextModValues != null && this.nextModValues[setting] != null)\n                    this.modValues[setting] = this.nextModValues[setting];\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\n                samplesPerTick = this.getSamplesPerTick();\n                this.tickSampleCountdown = Math.min(this.tickSampleCountdown, samplesPerTick);\n            }\n            for (let channelIndex = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\n                for (let instrumentIndex = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrumentState = this.channels[channelIndex].instruments[instrumentIndex];\n                    const instrument = this.song.channels[channelIndex].instruments[instrumentIndex];\n                    instrumentState.nextVibratoTime = (instrumentState.nextVibratoTime % (Config.vibratoTypes[instrument.vibratoType].period / (Config.ticksPerPart * samplesPerTick / this.samplesPerSecond)));\n                    instrumentState.arpTime = (instrumentState.arpTime % (2520 * Config.ticksPerArpeggio));\n                    for (let envelopeIndex = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n                        instrumentState.envelopeTime[envelopeIndex] = (instrumentState.envelopeTime[envelopeIndex] % (Config.partsPerBeat * Config.ticksPerPart * this.song.beatsPerBar));\n                    }\n                }\n            }\n            const maxInstrumentsPerChannel = this.song.getMaxInstrumentsPerChannel();\n            for (let setting = 0; setting < Config.modulators.length; setting++) {\n                for (let channel = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrument = 0; instrument < maxInstrumentsPerChannel; instrument++) {\n                        if (this.nextModInsValues != null && this.nextModInsValues[channel] != null && this.nextModInsValues[channel][instrument] != null && this.nextModInsValues[channel][instrument][setting] != null) {\n                            this.modInsValues[channel][instrument][setting] = this.nextModInsValues[channel][instrument][setting];\n                        }\n                    }\n                }\n            }\n        }\n        if (!Number.isFinite(limit) || Math.abs(limit) < epsilon)\n            limit = 0.0;\n        this.limit = limit;\n        if (playSong && !this.countInMetronome) {\n            this.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / song.beatsPerBar + this.bar;\n        }\n    }\n    freeTone(tone) {\n        this.tonePool.pushBack(tone);\n    }\n    newTone() {\n        if (this.tonePool.count() > 0) {\n            const tone = this.tonePool.popBack();\n            tone.freshlyAllocated = true;\n            return tone;\n        }\n        return new Tone();\n    }\n    releaseTone(instrumentState, tone) {\n        instrumentState.releasedTones.pushFront(tone);\n        tone.atNoteStart = false;\n        tone.passedEndOfNote = true;\n    }\n    freeReleasedTone(instrumentState, toneIndex) {\n        this.freeTone(instrumentState.releasedTones.get(toneIndex));\n        instrumentState.releasedTones.remove(toneIndex);\n    }\n    freeAllTones() {\n        for (const channelState of this.channels) {\n            for (const instrumentState of channelState.instruments) {\n                while (instrumentState.activeTones.count() > 0)\n                    this.freeTone(instrumentState.activeTones.popBack());\n                while (instrumentState.activeModTones.count() > 0)\n                    this.freeTone(instrumentState.activeModTones.popBack());\n                while (instrumentState.releasedTones.count() > 0)\n                    this.freeTone(instrumentState.releasedTones.popBack());\n                while (instrumentState.liveInputTones.count() > 0)\n                    this.freeTone(instrumentState.liveInputTones.popBack());\n            }\n        }\n    }\n    determineLiveInputTones(song, channelIndex, samplesPerTick) {\n        const channel = song.channels[channelIndex];\n        const channelState = this.channels[channelIndex];\n        const pitches = this.liveInputPitches;\n        const bassPitches = this.liveBassInputPitches;\n        if (this.liveInputPitches.length > 0 || this.liveBassInputPitches.length > 0) {\n            this.computeLatestModValues();\n        }\n        for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n            const instrumentState = channelState.instruments[instrumentIndex];\n            const toneList = instrumentState.liveInputTones;\n            let toneCount = 0;\n            if (this.liveInputDuration > 0 && (channelIndex == this.liveInputChannel) && pitches.length > 0 && this.liveInputInstruments.indexOf(instrumentIndex) != -1) {\n                const instrument = channel.instruments[instrumentIndex];\n                if (instrument.getChord().singleTone) {\n                    let tone;\n                    if (toneList.count() <= toneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    }\n                    else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\n                        tone = this.newTone();\n                        toneList.set(toneCount, tone);\n                    }\n                    else {\n                        tone = toneList.get(toneCount);\n                    }\n                    toneCount++;\n                    for (let i = 0; i < pitches.length; i++) {\n                        tone.pitches[i] = pitches[i];\n                    }\n                    tone.pitchCount = pitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = instrumentIndex;\n                    tone.note = tone.prevNote = tone.nextNote = null;\n                    tone.atNoteStart = this.liveInputStarted;\n                    tone.forceContinueAtStart = false;\n                    tone.forceContinueAtEnd = false;\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                }\n                else {\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, pitches);\n                    for (let i = 0; i < pitches.length; i++) {\n                        let tone;\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\n                            tone = this.tempMatchedPitchTones[toneCount];\n                            this.tempMatchedPitchTones[toneCount] = null;\n                            if (tone.pitchCount != 1 || tone.pitches[0] != pitches[i]) {\n                                this.releaseTone(instrumentState, tone);\n                                tone = this.newTone();\n                            }\n                            toneList.pushBack(tone);\n                        }\n                        else {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        }\n                        toneCount++;\n                        tone.pitches[0] = pitches[i];\n                        tone.pitchCount = 1;\n                        tone.chordSize = pitches.length;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = tone.prevNote = tone.nextNote = null;\n                        tone.atNoteStart = this.liveInputStarted;\n                        tone.forceContinueAtStart = false;\n                        tone.forceContinueAtEnd = false;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    }\n                }\n            }\n            if (this.liveBassInputDuration > 0 && (channelIndex == this.liveBassInputChannel) && bassPitches.length > 0 && this.liveBassInputInstruments.indexOf(instrumentIndex) != -1) {\n                const instrument = channel.instruments[instrumentIndex];\n                if (instrument.getChord().singleTone) {\n                    let tone;\n                    if (toneList.count() <= toneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    }\n                    else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\n                        tone = this.newTone();\n                        toneList.set(toneCount, tone);\n                    }\n                    else {\n                        tone = toneList.get(toneCount);\n                    }\n                    toneCount++;\n                    for (let i = 0; i < bassPitches.length; i++) {\n                        tone.pitches[i] = bassPitches[i];\n                    }\n                    tone.pitchCount = bassPitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = instrumentIndex;\n                    tone.note = tone.prevNote = tone.nextNote = null;\n                    tone.atNoteStart = this.liveBassInputStarted;\n                    tone.forceContinueAtStart = false;\n                    tone.forceContinueAtEnd = false;\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                }\n                else {\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, bassPitches);\n                    for (let i = 0; i < bassPitches.length; i++) {\n                        let tone;\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\n                            tone = this.tempMatchedPitchTones[toneCount];\n                            this.tempMatchedPitchTones[toneCount] = null;\n                            if (tone.pitchCount != 1 || tone.pitches[0] != bassPitches[i]) {\n                                this.releaseTone(instrumentState, tone);\n                                tone = this.newTone();\n                            }\n                            toneList.pushBack(tone);\n                        }\n                        else {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        }\n                        toneCount++;\n                        tone.pitches[0] = bassPitches[i];\n                        tone.pitchCount = 1;\n                        tone.chordSize = bassPitches.length;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = tone.prevNote = tone.nextNote = null;\n                        tone.atNoteStart = this.liveBassInputStarted;\n                        tone.forceContinueAtStart = false;\n                        tone.forceContinueAtEnd = false;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    }\n                }\n            }\n            while (toneList.count() > toneCount) {\n                this.releaseTone(instrumentState, toneList.popBack());\n            }\n            this.clearTempMatchedPitchTones(toneCount, instrumentState);\n        }\n        this.liveInputStarted = false;\n        this.liveBassInputStarted = false;\n    }\n    adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern, otherPattern, instrumentIndex, transition, chord, note, otherNote, forceContinue) {\n        if (song.patternInstruments && otherPattern.instruments.indexOf(instrumentIndex) == -1) {\n            if (pattern.instruments.length > 1 || otherPattern.instruments.length > 1) {\n                return null;\n            }\n            const otherInstrument = channel.instruments[otherPattern.instruments[0]];\n            if (forceContinue) {\n                return otherInstrument.getChord();\n            }\n            const otherTransition = otherInstrument.getTransition();\n            if (transition.includeAdjacentPatterns && otherTransition.includeAdjacentPatterns && otherTransition.slides == transition.slides) {\n                return otherInstrument.getChord();\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return (forceContinue || transition.includeAdjacentPatterns) ? chord : null;\n        }\n    }\n    static adjacentNotesHaveMatchingPitches(firstNote, secondNote) {\n        if (firstNote.pitches.length != secondNote.pitches.length)\n            return false;\n        const firstNoteInterval = firstNote.pins[firstNote.pins.length - 1].interval;\n        for (const pitch of firstNote.pitches) {\n            if (secondNote.pitches.indexOf(pitch + firstNoteInterval) == -1)\n                return false;\n        }\n        return true;\n    }\n    moveTonesIntoOrderedTempMatchedList(toneList, notePitches) {\n        for (let i = 0; i < toneList.count(); i++) {\n            const tone = toneList.get(i);\n            const pitch = tone.pitches[0] + tone.lastInterval;\n            for (let j = 0; j < notePitches.length; j++) {\n                if (notePitches[j] == pitch) {\n                    this.tempMatchedPitchTones[j] = tone;\n                    toneList.remove(i);\n                    i--;\n                    break;\n                }\n            }\n        }\n        while (toneList.count() > 0) {\n            const tone = toneList.popFront();\n            for (let j = 0; j < this.tempMatchedPitchTones.length; j++) {\n                if (this.tempMatchedPitchTones[j] == null) {\n                    this.tempMatchedPitchTones[j] = tone;\n                    break;\n                }\n            }\n        }\n    }\n    determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong) {\n        const channel = song.channels[channelIndex];\n        const channelState = this.channels[channelIndex];\n        const pattern = song.getPattern(channelIndex, this.bar);\n        const currentPart = this.getCurrentPart();\n        const currentTick = this.tick + Config.ticksPerPart * currentPart;\n        if (playSong && song.getChannelIsMod(channelIndex)) {\n            let notes = [];\n            let prevNotes = [];\n            let nextNotes = [];\n            let fillCount = Config.modCount;\n            while (fillCount--) {\n                notes.push(null);\n                prevNotes.push(null);\n                nextNotes.push(null);\n            }\n            if (pattern != null && !channel.muted) {\n                for (let i = 0; i < pattern.notes.length; i++) {\n                    if (pattern.notes[i].end <= currentPart) {\n                        if (prevNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].end > prevNotes[pattern.notes[i].pitches[0]].start) {\n                            prevNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                        }\n                    }\n                    else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\n                        notes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                    }\n                    else if (pattern.notes[i].start > currentPart) {\n                        if (nextNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].start < nextNotes[pattern.notes[i].pitches[0]].start) {\n                            nextNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                        }\n                    }\n                }\n            }\n            let modToneCount = 0;\n            const newInstrumentIndex = (song.patternInstruments && (pattern != null)) ? pattern.instruments[0] : 0;\n            const instrumentState = channelState.instruments[newInstrumentIndex];\n            const toneList = instrumentState.activeModTones;\n            for (let mod = 0; mod < Config.modCount; mod++) {\n                if (notes[mod] != null) {\n                    if (prevNotes[mod] != null && prevNotes[mod].end != notes[mod].start)\n                        prevNotes[mod] = null;\n                    if (nextNotes[mod] != null && nextNotes[mod].start != notes[mod].end)\n                        nextNotes[mod] = null;\n                }\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\n                    const sourceInstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\n                    const destInstrumentState = channelState.instruments[newInstrumentIndex];\n                    while (sourceInstrumentState.activeModTones.count() > 0) {\n                        destInstrumentState.activeModTones.pushFront(sourceInstrumentState.activeModTones.popBack());\n                    }\n                }\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\n                if (notes[mod] != null) {\n                    let prevNoteForThisInstrument = prevNotes[mod];\n                    let nextNoteForThisInstrument = nextNotes[mod];\n                    let forceContinueAtStart = false;\n                    let forceContinueAtEnd = false;\n                    const atNoteStart = (Config.ticksPerPart * notes[mod].start == currentTick) && this.isAtStartOfTick;\n                    let tone;\n                    if (toneList.count() <= modToneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    }\n                    else if (atNoteStart && (prevNoteForThisInstrument == null)) {\n                        const oldTone = toneList.get(modToneCount);\n                        if (oldTone.isOnLastTick) {\n                            this.freeTone(oldTone);\n                        }\n                        else {\n                            this.releaseTone(instrumentState, oldTone);\n                        }\n                        tone = this.newTone();\n                        toneList.set(modToneCount, tone);\n                    }\n                    else {\n                        tone = toneList.get(modToneCount);\n                    }\n                    modToneCount++;\n                    for (let i = 0; i < notes[mod].pitches.length; i++) {\n                        tone.pitches[i] = notes[mod].pitches[i];\n                    }\n                    tone.pitchCount = notes[mod].pitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = newInstrumentIndex;\n                    tone.note = notes[mod];\n                    tone.noteStartPart = notes[mod].start;\n                    tone.noteEndPart = notes[mod].end;\n                    tone.prevNote = prevNoteForThisInstrument;\n                    tone.nextNote = nextNoteForThisInstrument;\n                    tone.prevNotePitchIndex = 0;\n                    tone.nextNotePitchIndex = 0;\n                    tone.atNoteStart = atNoteStart;\n                    tone.passedEndOfNote = false;\n                    tone.forceContinueAtStart = forceContinueAtStart;\n                    tone.forceContinueAtEnd = forceContinueAtEnd;\n                }\n            }\n            while (toneList.count() > modToneCount) {\n                const tone = toneList.popBack();\n                const channel = song.channels[channelIndex];\n                if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\n                    const instrumentState = this.channels[channelIndex].instruments[tone.instrumentIndex];\n                    this.releaseTone(instrumentState, tone);\n                }\n                else {\n                    this.freeTone(tone);\n                }\n            }\n        }\n        else if (!song.getChannelIsMod(channelIndex)) {\n            let note = null;\n            let prevNote = null;\n            let nextNote = null;\n            if (playSong && pattern != null && !channel.muted && (!this.isRecording || this.liveInputChannel != channelIndex)) {\n                for (let i = 0; i < pattern.notes.length; i++) {\n                    if (pattern.notes[i].end <= currentPart) {\n                        prevNote = pattern.notes[i];\n                    }\n                    else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\n                        note = pattern.notes[i];\n                    }\n                    else if (pattern.notes[i].start > currentPart) {\n                        nextNote = pattern.notes[i];\n                        break;\n                    }\n                }\n                if (note != null) {\n                    if (prevNote != null && prevNote.end != note.start)\n                        prevNote = null;\n                    if (nextNote != null && nextNote.start != note.end)\n                        nextNote = null;\n                }\n            }\n            if (pattern != null && (!song.layeredInstruments || channel.instruments.length == 1 || (song.patternInstruments && pattern.instruments.length == 1))) {\n                const newInstrumentIndex = song.patternInstruments ? pattern.instruments[0] : 0;\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\n                    const sourceInstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\n                    const destInstrumentState = channelState.instruments[newInstrumentIndex];\n                    while (sourceInstrumentState.activeTones.count() > 0) {\n                        destInstrumentState.activeTones.pushFront(sourceInstrumentState.activeTones.popBack());\n                    }\n                }\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\n            }\n            else {\n                channelState.singleSeamlessInstrument = null;\n            }\n            for (let instrumentIndex = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                const instrumentState = channelState.instruments[instrumentIndex];\n                const toneList = instrumentState.activeTones;\n                let toneCount = 0;\n                if ((note != null) && (!song.patternInstruments || (pattern.instruments.indexOf(instrumentIndex) != -1))) {\n                    const instrument = channel.instruments[instrumentIndex];\n                    let prevNoteForThisInstrument = prevNote;\n                    let nextNoteForThisInstrument = nextNote;\n                    const partsPerBar = Config.partsPerBeat * song.beatsPerBar;\n                    const transition = instrument.getTransition();\n                    const chord = instrument.getChord();\n                    let forceContinueAtStart = false;\n                    let forceContinueAtEnd = false;\n                    let tonesInPrevNote = 0;\n                    let tonesInNextNote = 0;\n                    if (note.start == 0) {\n                        let prevPattern = (this.prevBar == null) ? null : song.getPattern(channelIndex, this.prevBar);\n                        if (prevPattern != null) {\n                            const lastNote = (prevPattern.notes.length <= 0) ? null : prevPattern.notes[prevPattern.notes.length - 1];\n                            if (lastNote != null && lastNote.end == partsPerBar) {\n                                const patternForcesContinueAtStart = note.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(lastNote, note);\n                                const chordOfCompatibleInstrument = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern, prevPattern, instrumentIndex, transition, chord, note, lastNote, patternForcesContinueAtStart);\n                                if (chordOfCompatibleInstrument != null) {\n                                    prevNoteForThisInstrument = lastNote;\n                                    tonesInPrevNote = chordOfCompatibleInstrument.singleTone ? 1 : prevNoteForThisInstrument.pitches.length;\n                                    forceContinueAtStart = patternForcesContinueAtStart;\n                                }\n                            }\n                        }\n                    }\n                    else if (prevNoteForThisInstrument != null) {\n                        tonesInPrevNote = chord.singleTone ? 1 : prevNoteForThisInstrument.pitches.length;\n                    }\n                    if (note.end == partsPerBar) {\n                        let nextPattern = (this.nextBar == null) ? null : song.getPattern(channelIndex, this.nextBar);\n                        if (nextPattern != null) {\n                            const firstNote = (nextPattern.notes.length <= 0) ? null : nextPattern.notes[0];\n                            if (firstNote != null && firstNote.start == 0) {\n                                const nextPatternForcesContinueAtStart = firstNote.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(note, firstNote);\n                                const chordOfCompatibleInstrument = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern, nextPattern, instrumentIndex, transition, chord, note, firstNote, nextPatternForcesContinueAtStart);\n                                if (chordOfCompatibleInstrument != null) {\n                                    nextNoteForThisInstrument = firstNote;\n                                    tonesInNextNote = chordOfCompatibleInstrument.singleTone ? 1 : nextNoteForThisInstrument.pitches.length;\n                                    forceContinueAtEnd = nextPatternForcesContinueAtStart;\n                                }\n                            }\n                        }\n                    }\n                    else if (nextNoteForThisInstrument != null) {\n                        tonesInNextNote = chord.singleTone ? 1 : nextNoteForThisInstrument.pitches.length;\n                    }\n                    if (chord.singleTone) {\n                        const atNoteStart = (Config.ticksPerPart * note.start == currentTick);\n                        let tone;\n                        if (toneList.count() <= toneCount) {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        }\n                        else if (atNoteStart && ((!(transition.isSeamless || instrument.clicklessTransition) && !forceContinueAtStart) || prevNoteForThisInstrument == null)) {\n                            const oldTone = toneList.get(toneCount);\n                            if (oldTone.isOnLastTick) {\n                                this.freeTone(oldTone);\n                            }\n                            else {\n                                this.releaseTone(instrumentState, oldTone);\n                            }\n                            tone = this.newTone();\n                            toneList.set(toneCount, tone);\n                        }\n                        else {\n                            tone = toneList.get(toneCount);\n                        }\n                        toneCount++;\n                        for (let i = 0; i < note.pitches.length; i++) {\n                            tone.pitches[i] = note.pitches[i];\n                        }\n                        tone.pitchCount = note.pitches.length;\n                        tone.chordSize = 1;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = note;\n                        tone.noteStartPart = note.start;\n                        tone.noteEndPart = note.end;\n                        tone.prevNote = prevNoteForThisInstrument;\n                        tone.nextNote = nextNoteForThisInstrument;\n                        tone.prevNotePitchIndex = 0;\n                        tone.nextNotePitchIndex = 0;\n                        tone.atNoteStart = atNoteStart;\n                        tone.passedEndOfNote = false;\n                        tone.forceContinueAtStart = forceContinueAtStart;\n                        tone.forceContinueAtEnd = forceContinueAtEnd;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    }\n                    else {\n                        const transition = instrument.getTransition();\n                        if (((transition.isSeamless && !transition.slides && chord.strumParts == 0) || forceContinueAtStart) && (Config.ticksPerPart * note.start == currentTick) && prevNoteForThisInstrument != null) {\n                            this.moveTonesIntoOrderedTempMatchedList(toneList, note.pitches);\n                        }\n                        let strumOffsetParts = 0;\n                        for (let i = 0; i < note.pitches.length; i++) {\n                            let prevNoteForThisTone = (tonesInPrevNote > i) ? prevNoteForThisInstrument : null;\n                            let noteForThisTone = note;\n                            let nextNoteForThisTone = (tonesInNextNote > i) ? nextNoteForThisInstrument : null;\n                            let noteStartPart = noteForThisTone.start + strumOffsetParts;\n                            let passedEndOfNote = false;\n                            if (noteStartPart > currentPart) {\n                                if (toneList.count() > i && (transition.isSeamless || forceContinueAtStart) && prevNoteForThisTone != null) {\n                                    nextNoteForThisTone = noteForThisTone;\n                                    noteForThisTone = prevNoteForThisTone;\n                                    prevNoteForThisTone = null;\n                                    noteStartPart = noteForThisTone.start + strumOffsetParts;\n                                    passedEndOfNote = true;\n                                }\n                                else {\n                                    break;\n                                }\n                            }\n                            let noteEndPart = noteForThisTone.end;\n                            if ((transition.isSeamless || forceContinueAtStart) && nextNoteForThisTone != null) {\n                                noteEndPart = Math.min(Config.partsPerBeat * this.song.beatsPerBar, noteEndPart + strumOffsetParts);\n                            }\n                            if ((!transition.continues && !forceContinueAtStart) || prevNoteForThisTone == null) {\n                                strumOffsetParts += chord.strumParts;\n                            }\n                            const atNoteStart = (Config.ticksPerPart * noteStartPart == currentTick);\n                            let tone;\n                            if (this.tempMatchedPitchTones[toneCount] != null) {\n                                tone = this.tempMatchedPitchTones[toneCount];\n                                this.tempMatchedPitchTones[toneCount] = null;\n                                toneList.pushBack(tone);\n                            }\n                            else if (toneList.count() <= toneCount) {\n                                tone = this.newTone();\n                                toneList.pushBack(tone);\n                            }\n                            else if (atNoteStart && ((!transition.isSeamless && !forceContinueAtStart) || prevNoteForThisTone == null)) {\n                                const oldTone = toneList.get(toneCount);\n                                if (oldTone.isOnLastTick) {\n                                    this.freeTone(oldTone);\n                                }\n                                else {\n                                    this.releaseTone(instrumentState, oldTone);\n                                }\n                                tone = this.newTone();\n                                toneList.set(toneCount, tone);\n                            }\n                            else {\n                                tone = toneList.get(toneCount);\n                            }\n                            toneCount++;\n                            tone.pitches[0] = noteForThisTone.pitches[i];\n                            tone.pitchCount = 1;\n                            tone.chordSize = noteForThisTone.pitches.length;\n                            tone.instrumentIndex = instrumentIndex;\n                            tone.note = noteForThisTone;\n                            tone.noteStartPart = noteStartPart;\n                            tone.noteEndPart = noteEndPart;\n                            tone.prevNote = prevNoteForThisTone;\n                            tone.nextNote = nextNoteForThisTone;\n                            tone.prevNotePitchIndex = i;\n                            tone.nextNotePitchIndex = i;\n                            tone.atNoteStart = atNoteStart;\n                            tone.passedEndOfNote = passedEndOfNote;\n                            tone.forceContinueAtStart = forceContinueAtStart && prevNoteForThisTone != null;\n                            tone.forceContinueAtEnd = forceContinueAtEnd && nextNoteForThisTone != null;\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                        }\n                    }\n                    if (transition.continues && (toneList.count() <= 0) || (note.pitches.length <= 0))\n                        instrumentState.envelopeComputer.reset();\n                }\n                while (toneList.count() > toneCount) {\n                    const tone = toneList.popBack();\n                    const channel = song.channels[channelIndex];\n                    if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\n                        const instrumentState = channelState.instruments[tone.instrumentIndex];\n                        this.releaseTone(instrumentState, tone);\n                    }\n                    else {\n                        this.freeTone(tone);\n                    }\n                }\n                this.clearTempMatchedPitchTones(toneCount, instrumentState);\n            }\n        }\n    }\n    clearTempMatchedPitchTones(toneCount, instrumentState) {\n        for (let i = toneCount; i < this.tempMatchedPitchTones.length; i++) {\n            const oldTone = this.tempMatchedPitchTones[i];\n            if (oldTone != null) {\n                if (oldTone.isOnLastTick) {\n                    this.freeTone(oldTone);\n                }\n                else {\n                    this.releaseTone(instrumentState, oldTone);\n                }\n                this.tempMatchedPitchTones[i] = null;\n            }\n        }\n    }\n    playTone(channelIndex, bufferIndex, runLength, tone) {\n        const channelState = this.channels[channelIndex];\n        const instrumentState = channelState.instruments[tone.instrumentIndex];\n        if (instrumentState.synthesizer != null)\n            instrumentState.synthesizer(this, bufferIndex, runLength, tone, instrumentState);\n        tone.envelopeComputer.clearEnvelopes();\n        instrumentState.envelopeComputer.clearEnvelopes();\n    }\n    playModTone(song, channelIndex, samplesPerTick, bufferIndex, roundedSamplesPerTick, tone, released, shouldFadeOutFast) {\n        const channel = song.channels[channelIndex];\n        const instrument = channel.instruments[tone.instrumentIndex];\n        if (tone.note != null) {\n            const ticksIntoBar = this.getTicksIntoBar();\n            const partTimeTickStart = (ticksIntoBar) / Config.ticksPerPart;\n            const partTimeTickEnd = (ticksIntoBar + 1) / Config.ticksPerPart;\n            const tickSampleCountdown = this.tickSampleCountdown;\n            const startRatio = 1.0 - (tickSampleCountdown) / samplesPerTick;\n            const endRatio = 1.0 - (tickSampleCountdown - roundedSamplesPerTick) / samplesPerTick;\n            const partTimeStart = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\n            const partTimeEnd = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\n            const tickTimeStart = Config.ticksPerPart * partTimeStart;\n            const tickTimeEnd = Config.ticksPerPart * partTimeEnd;\n            const endPinIndex = tone.note.getEndPinIndex(this.getCurrentPart());\n            const startPin = tone.note.pins[endPinIndex - 1];\n            const endPin = tone.note.pins[endPinIndex];\n            const startPinTick = (tone.note.start + startPin.time) * Config.ticksPerPart;\n            const endPinTick = (tone.note.start + endPin.time) * Config.ticksPerPart;\n            const ratioStart = (tickTimeStart - startPinTick) / (endPinTick - startPinTick);\n            const ratioEnd = (tickTimeEnd - startPinTick) / (endPinTick - startPinTick);\n            tone.expression = startPin.size + (endPin.size - startPin.size) * ratioStart;\n            tone.expressionDelta = (startPin.size + (endPin.size - startPin.size) * ratioEnd) - tone.expression;\n            Synth.modSynth(this, bufferIndex, roundedSamplesPerTick, tone, instrument);\n        }\n    }\n    static computeChordExpression(chordSize) {\n        return 1.0 / ((chordSize - 1) * 0.25 + 1.0);\n    }\n    computeTone(song, channelIndex, samplesPerTick, tone, released, shouldFadeOutFast) {\n        const roundedSamplesPerTick = Math.ceil(samplesPerTick);\n        const channel = song.channels[channelIndex];\n        const channelState = this.channels[channelIndex];\n        const instrument = channel.instruments[tone.instrumentIndex];\n        const instrumentState = channelState.instruments[tone.instrumentIndex];\n        instrumentState.awake = true;\n        instrumentState.tonesAddedInThisTick = true;\n        if (!instrumentState.computed) {\n            instrumentState.compute(this, instrument, samplesPerTick, roundedSamplesPerTick, tone, channelIndex, tone.instrumentIndex);\n        }\n        const transition = instrument.getTransition();\n        const chord = instrument.getChord();\n        const chordExpression = chord.singleTone ? 1.0 : Synth.computeChordExpression(tone.chordSize);\n        const isNoiseChannel = song.getChannelIsNoise(channelIndex);\n        const intervalScale = isNoiseChannel ? Config.noiseInterval : 1;\n        const secondsPerPart = Config.ticksPerPart * samplesPerTick / this.samplesPerSecond;\n        const sampleTime = 1.0 / this.samplesPerSecond;\n        const beatsPerPart = 1.0 / Config.partsPerBeat;\n        const ticksIntoBar = this.getTicksIntoBar();\n        const partTimeStart = (ticksIntoBar) / Config.ticksPerPart;\n        const partTimeEnd = (ticksIntoBar + 1.0) / Config.ticksPerPart;\n        const currentPart = this.getCurrentPart();\n        let specialIntervalMult = 1.0;\n        tone.specialIntervalExpressionMult = 1.0;\n        let toneIsOnLastTick = shouldFadeOutFast;\n        let intervalStart = 0.0;\n        let intervalEnd = 0.0;\n        let fadeExpressionStart = 1.0;\n        let fadeExpressionEnd = 1.0;\n        let chordExpressionStart = chordExpression;\n        let chordExpressionEnd = chordExpression;\n        let expressionReferencePitch = 16;\n        let basePitch = Config.keys[song.key].basePitch + (Config.pitchesPerOctave * song.octave);\n        let baseExpression = 1.0;\n        let pitchDamping = 48;\n        if (instrument.type == 3) {\n            baseExpression = Config.spectrumBaseExpression;\n            if (isNoiseChannel) {\n                basePitch = Config.spectrumBasePitch;\n                baseExpression *= 2.0;\n            }\n            expressionReferencePitch = Config.spectrumBasePitch;\n            pitchDamping = 28;\n        }\n        else if (instrument.type == 4) {\n            basePitch = Config.spectrumBasePitch;\n            baseExpression = Config.drumsetBaseExpression;\n            expressionReferencePitch = basePitch;\n        }\n        else if (instrument.type == 2) {\n            basePitch = isNoiseChannel ? Config.chipNoises[instrument.chipNoise].basePitch : basePitch + Config.chipNoises[instrument.chipNoise].basePitch - 12;\n            baseExpression = Config.noiseBaseExpression;\n            expressionReferencePitch = basePitch;\n            pitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\n        }\n        else if (instrument.type == 1 || instrument.type == 11) {\n            baseExpression = Config.fmBaseExpression;\n        }\n        else if (instrument.type == 0) {\n            baseExpression = Config.chipBaseExpression;\n            if (Config.chipWaves[instrument.chipWave].isCustomSampled) {\n                if (Config.chipWaves[instrument.chipWave].isPercussion) {\n                    basePitch = -84.37 + Math.log2(Config.chipWaves[instrument.chipWave].samples.length / Config.chipWaves[instrument.chipWave].sampleRate) * -12 - (-60 + Config.chipWaves[instrument.chipWave].rootKey);\n                }\n                else {\n                    basePitch += -96.37 + Math.log2(Config.chipWaves[instrument.chipWave].samples.length / Config.chipWaves[instrument.chipWave].sampleRate) * -12 - (-60 + Config.chipWaves[instrument.chipWave].rootKey);\n                }\n            }\n            else {\n                if (Config.chipWaves[instrument.chipWave].isSampled && !Config.chipWaves[instrument.chipWave].isPercussion) {\n                    basePitch = basePitch - 63 + Config.chipWaves[instrument.chipWave].extraSampleDetune;\n                }\n                else if (Config.chipWaves[instrument.chipWave].isSampled && Config.chipWaves[instrument.chipWave].isPercussion) {\n                    basePitch = -51 + Config.chipWaves[instrument.chipWave].extraSampleDetune;\n                }\n            }\n        }\n        else if (instrument.type == 9) {\n            baseExpression = Config.chipBaseExpression;\n        }\n        else if (instrument.type == 5) {\n            baseExpression = Config.harmonicsBaseExpression;\n        }\n        else if (instrument.type == 6) {\n            baseExpression = Config.pwmBaseExpression;\n        }\n        else if (instrument.type == 8) {\n            baseExpression = Config.supersawBaseExpression;\n        }\n        else if (instrument.type == 7) {\n            baseExpression = Config.pickedStringBaseExpression;\n        }\n        else if (instrument.type == 10) {\n            baseExpression = 1.0;\n            expressionReferencePitch = 0;\n            pitchDamping = 1.0;\n            basePitch = 0;\n        }\n        else {\n            throw new Error(\"Unknown instrument type in computeTone.\");\n        }\n        if ((tone.atNoteStart && !transition.isSeamless && !tone.forceContinueAtStart) || tone.freshlyAllocated) {\n            tone.reset();\n            if (tone.note != null)\n                tone.chipWaveStartOffset = tone.note.chipWaveStartOffset;\n            instrumentState.envelopeComputer.reset();\n            if (instrument.type == 0 && instrument.isUsingAdvancedLoopControls) {\n                const chipWaveLength = Config.rawRawChipWaves[instrument.chipWave].samples.length - 1;\n                const firstOffset = (tone.chipWaveStartOffset + instrument.chipWaveStartOffset) / chipWaveLength;\n                const lastOffset = 0.999999999999999;\n                for (let i = 0; i < Config.maxPitchOrOperatorCount; i++) {\n                    tone.phases[i] = instrument.chipWavePlayBackwards ? Math.max(0, Math.min(lastOffset, firstOffset)) : Math.max(0, firstOffset);\n                    tone.directions[i] = instrument.chipWavePlayBackwards ? -1 : 1;\n                    tone.chipWaveCompletions[i] = 0;\n                    tone.chipWavePrevWavesL[i] = 0;\n                    tone.chipWavePrevWavesR[i] = 0;\n                    tone.chipWaveCompletionsLastWaveL[i] = 0;\n                    tone.chipWaveCompletionsLastWaveR[i] = 0;\n                }\n            }\n        }\n        tone.freshlyAllocated = false;\n        for (let i = 0; i < Config.maxPitchOrOperatorCount; i++) {\n            tone.phaseDeltas[i] = 0.0;\n            tone.phaseDeltaScales[i] = 0.0;\n            tone.operatorExpressions[i] = 0.0;\n            tone.operatorExpressionDeltas[i] = 0.0;\n        }\n        tone.expression = 0.0;\n        tone.expressionDelta = 0.0;\n        for (let i = 0; i < (instrument.type == 11 ? 6 : Config.operatorCount); i++) {\n            tone.operatorWaves[i] = Synth.getOperatorWave(instrument.operators[i].waveform, instrument.operators[i].pulseWidth);\n        }\n        if (released) {\n            const startTicksSinceReleased = tone.ticksSinceReleased;\n            const endTicksSinceReleased = tone.ticksSinceReleased + 1.0;\n            intervalStart = intervalEnd = tone.lastInterval;\n            const fadeOutTicks = Math.abs(instrument.getFadeOutTicks());\n            fadeExpressionStart = Synth.noteSizeToVolumeMult((1.0 - startTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\n            fadeExpressionEnd = Synth.noteSizeToVolumeMult((1.0 - endTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\n            if (shouldFadeOutFast) {\n                fadeExpressionEnd = 0.0;\n            }\n            if (tone.ticksSinceReleased + 1 >= fadeOutTicks)\n                toneIsOnLastTick = true;\n        }\n        else if (tone.note == null) {\n            fadeExpressionStart = fadeExpressionEnd = 1.0;\n            tone.lastInterval = 0;\n            tone.ticksSinceReleased = 0;\n            tone.liveInputSamplesHeld += roundedSamplesPerTick;\n        }\n        else {\n            const note = tone.note;\n            const nextNote = tone.nextNote;\n            const noteStartPart = tone.noteStartPart;\n            const noteEndPart = tone.noteEndPart;\n            const endPinIndex = note.getEndPinIndex(currentPart);\n            const startPin = note.pins[endPinIndex - 1];\n            const endPin = note.pins[endPinIndex];\n            const noteStartTick = noteStartPart * Config.ticksPerPart;\n            const noteEndTick = noteEndPart * Config.ticksPerPart;\n            const pinStart = (note.start + startPin.time) * Config.ticksPerPart;\n            const pinEnd = (note.start + endPin.time) * Config.ticksPerPart;\n            tone.ticksSinceReleased = 0;\n            const tickTimeStart = currentPart * Config.ticksPerPart + this.tick;\n            const tickTimeEnd = tickTimeStart + 1.0;\n            const noteTicksPassedTickStart = tickTimeStart - noteStartTick;\n            const noteTicksPassedTickEnd = tickTimeEnd - noteStartTick;\n            const pinRatioStart = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\n            const pinRatioEnd = Math.min(1.0, (tickTimeEnd - pinStart) / (pinEnd - pinStart));\n            fadeExpressionStart = 1.0;\n            fadeExpressionEnd = 1.0;\n            intervalStart = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\n            intervalEnd = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\n            tone.lastInterval = intervalEnd;\n            if ((!transition.isSeamless && !tone.forceContinueAtEnd) || nextNote == null) {\n                const fadeOutTicks = -instrument.getFadeOutTicks();\n                if (fadeOutTicks > 0.0) {\n                    const noteLengthTicks = noteEndTick - noteStartTick;\n                    fadeExpressionStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / fadeOutTicks);\n                    fadeExpressionEnd *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / fadeOutTicks);\n                    if (tickTimeEnd >= noteStartTick + noteLengthTicks)\n                        toneIsOnLastTick = true;\n                }\n            }\n        }\n        tone.isOnLastTick = toneIsOnLastTick;\n        let tmpNoteFilter = instrument.noteFilter;\n        let startPoint;\n        let endPoint;\n        if (instrument.noteFilterType) {\n            const noteFilterSettingsStart = instrument.noteFilter;\n            if (instrument.noteSubFilters[1] == null)\n                instrument.noteSubFilters[1] = new FilterSettings();\n            const noteFilterSettingsEnd = instrument.noteSubFilters[1];\n            let startSimpleFreq = instrument.noteFilterSimpleCut;\n            let startSimpleGain = instrument.noteFilterSimplePeak;\n            let endSimpleFreq = instrument.noteFilterSimpleCut;\n            let endSimpleGain = instrument.noteFilterSimplePeak;\n            let filterChanges = false;\n            if (this.isModActive(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex)) {\n                startSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, false);\n                endSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, true);\n                filterChanges = true;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex)) {\n                startSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, false);\n                endSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, true);\n                filterChanges = true;\n            }\n            noteFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, !filterChanges);\n            noteFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain, !filterChanges);\n            startPoint = noteFilterSettingsStart.controlPoints[0];\n            endPoint = noteFilterSettingsEnd.controlPoints[0];\n            instrument.noteFilter = noteFilterSettingsStart;\n            instrument.tmpNoteFilterStart = noteFilterSettingsStart;\n        }\n        const envelopeComputer = tone.envelopeComputer;\n        const envelopeSpeeds = [];\n        for (let i = 0; i < Config.maxEnvelopeCount; i++) {\n            envelopeSpeeds[i] = 0;\n        }\n        for (let envelopeIndex = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n            let perEnvelopeSpeed = instrument.envelopes[envelopeIndex].perEnvelopeSpeed;\n            if (this.isModActive(Config.modulators.dictionary[\"individual envelope speed\"].index, channelIndex, tone.instrumentIndex) && instrument.envelopes[envelopeIndex].tempEnvelopeSpeed != null) {\n                perEnvelopeSpeed = instrument.envelopes[envelopeIndex].tempEnvelopeSpeed;\n            }\n            let useEnvelopeSpeed = Config.arpSpeedScale[instrument.envelopeSpeed] * perEnvelopeSpeed;\n            if (this.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, tone.instrumentIndex)) {\n                useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, this.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, tone.instrumentIndex, false)));\n                if (Number.isInteger(useEnvelopeSpeed)) {\n                    useEnvelopeSpeed = Config.arpSpeedScale[useEnvelopeSpeed] * perEnvelopeSpeed;\n                }\n                else {\n                    useEnvelopeSpeed = (1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)] * perEnvelopeSpeed;\n                }\n            }\n            envelopeSpeeds[envelopeIndex] = useEnvelopeSpeed;\n        }\n        envelopeComputer.computeEnvelopes(instrument, currentPart, instrumentState.envelopeTime, Config.ticksPerPart * partTimeStart, samplesPerTick / this.samplesPerSecond, tone, envelopeSpeeds, instrumentState, this, channelIndex, tone.instrumentIndex);\n        const envelopeStarts = tone.envelopeComputer.envelopeStarts;\n        const envelopeEnds = tone.envelopeComputer.envelopeEnds;\n        instrument.noteFilter = tmpNoteFilter;\n        if (transition.continues && (tone.prevNote == null || tone.note == null)) {\n            instrumentState.envelopeComputer.reset();\n        }\n        if (tone.note != null && transition.slides) {\n            const prevNote = tone.prevNote;\n            const nextNote = tone.nextNote;\n            if (prevNote != null) {\n                const intervalDiff = prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length - 1].interval - tone.pitches[0];\n                if (envelopeComputer.prevSlideStart)\n                    intervalStart += intervalDiff * envelopeComputer.prevSlideRatioStart;\n                if (envelopeComputer.prevSlideEnd)\n                    intervalEnd += intervalDiff * envelopeComputer.prevSlideRatioEnd;\n                if (!chord.singleTone) {\n                    const chordSizeDiff = prevNote.pitches.length - tone.chordSize;\n                    if (envelopeComputer.prevSlideStart)\n                        chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioStart);\n                    if (envelopeComputer.prevSlideEnd)\n                        chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioEnd);\n                }\n            }\n            if (nextNote != null) {\n                const intervalDiff = nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + tone.note.pins[tone.note.pins.length - 1].interval);\n                if (envelopeComputer.nextSlideStart)\n                    intervalStart += intervalDiff * envelopeComputer.nextSlideRatioStart;\n                if (envelopeComputer.nextSlideEnd)\n                    intervalEnd += intervalDiff * envelopeComputer.nextSlideRatioEnd;\n                if (!chord.singleTone) {\n                    const chordSizeDiff = nextNote.pitches.length - tone.chordSize;\n                    if (envelopeComputer.nextSlideStart)\n                        chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioStart);\n                    if (envelopeComputer.nextSlideEnd)\n                        chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioEnd);\n                }\n            }\n        }\n        if (effectsIncludePitchShift(instrument.mdeffects)) {\n            let pitchShift = Config.justIntonationSemitones[instrument.pitchShift] / intervalScale;\n            let pitchShiftScalarStart = 1.0;\n            let pitchShiftScalarEnd = 1.0;\n            if (this.isModActive(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex)) {\n                pitchShift = Config.justIntonationSemitones[Config.justIntonationSemitones.length - 1];\n                pitchShiftScalarStart = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pitchShiftCenter);\n                pitchShiftScalarEnd = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pitchShiftCenter);\n            }\n            const envelopeStart = envelopeStarts[19];\n            const envelopeEnd = envelopeEnds[19];\n            intervalStart += pitchShift * envelopeStart * pitchShiftScalarStart;\n            intervalEnd += pitchShift * envelopeEnd * pitchShiftScalarEnd;\n        }\n        if (effectsIncludeDetune(instrument.mdeffects) || this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\n            const envelopeStart = envelopeStarts[20];\n            const envelopeEnd = envelopeEnds[20];\n            let modDetuneStart = instrument.detune;\n            let modDetuneEnd = instrument.detune;\n            if (this.isModActive(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex)) {\n                modDetuneStart = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, false) + Config.detuneCenter;\n                modDetuneEnd = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, true) + Config.detuneCenter;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\n                modDetuneStart += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, false);\n                modDetuneEnd += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, true);\n            }\n            intervalStart += detuneToCents(modDetuneStart) * envelopeStart * Config.pitchesPerOctave / (12.0 * 100.0);\n            intervalEnd += detuneToCents(modDetuneEnd) * envelopeEnd * Config.pitchesPerOctave / (12.0 * 100.0);\n        }\n        if (effectsIncludeVibrato(instrument.mdeffects)) {\n            let delayTicks;\n            let vibratoAmplitudeStart;\n            let vibratoAmplitudeEnd;\n            if (instrument.vibrato == Config.vibratos.length) {\n                delayTicks = instrument.vibratoDelay * 2;\n                if (instrument.vibratoDelay == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol)\n                    delayTicks = Number.POSITIVE_INFINITY;\n                vibratoAmplitudeStart = instrument.vibratoDepth;\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\n            }\n            else {\n                delayTicks = Config.vibratos[instrument.vibrato].delayTicks;\n                vibratoAmplitudeStart = Config.vibratos[instrument.vibrato].amplitude;\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex)) {\n                delayTicks = this.getModValue(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex, false) * 2;\n                if (delayTicks == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol * 2)\n                    delayTicks = Number.POSITIVE_INFINITY;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex)) {\n                vibratoAmplitudeStart = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, false) / 25;\n                vibratoAmplitudeEnd = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, true) / 25;\n            }\n            let vibratoStart;\n            if (tone.prevVibrato != null) {\n                vibratoStart = tone.prevVibrato;\n            }\n            else {\n                let vibratoLfoStart = Synth.getLFOAmplitude(instrument, secondsPerPart * instrumentState.vibratoTime);\n                const vibratoDepthEnvelopeStart = envelopeStarts[21];\n                vibratoStart = vibratoAmplitudeStart * vibratoLfoStart * vibratoDepthEnvelopeStart;\n                if (delayTicks > 0.0) {\n                    const ticksUntilVibratoStart = delayTicks - envelopeComputer.noteTicksStart;\n                    vibratoStart *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoStart / 2.0));\n                }\n            }\n            let vibratoLfoEnd = Synth.getLFOAmplitude(instrument, secondsPerPart * instrumentState.nextVibratoTime);\n            const vibratoDepthEnvelopeEnd = envelopeEnds[21];\n            if (instrument.type != 10) {\n                let vibratoEnd = vibratoAmplitudeEnd * vibratoLfoEnd * vibratoDepthEnvelopeEnd;\n                if (delayTicks > 0.0) {\n                    const ticksUntilVibratoEnd = delayTicks - envelopeComputer.noteTicksEnd;\n                    vibratoEnd *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoEnd / 2.0));\n                }\n                tone.prevVibrato = vibratoEnd;\n                intervalStart += vibratoStart;\n                intervalEnd += vibratoEnd;\n            }\n        }\n        if ((!transition.isSeamless && !tone.forceContinueAtStart) || tone.prevNote == null) {\n            const fadeInSeconds = instrument.getFadeInSeconds();\n            if (fadeInSeconds > 0.0) {\n                fadeExpressionStart *= Math.min(1.0, envelopeComputer.noteSecondsStartUnscaled / fadeInSeconds);\n                fadeExpressionEnd *= Math.min(1.0, envelopeComputer.noteSecondsEndUnscaled / fadeInSeconds);\n            }\n        }\n        if (instrument.type == 4 && tone.drumsetPitch == null) {\n            tone.drumsetPitch = tone.pitches[0];\n            if (tone.note != null)\n                tone.drumsetPitch += tone.note.pickMainInterval();\n            tone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\n        }\n        let noteFilterExpression = envelopeComputer.lowpassCutoffDecayVolumeCompensation;\n        const noteAllFreqsEnvelopeStart = envelopeStarts[2];\n        const noteAllFreqsEnvelopeEnd = envelopeEnds[2];\n        if (instrument.noteFilterType) {\n            const noteFreqEnvelopeStart = envelopeStarts[22];\n            const noteFreqEnvelopeEnd = envelopeEnds[22];\n            const notePeakEnvelopeStart = envelopeStarts[30];\n            const notePeakEnvelopeEnd = envelopeEnds[30];\n            startPoint.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\n            endPoint.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\n            if (tone.noteFiltersL.length < 1)\n                tone.noteFiltersL[0] = new DynamicBiquadFilter();\n            if (tone.noteFiltersR.length < 1)\n                tone.noteFiltersR[0] = new DynamicBiquadFilter();\n            tone.noteFiltersL[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n            tone.noteFiltersR[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n            noteFilterExpression *= startPoint.getVolumeCompensationMult();\n            tone.noteFilterCount = 1;\n        }\n        else {\n            const noteFilterSettings = (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter;\n            for (let i = 0; i < noteFilterSettings.controlPointCount; i++) {\n                const noteFreqEnvelopeStart = envelopeStarts[22 + i];\n                const noteFreqEnvelopeEnd = envelopeEnds[22 + i];\n                const notePeakEnvelopeStart = envelopeStarts[30 + i];\n                const notePeakEnvelopeEnd = envelopeEnds[30 + i];\n                let startPoint = noteFilterSettings.controlPoints[i];\n                const endPoint = (instrument.tmpNoteFilterEnd != null && instrument.tmpNoteFilterEnd.controlPoints[i] != null) ? instrument.tmpNoteFilterEnd.controlPoints[i] : noteFilterSettings.controlPoints[i];\n                if (startPoint.type != endPoint.type) {\n                    startPoint = endPoint;\n                }\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\n                if (tone.noteFiltersL.length <= i)\n                    tone.noteFiltersL[i] = new DynamicBiquadFilter();\n                if (tone.noteFiltersR.length <= i)\n                    tone.noteFiltersR[i] = new DynamicBiquadFilter();\n                tone.noteFiltersL[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                tone.noteFiltersR[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == 0);\n                noteFilterExpression *= startPoint.getVolumeCompensationMult();\n            }\n            tone.noteFilterCount = noteFilterSettings.controlPointCount;\n        }\n        if (instrument.type == 4) {\n            const drumsetEnvelopeComputer = tone.envelopeComputer;\n            const drumsetFilterEnvelope = instrument.getDrumsetEnvelope(tone.drumsetPitch);\n            noteFilterExpression *= EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(drumsetFilterEnvelope);\n            drumsetEnvelopeComputer.computeDrumsetEnvelopes(instrument, drumsetFilterEnvelope, beatsPerPart, partTimeStart, partTimeEnd);\n            const drumsetFilterEnvelopeStart = drumsetEnvelopeComputer.drumsetFilterEnvelopeStart;\n            const drumsetFilterEnvelopeEnd = drumsetEnvelopeComputer.drumsetFilterEnvelopeEnd;\n            const point = this.tempDrumSetControlPoint;\n            point.type = 0;\n            point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(0.50);\n            point.freq = FilterControlPoint.getRoundedSettingValueFromHz(8000.0);\n            point.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeStart * (1.0 + drumsetFilterEnvelopeStart), 1.0);\n            point.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeEnd * (1.0 + drumsetFilterEnvelopeEnd), 1.0);\n            if (tone.noteFiltersL.length == tone.noteFilterCount)\n                tone.noteFiltersL[tone.noteFilterCount] = new DynamicBiquadFilter();\n            if (tone.noteFiltersR.length == tone.noteFilterCount)\n                tone.noteFiltersR[tone.noteFilterCount] = new DynamicBiquadFilter();\n            tone.noteFiltersL[tone.noteFilterCount].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, true);\n            tone.noteFiltersR[tone.noteFilterCount].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, true);\n            tone.noteFilterCount++;\n        }\n        noteFilterExpression = Math.min(3.0, noteFilterExpression);\n        if (instrument.type == 1 || instrument.type == 11) {\n            let sineExpressionBoost = 1.0;\n            let totalCarrierExpression = 0.0;\n            let arpeggioInterval = 0;\n            const arpeggiates = chord.arpeggiates;\n            const isMono = chord.name == \"monophonic\";\n            if (tone.pitchCount > 1 && arpeggiates) {\n                const arpeggio = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\n                arpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\n            }\n            const carrierCount = (instrument.type == 11 ? instrument.customAlgorithm.carrierCount : Config.algorithms[instrument.algorithm].carrierCount);\n            for (let i = 0; i < (instrument.type == 11 ? 6 : Config.operatorCount); i++) {\n                const associatedCarrierIndex = (instrument.type == 11 ? instrument.customAlgorithm.associatedCarrier[i] - 1 : Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1);\n                const pitch = tone.pitches[arpeggiates ? 0 : isMono ? instrument.monoChordTone : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\n                const freqMult = Config.operatorFrequencies[instrument.operators[i].frequency].mult;\n                const interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\n                const pitchStart = basePitch + (pitch + intervalStart) * intervalScale + interval;\n                const pitchEnd = basePitch + (pitch + intervalEnd) * intervalScale + interval;\n                const baseFreqStart = Instrument.frequencyFromPitch(pitchStart);\n                const baseFreqEnd = Instrument.frequencyFromPitch(pitchEnd);\n                const hzOffset = Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\n                const targetFreqStart = freqMult * baseFreqStart + hzOffset;\n                const targetFreqEnd = freqMult * baseFreqEnd + hzOffset;\n                const freqEnvelopeStart = envelopeStarts[6 + i];\n                const freqEnvelopeEnd = envelopeEnds[6 + i];\n                let freqStart;\n                let freqEnd;\n                if (freqEnvelopeStart != 1.0 || freqEnvelopeEnd != 1.0) {\n                    freqStart = Math.pow(2.0, Math.log2(targetFreqStart / baseFreqStart) * freqEnvelopeStart) * baseFreqStart;\n                    freqEnd = Math.pow(2.0, Math.log2(targetFreqEnd / baseFreqEnd) * freqEnvelopeEnd) * baseFreqEnd;\n                }\n                else {\n                    freqStart = targetFreqStart;\n                    freqEnd = targetFreqEnd;\n                }\n                tone.phaseDeltas[i] = freqStart * sampleTime;\n                tone.phaseDeltaScales[i] = Math.pow(freqEnd / freqStart, 1.0 / roundedSamplesPerTick);\n                let amplitudeStart = instrument.operators[i].amplitude;\n                let amplitudeEnd = instrument.operators[i].amplitude;\n                if (i < 4) {\n                    if (this.isModActive(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex)) {\n                        amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, false) / 15.0;\n                        amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, true) / 15.0;\n                    }\n                }\n                else {\n                    if (this.isModActive(Config.modulators.dictionary[\"fm slider 5\"].index + i - 4, channelIndex, tone.instrumentIndex)) {\n                        amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 5\"].index + i - 4, channelIndex, tone.instrumentIndex, false) / 15.0;\n                        amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 5\"].index + i - 4, channelIndex, tone.instrumentIndex, true) / 15.0;\n                    }\n                }\n                const amplitudeCurveStart = Synth.operatorAmplitudeCurve(amplitudeStart);\n                const amplitudeCurveEnd = Synth.operatorAmplitudeCurve(amplitudeEnd);\n                const amplitudeMultStart = amplitudeCurveStart * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\n                const amplitudeMultEnd = amplitudeCurveEnd * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\n                let expressionStart = amplitudeMultStart;\n                let expressionEnd = amplitudeMultEnd;\n                if (i < carrierCount) {\n                    let pitchExpressionStart;\n                    if (tone.prevPitchExpressions[i] != null) {\n                        pitchExpressionStart = tone.prevPitchExpressions[i];\n                    }\n                    else {\n                        pitchExpressionStart = Math.pow(2.0, -(pitchStart - expressionReferencePitch) / pitchDamping);\n                    }\n                    const pitchExpressionEnd = Math.pow(2.0, -(pitchEnd - expressionReferencePitch) / pitchDamping);\n                    tone.prevPitchExpressions[i] = pitchExpressionEnd;\n                    expressionStart *= pitchExpressionStart;\n                    expressionEnd *= pitchExpressionEnd;\n                    totalCarrierExpression += amplitudeCurveEnd;\n                }\n                else {\n                    expressionStart *= Config.sineWaveLength * 1.5;\n                    expressionEnd *= Config.sineWaveLength * 1.5;\n                    sineExpressionBoost *= 1.0 - Math.min(1.0, instrument.operators[i].amplitude / 15);\n                }\n                expressionStart *= envelopeStarts[12 + i];\n                expressionEnd *= envelopeEnds[12 + i];\n                if (this.isModActive(Config.modulators.dictionary[\"pre volume\"].index, channelIndex, tone.instrumentIndex)) {\n                    const startVal = this.getModValue(Config.modulators.dictionary[\"pre volume\"].index, channelIndex, tone.instrumentIndex, false);\n                    const endVal = this.getModValue(Config.modulators.dictionary[\"pre volume\"].index, channelIndex, tone.instrumentIndex, true);\n                    expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n                    expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n                }\n                tone.operatorExpressions[i] = expressionStart;\n                tone.operatorExpressionDeltas[i] = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n            }\n            sineExpressionBoost *= (Math.pow(2.0, (2.0 - 1.4 * instrument.feedbackAmplitude / 15.0)) - 1.0) / 3.0;\n            sineExpressionBoost *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierExpression - 1) / 2.0);\n            sineExpressionBoost = 1.0 + sineExpressionBoost * 3.0;\n            let expressionStart = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionStart * chordExpressionStart * envelopeStarts[0];\n            let expressionEnd = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionEnd * chordExpressionEnd * envelopeEnds[0];\n            if (isMono && tone.pitchCount <= instrument.monoChordTone) {\n                expressionStart = 0;\n                expressionEnd = 0;\n            }\n            tone.expression = expressionStart;\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n            let useFeedbackAmplitudeStart = instrument.feedbackAmplitude;\n            let useFeedbackAmplitudeEnd = instrument.feedbackAmplitude;\n            if (this.isModActive(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex)) {\n                useFeedbackAmplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, false) / 15.0;\n                useFeedbackAmplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, true) / 15.0;\n            }\n            let feedbackAmplitudeStart = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeStart / 15.0;\n            const feedbackAmplitudeEnd = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeEnd / 15.0;\n            let feedbackStart = feedbackAmplitudeStart * envelopeStarts[18];\n            let feedbackEnd = feedbackAmplitudeEnd * envelopeEnds[18];\n            tone.feedbackMult = feedbackStart;\n            tone.feedbackDelta = (feedbackEnd - feedbackStart) / roundedSamplesPerTick;\n        }\n        else {\n            const freqEndRatio = Math.pow(2.0, (intervalEnd - intervalStart) * intervalScale / 12.0);\n            const basePhaseDeltaScale = Math.pow(freqEndRatio, 1.0 / roundedSamplesPerTick);\n            const isMono = chord.name == \"monophonic\";\n            let pitch = tone.pitches[0];\n            if (tone.pitchCount > 1 && (chord.arpeggiates || chord.customInterval || isMono)) {\n                const arpeggio = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\n                if (chord.customInterval) {\n                    const intervalOffset = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\n                    specialIntervalMult = Math.pow(2.0, intervalOffset / 12.0);\n                    tone.specialIntervalExpressionMult = Math.pow(2.0, -intervalOffset / pitchDamping);\n                }\n                else if (chord.arpeggiates) {\n                    pitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)];\n                }\n                else {\n                    pitch = tone.pitches[instrument.monoChordTone];\n                }\n            }\n            const startPitch = basePitch + (pitch + intervalStart) * intervalScale;\n            const endPitch = basePitch + (pitch + intervalEnd) * intervalScale;\n            let pitchExpressionStart;\n            if (tone.prevPitchExpressions[0] != null) {\n                pitchExpressionStart = tone.prevPitchExpressions[0];\n            }\n            else {\n                pitchExpressionStart = Math.pow(2.0, -(startPitch - expressionReferencePitch) / pitchDamping);\n            }\n            const pitchExpressionEnd = Math.pow(2.0, -(endPitch - expressionReferencePitch) / pitchDamping);\n            tone.prevPitchExpressions[0] = pitchExpressionEnd;\n            let settingsExpressionMult = baseExpression * noteFilterExpression;\n            if (instrument.type == 2) {\n                settingsExpressionMult *= Config.chipNoises[instrument.chipNoise].expression;\n            }\n            if (instrument.type == 0) {\n                settingsExpressionMult *= Config.chipWaves[instrument.chipWave].expression;\n            }\n            if (instrument.type == 6) {\n                const basePulseWidth = getPulseWidthRatio(instrument.pulseWidth);\n                let pulseWidthModStart = basePulseWidth;\n                let pulseWidthModEnd = basePulseWidth;\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\n                }\n                const pulseWidthStart = pulseWidthModStart * envelopeStarts[3];\n                const pulseWidthEnd = pulseWidthModEnd * envelopeEnds[3];\n                tone.pulseWidth = pulseWidthStart;\n                tone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / roundedSamplesPerTick;\n                let decimalOffsetModStart = instrument.decimalOffset;\n                if (this.isModActive(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex)) {\n                    decimalOffsetModStart = this.getModValue(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex, false);\n                }\n                const decimalOffsetStart = decimalOffsetModStart * envelopeStarts[38];\n                tone.decimalOffset = decimalOffsetStart;\n                tone.pulseWidth -= (tone.decimalOffset) / 10000;\n            }\n            if (instrument.type == 7) {\n                let useSustainStart = instrument.stringSustain;\n                let useSustainEnd = instrument.stringSustain;\n                if (this.isModActive(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex)) {\n                    useSustainStart = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, false);\n                    useSustainEnd = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, true);\n                }\n                tone.stringSustainStart = useSustainStart;\n                tone.stringSustainEnd = useSustainEnd;\n                settingsExpressionMult *= Math.pow(2.0, 0.7 * (1.0 - useSustainStart / (Config.stringSustainRange - 1)));\n            }\n            const startFreq = Instrument.frequencyFromPitch(startPitch);\n            if (instrument.type == 0 || instrument.type == 9 || instrument.type == 5 || instrument.type == 7 || instrument.type == 3 || instrument.type == 6 || instrument.type == 2 || instrument.type == 4) {\n                const unisonVoices = instrument.unisonVoices;\n                const unisonSpread = instrument.unisonSpread;\n                const unisonOffset = instrument.unisonOffset;\n                const unisonExpression = instrument.unisonExpression;\n                const voiceCountExpression = (instrument.type == 7) ? 1 : unisonVoices / 2.0;\n                settingsExpressionMult *= unisonExpression * voiceCountExpression;\n                const unisonEnvelopeStart = envelopeStarts[5];\n                const unisonEnvelopeEnd = envelopeEnds[5];\n                const unisonStartA = Math.pow(2.0, (unisonOffset + unisonSpread) * unisonEnvelopeStart / 12.0);\n                const unisonEndA = Math.pow(2.0, (unisonOffset + unisonSpread) * unisonEnvelopeEnd / 12.0);\n                tone.phaseDeltas[0] = startFreq * sampleTime * unisonStartA;\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale * Math.pow(unisonEndA / unisonStartA, 1.0 / roundedSamplesPerTick);\n                const divisor = (unisonVoices == 1) ? 1 : (unisonVoices - 1);\n                for (let i = 1; i < unisonVoices; i++) {\n                    const unisonStart = Math.pow(2.0, (unisonOffset + unisonSpread - (2 * i * unisonSpread / divisor)) * unisonEnvelopeStart / 12.0) * (specialIntervalMult);\n                    const unisonEnd = Math.pow(2.0, (unisonOffset + unisonSpread - (2 * i * unisonSpread / divisor)) * unisonEnvelopeEnd / 12.0) * (specialIntervalMult);\n                    tone.phaseDeltas[i] = startFreq * sampleTime * unisonStart;\n                    tone.phaseDeltaScales[i] = basePhaseDeltaScale * Math.pow(unisonEnd / unisonStart, 1.0 / roundedSamplesPerTick);\n                }\n                for (let i = unisonVoices; i < Config.unisonVoicesMax; i++) {\n                    tone.phaseDeltas[i] = tone.phaseDeltas[0];\n                    tone.phaseDeltaScales[i] = tone.phaseDeltaScales[0];\n                }\n            }\n            else {\n                tone.phaseDeltas[0] = startFreq * sampleTime;\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale;\n            }\n            let supersawExpressionStart = 1.0;\n            let supersawExpressionEnd = 1.0;\n            if (instrument.type == 8) {\n                const minFirstVoiceAmplitude = 1.0 / Math.sqrt(Config.supersawVoiceCount);\n                let useDynamismStart = instrument.supersawDynamism / Config.supersawDynamismMax;\n                let useDynamismEnd = instrument.supersawDynamism / Config.supersawDynamismMax;\n                if (this.isModActive(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex)) {\n                    useDynamismStart = (this.getModValue(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawDynamismMax;\n                    useDynamismEnd = (this.getModValue(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawDynamismMax;\n                }\n                const curvedDynamismStart = 1.0 - Math.pow(Math.max(0.0, 1.0 - useDynamismStart * envelopeStarts[39]), 0.2);\n                const curvedDynamismEnd = 1.0 - Math.pow(Math.max(0.0, 1.0 - useDynamismEnd * envelopeEnds[39]), 0.2);\n                const firstVoiceAmplitudeStart = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismStart);\n                const firstVoiceAmplitudeEnd = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismEnd);\n                const dynamismStart = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeStart, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\n                const dynamismEnd = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeEnd, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\n                tone.supersawDynamism = dynamismStart;\n                tone.supersawDynamismDelta = (dynamismEnd - dynamismStart) / roundedSamplesPerTick;\n                const initializeSupersaw = (tone.supersawDelayIndex == -1);\n                if (initializeSupersaw) {\n                    let accumulator = 0.0;\n                    for (let i = 0; i < Config.supersawVoiceCount; i++) {\n                        tone.phases[i] = accumulator;\n                        accumulator += -Math.log(Math.random());\n                    }\n                    const amplitudeSum = 1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart;\n                    const slope = amplitudeSum;\n                    let sample = 0.0;\n                    for (let i = 0; i < Config.supersawVoiceCount; i++) {\n                        const amplitude = (i == 0) ? 1.0 : dynamismStart;\n                        const normalizedPhase = tone.phases[i] / accumulator;\n                        tone.phases[i] = normalizedPhase;\n                        sample += (normalizedPhase - 0.5) * amplitude;\n                    }\n                    let zeroCrossingPhase = 1.0;\n                    let prevDrop = 0.0;\n                    for (let i = Config.supersawVoiceCount - 1; i >= 0; i--) {\n                        const nextDrop = 1.0 - tone.phases[i];\n                        const phaseDelta = nextDrop - prevDrop;\n                        if (sample < 0.0) {\n                            const distanceToZeroCrossing = -sample / slope;\n                            if (distanceToZeroCrossing < phaseDelta) {\n                                zeroCrossingPhase = prevDrop + distanceToZeroCrossing;\n                                break;\n                            }\n                        }\n                        const amplitude = (i == 0) ? 1.0 : dynamismStart;\n                        sample += phaseDelta * slope - amplitude;\n                        prevDrop = nextDrop;\n                    }\n                    for (let i = 0; i < Config.supersawVoiceCount; i++) {\n                        tone.phases[i] += zeroCrossingPhase;\n                    }\n                    for (let i = 1; i < Config.supersawVoiceCount - 1; i++) {\n                        const swappedIndex = i + Math.floor(Math.random() * (Config.supersawVoiceCount - i));\n                        const temp = tone.phases[i];\n                        tone.phases[i] = tone.phases[swappedIndex];\n                        tone.phases[swappedIndex] = temp;\n                    }\n                }\n                const baseSpreadSlider = instrument.supersawSpread / Config.supersawSpreadMax;\n                let useSpreadStart = baseSpreadSlider;\n                let useSpreadEnd = baseSpreadSlider;\n                if (this.isModActive(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex)) {\n                    useSpreadStart = (this.getModValue(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawSpreadMax;\n                    useSpreadEnd = (this.getModValue(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawSpreadMax;\n                }\n                const spreadSliderStart = useSpreadStart * envelopeStarts[40];\n                const spreadSliderEnd = useSpreadEnd * envelopeEnds[40];\n                const averageSpreadSlider = (spreadSliderStart + spreadSliderEnd) * 0.5;\n                const curvedSpread = Math.pow(1.0 - Math.sqrt(Math.max(0.0, 1.0 - averageSpreadSlider)), 1.75);\n                for (let i = 0; i < Config.supersawVoiceCount; i++) {\n                    const offset = (i == 0) ? 0.0 : Math.pow((((i + 1) >> 1) - 0.5 + 0.025 * ((i & 2) - 1)) / (Config.supersawVoiceCount >> 1), 1.1) * ((i & 1) * 2 - 1);\n                    tone.supersawUnisonDetunes[i] = Math.pow(2.0, curvedSpread * offset / 12.0);\n                }\n                const baseShape = instrument.supersawShape / Config.supersawShapeMax;\n                let useShapeStart = baseShape * envelopeStarts[41];\n                let useShapeEnd = baseShape * envelopeEnds[41];\n                if (this.isModActive(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex)) {\n                    useShapeStart = (this.getModValue(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawShapeMax;\n                    useShapeEnd = (this.getModValue(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawShapeMax;\n                }\n                const shapeStart = useShapeStart * envelopeStarts[41];\n                const shapeEnd = useShapeEnd * envelopeEnds[41];\n                tone.supersawShape = shapeStart;\n                tone.supersawShapeDelta = (shapeEnd - shapeStart) / roundedSamplesPerTick;\n                let decimalOffsetModStart = instrument.decimalOffset;\n                if (this.isModActive(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex)) {\n                    decimalOffsetModStart = this.getModValue(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex, false);\n                }\n                const decimalOffsetStart = decimalOffsetModStart * envelopeStarts[38];\n                tone.decimalOffset = decimalOffsetStart;\n                const basePulseWidth = getPulseWidthRatio(instrument.pulseWidth);\n                let pulseWidthModStart = basePulseWidth;\n                let pulseWidthModEnd = basePulseWidth;\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\n                }\n                let pulseWidthStart = pulseWidthModStart * envelopeStarts[3];\n                let pulseWidthEnd = pulseWidthModEnd * envelopeEnds[3];\n                pulseWidthStart -= decimalOffsetStart / 10000;\n                pulseWidthEnd -= decimalOffsetStart / 10000;\n                const phaseDeltaStart = (tone.supersawPrevPhaseDelta != null) ? tone.supersawPrevPhaseDelta : startFreq * sampleTime;\n                const phaseDeltaEnd = startFreq * sampleTime * freqEndRatio;\n                tone.supersawPrevPhaseDelta = phaseDeltaEnd;\n                const delayLengthStart = pulseWidthStart / phaseDeltaStart;\n                const delayLengthEnd = pulseWidthEnd / phaseDeltaEnd;\n                tone.supersawDelayLength = delayLengthStart;\n                tone.supersawDelayLengthDelta = (delayLengthEnd - delayLengthStart) / roundedSamplesPerTick;\n                const minBufferLength = Math.ceil(Math.max(delayLengthStart, delayLengthEnd)) + 2;\n                if (tone.supersawDelayLine == null || tone.supersawDelayLine.length <= minBufferLength) {\n                    const likelyMaximumLength = Math.ceil(0.5 * this.samplesPerSecond / Instrument.frequencyFromPitch(24));\n                    const newDelayLine = new Float32Array(fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\n                    if (!initializeSupersaw && tone.supersawDelayLine != null) {\n                        const oldDelayBufferMask = (tone.supersawDelayLine.length - 1) >> 0;\n                        const startCopyingFromIndex = tone.supersawDelayIndex;\n                        for (let i = 0; i < tone.supersawDelayLine.length; i++) {\n                            newDelayLine[i] = tone.supersawDelayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\n                        }\n                    }\n                    tone.supersawDelayLine = newDelayLine;\n                    tone.supersawDelayIndex = tone.supersawDelayLine.length;\n                }\n                else if (initializeSupersaw) {\n                    tone.supersawDelayLine.fill(0.0);\n                    tone.supersawDelayIndex = tone.supersawDelayLine.length;\n                }\n                const pulseExpressionRatio = Config.pwmBaseExpression / Config.supersawBaseExpression;\n                supersawExpressionStart *= (1.0 + (pulseExpressionRatio - 1.0) * shapeStart) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart * dynamismStart);\n                supersawExpressionEnd *= (1.0 + (pulseExpressionRatio - 1.0) * shapeEnd) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismEnd * dynamismEnd);\n            }\n            let expressionStart = settingsExpressionMult * fadeExpressionStart * chordExpressionStart * pitchExpressionStart * envelopeStarts[0] * supersawExpressionStart;\n            let expressionEnd = settingsExpressionMult * fadeExpressionEnd * chordExpressionEnd * pitchExpressionEnd * envelopeEnds[0] * supersawExpressionEnd;\n            if (this.isModActive(Config.modulators.dictionary[\"pre volume\"].index, channelIndex, tone.instrumentIndex)) {\n                const startVal = this.getModValue(Config.modulators.dictionary[\"pre volume\"].index, channelIndex, tone.instrumentIndex, false);\n                const endVal = this.getModValue(Config.modulators.dictionary[\"pre volume\"].index, channelIndex, tone.instrumentIndex, true);\n                expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n                expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n            }\n            if (isMono && tone.pitchCount <= instrument.monoChordTone) {\n                expressionStart = 0;\n                expressionEnd = 0;\n                instrumentState.awake = false;\n            }\n            tone.expression = expressionStart;\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n            if (instrument.type == 7) {\n                let stringDecayStart;\n                if (tone.prevStringDecay != null) {\n                    stringDecayStart = tone.prevStringDecay;\n                }\n                else {\n                    const sustainEnvelopeStart = tone.envelopeComputer.envelopeStarts[4];\n                    stringDecayStart = 1.0 - Math.min(1.0, sustainEnvelopeStart * tone.stringSustainStart / (Config.stringSustainRange - 1));\n                }\n                const sustainEnvelopeEnd = tone.envelopeComputer.envelopeEnds[4];\n                let stringDecayEnd = 1.0 - Math.min(1.0, sustainEnvelopeEnd * tone.stringSustainEnd / (Config.stringSustainRange - 1));\n                tone.prevStringDecay = stringDecayEnd;\n                const unisonVoices = instrument.unisonVoices;\n                for (let i = tone.pickedStrings.length; i < unisonVoices; i++) {\n                    tone.pickedStrings[i] = new PickedString();\n                }\n                if (tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\n                    for (const pickedString of tone.pickedStrings) {\n                        pickedString.delayIndex = -1;\n                    }\n                }\n                for (let i = 0; i < unisonVoices; i++) {\n                    tone.pickedStrings[i].update(this, instrumentState, tone, i, roundedSamplesPerTick, stringDecayStart, stringDecayEnd, instrument.stringSustainType);\n                }\n            }\n        }\n    }\n    static getLFOAmplitude(instrument, secondsIntoBar) {\n        let effect = 0.0;\n        for (const vibratoPeriodSeconds of Config.vibratoTypes[instrument.vibratoType].periodsSeconds) {\n            effect += Math.sin(Math.PI * 2.0 * secondsIntoBar / vibratoPeriodSeconds);\n        }\n        return effect;\n    }\n    static getInstrumentSynthFunction(instrument) {\n        if (instrument.type == 1) {\n            const fingerprint = instrument.algorithm + \"_\" + instrument.feedbackType;\n            if (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\n                const synthSource = [];\n                for (const line of Synth.fmSourceTemplate) {\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\n                        const outputs = [];\n                        for (let j = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\n                            outputs.push(\"operator\" + j + \"Scaled\");\n                        }\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\n                    }\n                    else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\n                        for (let j = Config.operatorCount - 1; j >= 0; j--) {\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\n                                    let modulators = \"\";\n                                    for (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\n                                    }\n                                    const feedbackIndices = Config.feedbacks[instrument.feedbackType].indices[j];\n                                    if (feedbackIndices.length > 0) {\n                                        modulators += \" + feedbackMult * (\";\n                                        const feedbacks = [];\n                                        for (const modulatorNumber of feedbackIndices) {\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\n                                        }\n                                        modulators += feedbacks.join(\" + \") + \")\";\n                                    }\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\n                                }\n                                else {\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\n                                }\n                            }\n                        }\n                    }\n                    else if (line.indexOf(\"#\") != -1) {\n                        for (let j = 0; j < Config.operatorCount; j++) {\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\n                        }\n                    }\n                    else {\n                        synthSource.push(line);\n                    }\n                }\n                const wrappedFmSynth = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {\" + synthSource.join(\"\\n\") + \"}\";\n                Synth.fmSynthFunctionCache[fingerprint] = new Function(\"Config\", \"Synth\", wrappedFmSynth)(Config, Synth);\n            }\n            return Synth.fmSynthFunctionCache[fingerprint];\n        }\n        else if (instrument.type == 0) {\n            if (instrument.isUsingAdvancedLoopControls) {\n                return Synth.loopableChipSynth;\n            }\n            return Synth.chipSynth;\n        }\n        else if (instrument.type == 9) {\n            return Synth.chipSynth;\n        }\n        else if (instrument.type == 5) {\n            return Synth.harmonicsSynth;\n        }\n        else if (instrument.type == 6) {\n            return Synth.pulseWidthSynth;\n        }\n        else if (instrument.type == 8) {\n            return Synth.supersawSynth;\n        }\n        else if (instrument.type == 7) {\n            return Synth.pickedStringSynth;\n        }\n        else if (instrument.type == 2) {\n            return Synth.noiseSynth;\n        }\n        else if (instrument.type == 3) {\n            return Synth.spectrumSynth;\n        }\n        else if (instrument.type == 4) {\n            return Synth.drumsetSynth;\n        }\n        else if (instrument.type == 10) {\n            return Synth.modSynth;\n        }\n        else if (instrument.type == 11) {\n            const fingerprint = instrument.customAlgorithm.name + \"_\" + instrument.customFeedbackType.name;\n            if (Synth.fm6SynthFunctionCache[fingerprint] == undefined) {\n                const synthSource = [];\n                for (const line of Synth.fmSourceTemplate) {\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\n                        const outputs = [];\n                        for (let j = 0; j < instrument.customAlgorithm.carrierCount; j++) {\n                            outputs.push(\"operator\" + j + \"Scaled\");\n                        }\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\n                    }\n                    else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\n                        for (let j = Config.operatorCount + 2 - 1; j >= 0; j--) {\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\n                                    let modulators = \"\";\n                                    for (const modulatorNumber of instrument.customAlgorithm.modulatedBy[j]) {\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\n                                    }\n                                    const feedbackIndices = instrument.customFeedbackType.indices[j];\n                                    if (feedbackIndices.length > 0) {\n                                        modulators += \" + feedbackMult * (\";\n                                        const feedbacks = [];\n                                        for (const modulatorNumber of feedbackIndices) {\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\n                                        }\n                                        modulators += feedbacks.join(\" + \") + \")\";\n                                    }\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\n                                }\n                                else {\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\n                                }\n                            }\n                        }\n                    }\n                    else if (line.indexOf(\"#\") != -1) {\n                        for (let j = 0; j < Config.operatorCount + 2; j++) {\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\n                        }\n                    }\n                    else {\n                        synthSource.push(line);\n                    }\n                }\n                const wrappedFm6Synth = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {\" + synthSource.join(\"\\n\") + \"}\";\n                Synth.fm6SynthFunctionCache[fingerprint] = new Function(\"Config\", \"Synth\", wrappedFm6Synth)(Config, Synth);\n            }\n            return Synth.fm6SynthFunctionCache[fingerprint];\n        }\n        else {\n            throw new Error(\"Unrecognized instrument type: \" + instrument.type);\n        }\n    }\n    static wrap(x, b) {\n        return (x % b + b) % b;\n    }\n    static loopableChipSynth(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) {\n        const aliases = (instrumentState.effectsIncludeType(3) && instrumentState.aliases);\n        const dataL = synth.tempInstrumentSampleBufferL;\n        const dataR = synth.tempInstrumentSampleBufferR;\n        const waveL = instrumentState.waveL;\n        const waveR = instrumentState.waveR;\n        const volumeScale = instrumentState.volumeScale;\n        const waveLength = (aliases && instrumentState.type == 8) ? waveL.length : waveL.length - 1;\n        let chipWaveLoopEnd = Math.max(0, Math.min(waveLength, instrumentState.chipWaveLoopEnd));\n        let chipWaveLoopStart = Math.max(0, Math.min(chipWaveLoopEnd - 1, instrumentState.chipWaveLoopStart));\n        let chipWaveLoopLength = chipWaveLoopEnd - chipWaveLoopStart;\n        if (chipWaveLoopLength < 2) {\n            chipWaveLoopStart = 0;\n            chipWaveLoopEnd = waveLength;\n            chipWaveLoopLength = waveLength;\n        }\n        const chipWaveLoopMode = instrumentState.chipWaveLoopMode;\n        const chipWavePlayBackwards = instrumentState.chipWavePlayBackwards;\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval)\n            tone.phases[1] = tone.phases[0];\n        let phaseDeltaA = tone.phaseDeltas[0] * waveLength;\n        let phaseDeltaB = tone.phaseDeltas[1] * waveLength;\n        let directionA = tone.directions[0];\n        let directionB = tone.directions[1];\n        let chipWaveCompletionA = tone.chipWaveCompletions[0];\n        let chipWaveCompletionB = tone.chipWaveCompletions[1];\n        if (chipWaveLoopMode === 3 || chipWaveLoopMode === 2 || chipWaveLoopMode === 0) {\n            if (!chipWavePlayBackwards) {\n                directionA = 1;\n                directionB = 1;\n            }\n            else {\n                directionA = -1;\n                directionB = -1;\n            }\n        }\n        if (chipWaveLoopMode === 0 || chipWaveLoopMode === 1) {\n            chipWaveCompletionA = 0;\n            chipWaveCompletionB = 0;\n        }\n        let lastWaveLA = tone.chipWaveCompletionsLastWaveL[0];\n        let lastWaveLB = tone.chipWaveCompletionsLastWaveL[1];\n        let lastWaveRA = tone.chipWaveCompletionsLastWaveR[0];\n        let lastWaveRB = tone.chipWaveCompletionsLastWaveR[1];\n        const chipWaveCompletionFadeLength = 1000;\n        const phaseDeltaScaleA = +tone.phaseDeltaScales[0];\n        const phaseDeltaScaleB = +tone.phaseDeltaScales[1];\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n        let phaseA = Synth.wrap(tone.phases[0], 1) * waveLength;\n        let phaseB = Synth.wrap(tone.phases[1], 1) * waveLength;\n        let prevWaveIntegralLA = 0;\n        let prevWaveIntegralLB = 0;\n        let prevWaveIntegralRA = 0;\n        let prevWaveIntegralRB = 0;\n        if (!aliases) {\n            const phaseAInt = Math.floor(phaseA);\n            const phaseBInt = Math.floor(phaseB);\n            const indexA = Synth.wrap(phaseAInt, waveLength);\n            const indexB = Synth.wrap(phaseBInt, waveLength);\n            const phaseRatioA = phaseA - phaseAInt;\n            const phaseRatioB = phaseB - phaseBInt;\n            prevWaveIntegralLA = +waveL[indexA];\n            prevWaveIntegralLB = +waveL[indexB];\n            prevWaveIntegralRA = +waveR[indexA];\n            prevWaveIntegralRB = +waveR[indexB];\n            prevWaveIntegralLA += (waveL[Synth.wrap(indexA + 1, waveLength)] - prevWaveIntegralLA) * phaseRatioA;\n            prevWaveIntegralLB += (waveL[Synth.wrap(indexB + 1, waveLength)] - prevWaveIntegralLB) * phaseRatioB;\n            prevWaveIntegralRA += (waveR[Synth.wrap(indexA + 1, waveLength)] - prevWaveIntegralRA) * phaseRatioA;\n            prevWaveIntegralRB += (waveR[Synth.wrap(indexB + 1, waveLength)] - prevWaveIntegralRB) * phaseRatioB;\n        }\n        const filtersL = tone.noteFiltersL;\n        const filtersR = tone.noteFiltersR;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInputL1 = +tone.initialNoteFilterInputL1;\n        let initialFilterInputR1 = +tone.initialNoteFilterInputR1;\n        let initialFilterInputL2 = +tone.initialNoteFilterInputL2;\n        let initialFilterInputR2 = +tone.initialNoteFilterInputR2;\n        const applyFilters = Synth.applyFilters;\n        const stopIndex = bufferIndex + roundedSamplesPerTick;\n        let prevWaveLA = tone.chipWavePrevWavesL[0];\n        let prevWaveLB = tone.chipWavePrevWavesL[1];\n        let prevWaveRA = tone.chipWavePrevWavesR[0];\n        let prevWaveRB = tone.chipWavePrevWavesR[1];\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            if (chipWaveCompletionA > 0 && chipWaveCompletionA < chipWaveCompletionFadeLength) {\n                chipWaveCompletionA++;\n            }\n            if (chipWaveCompletionB > 0 && chipWaveCompletionB < chipWaveCompletionFadeLength) {\n                chipWaveCompletionB++;\n            }\n            let wrapped = 0;\n            phaseA += phaseDeltaA * directionA;\n            phaseB += phaseDeltaB * directionB;\n            if (chipWaveLoopMode === 2) {\n                if (directionA === 1) {\n                    if (phaseA > waveLength) {\n                        if (chipWaveCompletionA <= 0) {\n                            lastWaveLA = prevWaveLA;\n                            lastWaveRA = prevWaveRA;\n                            chipWaveCompletionA++;\n                        }\n                        wrapped = 1;\n                    }\n                }\n                else if (directionA === -1) {\n                    if (phaseA < 0) {\n                        if (chipWaveCompletionA <= 0) {\n                            lastWaveLA = prevWaveLA;\n                            lastWaveRA = prevWaveRA;\n                            chipWaveCompletionA++;\n                        }\n                        wrapped = 1;\n                    }\n                }\n                if (directionB === 1) {\n                    if (phaseB > waveLength) {\n                        if (chipWaveCompletionB <= 0) {\n                            lastWaveLB = prevWaveLB;\n                            lastWaveRB = prevWaveRB;\n                            chipWaveCompletionB++;\n                        }\n                        wrapped = 1;\n                    }\n                }\n                else if (directionA === -1) {\n                    if (phaseB < 0) {\n                        if (chipWaveCompletionB <= 0) {\n                            lastWaveLB = prevWaveLB;\n                            lastWaveRB = prevWaveRB;\n                            chipWaveCompletionB++;\n                        }\n                        wrapped = 1;\n                    }\n                }\n            }\n            else if (chipWaveLoopMode === 3) {\n                if (directionA === 1) {\n                    if (phaseA > chipWaveLoopEnd) {\n                        if (chipWaveCompletionA <= 0) {\n                            lastWaveLA = prevWaveLA;\n                            lastWaveRA = prevWaveRA;\n                            chipWaveCompletionA++;\n                        }\n                        wrapped = 1;\n                    }\n                }\n                else if (directionA === -1) {\n                    if (phaseA < chipWaveLoopStart) {\n                        if (chipWaveCompletionA <= 0) {\n                            lastWaveLA = prevWaveLA;\n                            lastWaveRA = prevWaveRA;\n                            chipWaveCompletionA++;\n                        }\n                        wrapped = 1;\n                    }\n                }\n                if (directionB === 1) {\n                    if (phaseB > chipWaveLoopEnd) {\n                        if (chipWaveCompletionB <= 0) {\n                            lastWaveLB = prevWaveLB;\n                            lastWaveRB = prevWaveRB;\n                            chipWaveCompletionB++;\n                        }\n                        wrapped = 1;\n                    }\n                }\n                else if (directionA === -1) {\n                    if (phaseB < chipWaveLoopStart) {\n                        if (chipWaveCompletionB <= 0) {\n                            lastWaveLB = prevWaveLB;\n                            lastWaveRB = prevWaveRB;\n                            chipWaveCompletionB++;\n                        }\n                        wrapped = 1;\n                    }\n                }\n            }\n            else if (chipWaveLoopMode === 0) {\n                if (directionA === 1) {\n                    if (phaseA > chipWaveLoopEnd) {\n                        phaseA = chipWaveLoopStart + Synth.wrap(phaseA - chipWaveLoopEnd, chipWaveLoopLength);\n                        wrapped = 1;\n                    }\n                }\n                else if (directionA === -1) {\n                    if (phaseA < chipWaveLoopStart) {\n                        phaseA = chipWaveLoopEnd - Synth.wrap(chipWaveLoopStart - phaseA, chipWaveLoopLength);\n                        wrapped = 1;\n                    }\n                }\n                if (directionB === 1) {\n                    if (phaseB > chipWaveLoopEnd) {\n                        phaseB = chipWaveLoopStart + Synth.wrap(phaseB - chipWaveLoopEnd, chipWaveLoopLength);\n                        wrapped = 1;\n                    }\n                }\n                else if (directionB === -1) {\n                    if (phaseB < chipWaveLoopStart) {\n                        phaseB = chipWaveLoopEnd - Synth.wrap(chipWaveLoopStart - phaseB, chipWaveLoopLength);\n                        wrapped = 1;\n                    }\n                }\n            }\n            else if (chipWaveLoopMode === 1) {\n                if (directionA === 1) {\n                    if (phaseA > chipWaveLoopEnd) {\n                        phaseA = chipWaveLoopEnd - Synth.wrap(phaseA - chipWaveLoopEnd, chipWaveLoopLength);\n                        directionA = -1;\n                        wrapped = 1;\n                    }\n                }\n                else if (directionA === -1) {\n                    if (phaseA < chipWaveLoopStart) {\n                        phaseA = chipWaveLoopStart + Synth.wrap(chipWaveLoopStart - phaseA, chipWaveLoopLength);\n                        directionA = 1;\n                        wrapped = 1;\n                    }\n                }\n                if (directionB === 1) {\n                    if (phaseB > chipWaveLoopEnd) {\n                        phaseB = chipWaveLoopEnd - Synth.wrap(phaseB - chipWaveLoopEnd, chipWaveLoopLength);\n                        directionB = -1;\n                        wrapped = 1;\n                    }\n                }\n                else if (directionB === -1) {\n                    if (phaseB < chipWaveLoopStart) {\n                        phaseB = chipWaveLoopStart + Synth.wrap(chipWaveLoopStart - phaseB, chipWaveLoopLength);\n                        directionB = 1;\n                        wrapped = 1;\n                    }\n                }\n            }\n            let waveLA = 0;\n            let waveLB = 0;\n            let waveRA = 0;\n            let waveRB = 0;\n            let inputSampleL = 0;\n            let inputSampleR = 0;\n            if (aliases) {\n                waveLA = waveL[Synth.wrap(Math.floor(phaseA), waveLength)];\n                waveLB = waveL[Synth.wrap(Math.floor(phaseB), waveLength)];\n                waveRA = waveR[Synth.wrap(Math.floor(phaseA), waveLength)];\n                waveRB = waveR[Synth.wrap(Math.floor(phaseB), waveLength)];\n                prevWaveLA = waveLA;\n                prevWaveLB = waveLB;\n                prevWaveRA = waveRA;\n                prevWaveRB = waveRB;\n                const completionFadeA = chipWaveCompletionA > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionA, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                const completionFadeB = chipWaveCompletionB > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionB, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                inputSampleL = 0;\n                if (chipWaveCompletionA > 0) {\n                    inputSampleL += lastWaveLA * completionFadeA;\n                    inputSampleR += lastWaveLA * completionFadeA;\n                }\n                else {\n                    inputSampleL += waveLA;\n                    inputSampleR += waveRA;\n                }\n                if (chipWaveCompletionB > 0) {\n                    inputSampleL += lastWaveLB * completionFadeB;\n                    inputSampleR += lastWaveRB * completionFadeB;\n                }\n                else {\n                    inputSampleL += waveLB;\n                    inputSampleR += waveRB;\n                }\n            }\n            else {\n                const phaseAInt = Math.floor(phaseA);\n                const phaseBInt = Math.floor(phaseB);\n                const indexA = Synth.wrap(phaseAInt, waveLength);\n                const indexB = Synth.wrap(phaseBInt, waveLength);\n                let nextWaveIntegralLA = waveL[indexA];\n                let nextWaveIntegralLB = waveL[indexB];\n                let nextWaveIntegralRA = waveR[indexA];\n                let nextWaveIntegralRB = waveR[indexB];\n                const phaseRatioA = phaseA - phaseAInt;\n                const phaseRatioB = phaseB - phaseBInt;\n                nextWaveIntegralLA += (waveL[Synth.wrap(indexA + 1, waveLength)] - nextWaveIntegralLA) * phaseRatioA;\n                nextWaveIntegralLB += (waveL[Synth.wrap(indexB + 1, waveLength)] - nextWaveIntegralLB) * phaseRatioB;\n                nextWaveIntegralRA += (waveR[Synth.wrap(indexA + 1, waveLength)] - nextWaveIntegralRA) * phaseRatioA;\n                nextWaveIntegralRB += (waveR[Synth.wrap(indexB + 1, waveLength)] - nextWaveIntegralRB) * phaseRatioB;\n                if (!(chipWaveLoopMode === 0 && chipWaveLoopStart === 0 && chipWaveLoopEnd === waveLength) && wrapped !== 0) {\n                    let pwila = 0;\n                    let pwilb = 0;\n                    let pwira = 0;\n                    let pwirb = 0;\n                    const phaseA_ = Math.max(0, phaseA - phaseDeltaA * directionA);\n                    const phaseB_ = Math.max(0, phaseB - phaseDeltaB * directionB);\n                    const phaseAInt = Math.floor(phaseA_);\n                    const phaseBInt = Math.floor(phaseB_);\n                    const indexA = Synth.wrap(phaseAInt, waveLength);\n                    const indexB = Synth.wrap(phaseBInt, waveLength);\n                    pwila = waveL[indexA];\n                    pwilb = waveL[indexB];\n                    pwira = waveR[indexA];\n                    pwirb = waveR[indexB];\n                    pwila += (waveL[Synth.wrap(indexA + 1, waveLength)] - pwila) * (phaseA_ - phaseAInt) * directionA;\n                    pwilb += (waveL[Synth.wrap(indexB + 1, waveLength)] - pwilb) * (phaseB_ - phaseBInt) * directionB;\n                    pwira += (waveR[Synth.wrap(indexA + 1, waveLength)] - pwira) * (phaseA_ - phaseAInt) * directionA;\n                    pwirb += (waveR[Synth.wrap(indexB + 1, waveLength)] - pwirb) * (phaseB_ - phaseBInt) * directionB;\n                    prevWaveIntegralLA = pwila;\n                    prevWaveIntegralLB = pwilb;\n                    prevWaveIntegralRA = pwira;\n                    prevWaveIntegralRB = pwirb;\n                }\n                if (chipWaveLoopMode === 1 && wrapped !== 0) {\n                    waveLA = prevWaveLA;\n                    waveLB = prevWaveLB;\n                    waveRA = prevWaveRA;\n                    waveRB = prevWaveRB;\n                }\n                else {\n                    waveLA = (nextWaveIntegralLA - prevWaveIntegralLA) / (phaseDeltaA * directionA);\n                    waveLB = (nextWaveIntegralLB - prevWaveIntegralLB) / (phaseDeltaB * directionB);\n                    waveRA = (nextWaveIntegralRA - prevWaveIntegralRA) / (phaseDeltaA * directionA);\n                    waveRB = (nextWaveIntegralRB - prevWaveIntegralRB) / (phaseDeltaB * directionB);\n                }\n                prevWaveLA = waveLA;\n                prevWaveLB = waveLB;\n                prevWaveRA = waveRA;\n                prevWaveRB = waveRB;\n                prevWaveIntegralLA = nextWaveIntegralLA;\n                prevWaveIntegralLB = nextWaveIntegralLB;\n                prevWaveIntegralRA = nextWaveIntegralRA;\n                prevWaveIntegralRB = nextWaveIntegralRB;\n                const completionFadeA = chipWaveCompletionA > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionA, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                const completionFadeB = chipWaveCompletionB > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionB, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\n                if (chipWaveCompletionA > 0) {\n                    inputSampleL += lastWaveLA * completionFadeA;\n                    inputSampleR += lastWaveRA * completionFadeA;\n                }\n                else {\n                    inputSampleL += waveLA;\n                    inputSampleR += waveRA;\n                }\n                if (chipWaveCompletionB > 0) {\n                    inputSampleL += lastWaveLB * completionFadeB;\n                    inputSampleR += lastWaveRB * completionFadeB;\n                }\n                else {\n                    inputSampleL += waveLB * unisonSign;\n                    inputSampleR += waveRB * unisonSign;\n                }\n            }\n            const sampleL = applyFilters(inputSampleL * volumeScale, initialFilterInputL1, initialFilterInputL2, filterCount, filtersL);\n            const sampleR = applyFilters(inputSampleR * volumeScale, initialFilterInputR1, initialFilterInputR2, filterCount, filtersR);\n            initialFilterInputL2 = initialFilterInputL1;\n            initialFilterInputR2 = initialFilterInputR1;\n            initialFilterInputL1 = inputSampleL * volumeScale;\n            initialFilterInputR1 = inputSampleR * volumeScale;\n            phaseDeltaA *= phaseDeltaScaleA;\n            phaseDeltaB *= phaseDeltaScaleB;\n            const outputL = sampleL * expression;\n            const outputR = sampleR * expression;\n            expression += expressionDelta;\n            dataL[sampleIndex] += outputL;\n            dataR[sampleIndex] += outputR;\n        }\n        tone.phases[0] = phaseA / waveLength;\n        tone.phases[1] = phaseB / waveLength;\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\n        tone.directions[0] = directionA;\n        tone.directions[1] = directionB;\n        tone.chipWaveCompletions[0] = chipWaveCompletionA;\n        tone.chipWaveCompletions[1] = chipWaveCompletionB;\n        tone.chipWavePrevWavesL[0] = prevWaveLA;\n        tone.chipWavePrevWavesL[1] = prevWaveLB;\n        tone.chipWavePrevWavesR[0] = prevWaveRA;\n        tone.chipWavePrevWavesR[1] = prevWaveRB;\n        tone.chipWaveCompletionsLastWaveL[0] = lastWaveLA;\n        tone.chipWaveCompletionsLastWaveL[1] = lastWaveLB;\n        tone.chipWaveCompletionsLastWaveR[0] = lastWaveRA;\n        tone.chipWaveCompletionsLastWaveR[1] = lastWaveRB;\n        tone.expression = expression;\n        synth.sanitizeFilters(filtersL);\n        synth.sanitizeFilters(filtersR);\n        tone.initialNoteFilterInputL1 = initialFilterInputL1;\n        tone.initialNoteFilterInputR1 = initialFilterInputR1;\n        tone.initialNoteFilterInputL2 = initialFilterInputL2;\n        tone.initialNoteFilterInputR2 = initialFilterInputR2;\n    }\n    static chipSynth(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) {\n        const aliases = (instrumentState.effectsIncludeType(5) && instrumentState.aliases);\n        const dataL = synth.tempInstrumentSampleBufferL;\n        const dataR = synth.tempInstrumentSampleBufferR;\n        const waveL = instrumentState.waveL;\n        const waveR = instrumentState.waveR;\n        const volumeScale = instrumentState.volumeScale;\n        const waveLength = (aliases && instrumentState.type == 8) ? waveL.length : waveL.length - 1;\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval)\n            tone.phases[1] = tone.phases[0];\n        let phaseDeltaA = tone.phaseDeltas[0] * waveLength;\n        let phaseDeltaB = tone.phaseDeltas[1] * waveLength;\n        const phaseDeltaScaleA = +tone.phaseDeltaScales[0];\n        const phaseDeltaScaleB = +tone.phaseDeltaScales[1];\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n        let phaseA = (tone.phases[0] % 1) * waveLength;\n        let phaseB = (tone.phases[1] % 1) * waveLength;\n        const filtersL = tone.noteFiltersL;\n        const filtersR = tone.noteFiltersR;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInputL1 = +tone.initialNoteFilterInputL1;\n        let initialFilterInputR1 = +tone.initialNoteFilterInputR1;\n        let initialFilterInputL2 = +tone.initialNoteFilterInputL2;\n        let initialFilterInputR2 = +tone.initialNoteFilterInputR2;\n        const applyFilters = Synth.applyFilters;\n        let prevWaveIntegralLA = 0;\n        let prevWaveIntegralLB = 0;\n        let prevWaveIntegralRA = 0;\n        let prevWaveIntegralRB = 0;\n        if (!aliases) {\n            const phaseAInt = phaseA | 0;\n            const phaseBInt = phaseB | 0;\n            const indexA = phaseAInt % waveLength;\n            const indexB = phaseBInt % waveLength;\n            const phaseRatioA = phaseA - phaseAInt;\n            const phaseRatioB = phaseB - phaseBInt;\n            prevWaveIntegralLA = +waveL[indexA];\n            prevWaveIntegralLB = +waveL[indexB];\n            prevWaveIntegralRA = +waveR[indexA];\n            prevWaveIntegralRB = +waveR[indexB];\n            prevWaveIntegralLA += (waveL[indexA + 1] - prevWaveIntegralLA) * phaseRatioA;\n            prevWaveIntegralLB += (waveL[indexB + 1] - prevWaveIntegralLB) * phaseRatioB;\n            prevWaveIntegralRA += (waveR[indexA + 1] - prevWaveIntegralRA) * phaseRatioA;\n            prevWaveIntegralRB += (waveR[indexB + 1] - prevWaveIntegralRB) * phaseRatioB;\n        }\n        const stopIndex = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            phaseA += phaseDeltaA;\n            phaseB += phaseDeltaB;\n            let waveLA;\n            let waveLB;\n            let waveRA;\n            let waveRB;\n            let inputSampleL;\n            let inputSampleR;\n            if (aliases) {\n                waveLA = waveL[(0 | phaseA) % waveLength];\n                waveLB = waveL[(0 | phaseB) % waveLength];\n                waveRA = waveR[(0 | phaseA) % waveLength];\n                waveRB = waveR[(0 | phaseB) % waveLength];\n                inputSampleL = waveLA + waveLB;\n                inputSampleR = waveRA + waveRB;\n            }\n            else {\n                const phaseAInt = phaseA | 0;\n                const phaseBInt = phaseB | 0;\n                const indexA = phaseAInt % waveLength;\n                const indexB = phaseBInt % waveLength;\n                let nextWaveIntegralLA = waveL[indexA];\n                let nextWaveIntegralLB = waveL[indexB];\n                let nextWaveIntegralRA = waveR[indexA];\n                let nextWaveIntegralRB = waveR[indexB];\n                const phaseRatioA = phaseA - phaseAInt;\n                const phaseRatioB = phaseB - phaseBInt;\n                nextWaveIntegralLA += (waveL[indexA + 1] - nextWaveIntegralLA) * phaseRatioA;\n                nextWaveIntegralLB += (waveL[indexB + 1] - nextWaveIntegralLB) * phaseRatioB;\n                nextWaveIntegralRA += (waveR[indexA + 1] - nextWaveIntegralRA) * phaseRatioA;\n                nextWaveIntegralRB += (waveR[indexB + 1] - nextWaveIntegralRB) * phaseRatioB;\n                waveLA = (nextWaveIntegralLA - prevWaveIntegralLA) / phaseDeltaA;\n                waveLB = (nextWaveIntegralLB - prevWaveIntegralLB) / phaseDeltaB;\n                waveRA = (nextWaveIntegralRA - prevWaveIntegralRA) / phaseDeltaA;\n                waveRB = (nextWaveIntegralRB - prevWaveIntegralRB) / phaseDeltaB;\n                prevWaveIntegralLA = nextWaveIntegralLA;\n                prevWaveIntegralLB = nextWaveIntegralLB;\n                prevWaveIntegralRA = nextWaveIntegralRA;\n                prevWaveIntegralRB = nextWaveIntegralRB;\n                inputSampleL = waveLA + waveLB * unisonSign;\n                inputSampleR = waveRA + waveRB * unisonSign;\n            }\n            const sampleL = applyFilters(inputSampleL * volumeScale, initialFilterInputL1, initialFilterInputL2, filterCount, filtersL);\n            const sampleR = applyFilters(inputSampleR * volumeScale, initialFilterInputR1, initialFilterInputR2, filterCount, filtersR);\n            initialFilterInputL2 = initialFilterInputL1;\n            initialFilterInputR2 = initialFilterInputR1;\n            initialFilterInputL1 = inputSampleL * volumeScale;\n            initialFilterInputR1 = inputSampleR * volumeScale;\n            phaseDeltaA *= phaseDeltaScaleA;\n            phaseDeltaB *= phaseDeltaScaleB;\n            const outputL = sampleL * expression;\n            const outputR = sampleR * expression;\n            expression += expressionDelta;\n            dataL[sampleIndex] += outputL;\n            dataR[sampleIndex] += outputR;\n        }\n        tone.phases[0] = phaseA / waveLength;\n        tone.phases[1] = phaseB / waveLength;\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\n        tone.expression = expression;\n        synth.sanitizeFilters(filtersL);\n        synth.sanitizeFilters(filtersR);\n        tone.initialNoteFilterInputL1 = initialFilterInputL1;\n        tone.initialNoteFilterInputR1 = initialFilterInputR1;\n        tone.initialNoteFilterInputL2 = initialFilterInputL2;\n        tone.initialNoteFilterInputR2 = initialFilterInputR2;\n    }\n    static harmonicsSynth(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) {\n        const data = synth.tempInstrumentSampleBufferL;\n        const wave = instrumentState.waveL;\n        const waveLength = wave.length - 1;\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval)\n            tone.phases[1] = tone.phases[0];\n        let phaseDeltaA = tone.phaseDeltas[0] * waveLength;\n        let phaseDeltaB = tone.phaseDeltas[1] * waveLength;\n        const phaseDeltaScaleA = +tone.phaseDeltaScales[0];\n        const phaseDeltaScaleB = +tone.phaseDeltaScales[1];\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n        let phaseA = (tone.phases[0] % 1) * waveLength;\n        let phaseB = (tone.phases[1] % 1) * waveLength;\n        const filters = tone.noteFiltersL;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInputL1;\n        let initialFilterInput2 = +tone.initialNoteFilterInputL2;\n        const applyFilters = Synth.applyFilters;\n        const phaseAInt = phaseA | 0;\n        const phaseBInt = phaseB | 0;\n        const indexA = phaseAInt % waveLength;\n        const indexB = phaseBInt % waveLength;\n        const phaseRatioA = phaseA - phaseAInt;\n        const phaseRatioB = phaseB - phaseBInt;\n        let prevWaveIntegralA = +wave[indexA];\n        let prevWaveIntegralB = +wave[indexB];\n        prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\n        prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\n        const stopIndex = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            phaseA += phaseDeltaA;\n            phaseB += phaseDeltaB;\n            const phaseAInt = phaseA | 0;\n            const phaseBInt = phaseB | 0;\n            const indexA = phaseAInt % waveLength;\n            const indexB = phaseBInt % waveLength;\n            let nextWaveIntegralA = wave[indexA];\n            let nextWaveIntegralB = wave[indexB];\n            const phaseRatioA = phaseA - phaseAInt;\n            const phaseRatioB = phaseB - phaseBInt;\n            nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\n            nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\n            const waveA = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\n            const waveB = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\n            prevWaveIntegralA = nextWaveIntegralA;\n            prevWaveIntegralB = nextWaveIntegralB;\n            const inputSample = waveA + waveB * unisonSign;\n            const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n            phaseDeltaA *= phaseDeltaScaleA;\n            phaseDeltaB *= phaseDeltaScaleB;\n            const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }\n        tone.phases[0] = phaseA / waveLength;\n        tone.phases[1] = phaseB / waveLength;\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\n        tone.expression = expression;\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInputL1 = initialFilterInput1;\n        tone.initialNoteFilterInputL2 = initialFilterInput2;\n    }\n    static pickedStringSynth(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) {\n        const voiceCount = instrumentState.unisonVoices;\n        let pickedStringFunction = Synth.pickedStringFunctionCache[voiceCount];\n        if (pickedStringFunction == undefined) {\n            let pickedStringSource = \"return (synth, bufferIndex, runLength, tone, instrumentState) => {\";\n            pickedStringSource += `\n\t\t\t\tconst Config = beepbox.Config;\n\t\t\t\tconst Synth = beepbox.Synth;\n                const data = synth.tempInstrumentSampleBufferL;\n\t\t\t\t\n\t\t\t\tlet pickedString# = tone.pickedStrings[#];\n\t\t\t\tlet allPassSample# = +pickedString#.allPassSample;\n\t\t\t\tlet allPassPrevInput# = +pickedString#.allPassPrevInput;\n\t\t\t\tlet sustainFilterSample# = +pickedString#.sustainFilterSample;\n\t\t\t\tlet sustainFilterPrevOutput2# = +pickedString#.sustainFilterPrevOutput2;\n\t\t\t\tlet sustainFilterPrevInput1# = +pickedString#.sustainFilterPrevInput1;\n\t\t\t\tlet sustainFilterPrevInput2# = +pickedString#.sustainFilterPrevInput2;\n\t\t\t\tlet fractionalDelaySample# = +pickedString#.fractionalDelaySample;\n\t\t\t\tconst delayLine# = pickedString#.delayLine;\n\t\t\t\tconst delayBufferMask# = (delayLine#.length - 1) >> 0;\n\t\t\t\tlet delayIndex# = pickedString#.delayIndex|0;\n\t\t\t\tdelayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;\n\t\t\t\tlet delayLength# = +pickedString#.prevDelayLength;\n\t\t\t\tconst delayLengthDelta# = +pickedString#.delayLengthDelta;\n\t\t\t\tlet allPassG# = +pickedString#.allPassG;\n\t\t\t\tlet sustainFilterA1# = +pickedString#.sustainFilterA1;\n\t\t\t\tlet sustainFilterA2# = +pickedString#.sustainFilterA2;\n\t\t\t\tlet sustainFilterB0# = +pickedString#.sustainFilterB0;\n\t\t\t\tlet sustainFilterB1# = +pickedString#.sustainFilterB1;\n\t\t\t\tlet sustainFilterB2# = +pickedString#.sustainFilterB2;\n\t\t\t\tconst allPassGDelta# = +pickedString#.allPassGDelta;\n\t\t\t\tconst sustainFilterA1Delta# = +pickedString#.sustainFilterA1Delta;\n\t\t\t\tconst sustainFilterA2Delta# = +pickedString#.sustainFilterA2Delta;\n\t\t\t\tconst sustainFilterB0Delta# = +pickedString#.sustainFilterB0Delta;\n\t\t\t\tconst sustainFilterB1Delta# = +pickedString#.sustainFilterB1Delta;\n\t\t\t\tconst sustainFilterB2Delta# = +pickedString#.sustainFilterB2Delta;\n\t\t\t\t\n\t\t\t\tlet expression = +tone.expression;\n\t\t\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\t\t\n\t\t\t\tconst unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n\t\t\t\tconst delayResetOffset# = pickedString#.delayResetOffset|0;\n\t\t\t\t\n\t\t\t\tconst filters = tone.noteFiltersL;\n\t\t\t\tconst filterCount = tone.noteFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +tone.initialNoteFilterInputL1;\n\t\t\t\tlet initialFilterInput2 = +tone.initialNoteFilterInputL2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tconst targetSampleTime# = delayIndex# - delayLength#;\n\t\t\t\t\tconst lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.\n\t\t\t\t\tconst upperIndex# = lowerIndex# + 1;\n\t\t\t\t\tconst fractionalDelay# = upperIndex# - targetSampleTime#;\n\t\t\t\t\tconst fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\t\tconst prevInput# = delayLine#[lowerIndex# & delayBufferMask#];\n\t\t\t\t\tconst input# = delayLine#[upperIndex# & delayBufferMask#];\n\t\t\t\t\tfractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tallPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;\n\t\t\t\t\tallPassPrevInput# = fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tconst sustainFilterPrevOutput1# = sustainFilterSample#;\n\t\t\t\t\tsustainFilterSample# = sustainFilterB0# * allPassSample# + sustainFilterB1# * sustainFilterPrevInput1# + sustainFilterB2# * sustainFilterPrevInput2# - sustainFilterA1# * sustainFilterSample# - sustainFilterA2# * sustainFilterPrevOutput2#;\n\t\t\t\t\tsustainFilterPrevOutput2# = sustainFilterPrevOutput1#;\n\t\t\t\t\tsustainFilterPrevInput2# = sustainFilterPrevInput1#;\n\t\t\t\t\tsustainFilterPrevInput1# = allPassSample#;\n\t\t\t\t\t\n\t\t\t\t\tdelayLine#[delayIndex# & delayBufferMask#] += sustainFilterSample#;\n\t\t\t\t\tdelayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;\n\t\t\t\t\tdelayIndex#++;\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = (`;\n            const sampleList = [];\n            for (let voice = 0; voice < voiceCount; voice++) {\n                sampleList.push(\"fractionalDelaySample\" + voice + (voice != 0 ? \" * unisonSign\" : \"\"));\n            }\n            pickedStringSource += sampleList.join(\" + \");\n            pickedStringSource += `) * expression;\n\t\t\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;\n                    data[sampleIndex] += sample;\n\t\t\t\t\t\n\t\t\t\t\texpression += expressionDelta;\n\t\t\t\t\tdelayLength# += delayLengthDelta#;\n\t\t\t\t\tallPassG# += allPassGDelta#;\n\t\t\t\t\tsustainFilterA1# += sustainFilterA1Delta#;\n\t\t\t\t\tsustainFilterA2# += sustainFilterA2Delta#;\n\t\t\t\t\tsustainFilterB0# += sustainFilterB0Delta#;\n\t\t\t\t\tsustainFilterB1# += sustainFilterB1Delta#;\n\t\t\t\t\tsustainFilterB2# += sustainFilterB2Delta#;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);\n\t\t\t\tif (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterSample#) || Math.abs(sustainFilterSample#) < epsilon) sustainFilterSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevOutput2#) || Math.abs(sustainFilterPrevOutput2#) < epsilon) sustainFilterPrevOutput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput1#) || Math.abs(sustainFilterPrevInput1#) < epsilon) sustainFilterPrevInput1# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput2#) || Math.abs(sustainFilterPrevInput2#) < epsilon) sustainFilterPrevInput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;\n\t\t\t\tpickedString#.allPassSample = allPassSample#;\n\t\t\t\tpickedString#.allPassPrevInput = allPassPrevInput#;\n\t\t\t\tpickedString#.sustainFilterSample = sustainFilterSample#;\n\t\t\t\tpickedString#.sustainFilterPrevOutput2 = sustainFilterPrevOutput2#;\n\t\t\t\tpickedString#.sustainFilterPrevInput1 = sustainFilterPrevInput1#;\n\t\t\t\tpickedString#.sustainFilterPrevInput2 = sustainFilterPrevInput2#;\n\t\t\t\tpickedString#.fractionalDelaySample = fractionalDelaySample#;\n\t\t\t\tpickedString#.delayIndex = delayIndex#;\n\t\t\t\tpickedString#.prevDelayLength = delayLength#;\n\t\t\t\tpickedString#.allPassG = allPassG#;\n\t\t\t\tpickedString#.sustainFilterA1 = sustainFilterA1#;\n\t\t\t\tpickedString#.sustainFilterA2 = sustainFilterA2#;\n\t\t\t\tpickedString#.sustainFilterB0 = sustainFilterB0#;\n\t\t\t\tpickedString#.sustainFilterB1 = sustainFilterB1#;\n\t\t\t\tpickedString#.sustainFilterB2 = sustainFilterB2#;\n\t\t\t\t\n\t\t\t\ttone.expression = expression;\n\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\ttone.initialNoteFilterInputL1 = initialFilterInput1;\n\t\t\t\ttone.initialNoteFilterInputL2 = initialFilterInput2;\n\t\t\t}`;\n            pickedStringSource = pickedStringSource.replace(/^.*\\#.*$/mg, line => {\n                const lines = [];\n                for (let voice = 0; voice < voiceCount; voice++) {\n                    lines.push(line.replace(/\\#/g, String(voice)));\n                }\n                return lines.join(\"\\n\");\n            });\n            pickedStringFunction = new Function(\"Config\", \"Synth\", pickedStringSource)(Config, Synth);\n            Synth.pickedStringFunctionCache[voiceCount] = pickedStringFunction;\n        }\n        pickedStringFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\n    }\n    static effectsSynth(synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) {\n        const usesDistortion = instrumentState.effectsIncludeType(3);\n        const usesBitcrusher = instrumentState.effectsIncludeType(4);\n        const usesEqFilter = instrumentState.effectsIncludeType(5);\n        const usesGain = instrumentState.effectsIncludeType(9);\n        const usesPanning = instrumentState.effectsIncludeType(2);\n        const usesFlanger = instrumentState.effectsIncludeType(10);\n        const usesChorus = instrumentState.effectsIncludeType(1);\n        const usesEcho = instrumentState.effectsIncludeType(6);\n        const usesReverb = instrumentState.effectsIncludeType(0);\n        const usesGranular = instrumentState.effectsIncludeType(8);\n        const usesRingModulation = instrumentState.effectsIncludeType(7);\n        const isStereo = instrumentState.chipWaveInStereo && (instrumentState.synthesizer == Synth.loopableChipSynth || instrumentState.synthesizer == Synth.chipSynth);\n        let signature = \"\";\n        for (let i of instrumentState.effects) {\n            if (i != null) {\n                signature = signature + i.type.toString();\n                if (i.type == 2)\n                    signature = signature + i.panningMode.toString();\n            }\n        }\n        let effectsFunction = Synth.effectsFunctionCache[signature];\n        if (effectsFunction == undefined) {\n            let effectsSource = \"return (synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) => {\";\n            const usesDelays = usesChorus || usesReverb || usesEcho || usesGranular || usesFlanger;\n            effectsSource += `\n            let effectState = instrumentState.effects[0]\n\n            const tempInstrumentSampleBufferL = synth.tempInstrumentSampleBufferL;\n            const tempInstrumentSampleBufferR = synth.tempInstrumentSampleBufferR;\n\n            let mixVolume = +instrumentState.mixVolume;\n            const mixVolumeDelta = +instrumentState.mixVolumeDelta;\n            `;\n            if (usesDelays) {\n                effectsSource += `\n\n                let delayInputMult = +instrumentState.delayInputMult;\n                const delayInputMultDelta = +instrumentState.delayInputMultDelta;`;\n            }\n            if (usesEqFilter) {\n                effectsSource += `\n\n                let filtersL = [];\n                let filtersR = [];\n\n                let filterCount = [];\n                let initialFilterInputL1 = [];\n                let initialFilterInputR1 = [];\n                let initialFilterInputL2 = [];\n                let initialFilterInputR2 = [];\n                let inputSampleL = [];\n                let inputSampleR = [];\n                const applyFilters = Synth.applyFilters;`;\n                effectsSource += `\n\n                let eqFilterVolume = [];\n                let eqFilterVolumeDelta = [];\n                `;\n            }\n            if (usesDistortion) {\n                effectsSource += `\n\n                const distortionBaseVolume = +Config.distortionBaseVolume;\n                let distortion = [];\n                let distortionDelta = [];\n                let distortionDrive = [];\n                let distortionDriveDelta = [];\n                const distortionFractionalResolution = 4.0;\n                const distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;\n                const distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;\n                const distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;\n                const distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;\n                const distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n                const distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n                const distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n                const distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;\n                const distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;\n                const distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;\n                const distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;\n                const distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;\n                const distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;\n\n                let distortionFractionalInputL1 = [];\n                let distortionFractionalInputL2 = [];\n                let distortionFractionalInputL3 = [];\n                let distortionFractionalInputR1 = [];\n                let distortionFractionalInputR2 = [];\n                let distortionFractionalInputR3 = [];\n                let distortionPrevInputL = [];\n                let distortionPrevInputR = [];\n                let distortionNextOutputL = [];\n                let distortionNextOutputR = [];\n\n                let distortionReverse = [];\n                let distortionNextInputL = [];\n                let distortionNextInputR = [];\n                let distortionOutputL1 = [];\n                let distortionOutputL2 = [];\n                let distortionOutputL3 = [];\n                let distortionOutputR1 = [];\n                let distortionOutputR2 = [];\n                let distortionOutputR3 = [];`;\n            }\n            if (usesBitcrusher) {\n                effectsSource += `\n\n                let bitcrusherPrevInputL = [];\n                let bitcrusherPrevInputR = [];\n                let bitcrusherCurrentOutputL = [];\n                let bitcrusherCurrentOutputR = [];\n                let bitcrusherPhase = [];\n                let bitcrusherPhaseDelta = [];\n                let bitcrusherPhaseDeltaScale = [];\n                let bitcrusherScale = [];\n                let bitcrusherScaleScale = [];\n                let bitcrusherFoldLevel = [];\n                let bitcrusherFoldLevelScale = [];\n\n                let lerpedInputL = [];\n                let lerpedInputR = [];\n\n                let bitcrusherWrapLevel = [];\n                let wrappedSampleL = [];\n                let wrappedSampleR = [];\n                let foldedSampleL = [];\n                let foldedSampleR = [];\n                let scaledSampleL = [];\n                let scaledSampleR = [];\n                let oldValueL = [];\n                let oldValueR = [];\n                let newValueL = [];\n                let newValueR = [];`;\n            }\n            if (usesFlanger) {\n                effectsSource += `\n\n                const flangerMask = synth.flangerDelayBufferMask >>> 0;\n                let flangerDelayLineL = [];\n                let flangerDelayLineR = [];\n                let flangerDelayPos = [];\n\n                let flanger = [];\n                let flangerDelta = [];\n                let flangerSpeed = [];\n                let flangerSpeedDelta = [];\n                let flangerDepth = [];\n                let flangerDepthDelta = [];\n                let flangerFeedback = [];\n                let flangerFeedbackDelta = [];\n\n                let flangerPhase = [];\n                let flangerRange = [];\n\n                let flangerTapIndexL = [];\n                let flangerTapIndexR = [];\n                let flangerTapEndL = [];\n                let flangerTapEndR = [];\n                let flangerTapDeltaL = [];\n                let flangerTapDeltaR = [];\n\n                let flangerTapRatioL = []; // you don't know how happy i am that this variable exists\n                let flangerTapRatioR = [];\n                let flangerTapLA = [];\n                let flangerTapLB = [];\n                let flangerTapRA = [];\n                let flangerTapRB = [];\n                let flangerTapL = [];\n                let flangerTapR = [];`;\n            }\n            if (usesChorus) {\n                effectsSource += `\n\n                const chorusMask = synth.chorusDelayBufferMask >>> 0;\n                let chorusDelayLineL = [];\n                let chorusDelayLineR = [];\n                let chorusDelayPos = [];\n\n                let chorusVoiceMult = [];\n                let chorusVoiceMultDelta = [];\n                let chorusCombinedMult = [];\n                let chorusCombinedMultDelta = [];\n\n                const chorusDuration = +Config.chorusPeriodSeconds;\n                const chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);\n                const chorusRange = synth.samplesPerSecond * Config.chorusDelayRange;\n                const chorusOffset0 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[0][0] * chorusRange;\n                const chorusOffset1 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[0][1] * chorusRange;\n                const chorusOffset2 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[0][2] * chorusRange;\n                const chorusOffset3 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[1][0] * chorusRange;\n                const chorusOffset4 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[1][1] * chorusRange;\n                const chorusOffset5 = synth.chorusDelayBufferSize - Config.chorusDelayOffsets[1][2] * chorusRange;\n\n                let chorusPhase = [];\n                let chorusTap0Index = [];\n                let chorusTap1Index = [];\n                let chorusTap2Index = [];\n                let chorusTap3Index = [];\n                let chorusTap4Index = [];\n                let chorusTap5Index = [];\n                let chorusTap0End = [];\n                let chorusTap1End = [];\n                let chorusTap2End = [];\n                let chorusTap3End = [];\n                let chorusTap4End = [];\n                let chorusTap5End = [];\n                let chorusTap0Delta = [];\n                let chorusTap1Delta = [];\n                let chorusTap2Delta = [];\n                let chorusTap3Delta = [];\n                let chorusTap4Delta = [];\n                let chorusTap5Delta = [];\n\n                let chorusTap0Ratio = [];\n                let chorusTap1Ratio = [];\n                let chorusTap2Ratio = [];\n                let chorusTap3Ratio = [];\n                let chorusTap4Ratio = [];\n                let chorusTap5Ratio = [];\n                let chorusTap0A = [];\n                let chorusTap0B = [];\n                let chorusTap1A = [];\n                let chorusTap1B = [];\n                let chorusTap2A = [];\n                let chorusTap2B = [];\n                let chorusTap3A = [];\n                let chorusTap3B = [];\n                let chorusTap4A = [];\n                let chorusTap4B = [];\n                let chorusTap5A = [];\n                let chorusTap5B = [];\n                let chorusTap0 = [];\n                let chorusTap1 = [];\n                let chorusTap2 = [];\n                let chorusTap3 = [];\n                let chorusTap4 = [];\n                let chorusTap5 = [];`;\n            }\n            if (usesEcho) {\n                effectsSource += `\n                let echoMult = [];\n                let echoMultDelta = [];\n\n                let echoDelayLineL = [];\n                let echoDelayLineR = [];\n                let echoMask = [];\n\n                let echoDelayPosL = [];\n                let echoDelayPosR = [];\n                let echoDelayOffsetStart = [];\n                let echoDelayOffsetEnd   = [];\n                let echoDelayOffsetRatio = [];\n                let echoDelayOffsetRatioDelta = [];\n                let echoPingPong = [];\n\n                let echoShelfA1 = [];\n                let echoShelfB0 = [];\n                let echoShelfB1 = [];\n                let echoShelfSampleL = [];\n                let echoShelfSampleR = [];\n                let echoShelfPrevInputL = [];\n                let echoShelfPrevInputR = [];\n\n                let echoNextInputL = [];\n                let echoNextInputR = [];\n                let echoTapStartIndexL = [];\n                let echoTapStartIndexR = [];\n                let echoTapEndIndexL   = [];\n                let echoTapEndIndexR   = [];\n                let echoTapStartL = [];\n                let echoTapEndL   = [];\n                let echoTapStartR = [];\n                let echoTapEndR   = [];\n                let echoTapL = [];\n                let echoTapR = [];`;\n            }\n            if (usesReverb) {\n                effectsSource += `\n\n                const reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.\n                let reverbDelayLine = [];\n                let reverbDelayPos = [];\n\n                let reverb = [];\n                let reverbDelta = [];\n\n                let reverbShelfA1 = [];\n                let reverbShelfB0 = [];\n                let reverbShelfB1 = [];\n                let reverbShelfSample0 = [];\n                let reverbShelfSample1 = [];\n                let reverbShelfSample2 = [];\n                let reverbShelfSample3 = [];\n                let reverbShelfPrevInput0 = [];\n                let reverbShelfPrevInput1 = [];\n                let reverbShelfPrevInput2 = [];\n                let reverbShelfPrevInput3 = [];\n\n                let reverbDelayPos1 = [];\n                let reverbDelayPos2 = [];\n                let reverbDelayPos3 = [];\n                let reverbSample0 = [];\n                let reverbSample1 = [];\n                let reverbSample2 = [];\n                let reverbSample3 = [];\n                let reverbTemp0 = [];\n                let reverbTemp1 = [];\n                let reverbTemp2 = [];\n                let reverbTemp3 = [];\n                let reverbShelfInput0 = [];\n                let reverbShelfInput1 = [];\n                let reverbShelfInput2 = [];\n                let reverbShelfInput3 = [];`;\n            }\n            if (usesRingModulation) {\n                effectsSource += `\n\n                let ringModMix = [];\n                let ringModMixDelta = [];\n                let ringModPhase = [];\n                let ringModPhaseDelta = [];\n                let ringModPhaseDeltaScale = [];\n                let ringModWaveformIndex = [];\n                let ringModMixFade = [];\n                let ringModMixFadeDelta = [];\n\n                let ringModPulseWidth = [];\n\n                let waveform = [];\n                let waveformLength = [];\n                let ringModOutputL = [];\n                let ringModOutputR = [];\n                let ringModMixF = [];\n                `;\n            }\n            if (usesPanning) {\n                effectsSource += `\n\n                const panningMask = synth.panningDelayBufferMask >>> 0;\n                let panningDelayLineL = [];\n                let panningDelayLineR = [];\n                let panningDelayPos = [];\n                let panningVolumeL      = [];\n                let panningVolumeR      = [];\n                let panningVolumeDeltaL = [];\n                let panningVolumeDeltaR = [];\n                let panningOffsetL      = [];\n                let panningOffsetR      = [];\n                let panningOffsetDeltaL = [];\n                let panningOffsetDeltaR = [];\n                let panningRatioL  = [];\n                let panningRatioR  = [];\n                let panningTapLA   = [];\n                let panningTapLB   = [];\n                let panningTapRA   = [];\n                let panningTapRB   = [];\n                let panningTapL    = [];\n                let panningTapR    = [];`;\n            }\n            if (usesGain) {\n                effectsSource += `\n\n                let gain = [];\n                let gainDelta = [];`;\n            }\n            if (usesGranular) {\n                effectsSource += `\n\n                let granularWet = [];\n                let granularMixDelta = [];\n                let granularDry = [];\n                let granularDelayLineL = [];\n                let granularDelayLineR = [];\n                let granularGrains = [];\n                let granularGrainCount = [];\n                let granularDelayLineLength = [];\n                let granularDelayLineMask = [];\n                let granularDelayLineIndex = [];\n                let usesRandomGrainLocation = [];\n                let computeGrains = [];\n                let granularOutputL = [];\n                let granularOutputR = [];\n                `;\n            }\n            for (let i = 0; i < instrumentState.effects.length; i++) {\n                let effectState = instrumentState.effects[i];\n                effectsSource += `\n\n                effectState = instrumentState.effects[` + i + `];\n                effectIndex = ` + i + `;\n                `;\n                if (usesGranular && effectState.type == 8) {\n                    effectsSource += `\n\n                    granularWet[effectIndex] = effectState.granularMix;\n                    granularMixDelta[effectIndex] = effectState.granularMixDelta;\n                    granularDry[effectIndex] = 1.0 - granularWet[effectIndex];\n                    granularDelayLineL[effectIndex] = effectState.granularDelayLineL;\n                    granularDelayLineR[effectIndex] = effectState.granularDelayLineR;\n                    granularGrains[effectIndex] = effectState.granularGrains;\n                    granularGrainCount[effectIndex] = effectState.granularGrainsLength;\n                    granularDelayLineLength[effectIndex] = granularDelayLineL.length;\n                    granularDelayLineMask[effectIndex] = granularDelayLineLength[effectIndex] - 1;\n                    granularDelayLineIndex[effectIndex] = effectState.granularDelayLineIndex;\n                    usesRandomGrainLocation[effectIndex] = effectState.usesRandomGrainLocation;\n                    computeGrains[effectIndex] = effectState.computeGrains;\n                    effectState.granularDelayLineDirty = true;\n                    `;\n                }\n                else if (usesDistortion && effectState.type == 3) {\n                    effectsSource += `\n\n                    distortion[effectIndex] = effectState.distortion;\n                    distortionDelta[effectIndex] = effectState.distortionDelta;\n                    distortionDrive[effectIndex] = effectState.distortionDrive;\n                    distortionDriveDelta[effectIndex] = effectState.distortionDriveDelta;\n                    distortionReverse[effectIndex] = 1.0 - distortion[effectIndex];\n\n                    distortionFractionalInputL1[effectIndex] = +effectState.distortionFractionalInputL1;\n                    distortionFractionalInputL2[effectIndex] = +effectState.distortionFractionalInputL2;\n                    distortionFractionalInputL3[effectIndex] = +effectState.distortionFractionalInputL3;\n                    distortionFractionalInputR1[effectIndex] = +effectState.distortionFractionalInputR1;\n                    distortionFractionalInputR2[effectIndex] = +effectState.distortionFractionalInputR2;\n                    distortionFractionalInputR3[effectIndex] = +effectState.distortionFractionalInputR3;\n                    distortionPrevInputL[effectIndex] = +effectState.distortionPrevInputL;\n                    distortionPrevInputR[effectIndex] = +effectState.distortionPrevInputR;\n                    distortionNextOutputL[effectIndex] = +effectState.distortionNextOutputL;\n                    distortionNextOutputR[effectIndex] = +effectState.distortionNextOutputR;`;\n                }\n                else if (usesBitcrusher && effectState.type == 4) {\n                    effectsSource += `\n\n                    bitcrusherPrevInputL[effectIndex] = +effectState.bitcrusherPrevInputL;\n                    bitcrusherPrevInputR[effectIndex] = +effectState.bitcrusherPrevInputR;\n                    bitcrusherCurrentOutputL[effectIndex] = +effectState.bitcrusherCurrentOutputL;\n                    bitcrusherCurrentOutputR[effectIndex] = +effectState.bitcrusherCurrentOutputR;\n                    bitcrusherPhase[effectIndex] = +effectState.bitcrusherPhase;\n                    bitcrusherPhaseDelta[effectIndex] = +effectState.bitcrusherPhaseDelta;\n                    bitcrusherPhaseDeltaScale[effectIndex] = +effectState.bitcrusherPhaseDeltaScale;\n                    bitcrusherScale[effectIndex] = +effectState.bitcrusherScale;\n                    bitcrusherScaleScale[effectIndex] = +effectState.bitcrusherScaleScale;\n                    bitcrusherFoldLevel[effectIndex] = +effectState.bitcrusherFoldLevel;\n                    bitcrusherFoldLevelScale[effectIndex] = +effectState.bitcrusherFoldLevelScale;`;\n                }\n                else if (usesRingModulation && effectState.type == 7) {\n                    effectsSource += `\n\n                    ringModMix[effectIndex] = +effectState.ringModMix;\n                    ringModMixDelta[effectIndex] = +effectState.ringModMixDelta;\n                    ringModPhase[effectIndex] = +effectState.ringModPhase;\n                    ringModPhaseDelta[effectIndex] = +effectState.ringModPhaseDelta;\n                    ringModPhaseDeltaScale[effectIndex] = +effectState.ringModPhaseDeltaScale;\n                    ringModWaveformIndex[effectIndex] = +effectState.ringModWaveformIndex;\n                    ringModMixFade[effectIndex] = +effectState.ringModMixFade;\n                    ringModMixFadeDelta[effectIndex] = +effectState.ringModMixFadeDelta;\n\n                    ringModPulseWidth[effectIndex] = +effectState.ringModPulseWidth;\n\n                    waveform[effectIndex] = Config.operatorWaves[ringModWaveformIndex[effectIndex]].samples;\n                    if (ringModWaveformIndex[effectIndex] == 2) {\n                        waveform[effectIndex] = Synth.getOperatorWave(ringModWaveformIndex[effectIndex], ringModPulseWidth[effectIndex]).samples;\n                    }\n                    waveformLength[effectIndex] = waveform[effectIndex].length - 1;\n                    `;\n                }\n                else if (usesEqFilter && effectState.type == 5) {\n                    effectsSource += `\n\n                    filtersL[effectIndex] = effectState.eqFiltersL;\n                    filtersR[effectIndex] = effectState.eqFiltersR;\n                    filterCount[effectIndex] = effectState.eqFilterCount|0;\n                    initialFilterInputL1[effectIndex] = +effectState.initialEqFilterInputL1;\n                    initialFilterInputR1[effectIndex] = +effectState.initialEqFilterInputR1;\n                    initialFilterInputL2[effectIndex] = +effectState.initialEqFilterInputL2;\n                    initialFilterInputR2[effectIndex] = +effectState.initialEqFilterInputR2;`;\n                    effectsSource += `\n\n                    eqFilterVolume[effectIndex] = +effectState.eqFilterVolume;\n                    eqFilterVolumeDelta[effectIndex] = +effectState.eqFilterVolumeDelta;`;\n                }\n                else if (usesPanning && effectState.type == 2) {\n                    effectsSource += `\n\n                    panningDelayLineL[effectIndex] = effectState.panningDelayLineL;\n                    panningDelayLineR[effectIndex] = effectState.panningDelayLineR;\n                    panningDelayPos[effectIndex] = effectState.panningDelayPos & panningMask;\n                    panningVolumeL[effectIndex]      = +effectState.panningVolumeL;\n                    panningVolumeR[effectIndex]      = +effectState.panningVolumeR;\n                    panningVolumeDeltaL[effectIndex] = +effectState.panningVolumeDeltaL;\n                    panningVolumeDeltaR[effectIndex] = +effectState.panningVolumeDeltaR;\n                    panningOffsetL[effectIndex]      = +effectState.panningOffsetL;\n                    panningOffsetR[effectIndex]      = +effectState.panningOffsetR;\n                    panningOffsetDeltaL[effectIndex] = 1.0 - effectState.panningOffsetDeltaL;\n                    panningOffsetDeltaR[effectIndex] = 1.0 - effectState.panningOffsetDeltaR;`;\n                }\n                else if (usesFlanger && effectState.type == 10) {\n                    effectsSource += `\n\n                    flangerDelayLineL[effectIndex] = effectState.flangerDelayLineL;\n                    flangerDelayLineR[effectIndex] = effectState.flangerDelayLineR;\n                    flangerDelayPos[effectIndex] = effectState.flangerDelayPos & flangerMask;\n\n                    flanger[effectIndex] = effectState.flanger;\n                    flangerDelta[effectIndex] = effectState.flangerDelta;\n                    flangerSpeed[effectIndex] = effectState.flangerSpeed;\n                    flangerSpeedDelta[effectIndex] = effectState.flangerSpeedDelta;\n                    flangerDepth[effectIndex] = effectState.flangerDepth;\n                    flangerDepthDelta[effectIndex] = effectState.flangerDepthDelta;\n                    flangerFeedback[effectIndex] = effectState.flangerFeedback;\n                    flangerFeedbackDelta[effectIndex] = effectState.flangerFeedbackDelta;\n\n                    flangerPhase[effectIndex] = effectState.flangerPhase % (Math.PI * 2.0);\n                    flangerRange[effectIndex] = flangerDepth[effectIndex];\n\n                    flangerTapIndexL[effectIndex] = flangerDelayPos[effectIndex] - flangerRange[effectIndex] - flangerRange[effectIndex] * Math.cos(flangerPhase[effectIndex]);\n                    flangerTapIndexR[effectIndex] = flangerDelayPos[effectIndex] - flangerRange[effectIndex] - flangerRange[effectIndex] * Math.sin(flangerPhase[effectIndex]);\n                    flangerPhase[effectIndex] += flangerSpeed[effectIndex] * Config.flangerPeriodMult * runLength;\n                    flangerTapEndL[effectIndex] = flangerDelayPos[effectIndex] - flangerRange[effectIndex] - flangerRange[effectIndex] * Math.cos(flangerPhase[effectIndex]) + runLength;\n                    flangerTapEndR[effectIndex] = flangerDelayPos[effectIndex] - flangerRange[effectIndex] - flangerRange[effectIndex] * Math.sin(flangerPhase[effectIndex]) + runLength;\n                    flangerTapDeltaL[effectIndex] = (flangerTapEndL[effectIndex] - flangerTapIndexL[effectIndex]) / runLength;\n                    flangerTapDeltaR[effectIndex] = (flangerTapEndR[effectIndex] - flangerTapIndexR[effectIndex]) / runLength;`;\n                }\n                else if (usesChorus && effectState.type == 1) {\n                    effectsSource += `\n\n                    chorusDelayLineL[effectIndex] = effectState.chorusDelayLineL;\n                    chorusDelayLineR[effectIndex] = effectState.chorusDelayLineR;\n                    effectState.chorusDelayLineDirty = true;\n                    chorusDelayPos[effectIndex] = effectState.chorusDelayPos & chorusMask;\n\n                    chorusVoiceMult[effectIndex] = +effectState.chorusVoiceMult;\n                    chorusVoiceMultDelta[effectIndex] = +effectState.chorusVoiceMultDelta;\n                    chorusCombinedMult[effectIndex] = +effectState.chorusCombinedMult;\n                    chorusCombinedMultDelta[effectIndex] = +effectState.chorusCombinedMultDelta;\n\n                    chorusPhase[effectIndex] = effectState.chorusPhase % (Math.PI * 2.0);\n                    chorusTap0Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset0 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][0]);\n                    chorusTap1Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset1 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][1]);\n                    chorusTap2Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset2 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][2]);\n                    chorusTap3Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset3 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][0]);\n                    chorusTap4Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset4 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][1]);\n                    chorusTap5Index[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset5 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][2]);\n                    chorusPhase[effectIndex] += chorusAngle * runLength;\n                    chorusTap0End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset0 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][0]) + runLength;\n                    chorusTap1End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset1 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][1]) + runLength;\n                    chorusTap2End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset2 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[0][2]) + runLength;\n                    chorusTap3End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset3 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][0]) + runLength;\n                    chorusTap4End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset4 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][1]) + runLength;\n                    chorusTap5End[effectIndex] = chorusDelayPos[effectIndex] + chorusOffset5 - chorusRange * Math.sin(chorusPhase[effectIndex] + Config.chorusPhaseOffsets[1][2]) + runLength;\n                    chorusTap0Delta[effectIndex] = (chorusTap0End[effectIndex] - chorusTap0Index[effectIndex]) / runLength;\n                    chorusTap1Delta[effectIndex] = (chorusTap1End[effectIndex] - chorusTap1Index[effectIndex]) / runLength;\n                    chorusTap2Delta[effectIndex] = (chorusTap2End[effectIndex] - chorusTap2Index[effectIndex]) / runLength;\n                    chorusTap3Delta[effectIndex] = (chorusTap3End[effectIndex] - chorusTap3Index[effectIndex]) / runLength;\n                    chorusTap4Delta[effectIndex] = (chorusTap4End[effectIndex] - chorusTap4Index[effectIndex]) / runLength;\n                    chorusTap5Delta[effectIndex] = (chorusTap5End[effectIndex] - chorusTap5Index[effectIndex]) / runLength;`;\n                }\n                else if (usesEcho && effectState.type == 6) {\n                    effectsSource += `\n                    echoMult[effectIndex] = +effectState.echoMult;\n                    echoMultDelta[effectIndex] = +effectState.echoMultDelta;\n\n                    echoDelayLineL[effectIndex] = effectState.echoDelayLineL;\n                    echoDelayLineR[effectIndex] = effectState.echoDelayLineR;\n                    echoMask[effectIndex] = (echoDelayLineL[effectIndex].length - 1) >>> 0;\n                    effectState.echoDelayLineDirty = true;\n\n                    echoDelayPosL[effectIndex] = effectState.echoDelayPosL & echoMask[effectIndex];\n                    echoDelayPosR[effectIndex] = effectState.echoDelayPosR & echoMask[effectIndex];\n                    echoDelayOffsetStart[effectIndex] = (echoDelayLineL[effectIndex].length - effectState.echoDelayOffsetStart) & echoMask[effectIndex];\n                    echoDelayOffsetEnd[effectIndex]   = (echoDelayLineL[effectIndex].length - effectState.echoDelayOffsetEnd) & echoMask[effectIndex];\n                    echoDelayOffsetRatio[effectIndex] = +effectState.echoDelayOffsetRatio;\n                    echoDelayOffsetRatioDelta[effectIndex] = +effectState.echoDelayOffsetRatioDelta;\n                    echoPingPong[effectIndex] = effectState.echoPingPong;\n\n                    echoShelfA1[effectIndex] = +effectState.echoShelfA1;\n                    echoShelfB0[effectIndex] = +effectState.echoShelfB0;\n                    echoShelfB1[effectIndex] = +effectState.echoShelfB1;\n                    echoShelfSampleL[effectIndex] = +effectState.echoShelfSampleL;\n                    echoShelfSampleR[effectIndex] = +effectState.echoShelfSampleR;\n                    echoShelfPrevInputL[effectIndex] = +effectState.echoShelfPrevInputL;\n                    echoShelfPrevInputR[effectIndex] = +effectState.echoShelfPrevInputR;`;\n                }\n                else if (usesReverb && effectState.type == 0) {\n                    effectsSource += `\n\n                    reverbDelayLine[effectIndex] = effectState.reverbDelayLine;\n                    effectState.reverbDelayLineDirty = true;\n                    reverbDelayPos[effectIndex] = effectState.reverbDelayPos & reverbMask;\n\n                    reverb[effectIndex] = +effectState.reverbMult;\n                    reverbDelta[effectIndex] = +effectState.reverbMultDelta;\n\n                    reverbShelfA1[effectIndex] = +effectState.reverbShelfA1;\n                    reverbShelfB0[effectIndex] = +effectState.reverbShelfB0;\n                    reverbShelfB1[effectIndex] = +effectState.reverbShelfB1;\n                    reverbShelfSample0[effectIndex] = +effectState.reverbShelfSample0;\n                    reverbShelfSample1[effectIndex] = +effectState.reverbShelfSample1;\n                    reverbShelfSample2[effectIndex] = +effectState.reverbShelfSample2;\n                    reverbShelfSample3[effectIndex] = +effectState.reverbShelfSample3;\n                    reverbShelfPrevInput0[effectIndex] = +effectState.reverbShelfPrevInput0;\n                    reverbShelfPrevInput1[effectIndex] = +effectState.reverbShelfPrevInput1;\n                    reverbShelfPrevInput2[effectIndex] = +effectState.reverbShelfPrevInput2;\n                    reverbShelfPrevInput3[effectIndex] = +effectState.reverbShelfPrevInput3;`;\n                }\n                else if (usesGain && effectState.type == 9) {\n                    effectsSource += `\n\n                    gain[effectIndex] = +effectState.gain;\n                    gainDelta[effectIndex] = +effectState.gainDelta;`;\n                }\n            }\n            if (isStereo) {\n                effectsSource += `\n\n                const stopIndex = bufferIndex + runLength;\n                for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n                    let sample = 0.0;\n                    let sampleL = tempInstrumentSampleBufferL[sampleIndex];\n                    let sampleR = tempInstrumentSampleBufferR[sampleIndex];\n                    tempInstrumentSampleBufferL[sampleIndex] = 0.0;\n                    tempInstrumentSampleBufferR[sampleIndex] = 0.0;`;\n            }\n            else {\n                effectsSource += `\n\n                const stopIndex = bufferIndex + runLength;\n                for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n                    let sampleL = tempInstrumentSampleBufferL[sampleIndex];\n                    let sampleR = tempInstrumentSampleBufferL[sampleIndex];\n                    tempInstrumentSampleBufferL[sampleIndex] = 0.0;\n                    tempInstrumentSampleBufferR[sampleIndex] = 0.0;`;\n            }\n            for (let i = 0; i < instrumentState.effects.length; i++) {\n                let effectState = instrumentState.effects[i];\n                effectsSource += `\n\n                effectIndex = ` + i + `;\n                `;\n                if (usesBitcrusher && effectState.type == 4) {\n                    effectsSource += `\n\n                    bitcrusherPhase[effectIndex] += bitcrusherPhaseDelta[effectIndex];\n                    if (bitcrusherPhase[effectIndex] < 1.0) {\n                        bitcrusherPrevInputL[effectIndex] = sampleL;\n                        bitcrusherPrevInputR[effectIndex] = sampleR;\n                        sampleL = bitcrusherCurrentOutputL[effectIndex];\n                        sampleR = bitcrusherCurrentOutputR[effectIndex];\n                    } else {\n                        bitcrusherPhase[effectIndex] = bitcrusherPhase[effectIndex] % 1.0;\n\n                        lerpedInputL[effectIndex] = sampleL + (bitcrusherPrevInputL[effectIndex] - sampleL) * (bitcrusherPhase[effectIndex] / bitcrusherPhaseDelta[effectIndex]);\n                        lerpedInputR[effectIndex] = sampleR + (bitcrusherPrevInputR[effectIndex] - sampleR) * (bitcrusherPhase[effectIndex] / bitcrusherPhaseDelta[effectIndex]);\n                        bitcrusherPrevInputL[effectIndex] = sampleL;\n                        bitcrusherPrevInputR[effectIndex] = sampleR;\n\n                        bitcrusherWrapLevel[effectIndex] = bitcrusherFoldLevel[effectIndex] * 4.0;\n                        wrappedSampleL[effectIndex] = (((lerpedInputL[effectIndex] + bitcrusherFoldLevel[effectIndex]) % bitcrusherWrapLevel[effectIndex]) + bitcrusherWrapLevel[effectIndex]) % bitcrusherWrapLevel[effectIndex];\n                        wrappedSampleR[effectIndex] = (((lerpedInputR[effectIndex] + bitcrusherFoldLevel[effectIndex]) % bitcrusherWrapLevel[effectIndex]) + bitcrusherWrapLevel[effectIndex]) % bitcrusherWrapLevel[effectIndex];\n                        foldedSampleL[effectIndex] = bitcrusherFoldLevel[effectIndex] - Math.abs(bitcrusherFoldLevel[effectIndex] * 2.0 - wrappedSampleL[effectIndex]);\n                        foldedSampleR[effectIndex] = bitcrusherFoldLevel[effectIndex] - Math.abs(bitcrusherFoldLevel[effectIndex] * 2.0 - wrappedSampleR[effectIndex]);\n                        scaledSampleL[effectIndex] = foldedSampleL[effectIndex] / bitcrusherScale[effectIndex];\n                        scaledSampleR[effectIndex] = foldedSampleR[effectIndex] / bitcrusherScale[effectIndex];\n                        oldValueL[effectIndex] = bitcrusherCurrentOutputL[effectIndex];\n                        oldValueR[effectIndex] = bitcrusherCurrentOutputR[effectIndex];\n                        newValueL[effectIndex] = (((scaledSampleL[effectIndex] > 0 ? scaledSampleL[effectIndex] + 1 : scaledSampleL[effectIndex])|0)-.5) * bitcrusherScale[effectIndex];\n                        newValueR[effectIndex] = (((scaledSampleR[effectIndex] > 0 ? scaledSampleR[effectIndex] + 1 : scaledSampleR[effectIndex])|0)-.5) * bitcrusherScale[effectIndex];\n\n                        sampleL = oldValueL[effectIndex] + (newValueL[effectIndex] - oldValueL[effectIndex]) * (bitcrusherPhase[effectIndex] / bitcrusherPhaseDelta[effectIndex]);\n                        sampleR = oldValueR[effectIndex] + (newValueR[effectIndex] - oldValueR[effectIndex]) * (bitcrusherPhase[effectIndex] / bitcrusherPhaseDelta[effectIndex]);\n                        bitcrusherCurrentOutputL[effectIndex] = newValueL[effectIndex];\n                        bitcrusherCurrentOutputR[effectIndex] = newValueR[effectIndex];\n                    }\n                    bitcrusherPhaseDelta[effectIndex] *= bitcrusherPhaseDeltaScale[effectIndex];\n                    bitcrusherScale[effectIndex] *= bitcrusherScaleScale[effectIndex];\n                    bitcrusherFoldLevel[effectIndex] *= bitcrusherFoldLevelScale[effectIndex];`;\n                }\n                else if (usesDistortion && effectState.type == 3) {\n                    effectsSource += `\n\n                    distortionNextInputL[effectIndex] = sampleL * distortionDrive[effectIndex];\n                    distortionNextInputR[effectIndex] = sampleR * distortionDrive[effectIndex];\n                    sampleL = distortionNextOutputL[effectIndex];\n                    sampleR = distortionNextOutputR[effectIndex];\n                    distortionNextOutputL[effectIndex] = distortionNextInputL[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionNextInputL[effectIndex]) + distortion[effectIndex]);\n                    distortionNextOutputR[effectIndex] = distortionNextInputR[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionNextInputR[effectIndex]) + distortion[effectIndex]);\n                    distortionFractionalInputL1[effectIndex] = distortionFractionalDelayG1 * distortionNextInputL[effectIndex] + distortionPrevInputL[effectIndex] - distortionFractionalDelayG1 * distortionFractionalInputL1[effectIndex];\n                    distortionFractionalInputL2[effectIndex] = distortionFractionalDelayG2 * distortionNextInputL[effectIndex] + distortionPrevInputL[effectIndex] - distortionFractionalDelayG2 * distortionFractionalInputL2[effectIndex];\n                    distortionFractionalInputL3[effectIndex] = distortionFractionalDelayG3 * distortionNextInputL[effectIndex] + distortionPrevInputL[effectIndex] - distortionFractionalDelayG3 * distortionFractionalInputL3[effectIndex];\n                    distortionFractionalInputR1[effectIndex] = distortionFractionalDelayG1 * distortionNextInputR[effectIndex] + distortionPrevInputR[effectIndex] - distortionFractionalDelayG1 * distortionFractionalInputR1[effectIndex];\n                    distortionFractionalInputR2[effectIndex] = distortionFractionalDelayG2 * distortionNextInputR[effectIndex] + distortionPrevInputR[effectIndex] - distortionFractionalDelayG2 * distortionFractionalInputR2[effectIndex];\n                    distortionFractionalInputR3[effectIndex] = distortionFractionalDelayG3 * distortionNextInputR[effectIndex] + distortionPrevInputR[effectIndex] - distortionFractionalDelayG3 * distortionFractionalInputR3[effectIndex];\n                    distortionOutputL1[effectIndex] = distortionFractionalInputL1[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputL1[effectIndex]) + distortion[effectIndex]);\n                    distortionOutputL2[effectIndex] = distortionFractionalInputL2[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputL2[effectIndex]) + distortion[effectIndex]);\n                    distortionOutputL3[effectIndex] = distortionFractionalInputL3[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputL3[effectIndex]) + distortion[effectIndex]);\n                    distortionOutputR1[effectIndex] = distortionFractionalInputR1[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputR1[effectIndex]) + distortion[effectIndex]);\n                    distortionOutputR2[effectIndex] = distortionFractionalInputR2[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputR2[effectIndex]) + distortion[effectIndex]);\n                    distortionOutputR3[effectIndex] = distortionFractionalInputR3[effectIndex] / (distortionReverse[effectIndex] * Math.abs(distortionFractionalInputR3[effectIndex]) + distortion[effectIndex]);\n                    distortionNextOutputL[effectIndex] += distortionOutputL1[effectIndex] * distortionNextOutputWeight1 + distortionOutputL2[effectIndex] * distortionNextOutputWeight2 + distortionOutputL3[effectIndex] * distortionNextOutputWeight3;\n                    distortionNextOutputR[effectIndex] += distortionOutputR1[effectIndex] * distortionNextOutputWeight1 + distortionOutputR2[effectIndex] * distortionNextOutputWeight2 + distortionOutputR3[effectIndex] * distortionNextOutputWeight3;\n                    sampleL += distortionOutputL1[effectIndex] * distortionPrevOutputWeight1 + distortionOutputL2[effectIndex] * distortionPrevOutputWeight2 + distortionOutputL3[effectIndex] * distortionPrevOutputWeight3;\n                    sampleR += distortionOutputR1[effectIndex] * distortionPrevOutputWeight1 + distortionOutputR2[effectIndex] * distortionPrevOutputWeight2 + distortionOutputR3[effectIndex] * distortionPrevOutputWeight3;\n                    sampleL *= distortionOversampleCompensation;\n                    sampleR *= distortionOversampleCompensation;\n                    distortionPrevInputL[effectIndex] = distortionNextInputL[effectIndex];\n                    distortionPrevInputR[effectIndex] = distortionNextInputR[effectIndex];\n                    distortion[effectIndex] += distortionDelta[effectIndex];\n                    distortionDrive[effectIndex] += distortionDriveDelta[effectIndex];`;\n                }\n                else if (usesGain && effectState.type == 9) {\n                    effectsSource += `\n\n                    sampleL *= gain[effectIndex];\n                    sampleR *= gain[effectIndex];\n                    `;\n                }\n                else if (usesPanning && effectState.type == 2) {\n                    effectsSource += `\n\n                    panningDelayLineL[effectIndex][panningDelayPos[effectIndex]] = sampleL;\n                    panningDelayLineR[effectIndex][panningDelayPos[effectIndex]] = sampleR;\n                    panningRatioL[effectIndex]  = panningOffsetL[effectIndex] % 1;\n                    panningRatioR[effectIndex]  = panningOffsetR[effectIndex] % 1;\n                    panningTapLA[effectIndex]   = panningDelayLineL[effectIndex][(panningOffsetL[effectIndex]) & panningMask];\n                    panningTapLB[effectIndex]   = panningDelayLineL[effectIndex][(panningOffsetL[effectIndex] + 1) & panningMask];\n                    panningTapRA[effectIndex]   = panningDelayLineR[effectIndex][(panningOffsetR[effectIndex]) & panningMask];\n                    panningTapRB[effectIndex]   = panningDelayLineR[effectIndex][(panningOffsetR[effectIndex] + 1) & panningMask];\n                    panningTapL[effectIndex]    = panningTapLA[effectIndex] + (panningTapLB[effectIndex] - panningTapLA[effectIndex]) * panningRatioL[effectIndex];\n                    panningTapR[effectIndex]    = panningTapRA[effectIndex] + (panningTapRB[effectIndex] - panningTapRA[effectIndex]) * panningRatioR[effectIndex];\n                    `;\n                    if (effectState.panningMode == 0) {\n                        effectsSource += `\n\n                    sampleL = panningTapL[effectIndex] * panningVolumeL[effectIndex];\n                    sampleR = panningTapR[effectIndex] * panningVolumeR[effectIndex];\n                    panningDelayPos[effectIndex] = (panningDelayPos[effectIndex] + 1) & panningMask;\n                    panningVolumeL[effectIndex] += panningVolumeDeltaL[effectIndex];\n                    panningVolumeR[effectIndex] += panningVolumeDeltaR[effectIndex];\n                    panningOffsetL[effectIndex] += panningOffsetDeltaL[effectIndex];\n                    panningOffsetR[effectIndex] += panningOffsetDeltaR[effectIndex];`;\n                    }\n                    else if (effectState.panningMode == 1) {\n                        effectsSource += `\n\n                    sampleL = panningTapL[effectIndex] * panningVolumeL[effectIndex] + Math.max(0, panningVolumeL[effectIndex] - panningVolumeR[effectIndex]) * panningTapR[effectIndex];\n                    sampleR = panningTapR[effectIndex] * panningVolumeR[effectIndex] + Math.max(0, panningVolumeR[effectIndex] - panningVolumeL[effectIndex]) * panningTapL[effectIndex];\n                    panningDelayPos[effectIndex] = (panningDelayPos[effectIndex] + 1) & panningMask;\n                    panningVolumeL[effectIndex] += panningVolumeDeltaL[effectIndex];\n                    panningVolumeR[effectIndex] += panningVolumeDeltaR[effectIndex];\n                    panningOffsetL[effectIndex] += panningOffsetDeltaL[effectIndex];\n                    panningOffsetR[effectIndex] += panningOffsetDeltaR[effectIndex];`;\n                    }\n                    else if (effectState.panningMode == 2) {\n                        effectsSource += `\n\n                    sampleL = (panningTapL[effectIndex] + panningTapR[effectIndex]) / 2.0\n                    sampleR = sampleL\n                    sampleL *= panningVolumeL[effectIndex];\n                    sampleR *= panningVolumeR[effectIndex];\n                    panningDelayPos[effectIndex] = (panningDelayPos[effectIndex] + 1) & panningMask;\n                    panningVolumeL[effectIndex] += panningVolumeDeltaL[effectIndex];\n                    panningVolumeR[effectIndex] += panningVolumeDeltaR[effectIndex];\n                    panningOffsetL[effectIndex] += panningOffsetDeltaL[effectIndex];\n                    panningOffsetR[effectIndex] += panningOffsetDeltaR[effectIndex];`;\n                    }\n                }\n                else if (usesFlanger && effectState.type == 10) {\n                    effectsSource += `\n\n                    flangerTapRatioL[effectIndex] = flangerTapIndexL[effectIndex] % 1;\n                    flangerTapRatioR[effectIndex] = flangerTapIndexR[effectIndex] % 1;\n                    flangerTapLA[effectIndex] = flangerDelayLineL[effectIndex][(flangerTapIndexL[effectIndex]) & flangerMask];\n                    flangerTapLB[effectIndex] = flangerDelayLineL[effectIndex][(flangerTapIndexL[effectIndex] + 1) & flangerMask];\n                    flangerTapRA[effectIndex] = flangerDelayLineR[effectIndex][(flangerTapIndexR[effectIndex]) & flangerMask];\n                    flangerTapRB[effectIndex] = flangerDelayLineR[effectIndex][(flangerTapIndexR[effectIndex] + 1) & flangerMask];\n                    flangerTapL[effectIndex] = flangerTapLA[effectIndex] + (flangerTapLB[effectIndex] - flangerTapLA[effectIndex]) * flangerTapRatioL[effectIndex];\n                    flangerTapR[effectIndex] = flangerTapRA[effectIndex] + (flangerTapRB[effectIndex] - flangerTapRA[effectIndex]) * flangerTapRatioR[effectIndex];\n\n                    flangerDelayLineL[effectIndex][flangerDelayPos[effectIndex]] = sampleL * delayInputMult;\n                    flangerDelayLineR[effectIndex][flangerDelayPos[effectIndex]] = sampleR * delayInputMult;\n                    sampleL = (sampleL + flanger[effectIndex] * flangerTapL[effectIndex]) * (1 - flanger[effectIndex] * Config.flangerVolumeMult);\n                    sampleR = (sampleR + flanger[effectIndex] * flangerTapR[effectIndex]) * (1 - flanger[effectIndex] * Config.flangerVolumeMult);\n                    flangerDelayLineL[effectIndex][flangerDelayPos[effectIndex]] = flangerDelayLineL[effectIndex][flangerDelayPos[effectIndex]] * (1 - flangerFeedback[effectIndex]) - sampleL * flangerFeedback[effectIndex];\n                    flangerDelayLineR[effectIndex][flangerDelayPos[effectIndex]] = flangerDelayLineR[effectIndex][flangerDelayPos[effectIndex]] * (1 - flangerFeedback[effectIndex]) - sampleR * flangerFeedback[effectIndex];\n                    flangerDelayPos[effectIndex] = (flangerDelayPos[effectIndex] + 1) & flangerMask;\n                    flangerTapIndexL[effectIndex] += flangerTapDeltaL[effectIndex];\n                    flangerTapIndexR[effectIndex] += flangerTapDeltaR[effectIndex];\n\n                    flanger[effectIndex] += flangerDelta[effectIndex];\n                    flangerSpeed[effectIndex] += flangerSpeedDelta[effectIndex];\n                    flangerDepth[effectIndex] += flangerDepthDelta[effectIndex];\n                    flangerFeedback[effectIndex] += flangerFeedbackDelta[effectIndex];`;\n                }\n                else if (usesChorus && effectState.type == 1) {\n                    effectsSource += `\n\n                    chorusTap0Ratio[effectIndex] = chorusTap0Index[effectIndex] % 1;\n                    chorusTap1Ratio[effectIndex] = chorusTap1Index[effectIndex] % 1;\n                    chorusTap2Ratio[effectIndex] = chorusTap2Index[effectIndex] % 1;\n                    chorusTap3Ratio[effectIndex] = chorusTap3Index[effectIndex] % 1;\n                    chorusTap4Ratio[effectIndex] = chorusTap4Index[effectIndex] % 1;\n                    chorusTap5Ratio[effectIndex] = chorusTap5Index[effectIndex] % 1;\n                    chorusTap0A[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap0Index[effectIndex]) & chorusMask];\n                    chorusTap0B[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap0Index[effectIndex] + 1) & chorusMask];\n                    chorusTap1A[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap1Index[effectIndex]) & chorusMask];\n                    chorusTap1B[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap1Index[effectIndex] + 1) & chorusMask];\n                    chorusTap2A[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap2Index[effectIndex]) & chorusMask];\n                    chorusTap2B[effectIndex] = chorusDelayLineL[effectIndex][(chorusTap2Index[effectIndex] + 1) & chorusMask];\n                    chorusTap3A[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap3Index[effectIndex]) & chorusMask];\n                    chorusTap3B[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap3Index[effectIndex] + 1) & chorusMask];\n                    chorusTap4A[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap4Index[effectIndex]) & chorusMask];\n                    chorusTap4B[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap4Index[effectIndex] + 1) & chorusMask];\n                    chorusTap5A[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap5Index[effectIndex]) & chorusMask];\n                    chorusTap5B[effectIndex] = chorusDelayLineR[effectIndex][(chorusTap5Index[effectIndex] + 1) & chorusMask];\n                    chorusTap0[effectIndex] = chorusTap0A[effectIndex] + (chorusTap0B[effectIndex] - chorusTap0A[effectIndex]) * chorusTap0Ratio[effectIndex];\n                    chorusTap1[effectIndex] = chorusTap1A[effectIndex] + (chorusTap1B[effectIndex] - chorusTap1A[effectIndex]) * chorusTap1Ratio[effectIndex];\n                    chorusTap2[effectIndex] = chorusTap2A[effectIndex] + (chorusTap2B[effectIndex] - chorusTap2A[effectIndex]) * chorusTap2Ratio[effectIndex];\n                    chorusTap3[effectIndex] = chorusTap3A[effectIndex] + (chorusTap3B[effectIndex] - chorusTap3A[effectIndex]) * chorusTap3Ratio[effectIndex];\n                    chorusTap4[effectIndex] = chorusTap4A[effectIndex] + (chorusTap4B[effectIndex] - chorusTap4A[effectIndex]) * chorusTap4Ratio[effectIndex];\n                    chorusTap5[effectIndex] = chorusTap5A[effectIndex] + (chorusTap5B[effectIndex] - chorusTap5A[effectIndex]) * chorusTap5Ratio[effectIndex];\n                    chorusDelayLineL[effectIndex][chorusDelayPos[effectIndex]] = sampleL * delayInputMult;\n                    chorusDelayLineR[effectIndex][chorusDelayPos[effectIndex]] = sampleR * delayInputMult;\n                    sampleL = chorusCombinedMult[effectIndex] * (sampleL + chorusVoiceMult[effectIndex] * (chorusTap1[effectIndex] - chorusTap0[effectIndex] - chorusTap2[effectIndex]));\n                    sampleR = chorusCombinedMult[effectIndex] * (sampleR + chorusVoiceMult[effectIndex] * (chorusTap4[effectIndex] - chorusTap3[effectIndex] - chorusTap5[effectIndex]));\n                    chorusDelayPos[effectIndex] = (chorusDelayPos[effectIndex] + 1) & chorusMask;\n                    chorusTap0Index[effectIndex] += chorusTap0Delta[effectIndex];\n                    chorusTap1Index[effectIndex] += chorusTap1Delta[effectIndex];\n                    chorusTap2Index[effectIndex] += chorusTap2Delta[effectIndex];\n                    chorusTap3Index[effectIndex] += chorusTap3Delta[effectIndex];\n                    chorusTap4Index[effectIndex] += chorusTap4Delta[effectIndex];\n                    chorusTap5Index[effectIndex] += chorusTap5Delta[effectIndex];\n                    chorusVoiceMult[effectIndex] += chorusVoiceMultDelta[effectIndex];\n                    chorusCombinedMult[effectIndex] += chorusCombinedMultDelta[effectIndex];`;\n                }\n                else if (usesEcho && effectState.type == 6) {\n                    effectsSource += `\n\n                    echoNextInputL[effectIndex] = (sampleL + sampleR) / 2;\n                    echoNextInputR[effectIndex] = (sampleL + sampleR) / 2;\n                    echoTapStartIndexL[effectIndex] = (echoDelayPosL[effectIndex] + echoDelayOffsetStart[effectIndex]) & echoMask[effectIndex];\n                    echoTapStartIndexR[effectIndex] = (echoDelayPosR[effectIndex] + echoDelayOffsetStart[effectIndex]) & echoMask[effectIndex];\n                    echoTapEndIndexL[effectIndex]   = (echoDelayPosL[effectIndex] + echoDelayOffsetEnd[effectIndex]) & echoMask[effectIndex];\n                    echoTapEndIndexR[effectIndex]   = (echoDelayPosR[effectIndex] + echoDelayOffsetEnd[effectIndex]) & echoMask[effectIndex];\n                    echoTapStartL[effectIndex] = echoDelayLineL[effectIndex][echoTapStartIndexL[effectIndex]];\n                    echoTapEndL[effectIndex]   = echoDelayLineL[effectIndex][echoTapEndIndexL[effectIndex]];\n                    echoTapStartR[effectIndex] = echoDelayLineR[effectIndex][echoTapStartIndexR[effectIndex]];\n                    echoTapEndR[effectIndex]   = echoDelayLineR[effectIndex][echoTapEndIndexR[effectIndex]];\n                    echoTapL[effectIndex] = (echoTapStartL[effectIndex] + (echoTapEndL[effectIndex] - echoTapStartL[effectIndex]) * echoDelayOffsetRatio[effectIndex]) * echoMult[effectIndex];\n                    echoTapR[effectIndex] = (echoTapStartR[effectIndex] + (echoTapEndR[effectIndex] - echoTapStartR[effectIndex]) * echoDelayOffsetRatio[effectIndex]) * echoMult[effectIndex];\n\n                    echoShelfSampleL[effectIndex] = echoShelfB0[effectIndex] * echoTapL[effectIndex] + echoShelfB1[effectIndex] * echoShelfPrevInputL[effectIndex] - echoShelfA1[effectIndex] * echoShelfSampleL[effectIndex];\n                    echoShelfSampleR[effectIndex] = echoShelfB0[effectIndex] * echoTapR[effectIndex] + echoShelfB1[effectIndex] * echoShelfPrevInputR[effectIndex] - echoShelfA1[effectIndex] * echoShelfSampleR[effectIndex];\n                    echoShelfPrevInputL[effectIndex] = echoTapL[effectIndex];\n                    echoShelfPrevInputR[effectIndex] = echoTapR[effectIndex];\n                    sampleL += echoShelfSampleL[effectIndex];\n                    sampleR += echoShelfSampleR[effectIndex];\n\n                    echoDelayLineL[effectIndex][echoDelayPosL[effectIndex]] = (sampleL * (1 - Math.abs(echoPingPong[effectIndex])) + (echoNextInputL[effectIndex] * Math.max(0, echoPingPong[effectIndex]) + echoShelfSampleR[effectIndex]) * Math.abs(echoPingPong[effectIndex])) * delayInputMult;\n                    echoDelayLineR[effectIndex][echoDelayPosR[effectIndex]] = (sampleR * (1 - Math.abs(echoPingPong[effectIndex])) + (echoNextInputR[effectIndex] * Math.max(0, -echoPingPong[effectIndex]) + echoShelfSampleL[effectIndex]) * Math.abs(echoPingPong[effectIndex])) * delayInputMult;\n                    echoDelayPosL[effectIndex] = (echoDelayPosL[effectIndex] + 1) & echoMask[effectIndex];\n                    echoDelayPosR[effectIndex] = (echoDelayPosR[effectIndex] + 1) & echoMask[effectIndex];\n                    echoDelayOffsetRatio[effectIndex] += echoDelayOffsetRatioDelta[effectIndex];\n                    echoMult[effectIndex] += echoMultDelta[effectIndex];\n                    `;\n                }\n                else if (usesReverb && effectState.type == 0) {\n                    effectsSource += `\n\n                    // Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\n                    // good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\n                    // Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\n                    // Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\n                    reverbDelayPos1[effectIndex] = (reverbDelayPos[effectIndex] +  3041) & reverbMask;\n                    reverbDelayPos2[effectIndex] = (reverbDelayPos[effectIndex] +  6426) & reverbMask;\n                    reverbDelayPos3[effectIndex] = (reverbDelayPos[effectIndex] + 10907) & reverbMask;\n                    reverbSample0[effectIndex] = (reverbDelayLine[effectIndex][reverbDelayPos[effectIndex]]);\n                    reverbSample1[effectIndex] = reverbDelayLine[effectIndex][reverbDelayPos1[effectIndex]];\n                    reverbSample2[effectIndex] = reverbDelayLine[effectIndex][reverbDelayPos2[effectIndex]];\n                    reverbSample3[effectIndex] = reverbDelayLine[effectIndex][reverbDelayPos3[effectIndex]];\n                    reverbTemp0[effectIndex] = -(reverbSample0[effectIndex] + sampleL) + reverbSample1[effectIndex];\n                    reverbTemp1[effectIndex] = -(reverbSample0[effectIndex] + sampleR) - reverbSample1[effectIndex];\n                    reverbTemp2[effectIndex] = -reverbSample2[effectIndex] + reverbSample3[effectIndex];\n                    reverbTemp3[effectIndex] = -reverbSample2[effectIndex] - reverbSample3[effectIndex];\n                    reverbShelfInput0[effectIndex] = (reverbTemp0[effectIndex] + reverbTemp2[effectIndex]) * reverb[effectIndex];\n                    reverbShelfInput1[effectIndex] = (reverbTemp1[effectIndex] + reverbTemp3[effectIndex]) * reverb[effectIndex];\n                    reverbShelfInput2[effectIndex] = (reverbTemp0[effectIndex] - reverbTemp2[effectIndex]) * reverb[effectIndex];\n                    reverbShelfInput3[effectIndex] = (reverbTemp1[effectIndex] - reverbTemp3[effectIndex]) * reverb[effectIndex];\n                    reverbShelfSample0[effectIndex] = reverbShelfB0[effectIndex] * reverbShelfInput0[effectIndex] + reverbShelfB1[effectIndex] * reverbShelfPrevInput0[effectIndex] - reverbShelfA1[effectIndex] * reverbShelfSample0[effectIndex];\n                    reverbShelfSample1[effectIndex] = reverbShelfB0[effectIndex] * reverbShelfInput1[effectIndex] + reverbShelfB1[effectIndex] * reverbShelfPrevInput1[effectIndex] - reverbShelfA1[effectIndex] * reverbShelfSample1[effectIndex];\n                    reverbShelfSample2[effectIndex] = reverbShelfB0[effectIndex] * reverbShelfInput2[effectIndex] + reverbShelfB1[effectIndex] * reverbShelfPrevInput2[effectIndex] - reverbShelfA1[effectIndex] * reverbShelfSample2[effectIndex];\n                    reverbShelfSample3[effectIndex] = reverbShelfB0[effectIndex] * reverbShelfInput3[effectIndex] + reverbShelfB1[effectIndex] * reverbShelfPrevInput3[effectIndex] - reverbShelfA1[effectIndex] * reverbShelfSample3[effectIndex];\n                    reverbShelfPrevInput0[effectIndex] = reverbShelfInput0[effectIndex];\n                    reverbShelfPrevInput1[effectIndex] = reverbShelfInput1[effectIndex];\n                    reverbShelfPrevInput2[effectIndex] = reverbShelfInput2[effectIndex];\n                    reverbShelfPrevInput3[effectIndex] = reverbShelfInput3[effectIndex];\n                    reverbDelayLine[effectIndex][reverbDelayPos1[effectIndex]] = reverbShelfSample0[effectIndex] * delayInputMult;\n                    reverbDelayLine[effectIndex][reverbDelayPos2[effectIndex]] = reverbShelfSample1[effectIndex] * delayInputMult;\n                    reverbDelayLine[effectIndex][reverbDelayPos3[effectIndex]] = reverbShelfSample2[effectIndex] * delayInputMult;\n                    reverbDelayLine[effectIndex][reverbDelayPos[effectIndex] ] = reverbShelfSample3[effectIndex] * delayInputMult;\n                    reverbDelayPos[effectIndex] = (reverbDelayPos[effectIndex] + 1) & reverbMask;\n                    sampleL += reverbSample1[effectIndex] + reverbSample2[effectIndex] + reverbSample3[effectIndex];\n                    sampleR += reverbSample0[effectIndex] + reverbSample2[effectIndex] - reverbSample3[effectIndex];\n                    reverb[effectIndex] += reverbDelta[effectIndex];`;\n                }\n                else if (usesEqFilter && effectState.type == 5) {\n                    effectsSource += `\n\n                    inputSampleL[effectIndex] = sampleL;\n                    inputSampleR[effectIndex] = sampleR;\n                    sampleL = applyFilters(inputSampleL[effectIndex], initialFilterInputL1[effectIndex], initialFilterInputL2[effectIndex], filterCount[effectIndex], filtersL[effectIndex]);\n                    sampleR = applyFilters(inputSampleR[effectIndex], initialFilterInputR1[effectIndex], initialFilterInputR2[effectIndex], filterCount[effectIndex], filtersR[effectIndex]);\n                    initialFilterInputL2[effectIndex] = initialFilterInputL1[effectIndex];\n                    initialFilterInputR2[effectIndex] = initialFilterInputR1[effectIndex];\n                    initialFilterInputL1[effectIndex] = inputSampleL[effectIndex];\n                    initialFilterInputR1[effectIndex] = inputSampleR[effectIndex];`;\n                    effectsSource += `\n\n                    sampleL *= eqFilterVolume[effectIndex];\n                    sampleR *= eqFilterVolume[effectIndex];\n                    eqFilterVolume[effectIndex] += eqFilterVolumeDelta[effectIndex];`;\n                }\n                else if (usesRingModulation && effectState.type == 7) {\n                    effectsSource += `\n\n\t\t\t\t\tringModOutputL[effectIndex] = sampleL * waveform[effectIndex][(ringModPhase[effectIndex]*waveformLength[effectIndex])|0];\n\t\t\t\t\tringModOutputR[effectIndex] = sampleR * waveform[effectIndex][(ringModPhase[effectIndex]*waveformLength[effectIndex])|0];\n\t\t\t\t\tringModMixF[effectIndex] = Math.max(0, ringModMix[effectIndex] * ringModMixFade[effectIndex]);\n\t\t\t\t\tsampleL = sampleL * (1 - ringModMixF[effectIndex]) + ringModOutputL[effectIndex] * ringModMixF[effectIndex];\n\t\t\t\t\tsampleR = sampleR * (1 - ringModMixF[effectIndex]) + ringModOutputR[effectIndex] * ringModMixF[effectIndex];\n\n\t\t\t\t\tringModMix[effectIndex] += ringModMixDelta[effectIndex];\n\t\t\t\t\tringModPhase[effectIndex] += ringModPhaseDelta[effectIndex];\n\t\t\t\t\tringModPhase[effectIndex] = ringModPhase[effectIndex] % 1.0;\n\t\t\t\t\tringModPhaseDelta[effectIndex] *= ringModPhaseDeltaScale[effectIndex];\n\t\t\t\t\tringModMixFade[effectIndex] += ringModMixFadeDelta[effectIndex];\n\t\t\t\t\t`;\n                }\n                else if (usesGranular && effectState.type == 8) {\n                    effectsSource += `\n                    granularOutputL[effectIndex] = 0;\n                    granularOutputR[effectIndex] = 0;\n                    for (let grainIndex = 0; grainIndex < granularGrainCount[effectIndex]; grainIndex++) {\n                        const grain = granularGrains[effectIndex][grainIndex];\n                        if(computeGrains[effectIndex]) {\n                            if(grain.delay > 0) {\n                                grain.delay--;\n                            } else {\n                                const grainDelayLinePosition = grain.delayLinePosition;\n                                const grainDelayLinePositionInt = grainDelayLinePosition | 0;\n                                let grainAgeInSamples = grain.ageInSamples;\n                                const grainMaxAgeInSamples = grain.maxAgeInSamples;\n                                let grainSampleL = granularDelayLineL[effectIndex][((granularDelayLineIndex[effectIndex] + (granularDelayLineLength[effectIndex] - grainDelayLinePositionInt))    ) & granularDelayLineMask];\n                                let grainSampleR = granularDelayLineR[effectIndex][((granularDelayLineIndex[effectIndex] + (granularDelayLineLength[effectIndex] - grainDelayLinePositionInt))    ) & granularDelayLineMask];\n                                `;\n                    if (Config.granularEnvelopeType == 0) {\n                        effectsSource += `\n                                    const grainEnvelope = grain.parabolicEnvelopeAmplitude;\n                                    `;\n                    }\n                    else if (Config.granularEnvelopeType == 1) {\n                        effectsSource += `\n                                    const grainEnvelope = grain.rcbEnvelopeAmplitude;\n                                    `;\n                    }\n                    effectsSource += `\n                                grainSampleL *= grainEnvelope;\n                                grainSampleR *= grainEnvelope;\n                                granularOutputL[effectIndex] += grainSampleL;\n                                granularOutputR[effectIndex] += grainSampleR;\n                                if (grainAgeInSamples > grainMaxAgeInSamples) {\n                                    if (granularGrainCount[effectIndex] > 0) {\n                                        // Faster equivalent of .pop, ignoring the order in the array.\n                                        const lastGrainIndex = granularGrainCount[effectIndex] - 1;\n                                        const lastGrain = granularGrains[effectIndex][lastGrainIndex];\n                                        granularGrains[effectIndex][grainIndex] = lastGrain;\n                                        granularGrains[effectIndex][lastGrainIndex] = grain;\n                                        granularGrainCount[effectIndex]--;\n                                        grainIndex--;\n                                        // ^ Dangerous, since this could end up causing an infinite loop,\n                                        // but should be okay in this case.\n                                    }\n                                } else {\n                                    grainAgeInSamples++;\n                                    `;\n                    if (Config.granularEnvelopeType == 0) {\n                        effectsSource += `\n                                        grain.parabolicEnvelopeAmplitude += grain.parabolicEnvelopeSlope;\n                                        grain.parabolicEnvelopeSlope += grain.parabolicEnvelopeCurve;\n                                        `;\n                    }\n                    else if (Config.granularEnvelopeType == 1) {\n                        effectsSource += `\n                                        grain.updateRCBEnvelope();\n                                        `;\n                    }\n                    effectsSource += `\n                                    grain.ageInSamples = grainAgeInSamples;\n                                }\n                            }\n                        }\n                    }\n                    granularWet[effectIndex] += granularMixDelta[effectIndex];\n                    granularDry[effectIndex] -= granularMixDelta[effectIndex];\n                    granularOutputL[effectIndex] *= Config.granularOutputLoudnessCompensation;\n                    granularOutputR[effectIndex] *= Config.granularOutputLoudnessCompensation;\n                    granularDelayLineL[effectIndex][granularDelayLineIndex[effectIndex]] = sampleL;\n                    granularDelayLineR[effectIndex][granularDelayLineIndex[effectIndex]] = sampleR;\n                    granularDelayLineIndex[effectIndex] = (granularDelayLineIndex[effectIndex] + 1) & granularDelayLineMask[effectIndex];\n                    sampleL = sampleL * granularDry[effectIndex] + granularOutputL[effectIndex] * granularWet[effectIndex];\n                    sampleR = sampleR * granularDry[effectIndex] + granularOutputR[effectIndex] * granularWet[effectIndex];\n                    `;\n                }\n            }\n            effectsSource += `\n\n                    outputDataL[sampleIndex] += sampleL * mixVolume;\n                    outputDataR[sampleIndex] += sampleR * mixVolume;\n                    mixVolume += mixVolumeDelta;`;\n            if (usesDelays) {\n                effectsSource += `\n\n                    delayInputMult += delayInputMultDelta;`;\n            }\n            effectsSource += `\n                }\n\n                instrumentState.mixVolume = mixVolume;\n\n                // Avoid persistent denormal or NaN values in the delay buffers and filter history.\n                const epsilon = (1.0e-24);`;\n            if (usesDelays) {\n                effectsSource += `\n\n                instrumentState.delayInputMult = delayInputMult;`;\n            }\n            for (let i = 0; i < instrumentState.effects.length; i++) {\n                let effectState = instrumentState.effects[i];\n                effectsSource += `\n\n                effectState = instrumentState.effects[` + i + `];\n                effectIndex = ` + i + `;\n                `;\n                if (usesGranular && effectState.type == 8) {\n                    effectsSource += `\n                        effectState.granularMix = granularWet[effectIndex];\n                        effectState.granularGrainsLength = granularGrainCount[effectIndex];\n                        effectState.granularDelayLineIndex = granularDelayLineIndex[effectIndex];\n                    `;\n                }\n                else if (usesDistortion && effectState.type == 3) {\n                    effectsSource += `\n\n                    effectState.distortion = distortion[effectIndex];\n                    effectState.distortionDrive = distortionDrive[effectIndex];\n\n                    if (!Number.isFinite(distortionFractionalInputL1[effectIndex]) || Math.abs(distortionFractionalInputL1[effectIndex]) < epsilon) distortionFractionalInputL1[effectIndex] = 0.0;\n                    if (!Number.isFinite(distortionFractionalInputL2[effectIndex]) || Math.abs(distortionFractionalInputL2[effectIndex]) < epsilon) distortionFractionalInputL2[effectIndex] = 0.0;\n                    if (!Number.isFinite(distortionFractionalInputL3[effectIndex]) || Math.abs(distortionFractionalInputL3[effectIndex]) < epsilon) distortionFractionalInputL3[effectIndex] = 0.0;\n                    if (!Number.isFinite(distortionFractionalInputR1[effectIndex]) || Math.abs(distortionFractionalInputR1[effectIndex]) < epsilon) distortionFractionalInputR1[effectIndex] = 0.0;\n                    if (!Number.isFinite(distortionFractionalInputR2[effectIndex]) || Math.abs(distortionFractionalInputR2[effectIndex]) < epsilon) distortionFractionalInputR2[effectIndex] = 0.0;\n                    if (!Number.isFinite(distortionFractionalInputR3[effectIndex]) || Math.abs(distortionFractionalInputR3[effectIndex]) < epsilon) distortionFractionalInputR3[effectIndex] = 0.0;\n                    if (!Number.isFinite(distortionPrevInputL[effectIndex]) || Math.abs(distortionPrevInputL[effectIndex]) < epsilon) distortionPrevInputL[effectIndex] = 0.0;\n                    if (!Number.isFinite(distortionPrevInputR[effectIndex]) || Math.abs(distortionPrevInputR[effectIndex]) < epsilon) distortionPrevInputR[effectIndex] = 0.0;\n                    if (!Number.isFinite(distortionNextOutputL[effectIndex]) || Math.abs(distortionNextOutputL[effectIndex]) < epsilon) distortionNextOutputL[effectIndex] = 0.0;\n                    if (!Number.isFinite(distortionNextOutputR[effectIndex]) || Math.abs(distortionNextOutputR[effectIndex]) < epsilon) distortionNextOutputR[effectIndex] = 0.0;\n\n                    effectState.distortionFractionalInputL1 = distortionFractionalInputL1[effectIndex];\n                    effectState.distortionFractionalInputL2 = distortionFractionalInputL2[effectIndex];\n                    effectState.distortionFractionalInputL3 = distortionFractionalInputL3[effectIndex];\n                    effectState.distortionFractionalInputR1 = distortionFractionalInputR1[effectIndex];\n                    effectState.distortionFractionalInputR2 = distortionFractionalInputR2[effectIndex];\n                    effectState.distortionFractionalInputR3 = distortionFractionalInputR3[effectIndex];\n                    effectState.distortionPrevInputL = distortionPrevInputL[effectIndex];\n                    effectState.distortionPrevInputR = distortionPrevInputR[effectIndex];\n                    effectState.distortionNextOutputL = distortionNextOutputL[effectIndex];\n                    effectState.distortionNextOutputR = distortionNextOutputR[effectIndex];`;\n                }\n                else if (usesBitcrusher && effectState.type == 4) {\n                    effectsSource += `\n\n                    if (Math.abs(bitcrusherPrevInputL[effectIndex]) < epsilon) bitcrusherPrevInputL[effectIndex] = 0.0;\n                    if (Math.abs(bitcrusherPrevInputR[effectIndex]) < epsilon) bitcrusherPrevInputR[effectIndex] = 0.0;\n                    if (Math.abs(bitcrusherCurrentOutputL[effectIndex]) < epsilon) bitcrusherCurrentOutputL[effectIndex] = 0.0;\n                    if (Math.abs(bitcrusherCurrentOutputR[effectIndex]) < epsilon) bitcrusherCurrentOutputR[effectIndex] = 0.0;\n                    effectState.bitcrusherPrevInputL = bitcrusherPrevInputL[effectIndex];\n                    effectState.bitcrusherPrevInputR = bitcrusherPrevInputR[effectIndex];\n                    effectState.bitcrusherCurrentOutputL = bitcrusherCurrentOutputL[effectIndex];\n                    effectState.bitcrusherCurrentOutputR = bitcrusherCurrentOutputR[effectIndex];\n                    effectState.bitcrusherPhase = bitcrusherPhase[effectIndex];\n                    effectState.bitcrusherPhaseDelta = bitcrusherPhaseDelta[effectIndex];\n                    effectState.bitcrusherScale = bitcrusherScale[effectIndex];\n                    effectState.bitcrusherFoldLevel = bitcrusherFoldLevel[effectIndex];`;\n                }\n                else if (usesRingModulation && effectState.type == 7) {\n                    effectsSource += `\n                    effectState.ringModMix = ringModMix[effectIndex];\n                    effectState.ringModMixDelta = ringModMixDelta[effectIndex];\n                    effectState.ringModPhase = ringModPhase[effectIndex];\n                    effectState.ringModPhaseDelta = ringModPhaseDelta[effectIndex];\n                    effectState.ringModPhaseDeltaScale = ringModPhaseDeltaScale[effectIndex];\n                    effectState.ringModWaveformIndex = ringModWaveformIndex[effectIndex];\n                    effectState.ringModPulseWidth = ringModPulseWidth[effectIndex];\n                    effectState.ringModMixFade = ringModMixFade[effectIndex];\n                    `;\n                }\n                else if (usesEqFilter && effectState.type == 5) {\n                    effectsSource += `\n\n                        synth.sanitizeFilters(filtersL[effectIndex]);\n                        synth.sanitizeFilters(filtersR[effectIndex]);\n                    // The filter input here is downstream from another filter so we\n                    // better make sure it's safe too.\n                    if (!(initialFilterInputL1[effectIndex] < 100) || !(initialFilterInputL2[effectIndex] < 100) || !(initialFilterInputR1[effectIndex] < 100) || !(initialFilterInputR2[effectIndex] < 100)) {\n                        initialFilterInputL1[effectIndex] = 0.0;\n                        initialFilterInputR2[effectIndex] = 0.0;\n                        initialFilterInputL1[effectIndex] = 0.0;\n                        initialFilterInputR2[effectIndex] = 0.0;\n                    }\n                    if (Math.abs(initialFilterInputL1[effectIndex]) < epsilon) initialFilterInputL1[effectIndex] = 0.0;\n                    if (Math.abs(initialFilterInputL2[effectIndex]) < epsilon) initialFilterInputL2[effectIndex] = 0.0;\n                    if (Math.abs(initialFilterInputR1[effectIndex]) < epsilon) initialFilterInputR1[effectIndex] = 0.0;\n                    if (Math.abs(initialFilterInputR2[effectIndex]) < epsilon) initialFilterInputR2[effectIndex] = 0.0;\n                    effectState.initialEqFilterInputL1 = initialFilterInputL1[effectIndex];\n                    effectState.initialEqFilterInputL2 = initialFilterInputL2[effectIndex];\n                    effectState.initialEqFilterInputR1 = initialFilterInputR1[effectIndex];\n                    effectState.initialEqFilterInputR2 = initialFilterInputR2[effectIndex];\n\n                    instrumentState.eqFilterVolume = eqFilterVolume[effectIndex];`;\n                }\n                else if (usesGain && effectState.type == 9) {\n                    effectsSource += `\n                    effectState.gain = gain[effectIndex];\n                    `;\n                }\n                else if (usesPanning && effectState.type == 2) {\n                    effectsSource += `\n\n                    Synth.sanitizeDelayLine(panningDelayLineL[effectIndex], panningDelayPos[effectIndex], panningMask);\n                    Synth.sanitizeDelayLine(panningDelayLineR[effectIndex], panningDelayPos[effectIndex], panningMask);\n                    effectState.panningDelayPos = panningDelayPos[effectIndex];\n                    effectState.panningVolumeL = panningVolumeL[effectIndex];\n                    effectState.panningVolumeR = panningVolumeR[effectIndex];\n                    effectState.panningOffsetL = panningOffsetL[effectIndex];\n                    effectState.panningOffsetR = panningOffsetR[effectIndex];`;\n                }\n                else if (usesFlanger && effectState.type == 10) {\n                    effectsSource += `\n\n                    Synth.sanitizeDelayLine(flangerDelayLineL[effectIndex], flangerDelayPos[effectIndex], flangerMask);\n                    Synth.sanitizeDelayLine(flangerDelayLineR[effectIndex], flangerDelayPos[effectIndex], flangerMask);\n                    effectState.flangerPhase = flangerPhase[effectIndex];\n                    effectState.flangerDelayPos = flangerDelayPos[effectIndex];\n                    effectState.flanger = flanger[effectIndex];\n                    effectState.flangerSpeed = flangerSpeed[effectIndex];\n                    effectState.flangerDepth = flangerDepth[effectIndex];\n                    effectState.flangerFeedback = flangerFeedback[effectIndex];`;\n                }\n                else if (usesChorus && effectState.type == 1) {\n                    effectsSource += `\n\n                    Synth.sanitizeDelayLine(chorusDelayLineL[effectIndex], chorusDelayPos[effectIndex], chorusMask);\n                    Synth.sanitizeDelayLine(chorusDelayLineR[effectIndex], chorusDelayPos[effectIndex], chorusMask);\n                    effectState.chorusPhase = chorusPhase[effectIndex];\n                    effectState.chorusDelayPos = chorusDelayPos[effectIndex];\n                    effectState.chorusVoiceMult = chorusVoiceMult[effectIndex];\n                    effectState.chorusCombinedMult = chorusCombinedMult[effectIndex];`;\n                }\n                else if (usesEcho && effectState.type == 6) {\n                    effectsSource += `\n\n                    Synth.sanitizeDelayLine(echoDelayLineL[effectIndex], echoDelayPosL[effectIndex], echoMask[effectIndex]);\n                    Synth.sanitizeDelayLine(echoDelayLineR[effectIndex], echoDelayPosR[effectIndex], echoMask[effectIndex]);\n                    effectState.echoDelayPosL = echoDelayPosL[effectIndex];\n                    effectState.echoDelayPosR = echoDelayPosR[effectIndex];\n                    effectState.echoMult = echoMult[effectIndex];\n                    effectState.echoDelayOffsetRatio = echoDelayOffsetRatio[effectIndex];\n\n                    if (!Number.isFinite(echoShelfSampleL[effectIndex]) || Math.abs(echoShelfSampleL[effectIndex]) < epsilon) echoShelfSampleL[effectIndex] = 0.0;\n                    if (!Number.isFinite(echoShelfSampleR[effectIndex]) || Math.abs(echoShelfSampleR[effectIndex]) < epsilon) echoShelfSampleR[effectIndex] = 0.0;\n                    if (!Number.isFinite(echoShelfPrevInputL[effectIndex]) || Math.abs(echoShelfPrevInputL[effectIndex]) < epsilon) echoShelfPrevInputL[effectIndex] = 0.0;\n                    if (!Number.isFinite(echoShelfPrevInputR[effectIndex]) || Math.abs(echoShelfPrevInputR[effectIndex]) < epsilon) echoShelfPrevInputR[effectIndex] = 0.0;\n                    effectState.echoShelfSampleL = echoShelfSampleL[effectIndex];\n                    effectState.echoShelfSampleR = echoShelfSampleR[effectIndex];\n                    effectState.echoShelfPrevInputL = echoShelfPrevInputL[effectIndex];\n                    effectState.echoShelfPrevInputR = echoShelfPrevInputR[effectIndex];`;\n                }\n                else if (usesReverb && effectState.type == 0) {\n                    effectsSource += `\n\n                    Synth.sanitizeDelayLine(reverbDelayLine[effectIndex], reverbDelayPos[effectIndex]        , reverbMask);\n                    Synth.sanitizeDelayLine(reverbDelayLine[effectIndex], reverbDelayPos[effectIndex] +  3041, reverbMask);\n                    Synth.sanitizeDelayLine(reverbDelayLine[effectIndex], reverbDelayPos[effectIndex] +  6426, reverbMask);\n                    Synth.sanitizeDelayLine(reverbDelayLine[effectIndex], reverbDelayPos[effectIndex] + 10907, reverbMask);\n                    effectState.reverbDelayPos = reverbDelayPos[effectIndex];\n                    effectState.reverbMult = reverb[effectIndex];\n\n                    if (!Number.isFinite(reverbShelfSample0[effectIndex]) || Math.abs(reverbShelfSample0[effectIndex]) < epsilon) reverbShelfSample0[effectIndex] = 0.0;\n                    if (!Number.isFinite(reverbShelfSample1[effectIndex]) || Math.abs(reverbShelfSample1[effectIndex]) < epsilon) reverbShelfSample1[effectIndex] = 0.0;\n                    if (!Number.isFinite(reverbShelfSample2[effectIndex]) || Math.abs(reverbShelfSample2[effectIndex]) < epsilon) reverbShelfSample2[effectIndex] = 0.0;\n                    if (!Number.isFinite(reverbShelfSample3[effectIndex]) || Math.abs(reverbShelfSample3[effectIndex]) < epsilon) reverbShelfSample3[effectIndex] = 0.0;\n                    if (!Number.isFinite(reverbShelfPrevInput0[effectIndex]) || Math.abs(reverbShelfPrevInput0[effectIndex]) < epsilon) reverbShelfPrevInput0[effectIndex] = 0.0;\n                    if (!Number.isFinite(reverbShelfPrevInput1[effectIndex]) || Math.abs(reverbShelfPrevInput1[effectIndex]) < epsilon) reverbShelfPrevInput1[effectIndex] = 0.0;\n                    if (!Number.isFinite(reverbShelfPrevInput2[effectIndex]) || Math.abs(reverbShelfPrevInput2[effectIndex]) < epsilon) reverbShelfPrevInput2[effectIndex] = 0.0;\n                    if (!Number.isFinite(reverbShelfPrevInput3[effectIndex]) || Math.abs(reverbShelfPrevInput3[effectIndex]) < epsilon) reverbShelfPrevInput3[effectIndex] = 0.0;\n                    effectState.reverbShelfSample0 = reverbShelfSample0[effectIndex];\n                    effectState.reverbShelfSample1 = reverbShelfSample1[effectIndex];\n                    effectState.reverbShelfSample2 = reverbShelfSample2[effectIndex];\n                    effectState.reverbShelfSample3 = reverbShelfSample3[effectIndex];\n                    effectState.reverbShelfPrevInput0 = reverbShelfPrevInput0[effectIndex];\n                    effectState.reverbShelfPrevInput1 = reverbShelfPrevInput1[effectIndex];\n                    effectState.reverbShelfPrevInput2 = reverbShelfPrevInput2[effectIndex];\n                    effectState.reverbShelfPrevInput3 = reverbShelfPrevInput3[effectIndex];`;\n                }\n            }\n            effectsSource += \"}\";\n            console.log(effectsSource);\n            effectsFunction = new Function(\"Config\", \"Synth\", effectsSource)(Config, Synth);\n            Synth.effectsFunctionCache[signature] = effectsFunction;\n        }\n        effectsFunction(synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\n    }\n    static pulseWidthSynth(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState) {\n        const data = synth.tempInstrumentSampleBufferL;\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval)\n            tone.phases[1] = tone.phases[0];\n        let phaseDeltaA = tone.phaseDeltas[0];\n        let phaseDeltaB = tone.phaseDeltas[1];\n        const phaseDeltaScaleA = +tone.phaseDeltaScales[0];\n        const phaseDeltaScaleB = +tone.phaseDeltaScales[1];\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n        let phaseA = (tone.phases[0] % 1);\n        let phaseB = (tone.phases[1] % 1);\n        let pulseWidth = tone.pulseWidth;\n        const pulseWidthDelta = tone.pulseWidthDelta;\n        const filters = tone.noteFiltersL;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInputL1;\n        let initialFilterInput2 = +tone.initialNoteFilterInputL2;\n        const applyFilters = Synth.applyFilters;\n        const stopIndex = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            const sawPhaseA = phaseA % 1;\n            const sawPhaseB = (phaseA + pulseWidth) % 1;\n            const sawPhaseC = phaseB % 1;\n            const sawPhaseD = (phaseB + pulseWidth) % 1;\n            let pulseWaveA = sawPhaseB - sawPhaseA;\n            let pulseWaveB = sawPhaseD - sawPhaseC;\n            if (!instrumentState.aliases) {\n                if (sawPhaseA < phaseDeltaA) {\n                    var t = sawPhaseA / phaseDeltaA;\n                    pulseWaveA += (t + t - t * t - 1) * 0.5;\n                }\n                else if (sawPhaseA > 1.0 - phaseDeltaA) {\n                    var t = (sawPhaseA - 1.0) / phaseDeltaA;\n                    pulseWaveA += (t + t + t * t + 1) * 0.5;\n                }\n                if (sawPhaseB < phaseDeltaA) {\n                    var t = sawPhaseB / phaseDeltaA;\n                    pulseWaveA -= (t + t - t * t - 1) * 0.5;\n                }\n                else if (sawPhaseB > 1.0 - phaseDeltaA) {\n                    var t = (sawPhaseB - 1.0) / phaseDeltaA;\n                    pulseWaveA -= (t + t + t * t + 1) * 0.5;\n                }\n                if (sawPhaseC < phaseDeltaB) {\n                    var t = sawPhaseC / phaseDeltaB;\n                    pulseWaveB += (t + t - t * t - 1) * 0.5;\n                }\n                else if (sawPhaseC > 1.0 - phaseDeltaB) {\n                    var t = (sawPhaseC - 1.0) / phaseDeltaB;\n                    pulseWaveB += (t + t + t * t + 1) * 0.5;\n                }\n                if (sawPhaseD < phaseDeltaB) {\n                    var t = sawPhaseD / phaseDeltaB;\n                    pulseWaveB -= (t + t - t * t - 1) * 0.5;\n                }\n                else if (sawPhaseD > 1.0 - phaseDeltaB) {\n                    var t = (sawPhaseD - 1.0) / phaseDeltaB;\n                    pulseWaveB -= (t + t + t * t + 1) * 0.5;\n                }\n            }\n            const inputSample = pulseWaveA + pulseWaveB * unisonSign;\n            const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n            phaseA += phaseDeltaA;\n            phaseB += phaseDeltaB;\n            phaseDeltaA *= phaseDeltaScaleA;\n            phaseDeltaB *= phaseDeltaScaleB;\n            pulseWidth += pulseWidthDelta;\n            const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }\n        tone.phases[0] = phaseA;\n        tone.phases[1] = phaseB;\n        tone.phaseDeltas[0] = phaseDeltaA;\n        tone.phaseDeltas[1] = phaseDeltaB;\n        tone.expression = expression;\n        tone.pulseWidth = pulseWidth;\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInputL1 = initialFilterInput1;\n        tone.initialNoteFilterInputL2 = initialFilterInput2;\n    }\n    static supersawSynth(synth, bufferIndex, runLength, tone, instrumentState) {\n        const data = synth.tempInstrumentSampleBufferL;\n        const voiceCount = Config.supersawVoiceCount | 0;\n        let phaseDelta = tone.phaseDeltas[0];\n        const phaseDeltaScale = +tone.phaseDeltaScales[0];\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n        let phases = tone.phases;\n        let dynamism = +tone.supersawDynamism;\n        const dynamismDelta = +tone.supersawDynamismDelta;\n        const unisonDetunes = tone.supersawUnisonDetunes;\n        let shape = +tone.supersawShape;\n        const shapeDelta = +tone.supersawShapeDelta;\n        let delayLength = +tone.supersawDelayLength;\n        const delayLengthDelta = +tone.supersawDelayLengthDelta;\n        const delayLine = tone.supersawDelayLine;\n        const delayBufferMask = (delayLine.length - 1) >> 0;\n        let delayIndex = tone.supersawDelayIndex | 0;\n        delayIndex = (delayIndex & delayBufferMask) + delayLine.length;\n        const filters = tone.noteFiltersL;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInputL1;\n        let initialFilterInput2 = +tone.initialNoteFilterInputL2;\n        const applyFilters = Synth.applyFilters;\n        const stopIndex = bufferIndex + runLength;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            let phase = (phases[0] + phaseDelta) % 1.0;\n            let supersawSample = phase - 0.5 * (1.0 + (voiceCount - 1.0) * dynamism);\n            if (!instrumentState.aliases) {\n                if (phase < phaseDelta) {\n                    var t = phase / phaseDelta;\n                    supersawSample -= (t + t - t * t - 1) * 0.5;\n                }\n                else if (phase > 1.0 - phaseDelta) {\n                    var t = (phase - 1.0) / phaseDelta;\n                    supersawSample -= (t + t + t * t + 1) * 0.5;\n                }\n            }\n            phases[0] = phase;\n            for (let i = 1; i < voiceCount; i++) {\n                const detunedPhaseDelta = phaseDelta * unisonDetunes[i];\n                let phase = (phases[i] + detunedPhaseDelta) % 1.0;\n                supersawSample += phase * dynamism;\n                if (!instrumentState.aliases) {\n                    if (phase < detunedPhaseDelta) {\n                        const t = phase / detunedPhaseDelta;\n                        supersawSample -= (t + t - t * t - 1) * 0.5 * dynamism;\n                    }\n                    else if (phase > 1.0 - detunedPhaseDelta) {\n                        const t = (phase - 1.0) / detunedPhaseDelta;\n                        supersawSample -= (t + t + t * t + 1) * 0.5 * dynamism;\n                    }\n                }\n                phases[i] = phase;\n            }\n            delayLine[delayIndex & delayBufferMask] = supersawSample;\n            const delaySampleTime = delayIndex - delayLength;\n            const lowerIndex = delaySampleTime | 0;\n            const upperIndex = lowerIndex + 1;\n            const delayRatio = delaySampleTime - lowerIndex;\n            const prevDelaySample = delayLine[lowerIndex & delayBufferMask];\n            const nextDelaySample = delayLine[upperIndex & delayBufferMask];\n            const delaySample = prevDelaySample + (nextDelaySample - prevDelaySample) * delayRatio;\n            delayIndex++;\n            const inputSample = supersawSample - delaySample * shape;\n            const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n            phaseDelta *= phaseDeltaScale;\n            dynamism += dynamismDelta;\n            shape += shapeDelta;\n            delayLength += delayLengthDelta;\n            const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }\n        tone.phaseDeltas[0] = phaseDelta;\n        tone.expression = expression;\n        tone.supersawDynamism = dynamism;\n        tone.supersawShape = shape;\n        tone.supersawDelayLength = delayLength;\n        tone.supersawDelayIndex = delayIndex;\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInputL1 = initialFilterInput1;\n        tone.initialNoteFilterInputL2 = initialFilterInput2;\n    }\n    static noiseSynth(synth, bufferIndex, runLength, tone, instrumentState) {\n        const data = synth.tempInstrumentSampleBufferL;\n        const wave = instrumentState.waveL;\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval)\n            tone.phases[1] = tone.phases[0];\n        let phaseDeltaA = tone.phaseDeltas[0];\n        let phaseDeltaB = tone.phaseDeltas[1];\n        const phaseDeltaScaleA = +tone.phaseDeltaScales[0];\n        const phaseDeltaScaleB = +tone.phaseDeltaScales[1];\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n        let phaseA = (tone.phases[0] % 1) * Config.chipNoiseLength;\n        let phaseB = (tone.phases[1] % 1) * Config.chipNoiseLength;\n        if (tone.phases[0] == 0.0) {\n            phaseA = Math.random() * Config.chipNoiseLength;\n            if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval)\n                phaseB = phaseA;\n        }\n        if (tone.phases[1] == 0.0 && !(instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval)) {\n            phaseB = Math.random() * Config.chipNoiseLength;\n        }\n        const phaseMask = Config.chipNoiseLength - 1;\n        let noiseSampleA = +tone.noiseSampleA;\n        let noiseSampleB = +tone.noiseSampleB;\n        const filters = tone.noteFiltersL;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInputL1;\n        let initialFilterInput2 = +tone.initialNoteFilterInputL2;\n        const applyFilters = Synth.applyFilters;\n        const pitchRelativefilterA = Math.min(1.0, phaseDeltaA * instrumentState.noisePitchFilterMult);\n        const pitchRelativefilterB = Math.min(1.0, phaseDeltaB * instrumentState.noisePitchFilterMult);\n        const stopIndex = bufferIndex + runLength;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            const waveSampleA = wave[phaseA & phaseMask];\n            const waveSampleB = wave[phaseB & phaseMask];\n            noiseSampleA += (waveSampleA - noiseSampleA) * pitchRelativefilterA;\n            noiseSampleB += (waveSampleB - noiseSampleB) * pitchRelativefilterB;\n            const inputSample = noiseSampleA + noiseSampleB * unisonSign;\n            const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n            phaseA += phaseDeltaA;\n            phaseB += phaseDeltaB;\n            phaseDeltaA *= phaseDeltaScaleA;\n            phaseDeltaB *= phaseDeltaScaleB;\n            const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }\n        tone.phases[0] = phaseA / Config.chipNoiseLength;\n        tone.phases[1] = phaseB / Config.chipNoiseLength;\n        tone.phaseDeltas[0] = phaseDeltaA;\n        tone.phaseDeltas[1] = phaseDeltaB;\n        tone.expression = expression;\n        tone.noiseSampleA = noiseSampleA;\n        tone.noiseSampleB = noiseSampleB;\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInputL1 = initialFilterInput1;\n        tone.initialNoteFilterInputL2 = initialFilterInput2;\n    }\n    static spectrumSynth(synth, bufferIndex, runLength, tone, instrumentState) {\n        const data = synth.tempInstrumentSampleBufferL;\n        const wave = instrumentState.waveL;\n        const samplesInPeriod = (1 << 7);\n        const unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\n        if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval)\n            tone.phases[1] = tone.phases[0];\n        let phaseDeltaA = tone.phaseDeltas[0] * samplesInPeriod;\n        let phaseDeltaB = tone.phaseDeltas[1] * samplesInPeriod;\n        const phaseDeltaScaleA = +tone.phaseDeltaScales[0];\n        const phaseDeltaScaleB = +tone.phaseDeltaScales[1];\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n        let noiseSampleA = +tone.noiseSampleA;\n        let noiseSampleB = +tone.noiseSampleB;\n        const filters = tone.noteFiltersL;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInputL1;\n        let initialFilterInput2 = +tone.initialNoteFilterInputL2;\n        const applyFilters = Synth.applyFilters;\n        let phaseA = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\n        let phaseB = (tone.phases[1] % 1) * Config.spectrumNoiseLength;\n        if (tone.phases[0] == 0.0) {\n            phaseA = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDeltaA;\n            if (instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval)\n                phaseB = phaseA;\n        }\n        if (tone.phases[1] == 0.0 && !(instrumentState.unisonVoices == 1 && instrumentState.unisonSpread == 0 && !instrumentState.chord.customInterval)) {\n            phaseB = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDeltaB;\n        }\n        const phaseMask = Config.spectrumNoiseLength - 1;\n        const pitchRelativefilterA = Math.min(1.0, phaseDeltaA);\n        const pitchRelativefilterB = Math.min(1.0, phaseDeltaB);\n        const stopIndex = bufferIndex + runLength;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            const phaseAInt = phaseA | 0;\n            const phaseBInt = phaseB | 0;\n            const indexA = phaseAInt & phaseMask;\n            const indexB = phaseBInt & phaseMask;\n            let waveSampleA = wave[indexA];\n            let waveSampleB = wave[indexB];\n            const phaseRatioA = phaseA - phaseAInt;\n            const phaseRatioB = phaseB - phaseBInt;\n            waveSampleA += (wave[indexA + 1] - waveSampleA) * phaseRatioA;\n            waveSampleB += (wave[indexB + 1] - waveSampleB) * phaseRatioB;\n            noiseSampleA += (waveSampleA - noiseSampleA) * pitchRelativefilterA;\n            noiseSampleB += (waveSampleB - noiseSampleB) * pitchRelativefilterB;\n            const inputSample = noiseSampleA + noiseSampleB * unisonSign;\n            const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n            phaseA += phaseDeltaA;\n            phaseB += phaseDeltaB;\n            phaseDeltaA *= phaseDeltaScaleA;\n            phaseDeltaB *= phaseDeltaScaleB;\n            const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }\n        tone.phases[0] = phaseA / Config.spectrumNoiseLength;\n        tone.phases[1] = phaseB / Config.spectrumNoiseLength;\n        tone.phaseDeltas[0] = phaseDeltaA / samplesInPeriod;\n        tone.phaseDeltas[1] = phaseDeltaB / samplesInPeriod;\n        tone.expression = expression;\n        tone.noiseSampleA = noiseSampleA;\n        tone.noiseSampleB = noiseSampleB;\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInputL1 = initialFilterInput1;\n        tone.initialNoteFilterInputL2 = initialFilterInput2;\n    }\n    static drumsetSynth(synth, bufferIndex, runLength, tone, instrumentState) {\n        const data = synth.tempInstrumentSampleBufferL;\n        let wave = instrumentState.getDrumsetWave(tone.drumsetPitch);\n        const referenceDelta = InstrumentState.drumsetIndexReferenceDelta(tone.drumsetPitch);\n        let phaseDelta = tone.phaseDeltas[0] / referenceDelta;\n        const phaseDeltaScale = +tone.phaseDeltaScales[0];\n        let expression = +tone.expression;\n        const expressionDelta = +tone.expressionDelta;\n        const filters = tone.noteFiltersL;\n        const filterCount = tone.noteFilterCount | 0;\n        let initialFilterInput1 = +tone.initialNoteFilterInputL1;\n        let initialFilterInput2 = +tone.initialNoteFilterInputL2;\n        const applyFilters = Synth.applyFilters;\n        let phase = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\n        if (tone.phases[0] == 0.0)\n            phase = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta;\n        const phaseMask = Config.spectrumNoiseLength - 1;\n        const stopIndex = bufferIndex + runLength;\n        for (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            const phaseInt = phase | 0;\n            const index = phaseInt & phaseMask;\n            let noiseSample = wave[index];\n            const phaseRatio = phase - phaseInt;\n            noiseSample += (wave[index + 1] - noiseSample) * phaseRatio;\n            const inputSample = noiseSample;\n            const sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n            phase += phaseDelta;\n            phaseDelta *= phaseDeltaScale;\n            const output = sample * expression;\n            expression += expressionDelta;\n            data[sampleIndex] += output;\n        }\n        tone.phases[0] = phase / Config.spectrumNoiseLength;\n        tone.phaseDeltas[0] = phaseDelta * referenceDelta;\n        tone.expression = expression;\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInputL1 = initialFilterInput1;\n        tone.initialNoteFilterInputL2 = initialFilterInput2;\n    }\n    static modSynth(synth, stereoBufferIndex, roundedSamplesPerTick, tone, instrument) {\n        if (!synth.song)\n            return;\n        let mod = Config.modCount - 1 - tone.pitches[0];\n        if (instrument.invalidModulators[mod])\n            return;\n        let setting = instrument.modulators[mod];\n        let usedChannels = [];\n        let usedInstruments = [];\n        if (Config.modulators[instrument.modulators[mod]].forSong) {\n            usedInstruments.push(0);\n        }\n        else {\n            if (instrument.modInstruments[mod][0] == synth.song.channels[instrument.modChannels[mod][0]].instruments.length) {\n                for (let i = 0; i < synth.song.channels[instrument.modChannels[mod][0]].instruments.length; i++) {\n                    usedInstruments.push(i);\n                    usedChannels.push(0);\n                }\n            }\n            else if (instrument.modInstruments[mod][0] > synth.song.channels[instrument.modChannels[mod][0]].instruments.length) {\n                if (synth.song.getPattern(instrument.modChannels[mod][0], synth.bar) != null) {\n                    usedInstruments = synth.song.getPattern(instrument.modChannels[mod][0], synth.bar).instruments;\n                    usedChannels.push(0);\n                }\n            }\n            else {\n                for (let i = 0; i < instrument.modChannels[mod].length; i++) {\n                    usedChannels.push(instrument.modChannels[mod][i]);\n                    usedInstruments.push(instrument.modInstruments[mod][i]);\n                }\n            }\n        }\n        for (let instrumentIndex = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\n            synth.setModValue(tone.expression, tone.expression + tone.expressionDelta, instrument.modChannels[mod][instrumentIndex], usedInstruments[instrumentIndex], setting);\n            for (let i = 0; i < synth.heldMods.length; i++) {\n                if (Config.modulators[instrument.modulators[mod]].forSong) {\n                    if (synth.heldMods[i].setting == setting)\n                        synth.setModValue(synth.heldMods[i].volume, synth.heldMods[i].volume, instrument.modChannels[mod][instrumentIndex], usedInstruments[instrumentIndex], setting);\n                }\n                else if (synth.heldMods[i].channelIndex == instrument.modChannels[mod][instrumentIndex] && synth.heldMods[i].instrumentIndex == usedInstruments[instrumentIndex] && synth.heldMods[i].setting == setting) {\n                    synth.setModValue(synth.heldMods[i].volume, synth.heldMods[i].volume, instrument.modChannels[mod][instrumentIndex], usedInstruments[instrumentIndex], setting);\n                }\n            }\n            if (setting == Config.modulators.dictionary[\"reset arp\"].index && synth.tick == 0 && tone.noteStartPart == synth.beat * Config.partsPerBeat + synth.part) {\n                synth.channels[instrument.modChannels[mod][instrumentIndex]].instruments[usedInstruments[instrumentIndex]].arpTime = 0;\n            }\n            else if (setting == Config.modulators.dictionary[\"reset envelope\"].index && synth.tick == 0 && tone.noteStartPart == synth.beat * Config.partsPerBeat + synth.part) {\n                let envelopeTarget = instrument.modEnvelopeNumbers[mod];\n                const tgtInstrumentState = synth.channels[instrument.modChannels[mod][instrumentIndex]].instruments[usedInstruments[instrumentIndex]];\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod][instrumentIndex]].instruments[usedInstruments[instrumentIndex]];\n                if (tgtInstrument.envelopeCount > envelopeTarget) {\n                    tgtInstrumentState.envelopeTime[envelopeTarget] = 0;\n                }\n            }\n            else if (setting == Config.modulators.dictionary[\"next bar\"].index) {\n                synth.wantToSkip = true;\n            }\n            else if (setting == Config.modulators.dictionary[\"song eq\"].index) {\n                const tgtSong = synth.song;\n                let dotTarget = instrument.modFilterTypes[mod] | 0;\n                if (dotTarget == 0) {\n                    let pinIdx = 0;\n                    const currentPart = synth.getTicksIntoBar() / Config.ticksPerPart;\n                    while (tone.note.start + tone.note.pins[pinIdx].time <= currentPart)\n                        pinIdx++;\n                    let lerpEndRatio = ((currentPart - tone.note.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note.pins[pinIdx - 1].time) / (tone.note.pins[pinIdx].time - tone.note.pins[pinIdx - 1].time);\n                    if (tgtSong.eqSubFilters[tone.note.pins[pinIdx - 1].size] != null || tgtSong.eqSubFilters[tone.note.pins[pinIdx].size] != null) {\n                        tgtSong.tmpEqFilterEnd = FilterSettings.lerpFilters(tgtSong.eqSubFilters[tone.note.pins[pinIdx - 1].size], tgtSong.eqSubFilters[tone.note.pins[pinIdx].size], lerpEndRatio);\n                    }\n                    else {\n                        tgtSong.tmpEqFilterEnd = tgtSong.eqFilter;\n                    }\n                }\n                else {\n                    for (let i = 0; i < Config.filterMorphCount; i++) {\n                        if (tgtSong.tmpEqFilterEnd == tgtSong.eqSubFilters[i] && tgtSong.tmpEqFilterEnd != null) {\n                            tgtSong.tmpEqFilterEnd = new FilterSettings();\n                            tgtSong.tmpEqFilterEnd.fromJsonObject(tgtSong.eqSubFilters[i].toJsonObject());\n                        }\n                    }\n                    if (tgtSong.tmpEqFilterEnd == null) {\n                        tgtSong.tmpEqFilterEnd = new FilterSettings();\n                        tgtSong.tmpEqFilterEnd.fromJsonObject(tgtSong.eqFilter.toJsonObject());\n                    }\n                    if (tgtSong.tmpEqFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\n                        if (dotTarget % 2) {\n                            tgtSong.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\n                        }\n                        else {\n                            tgtSong.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\n                        }\n                    }\n                }\n            }\n            else if (setting == Config.modulators.dictionary[\"post eq\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod][instrumentIndex]].instruments[usedInstruments[instrumentIndex]];\n                for (let effectIndex = 0; effectIndex < tgtInstrument.effects.length; effectIndex++) {\n                    const tgtEffect = tgtInstrument.effects[effectIndex];\n                    if (!tgtEffect.eqFilterType) {\n                        let dotTarget = instrument.modFilterTypes[mod] | 0;\n                        if (dotTarget == 0) {\n                            let pinIdx = 0;\n                            const currentPart = synth.getTicksIntoBar() / Config.ticksPerPart;\n                            while (tone.note.start + tone.note.pins[pinIdx].time <= currentPart)\n                                pinIdx++;\n                            let lerpEndRatio = ((currentPart - tone.note.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note.pins[pinIdx - 1].time) / (tone.note.pins[pinIdx].time - tone.note.pins[pinIdx - 1].time);\n                            if (tgtEffect.eqSubFilters[tone.note.pins[pinIdx - 1].size] != null || tgtEffect.eqSubFilters[tone.note.pins[pinIdx].size] != null) {\n                                tgtEffect.tmpEqFilterEnd = FilterSettings.lerpFilters(tgtEffect.eqSubFilters[tone.note.pins[pinIdx - 1].size], tgtEffect.eqSubFilters[tone.note.pins[pinIdx].size], lerpEndRatio);\n                            }\n                            else {\n                                tgtEffect.tmpEqFilterEnd = tgtEffect.eqFilter;\n                            }\n                        }\n                        else {\n                            for (let i = 0; i < Config.filterMorphCount; i++) {\n                                if (tgtEffect.tmpEqFilterEnd == tgtEffect.eqSubFilters[i] && tgtEffect.tmpEqFilterEnd != null) {\n                                    tgtEffect.tmpEqFilterEnd = new FilterSettings();\n                                    tgtEffect.tmpEqFilterEnd.fromJsonObject(tgtEffect.eqSubFilters[i].toJsonObject());\n                                }\n                            }\n                            if (tgtEffect.tmpEqFilterEnd == null) {\n                                tgtEffect.tmpEqFilterEnd = new FilterSettings();\n                                tgtEffect.tmpEqFilterEnd.fromJsonObject(tgtEffect.eqFilter.toJsonObject());\n                            }\n                            if (tgtEffect.tmpEqFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\n                                if (dotTarget % 2) {\n                                    tgtEffect.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\n                                }\n                                else {\n                                    tgtEffect.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else if (setting == Config.modulators.dictionary[\"pre eq\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod][instrumentIndex]].instruments[usedInstruments[instrumentIndex]];\n                if (!tgtInstrument.noteFilterType) {\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\n                    if (dotTarget == 0) {\n                        let pinIdx = 0;\n                        const currentPart = synth.getTicksIntoBar() / Config.ticksPerPart;\n                        while (tone.note.start + tone.note.pins[pinIdx].time <= currentPart)\n                            pinIdx++;\n                        let lerpEndRatio = ((currentPart - tone.note.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note.pins[pinIdx - 1].time) / (tone.note.pins[pinIdx].time - tone.note.pins[pinIdx - 1].time);\n                        if (tgtInstrument.noteSubFilters[tone.note.pins[pinIdx - 1].size] != null || tgtInstrument.noteSubFilters[tone.note.pins[pinIdx].size] != null) {\n                            tgtInstrument.tmpNoteFilterEnd = FilterSettings.lerpFilters(tgtInstrument.noteSubFilters[tone.note.pins[pinIdx - 1].size], tgtInstrument.noteSubFilters[tone.note.pins[pinIdx].size], lerpEndRatio);\n                        }\n                        else {\n                            tgtInstrument.tmpNoteFilterEnd = tgtInstrument.noteFilter;\n                        }\n                    }\n                    else {\n                        for (let i = 0; i < Config.filterMorphCount; i++) {\n                            if (tgtInstrument.tmpNoteFilterEnd == tgtInstrument.noteSubFilters[i] && tgtInstrument.tmpNoteFilterEnd != null) {\n                                tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\n                                tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteSubFilters[i].toJsonObject());\n                            }\n                        }\n                        if (tgtInstrument.tmpNoteFilterEnd == null) {\n                            tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\n                            tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteFilter.toJsonObject());\n                        }\n                        if (tgtInstrument.tmpNoteFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\n                            if (dotTarget % 2) {\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\n                            }\n                            else {\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\n                            }\n                        }\n                    }\n                }\n            }\n            else if (setting == Config.modulators.dictionary[\"individual envelope speed\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod][instrumentIndex]].instruments[usedInstruments[instrumentIndex]];\n                let envelopeTarget = instrument.modEnvelopeNumbers[mod];\n                let speed = tone.expression + tone.expressionDelta;\n                if (tgtInstrument.envelopeCount > envelopeTarget) {\n                    if (Number.isInteger(speed)) {\n                        tgtInstrument.envelopes[envelopeTarget].tempEnvelopeSpeed = Config.perEnvelopeSpeedIndices[speed];\n                    }\n                    else {\n                        speed = (1 - (speed % 1)) * Config.perEnvelopeSpeedIndices[Math.floor(speed)] + (speed % 1) * Config.perEnvelopeSpeedIndices[Math.ceil(speed)];\n                        tgtInstrument.envelopes[envelopeTarget].tempEnvelopeSpeed = speed;\n                    }\n                }\n            }\n            else if (setting == Config.modulators.dictionary[\"individual envelope lower bound\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod][instrumentIndex]].instruments[usedInstruments[instrumentIndex]];\n                let envelopeTarget = instrument.modEnvelopeNumbers[mod];\n                let bound = tone.expression + tone.expressionDelta;\n                if (tgtInstrument.envelopeCount > envelopeTarget) {\n                    tgtInstrument.envelopes[envelopeTarget].tempEnvelopeLowerBound = bound / 10;\n                }\n            }\n            else if (setting == Config.modulators.dictionary[\"individual envelope upper bound\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod][instrumentIndex]].instruments[usedInstruments[instrumentIndex]];\n                let envelopeTarget = instrument.modEnvelopeNumbers[mod];\n                let bound = tone.expression + tone.expressionDelta;\n                if (tgtInstrument.envelopeCount > envelopeTarget) {\n                    tgtInstrument.envelopes[envelopeTarget].tempEnvelopeUpperBound = bound / 10;\n                }\n                console.log(tgtInstrument.envelopes[envelopeTarget]);\n            }\n        }\n    }\n    static findRandomZeroCrossing(wave, waveLength) {\n        let phase = Math.random() * waveLength;\n        const phaseMask = waveLength - 1;\n        let indexPrev = phase & phaseMask;\n        let wavePrev = wave[indexPrev];\n        const stride = 16;\n        for (let attemptsRemaining = 128; attemptsRemaining > 0; attemptsRemaining--) {\n            const indexNext = (indexPrev + stride) & phaseMask;\n            const waveNext = wave[indexNext];\n            if (wavePrev * waveNext <= 0.0) {\n                for (let i = 0; i < stride; i++) {\n                    const innerIndexNext = (indexPrev + 1) & phaseMask;\n                    const innerWaveNext = wave[innerIndexNext];\n                    if (wavePrev * innerWaveNext <= 0.0) {\n                        const slope = innerWaveNext - wavePrev;\n                        phase = indexPrev;\n                        if (Math.abs(slope) > 0.00000001) {\n                            phase += -wavePrev / slope;\n                        }\n                        phase = Math.max(0, phase) % waveLength;\n                        break;\n                    }\n                    else {\n                        indexPrev = innerIndexNext;\n                        wavePrev = innerWaveNext;\n                    }\n                }\n                break;\n            }\n            else {\n                indexPrev = indexNext;\n                wavePrev = waveNext;\n            }\n        }\n        return phase;\n    }\n    static instrumentVolumeToVolumeMult(instrumentVolume) {\n        return (instrumentVolume == -Config.volumeRange / 2.0) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\n    }\n    static volumeMultToInstrumentVolume(volumeMult) {\n        return (volumeMult <= 0.0) ? -Config.volumeRange / 2 : Math.min(Config.volumeRange, (Math.log(volumeMult) / Math.LN2) / Config.volumeLogScale);\n    }\n    static noteSizeToVolumeMult(size) {\n        return Math.pow(Math.max(0.0, size) / Config.noteSizeMax, 1.5);\n    }\n    static volumeMultToNoteSize(volumeMult) {\n        return Math.pow(Math.max(0.0, volumeMult), 1 / 1.5) * Config.noteSizeMax;\n    }\n    static getOperatorWave(waveform, pulseWidth) {\n        if (waveform != 2) {\n            return Config.operatorWaves[waveform];\n        }\n        else {\n            return Config.pwmOperatorWaves[pulseWidth];\n        }\n    }\n    getSamplesPerTick() {\n        if (this.song == null)\n            return 0;\n        let beatsPerMinute = this.song.getBeatsPerMinute();\n        if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\n            beatsPerMinute = this.getModValue(Config.modulators.dictionary[\"tempo\"].index);\n        }\n        return this.getSamplesPerTickSpecificBPM(beatsPerMinute);\n    }\n    getSamplesPerTickSpecificBPM(beatsPerMinute) {\n        const beatsPerSecond = beatsPerMinute / 60.0;\n        const partsPerSecond = Config.partsPerBeat * beatsPerSecond;\n        const tickPerSecond = Config.ticksPerPart * partsPerSecond;\n        return this.samplesPerSecond / tickPerSecond;\n    }\n    sanitizeFilters(filters) {\n        let reset = false;\n        for (const filter of filters) {\n            const output1 = Math.abs(filter.output1);\n            const output2 = Math.abs(filter.output2);\n            if (!(output1 < 100) || !(output2 < 100)) {\n                reset = true;\n                break;\n            }\n            if (output1 < epsilon)\n                filter.output1 = 0.0;\n            if (output2 < epsilon)\n                filter.output2 = 0.0;\n        }\n        if (reset) {\n            for (const filter of filters) {\n                filter.output1 = 0.0;\n                filter.output2 = 0.0;\n            }\n        }\n    }\n    static sanitizeDelayLine(delayLine, lastIndex, mask) {\n        while (true) {\n            lastIndex--;\n            const index = lastIndex & mask;\n            const sample = Math.abs(delayLine[index]);\n            if (Number.isFinite(sample) && (sample == 0.0 || sample >= epsilon))\n                break;\n            delayLine[index] = 0.0;\n        }\n    }\n    static applyFilters(sample, input1, input2, filterCount, filters) {\n        for (let i = 0; i < filterCount; i++) {\n            const filter = filters[i];\n            const output1 = filter.output1;\n            const output2 = filter.output2;\n            const a1 = filter.a1;\n            const a2 = filter.a2;\n            const b0 = filter.b0;\n            const b1 = filter.b1;\n            const b2 = filter.b2;\n            sample = b0 * sample + b1 * input1 + b2 * input2 - a1 * output1 - a2 * output2;\n            filter.a1 = a1 + filter.a1Delta;\n            filter.a2 = a2 + filter.a2Delta;\n            if (filter.useMultiplicativeInputCoefficients) {\n                filter.b0 = b0 * filter.b0Delta;\n                filter.b1 = b1 * filter.b1Delta;\n                filter.b2 = b2 * filter.b2Delta;\n            }\n            else {\n                filter.b0 = b0 + filter.b0Delta;\n                filter.b1 = b1 + filter.b1Delta;\n                filter.b2 = b2 + filter.b2Delta;\n            }\n            filter.output2 = output1;\n            filter.output1 = sample;\n            input2 = output2;\n            input1 = output1;\n        }\n        return sample;\n    }\n    computeTicksSinceStart(ofBar = false) {\n        var _a, _b;\n        const beatsPerBar = ((_a = this.song) === null || _a === void 0 ? void 0 : _a.beatsPerBar) ? (_b = this.song) === null || _b === void 0 ? void 0 : _b.beatsPerBar : 8;\n        if (ofBar) {\n            return Config.ticksPerPart * Config.partsPerBeat * beatsPerBar * this.bar;\n        }\n        else {\n            return this.tick + Config.ticksPerPart * (this.part + Config.partsPerBeat * (this.beat + beatsPerBar * this.bar));\n        }\n    }\n}\nSynth.tempFilterStartCoefficients = new FilterCoefficients();\nSynth.tempFilterEndCoefficients = new FilterCoefficients();\nSynth.fmSynthFunctionCache = {};\nSynth.fm6SynthFunctionCache = {};\nSynth.effectsFunctionCache = {};\nSynth.pickedStringFunctionCache = Array(3).fill(undefined);\nSynth.fmSourceTemplate = (`\n\t\tconst data = synth.tempInstrumentSampleBufferL;\n\t\tconst sineWave = Config.sineWave;\n\t\t\t\n\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\n\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * ` + Config.sineWaveLength + `;\n\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#] * ` + Config.sineWaveLength + `;\n\t\tlet operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];\n\t\tlet operator#OutputMult  = +tone.operatorExpressions[#];\n\t\tconst operator#OutputDelta = +tone.operatorExpressionDeltas[#];\n\t\tlet operator#Output      = +tone.feedbackOutputs[#];\n        const operator#Wave      = tone.operatorWaves[#].samples;\n\t\tlet feedbackMult         = +tone.feedbackMult;\n\t\tconst feedbackDelta        = +tone.feedbackDelta;\n        let expression = +tone.expression;\n\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\n\t\tconst filters = tone.noteFiltersL;\n\t\tconst filterCount = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1 = +tone.initialNoteFilterInputL1;\n\t\tlet initialFilterInput2 = +tone.initialNoteFilterInputL2;\n\t\tconst applyFilters = Synth.applyFilters;\n\t\t\n\t\tconst stopIndex = bufferIndex + roundedSamplesPerTick;\n\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\n\t\t\t\t\n\t\t\tconst inputSample = fmOutput;\n\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\n\t\t\t\tfeedbackMult += feedbackDelta;\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\n\t\t\t\toperator#Phase += operator#PhaseDelta;\n\t\t\toperator#PhaseDelta *= operator#PhaseDeltaScale;\n\t\t\t\n\t\t\tconst output = sample * expression;\n\t\t\texpression += expressionDelta;\n\n\t\t\tdata[sampleIndex] += output;\n\t\t\t}\n\t\t\t\n\t\t\ttone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\n\t\t\ttone.phaseDeltas[#] = operator#PhaseDelta / ` + Config.sineWaveLength + `;\n\t\t\ttone.operatorExpressions[#] = operator#OutputMult;\n\t\t    tone.feedbackOutputs[#] = operator#Output;\n\t\t    tone.feedbackMult = feedbackMult;\n\t\t    tone.expression = expression;\n\t\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInputL1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInputL2 = initialFilterInput2;\n\t\t`).split(\"\\n\");\nSynth.operatorSourceTemplate = (`\n\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\n\t\tconst operator#PhaseInt = operator#PhaseMix|0;\n\t\tconst operator#Index    = operator#PhaseInt & ` + Config.sineWaveMask + `;\n\t\tconst operator#Sample   = operator#Wave[operator#Index];\n\t\toperator#Output         = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\n\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\n\t\t`).split(\"\\n\");\nexport { Config };\n//# sourceMappingURL=synth.js.map","import { Config } from \"../synth/SynthConfig\";\nimport { ColorConfig } from \"../editor/ColorConfig\";\nimport { Note, Pattern } from \"../synth/Pattern\";\nimport { Instrument } from \"../synth/Instrument\";\nimport { Channel } from \"../synth/Channel\";\nimport { Synth } from \"../synth/synth\";\nimport { oscilloscopeCanvas } from \"../global/Oscilloscope\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nconst { a, button, div, h1, input, canvas } = HTML;\nconst { svg, circle, rect, path } = SVG;\nconst isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\ndocument.head.appendChild(HTML.style({ type: \"text/css\" }, `\n\tbody {\n\t\tcolor: ${ColorConfig.primaryText};\n\t\tbackground: ${ColorConfig.editorBackground};\n\t}\n\th1 {\n\t\tfont-weight: bold;\n\t\tfont-size: 14px;\n\t\tline-height: 22px;\n\t\ttext-align: initial;\n\t\tmargin: 0;\n\t}\n\ta {\n\t\tfont-weight: bold;\n\t\tfont-size: 12px;\n\t\tline-height: 22px;\n\t\twhite-space: nowrap;\n\t\tcolor: ${ColorConfig.linkAccent};\n\t}\n\tbutton {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tposition: relative;\n\t\tborder: none;\n\t\tborder-radius: 5px;\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\n\t\tcolor: ${ColorConfig.primaryText};\n\t\tcursor: pointer;\n\t\tfont-size: 14px;\n\t\tfont-family: inherit;\n\t}\n\tbutton:hover, button:focus {\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\n\t}\n\t.playButton, .pauseButton {\n\t\tpadding-left: 24px;\n\t\tpadding-right: 6px;\n\t}\n\t.playButton::before {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\tleft: 6px;\n\t\ttop: 50%;\n\t\tmargin-top: -6px;\n\t\twidth: 12px;\n\t\theight: 12px;\n\t\tpointer-events: none;\n\t\tbackground: ${ColorConfig.primaryText};\n\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><path d=\"M 6 0 L -5 6 L -5 -6 z\" fill=\"gray\"/></svg>');\n\t\t-webkit-mask-repeat: no-repeat;\n\t\t-webkit-mask-position: center;\n\t\tmask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><path d=\"M 6 0 L -5 6 L -5 -6 z\" fill=\"gray\"/></svg>');\n\t\tmask-repeat: no-repeat;\n\t\tmask-position: center;\n\t}\n\t.pauseButton::before {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\tleft: 6px;\n\t\ttop: 50%;\n\t\tmargin-top: -6px;\n\t\twidth: 12px;\n\t\theight: 12px;\n\t\tpointer-events: none;\n\t\tbackground: ${ColorConfig.primaryText};\n\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><rect x=\"-5\" y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/><rect x=\"2\"  y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/></svg>');\n\t\t-webkit-mask-repeat: no-repeat;\n\t\t-webkit-mask-position: center;\n\t\tmask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><rect x=\"-5\" y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/><rect x=\"2\"  y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/></svg>');\n\t\tmask-repeat: no-repeat;\n\t\tmask-position: center;\n\t}\n\t\n\tinput[type=range] {\n\t\t-webkit-appearance: none;\n\t\tappearance: none;\n\t\theight: 16px;\n\t\tmargin: 0;\n\t\tcursor: pointer;\n\t\tbackground-color: ${ColorConfig.editorBackground};\n\t\ttouch-action: pan-y;\n\t}\n\tinput[type=range]:focus {\n\t\toutline: none;\n\t}\n\tinput[type=range]::-webkit-slider-runnable-track {\n\t\twidth: 100%;\n\t\theight: 4px;\n\t\tcursor: pointer;\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\n\t}\n\tinput[type=range]::-webkit-slider-thumb {\n\t\theight: 16px;\n\t\twidth: 4px;\n\t\tborder-radius: 2px;\n\t\tbackground: ${ColorConfig.primaryText};\n\t\tcursor: pointer;\n\t\t-webkit-appearance: none;\n\t\tmargin-top: -6px;\n\t}\n\tinput[type=range]:focus::-webkit-slider-runnable-track, input[type=range]:hover::-webkit-slider-runnable-track {\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\n\t}\n\tinput[type=range]::-moz-range-track {\n\t\twidth: 100%;\n\t\theight: 4px;\n\t\tcursor: pointer;\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\n\t}\n\tinput[type=range]:focus::-moz-range-track, input[type=range]:hover::-moz-range-track  {\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\n\t}\n\tinput[type=range]::-moz-range-thumb {\n\t\theight: 16px;\n\t\twidth: 4px;\n\t\tborder-radius: 2px;\n\t\tborder: none;\n\t\tbackground: ${ColorConfig.primaryText};\n\t\tcursor: pointer;\n\t}\n\tinput[type=range]::-ms-track {\n\t\twidth: 100%;\n\t\theight: 4px;\n\t\tcursor: pointer;\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\n\t\tborder-color: transparent;\n\t}\n\tinput[type=range]:focus::-ms-track, input[type=range]:hover::-ms-track {\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\n\t}\n\tinput[type=range]::-ms-thumb {\n\t\theight: 16px;\n\t\twidth: 4px;\n\t\tborder-radius: 2px;\n\t\tbackground: ${ColorConfig.primaryText};\n\t\tcursor: pointer;\n\t}\n`));\nconst colorTheme = getLocalStorage(\"colorTheme\");\nColorConfig.setTheme(colorTheme === null ? ColorConfig.defaultTheme : colorTheme);\nlet prevHash = null;\nlet id = ((Math.random() * 0xffffffff) >>> 0).toString(16);\nlet pauseButtonDisplayed = false;\nlet animationRequest;\nlet zoomEnabled = false;\nlet timelineWidth = 1;\nlet outVolumeHistoricTimer = 0;\nlet outVolumeHistoricCap = 0;\nconst synth = new Synth();\nconst oscilloscope = new oscilloscopeCanvas(canvas({ width: isMobile ? 144 : 288, height: isMobile ? 32 : 64, style: `border:2px solid ${ColorConfig.uiWidgetBackground}; overflow: hidden;`, id: \"oscilloscopeAll\" }), isMobile ? 1 : 2);\nconst showOscilloscope = getLocalStorage(\"showOscilloscope\") != \"false\";\nif (!showOscilloscope) {\n    oscilloscope.canvas.style.display = \"none\";\n    synth.oscEnabled = false;\n}\nlet titleText = h1({ style: \"flex-grow: 1; margin: 0 1px; margin-left: 10px; overflow: hidden;\" }, \"\");\nlet editLink = a({ target: \"_top\", style: \"margin: 0 4px;\" }, \"✎ Edit\");\nlet copyLink = a({ href: \"javascript:void(0)\", style: \"margin: 0 4px;\" }, \"⎘ Copy URL\");\nlet shareLink = a({ href: \"javascript:void(0)\", style: \"margin: 0 4px;\" }, \"⤳ Share\");\nlet fullscreenLink = a({ target: \"_top\", style: \"margin: 0 4px;\" }, \"⇱ Fullscreen\");\nlet draggingPlayhead = false;\nconst playButton = button({ style: \"width: 100%; height: 100%; max-height: 50px;\" });\nconst playButtonContainer = div({ style: \"flex-shrink: 0; display: flex; padding: 2px; width: 80px; height: 100%; box-sizing: border-box; align-items: center;\" }, playButton);\nconst loopIcon = path({ d: \"M 4 2 L 4 0 L 7 3 L 4 6 L 4 4 Q 2 4 2 6 Q 2 8 4 8 L 4 10 Q 0 10 0 6 Q 0 2 4 2 M 8 10 L 8 12 L 5 9 L 8 6 L 8 8 Q 10 8 10 6 Q 10 4 8 4 L 8 2 Q 12 2 12 6 Q 12 10 8 10 z\" });\nconst loopButton = button({ title: \"loop\", style: \"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;\" }, svg({ width: 12, height: 12, viewBox: \"0 0 12 12\" }, loopIcon));\nconst volumeIcon = svg({ style: \"flex: 0 0 12px; margin: 0 1px; width: 12px; height: 12px;\", viewBox: \"0 0 12 12\" }, path({ fill: ColorConfig.uiWidgetBackground, d: \"M 1 9 L 1 3 L 4 3 L 7 0 L 7 12 L 4 9 L 1 9 M 9 3 Q 12 6 9 9 L 8 8 Q 10.5 6 8 4 L 9 3 z\" }));\nconst volumeSlider = input({ title: \"volume\", type: \"range\", value: 75, min: 0, max: 75, step: 1, style: \"width: 12vw; max-width: 100px; margin: 0 1px;\" });\nconst zoomIcon = svg({ width: 12, height: 12, viewBox: \"0 0 12 12\" }, circle({ cx: \"5\", cy: \"5\", r: \"4.5\", \"stroke-width\": \"1\", stroke: \"currentColor\", fill: \"none\" }), path({ stroke: \"currentColor\", \"stroke-width\": \"2\", d: \"M 8 8 L 11 11 M 5 2 L 5 8 M 2 5 L 8 5\", fill: \"none\" }));\nconst zoomButton = button({ title: \"zoom\", style: \"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;\" }, zoomIcon);\nconst timeline = svg({ style: \"min-width: 0; min-height: 0; touch-action: pan-y pinch-zoom;\" });\nconst playhead = div({ style: `position: absolute; left: 0; top: 0; width: 2px; height: 100%; background: ${ColorConfig.playhead}; pointer-events: none;` });\nconst timelineContainer = div({ style: \"display: flex; flex-grow: 1; flex-shrink: 1; position: relative;\" }, timeline, playhead);\nconst visualizationContainer = div({ style: \"display: flex; flex-grow: 1; flex-shrink: 1; height: 0; position: relative; align-items: center; overflow: hidden;\" }, timelineContainer);\nlet noteFlashElementsPerBar;\nlet currentNoteFlashElements = [];\nlet currentNoteFlashBar = -1;\nconst notesFlashWhenPlayed = getLocalStorage(\"notesFlashWhenPlayed\") == \"true\";\nconst fixChannelColorOrder = getLocalStorage(\"fixChannelColorOrder\") != \"false\";\nconst outVolumeBarBg = SVG.rect({ \"pointer-events\": \"none\", width: \"90%\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetBackground });\nconst outVolumeBar = SVG.rect({ \"pointer-events\": \"none\", height: \"50%\", width: \"0%\", x: \"5%\", y: \"25%\", fill: \"url('#volumeGrad2')\" });\nconst outVolumeCap = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetFocus });\nconst stop1 = SVG.stop({ \"stop-color\": \"lime\", offset: \"60%\" });\nconst stop2 = SVG.stop({ \"stop-color\": \"orange\", offset: \"90%\" });\nconst stop3 = SVG.stop({ \"stop-color\": \"red\", offset: \"100%\" });\nconst gradient = SVG.linearGradient({ id: \"volumeGrad2\", gradientUnits: \"userSpaceOnUse\" }, stop1, stop2, stop3);\nconst defs = SVG.defs({}, gradient);\nconst volumeBarContainer = SVG.svg({ style: `touch-action: none; overflow: hidden; margin: auto;`, width: \"160px\", height: \"10px\", preserveAspectRatio: \"none\" }, defs, outVolumeBarBg, outVolumeBar, outVolumeCap);\ndocument.body.appendChild(visualizationContainer);\ndocument.body.appendChild(div({ style: `flex-shrink: 0; height: 20vh; min-height: 22px; max-height: 70px; display: flex; align-items: center;` }, playButtonContainer, loopButton, volumeIcon, volumeSlider, zoomButton, volumeBarContainer, oscilloscope.canvas, titleText, editLink, copyLink, shareLink, fullscreenLink));\nfunction setLocalStorage(key, value) {\n    try {\n        localStorage.setItem(key, value);\n    }\n    catch (error) {\n    }\n}\nfunction getLocalStorage(key) {\n    try {\n        return localStorage.getItem(key);\n    }\n    catch (error) {\n        return null;\n    }\n}\nfunction removeFromUnorderedArray(array, index) {\n    if (array.length < 1) {\n        return;\n    }\n    if (index === array.length - 1) {\n        array.pop();\n    }\n    else if (index >= 0 && index < array.length - 1) {\n        const lastElement = array.pop();\n        array[index] = lastElement;\n    }\n}\nfunction loadSong(songString, reuseParams) {\n    synth.setSong(songString);\n    synth.snapToStart();\n    const updatedSongString = synth.song.toBase64String();\n    editLink.href = \"../\" + (OFFLINE ? \"index.html\" : \"\") + \"#\" + updatedSongString;\n}\nfunction hashUpdatedExternally() {\n    let myHash = location.hash;\n    if (prevHash == myHash || myHash == \"\")\n        return;\n    prevHash = myHash;\n    if (myHash.charAt(0) == \"#\") {\n        myHash = myHash.substring(1);\n    }\n    fullscreenLink.href = location.href;\n    for (const parameter of myHash.split(/&(?=[a-z]+=)/g)) {\n        let equalsIndex = parameter.indexOf(\"=\");\n        if (equalsIndex != -1) {\n            let paramName = parameter.substring(0, equalsIndex);\n            let value = parameter.substring(equalsIndex + 1);\n            switch (paramName) {\n                case \"song\":\n                    loadSong(value, true);\n                    if (synth.song) {\n                        titleText.textContent = synth.song.title;\n                    }\n                    break;\n                case \"loop\":\n                    synth.loopRepeatCount = (value != \"1\") ? 0 : -1;\n                    renderLoopIcon();\n                    break;\n            }\n        }\n        else {\n            loadSong(myHash, false);\n        }\n    }\n    renderTimeline();\n}\nfunction onWindowResize() {\n    renderTimeline();\n}\nlet pauseIfAnotherPlayerStartsHandle = null;\nfunction pauseIfAnotherPlayerStarts() {\n    if (!synth.playing) {\n        clearInterval(pauseIfAnotherPlayerStartsHandle);\n        return;\n    }\n    const storedPlayerId = getLocalStorage(\"playerId\");\n    if (storedPlayerId != null && storedPlayerId != id) {\n        onTogglePlay();\n        renderPlayhead();\n        clearInterval(pauseIfAnotherPlayerStartsHandle);\n    }\n}\nfunction animate() {\n    if (synth.playing) {\n        animationRequest = requestAnimationFrame(animate);\n        renderPlayhead();\n        volumeUpdate();\n    }\n    if (pauseButtonDisplayed != synth.playing) {\n        renderPlayButton();\n    }\n}\nfunction volumeUpdate() {\n    if (synth.song == null) {\n        outVolumeCap.setAttribute(\"x\", \"5%\");\n        outVolumeBar.setAttribute(\"width\", \"0%\");\n        return;\n    }\n    outVolumeHistoricTimer--;\n    if (outVolumeHistoricTimer <= 0) {\n        outVolumeHistoricCap -= 0.03;\n    }\n    if (synth.song.outVolumeCap > outVolumeHistoricCap) {\n        outVolumeHistoricCap = synth.song.outVolumeCap;\n        outVolumeHistoricTimer = 50;\n    }\n    animateVolume(synth.song.outVolumeCap, outVolumeHistoricCap);\n    if (!synth.playing) {\n        outVolumeCap.setAttribute(\"x\", \"5%\");\n        outVolumeBar.setAttribute(\"width\", \"0%\");\n    }\n}\nfunction animateVolume(useOutVolumeCap, historicOutCap) {\n    outVolumeBar.setAttribute(\"width\", \"\" + Math.min(144, useOutVolumeCap * 144));\n    outVolumeCap.setAttribute(\"x\", \"\" + (8 + Math.min(144, historicOutCap * 144)));\n}\nfunction onTogglePlay() {\n    if (synth.song != null) {\n        if (animationRequest != null)\n            cancelAnimationFrame(animationRequest);\n        animationRequest = null;\n        if (synth.playing) {\n            synth.pause();\n            volumeUpdate();\n        }\n        else {\n            synth.play();\n            setLocalStorage(\"playerId\", id);\n            animate();\n            clearInterval(pauseIfAnotherPlayerStartsHandle);\n            pauseIfAnotherPlayerStartsHandle = setInterval(pauseIfAnotherPlayerStarts, 100);\n        }\n    }\n    renderPlayButton();\n}\nfunction onToggleLoop() {\n    if (synth.loopRepeatCount == -1) {\n        synth.loopRepeatCount = 0;\n    }\n    else {\n        synth.loopRepeatCount = -1;\n    }\n    renderLoopIcon();\n}\nfunction onVolumeChange() {\n    setLocalStorage(\"volume\", volumeSlider.value);\n    setSynthVolume();\n}\nfunction onToggleZoom() {\n    zoomEnabled = !zoomEnabled;\n    renderZoomIcon();\n    renderTimeline();\n}\nfunction onTimelineMouseDown(event) {\n    draggingPlayhead = true;\n    onTimelineMouseMove(event);\n}\nfunction onTimelineMouseMove(event) {\n    if (!draggingPlayhead)\n        return;\n    event.preventDefault();\n    onTimelineCursorMove(event.clientX || event.pageX);\n}\nfunction onTimelineTouchDown(event) {\n    draggingPlayhead = true;\n    onTimelineTouchMove(event);\n}\nfunction onTimelineTouchMove(event) {\n    onTimelineCursorMove(event.touches[0].clientX);\n}\nfunction onTimelineCursorMove(mouseX) {\n    if (draggingPlayhead && synth.song != null) {\n        const boundingRect = visualizationContainer.getBoundingClientRect();\n        synth.playhead = synth.song.barCount * (mouseX - boundingRect.left) / (boundingRect.right - boundingRect.left);\n        synth.computeLatestModValues();\n        renderPlayhead();\n    }\n}\nfunction onTimelineCursorUp() {\n    draggingPlayhead = false;\n}\nfunction setSynthVolume() {\n    const volume = +volumeSlider.value;\n    synth.volume = Math.min(1.0, Math.pow(volume / 50.0, 0.5)) * Math.pow(2.0, (volume - 75.0) / 25.0);\n}\nfunction renderPlayhead() {\n    if (synth.song != null) {\n        let pos = synth.playhead / synth.song.barCount;\n        playhead.style.left = (timelineWidth * pos) + \"px\";\n        const boundingRect = visualizationContainer.getBoundingClientRect();\n        visualizationContainer.scrollLeft = pos * (timelineWidth - boundingRect.width);\n        if (notesFlashWhenPlayed) {\n            const playheadBar = Math.floor(synth.playhead);\n            const modPlayhead = synth.playhead - playheadBar;\n            const partsPerBar = synth.song.beatsPerBar * Config.partsPerBeat;\n            const noteFlashElementsForThisBar = noteFlashElementsPerBar[playheadBar];\n            if (noteFlashElementsForThisBar != null && playheadBar !== currentNoteFlashBar) {\n                for (var i = currentNoteFlashElements.length - 1; i >= 0; i--) {\n                    var element = currentNoteFlashElements[i];\n                    const outsideOfCurrentBar = Number(element.getAttribute(\"note-bar\")) !== playheadBar;\n                    const isInvisible = element.style.opacity === \"0\";\n                    if (outsideOfCurrentBar && isInvisible) {\n                        removeFromUnorderedArray(currentNoteFlashElements, i);\n                    }\n                }\n                for (var i = 0; i < noteFlashElementsForThisBar.length; i++) {\n                    var element = noteFlashElementsForThisBar[i];\n                    currentNoteFlashElements.push(element);\n                }\n            }\n            if (currentNoteFlashElements != null) {\n                for (var i = 0; i < currentNoteFlashElements.length; i++) {\n                    var element = currentNoteFlashElements[i];\n                    const noteStart = Number(element.getAttribute(\"note-start\")) / partsPerBar;\n                    const noteEnd = Number(element.getAttribute(\"note-end\")) / partsPerBar;\n                    const noteBar = Number(element.getAttribute(\"note-bar\"));\n                    if ((modPlayhead >= noteStart) && (noteBar == playheadBar)) {\n                        const dist = noteEnd - noteStart;\n                        element.style.opacity = String((1 - (((modPlayhead - noteStart) - (dist / 2)) / (dist / 2))));\n                    }\n                    else {\n                        element.style.opacity = \"0\";\n                    }\n                }\n            }\n            currentNoteFlashBar = playheadBar;\n        }\n    }\n}\nfunction renderTimeline() {\n    timeline.innerHTML = \"\";\n    if (synth.song == null)\n        return;\n    const boundingRect = visualizationContainer.getBoundingClientRect();\n    let timelineHeight;\n    let windowOctaves;\n    let windowPitchCount;\n    if (zoomEnabled) {\n        timelineHeight = boundingRect.height;\n        windowOctaves = Math.max(1, Math.min(Config.pitchOctaves, Math.round(timelineHeight / (12 * 2))));\n        windowPitchCount = windowOctaves * 12 + 1;\n        const semitoneHeight = (timelineHeight - 1) / windowPitchCount;\n        const targetBeatWidth = Math.max(8, semitoneHeight * 4);\n        timelineWidth = Math.max(boundingRect.width, targetBeatWidth * synth.song.barCount * synth.song.beatsPerBar);\n    }\n    else {\n        timelineWidth = boundingRect.width;\n        const targetSemitoneHeight = Math.max(1, timelineWidth / (synth.song.barCount * synth.song.beatsPerBar) / 6.0);\n        timelineHeight = Math.min(boundingRect.height, targetSemitoneHeight * (Config.maxPitch + 1) + 1);\n        windowOctaves = Math.max(3, Math.min(Config.pitchOctaves, Math.round(timelineHeight / (12 * targetSemitoneHeight))));\n        windowPitchCount = windowOctaves * 12 + 1;\n    }\n    timelineContainer.style.width = timelineWidth + \"px\";\n    timelineContainer.style.height = timelineHeight + \"px\";\n    timeline.style.width = timelineWidth + \"px\";\n    timeline.style.height = timelineHeight + \"px\";\n    const barWidth = timelineWidth / synth.song.barCount;\n    const partWidth = barWidth / (synth.song.beatsPerBar * Config.partsPerBeat);\n    const wavePitchHeight = (timelineHeight - 1) / windowPitchCount;\n    const drumPitchHeight = (timelineHeight - 1) / Config.drumCount;\n    for (let bar = 0; bar < synth.song.barCount + 1; bar++) {\n        const color = (bar == synth.song.loopStart || bar == synth.song.loopStart + synth.song.loopLength) ? ColorConfig.loopAccent : ColorConfig.uiWidgetBackground;\n        timeline.appendChild(rect({ x: bar * barWidth - 1, y: 0, width: 2, height: timelineHeight, fill: color }));\n    }\n    for (let octave = 0; octave <= windowOctaves; octave++) {\n        timeline.appendChild(rect({ x: 0, y: octave * 12 * wavePitchHeight, width: timelineWidth, height: wavePitchHeight + 1, fill: ColorConfig.tonic, opacity: 0.75 }));\n    }\n    let noteFlashColor = \"#ffffff\";\n    let noteFlashColorSecondary = \"#ffffff77\";\n    if (notesFlashWhenPlayed) {\n        noteFlashColor = \"var(--note-flash)\";\n        noteFlashColorSecondary = \"var(--note-flash-secondary)\";\n    }\n    if (notesFlashWhenPlayed) {\n        noteFlashElementsPerBar = [];\n        for (let bar = 0; bar < synth.song.barCount; bar++) {\n            noteFlashElementsPerBar.push([]);\n        }\n        currentNoteFlashBar = -1;\n    }\n    for (let channel = synth.song.channels.length - 1 - synth.song.modChannelCount; channel >= 0; channel--) {\n        const isNoise = synth.song.getChannelIsNoise(channel);\n        const pitchHeight = isNoise ? drumPitchHeight : wavePitchHeight;\n        const configuredOctaveScroll = synth.song.channels[channel].octave;\n        const newOctaveScroll = Math.max(0, Math.min(Config.pitchOctaves - windowOctaves, Math.ceil(configuredOctaveScroll - windowOctaves * 0.5)));\n        const offsetY = newOctaveScroll * pitchHeight * 12 + timelineHeight - pitchHeight * 0.5 - 0.5;\n        for (let bar = 0; bar < synth.song.barCount; bar++) {\n            const pattern = synth.song.getPattern(channel, bar);\n            if (pattern == null)\n                continue;\n            const offsetX = bar * barWidth;\n            for (let i = 0; i < pattern.notes.length; i++) {\n                const note = pattern.notes[i];\n                for (const pitch of note.pitches) {\n                    const d = drawNote(pitch, note.start, note.pins, (pitchHeight + 1) / 2, offsetX, offsetY, partWidth, pitchHeight);\n                    const noteElement = path({ d: d, fill: ColorConfig.getChannelColor(synth.song, synth.song.channels[channel].color, channel, fixChannelColorOrder).primaryChannel });\n                    if (isNoise)\n                        noteElement.style.opacity = String(0.6);\n                    timeline.appendChild(noteElement);\n                    if (notesFlashWhenPlayed) {\n                        const dflash = drawNote(pitch, note.start, note.pins, (pitchHeight + 1) / 2, offsetX, offsetY, partWidth, pitchHeight);\n                        const noteFlashElement = path({ d: dflash, fill: (isNoise ? noteFlashColorSecondary : noteFlashColor) });\n                        noteFlashElement.style.opacity = \"0\";\n                        noteFlashElement.setAttribute('note-start', String(note.start));\n                        noteFlashElement.setAttribute('note-end', String(note.end));\n                        noteFlashElement.setAttribute('note-bar', String(bar));\n                        timeline.appendChild(noteFlashElement);\n                        const noteFlashElementsForThisBar = noteFlashElementsPerBar[bar];\n                        noteFlashElementsForThisBar.push(noteFlashElement);\n                    }\n                }\n            }\n        }\n    }\n    renderPlayhead();\n}\nfunction drawNote(pitch, start, pins, radius, offsetX, offsetY, partWidth, pitchHeight) {\n    let d = `M ${offsetX + partWidth * (start + pins[0].time)} ${offsetY - pitch * pitchHeight + radius * (pins[0].size / Config.noteSizeMax)} `;\n    for (let i = 0; i < pins.length; i++) {\n        const pin = pins[i];\n        const x = offsetX + partWidth * (start + pin.time);\n        const y = offsetY - pitchHeight * (pitch + pin.interval);\n        const expression = pin.size / Config.noteSizeMax;\n        d += `L ${x} ${y - radius * expression} `;\n    }\n    for (let i = pins.length - 1; i >= 0; i--) {\n        const pin = pins[i];\n        const x = offsetX + partWidth * (start + pin.time);\n        const y = offsetY - pitchHeight * (pitch + pin.interval);\n        const expression = pin.size / Config.noteSizeMax;\n        d += `L ${x} ${y + radius * expression} `;\n    }\n    return d;\n}\nfunction renderPlayButton() {\n    if (synth.playing) {\n        playButton.classList.remove(\"playButton\");\n        playButton.classList.add(\"pauseButton\");\n        playButton.title = \"Pause (Space)\";\n        playButton.textContent = \"Pause\";\n    }\n    else {\n        playButton.classList.remove(\"pauseButton\");\n        playButton.classList.add(\"playButton\");\n        playButton.title = \"Play (Space)\";\n        playButton.textContent = \"Play\";\n    }\n    pauseButtonDisplayed = synth.playing;\n}\nfunction renderLoopIcon() {\n    loopIcon.setAttribute(\"fill\", (synth.loopRepeatCount == -1) ? ColorConfig.linkAccent : ColorConfig.uiWidgetBackground);\n}\nfunction renderZoomIcon() {\n    zoomIcon.style.color = zoomEnabled ? ColorConfig.linkAccent : ColorConfig.uiWidgetBackground;\n}\nfunction onKeyPressed(event) {\n    switch (event.keyCode) {\n        case 70:\n            synth.playhead = 0;\n            synth.computeLatestModValues();\n            renderPlayhead();\n            event.preventDefault();\n            break;\n        case 32:\n            onTogglePlay();\n            synth.computeLatestModValues();\n            event.preventDefault();\n            break;\n        case 219:\n            synth.goToPrevBar();\n            synth.computeLatestModValues();\n            renderPlayhead();\n            event.preventDefault();\n            break;\n        case 221:\n            synth.goToNextBar();\n            synth.computeLatestModValues();\n            renderPlayhead();\n            event.preventDefault();\n            break;\n        case 69:\n        case 80:\n            if (event.shiftKey) {\n                hashUpdatedExternally();\n                location.href = \"../\" + (OFFLINE ? \"index.html\" : \"\") + \"#\" + synth.song.toBase64String();\n                event.preventDefault();\n            }\n            break;\n        case 90:\n        case 187:\n        case 61:\n        case 171:\n        case 189:\n        case 173:\n            onToggleZoom();\n            break;\n        case 76:\n            onToggleLoop();\n            break;\n        case 83:\n            if (event.ctrlKey) {\n                shortenUrl();\n                event.preventDefault();\n            }\n            break;\n        case 67:\n            onCopyClicked();\n            break;\n    }\n}\nfunction shortenUrl() {\n    hashUpdatedExternally();\n    let shortenerStrategy = \"https://tinyurl.com/api-create.php?url=\";\n    const localShortenerStrategy = window.localStorage.getItem(\"shortenerStrategySelect\");\n    if (localShortenerStrategy == \"isgd\")\n        shortenerStrategy = \"https://is.gd/create.php?format=simple&url=\";\n    window.open(shortenerStrategy + encodeURIComponent(new URL(\"#\" + synth.song.toBase64String(), location.href).href));\n}\nfunction onCopyClicked() {\n    let nav;\n    nav = navigator;\n    if (nav.clipboard && nav.clipboard.writeText) {\n        nav.clipboard.writeText(location.href).catch(() => {\n            window.prompt(\"Copy to clipboard:\", location.href);\n        });\n        return;\n    }\n    const textField = document.createElement(\"textarea\");\n    textField.textContent = location.href;\n    document.body.appendChild(textField);\n    textField.select();\n    const succeeded = document.execCommand(\"copy\");\n    textField.remove();\n    if (!succeeded)\n        window.prompt(\"Copy this:\", location.href);\n}\nfunction onShareClicked() {\n    navigator.share({ url: location.href });\n}\nif (top !== self) {\n    copyLink.style.display = \"none\";\n    shareLink.style.display = \"none\";\n}\nelse {\n    fullscreenLink.style.display = \"none\";\n    if (!(\"share\" in navigator))\n        shareLink.style.display = \"none\";\n}\nif (getLocalStorage(\"volume\") != null) {\n    volumeSlider.value = getLocalStorage(\"volume\");\n}\nsetSynthVolume();\nwindow.addEventListener(\"resize\", onWindowResize);\nwindow.addEventListener(\"keydown\", onKeyPressed);\ntimeline.addEventListener(\"mousedown\", onTimelineMouseDown);\nwindow.addEventListener(\"mousemove\", onTimelineMouseMove);\nwindow.addEventListener(\"mouseup\", onTimelineCursorUp);\ntimeline.addEventListener(\"touchstart\", onTimelineTouchDown);\ntimeline.addEventListener(\"touchmove\", onTimelineTouchMove);\ntimeline.addEventListener(\"touchend\", onTimelineCursorUp);\ntimeline.addEventListener(\"touchcancel\", onTimelineCursorUp);\nplayButton.addEventListener(\"click\", onTogglePlay);\nloopButton.addEventListener(\"click\", onToggleLoop);\nvolumeSlider.addEventListener(\"input\", onVolumeChange);\nzoomButton.addEventListener(\"click\", onToggleZoom);\ncopyLink.addEventListener(\"click\", onCopyClicked);\nshareLink.addEventListener(\"click\", onShareClicked);\nwindow.addEventListener(\"hashchange\", hashUpdatedExternally);\nhashUpdatedExternally();\nrenderLoopIcon();\nrenderZoomIcon();\nrenderPlayButton();\nexport { Config, Note, Pattern, Instrument, Channel, Synth };\n//# sourceMappingURL=main.js.map","import { ColorConfig } from \"../editor/ColorConfig\";\nimport { events } from \"./Events\";\nexport class oscilloscopeCanvas {\n    constructor(canvas, scale = 1) {\n        this.canvas = canvas;\n        this.scale = scale;\n        this._EventUpdateCanvas = function (directlinkL, directlinkR) {\n            if (directlinkR) {\n                var ctx = canvas.getContext(\"2d\");\n                ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n                ctx.fillStyle = ColorConfig.getComputed(\"--oscilloscope-line-L\");\n                for (let i = directlinkL.length - 1; i >= directlinkL.length - 1 - (canvas.width / scale); i--) {\n                    let x = i - (directlinkL.length - 1) + (canvas.width / scale);\n                    let yl = (directlinkL[i] * (canvas.height / scale / 2) + (canvas.height / scale / 2));\n                    ctx.fillRect((x - 1) * scale, (yl - 1) * scale, 1 * scale, 1.5 * scale);\n                    if (x == 0)\n                        break;\n                }\n                ctx.fillStyle = ColorConfig.getComputed(\"--oscilloscope-line-R\");\n                for (let i = directlinkR.length - 1; i >= directlinkR.length - 1 - (canvas.width / scale); i--) {\n                    let x = i - (directlinkR.length - 1) + (canvas.width / scale);\n                    let yr = (directlinkR[i] * (canvas.height / scale / 2) + (canvas.height / scale / 2));\n                    ctx.fillRect((x - 1) * scale, (yr - 1) * scale, 1 * scale, 1.5 * scale);\n                    if (x == 0)\n                        break;\n                }\n            }\n        };\n        events.listen(\"oscilloscopeUpdate\", this._EventUpdateCanvas);\n    }\n}\n//# sourceMappingURL=Oscilloscope.js.map"],"mappings":"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U,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,MAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,MAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,OAAS,OAAS,OAAS,OAAS,QAAU,QAAU,QAAU,OAAU,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,GAAU,OAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,MAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,MAAS,MAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,IAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,IAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAS,OAAS,MAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,KAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,MAAS,MAAS,OAAS,QAAU,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,OAAU,QAAU,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,OAAS,OAAS,OAAS,MAAS,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,MAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,MAAS,OAAS,MAAS,OAAS,MAAS,OAAS,MAAS,MAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAS,OAAS,OAAS,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,OAAU,QAAU,OAAS,EAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,OAAU,QAAU,QAAU,QAAU,QAAU,QAAU,MAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,MAAS,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,OAAS,OAAS,MAAS,OAAS,OAAS,MAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,OAAS,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAA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I,KAAO,CAAE2E,eAAkB,UAAW3E,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAE2E,eAAkB,UAAW3E,SAAY,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAE2E,eAAkB,UAAW3E,SAAY,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAE2E,eAAkB,UAAW3E,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAE2E,eAAkB,UAAW3E,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAE2E,eAAkB,UAAW3E,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAE2E,eAAkB,UAAW3E,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAA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,uBACA,yBACA,uBACA,yBACA,2BACA,6BACA,6BACA,2BACA,0BACA,uCACA,6BACA,gCACA,+BACA,0BACA,qBACA,0BACA,yBACA,wBACA,0BACA,mCACA,wCACA,kCACA,wCACA,kCACA,2BACA,4BACA,4BACA,4BACA,2BACA,4BACA,wCACA,yCACA,+BACA,8BACA,qCACA,0CACA,mCACA,uCACA,oCACA,4BACA,kCACA,4BAEEC,EAAW,CACb,oBACA,qBACA,sBACA,mBACA,yBACA,uBACA,yBACA,4BACA,gCACA,qBACA,2BACA,uBACA,qBACA,+BACA,qBACA,6BACA,8BACA,0BACA,gCACA,+BACA,oBACA,6BACA,4BACA,6BACA,2BACA,yBACA,yBACA,2BACA,uBACA,yBACA,uBACA,yBACA,2BACA,6BACA,6BACA,2BACA,0BACA,uCACA,6BACA,gCACA,+BACA,0BACA,qBACA,0BACA,yBACA,wBACA,0BACA,mCACA,wCACA,kCACA,wCACA,kCACA,2BACA,4BACA,4BACA,4BACA,2BACA,4BACA,wCACA,yCACA,+BACA,8BACA,qCACA,0CACA,mCACA,uCACA,oCACA,4BACA,kCACA,4BAEEC,EAAe,CACjB,OACA,QACA,SACA,MACA,YACA,UACA,YACA,eACA,mBACA,QACA,cACA,UACA,QACA,kBACA,QACA,gBACA,iBACA,aACA,mBACA,kBACA,OACA,gBACA,eACA,gBACA,cACA,YACA,YACA,cACA,UACA,YACA,UACA,YACA,eAEAF,EAAMG,SAASJ,GACfF,GAA0B,EAErBI,EAASE,SAASJ,IACvBF,GAA0B,EAC1BrjB,EAAuB,KAAIwjB,EAAMC,EAAS1hB,UAAUx3B,GAAKA,IAAMg5C,KAE1DG,EAAaC,SAASJ,KACT,YAAbA,GAAuC,UAAbA,GAAoC,gBAAV52B,KAGrD02B,GAA0B,EAC1BrjB,EAAuB,KAAIwjB,EAAME,EAAa3hB,UAAUx3B,GAAKA,IAAMg5C,IAGvG,CACA,CACA,CAEgBF,GACAhwD,EAAO8B,4BAA6B,EACpCu6C,GAAK+J,IACL7jD,EAAmB,GACnByzC,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","ignoreList":[]}